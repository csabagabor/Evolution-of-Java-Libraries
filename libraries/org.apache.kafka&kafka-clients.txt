
+###org/apache/kafka/clients/admin/AbstractOptions
@1.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;
+#timeoutMs()Ljava/lang/Integer;

+###org/apache/kafka/clients/admin/AdminClient
@0.11.0.0
+#<init>()V
+#create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/AdminClient;
+#create(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AdminClient;
+#close()V
+#close(JLjava/util/concurrent/TimeUnit;)V
+#createTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
+#createTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateTopicsOptions;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
+#deleteTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#deleteTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#listTopics()Lorg/apache/kafka/clients/admin/ListTopicsResult;
+#listTopics(Lorg/apache/kafka/clients/admin/ListTopicsOptions;)Lorg/apache/kafka/clients/admin/ListTopicsResult;
+#describeTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
+#describeTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
+#describeCluster()Lorg/apache/kafka/clients/admin/DescribeClusterResult;
+#describeCluster(Lorg/apache/kafka/clients/admin/DescribeClusterOptions;)Lorg/apache/kafka/clients/admin/DescribeClusterResult;
+#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
+#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;Lorg/apache/kafka/clients/admin/DescribeAclsOptions;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
+#createAcls(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
+#createAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateAclsOptions;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
+#deleteAcls(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
+#deleteAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteAclsOptions;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
+#describeConfigs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
+#describeConfigs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
+#alterConfigs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
+#alterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
@1.0.0
+#alterReplicaLogDirs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
+#alterReplicaLogDirs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
+#describeLogDirs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
+#describeLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
+#describeReplicaLogDirs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
+#describeReplicaLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
+#createPartitions(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
+#createPartitions(Ljava/util/Map;Lorg/apache/kafka/clients/admin/CreatePartitionsOptions;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
@1.1.0
+#deleteRecords(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
+#deleteRecords(Ljava/util/Map;Lorg/apache/kafka/clients/admin/DeleteRecordsOptions;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
@2.0.0
+#createDelegationToken()Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
+#createDelegationToken(Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
+#renewDelegationToken([B)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
+#renewDelegationToken([BLorg/apache/kafka/clients/admin/RenewDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
+#expireDelegationToken([B)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
+#expireDelegationToken([BLorg/apache/kafka/clients/admin/ExpireDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
+#describeDelegationToken()Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
+#describeDelegationToken(Lorg/apache/kafka/clients/admin/DescribeDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
+#describeConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
+#describeConsumerGroups(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
+#listConsumerGroups(Lorg/apache/kafka/clients/admin/ListConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
+#listConsumerGroups()Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
+#listConsumerGroupOffsets(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#listConsumerGroupOffsets(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#deleteConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
+#deleteConsumerGroups(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
@2.1.0
+#metrics()Ljava/util/Map;
@2.2.0
*#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#close(Ljava/time/Duration;)V
+#electPreferredLeaders(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;
+#electPreferredLeaders(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/ElectPreferredLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;
@2.3.0
*#alterConfigs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
*#alterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
+#incrementalAlterConfigs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
+#incrementalAlterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
@2.4.0
-#close()V
-#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
-#close(Ljava/time/Duration;)V
-#createTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
-#createTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateTopicsOptions;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
-#deleteTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
-#deleteTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
-#listTopics()Lorg/apache/kafka/clients/admin/ListTopicsResult;
-#listTopics(Lorg/apache/kafka/clients/admin/ListTopicsOptions;)Lorg/apache/kafka/clients/admin/ListTopicsResult;
-#describeTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
-#describeTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
-#describeCluster()Lorg/apache/kafka/clients/admin/DescribeClusterResult;
-#describeCluster(Lorg/apache/kafka/clients/admin/DescribeClusterOptions;)Lorg/apache/kafka/clients/admin/DescribeClusterResult;
-#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
-#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;Lorg/apache/kafka/clients/admin/DescribeAclsOptions;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
-#createAcls(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
-#createAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateAclsOptions;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
-#deleteAcls(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
-#deleteAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteAclsOptions;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
-#describeConfigs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
-#describeConfigs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
-#alterConfigs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
-#alterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
-#incrementalAlterConfigs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
-#incrementalAlterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
-#alterReplicaLogDirs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
-#alterReplicaLogDirs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
-#describeLogDirs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
-#describeLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
-#describeReplicaLogDirs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
-#describeReplicaLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
-#createPartitions(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
-#createPartitions(Ljava/util/Map;Lorg/apache/kafka/clients/admin/CreatePartitionsOptions;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
-#deleteRecords(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
-#deleteRecords(Ljava/util/Map;Lorg/apache/kafka/clients/admin/DeleteRecordsOptions;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
-#createDelegationToken()Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
-#createDelegationToken(Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
-#renewDelegationToken([B)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
-#renewDelegationToken([BLorg/apache/kafka/clients/admin/RenewDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
-#expireDelegationToken([B)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
-#expireDelegationToken([BLorg/apache/kafka/clients/admin/ExpireDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
-#describeDelegationToken()Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
-#describeDelegationToken(Lorg/apache/kafka/clients/admin/DescribeDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
-#describeConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
-#describeConsumerGroups(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
-#listConsumerGroups(Lorg/apache/kafka/clients/admin/ListConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
-#listConsumerGroups()Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
-#listConsumerGroupOffsets(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
-#listConsumerGroupOffsets(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
-#deleteConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
-#deleteConsumerGroups(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
-#electPreferredLeaders(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;
-#electPreferredLeaders(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/ElectPreferredLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;
-#metrics()Ljava/util/Map;

+###org/apache/kafka/clients/admin/AdminClientConfig
@0.11.0.0
+#<init>(Ljava/util/Map;)V
+#configNames()Ljava/util/Set;
+#main([Ljava/lang/String;)V
@2.3.0
+#configDef()Lorg/apache/kafka/common/config/ConfigDef;

+###org/apache/kafka/clients/admin/AlterConfigsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AlterConfigsOptions;
+#timeoutMs()Ljava/lang/Integer;
+#shouldValidateOnly()Z
+#validateOnly(Z)Lorg/apache/kafka/clients/admin/AlterConfigsOptions;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AlterConfigsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AlterConfigsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;

+###org/apache/kafka/clients/admin/AlterConfigsResult
@0.11.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/AlterReplicaLogDirsOptions
@1.0.0
+#<init>()V

+###org/apache/kafka/clients/admin/AlterReplicaLogDirsResult
@1.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/Config
@0.11.0.0
+#<init>(Ljava/util/Collection;)V
+#entries()Ljava/util/Collection;
+#get(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ConfigEntry;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ConfigEntry
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ZZZ)V
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#isDefault()Z
+#isSensitive()Z
+#isReadOnly()Z
@0.11.0.1
+#toString()Ljava/lang/String;
@1.1.0
+#source()Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;
+#synonyms()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.2.0
*#<init>(Ljava/lang/String;Ljava/lang/String;ZZZ)V[deprecated]
@2.6.0
+#type()Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigType;
+#documentation()Ljava/lang/String;
@3.0.0
-#<init>(Ljava/lang/String;Ljava/lang/String;ZZZ)V[deprecated]
@3.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;ZZLjava/util/List;Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigType;Ljava/lang/String;)V

+###org/apache/kafka/clients/admin/CreateAclsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/CreateAclsOptions;
+#timeoutMs()Ljava/lang/Integer;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/CreateAclsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/CreateAclsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;

+###org/apache/kafka/clients/admin/CreateAclsResult
@0.11.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/CreatePartitionsOptions
@1.0.0
+#<init>()V
+#validateOnly()Z
+#validateOnly(Z)Lorg/apache/kafka/clients/admin/CreatePartitionsOptions;
@2.7.0
+#retryOnQuotaViolation(Z)Lorg/apache/kafka/clients/admin/CreatePartitionsOptions;
+#shouldRetryOnQuotaViolation()Z

+###org/apache/kafka/clients/admin/CreatePartitionsResult
@1.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/CreateTopicsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/CreateTopicsOptions;
+#timeoutMs()Ljava/lang/Integer;
+#validateOnly(Z)Lorg/apache/kafka/clients/admin/CreateTopicsOptions;
+#shouldValidateOnly()Z
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/CreateTopicsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/CreateTopicsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;
@2.7.0
+#retryOnQuotaViolation(Z)Lorg/apache/kafka/clients/admin/CreateTopicsOptions;
+#shouldRetryOnQuotaViolation()Z

+###org/apache/kafka/clients/admin/CreateTopicsResult
@0.11.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;
@2.4.0
+#config(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
+#numPartitions(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
+#replicationFactor(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
@2.8.0
+#topicId(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DeleteAclsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DeleteAclsOptions;
+#timeoutMs()Ljava/lang/Integer;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DeleteAclsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DeleteAclsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;

+###org/apache/kafka/clients/admin/DeleteAclsResult$FilterResult
@0.11.0.0
+#binding()Lorg/apache/kafka/common/acl/AclBinding;
+#exception()Lorg/apache/kafka/common/errors/ApiException;

+###org/apache/kafka/clients/admin/DeleteAclsResult$FilterResults
@0.11.0.0
+#values()Ljava/util/List;

+###org/apache/kafka/clients/admin/DeleteAclsResult
@0.11.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DeleteTopicsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;
+#timeoutMs()Ljava/lang/Integer;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;
@2.7.0
+#retryOnQuotaViolation(Z)Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;
+#shouldRetryOnQuotaViolation()Z

+###org/apache/kafka/clients/admin/DeleteTopicsResult
@0.11.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;
@3.0.0
+#topicIdValues()Ljava/util/Map;
+#topicNameValues()Ljava/util/Map;
*#values()Ljava/util/Map;[deprecated]

+###org/apache/kafka/clients/admin/DescribeAclsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeAclsOptions;
+#timeoutMs()Ljava/lang/Integer;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeAclsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeAclsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;

+###org/apache/kafka/clients/admin/DescribeAclsResult
@0.11.0.0
+#values()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeClusterOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeClusterOptions;
+#timeoutMs()Ljava/lang/Integer;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeClusterOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeClusterOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;
@2.3.0
+#includeAuthorizedOperations(Z)Lorg/apache/kafka/clients/admin/DescribeClusterOptions;
+#includeAuthorizedOperations()Z

+###org/apache/kafka/clients/admin/DescribeClusterResult
@0.11.0.0
+#nodes()Lorg/apache/kafka/common/KafkaFuture;
+#controller()Lorg/apache/kafka/common/KafkaFuture;
+#clusterId()Lorg/apache/kafka/common/KafkaFuture;
@2.3.0
+#authorizedOperations()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeConfigsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;
+#timeoutMs()Ljava/lang/Integer;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;
@1.1.0
+#includeSynonyms()Z
+#includeSynonyms(Z)Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;
@2.6.0
+#includeDocumentation()Z
+#includeDocumentation(Z)Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;

+###org/apache/kafka/clients/admin/DescribeConfigsResult
@0.11.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeLogDirsOptions
@1.0.0
+#<init>()V

+###org/apache/kafka/clients/admin/DescribeLogDirsResult
@1.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;
@2.7.0
*#values()Ljava/util/Map;[deprecated]
+#descriptions()Ljava/util/Map;
*#all()Lorg/apache/kafka/common/KafkaFuture;[deprecated]
+#allDescriptions()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeReplicaLogDirsOptions
@1.0.0
+#<init>()V

+###org/apache/kafka/clients/admin/DescribeReplicaLogDirsResult$ReplicaLogDirInfo
@1.0.0
+#getCurrentReplicaLogDir()Ljava/lang/String;
+#getCurrentReplicaOffsetLag()J
+#getFutureReplicaLogDir()Ljava/lang/String;
+#getFutureReplicaOffsetLag()J
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/DescribeReplicaLogDirsResult
@1.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeTopicsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;
+#timeoutMs()Ljava/lang/Integer;
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;
@2.3.0
+#includeAuthorizedOperations(Z)Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;
+#includeAuthorizedOperations()Z

+###org/apache/kafka/clients/admin/DescribeTopicsResult
@0.11.0.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;
@3.1.0
+#topicIdValues()Ljava/util/Map;
+#topicNameValues()Ljava/util/Map;
*#values()Ljava/util/Map;[deprecated]
*#all()Lorg/apache/kafka/common/KafkaFuture;[deprecated]
+#allTopicNames()Lorg/apache/kafka/common/KafkaFuture;
+#allTopicIds()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/KafkaAdminClient
@0.11.0.0
+#close(JLjava/util/concurrent/TimeUnit;)V
+#createTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateTopicsOptions;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
+#deleteTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#listTopics(Lorg/apache/kafka/clients/admin/ListTopicsOptions;)Lorg/apache/kafka/clients/admin/ListTopicsResult;
+#describeTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
+#describeCluster(Lorg/apache/kafka/clients/admin/DescribeClusterOptions;)Lorg/apache/kafka/clients/admin/DescribeClusterResult;
+#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;Lorg/apache/kafka/clients/admin/DescribeAclsOptions;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
+#createAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateAclsOptions;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
+#deleteAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteAclsOptions;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
+#describeConfigs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
+#alterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
@1.0.0
+#alterReplicaLogDirs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
+#describeLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
+#describeReplicaLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
+#createPartitions(Ljava/util/Map;Lorg/apache/kafka/clients/admin/CreatePartitionsOptions;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
@1.1.0
+#deleteRecords(Ljava/util/Map;Lorg/apache/kafka/clients/admin/DeleteRecordsOptions;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
@2.0.0
+#createDelegationToken(Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
+#renewDelegationToken([BLorg/apache/kafka/clients/admin/RenewDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
+#expireDelegationToken([BLorg/apache/kafka/clients/admin/ExpireDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
+#describeDelegationToken(Lorg/apache/kafka/clients/admin/DescribeDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
+#describeConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
+#listConsumerGroups(Lorg/apache/kafka/clients/admin/ListConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
+#listConsumerGroupOffsets(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#deleteConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
@2.1.0
+#metrics()Ljava/util/Map;
@2.2.0
+#close(Ljava/time/Duration;)V
+#electPreferredLeaders(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/ElectPreferredLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;
-#close(JLjava/util/concurrent/TimeUnit;)V
@2.3.0
*#alterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
+#incrementalAlterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
@2.4.0
+#deleteConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Set;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsResult;
+#electLeaders(Lorg/apache/kafka/common/ElectionType;Ljava/util/Set;Lorg/apache/kafka/clients/admin/ElectLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectLeadersResult;
+#alterPartitionReassignments(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/AlterPartitionReassignmentsResult;
+#listPartitionReassignments(Ljava/util/Optional;Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsResult;
+#removeMembersFromConsumerGroup(Ljava/lang/String;Lorg/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupOptions;)Lorg/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupResult;
-#electPreferredLeaders(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/ElectPreferredLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;
@2.5.0
+#alterConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/AlterConsumerGroupOffsetsResult;
+#listOffsets(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ListOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListOffsetsResult;
@2.6.0
+#describeClientQuotas(Lorg/apache/kafka/common/quota/ClientQuotaFilter;Lorg/apache/kafka/clients/admin/DescribeClientQuotasOptions;)Lorg/apache/kafka/clients/admin/DescribeClientQuotasResult;
+#alterClientQuotas(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/AlterClientQuotasOptions;)Lorg/apache/kafka/clients/admin/AlterClientQuotasResult;
@2.7.0
+#describeUserScramCredentials(Ljava/util/List;Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsOptions;)Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsResult;
+#alterUserScramCredentials(Ljava/util/List;Lorg/apache/kafka/clients/admin/AlterUserScramCredentialsOptions;)Lorg/apache/kafka/clients/admin/AlterUserScramCredentialsResult;
+#describeFeatures(Lorg/apache/kafka/clients/admin/DescribeFeaturesOptions;)Lorg/apache/kafka/clients/admin/DescribeFeaturesResult;
+#updateFeatures(Ljava/util/Map;Lorg/apache/kafka/clients/admin/UpdateFeaturesOptions;)Lorg/apache/kafka/clients/admin/UpdateFeaturesResult;
@2.8.0
+#unregisterBroker(ILorg/apache/kafka/clients/admin/UnregisterBrokerOptions;)Lorg/apache/kafka/clients/admin/UnregisterBrokerResult;
@3.0.0
+#deleteTopics(Lorg/apache/kafka/common/TopicCollection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#describeProducers(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeProducersOptions;)Lorg/apache/kafka/clients/admin/DescribeProducersResult;
+#describeTransactions(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTransactionsOptions;)Lorg/apache/kafka/clients/admin/DescribeTransactionsResult;
+#abortTransaction(Lorg/apache/kafka/clients/admin/AbortTransactionSpec;Lorg/apache/kafka/clients/admin/AbortTransactionOptions;)Lorg/apache/kafka/clients/admin/AbortTransactionResult;
+#listTransactions(Lorg/apache/kafka/clients/admin/ListTransactionsOptions;)Lorg/apache/kafka/clients/admin/ListTransactionsResult;
-#deleteTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
@3.1.0
+#describeTopics(Lorg/apache/kafka/common/TopicCollection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
-#describeTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
@3.2.0
+#fenceProducers(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/FenceProducersOptions;)Lorg/apache/kafka/clients/admin/FenceProducersResult;
@3.3.0
+#listConsumerGroupOffsets(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#describeMetadataQuorum(Lorg/apache/kafka/clients/admin/DescribeMetadataQuorumOptions;)Lorg/apache/kafka/clients/admin/DescribeMetadataQuorumResult;
-#listConsumerGroupOffsets(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;

+###org/apache/kafka/clients/admin/ListTopicsOptions
@0.11.0.0
+#<init>()V
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/ListTopicsOptions;
+#timeoutMs()Ljava/lang/Integer;
+#listInternal(Z)Lorg/apache/kafka/clients/admin/ListTopicsOptions;
+#shouldListInternal()Z
@1.0.0
-#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/ListTopicsOptions;
-#timeoutMs()Ljava/lang/Integer;
@1.0.1
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/ListTopicsOptions;
+#timeoutMs(Ljava/lang/Integer;)Lorg/apache/kafka/clients/admin/AbstractOptions;
@3.0.1
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/clients/admin/ListTopicsResult
@0.11.0.0
+#namesToListings()Lorg/apache/kafka/common/KafkaFuture;
+#listings()Lorg/apache/kafka/common/KafkaFuture;
+#names()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/NewPartitions
@1.0.0
+#increaseTo(I)Lorg/apache/kafka/clients/admin/NewPartitions;
+#increaseTo(ILjava/util/List;)Lorg/apache/kafka/clients/admin/NewPartitions;
+#totalCount()I
+#assignments()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/NewTopic
@0.11.0.0
+#<init>(Ljava/lang/String;IS)V
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#name()Ljava/lang/String;
+#numPartitions()I
+#replicationFactor()S
+#replicasAssignments()Ljava/util/Map;
+#configs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/NewTopic;
+#toString()Ljava/lang/String;
@1.1.0
+#configs()Ljava/util/Map;
@2.4.0
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)V
@2.5.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/clients/admin/TopicDescription
@0.11.0.0
+#<init>(Ljava/lang/String;ZLjava/util/List;)V
+#name()Ljava/lang/String;
+#isInternal()Z
+#partitions()Ljava/util/List;
+#toString()Ljava/lang/String;
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
+#authorizedOperations()Ljava/util/Set;
@2.4.0
+#<init>(Ljava/lang/String;ZLjava/util/List;Ljava/util/Set;)V
@2.8.0
+#<init>(Ljava/lang/String;ZLjava/util/List;Ljava/util/Set;Lorg/apache/kafka/common/Uuid;)V
+#topicId()Lorg/apache/kafka/common/Uuid;

+###org/apache/kafka/clients/admin/TopicListing
@0.11.0.0
+#<init>(Ljava/lang/String;Z)V
+#name()Ljava/lang/String;
+#isInternal()Z
+#toString()Ljava/lang/String;
@3.1.0
*#<init>(Ljava/lang/String;Z)V[deprecated]
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/Uuid;Z)V
+#topicId()Lorg/apache/kafka/common/Uuid;

+###org/apache/kafka/clients/ApiVersions
@0.11.0.0
+#<init>()V
+#update(Ljava/lang/String;Lorg/apache/kafka/clients/NodeApiVersions;)V
+#remove(Ljava/lang/String;)V
+#get(Ljava/lang/String;)Lorg/apache/kafka/clients/NodeApiVersions;
+#maxUsableProduceMagic()B

+###org/apache/kafka/clients/ClientRequest
@0.8.2-beta
+#<init>(JZLorg/apache/kafka/common/requests/RequestSend;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#expectResponse()Z
+#request()Lorg/apache/kafka/common/requests/RequestSend;
+#attachment()Ljava/lang/Object;
+#createdTime()J
@0.9.0.0
+#<init>(JZLorg/apache/kafka/common/requests/RequestSend;Lorg/apache/kafka/clients/RequestCompletionHandler;)V
+#<init>(JZLorg/apache/kafka/common/requests/RequestSend;Lorg/apache/kafka/clients/RequestCompletionHandler;Z)V
+#hasCallback()Z
+#callback()Lorg/apache/kafka/clients/RequestCompletionHandler;
+#createdTimeMs()J
+#isInitiatedByNetworkClient()Z
+#sendTimeMs()J
+#setSendTimeMs(J)V
-#<init>(JZLorg/apache/kafka/common/requests/RequestSend;Ljava/lang/Object;)V
-#attachment()Ljava/lang/Object;
-#createdTime()J
@0.10.2.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;ILjava/lang/String;JZLorg/apache/kafka/clients/RequestCompletionHandler;)V
+#apiKey()Lorg/apache/kafka/common/protocol/ApiKeys;
+#makeHeader()Lorg/apache/kafka/common/requests/RequestHeader;
+#requestBuilder()Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#destination()Ljava/lang/String;
+#correlationId()I
-#<init>(JZLorg/apache/kafka/common/requests/RequestSend;Lorg/apache/kafka/clients/RequestCompletionHandler;)V
-#<init>(JZLorg/apache/kafka/common/requests/RequestSend;Lorg/apache/kafka/clients/RequestCompletionHandler;Z)V
-#request()Lorg/apache/kafka/common/requests/RequestSend;
-#hasCallback()Z
-#isInitiatedByNetworkClient()Z
-#sendTimeMs()J
-#setSendTimeMs(J)V
@0.11.0.0
+#makeHeader(S)Lorg/apache/kafka/common/requests/RequestHeader;
-#makeHeader()Lorg/apache/kafka/common/requests/RequestHeader;
@2.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;ILjava/lang/String;JZILorg/apache/kafka/clients/RequestCompletionHandler;)V
+#requestTimeoutMs()I
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;ILjava/lang/String;JZLorg/apache/kafka/clients/RequestCompletionHandler;)V

+###org/apache/kafka/clients/ClientResponse
@0.8.2-beta
+#<init>(Lorg/apache/kafka/clients/ClientRequest;JZLorg/apache/kafka/common/protocol/types/Struct;)V
+#receivedTime()J
+#wasDisconnected()Z
+#request()Lorg/apache/kafka/clients/ClientRequest;
+#responseBody()Lorg/apache/kafka/common/protocol/types/Struct;
+#hasResponse()Z
+#requestLatencyMs()J
+#toString()Ljava/lang/String;
@0.9.0.0
+#receivedTimeMs()J
-#receivedTime()J
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/clients/RequestCompletionHandler;Ljava/lang/String;JJZLjava/lang/RuntimeException;Lorg/apache/kafka/common/requests/AbstractResponse;)V
+#versionMismatch()Ljava/lang/RuntimeException;
+#requestHeader()Lorg/apache/kafka/common/requests/RequestHeader;
+#destination()Ljava/lang/String;
+#responseBody()Lorg/apache/kafka/common/requests/AbstractResponse;
+#onComplete()V
-#<init>(Lorg/apache/kafka/clients/ClientRequest;JZLorg/apache/kafka/common/protocol/types/Struct;)V
-#request()Lorg/apache/kafka/clients/ClientRequest;
-#responseBody()Lorg/apache/kafka/common/protocol/types/Struct;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/clients/RequestCompletionHandler;Ljava/lang/String;JJZLorg/apache/kafka/common/errors/UnsupportedVersionException;Lorg/apache/kafka/common/requests/AbstractResponse;)V
+#versionMismatch()Lorg/apache/kafka/common/errors/UnsupportedVersionException;
-#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/clients/RequestCompletionHandler;Ljava/lang/String;JJZLjava/lang/RuntimeException;Lorg/apache/kafka/common/requests/AbstractResponse;)V
-#versionMismatch()Ljava/lang/RuntimeException;
@2.0.0
+#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/clients/RequestCompletionHandler;Ljava/lang/String;JJZLorg/apache/kafka/common/errors/UnsupportedVersionException;Lorg/apache/kafka/common/errors/AuthenticationException;Lorg/apache/kafka/common/requests/AbstractResponse;)V
+#authenticationException()Lorg/apache/kafka/common/errors/AuthenticationException;
-#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/clients/RequestCompletionHandler;Ljava/lang/String;JJZLorg/apache/kafka/common/errors/UnsupportedVersionException;Lorg/apache/kafka/common/requests/AbstractResponse;)V

+###org/apache/kafka/clients/ClientUtils
@0.9.0.0
+#<init>()V
+#parseAndValidateAddresses(Ljava/util/List;)Ljava/util/List;
+#closeQuietly(Ljava/io/Closeable;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;)V
+#createChannelBuilder(Ljava/util/Map;)Lorg/apache/kafka/common/network/ChannelBuilder;
@0.11.0.0
+#createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#createChannelBuilder(Ljava/util/Map;)Lorg/apache/kafka/common/network/ChannelBuilder;
@1.1.0
-#<init>()V
@2.1.0
+#parseAndValidateAddresses(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
-#parseAndValidateAddresses(Ljava/util/List;)Ljava/util/List;
@2.2.0
+#parseAndValidateAddresses(Ljava/util/List;Lorg/apache/kafka/clients/ClientDnsLookup;)Ljava/util/List;
+#createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;)Lorg/apache/kafka/common/network/ChannelBuilder;
@2.2.1
-#closeQuietly(Ljava/io/Closeable;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;)V
@2.5.0
+#createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#createChannelBuilder(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;

+###org/apache/kafka/clients/CommonClientConfigs
@0.9.0.0
+#<init>()V
@0.11.0.0
+#postProcessReconnectBackoffConfigs(Lorg/apache/kafka/common/config/AbstractConfig;Ljava/util/Map;)Ljava/util/Map;
@2.6.0
+#warnIfDeprecatedDnsLookupValue(Lorg/apache/kafka/common/config/AbstractConfig;)V
@3.0.0
-#warnIfDeprecatedDnsLookupValue(Lorg/apache/kafka/common/config/AbstractConfig;)V
@3.3.0
+#postValidateSaslMechanismConfig(Lorg/apache/kafka/common/config/AbstractConfig;)V
@3.4.0
+#metricsReporters(Lorg/apache/kafka/common/config/AbstractConfig;)Ljava/util/List;
+#metricsReporters(Ljava/lang/String;Lorg/apache/kafka/common/config/AbstractConfig;)Ljava/util/List;
+#metricsReporters(Ljava/util/Map;Lorg/apache/kafka/common/config/AbstractConfig;)Ljava/util/List;

+###org/apache/kafka/clients/ConnectionState
@0.9.0.0
+#values()[Lorg/apache/kafka/clients/ConnectionState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/ConnectionState;
@1.0.0
+#isDisconnected()Z
@2.0.0
+#isConnected()Z

+###org/apache/kafka/clients/consumer/CommitFailedException
@0.9.0.0
+#<init>(Ljava/lang/String;)V
@0.10.1.0
+#<init>()V
-#<init>(Ljava/lang/String;)V
@2.5.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/clients/consumer/Consumer
@0.8.2-beta
+#subscribe([Ljava/lang/String;)V
+#subscribe([Lorg/apache/kafka/common/TopicPartition;)V
+#unsubscribe([Ljava/lang/String;)V
+#unsubscribe([Lorg/apache/kafka/common/TopicPartition;)V
+#poll(J)Ljava/util/Map;
+#commit(Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
+#commit(Ljava/util/Map;Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
+#seek(Ljava/util/Map;)V
+#position(Ljava/util/Collection;)Ljava/util/Map;
+#committed(Ljava/util/Collection;)Ljava/util/Map;
+#offsetsBeforeTime(JLjava/util/Collection;)Ljava/util/Map;
+#metrics()Ljava/util/Map;
+#close()V
@0.9.0.0
+#assignment()Ljava/util/Set;
+#subscription()Ljava/util/Set;
+#subscribe(Ljava/util/List;)V
+#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#assign(Ljava/util/List;)V
+#subscribe(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#unsubscribe()V
+#poll(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#commitSync()V
+#commitSync(Ljava/util/Map;)V
+#commitAsync()V
+#commitAsync(Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#commitAsync(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#seek(Lorg/apache/kafka/common/TopicPartition;J)V
+#seekToBeginning([Lorg/apache/kafka/common/TopicPartition;)V
+#seekToEnd([Lorg/apache/kafka/common/TopicPartition;)V
+#position(Lorg/apache/kafka/common/TopicPartition;)J
+#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
+#partitionsFor(Ljava/lang/String;)Ljava/util/List;
+#listTopics()Ljava/util/Map;
+#pause([Lorg/apache/kafka/common/TopicPartition;)V
+#resume([Lorg/apache/kafka/common/TopicPartition;)V
+#wakeup()V
-#subscribe([Ljava/lang/String;)V
-#subscribe([Lorg/apache/kafka/common/TopicPartition;)V
-#unsubscribe([Ljava/lang/String;)V
-#unsubscribe([Lorg/apache/kafka/common/TopicPartition;)V
-#poll(J)Ljava/util/Map;
-#commit(Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
-#commit(Ljava/util/Map;Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
-#seek(Ljava/util/Map;)V
-#position(Ljava/util/Collection;)Ljava/util/Map;
-#committed(Ljava/util/Collection;)Ljava/util/Map;
-#offsetsBeforeTime(JLjava/util/Collection;)Ljava/util/Map;
@0.10.0.0
+#subscribe(Ljava/util/Collection;)V
+#subscribe(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#assign(Ljava/util/Collection;)V
+#seekToBeginning(Ljava/util/Collection;)V
+#seekToEnd(Ljava/util/Collection;)V
+#paused()Ljava/util/Set;
+#pause(Ljava/util/Collection;)V
+#resume(Ljava/util/Collection;)V
-#subscribe(Ljava/util/List;)V
-#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
-#assign(Ljava/util/List;)V
-#seekToBeginning([Lorg/apache/kafka/common/TopicPartition;)V
-#seekToEnd([Lorg/apache/kafka/common/TopicPartition;)V
-#pause([Lorg/apache/kafka/common/TopicPartition;)V
-#resume([Lorg/apache/kafka/common/TopicPartition;)V
@0.10.1.0
+#offsetsForTimes(Ljava/util/Map;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;)Ljava/util/Map;
@0.10.2.0
+#close(JLjava/util/concurrent/TimeUnit;)V
@1.0.0
+#subscribe(Ljava/util/regex/Pattern;)V
@2.0.0
*#poll(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;[deprecated]
+#poll(Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#commitSync(Ljava/time/Duration;)V
+#commitSync(Ljava/util/Map;Ljava/time/Duration;)V
+#position(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)J
+#committed(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
+#partitionsFor(Ljava/lang/String;Ljava/time/Duration;)Ljava/util/List;
+#listTopics(Ljava/time/Duration;)Ljava/util/Map;
+#offsetsForTimes(Ljava/util/Map;Ljava/time/Duration;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
*#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#close(Ljava/time/Duration;)V
@2.2.0
+#seek(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;)V
@2.4.0
*#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
*#committed(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
+#committed(Ljava/util/Set;)Ljava/util/Map;
+#committed(Ljava/util/Set;Ljava/time/Duration;)Ljava/util/Map;
@2.5.0
+#groupMetadata()Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;
@2.6.0
+#enforceRebalance()V
@3.0.0
+#currentLag(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/OptionalLong;
-#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
@3.2.0
+#enforceRebalance(Ljava/lang/String;)V

+###org/apache/kafka/clients/consumer/ConsumerConfig
@0.8.2-beta
@0.9.0.0
+#addDeserializerToConfig(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Ljava/util/Map;
+#addDeserializerToConfig(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Ljava/util/Properties;
+#main([Ljava/lang/String;)V
@0.10.1.0
+#configNames()Ljava/util/Set;
@1.1.0
+#<init>(Ljava/util/Properties;)V
+#<init>(Ljava/util/Map;)V
@2.3.0
+#configDef()Lorg/apache/kafka/common/config/ConfigDef;
@2.7.0
*#addDeserializerToConfig(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Ljava/util/Map;[deprecated]
*#addDeserializerToConfig(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Ljava/util/Properties;[deprecated]
@3.0.0
-#addDeserializerToConfig(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Ljava/util/Map;[deprecated]
-#addDeserializerToConfig(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)Ljava/util/Properties;[deprecated]

+###org/apache/kafka/clients/consumer/ConsumerInterceptor
@0.10.0.0
+#onConsume(Lorg/apache/kafka/clients/consumer/ConsumerRecords;)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#onCommit(Ljava/util/Map;)V
+#close()V

+###org/apache/kafka/clients/consumer/ConsumerRebalanceListener
@0.9.0.0
+#onPartitionsRevoked(Ljava/util/Collection;)V
+#onPartitionsAssigned(Ljava/util/Collection;)V
@2.4.0
+#onPartitionsLost(Ljava/util/Collection;)V

+###org/apache/kafka/clients/consumer/ConsumerRecord
@0.8.2-beta
+#<init>(Ljava/lang/String;I[B[BJ)V
+#<init>(Ljava/lang/String;I[BJ)V
+#<init>(Ljava/lang/String;ILjava/lang/Exception;)V
+#topic()Ljava/lang/String;
+#partition()I
+#topicAndPartition()Lorg/apache/kafka/common/TopicPartition;
+#key()[B
+#value()[B
+#offset()J
+#error()Ljava/lang/Exception;
@0.8.2.0
+#<init>(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;J)V
+#<init>(Ljava/lang/String;ILjava/lang/Object;J)V
+#key()Ljava/lang/Object;
+#value()Ljava/lang/Object;
-#<init>(Ljava/lang/String;I[B[BJ)V
-#<init>(Ljava/lang/String;I[BJ)V
-#key()[B
-#value()[B
@0.9.0.0
+#<init>(Ljava/lang/String;IJLjava/lang/Object;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
-#<init>(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;J)V
-#<init>(Ljava/lang/String;ILjava/lang/Object;J)V
-#<init>(Ljava/lang/String;ILjava/lang/Exception;)V
-#topicAndPartition()Lorg/apache/kafka/common/TopicPartition;
-#error()Ljava/lang/Exception;
@0.10.0.0
+#<init>(Ljava/lang/String;IJJLorg/apache/kafka/common/record/TimestampType;JIILjava/lang/Object;Ljava/lang/Object;)V
+#timestamp()J
+#timestampType()Lorg/apache/kafka/common/record/TimestampType;
+#checksum()J
+#serializedKeySize()I
+#serializedValueSize()I
@0.11.0.0
+#<init>(Ljava/lang/String;IJJLorg/apache/kafka/common/record/TimestampType;Ljava/lang/Long;IILjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;)V
+#headers()Lorg/apache/kafka/common/header/Headers;
*#checksum()J[deprecated]
@2.1.0
+#<init>(Ljava/lang/String;IJJLorg/apache/kafka/common/record/TimestampType;Ljava/lang/Long;IILjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/util/Optional;)V
+#leaderEpoch()Ljava/util/Optional;
@3.0.0
+#<init>(Ljava/lang/String;IJJLorg/apache/kafka/common/record/TimestampType;IILjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/util/Optional;)V
*#<init>(Ljava/lang/String;IJJLorg/apache/kafka/common/record/TimestampType;JIILjava/lang/Object;Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;IJJLorg/apache/kafka/common/record/TimestampType;Ljava/lang/Long;IILjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;)V[deprecated]
*#<init>(Ljava/lang/String;IJJLorg/apache/kafka/common/record/TimestampType;Ljava/lang/Long;IILjava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/util/Optional;)V[deprecated]
-#checksum()J[deprecated]

+###org/apache/kafka/clients/consumer/ConsumerRecords
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#records([I)Ljava/util/List;
+#topic()Ljava/lang/String;
@0.9.0.0
+#<init>(Ljava/util/Map;)V
+#records(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/List;
+#records(Ljava/lang/String;)Ljava/lang/Iterable;
+#partitions()Ljava/util/Set;
+#iterator()Ljava/util/Iterator;
+#count()I
+#isEmpty()Z
+#empty()Lorg/apache/kafka/clients/consumer/ConsumerRecords;
-#<init>(Ljava/lang/String;Ljava/util/Map;)V
-#records([I)Ljava/util/List;
-#topic()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/AbstractCoordinator$CoordinatorResponseHandler
@0.9.0.0
+#parse(Lorg/apache/kafka/clients/ClientResponse;)Ljava/lang/Object;
+#handle(Ljava/lang/Object;Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V
+#onSuccess(Lorg/apache/kafka/clients/ClientResponse;Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V
+#onSuccess(Ljava/lang/Object;Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V
@0.9.0.1
+#onFailure(Ljava/lang/RuntimeException;Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V
@0.10.2.0
-#parse(Lorg/apache/kafka/clients/ClientResponse;)Ljava/lang/Object;

+###org/apache/kafka/clients/consumer/internals/AbstractCoordinator$Generation
@0.10.1.0
+#<init>(ILjava/lang/String;Ljava/lang/String;)V
@2.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.2.0
+#hasMemberId()Z
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/AbstractCoordinator
@0.9.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;J)V
+#ensureCoordinatorKnown()V
+#ensureActiveGroup()V
+#coordinatorUnknown()Z
+#close()V
+#maybeLeaveGroup()V
+#sendHeartbeatRequest()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
+#ensureCoordinatorReady()V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;J)V
-#ensureCoordinatorKnown()V
@0.10.1.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
-#sendHeartbeatRequest()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
@0.10.2.2
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
@2.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
-#ensureCoordinatorReady()V
@2.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;Ljava/util/Optional;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;Ljava/util/Optional;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
@2.4.0
+#<init>(Lorg/apache/kafka/clients/GroupRebalanceConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;)V
+#maybeLeaveGroup(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#heartbeat()Lorg/apache/kafka/clients/consumer/internals/Heartbeat;
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;Ljava/util/Optional;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;Ljava/util/Optional;IIILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZ)V
-#maybeLeaveGroup()V
@2.6.0
+#requestRejoin()V
-#heartbeat()Lorg/apache/kafka/clients/consumer/internals/Heartbeat;
@3.0.0
+#requestRejoin(Ljava/lang/String;)V
-#requestRejoin()V
@3.1.0
+#requestRejoinIfNecessary(Ljava/lang/String;)V
@3.2.0
+#requestRejoinIfNecessary(Ljava/lang/String;Ljava/lang/String;)V
+#requestRejoin(Ljava/lang/String;Ljava/lang/String;)V
-#requestRejoinIfNecessary(Ljava/lang/String;)V

+###org/apache/kafka/clients/consumer/internals/AbstractPartitionAssignor
@0.9.0.0
+#<init>()V
+#assign(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
+#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
+#assign(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)Ljava/util/Map;
+#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V
@2.4.0
+#assign(Lorg/apache/kafka/common/Cluster;Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupSubscription;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupAssignment;
-#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
-#assign(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)Ljava/util/Map;
-#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V

+###org/apache/kafka/clients/consumer/internals/ConsumerCoordinator
@0.9.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/clients/consumer/OffsetCommitCallback;ZJ)V
+#protocolType()Ljava/lang/String;
+#metadata()Ljava/util/LinkedHashMap;
+#needRejoin()Z
+#refreshCommittedOffsetsIfNeeded()V
+#fetchCommittedOffsets(Ljava/util/Set;)Ljava/util/Map;
+#ensurePartitionAssignment()V
+#close()V
+#commitOffsetsAsync(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#commitOffsetsSync(Ljava/util/Map;)V
@0.9.0.1
+#metadata()Ljava/util/List;
-#metadata()Ljava/util/LinkedHashMap;
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/clients/consumer/OffsetCommitCallback;ZJLorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/clients/consumer/OffsetCommitCallback;ZJ)V
@0.10.1.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/clients/consumer/OffsetCommitCallback;ZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
+#updatePatternSubscription(Lorg/apache/kafka/common/Cluster;)V
+#poll(J)V
+#timeToNextPoll(J)J
+#maybeAutoCommitOffsetsNow()V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/clients/consumer/OffsetCommitCallback;ZJLorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
-#ensurePartitionAssignment()V
@0.10.2.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
+#close(J)V
+#commitOffsetsSync(Ljava/util/Map;J)Z
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/clients/consumer/OffsetCommitCallback;ZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
-#close()V
-#commitOffsetsSync(Ljava/util/Map;)V
@0.10.2.2
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;ZZ)V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
@0.11.0.0
+#poll(JJ)V
-#poll(J)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;ZZ)V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;ZZ)V
@1.1.0
+#maybeAutoCommitOffsetsAsync(J)V
-#maybeAutoCommitOffsetsNow()V
@2.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Ljava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;ZZ)V
+#poll(J)Z
+#rejoinNeededOrPending()Z
+#refreshCommittedOffsetsIfNeeded(J)Z
+#fetchCommittedOffsets(Ljava/util/Set;J)Ljava/util/Map;
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IIILjava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;ZZ)V
-#poll(JJ)V
-#needRejoin()Z
-#refreshCommittedOffsetsIfNeeded()V
-#fetchCommittedOffsets(Ljava/util/Set;)Ljava/util/Map;
@2.1.0
+#poll(Lorg/apache/kafka/common/utils/Timer;)Z
+#refreshCommittedOffsetsIfNeeded(Lorg/apache/kafka/common/utils/Timer;)Z
+#fetchCommittedOffsets(Ljava/util/Set;Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
+#close(Lorg/apache/kafka/common/utils/Timer;)V
+#commitOffsetsSync(Ljava/util/Map;Lorg/apache/kafka/common/utils/Timer;)Z
-#poll(J)Z
-#refreshCommittedOffsetsIfNeeded(J)Z
-#fetchCommittedOffsets(Ljava/util/Set;J)Ljava/util/Map;
-#close(J)V
-#commitOffsetsSync(Ljava/util/Map;J)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;Ljava/util/Optional;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Ljava/util/List;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Ljava/util/List;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;ZZ)V
-#metadata()Ljava/util/List;
@2.4.0
+#<init>(Lorg/apache/kafka/clients/GroupRebalanceConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/util/List;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;ZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;)V
+#onLeavePrepare()V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/lang/String;Ljava/util/Optional;IILorg/apache/kafka/clients/consumer/internals/Heartbeat;Ljava/util/List;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;JZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
@2.5.0
+#groupMetadata()Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;
@2.5.1
+#poll(Lorg/apache/kafka/common/utils/Timer;Z)Z
-#poll(Lorg/apache/kafka/common/utils/Timer;)Z
@2.6.0
+#<init>(Lorg/apache/kafka/clients/GroupRebalanceConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/util/List;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;ZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V
-#<init>(Lorg/apache/kafka/clients/GroupRebalanceConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/util/List;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;ZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;)V
@3.2.0
+#commitOffsetsAsync(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
-#commitOffsetsAsync(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
@3.4.0
+#<init>(Lorg/apache/kafka/clients/GroupRebalanceConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/util/List;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;ZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;ZLjava/lang/String;)V
-#<init>(Lorg/apache/kafka/clients/GroupRebalanceConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Ljava/util/List;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;ZILorg/apache/kafka/clients/consumer/internals/ConsumerInterceptors;Z)V

+###org/apache/kafka/clients/consumer/internals/ConsumerInterceptors
@0.10.0.0
+#<init>(Ljava/util/List;)V
+#onConsume(Lorg/apache/kafka/clients/consumer/ConsumerRecords;)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#onCommit(Ljava/util/Map;)V
+#close()V

+###org/apache/kafka/clients/consumer/internals/ConsumerMetrics
@0.11.0.0
+#<init>(Ljava/util/Set;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#main([Ljava/lang/String;)V

+###org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$PollCondition
@0.10.1.0
+#shouldBlock()Z

+###org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient
@0.9.0.0
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;J)V
+#schedule(Lorg/apache/kafka/clients/consumer/internals/DelayedTask;J)V
+#unschedule(Lorg/apache/kafka/clients/consumer/internals/DelayedTask;)V
+#send(Lorg/apache/kafka/common/Node;Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/requests/AbstractRequest;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#leastLoadedNode()Lorg/apache/kafka/common/Node;
+#awaitMetadataUpdate()V
+#ensureFreshMetadata()V
+#wakeup()V
+#poll(Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V
+#poll(Lorg/apache/kafka/clients/consumer/internals/RequestFuture;J)Z
+#poll(J)V
+#awaitPendingRequests(Lorg/apache/kafka/common/Node;)V
+#pendingRequestCount(Lorg/apache/kafka/common/Node;)I
+#pendingRequestCount()I
+#disableWakeups()V
+#enableWakeups()V
+#close()V
+#connectionFailed(Lorg/apache/kafka/common/Node;)Z
+#tryConnect(Lorg/apache/kafka/common/Node;)V
@0.9.0.1
+#quickPoll()V
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;JJ)V
+#poll(JJ)V
+#pollNoWakeup()V
+#executeDelayedTasks(J)V
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;J)V
-#quickPoll()V
@0.10.1.0
+#awaitMetadataUpdate(J)Z
+#poll(JJLorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$PollCondition;)V
+#failUnsentRequests(Lorg/apache/kafka/common/Node;Ljava/lang/RuntimeException;)V
-#schedule(Lorg/apache/kafka/clients/consumer/internals/DelayedTask;J)V
-#unschedule(Lorg/apache/kafka/clients/consumer/internals/DelayedTask;)V
-#poll(JJ)V
-#executeDelayedTasks(J)V
@0.10.2.0
+#send(Lorg/apache/kafka/common/Node;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#awaitPendingRequests(Lorg/apache/kafka/common/Node;J)Z
-#send(Lorg/apache/kafka/common/Node;Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/requests/AbstractRequest;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
-#awaitPendingRequests(Lorg/apache/kafka/common/Node;)V
@0.11.0.0
+#hasReadyNodes()Z
+#poll(JJLorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$PollCondition;Z)V
+#hasPendingRequests(Lorg/apache/kafka/common/Node;)Z
+#hasPendingRequests()Z
+#maybeTriggerWakeup()V
-#enableWakeups()V
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;JJ)V
+#disconnect(Lorg/apache/kafka/common/Node;)V
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;JJ)V
-#failUnsentRequests(Lorg/apache/kafka/common/Node;Ljava/lang/RuntimeException;)V
@1.0.2
+#disconnectAsync(Lorg/apache/kafka/common/Node;)V
-#disconnect(Lorg/apache/kafka/common/Node;)V
@1.1.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;JJI)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;JJ)V
@2.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;JII)V
+#send(Lorg/apache/kafka/common/Node;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;I)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#hasReadyNodes(J)Z
+#isUnavailable(Lorg/apache/kafka/common/Node;)Z
+#maybeThrowAuthFailure(Lorg/apache/kafka/common/Node;)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/utils/Time;JJI)V
-#hasReadyNodes()Z
-#awaitMetadataUpdate()V
-#ensureFreshMetadata()V
-#connectionFailed(Lorg/apache/kafka/common/Node;)Z
@2.1.0
+#awaitMetadataUpdate(Lorg/apache/kafka/common/utils/Timer;)Z
+#poll(Lorg/apache/kafka/clients/consumer/internals/RequestFuture;Lorg/apache/kafka/common/utils/Timer;)Z
+#poll(Lorg/apache/kafka/common/utils/Timer;)V
+#poll(Lorg/apache/kafka/common/utils/Timer;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$PollCondition;)V
+#poll(Lorg/apache/kafka/common/utils/Timer;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$PollCondition;Z)V
+#awaitPendingRequests(Lorg/apache/kafka/common/Node;Lorg/apache/kafka/common/utils/Timer;)Z
-#awaitMetadataUpdate(J)Z
-#poll(Lorg/apache/kafka/clients/consumer/internals/RequestFuture;J)Z
-#poll(J)V
-#poll(JJLorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$PollCondition;)V
-#poll(JJLorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$PollCondition;Z)V
-#awaitPendingRequests(Lorg/apache/kafka/common/Node;J)Z
@2.4.0
+#transmitSends()V
@2.6.0
+#defaultRequestTimeoutMs()I
@3.2.3
+#poll(Lorg/apache/kafka/clients/consumer/internals/RequestFuture;Lorg/apache/kafka/common/utils/Timer;Z)Z

+###org/apache/kafka/clients/consumer/internals/ConsumerProtocol
@0.9.0.0
+#<init>()V
+#serializeSubscription(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;)Ljava/nio/ByteBuffer;
+#deserializeSubscription(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
+#deserializeAssignment(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;
+#serializeAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)Ljava/nio/ByteBuffer;
@2.4.0
+#deserializeVersion(Ljava/nio/ByteBuffer;)Ljava/lang/Short;
+#serializeSubscriptionV0(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;)Ljava/nio/ByteBuffer;
+#serializeSubscriptionV1(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;)Ljava/nio/ByteBuffer;
+#serializeSubscription(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;)Ljava/nio/ByteBuffer;
+#serializeSubscription(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;S)Ljava/nio/ByteBuffer;
+#deserializeSubscriptionV0(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;
+#deserializeSubscriptionV1(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;
+#deserializeSubscription(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;
+#serializeAssignmentV0(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;)Ljava/nio/ByteBuffer;
+#serializeAssignmentV1(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;)Ljava/nio/ByteBuffer;
+#serializeAssignment(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;)Ljava/nio/ByteBuffer;
+#serializeAssignment(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;S)Ljava/nio/ByteBuffer;
+#deserializeAssignmentV0(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;
+#deserializeAssignmentV1(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;
+#deserializeAssignment(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;
-#serializeSubscription(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;)Ljava/nio/ByteBuffer;
-#deserializeSubscription(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
-#deserializeAssignment(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;
-#serializeAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)Ljava/nio/ByteBuffer;
@2.7.0
+#deserializeVersion(Ljava/nio/ByteBuffer;)S
+#deserializeSubscription(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;
+#deserializeAssignment(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;
-#deserializeVersion(Ljava/nio/ByteBuffer;)Ljava/lang/Short;
-#serializeSubscriptionV0(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;)Ljava/nio/ByteBuffer;
-#serializeSubscriptionV1(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;)Ljava/nio/ByteBuffer;
-#deserializeSubscriptionV0(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;
-#deserializeSubscriptionV1(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription;
-#serializeAssignmentV0(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;)Ljava/nio/ByteBuffer;
-#serializeAssignmentV1(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;)Ljava/nio/ByteBuffer;
-#deserializeAssignmentV0(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;
-#deserializeAssignmentV1(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;

+###org/apache/kafka/clients/consumer/internals/Fetcher
@0.9.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;J)V
+#initFetches(Lorg/apache/kafka/common/Cluster;)V
+#updateFetchPositions(Ljava/util/Set;)V
+#getAllTopicMetadata(J)Ljava/util/Map;
+#getTopicMetadata(Ljava/util/List;J)Ljava/util/Map;
+#sendMetadataRequest(Ljava/util/List;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#fetchedRecords()Ljava/util/Map;
@0.9.0.1
-#sendMetadataRequest(Ljava/util/List;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
+#sendFetches()V
+#getTopicMetadata(Lorg/apache/kafka/common/requests/MetadataRequest;J)Ljava/util/Map;
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;J)V
-#initFetches(Lorg/apache/kafka/common/Cluster;)V
-#getTopicMetadata(Ljava/util/List;J)Ljava/util/Map;
@0.10.1.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
+#hasCompletedFetches()Z
+#resetOffsetsIfNeeded(Ljava/util/Set;)V
+#getOffsetsByTimes(Ljava/util/Map;J)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;J)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;J)Ljava/util/Map;
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
@0.10.2.0
+#sendFetches()I
+#getTopicMetadata(Lorg/apache/kafka/common/requests/MetadataRequest$Builder;J)Ljava/util/Map;
+#onAssignment(Ljava/util/Set;)V
-#sendFetches()V
-#getTopicMetadata(Lorg/apache/kafka/common/requests/MetadataRequest;J)Ljava/util/Map;
@0.11.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/common/requests/IsolationLevel;)V
+#throttleTimeSensor(Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;)Lorg/apache/kafka/common/metrics/Sensor;
+#close()V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;J)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/common/requests/IsolationLevel;)V
-#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/common/requests/IsolationLevel;)V
@1.1.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JJLorg/apache/kafka/common/requests/IsolationLevel;)V
+#resetOffsetsIfNeeded()V
+#offsetsByTimes(Ljava/util/Map;J)Ljava/util/Map;
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JLorg/apache/kafka/common/requests/IsolationLevel;)V
-#resetOffsetsIfNeeded(Ljava/util/Set;)V
-#updateFetchPositions(Ljava/util/Set;)V
-#getOffsetsByTimes(Ljava/util/Map;J)Ljava/util/Map;
@2.1.0
+#getAllTopicMetadata(Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
+#getTopicMetadata(Lorg/apache/kafka/common/requests/MetadataRequest$Builder;Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
+#offsetsByTimes(Ljava/util/Map;Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
+#clearBufferedDataForUnassignedPartitions(Ljava/util/Collection;)V
+#clearBufferedDataForUnassignedTopics(Ljava/util/Collection;)V
-#getAllTopicMetadata(J)Ljava/util/Map;
-#getTopicMetadata(Lorg/apache/kafka/common/requests/MetadataRequest$Builder;J)Ljava/util/Map;
-#offsetsByTimes(Ljava/util/Map;J)Ljava/util/Map;
-#beginningOffsets(Ljava/util/Collection;J)Ljava/util/Map;
-#endOffsets(Ljava/util/Collection;J)Ljava/util/Map;
@2.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLjava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JJLorg/apache/kafka/common/requests/IsolationLevel;Lorg/apache/kafka/clients/ApiVersions;)V
+#validateOffsetsIfNeeded()V
+#offsetsForTimes(Ljava/util/Map;Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JJLorg/apache/kafka/common/requests/IsolationLevel;)V
-#offsetsByTimes(Ljava/util/Map;Lorg/apache/kafka/common/utils/Timer;)Ljava/util/Map;
-#onAssignment(Ljava/util/Set;)V
@2.4.0
+#hasAvailableFetches()Z
-#hasCompletedFetches()Z
@2.5.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLjava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JJLorg/apache/kafka/common/IsolationLevel;Lorg/apache/kafka/clients/ApiVersions;)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;IIIIIZLjava/lang/String;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry;Lorg/apache/kafka/common/utils/Time;JJLorg/apache/kafka/common/requests/IsolationLevel;Lorg/apache/kafka/clients/ApiVersions;)V
@3.2.0
+#collectFetch()Lorg/apache/kafka/clients/consumer/internals/Fetch;
-#fetchedRecords()Ljava/util/Map;

+###org/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry
@0.11.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/Set;Ljava/lang/String;)V
+#getAllTemplates()Ljava/util/List;

+###org/apache/kafka/clients/consumer/internals/Heartbeat
@0.9.0.0
+#<init>(JJJ)V
+#sentHeartbeat(J)V
+#receiveHeartbeat(J)V
+#shouldHeartbeat(J)Z
+#lastHeartbeatSend()J
+#timeToNextHeartbeat(J)J
+#sessionTimeoutExpired(J)Z
+#interval()J
+#resetSessionTimeout(J)V
@0.10.1.0
+#<init>(JJJJ)V
+#poll(J)V
+#failHeartbeat()V
+#resetTimeouts(J)V
+#pollTimeoutExpired(J)Z
-#<init>(JJJ)V
-#resetSessionTimeout(J)V
@2.0.0
+#<init>(IIIJ)V
+#lastPollTime()J
-#<init>(JJJJ)V
@2.1.0
+#<init>(Lorg/apache/kafka/common/utils/Time;IIIJ)V
+#receiveHeartbeat()V
+#resetTimeouts()V
+#resetSessionTimeout()V
-#<init>(IIIJ)V
-#receiveHeartbeat(J)V
-#interval()J
-#resetTimeouts(J)V
@2.4.0
+#<init>(Lorg/apache/kafka/clients/GroupRebalanceConfig;Lorg/apache/kafka/common/utils/Time;)V
-#<init>(Lorg/apache/kafka/common/utils/Time;IIIJ)V
@2.5.0
-#sentHeartbeat(J)V
-#failHeartbeat()V
-#receiveHeartbeat()V
-#shouldHeartbeat(J)Z
-#lastHeartbeatSend()J
-#timeToNextHeartbeat(J)J
-#sessionTimeoutExpired(J)Z
-#resetTimeouts()V
-#resetSessionTimeout()V
-#pollTimeoutExpired(J)Z
-#lastPollTime()J

+###org/apache/kafka/clients/consumer/internals/NoAvailableBrokersException
@0.9.0.0
+#<init>()V

+###org/apache/kafka/clients/consumer/internals/NoOpConsumerRebalanceListener
@0.9.0.0
+#<init>()V
+#onPartitionsAssigned(Ljava/util/Collection;)V
+#onPartitionsRevoked(Ljava/util/Collection;)V

+###org/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment
@0.9.0.0
+#<init>(Ljava/util/List;Ljava/nio/ByteBuffer;)V
+#<init>(Ljava/util/List;)V
+#partitions()Ljava/util/List;
+#userData()Ljava/nio/ByteBuffer;
@0.10.0.0
+#toString()Ljava/lang/String;
@3.0.0
-###org/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment

+###org/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription
@0.9.0.0
+#<init>(Ljava/util/List;Ljava/nio/ByteBuffer;)V
+#<init>(Ljava/util/List;)V
+#topics()Ljava/util/List;
+#userData()Ljava/nio/ByteBuffer;
@0.10.0.0
+#toString()Ljava/lang/String;
@3.0.0
-###org/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription

+###org/apache/kafka/clients/consumer/internals/PartitionAssignor
@0.9.0.0
+#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
+#assign(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)Ljava/util/Map;
+#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V
+#name()Ljava/lang/String;
@2.3.0
+#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;I)V
@3.0.0
-###org/apache/kafka/clients/consumer/internals/PartitionAssignor

+###org/apache/kafka/clients/consumer/internals/RequestFuture
@0.9.0.0
+#<init>()V
+#isDone()Z
+#value()Ljava/lang/Object;
+#succeeded()Z
+#failed()Z
+#isRetriable()Z
+#exception()Ljava/lang/RuntimeException;
+#complete(Ljava/lang/Object;)V
+#raise(Ljava/lang/RuntimeException;)V
+#raise(Lorg/apache/kafka/common/protocol/Errors;)V
+#addListener(Lorg/apache/kafka/clients/consumer/internals/RequestFutureListener;)V
+#compose(Lorg/apache/kafka/clients/consumer/internals/RequestFutureAdapter;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#chain(Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V
+#failure(Ljava/lang/RuntimeException;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#voidSuccess()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#coordinatorNotAvailable()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#leaderNotAvailable()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#noBrokersAvailable()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
+#staleMetadata()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
@0.10.1.0
+#shouldBlock()Z
@0.11.0.0
+#awaitDone(JLjava/util/concurrent/TimeUnit;)Z
@1.1.0
-#leaderNotAvailable()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;
-#staleMetadata()Lorg/apache/kafka/clients/consumer/internals/RequestFuture;

+###org/apache/kafka/clients/consumer/internals/RequestFutureAdapter
@0.9.0.0
+#<init>()V
+#onSuccess(Ljava/lang/Object;Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V
+#onFailure(Ljava/lang/RuntimeException;Lorg/apache/kafka/clients/consumer/internals/RequestFuture;)V

+###org/apache/kafka/clients/consumer/internals/RequestFutureListener
@0.9.0.0
+#onSuccess(Ljava/lang/Object;)V
+#onFailure(Ljava/lang/RuntimeException;)V

+###org/apache/kafka/clients/consumer/internals/StaleMetadataException
@0.9.0.0
+#<init>()V
@2.0.0
-###org/apache/kafka/clients/consumer/internals/StaleMetadataException

+###org/apache/kafka/clients/consumer/internals/SubscriptionState$Listener
@0.10.2.0
+#onAssignment(Ljava/util/Set;)V
@2.3.0
-###org/apache/kafka/clients/consumer/internals/SubscriptionState$Listener

+###org/apache/kafka/clients/consumer/internals/SubscriptionState
@0.9.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
+#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#changeSubscription(Ljava/util/List;)V
+#groupSubscribe(Ljava/util/Collection;)V
+#needReassignment()V
+#assignFromUser(Ljava/util/Collection;)V
+#assignFromSubscribed(Ljava/util/Collection;)V
+#subscribe(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#hasPatternSubscription()Z
+#unsubscribe()V
+#getSubscribedPattern()Ljava/util/regex/Pattern;
+#subscription()Ljava/util/Set;
+#groupSubscription()Ljava/util/Set;
+#fetched(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
+#fetched(Lorg/apache/kafka/common/TopicPartition;J)V
+#committed(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;)V
+#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
+#needRefreshCommits()V
+#refreshCommitsNeeded()Z
+#commitsRefreshed()V
+#seek(Lorg/apache/kafka/common/TopicPartition;J)V
+#assignedPartitions()Ljava/util/Set;
+#fetchablePartitions()Ljava/util/Set;
+#partitionsAutoAssigned()Z
+#consumed(Lorg/apache/kafka/common/TopicPartition;J)V
+#consumed(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
+#allConsumed()Ljava/util/Map;
+#needOffsetReset(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
+#needOffsetReset(Lorg/apache/kafka/common/TopicPartition;)V
+#hasDefaultOffsetResetPolicy()Z
+#isOffsetResetNeeded(Lorg/apache/kafka/common/TopicPartition;)Z
+#resetStrategy(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;
+#hasAllFetchPositions()Z
+#missingFetchPositions()Ljava/util/Set;
+#partitionAssignmentNeeded()Z
+#isAssigned(Lorg/apache/kafka/common/TopicPartition;)Z
+#isPaused(Lorg/apache/kafka/common/TopicPartition;)Z
+#isFetchable(Lorg/apache/kafka/common/TopicPartition;)Z
+#pause(Lorg/apache/kafka/common/TopicPartition;)V
+#resume(Lorg/apache/kafka/common/TopicPartition;)V
+#listener()Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;
@0.9.0.1
+#position(Lorg/apache/kafka/common/TopicPartition;J)V
+#position(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
-#fetched(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
-#fetched(Lorg/apache/kafka/common/TopicPartition;J)V
-#consumed(Lorg/apache/kafka/common/TopicPartition;J)V
-#consumed(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
@0.10.0.0
+#subscribe(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#changeSubscription(Ljava/util/Collection;)V
+#pausedPartitions()Ljava/util/Set;
-#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
-#changeSubscription(Ljava/util/List;)V
@0.10.1.0
+#subscribe(Ljava/util/Set;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#subscribeFromPattern(Ljava/util/Set;)V
+#resetGroupSubscription()V
+#assignFromUser(Ljava/util/Set;)V
+#hasNoSubscriptionOrUserAssignment()Z
+#fetchablePartitions()Ljava/util/List;
+#movePartitionToEnd(Lorg/apache/kafka/common/TopicPartition;)V
-#subscribe(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
-#changeSubscription(Ljava/util/Collection;)V
-#needReassignment()V
-#assignFromUser(Ljava/util/Collection;)V
-#fetchablePartitions()Ljava/util/Set;
-#partitionAssignmentNeeded()Z
@0.10.2.0
+#subscribedPattern()Ljava/util/regex/Pattern;
+#partitionLag(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
+#updateHighWatermark(Lorg/apache/kafka/common/TopicPartition;J)V
+#hasAllFetchPositions(Ljava/util/Collection;)Z
+#hasValidPosition(Lorg/apache/kafka/common/TopicPartition;)Z
+#addListener(Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$Listener;)V
+#fireOnAssignment(Ljava/util/Set;)V
-#getSubscribedPattern()Ljava/util/regex/Pattern;
@0.11.0.0
+#partitionLag(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/requests/IsolationLevel;)Ljava/lang/Long;
+#updateLastStableOffset(Lorg/apache/kafka/common/TopicPartition;J)V
-#partitionLag(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
@1.1.0
+#requestOffsetReset(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
+#requestOffsetReset(Lorg/apache/kafka/common/TopicPartition;)V
+#setResetPending(Ljava/util/Set;J)V
+#resetMissingPositions()V
+#partitionsNeedingReset(J)Ljava/util/Set;
+#resetFailed(Ljava/util/Set;J)V
+#rebalanceListener()Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;
-#committed(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;)V
-#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
-#needRefreshCommits()V
-#refreshCommitsNeeded()Z
-#commitsRefreshed()V
-#needOffsetReset(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
-#needOffsetReset(Lorg/apache/kafka/common/TopicPartition;)V
-#hasAllFetchPositions(Ljava/util/Collection;)Z
-#listener()Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;
@2.0.0
+#partitionLead(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
+#updateLogStartOffset(Lorg/apache/kafka/common/TopicPartition;J)V
@2.0.1
+#numAssignedPartitions()I
@2.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
+#subscribe(Ljava/util/Set;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)Z
+#subscribeFromPattern(Ljava/util/Set;)Z
+#assignFromUser(Ljava/util/Set;)Z
+#assignFromSubscribed(Ljava/util/Collection;)Z
+#seekValidated(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;)V
+#seekUnvalidated(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;)V
+#position(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;)V
+#maybeValidatePositionForCurrentLeader(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;)Z
+#maybeCompleteValidation(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;Lorg/apache/kafka/common/requests/EpochEndOffset;)Ljava/util/Optional;
+#awaitingValidation(Lorg/apache/kafka/common/TopicPartition;)Z
+#completeValidation(Lorg/apache/kafka/common/TopicPartition;)V
+#validPosition(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;
+#position(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;
+#updatePreferredReadReplica(Lorg/apache/kafka/common/TopicPartition;ILjava/util/function/Supplier;)V
+#preferredReadReplica(Lorg/apache/kafka/common/TopicPartition;J)Ljava/util/Optional;
+#clearPreferredReadReplica(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Optional;
+#requestOffsetReset(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
+#partitionsNeedingValidation(J)Ljava/util/Set;
-#<init>(Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
-#subscribe(Ljava/util/Set;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
-#subscribeFromPattern(Ljava/util/Set;)V
-#groupSubscribe(Ljava/util/Collection;)V
-#resetGroupSubscription()V
-#assignFromUser(Ljava/util/Set;)V
-#assignFromSubscribed(Ljava/util/Collection;)V
-#hasPatternSubscription()Z
-#subscribedPattern()Ljava/util/regex/Pattern;
-#groupSubscription()Ljava/util/Set;
-#numAssignedPartitions()I
-#fetchablePartitions()Ljava/util/List;
-#partitionsAutoAssigned()Z
-#position(Lorg/apache/kafka/common/TopicPartition;J)V
-#position(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
-#partitionLag(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/requests/IsolationLevel;)Ljava/lang/Long;
-#partitionLead(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Long;
-#updateHighWatermark(Lorg/apache/kafka/common/TopicPartition;J)V
-#updateLogStartOffset(Lorg/apache/kafka/common/TopicPartition;J)V
-#updateLastStableOffset(Lorg/apache/kafka/common/TopicPartition;J)V
-#setResetPending(Ljava/util/Set;J)V
-#hasDefaultOffsetResetPolicy()Z
-#isFetchable(Lorg/apache/kafka/common/TopicPartition;)Z
-#resetFailed(Ljava/util/Set;J)V
-#movePartitionToEnd(Lorg/apache/kafka/common/TopicPartition;)V
-#addListener(Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$Listener;)V
-#fireOnAssignment(Ljava/util/Set;)V
@2.4.0
+#toString()Ljava/lang/String;
+#prettyString()Ljava/lang/String;
+#checkAssignmentMatchedSubscription(Ljava/util/Collection;)Z
+#assignFromSubscribed(Ljava/util/Collection;)V
+#assignedPartitionsList()Ljava/util/List;
-#assignFromSubscribed(Ljava/util/Collection;)Z
@2.5.0
+#hasAutoAssignedPartitions()Z
@2.5.1
+#maybeValidatePositionForCurrentLeader(Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;)Z
+#initializingPartitions()Ljava/util/Set;
+#resetInitializingPositions()V
-#maybeValidatePositionForCurrentLeader(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;)Z
-#missingFetchPositions()Ljava/util/Set;
-#resetMissingPositions()V
@2.6.0
+#updatePreferredReadReplica(Lorg/apache/kafka/common/TopicPartition;ILjava/util/function/LongSupplier;)V
-#updatePreferredReadReplica(Lorg/apache/kafka/common/TopicPartition;ILjava/util/function/Supplier;)V
@2.7.0
+#fetchablePartitions(Ljava/util/function/Predicate;)Ljava/util/List;
@2.8.0
+#maybeCompleteValidation(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;)Ljava/util/Optional;
-#maybeCompleteValidation(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;Lorg/apache/kafka/common/requests/EpochEndOffset;)Ljava/util/Optional;
@3.0.0
+#partitionLag(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/IsolationLevel;)Ljava/lang/Long;
+#partitionEndOffset(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/IsolationLevel;)Ljava/lang/Long;
+#requestPartitionEndOffset(Lorg/apache/kafka/common/TopicPartition;)V
+#partitionEndOffsetRequested(Lorg/apache/kafka/common/TopicPartition;)Z
@3.2.3
+#markPendingRevocation(Ljava/util/Set;)V

+###org/apache/kafka/clients/consumer/InvalidOffsetException
@0.9.0.0
+#<init>(Ljava/lang/String;)V
+#partitions()Ljava/util/Set;

+###org/apache/kafka/clients/consumer/KafkaConsumer
@0.8.2-beta
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;)V
+#<init>(Ljava/util/Properties;)V
+#<init>(Ljava/util/Properties;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;)V
+#subscribe([Ljava/lang/String;)V
+#subscribe([Lorg/apache/kafka/common/TopicPartition;)V
+#unsubscribe([Ljava/lang/String;)V
+#unsubscribe([Lorg/apache/kafka/common/TopicPartition;)V
+#poll(J)Ljava/util/Map;
+#commit(Ljava/util/Map;Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
+#commit(Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
+#seek(Ljava/util/Map;)V
+#position(Ljava/util/Collection;)Ljava/util/Map;
+#committed(Ljava/util/Collection;)Ljava/util/Map;
+#offsetsBeforeTime(JLjava/util/Collection;)Ljava/util/Map;
+#metrics()Ljava/util/Map;
+#close()V
@0.8.2.0
+#<init>(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#<init>(Ljava/util/Properties;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
@0.9.0.0
+#<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#assignment()Ljava/util/Set;
+#subscription()Ljava/util/Set;
+#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#subscribe(Ljava/util/List;)V
+#subscribe(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#unsubscribe()V
+#assign(Ljava/util/List;)V
+#poll(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#commitSync()V
+#commitSync(Ljava/util/Map;)V
+#commitAsync()V
+#commitAsync(Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#commitAsync(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#seek(Lorg/apache/kafka/common/TopicPartition;J)V
+#seekToBeginning([Lorg/apache/kafka/common/TopicPartition;)V
+#seekToEnd([Lorg/apache/kafka/common/TopicPartition;)V
+#position(Lorg/apache/kafka/common/TopicPartition;)J
+#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
+#partitionsFor(Ljava/lang/String;)Ljava/util/List;
+#listTopics()Ljava/util/Map;
+#pause([Lorg/apache/kafka/common/TopicPartition;)V
+#resume([Lorg/apache/kafka/common/TopicPartition;)V
+#wakeup()V
-#<init>(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;)V
-#<init>(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#<init>(Ljava/util/Properties;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;)V
-#<init>(Ljava/util/Properties;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceCallback;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
-#subscribe([Ljava/lang/String;)V
-#subscribe([Lorg/apache/kafka/common/TopicPartition;)V
-#unsubscribe([Ljava/lang/String;)V
-#unsubscribe([Lorg/apache/kafka/common/TopicPartition;)V
-#poll(J)Ljava/util/Map;
-#commit(Ljava/util/Map;Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
-#commit(Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
-#seek(Ljava/util/Map;)V
-#position(Ljava/util/Collection;)Ljava/util/Map;
-#committed(Ljava/util/Collection;)Ljava/util/Map;
-#offsetsBeforeTime(JLjava/util/Collection;)Ljava/util/Map;
@0.10.0.0
+#subscribe(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#subscribe(Ljava/util/Collection;)V
+#assign(Ljava/util/Collection;)V
+#seekToBeginning(Ljava/util/Collection;)V
+#seekToEnd(Ljava/util/Collection;)V
+#pause(Ljava/util/Collection;)V
+#resume(Ljava/util/Collection;)V
+#paused()Ljava/util/Set;
-#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
-#subscribe(Ljava/util/List;)V
-#assign(Ljava/util/List;)V
-#seekToBeginning([Lorg/apache/kafka/common/TopicPartition;)V
-#seekToEnd([Lorg/apache/kafka/common/TopicPartition;)V
-#pause([Lorg/apache/kafka/common/TopicPartition;)V
-#resume([Lorg/apache/kafka/common/TopicPartition;)V
@0.10.1.0
+#offsetsForTimes(Ljava/util/Map;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;)Ljava/util/Map;
@0.10.2.0
+#close(JLjava/util/concurrent/TimeUnit;)V
@1.0.0
+#subscribe(Ljava/util/regex/Pattern;)V
@2.0.0
*#poll(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;[deprecated]
+#poll(Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#commitSync(Ljava/time/Duration;)V
+#commitSync(Ljava/util/Map;Ljava/time/Duration;)V
+#position(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)J
+#committed(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
+#partitionsFor(Ljava/lang/String;Ljava/time/Duration;)Ljava/util/List;
+#listTopics(Ljava/time/Duration;)Ljava/util/Map;
+#offsetsForTimes(Ljava/util/Map;Ljava/time/Duration;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
*#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#close(Ljava/time/Duration;)V
@2.2.0
+#seek(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;)V
@2.4.0
*#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
*#committed(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
+#committed(Ljava/util/Set;)Ljava/util/Map;
+#committed(Ljava/util/Set;Ljava/time/Duration;)Ljava/util/Map;
@2.5.0
+#groupMetadata()Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;
@2.6.0
+#enforceRebalance()V
@3.0.0
+#currentLag(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/OptionalLong;
-#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
@3.2.0
+#enforceRebalance(Ljava/lang/String;)V

+###org/apache/kafka/clients/consumer/MockConsumer
@0.8.2-beta
+#<init>()V
+#subscribe([Ljava/lang/String;)V
+#subscribe([Lorg/apache/kafka/common/TopicPartition;)V
+#unsubscribe([Ljava/lang/String;)V
+#unsubscribe([Lorg/apache/kafka/common/TopicPartition;)V
+#poll(J)Ljava/util/Map;
+#commit(Ljava/util/Map;Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
+#commit(Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
+#seek(Ljava/util/Map;)V
+#committed(Ljava/util/Collection;)Ljava/util/Map;
+#position(Ljava/util/Collection;)Ljava/util/Map;
+#offsetsBeforeTime(JLjava/util/Collection;)Ljava/util/Map;
+#metrics()Ljava/util/Map;
+#close()V
@0.9.0.0
+#<init>(Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;)V
+#assignment()Ljava/util/Set;
+#rebalance(Ljava/util/Collection;)V
+#subscription()Ljava/util/Set;
+#subscribe(Ljava/util/List;)V
+#subscribe(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#assign(Ljava/util/List;)V
+#unsubscribe()V
+#poll(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#addRecord(Lorg/apache/kafka/clients/consumer/ConsumerRecord;)V
+#setException(Lorg/apache/kafka/common/KafkaException;)V
+#commitAsync(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#commitSync(Ljava/util/Map;)V
+#commitAsync()V
+#commitAsync(Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#commitSync()V
+#seek(Lorg/apache/kafka/common/TopicPartition;J)V
+#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
+#position(Lorg/apache/kafka/common/TopicPartition;)J
+#seekToBeginning([Lorg/apache/kafka/common/TopicPartition;)V
+#updateBeginningOffsets(Ljava/util/Map;)V
+#seekToEnd([Lorg/apache/kafka/common/TopicPartition;)V
+#updateEndOffsets(Ljava/util/Map;)V
+#partitionsFor(Ljava/lang/String;)Ljava/util/List;
+#listTopics()Ljava/util/Map;
+#updatePartitions(Ljava/lang/String;Ljava/util/List;)V
+#pause([Lorg/apache/kafka/common/TopicPartition;)V
+#resume([Lorg/apache/kafka/common/TopicPartition;)V
+#closed()Z
+#wakeup()V
+#schedulePollTask(Ljava/lang/Runnable;)V
+#scheduleNopPollTask()V
+#paused()Ljava/util/Set;
-#<init>()V
-#subscribe([Ljava/lang/String;)V
-#subscribe([Lorg/apache/kafka/common/TopicPartition;)V
-#unsubscribe([Ljava/lang/String;)V
-#unsubscribe([Lorg/apache/kafka/common/TopicPartition;)V
-#poll(J)Ljava/util/Map;
-#commit(Ljava/util/Map;Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
-#commit(Z)Lorg/apache/kafka/clients/consumer/OffsetMetadata;
-#seek(Ljava/util/Map;)V
-#committed(Ljava/util/Collection;)Ljava/util/Map;
-#position(Ljava/util/Collection;)Ljava/util/Map;
-#offsetsBeforeTime(JLjava/util/Collection;)Ljava/util/Map;
@0.10.0.0
+#subscribe(Ljava/util/Collection;)V
+#subscribe(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#assign(Ljava/util/Collection;)V
+#seekToBeginning(Ljava/util/Collection;)V
+#seekToEnd(Ljava/util/Collection;)V
+#pause(Ljava/util/Collection;)V
+#resume(Ljava/util/Collection;)V
-#subscribe(Ljava/util/List;)V
-#subscribe(Ljava/util/List;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
-#assign(Ljava/util/List;)V
-#seekToBeginning([Lorg/apache/kafka/common/TopicPartition;)V
-#seekToEnd([Lorg/apache/kafka/common/TopicPartition;)V
-#pause([Lorg/apache/kafka/common/TopicPartition;)V
-#resume([Lorg/apache/kafka/common/TopicPartition;)V
@0.10.1.0
+#offsetsForTimes(Ljava/util/Map;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;)Ljava/util/Map;
@0.10.2.0
+#close(JLjava/util/concurrent/TimeUnit;)V
@1.0.0
+#subscribe(Ljava/util/regex/Pattern;)V
@1.1.0
+#addEndOffsets(Ljava/util/Map;)V
@2.0.0
*#poll(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;[deprecated]
+#poll(Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#commitSync(Ljava/time/Duration;)V
+#commitSync(Ljava/util/Map;Ljava/time/Duration;)V
+#committed(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;
+#position(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)J
+#partitionsFor(Ljava/lang/String;Ljava/time/Duration;)Ljava/util/List;
+#listTopics(Ljava/time/Duration;)Ljava/util/Map;
+#offsetsForTimes(Ljava/util/Map;Ljava/time/Duration;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
+#close(Ljava/time/Duration;)V
@2.2.0
+#seek(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;)V
@2.2.2
*#setException(Lorg/apache/kafka/common/KafkaException;)V[deprecated]
+#setPollException(Lorg/apache/kafka/common/KafkaException;)V
+#setOffsetsException(Lorg/apache/kafka/common/KafkaException;)V
@2.3.0
-#setPollException(Lorg/apache/kafka/common/KafkaException;)V
-#setOffsetsException(Lorg/apache/kafka/common/KafkaException;)V
@2.3.1
*#setException(Lorg/apache/kafka/common/KafkaException;)V[deprecated]
+#setPollException(Lorg/apache/kafka/common/KafkaException;)V
+#setOffsetsException(Lorg/apache/kafka/common/KafkaException;)V
@2.4.0
*#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
*#committed(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
+#committed(Ljava/util/Set;)Ljava/util/Map;
+#committed(Ljava/util/Set;Ljava/time/Duration;)Ljava/util/Map;
@2.5.0
+#groupMetadata()Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;
@2.6.0
*#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#enforceRebalance()V
+#shouldRebalance()Z
+#resetShouldRebalance()V
+#lastPollTimeout()Ljava/time/Duration;
-#addEndOffsets(Ljava/util/Map;)V
@3.0.0
+#currentLag(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/OptionalLong;
-#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
@3.2.0
+#enforceRebalance(Ljava/lang/String;)V

+###org/apache/kafka/clients/consumer/NoOffsetForPartitionException
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;)V
+#partition()Lorg/apache/kafka/common/TopicPartition;
+#partitions()Ljava/util/Set;
@0.11.0.0
+#<init>(Ljava/util/Collection;)V
*#partition()Lorg/apache/kafka/common/TopicPartition;[deprecated]
@3.0.0
-#partition()Lorg/apache/kafka/common/TopicPartition;[deprecated]

+###org/apache/kafka/clients/consumer/OffsetAndMetadata
@0.9.0.0
+#<init>(JLjava/lang/String;)V
+#<init>(J)V
+#offset()J
+#metadata()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.1.0
+#<init>(JLjava/util/Optional;Ljava/lang/String;)V
+#leaderEpoch()Ljava/util/Optional;

+###org/apache/kafka/clients/consumer/OffsetAndTimestamp
@0.10.1.0
+#<init>(JJ)V
+#timestamp()J
+#offset()J
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.1.0
+#<init>(JJLjava/util/Optional;)V
+#leaderEpoch()Ljava/util/Optional;

+###org/apache/kafka/clients/consumer/OffsetCommitCallback
@0.9.0.0
+#onComplete(Ljava/util/Map;Ljava/lang/Exception;)V

+###org/apache/kafka/clients/consumer/OffsetOutOfRangeException
@0.9.0.0
+#<init>(Ljava/util/Map;)V
+#offsetOutOfRangePartitions()Ljava/util/Map;
+#partitions()Ljava/util/Set;
@2.6.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V

+###org/apache/kafka/clients/consumer/OffsetResetStrategy
@0.9.0.0
+#values()[Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/OffsetResetStrategy;
@3.3.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/RangeAssignor
@0.9.0.0
+#<init>()V
+#name()Ljava/lang/String;
+#assign(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;

+###org/apache/kafka/clients/consumer/RetriableCommitFailedException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@0.10.1.0
+#<init>(Ljava/lang/Throwable;)V
@0.11.0.0
+#withUnderlyingMessage(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/RetriableCommitFailedException;
@2.5.0
-#withUnderlyingMessage(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/RetriableCommitFailedException;

+###org/apache/kafka/clients/consumer/RoundRobinAssignor
@0.9.0.0
+#<init>()V
+#assign(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
+#allPartitionsSorted(Ljava/util/Map;Ljava/util/Map;)Ljava/util/List;
+#name()Ljava/lang/String;
@2.4.0
-#allPartitionsSorted(Ljava/util/Map;Ljava/util/Map;)Ljava/util/List;

+###org/apache/kafka/clients/consumer/StickyAssignor
@0.11.0.0
+#<init>()V
+#assign(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
+#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V
+#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;
+#name()Ljava/lang/String;
@2.3.0
+#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;I)V
-#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;)V
@2.4.0
+#onAssignment(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
+#subscriptionUserData(Ljava/util/Set;)Ljava/nio/ByteBuffer;
-#assign(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
-#onAssignment(Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Assignment;I)V
-#subscription(Ljava/util/Set;)Lorg/apache/kafka/clients/consumer/internals/PartitionAssignor$Subscription;

+###org/apache/kafka/clients/KafkaClient
@0.8.2-beta
+#isReady(Lorg/apache/kafka/common/Node;J)Z
+#ready(Lorg/apache/kafka/common/Node;J)Z
+#poll(Ljava/util/List;JJ)Ljava/util/List;
+#leastLoadedNode(J)Lorg/apache/kafka/common/Node;
+#inFlightRequestCount()I
+#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/requests/RequestHeader;
+#wakeup()V
+#close()V
@0.8.2.0
+#connectionDelay(Lorg/apache/kafka/common/Node;J)J
@0.9.0.0
+#connectionFailed(Lorg/apache/kafka/common/Node;)Z
+#send(Lorg/apache/kafka/clients/ClientRequest;J)V
+#poll(JJ)Ljava/util/List;
+#close(Ljava/lang/String;)V
+#inFlightRequestCount(Ljava/lang/String;)I
+#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;S)Lorg/apache/kafka/common/requests/RequestHeader;
-#poll(Ljava/util/List;JJ)Ljava/util/List;
-#close()V
@0.10.2.0
+#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZ)Lorg/apache/kafka/clients/ClientRequest;
+#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZLorg/apache/kafka/clients/RequestCompletionHandler;)Lorg/apache/kafka/clients/ClientRequest;
-#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/requests/RequestHeader;
-#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;S)Lorg/apache/kafka/common/requests/RequestHeader;
@0.11.0.0
+#disconnect(Ljava/lang/String;)V
+#hasInFlightRequests()Z
+#hasInFlightRequests(Ljava/lang/String;)Z
+#hasReadyNodes()Z
@1.0.0
+#authenticationException(Lorg/apache/kafka/common/Node;)Lorg/apache/kafka/common/errors/AuthenticationException;
@2.0.0
+#pollDelayMs(Lorg/apache/kafka/common/Node;J)J
+#hasReadyNodes(J)Z
+#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZILorg/apache/kafka/clients/RequestCompletionHandler;)Lorg/apache/kafka/clients/ClientRequest;
-#hasReadyNodes()Z
-#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZLorg/apache/kafka/clients/RequestCompletionHandler;)Lorg/apache/kafka/clients/ClientRequest;
@2.1.0
+#initiateClose()V
+#active()Z

+###org/apache/kafka/clients/ManualMetadataUpdater
@0.9.0.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#setNodes(Ljava/util/List;)V
+#fetchNodes()Ljava/util/List;
+#isUpdateDue(J)Z
+#maybeUpdate(J)J
+#maybeHandleDisconnection(Lorg/apache/kafka/clients/ClientRequest;)Z
+#maybeHandleCompletedReceive(Lorg/apache/kafka/clients/ClientRequest;JLorg/apache/kafka/common/protocol/types/Struct;)Z
+#requestUpdate()V
@0.10.2.0
+#handleDisconnection(Ljava/lang/String;)V
+#handleCompletedMetadataResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
-#maybeHandleDisconnection(Lorg/apache/kafka/clients/ClientRequest;)Z
-#maybeHandleCompletedReceive(Lorg/apache/kafka/clients/ClientRequest;JLorg/apache/kafka/common/protocol/types/Struct;)Z
@1.0.0
+#handleAuthenticationFailure(Lorg/apache/kafka/common/errors/AuthenticationException;)V
@2.0.0
+#close()V
@2.3.0
+#handleFatalException(Lorg/apache/kafka/common/KafkaException;)V
-#handleAuthenticationFailure(Lorg/apache/kafka/common/errors/AuthenticationException;)V
@2.4.1
+#handleServerDisconnect(JLjava/lang/String;Ljava/util/Optional;)V
+#handleFailedRequest(JLjava/util/Optional;)V
+#handleSuccessfulResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
-#handleDisconnection(Ljava/lang/String;)V
-#handleFatalException(Lorg/apache/kafka/common/KafkaException;)V
-#handleCompletedMetadataResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
-#requestUpdate()V

+###org/apache/kafka/clients/Metadata$Listener
@0.9.0.0
+#onMetadataUpdate(Lorg/apache/kafka/common/Cluster;)V
@0.10.2.1
+#onMetadataUpdate(Lorg/apache/kafka/common/Cluster;Ljava/util/Set;)V
-#onMetadataUpdate(Lorg/apache/kafka/common/Cluster;)V
@2.3.0
-###org/apache/kafka/clients/Metadata$Listener

+###org/apache/kafka/clients/Metadata
@0.9.0.0
+#<init>()V
+#<init>(JJ)V
+#fetch()Lorg/apache/kafka/common/Cluster;
+#add(Ljava/lang/String;)V
+#timeToNextUpdate(J)J
+#requestUpdate()I
+#awaitUpdate(IJ)V
+#setTopics(Ljava/util/Collection;)V
+#topics()Ljava/util/Set;
+#containsTopic(Ljava/lang/String;)Z
+#update(Lorg/apache/kafka/common/Cluster;J)V
+#failedUpdate(J)V
+#version()I
+#lastSuccessfulUpdate()J
+#refreshBackoff()J
+#needMetadataForAllTopics(Z)V
+#needMetadataForAllTopics()Z
+#addListener(Lorg/apache/kafka/clients/Metadata$Listener;)V
+#removeListener(Lorg/apache/kafka/clients/Metadata$Listener;)V
@0.10.0.0
+#updateRequested()Z
@0.10.1.0
+#<init>(JJZLorg/apache/kafka/common/internals/ClusterResourceListeners;)V
@0.10.2.0
-#refreshBackoff()J
@0.10.2.1
+#update(Lorg/apache/kafka/common/Cluster;Ljava/util/Set;J)V
-#update(Lorg/apache/kafka/common/Cluster;J)V
@0.11.0.0
+#<init>(JJZ)V
+#<init>(JJZZLorg/apache/kafka/common/internals/ClusterResourceListeners;)V
+#allowAutoTopicCreation()Z
-#<init>()V
-#<init>(JJ)V
-#<init>(JJZLorg/apache/kafka/common/internals/ClusterResourceListeners;)V
@1.0.0
+#getAndClearAuthenticationException()Lorg/apache/kafka/common/errors/AuthenticationException;
+#failedUpdate(JLorg/apache/kafka/common/errors/AuthenticationException;)V
-#failedUpdate(J)V
@2.0.0
+#close()V
+#isClosed()Z
@2.0.1
+#timeToAllowUpdate(J)J
@2.2.0
+#updateLastSeenEpochIfNewer(Lorg/apache/kafka/common/TopicPartition;I)Z
+#partitionInfoIfCurrent(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Optional;
+#bootstrap(Ljava/util/List;J)V
+#update(Lorg/apache/kafka/common/requests/MetadataResponse;J)V
-#update(Lorg/apache/kafka/common/Cluster;Ljava/util/Set;J)V
@2.2.1
+#update(ILorg/apache/kafka/common/requests/MetadataResponse;J)V
+#updateVersion()I
+#newMetadataRequestAndVersion()Lorg/apache/kafka/clients/Metadata$MetadataRequestAndVersion;
-#version()I
@2.3.0
+#<init>(JJLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/common/internals/ClusterResourceListeners;)V
+#metadataExpireMs()J
+#lastSeenLeaderEpoch(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Optional;
+#getAndClearMetadataException()Lorg/apache/kafka/common/KafkaException;
+#maybeThrowException()V
+#failedUpdate(JLorg/apache/kafka/common/KafkaException;)V
+#requestUpdateForNewTopics()V
+#leaderAndEpoch(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;
-#<init>(JJZ)V
-#<init>(JJZZLorg/apache/kafka/common/internals/ClusterResourceListeners;)V
-#add(Ljava/lang/String;)V
-#getAndClearAuthenticationException()Lorg/apache/kafka/common/errors/AuthenticationException;
-#awaitUpdate(IJ)V
-#setTopics(Ljava/util/Collection;)V
-#topics()Ljava/util/Set;
-#containsTopic(Ljava/lang/String;)Z
-#failedUpdate(JLorg/apache/kafka/common/errors/AuthenticationException;)V
-#allowAutoTopicCreation()Z
-#needMetadataForAllTopics(Z)V
-#needMetadataForAllTopics()Z
-#addListener(Lorg/apache/kafka/clients/Metadata$Listener;)V
-#removeListener(Lorg/apache/kafka/clients/Metadata$Listener;)V
@2.3.1
+#maybeThrowAnyException()V
+#maybeThrowFatalException()V
+#maybeThrowExceptionForTopic(Ljava/lang/String;)V
-#getAndClearMetadataException()Lorg/apache/kafka/common/KafkaException;
-#maybeThrowException()V
@2.4.1
+#bootstrap(Ljava/util/List;)V
+#failedUpdate(J)V
+#fatalError(Lorg/apache/kafka/common/KafkaException;)V
-#bootstrap(Ljava/util/List;J)V
-#failedUpdate(JLorg/apache/kafka/common/KafkaException;)V
@2.5.0
+#requestUpdateForNewTopics()I
+#currentLeader(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;
+#updateWithCurrentRequestVersion(Lorg/apache/kafka/common/requests/MetadataResponse;ZJ)V
+#update(ILorg/apache/kafka/common/requests/MetadataResponse;ZJ)V
+#newMetadataRequestAndVersion(J)Lorg/apache/kafka/clients/Metadata$MetadataRequestAndVersion;
-#partitionInfoIfCurrent(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Optional;
-#update(Lorg/apache/kafka/common/requests/MetadataResponse;J)V
-#update(ILorg/apache/kafka/common/requests/MetadataResponse;J)V
-#requestUpdateForNewTopics()V
-#newMetadataRequestAndVersion()Lorg/apache/kafka/clients/Metadata$MetadataRequestAndVersion;
-#leaderAndEpoch(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;
@2.6.0
-#maybeThrowFatalException()V
@2.8.2
+#topicId(Ljava/lang/String;)Lorg/apache/kafka/common/Uuid;
@3.1.0
+#topicIds()Ljava/util/Map;
-#topicId(Ljava/lang/String;)Lorg/apache/kafka/common/Uuid;

+###org/apache/kafka/clients/NetworkClient
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/producer/internals/Metadata;Ljava/lang/String;IJII)V
+#ready(Lorg/apache/kafka/common/Node;J)Z
+#isReady(Lorg/apache/kafka/common/Node;J)Z
+#poll(Ljava/util/List;JJ)Ljava/util/List;
+#inFlightRequestCount()I
+#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/requests/RequestHeader;
+#wakeup()V
+#close()V
+#leastLoadedNode(J)Lorg/apache/kafka/common/Node;
@0.8.2.0
+#connectionDelay(Lorg/apache/kafka/common/Node;J)J
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;)V
+#close(Ljava/lang/String;)V
+#connectionFailed(Lorg/apache/kafka/common/Node;)Z
+#send(Lorg/apache/kafka/clients/ClientRequest;J)V
+#poll(JJ)Ljava/util/List;
+#inFlightRequestCount(Ljava/lang/String;)I
+#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;S)Lorg/apache/kafka/common/requests/RequestHeader;
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/producer/internals/Metadata;Ljava/lang/String;IJII)V
-#poll(Ljava/util/List;JJ)Ljava/util/List;
@0.10.0.0
+#parseResponse(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/protocol/types/Struct;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;Z)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;Z)V
+#parseResponse(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZ)Lorg/apache/kafka/clients/ClientRequest;
+#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZLorg/apache/kafka/clients/RequestCompletionHandler;)Lorg/apache/kafka/clients/ClientRequest;
+#discoverBrokerVersions()Z
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;)V
-#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/requests/RequestHeader;
-#nextRequestHeader(Lorg/apache/kafka/common/protocol/ApiKeys;S)Lorg/apache/kafka/common/requests/RequestHeader;
-#parseResponse(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/protocol/types/Struct;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;)V
+#disconnect(Ljava/lang/String;)V
+#hasInFlightRequests()Z
+#hasInFlightRequests(Ljava/lang/String;)Z
+#hasReadyNodes()Z
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;Z)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJIIILorg/apache/kafka/common/utils/Time;Z)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
+#authenticationException(Lorg/apache/kafka/common/Node;)Lorg/apache/kafka/common/errors/AuthenticationException;
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;)V
@2.0.0
+#throttleDelayMs(Lorg/apache/kafka/common/Node;J)J
+#pollDelayMs(Lorg/apache/kafka/common/Node;J)J
+#hasReadyNodes(J)Z
+#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZILorg/apache/kafka/clients/RequestCompletionHandler;)Lorg/apache/kafka/clients/ClientRequest;
-#hasReadyNodes()Z
-#newClientRequest(Ljava/lang/String;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JZLorg/apache/kafka/clients/RequestCompletionHandler;)Lorg/apache/kafka/clients/ClientRequest;
@2.1.0
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
+#initiateClose()V
+#active()Z
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIILorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
@2.6.2
+#<init>(Lorg/apache/kafka/clients/MetadataUpdater;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/network/Selectable;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/HostResolver;)V
@2.7.0
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/clients/MetadataUpdater;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/network/Selectable;Ljava/lang/String;IJJIIILorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/HostResolver;)V
@2.7.1
+#<init>(Lorg/apache/kafka/clients/MetadataUpdater;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/network/Selectable;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/HostResolver;)V
@3.0.0
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(Lorg/apache/kafka/clients/MetadataUpdater;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/network/Selectable;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/HostResolver;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/Metadata;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/common/network/Selectable;Lorg/apache/kafka/clients/MetadataUpdater;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(Lorg/apache/kafka/clients/MetadataUpdater;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/common/network/Selectable;Ljava/lang/String;IJJIIIJJLorg/apache/kafka/clients/ClientDnsLookup;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Sensor;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/HostResolver;)V

+###org/apache/kafka/clients/NetworkClientUtils
@0.11.0.0
+#<init>()V
+#isReady(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/common/Node;J)Z
+#awaitReady(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/common/Node;Lorg/apache/kafka/common/utils/Time;J)Z
+#sendAndReceive(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/ClientRequest;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/clients/ClientResponse;
@1.1.0
-#<init>()V

+###org/apache/kafka/clients/NodeApiVersions
@0.10.2.0
+#create()Lorg/apache/kafka/clients/NodeApiVersions;
+#create(Ljava/util/Collection;)Lorg/apache/kafka/clients/NodeApiVersions;
+#<init>(Ljava/util/Collection;)V
+#usableVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)S
+#toString()Ljava/lang/String;
+#toString(Z)Ljava/lang/String;
+#apiVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/requests/ApiVersionsResponse$ApiVersion;
@0.11.0.0
+#usableVersion(Lorg/apache/kafka/common/protocol/ApiKeys;Ljava/lang/Short;)S
@1.0.0
+#latestUsableVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)S
+#latestUsableVersion(Lorg/apache/kafka/common/protocol/ApiKeys;SS)S
-#usableVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)S
-#usableVersion(Lorg/apache/kafka/common/protocol/ApiKeys;Ljava/lang/Short;)S
@2.4.0
+#create(SSS)Lorg/apache/kafka/clients/NodeApiVersions;
+#<init>(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;)V
+#apiVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/clients/ApiVersion;
-#apiVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/requests/ApiVersionsResponse$ApiVersion;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;)V
+#apiVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#allSupportedApiVersions()Ljava/util/Map;
-#<init>(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;)V
-#apiVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/clients/ApiVersion;
@3.3.0
+#<init>(Ljava/util/Collection;Ljava/util/Collection;)V
+#supportedFeatures()Ljava/util/Map;
-#<init>(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;)V
-#<init>(Ljava/util/Collection;)V

+###org/apache/kafka/clients/producer/BufferExhaustedException
@0.8.2-beta
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/clients/producer/Callback
@0.8.2-beta
+#onCompletion(Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V

+###org/apache/kafka/clients/producer/internals/BufferPool
@0.8.2-beta
+#<init>(JIZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
+#allocate(I)Ljava/nio/ByteBuffer;
+#deallocate(Ljava/nio/ByteBuffer;I)V
+#deallocate(Ljava/nio/ByteBuffer;)V
+#availableMemory()J
+#unallocatedMemory()J
+#queued()I
+#poolableSize()I
+#totalMemory()J
@0.8.2.0
+#<init>(JIZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;)V
-#<init>(JIZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
@0.9.0.0
+#<init>(JILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;)V
+#allocate(IJ)Ljava/nio/ByteBuffer;
-#<init>(JIZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;)V
-#allocate(I)Ljava/nio/ByteBuffer;
@0.10.0.0
+#<init>(JILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;)V
-#<init>(JILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;)V
@2.4.1
+#close()V

+###org/apache/kafka/clients/producer/internals/DefaultPartitioner
@0.9.0.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#partition(Ljava/lang/String;Ljava/lang/Object;[BLjava/lang/Object;[BLorg/apache/kafka/common/Cluster;)I
+#close()V
@2.4.0
+#onNewBatch(Ljava/lang/String;Lorg/apache/kafka/common/Cluster;I)V
@2.6.0
+#partition(Ljava/lang/String;Ljava/lang/Object;[BLjava/lang/Object;[BLorg/apache/kafka/common/Cluster;I)I

+###org/apache/kafka/clients/producer/internals/ErrorLoggingCallback
@0.8.2-beta
+#<init>(Ljava/lang/String;[B[BZ)V
+#onCompletion(Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V

+###org/apache/kafka/clients/producer/internals/FutureRecordMetadata
@0.8.2-beta
+#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;J)V
+#cancel(Z)Z
+#get()Lorg/apache/kafka/clients/producer/RecordMetadata;
+#get(JLjava/util/concurrent/TimeUnit;)Lorg/apache/kafka/clients/producer/RecordMetadata;
+#relativeOffset()J
+#isCancelled()Z
+#isDone()Z
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#get()Ljava/lang/Object;
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;JJJII)V
+#timestamp()J
+#checksum()J
+#serializedKeySize()I
+#serializedValueSize()I
-#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;J)V
@0.10.2.0
-#relativeOffset()J
-#timestamp()J
-#checksum()J
-#serializedKeySize()I
-#serializedValueSize()I
@0.11.0.0
+#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;JJLjava/lang/Long;II)V
-#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;JJJII)V
@2.1.0
+#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;JJLjava/lang/Long;IILorg/apache/kafka/common/utils/Time;)V
-#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;JJLjava/lang/Long;II)V
@3.0.0
+#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;IJIILorg/apache/kafka/common/utils/Time;)V
-#<init>(Lorg/apache/kafka/clients/producer/internals/ProduceRequestResult;JJLjava/lang/Long;IILorg/apache/kafka/common/utils/Time;)V

+###org/apache/kafka/clients/producer/internals/ProducerBatch
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecordsBuilder;J)V
+#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecordsBuilder;JZ)V
+#tryAppend(J[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;
+#abort(Ljava/lang/RuntimeException;)V
+#done(JJLjava/lang/RuntimeException;)V
+#split(I)Ljava/util/Deque;
+#isCompressed()Z
+#toString()Ljava/lang/String;
+#inRetry()Z
+#records()Lorg/apache/kafka/common/record/MemoryRecords;
+#sizeInBytes()I
+#compressionRatio()D
+#isFull()Z
+#setProducerState(Lorg/apache/kafka/clients/producer/internals/ProducerIdAndEpoch;IZ)V
+#closeForRecordAppends()V
+#close()V
+#abortRecordAppends()V
+#isClosed()Z
+#buffer()Ljava/nio/ByteBuffer;
+#initialCapacity()I
+#isWritable()Z
+#magic()B
+#producerId()J
+#producerEpoch()S
@1.0.0
+#done(JJLjava/lang/RuntimeException;)Z
+#estimatedSizeInBytes()I
+#resetProducerState(Lorg/apache/kafka/clients/producer/internals/ProducerIdAndEpoch;IZ)V
+#baseSequence()I
+#hasSequence()Z
+#isTransactional()Z
+#sequenceHasBeenReset()Z
-#done(JJLjava/lang/RuntimeException;)V
-#sizeInBytes()I
@2.1.0
+#isDone()Z
+#finalState()Lorg/apache/kafka/clients/producer/internals/ProducerBatch$FinalState;
@2.5.0
+#setProducerState(Lorg/apache/kafka/common/utils/ProducerIdAndEpoch;IZ)V
+#resetProducerState(Lorg/apache/kafka/common/utils/ProducerIdAndEpoch;IZ)V
+#lastSequence()I
-#setProducerState(Lorg/apache/kafka/clients/producer/internals/ProducerIdAndEpoch;IZ)V
-#resetProducerState(Lorg/apache/kafka/clients/producer/internals/ProducerIdAndEpoch;IZ)V
@3.0.0
+#complete(JJ)Z
+#completeExceptionally(Ljava/lang/RuntimeException;Ljava/util/function/Function;)Z
-#done(JJLjava/lang/RuntimeException;)Z

+###org/apache/kafka/clients/producer/internals/ProduceRequestResult
@0.8.2-beta
+#<init>()V
+#done(Lorg/apache/kafka/common/TopicPartition;JLjava/lang/RuntimeException;)V
+#await()V
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#baseOffset()J
+#error()Ljava/lang/RuntimeException;
+#topicPartition()Lorg/apache/kafka/common/TopicPartition;
+#completed()Z
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;)V
+#set(JJLjava/lang/RuntimeException;)V
+#done()V
+#hasLogAppendTime()Z
+#logAppendTime()J
-#<init>()V
-#done(Lorg/apache/kafka/common/TopicPartition;JLjava/lang/RuntimeException;)V
@3.0.0
+#set(JJLjava/util/function/Function;)V
+#error(I)Ljava/lang/RuntimeException;
-#set(JJLjava/lang/RuntimeException;)V
-#error()Ljava/lang/RuntimeException;

+###org/apache/kafka/clients/producer/internals/ProducerInterceptors
@0.10.0.0
+#<init>(Ljava/util/List;)V
+#onSend(Lorg/apache/kafka/clients/producer/ProducerRecord;)Lorg/apache/kafka/clients/producer/ProducerRecord;
+#onAcknowledgement(Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V
+#onSendError(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Exception;)V
+#close()V
@3.0.1
+#extractTopicPartition(Lorg/apache/kafka/clients/producer/ProducerRecord;)Lorg/apache/kafka/common/TopicPartition;
@3.1.0
-#extractTopicPartition(Lorg/apache/kafka/clients/producer/ProducerRecord;)Lorg/apache/kafka/common/TopicPartition;
@3.1.1
+#extractTopicPartition(Lorg/apache/kafka/clients/producer/ProducerRecord;)Lorg/apache/kafka/common/TopicPartition;

+###org/apache/kafka/clients/producer/internals/ProducerMetrics
@1.0.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;)V
+#main([Ljava/lang/String;)V

+###org/apache/kafka/clients/producer/internals/RecordAccumulator$ReadyCheckResult
@0.8.2-beta
+#<init>(Ljava/util/Set;JZ)V
@0.10.1.0
+#<init>(Ljava/util/Set;JLjava/util/Set;)V
-#<init>(Ljava/util/Set;JZ)V

+###org/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult
@0.8.2-beta
+#<init>(Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;ZZ)V
@2.4.0
+#<init>(Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;ZZZ)V
-#<init>(Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;ZZ)V
@3.3.0
+#<init>(Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;ZZZI)V
-#<init>(Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;ZZZ)V

+###org/apache/kafka/clients/producer/internals/RecordAccumulator
@0.8.2-beta
+#<init>(IJJJZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
+#append(Lorg/apache/kafka/common/TopicPartition;[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/clients/producer/Callback;)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
+#reenqueue(Lorg/apache/kafka/clients/producer/internals/RecordBatch;J)V
+#ready(Lorg/apache/kafka/common/Cluster;J)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$ReadyCheckResult;
+#hasUnsent()Z
+#drain(Lorg/apache/kafka/common/Cluster;Ljava/util/Set;IJ)Ljava/util/Map;
+#deallocate(Lorg/apache/kafka/clients/producer/internals/RecordBatch;)V
+#close()V
@0.8.2.0
+#<init>(IJJJZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/util/Map;)V
-#<init>(IJJJZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
@0.9.0.0
+#<init>(IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/util/Map;)V
+#append(Lorg/apache/kafka/common/TopicPartition;[B[BLorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
+#abortExpiredBatches(ILorg/apache/kafka/common/Cluster;J)Ljava/util/List;
+#beginFlush()V
+#awaitFlushCompletion()V
+#abortIncompleteBatches()V
-#<init>(IJJJZLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/util/Map;)V
-#append(Lorg/apache/kafka/common/TopicPartition;[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/clients/producer/Callback;)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
@0.10.0.0
+#<init>(IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
+#append(Lorg/apache/kafka/common/TopicPartition;J[B[BLorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
+#abortExpiredBatches(IJ)Ljava/util/List;
+#mutePartition(Lorg/apache/kafka/common/TopicPartition;)V
+#unmutePartition(Lorg/apache/kafka/common/TopicPartition;)V
-#<init>(IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/util/Map;)V
-#append(Lorg/apache/kafka/common/TopicPartition;[B[BLorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
-#abortExpiredBatches(ILorg/apache/kafka/common/Cluster;J)Ljava/util/List;
@0.11.0.0
+#<init>(IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;)V
+#append(Lorg/apache/kafka/common/TopicPartition;J[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
+#expiredBatches(IJ)Ljava/util/List;
+#reenqueue(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;J)V
+#splitAndReenqueue(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;)I
+#hasUndrained()Z
+#deallocate(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;)V
+#hasIncomplete()Z
-#<init>(IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
-#append(Lorg/apache/kafka/common/TopicPartition;J[B[BLorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
-#abortExpiredBatches(IJ)Ljava/util/List;
-#reenqueue(Lorg/apache/kafka/clients/producer/internals/RecordBatch;J)V
-#hasUnsent()Z
-#deallocate(Lorg/apache/kafka/clients/producer/internals/RecordBatch;)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;)V
-#<init>(IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;)V
@2.0.0
+#unmutePartition(Lorg/apache/kafka/common/TopicPartition;J)V
-#unmutePartition(Lorg/apache/kafka/common/TopicPartition;)V
@2.1.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;ILorg/apache/kafka/common/record/CompressionType;JJJLorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/producer/internals/BufferPool;)V
+#resetNextBatchExpiryTime()V
+#maybeUpdateNextBatchExpiryTime(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;)V
+#expiredBatches(J)Ljava/util/List;
+#getDeliveryTimeoutMs()J
+#nextExpiryTimeMs()Ljava/lang/Long;
-#<init>(Lorg/apache/kafka/common/utils/LogContext;IJLorg/apache/kafka/common/record/CompressionType;JJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;)V
-#expiredBatches(IJ)Ljava/util/List;
@2.2.1
+#<init>(Lorg/apache/kafka/common/utils/LogContext;ILorg/apache/kafka/common/record/CompressionType;IJILorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/producer/internals/BufferPool;)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;ILorg/apache/kafka/common/record/CompressionType;JJJLorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/producer/internals/BufferPool;)V
@2.4.0
+#append(Lorg/apache/kafka/common/TopicPartition;J[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/Callback;JZ)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
-#append(Lorg/apache/kafka/common/TopicPartition;J[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
@2.5.0
+#append(Lorg/apache/kafka/common/TopicPartition;J[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/Callback;JZJ)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
-#append(Lorg/apache/kafka/common/TopicPartition;J[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/Callback;JZ)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
@2.6.0
+#nextExpiryTimeMs()J
+#unmutePartition(Lorg/apache/kafka/common/TopicPartition;)V
-#nextExpiryTimeMs()Ljava/lang/Long;
-#unmutePartition(Lorg/apache/kafka/common/TopicPartition;J)V
@3.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;ILorg/apache/kafka/common/record/CompressionType;IJILorg/apache/kafka/clients/producer/internals/RecordAccumulator$PartitionerConfig;Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/producer/internals/BufferPool;)V
+#append(Ljava/lang/String;IJ[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$AppendCallbacks;JZJLorg/apache/kafka/common/Cluster;)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;
+#updateNodeLatencyStats(Ljava/lang/Integer;JZ)V
+#getNodeLatencyStats(Ljava/lang/Integer;)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$NodeLatencyStats;
+#getBuiltInPartitioner(Ljava/lang/String;)Lorg/apache/kafka/clients/producer/internals/BuiltInPartitioner;
+#getDeque(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Deque;
-#append(Lorg/apache/kafka/common/TopicPartition;J[B[B[Lorg/apache/kafka/common/header/Header;Lorg/apache/kafka/clients/producer/Callback;JZJ)Lorg/apache/kafka/clients/producer/internals/RecordAccumulator$RecordAppendResult;

+###org/apache/kafka/clients/producer/internals/Sender
@0.8.2-beta
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ISIILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
+#run()V
+#run(J)V
+#initiateClose()V
+#wakeup()V
@0.8.2.0
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ISIILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ISIILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
@0.9.0.0
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;I)V
+#forceClose()V
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ISIILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;)V
@0.10.0.0
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;I)V
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;I)V
-#run(J)V
@0.10.2.0
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;I)V
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;I)V
@0.11.0.0
+#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;IJLorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/ApiVersions;)V
+#throttleTimeSensor(Lorg/apache/kafka/common/metrics/Metrics;)Lorg/apache/kafka/common/metrics/Sensor;
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;I)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/clients/producer/internals/SenderMetricsRegistry;Lorg/apache/kafka/common/utils/Time;IJLorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/ApiVersions;)V
+#throttleTimeSensor(Lorg/apache/kafka/clients/producer/internals/SenderMetricsRegistry;)Lorg/apache/kafka/common/metrics/Sensor;
-#<init>(Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;IJLorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/ApiVersions;)V
-#throttleTimeSensor(Lorg/apache/kafka/common/metrics/Metrics;)Lorg/apache/kafka/common/metrics/Sensor;
@2.1.0
+#inFlightBatches(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/List;
+#maybeRemoveFromInflightBatches(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;)V
+#addToInflightBatches(Ljava/util/Map;)V
@2.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/producer/internals/ProducerMetadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/clients/producer/internals/SenderMetricsRegistry;Lorg/apache/kafka/common/utils/Time;IJLorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/ApiVersions;)V
+#isRunning()Z
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/KafkaClient;Lorg/apache/kafka/clients/Metadata;Lorg/apache/kafka/clients/producer/internals/RecordAccumulator;ZISILorg/apache/kafka/clients/producer/internals/SenderMetricsRegistry;Lorg/apache/kafka/common/utils/Time;IJLorg/apache/kafka/clients/producer/internals/TransactionManager;Lorg/apache/kafka/clients/ApiVersions;)V
@2.3.1
-#maybeRemoveFromInflightBatches(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;)V

+###org/apache/kafka/clients/producer/internals/SenderMetricsRegistry
@1.0.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;)V
+#topicRecordSendRate(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicRecordSendTotal(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicByteRate(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicByteTotal(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicCompressionRate(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicRecordRetryRate(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicRecordRetryTotal(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicRecordErrorRate(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#topicRecordErrorTotal(Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#allTemplates()Ljava/util/List;
+#sensor(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#addMetric(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/Measurable;)V
+#getSensor(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;

+###org/apache/kafka/clients/producer/internals/TransactionalRequestResult
@0.11.0.0
+#<init>()V
+#setError(Ljava/lang/RuntimeException;)V
+#done()V
+#await()V
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#error()Ljava/lang/RuntimeException;
+#isSuccessful()Z
+#isCompleted()Z
@2.3.0
+#<init>(Ljava/lang/String;)V
+#await(JLjava/util/concurrent/TimeUnit;)V
-#<init>()V
-#await(JLjava/util/concurrent/TimeUnit;)Z
@2.5.0
+#fail(Ljava/lang/RuntimeException;)V
-#setError(Ljava/lang/RuntimeException;)V
@3.1.1
+#isAcked()Z

+###org/apache/kafka/clients/producer/internals/TransactionManager
@0.11.0.0
+#<init>(Ljava/lang/String;IJ)V
+#initializeTransactions()Lorg/apache/kafka/clients/producer/internals/TransactionalRequestResult;
+#beginTransaction()V
+#beginCommit()Lorg/apache/kafka/clients/producer/internals/TransactionalRequestResult;
+#beginAbort()Lorg/apache/kafka/clients/producer/internals/TransactionalRequestResult;
+#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)Lorg/apache/kafka/clients/producer/internals/TransactionalRequestResult;
+#maybeAddPartitionToTransaction(Lorg/apache/kafka/common/TopicPartition;)V
+#failIfNotReadyForSend()V
+#transactionalId()Ljava/lang/String;
+#hasProducerId()Z
+#isTransactional()Z
@1.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;IJ)V
-#<init>(Ljava/lang/String;IJ)V
@2.3.0
+#handleCompletedBatch(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;Lorg/apache/kafka/common/requests/ProduceResponse$PartitionResponse;)V
+#handleFailedBatch(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;Ljava/lang/RuntimeException;Z)V
-#failIfNotReadyForSend()V
@2.4.0
+#failIfNotReadyForSend()V
@2.5.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;IJLorg/apache/kafka/clients/ApiVersions;)V
+#sendOffsetsToTransaction(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)Lorg/apache/kafka/clients/producer/internals/TransactionalRequestResult;
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;IJ)V
-#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)Lorg/apache/kafka/clients/producer/internals/TransactionalRequestResult;
-#handleFailedBatch(Lorg/apache/kafka/clients/producer/internals/ProducerBatch;Ljava/lang/RuntimeException;Z)V
@2.6.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;IJLorg/apache/kafka/clients/ApiVersions;Z)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;IJLorg/apache/kafka/clients/ApiVersions;)V
@2.7.1
+#maybeUpdateProducerIdAndEpoch(Lorg/apache/kafka/common/TopicPartition;)V
@3.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;IJLorg/apache/kafka/clients/ApiVersions;)V
-#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;IJLorg/apache/kafka/clients/ApiVersions;Z)V
@3.1.1
+#maybeAddPartition(Lorg/apache/kafka/common/TopicPartition;)V
-#maybeAddPartitionToTransaction(Lorg/apache/kafka/common/TopicPartition;)V
-#failIfNotReadyForSend()V
@3.2.0
+#maybeTransitionToErrorState(Ljava/lang/RuntimeException;)V

+###org/apache/kafka/clients/producer/KafkaProducer
@0.8.2-beta
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Properties;)V
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;)Ljava/util/concurrent/Future;
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/clients/producer/Callback;)Ljava/util/concurrent/Future;
+#partitionsFor(Ljava/lang/String;)Ljava/util/List;
+#metrics()Ljava/util/Map;
+#close()V
@0.8.2.0
+#<init>(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#<init>(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
@0.9.0.0
+#flush()V
+#close(JLjava/util/concurrent/TimeUnit;)V
@0.11.0.0
+#initTransactions()V
+#beginTransaction()V
+#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)V
+#commitTransaction()V
+#abortTransaction()V
@2.2.0
+#close(Ljava/time/Duration;)V
-#close(JLjava/util/concurrent/TimeUnit;)V
@2.5.0
+#sendOffsetsToTransaction(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
@3.0.0
*#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)V[deprecated]

+###org/apache/kafka/clients/producer/MockProducer
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/Cluster;Z)V
+#<init>(Z)V
+#<init>()V
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;)Ljava/util/concurrent/Future;
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/clients/producer/Callback;)Ljava/util/concurrent/Future;
+#partitionsFor(Ljava/lang/String;)Ljava/util/List;
+#metrics()Ljava/util/Map;
+#close()V
+#history()Ljava/util/List;
+#clear()V
+#completeNext()Z
+#errorNext(Ljava/lang/RuntimeException;)Z
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/Cluster;ZLorg/apache/kafka/clients/producer/Partitioner;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#<init>(ZLorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#<init>(ZLorg/apache/kafka/clients/producer/Partitioner;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
+#flush()V
+#close(JLjava/util/concurrent/TimeUnit;)V
-#<init>(Lorg/apache/kafka/common/Cluster;Z)V
-#<init>(Z)V
-#<init>()V
@0.11.0.0
+#<init>()V
+#initTransactions()V
+#beginTransaction()V
+#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)V
+#commitTransaction()V
+#abortTransaction()V
+#closed()Z
+#fenceProducer()V
+#transactionInitialized()Z
+#transactionInFlight()Z
+#transactionCommitted()Z
+#transactionAborted()Z
+#flushed()Z
+#sentOffsets()Z
+#commitCount()J
+#consumerGroupOffsetsHistory()Ljava/util/List;
@2.0.0
+#setMockMetrics(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/Metric;)V
@2.0.1
+#fenceProducerOnClose()V
@2.2.0
+#close(Ljava/time/Duration;)V
-#close(JLjava/util/concurrent/TimeUnit;)V
@2.5.0
+#sendOffsetsToTransaction(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
@2.6.0
+#uncommittedRecords()Ljava/util/List;
+#uncommittedOffsets()Ljava/util/Map;
-#fenceProducerOnClose()V
@3.0.0
*#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)V[deprecated]
@3.3.0
+#<init>(Lorg/apache/kafka/common/Cluster;ZLorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V

+###org/apache/kafka/clients/producer/Partitioner
@0.9.0.0
+#partition(Ljava/lang/String;Ljava/lang/Object;[BLjava/lang/Object;[BLorg/apache/kafka/common/Cluster;)I
+#close()V
@2.4.0
+#onNewBatch(Ljava/lang/String;Lorg/apache/kafka/common/Cluster;I)V
@3.3.0
*#onNewBatch(Ljava/lang/String;Lorg/apache/kafka/common/Cluster;I)V[deprecated]

+###org/apache/kafka/clients/producer/Producer
@0.8.2-beta
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;)Ljava/util/concurrent/Future;
+#send(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/clients/producer/Callback;)Ljava/util/concurrent/Future;
+#partitionsFor(Ljava/lang/String;)Ljava/util/List;
+#metrics()Ljava/util/Map;
+#close()V
@0.9.0.0
+#flush()V
+#close(JLjava/util/concurrent/TimeUnit;)V
@0.11.0.0
+#initTransactions()V
+#beginTransaction()V
+#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)V
+#commitTransaction()V
+#abortTransaction()V
@2.2.0
*#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#close(Ljava/time/Duration;)V
@2.5.0
+#sendOffsetsToTransaction(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
@3.0.0
*#sendOffsetsToTransaction(Ljava/util/Map;Ljava/lang/String;)V[deprecated]
-#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]

+###org/apache/kafka/clients/producer/ProducerConfig
@0.8.2-beta
+#main([Ljava/lang/String;)V
@0.9.0.0
+#addSerializerToConfig(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Ljava/util/Map;
+#addSerializerToConfig(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Ljava/util/Properties;
@0.10.1.0
+#configNames()Ljava/util/Set;
@1.1.0
+#<init>(Ljava/util/Properties;)V
+#<init>(Ljava/util/Map;)V
@2.3.0
+#configDef()Lorg/apache/kafka/common/config/ConfigDef;
@2.7.0
*#addSerializerToConfig(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Ljava/util/Map;[deprecated]
*#addSerializerToConfig(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Ljava/util/Properties;[deprecated]
@3.0.0
-#addSerializerToConfig(Ljava/util/Map;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Ljava/util/Map;[deprecated]
-#addSerializerToConfig(Ljava/util/Properties;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)Ljava/util/Properties;[deprecated]

+###org/apache/kafka/clients/producer/ProducerInterceptor
@0.10.0.0
+#onSend(Lorg/apache/kafka/clients/producer/ProducerRecord;)Lorg/apache/kafka/clients/producer/ProducerRecord;
+#onAcknowledgement(Lorg/apache/kafka/clients/producer/RecordMetadata;Ljava/lang/Exception;)V
+#close()V

+###org/apache/kafka/clients/producer/ProducerRecord
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/lang/Integer;[B[B)V
+#<init>(Ljava/lang/String;[B[B)V
+#<init>(Ljava/lang/String;[B)V
+#topic()Ljava/lang/String;
+#key()[B
+#value()[B
+#partition()Ljava/lang/Integer;
+#toString()Ljava/lang/String;
@0.8.2.0
+#<init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#key()Ljava/lang/Object;
+#value()Ljava/lang/Object;
-#<init>(Ljava/lang/String;Ljava/lang/Integer;[B[B)V
-#<init>(Ljava/lang/String;[B[B)V
-#<init>(Ljava/lang/String;[B)V
-#key()[B
-#value()[B
@0.9.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Object;)V
+#timestamp()Ljava/lang/Long;
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Iterable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Iterable;)V
+#headers()Lorg/apache/kafka/common/header/Headers;

+###org/apache/kafka/clients/producer/RecordMetadata
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/TopicPartition;JJ)V
+#offset()J
+#topic()Ljava/lang/String;
+#partition()I
@0.10.0.0
*#<init>(Lorg/apache/kafka/common/TopicPartition;JJ)V[deprecated]
+#<init>(Lorg/apache/kafka/common/TopicPartition;JJJJII)V
+#timestamp()J
+#checksum()J
+#serializedKeySize()I
+#serializedValueSize()I
+#toString()Ljava/lang/String;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;JJJLjava/lang/Long;II)V
*#<init>(Lorg/apache/kafka/common/TopicPartition;JJJJII)V[deprecated]
*#checksum()J[deprecated]
-#<init>(Lorg/apache/kafka/common/TopicPartition;JJ)V[deprecated]
@1.0.0
+#hasOffset()Z
+#hasTimestamp()Z
@2.0.0
-#<init>(Lorg/apache/kafka/common/TopicPartition;JJJJII)V[deprecated]
@3.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;JIJII)V
*#<init>(Lorg/apache/kafka/common/TopicPartition;JJJLjava/lang/Long;II)V[deprecated]
-#checksum()J[deprecated]

+###org/apache/kafka/clients/RequestCompletionHandler
@0.9.0.0
+#onComplete(Lorg/apache/kafka/clients/ClientResponse;)V

+###org/apache/kafka/common/acl/AccessControlEntry
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/acl/AclOperation;Lorg/apache/kafka/common/acl/AclPermissionType;)V
+#principal()Ljava/lang/String;
+#host()Ljava/lang/String;
+#operation()Lorg/apache/kafka/common/acl/AclOperation;
+#permissionType()Lorg/apache/kafka/common/acl/AclPermissionType;
+#toFilter()Lorg/apache/kafka/common/acl/AccessControlEntryFilter;
+#toString()Ljava/lang/String;
+#isUnknown()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/acl/AccessControlEntryFilter
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/acl/AclOperation;Lorg/apache/kafka/common/acl/AclPermissionType;)V
+#principal()Ljava/lang/String;
+#host()Ljava/lang/String;
+#operation()Lorg/apache/kafka/common/acl/AclOperation;
+#permissionType()Lorg/apache/kafka/common/acl/AclPermissionType;
+#toString()Ljava/lang/String;
+#isUnknown()Z
+#matches(Lorg/apache/kafka/common/acl/AccessControlEntry;)Z
+#matchesAtMostOne()Z
+#findIndefiniteField()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/acl/AclBinding
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/resource/Resource;Lorg/apache/kafka/common/acl/AccessControlEntry;)V
+#isUnknown()Z
+#resource()Lorg/apache/kafka/common/resource/Resource;
+#entry()Lorg/apache/kafka/common/acl/AccessControlEntry;
+#toFilter()Lorg/apache/kafka/common/acl/AclBindingFilter;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0
+#<init>(Lorg/apache/kafka/common/resource/ResourcePattern;Lorg/apache/kafka/common/acl/AccessControlEntry;)V
*#<init>(Lorg/apache/kafka/common/resource/Resource;Lorg/apache/kafka/common/acl/AccessControlEntry;)V[deprecated]
+#pattern()Lorg/apache/kafka/common/resource/ResourcePattern;
-#resource()Lorg/apache/kafka/common/resource/Resource;
@3.0.0
-#<init>(Lorg/apache/kafka/common/resource/Resource;Lorg/apache/kafka/common/acl/AccessControlEntry;)V[deprecated]

+###org/apache/kafka/common/acl/AclBindingFilter
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/resource/ResourceFilter;Lorg/apache/kafka/common/acl/AccessControlEntryFilter;)V
+#isUnknown()Z
+#resourceFilter()Lorg/apache/kafka/common/resource/ResourceFilter;
+#entryFilter()Lorg/apache/kafka/common/acl/AccessControlEntryFilter;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#matchesAtMostOne()Z
+#findIndefiniteField()Ljava/lang/String;
+#matches(Lorg/apache/kafka/common/acl/AclBinding;)Z
+#hashCode()I
@2.0.0
+#<init>(Lorg/apache/kafka/common/resource/ResourcePatternFilter;Lorg/apache/kafka/common/acl/AccessControlEntryFilter;)V
*#<init>(Lorg/apache/kafka/common/resource/ResourceFilter;Lorg/apache/kafka/common/acl/AccessControlEntryFilter;)V[deprecated]
+#patternFilter()Lorg/apache/kafka/common/resource/ResourcePatternFilter;
-#resourceFilter()Lorg/apache/kafka/common/resource/ResourceFilter;
@3.0.0
-#<init>(Lorg/apache/kafka/common/resource/ResourceFilter;Lorg/apache/kafka/common/acl/AccessControlEntryFilter;)V[deprecated]

+###org/apache/kafka/common/acl/AclOperation
@0.11.0.0
+#values()[Lorg/apache/kafka/common/acl/AclOperation;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/acl/AclOperation;
+#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/acl/AclOperation;
+#fromCode(B)Lorg/apache/kafka/common/acl/AclOperation;
+#code()B
+#isUnknown()Z

+###org/apache/kafka/common/acl/AclPermissionType
@0.11.0.0
+#values()[Lorg/apache/kafka/common/acl/AclPermissionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/acl/AclPermissionType;
+#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/acl/AclPermissionType;
+#fromCode(B)Lorg/apache/kafka/common/acl/AclPermissionType;
+#code()B
+#isUnknown()Z

+###org/apache/kafka/common/annotation/InterfaceStability$Evolving
@0.9.0.0

+###org/apache/kafka/common/annotation/InterfaceStability$Stable
@0.9.0.0

+###org/apache/kafka/common/annotation/InterfaceStability$Unstable
@0.9.0.0

+###org/apache/kafka/common/annotation/InterfaceStability
@0.9.0.0
+#<init>()V

+###org/apache/kafka/common/cache/Cache
@0.9.0.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)Z
+#size()J

+###org/apache/kafka/common/cache/LRUCache
@0.9.0.0
+#<init>(I)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)Z
+#size()J

+###org/apache/kafka/common/cache/SynchronizedCache
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/cache/Cache;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)Z
+#size()J

+###org/apache/kafka/common/Cluster
@0.8.2-beta
+#<init>(Ljava/util/Collection;Ljava/util/Collection;)V
+#empty()Lorg/apache/kafka/common/Cluster;
+#bootstrap(Ljava/util/List;)Lorg/apache/kafka/common/Cluster;
+#nodes()Ljava/util/List;
+#leaderFor(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/Node;
+#partition(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/PartitionInfo;
+#partitionsForTopic(Ljava/lang/String;)Ljava/util/List;
+#partitionsForNode(I)Ljava/util/List;
+#topics()Ljava/util/Set;
+#toString()Ljava/lang/String;
@0.8.2.1
+#availablePartitionsForTopic(Ljava/lang/String;)Ljava/util/List;
@0.9.0.0
+#<init>(Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;)V
+#nodeById(I)Lorg/apache/kafka/common/Node;
+#partitionCountForTopic(Ljava/lang/String;)Ljava/lang/Integer;
+#unauthorizedTopics()Ljava/util/Set;
-#<init>(Ljava/util/Collection;Ljava/util/Collection;)V
@0.10.0.0
+#withPartitions(Ljava/util/Map;)Lorg/apache/kafka/common/Cluster;
+#isBootstrapConfigured()Z
@0.10.1.0
*#<init>(Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;Ljava/util/Set;)V
+#internalTopics()Ljava/util/Set;
+#clusterResource()Lorg/apache/kafka/common/ClusterResource;
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/common/Node;)V
+#controller()Lorg/apache/kafka/common/Node;
-#<init>(Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;)V[deprecated]
@2.1.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/common/Node;)V
+#invalidTopics()Ljava/util/Set;
@2.2.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
+#nodeIfOnline(Lorg/apache/kafka/common/TopicPartition;I)Ljava/util/Optional;
@2.8.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lorg/apache/kafka/common/Node;Ljava/util/Map;)V
+#topicIds()Ljava/util/Collection;
+#topicId(Ljava/lang/String;)Lorg/apache/kafka/common/Uuid;
@3.1.0
+#topicName(Lorg/apache/kafka/common/Uuid;)Ljava/lang/String;

+###org/apache/kafka/common/ClusterResource
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#clusterId()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.2.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/ClusterResourceListener
@0.10.1.0
+#onUpdate(Lorg/apache/kafka/common/ClusterResource;)V

+###org/apache/kafka/common/config/AbstractConfig
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;)V
+#getInt(Ljava/lang/String;)I
+#getLong(Ljava/lang/String;)J
+#getDouble(Ljava/lang/String;)D
+#getList(Ljava/lang/String;)Ljava/util/List;
+#getBoolean(Ljava/lang/String;)Z
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getClass(Ljava/lang/String;)Ljava/lang/Class;
+#unused()Ljava/util/Set;
+#logUnused()V
+#getConfiguredInstance(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getConfiguredInstances(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
@0.8.2.0
+#originals()Ljava/util/Map;
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;Ljava/lang/Boolean;)V
+#ignore(Ljava/lang/String;)V
+#getShort(Ljava/lang/String;)Ljava/lang/Short;
+#getInt(Ljava/lang/String;)Ljava/lang/Integer;
+#getLong(Ljava/lang/String;)Ljava/lang/Long;
+#getDouble(Ljava/lang/String;)Ljava/lang/Double;
+#getPassword(Ljava/lang/String;)Lorg/apache/kafka/common/config/types/Password;
+#originalsStrings()Ljava/util/Map;
+#originalsWithPrefix(Ljava/lang/String;)Ljava/util/Map;
+#values()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#getInt(Ljava/lang/String;)I
-#getLong(Ljava/lang/String;)J
-#getDouble(Ljava/lang/String;)D
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;Z)V
+#<init>(Ljava/util/Map;)V
+#getBoolean(Ljava/lang/String;)Ljava/lang/Boolean;
-#<init>(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;Ljava/lang/Boolean;)V
-#getBoolean(Ljava/lang/String;)Z
@0.10.2.0
+#getConfiguredInstances(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/List;
@0.11.0.0
+#typeOf(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$Type;
+#valuesWithPrefixOverride(Ljava/lang/String;)Ljava/util/Map;
-#<init>(Ljava/util/Map;)V
@1.0.1
+#originalsWithPrefix(Ljava/lang/String;Z)Ljava/util/Map;
@1.1.0
+#valuesWithPrefixAllOrNothing(Ljava/lang/String;)Ljava/util/Map;
+#getConfiguredInstances(Ljava/util/List;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/List;
@2.3.0
+#<init>(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;Ljava/util/Map;Z)V
@2.6.0
+#documentationOf(Ljava/lang/String;)Ljava/lang/String;
@2.7.0
+#originals(Ljava/util/Map;)Ljava/util/Map;
@2.8.0
+#nonInternalValues()Ljava/util/Map;
+#getConfiguredInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;

+###org/apache/kafka/common/config/Config
@0.10.0.0
+#<init>(Ljava/util/List;)V
+#configValues()Ljava/util/List;

+###org/apache/kafka/common/config/ConfigDef$ConfigKey
@0.10.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)V
+#hasDefault()Z
@0.10.2.2
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/config/ConfigDef$Recommender;Z)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)V
@2.3.0
+#type()Lorg/apache/kafka/common/config/ConfigDef$Type;

+###org/apache/kafka/common/config/ConfigDef$Importance
@0.8.2-beta
+#values()[Lorg/apache/kafka/common/config/ConfigDef$Importance;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$Importance;

+###org/apache/kafka/common/config/ConfigDef$NonEmptyString
@0.11.0.0
+#<init>()V
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
@0.11.0.1
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/ConfigDef$Range
@0.8.2-beta
+#atLeast(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
+#between(Ljava/lang/Number;Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/ConfigDef$Recommender
@0.10.0.0
+#validValues(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;
+#visible(Ljava/lang/String;Ljava/util/Map;)Z

+###org/apache/kafka/common/config/ConfigDef$Type
@0.8.2-beta
+#values()[Lorg/apache/kafka/common/config/ConfigDef$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$Type;
@2.8.1
+#isSensitive()Z

+###org/apache/kafka/common/config/ConfigDef$Validator
@0.8.2-beta
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V

+###org/apache/kafka/common/config/ConfigDef$ValidList
@0.10.1.0
+#in([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidList;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/ConfigDef$ValidString
@0.8.2-beta
+#in(Ljava/util/List;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
@0.9.0.0
+#in([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
-#in(Ljava/util/List;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;

+###org/apache/kafka/common/config/ConfigDef$Width
@0.10.0.0
+#values()[Lorg/apache/kafka/common/config/ConfigDef$Width;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$Width;

+###org/apache/kafka/common/config/ConfigDef
@0.8.2-beta
+#<init>()V
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
+#parse(Ljava/util/Map;)Ljava/util/Map;
+#toHtmlTable()Ljava/lang/String;
@0.9.0.0
+#names()Ljava/util/Set;
+#withClientSslSupport()Lorg/apache/kafka/common/config/ConfigDef;
+#withClientSaslSupport()Lorg/apache/kafka/common/config/ConfigDef;
-#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
@0.10.0.0
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Ljava/util/List;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Recommender;)Lorg/apache/kafka/common/config/ConfigDef;
+#define(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
+#configKeys()Ljava/util/Map;
+#groups()Ljava/util/List;
+#validate(Ljava/util/Map;)Ljava/util/List;
+#convertToString(Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Type;)Ljava/lang/String;
+#toRst()Ljava/lang/String;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/config/ConfigDef;)V
+#define(Lorg/apache/kafka/common/config/ConfigDef$ConfigKey;)Lorg/apache/kafka/common/config/ConfigDef;
+#validateAll(Ljava/util/Map;)Ljava/util/Map;
+#parseType(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Type;)Ljava/lang/Object;
+#toEnrichedRst()Ljava/lang/String;
+#embed(Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef;)V
@0.10.2.2
+#defineInternal(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;)Lorg/apache/kafka/common/config/ConfigDef;
@1.1.0
+#defaultValues()Ljava/util/Map;
+#convertToStringMapWithPasswordValues(Ljava/util/Map;)Ljava/util/Map;
+#toHtmlTable(Ljava/util/Map;)Ljava/lang/String;
@2.4.0
+#toHtml()Ljava/lang/String;
+#toHtml(Ljava/util/Map;)Ljava/lang/String;
@2.6.0
+#toHtml(ILjava/util/function/Function;)Ljava/lang/String;
+#toHtml(ILjava/util/function/Function;Ljava/util/Map;)Ljava/lang/String;
@2.8.0
+#defineInternal(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;

+###org/apache/kafka/common/config/ConfigException
@0.8.2-beta
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V

+###org/apache/kafka/common/config/ConfigResource$Type
@0.11.0.0
+#values()[Lorg/apache/kafka/common/config/ConfigResource$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigResource$Type;
@2.0.0
+#id()B
+#forId(B)Lorg/apache/kafka/common/config/ConfigResource$Type;

+###org/apache/kafka/common/config/ConfigResource
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/config/ConfigResource$Type;Ljava/lang/String;)V
+#type()Lorg/apache/kafka/common/config/ConfigResource$Type;
+#name()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.1.0
+#isDefault()Z

+###org/apache/kafka/common/config/ConfigValue
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)V
+#name()Ljava/lang/String;
+#value()Ljava/lang/Object;
+#recommendedValues()Ljava/util/List;
+#errorMessages()Ljava/util/List;
+#visible()Z
+#value(Ljava/lang/Object;)V
+#recommendedValues(Ljava/util/List;)V
+#addErrorMessage(Ljava/lang/String;)V
+#visible(Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/internals/BrokerSecurityConfigs
@1.0.0
+#<init>()V

+###org/apache/kafka/common/config/SaslConfigs
@0.9.0.0
+#<init>()V
+#addClientSaslSupport(Lorg/apache/kafka/common/config/ConfigDef;)V

+###org/apache/kafka/common/config/SslConfigs
@0.9.0.0
+#<init>()V
+#addClientSslSupport(Lorg/apache/kafka/common/config/ConfigDef;)V

+###org/apache/kafka/common/config/TopicConfig
@0.11.0.0
+#<init>()V

+###org/apache/kafka/common/config/types/Password
@0.9.0.0
+#<init>(Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#value()Ljava/lang/String;

+###org/apache/kafka/common/Configurable
@0.8.2-beta
+#configure(Ljava/util/Map;)V

+###org/apache/kafka/common/errors/ApiException
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>()V
+#fillInStackTrace()Ljava/lang/Throwable;

+###org/apache/kafka/common/errors/AuthenticationException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.1.0
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/AuthorizationException
@0.9.0.0
+#<init>(Ljava/lang/String;)V
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/BrokerNotAvailableException
@0.9.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/ClusterAuthorizationException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/ConcurrentTransactionsException
@0.11.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/ControllerMovedException
@0.9.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/CoordinatorLoadInProgressException
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/CoordinatorNotAvailableException
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/CorruptRecordException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/DisconnectException
@0.9.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/DuplicateSequenceException
@1.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/GroupAuthorizationException
@0.9.0.0
+#<init>(Ljava/lang/String;)V
+#groupId()Ljava/lang/String;
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#forGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/errors/GroupAuthorizationException;

+###org/apache/kafka/common/errors/GroupCoordinatorNotAvailableException
@0.9.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@2.0.0
-###org/apache/kafka/common/errors/GroupCoordinatorNotAvailableException

+###org/apache/kafka/common/errors/GroupLoadInProgressException
@0.9.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@2.0.0
-###org/apache/kafka/common/errors/GroupLoadInProgressException

+###org/apache/kafka/common/errors/IllegalGenerationException
@0.9.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/IllegalSaslStateException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InconsistentGroupProtocolException
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InterruptException
@0.9.0.0
+#<init>(Ljava/lang/InterruptedException;)V
+#<init>(Ljava/lang/String;Ljava/lang/InterruptedException;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidCommitOffsetSizeException
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidConfigurationException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidFetchSizeException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidGroupIdException
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidMetadataException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidOffsetException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidPartitionsException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidPidMappingException
@0.11.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidReplicaAssignmentException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidReplicationFactorException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidRequestException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidRequiredAcksException
@0.9.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidSessionTimeoutException
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidTimestampException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidTopicException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@2.1.0
+#<init>(Ljava/util/Set;)V
+#invalidTopics()Ljava/util/Set;
@3.0.0
+#<init>(Ljava/lang/String;Ljava/util/Set;)V

+###org/apache/kafka/common/errors/InvalidTxnStateException
@0.11.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidTxnTimeoutException
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/KafkaStorageException
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/LeaderNotAvailableException
@0.8.2-beta
+#<init>(Ljava/lang/String;)V
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/LogDirNotFoundException
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/NetworkException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/NotControllerException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/NotCoordinatorException
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/NotCoordinatorForGroupException
@0.9.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@2.0.0
-###org/apache/kafka/common/errors/NotCoordinatorForGroupException

+###org/apache/kafka/common/errors/NotEnoughReplicasAfterAppendException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@0.9.0.0
-#<init>()V
-#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/NotEnoughReplicasException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/NotLeaderForPartitionException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/OffsetMetadataTooLarge
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/OffsetOutOfRangeException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@0.9.0.0
-###org/apache/kafka/common/errors/OffsetOutOfRangeException

+###org/apache/kafka/common/errors/OperationNotAttemptedException
@0.11.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/OutOfOrderSequenceException
@0.11.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/PolicyViolationException
@0.10.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/ProducerFencedException
@0.11.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/ReassignmentInProgressException
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/RebalanceInProgressException
@0.9.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/RecordBatchTooLargeException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/RecordTooLargeException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#recordTooLargePartitions()Ljava/util/Map;

+###org/apache/kafka/common/errors/ReplicaNotAvailableException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/RetriableException
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>()V

+###org/apache/kafka/common/errors/SaslAuthenticationException
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/SecurityDisabledException
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/SerializationException
@0.8.2.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>()V
+#fillInStackTrace()Ljava/lang/Throwable;
@3.0.0
-#fillInStackTrace()Ljava/lang/Throwable;

+###org/apache/kafka/common/errors/SslAuthenticationException
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/TimeoutException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/TopicAuthorizationException
@0.9.0.0
+#<init>(Ljava/util/Set;)V
+#<init>(Ljava/lang/String;)V
+#unauthorizedTopics()Ljava/util/Set;
@2.4.0
+#<init>(Ljava/lang/String;Ljava/util/Set;)V

+###org/apache/kafka/common/errors/TopicExistsException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/TransactionalIdAuthorizationException
@0.11.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/TransactionCoordinatorFencedException
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnknownMemberIdException
@0.9.0.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnknownProducerIdException
@1.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/UnknownServerException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnknownTopicOrPartitionException
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnsupportedForMessageFormatException
@0.10.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnsupportedSaslMechanismException
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnsupportedVersionException
@0.10.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/WakeupException
@0.9.0.0
+#<init>()V

+###org/apache/kafka/common/header/Header
@0.11.0.0
+#key()Ljava/lang/String;
+#value()[B

+###org/apache/kafka/common/header/Headers
@0.11.0.0
+#add(Lorg/apache/kafka/common/header/Header;)Lorg/apache/kafka/common/header/Headers;
+#add(Ljava/lang/String;[B)Lorg/apache/kafka/common/header/Headers;
+#remove(Ljava/lang/String;)Lorg/apache/kafka/common/header/Headers;
+#lastHeader(Ljava/lang/String;)Lorg/apache/kafka/common/header/Header;
+#headers(Ljava/lang/String;)Ljava/lang/Iterable;
+#toArray()[Lorg/apache/kafka/common/header/Header;

+###org/apache/kafka/common/header/internals/RecordHeader
@0.11.0.0
+#<init>(Ljava/lang/String;[B)V
+#<init>(Ljava/lang/String;Ljava/nio/ByteBuffer;)V
+#key()Ljava/lang/String;
+#value()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.7.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
-#<init>(Ljava/lang/String;Ljava/nio/ByteBuffer;)V

+###org/apache/kafka/common/header/internals/RecordHeaders
@0.11.0.0
+#<init>()V
+#<init>([Lorg/apache/kafka/common/header/Header;)V
+#<init>(Ljava/lang/Iterable;)V
+#add(Lorg/apache/kafka/common/header/Header;)Lorg/apache/kafka/common/header/Headers;
+#add(Ljava/lang/String;[B)Lorg/apache/kafka/common/header/Headers;
+#remove(Ljava/lang/String;)Lorg/apache/kafka/common/header/Headers;
+#lastHeader(Ljava/lang/String;)Lorg/apache/kafka/common/header/Header;
+#headers(Ljava/lang/String;)Ljava/lang/Iterable;
+#iterator()Ljava/util/Iterator;
+#setReadOnly()V
+#toArray()[Lorg/apache/kafka/common/header/Header;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/internals/ClusterResourceListeners
@0.10.1.0
+#<init>()V
+#maybeAdd(Ljava/lang/Object;)V
+#maybeAddAll(Ljava/util/List;)V
+#onUpdate(Lorg/apache/kafka/common/ClusterResource;)V

+###org/apache/kafka/common/internals/FatalExitError
@0.11.0.0
+#<init>(I)V
+#<init>()V
+#statusCode()I

+###org/apache/kafka/common/internals/KafkaFutureImpl
@0.11.0.0
+#<init>()V
+#thenApply(Lorg/apache/kafka/common/KafkaFuture$Function;)Lorg/apache/kafka/common/KafkaFuture;
+#complete(Ljava/lang/Object;)Z
+#completeExceptionally(Ljava/lang/Throwable;)Z
+#cancel(Z)Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#getNow(Ljava/lang/Object;)Ljava/lang/Object;
+#isCancelled()Z
+#isCompletedExceptionally()Z
+#isDone()Z
@1.1.0
+#thenApply(Lorg/apache/kafka/common/KafkaFuture$BaseFunction;)Lorg/apache/kafka/common/KafkaFuture;
+#whenComplete(Lorg/apache/kafka/common/KafkaFuture$BiConsumer;)Lorg/apache/kafka/common/KafkaFuture;
+#toString()Ljava/lang/String;
@2.0.0
+#copyWith(Lorg/apache/kafka/common/KafkaFuture;Lorg/apache/kafka/common/KafkaFuture$BaseFunction;)V
@3.0.0
+#toCompletionStage()Ljava/util/concurrent/CompletionStage;
*#thenApply(Lorg/apache/kafka/common/KafkaFuture$Function;)Lorg/apache/kafka/common/KafkaFuture;[deprecated]
-#copyWith(Lorg/apache/kafka/common/KafkaFuture;Lorg/apache/kafka/common/KafkaFuture$BaseFunction;)V

+###org/apache/kafka/common/internals/PartitionStates$PartitionState
@0.10.1.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Object;)V
+#value()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#topicPartition()Lorg/apache/kafka/common/TopicPartition;
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/internals/PartitionStates
@0.10.1.0
+#<init>()V
+#moveToEnd(Lorg/apache/kafka/common/TopicPartition;)V
+#updateAndMoveToEnd(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Object;)V
+#remove(Lorg/apache/kafka/common/TopicPartition;)V
+#partitionSet()Ljava/util/Set;
+#clear()V
+#contains(Lorg/apache/kafka/common/TopicPartition;)Z
+#partitionStates()Ljava/util/List;
+#partitionStateValues()Ljava/util/List;
+#stateValue(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Object;
+#size()I
+#set(Ljava/util/Map;)V
@2.1.0
+#partitionStateMap()Ljava/util/LinkedHashMap;
@2.2.0
+#stream()Ljava/util/stream/Stream;
@2.5.0
-#partitionStates()Ljava/util/List;
@2.6.0
+#partitionStateMap()Ljava/util/Map;
-#partitionStateMap()Ljava/util/LinkedHashMap;
@2.7.0
+#stateIterator()Ljava/util/Iterator;
+#forEach(Ljava/util/function/BiConsumer;)V
-#stream()Ljava/util/stream/Stream;
@3.1.0
+#update(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Object;)V

+###org/apache/kafka/common/internals/Topic
@0.11.0.0
+#<init>()V
+#validate(Ljava/lang/String;)V
+#isInternal(Ljava/lang/String;)Z
+#hasCollisionChars(Ljava/lang/String;)Z
+#hasCollision(Ljava/lang/String;Ljava/lang/String;)Z
@3.0.0
+#validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)V
@3.3.0
+#unifyCollisionChars(Ljava/lang/String;)Ljava/lang/String;
@3.3.2
+#isValid(Ljava/lang/String;)Z

+###org/apache/kafka/common/KafkaException
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>()V

+###org/apache/kafka/common/KafkaFuture$BiConsumer
@0.11.0.0
+#<init>()V
+#accept(Ljava/lang/Object;Ljava/lang/Object;)V
@1.1.0
-#<init>()V

+###org/apache/kafka/common/KafkaFuture$Function
@0.11.0.0
+#<init>()V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@1.1.0
-#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/common/KafkaFuture
@0.11.0.0
+#<init>()V
+#completedFuture(Ljava/lang/Object;)Lorg/apache/kafka/common/KafkaFuture;
+#allOf([Lorg/apache/kafka/common/KafkaFuture;)Lorg/apache/kafka/common/KafkaFuture;
+#thenApply(Lorg/apache/kafka/common/KafkaFuture$Function;)Lorg/apache/kafka/common/KafkaFuture;
+#cancel(Z)Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#getNow(Ljava/lang/Object;)Ljava/lang/Object;
+#isCancelled()Z
+#isCompletedExceptionally()Z
+#isDone()Z
@1.1.0
+#thenApply(Lorg/apache/kafka/common/KafkaFuture$BaseFunction;)Lorg/apache/kafka/common/KafkaFuture;
+#whenComplete(Lorg/apache/kafka/common/KafkaFuture$BiConsumer;)Lorg/apache/kafka/common/KafkaFuture;
@3.0.0
+#toCompletionStage()Ljava/util/concurrent/CompletionStage;

+###org/apache/kafka/common/memory/GarbageCollectedMemoryPool
@1.0.0
+#<init>(JIZLorg/apache/kafka/common/metrics/Sensor;)V
+#close()V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/memory/MemoryPool
@1.0.0
+#tryAllocate(I)Ljava/nio/ByteBuffer;
+#release(Ljava/nio/ByteBuffer;)V
+#size()J
+#availableMemory()J
+#isOutOfMemory()Z

+###org/apache/kafka/common/memory/SimpleMemoryPool
@1.0.0
+#<init>(JIZLorg/apache/kafka/common/metrics/Sensor;)V
+#tryAllocate(I)Ljava/nio/ByteBuffer;
+#release(Ljava/nio/ByteBuffer;)V
+#size()J
+#availableMemory()J
+#isOutOfMemory()Z
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/Metric
@0.8.2-beta
+#name()Ljava/lang/String;
+#description()Ljava/lang/String;
+#value()D
@0.8.2.0
+#metricName()Lorg/apache/kafka/common/MetricName;
-#name()Ljava/lang/String;
-#description()Ljava/lang/String;
@1.0.0
*#value()D[deprecated]
+#metricValue()Ljava/lang/Object;
@3.0.0
-#value()D[deprecated]

+###org/apache/kafka/common/MetricName
@0.8.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#name()Ljava/lang/String;
+#group()Ljava/lang/String;
+#tags()Ljava/util/Map;
+#description()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.10.0.0
*#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
*#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
@0.11.0.0
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V[deprecated]
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V[deprecated]
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
-#<init>(Ljava/lang/String;Ljava/lang/String;)V[deprecated]

+###org/apache/kafka/common/MetricNameTemplate
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#name()Ljava/lang/String;
+#group()Ljava/lang/String;
+#description()Ljava/lang/String;
+#tags()Ljava/util/Set;
@1.0.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/CompoundStat$NamedMeasurable
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Measurable;)V
+#name()Ljava/lang/String;
+#description()Ljava/lang/String;
+#stat()Lorg/apache/kafka/common/metrics/Measurable;
@0.8.2.0
+#<init>(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/Measurable;)V
+#name()Lorg/apache/kafka/common/MetricName;
-#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Measurable;)V
-#name()Ljava/lang/String;
-#description()Ljava/lang/String;

+###org/apache/kafka/common/metrics/CompoundStat
@0.8.2-beta
+#stats()Ljava/util/List;

+###org/apache/kafka/common/metrics/Gauge
@1.0.0
+#value(Lorg/apache/kafka/common/metrics/MetricConfig;J)Ljava/lang/Object;

+###org/apache/kafka/common/metrics/JmxReporter
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#configure(Ljava/util/Map;)V
+#init(Ljava/util/List;)V
+#metricChange(Lorg/apache/kafka/common/metrics/KafkaMetric;)V
+#close()V
@0.9.0.0
+#metricRemoval(Lorg/apache/kafka/common/metrics/KafkaMetric;)V
@2.1.1
+#containsMbean(Ljava/lang/String;)Z
@2.6.0
*#<init>(Ljava/lang/String;)V[deprecated]
+#reconfigurableConfigs()Ljava/util/Set;
+#validateReconfiguration(Ljava/util/Map;)V
+#reconfigure(Ljava/util/Map;)V
+#compilePredicate(Ljava/util/Map;)Ljava/util/function/Predicate;
+#contextChange(Lorg/apache/kafka/common/metrics/MetricsContext;)V

+###org/apache/kafka/common/metrics/KafkaMetric
@0.8.2-beta
+#name()Ljava/lang/String;
+#description()Ljava/lang/String;
+#value()D
+#config(Lorg/apache/kafka/common/metrics/MetricConfig;)V
@0.8.2.0
+#metricName()Lorg/apache/kafka/common/MetricName;
-#name()Ljava/lang/String;
-#description()Ljava/lang/String;
@0.9.0.0
+#measurable()Lorg/apache/kafka/common/metrics/Measurable;
@0.10.1.0
+#config()Lorg/apache/kafka/common/metrics/MetricConfig;
@0.11.0.3
+#<init>(Ljava/lang/Object;Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/Measurable;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/utils/Time;)V
@1.0.0
*#value()D[deprecated]
+#metricValue()Ljava/lang/Object;
-#<init>(Ljava/lang/Object;Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/Measurable;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/utils/Time;)V
@1.0.1
+#<init>(Ljava/lang/Object;Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MetricValueProvider;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/utils/Time;)V
@3.0.0
-#value()D[deprecated]

+###org/apache/kafka/common/metrics/Measurable
@0.8.2-beta
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D

+###org/apache/kafka/common/metrics/MeasurableStat
@0.8.2-beta

+###org/apache/kafka/common/metrics/MetricConfig
@0.8.2-beta
+#<init>()V
+#quota()Lorg/apache/kafka/common/metrics/Quota;
+#quota(Lorg/apache/kafka/common/metrics/Quota;)Lorg/apache/kafka/common/metrics/MetricConfig;
+#eventWindow()J
+#eventWindow(J)Lorg/apache/kafka/common/metrics/MetricConfig;
+#timeWindowMs()J
+#timeWindow(JLjava/util/concurrent/TimeUnit;)Lorg/apache/kafka/common/metrics/MetricConfig;
+#samples()I
+#samples(I)Lorg/apache/kafka/common/metrics/MetricConfig;
+#timeUnit()Ljava/util/concurrent/TimeUnit;
+#timeUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/kafka/common/metrics/MetricConfig;
@0.10.0.0
+#tags()Ljava/util/Map;
+#tags(Ljava/util/Map;)Lorg/apache/kafka/common/metrics/MetricConfig;
-#timeUnit()Ljava/util/concurrent/TimeUnit;
-#timeUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/kafka/common/metrics/MetricConfig;
@0.10.2.0
+#recordLevel()Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
+#recordLevel(Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;)Lorg/apache/kafka/common/metrics/MetricConfig;

+###org/apache/kafka/common/metrics/Metrics
@0.8.2-beta
+#<init>()V
+#<init>(Lorg/apache/kafka/common/utils/Time;)V
+#<init>(Lorg/apache/kafka/common/metrics/MetricConfig;)V
+#<init>(Lorg/apache/kafka/common/metrics/MetricConfig;Ljava/util/List;Lorg/apache/kafka/common/utils/Time;)V
+#getSensor(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#sensor(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
+#sensor(Ljava/lang/String;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#sensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#addMetric(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Measurable;)V
+#addMetric(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Measurable;)V
+#addMetric(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/Measurable;)V
+#addMetric(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/Measurable;)V
+#addReporter(Lorg/apache/kafka/common/metrics/MetricsReporter;)V
+#metrics()Ljava/util/Map;
+#close()V
@0.8.2.0
+#addMetric(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/Measurable;)V
+#addMetric(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/Measurable;)V
-#addMetric(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Measurable;)V
-#addMetric(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Measurable;)V
-#addMetric(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/Measurable;)V
-#addMetric(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/Measurable;)V
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/metrics/MetricConfig;Ljava/util/List;Lorg/apache/kafka/common/utils/Time;Z)V
+#sensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;J[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#removeSensor(Ljava/lang/String;)V
+#removeMetric(Lorg/apache/kafka/common/MetricName;)Lorg/apache/kafka/common/metrics/KafkaMetric;
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/utils/Time;)V
+#metricName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#metricName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/MetricName;
+#metricName(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/MetricName;
+#metricName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/kafka/common/MetricName;
+#metricName(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
+#config()Lorg/apache/kafka/common/metrics/MetricConfig;
@0.10.2.0
+#sensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;)Lorg/apache/kafka/common/metrics/Sensor;
+#sensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#sensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#sensor(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MetricConfig;JLorg/apache/kafka/common/metrics/Sensor$RecordingLevel;[Lorg/apache/kafka/common/metrics/Sensor;)Lorg/apache/kafka/common/metrics/Sensor;
+#reporters()Ljava/util/List;
+#metric(Lorg/apache/kafka/common/MetricName;)Lorg/apache/kafka/common/metrics/KafkaMetric;
@0.11.0.0
+#toHtmlTable(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
+#metricInstance(Lorg/apache/kafka/common/MetricNameTemplate;[Ljava/lang/String;)Lorg/apache/kafka/common/MetricName;
+#metricInstance(Lorg/apache/kafka/common/MetricNameTemplate;Ljava/util/Map;)Lorg/apache/kafka/common/MetricName;
@1.0.0
+#addMetric(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/MetricValueProvider;)V
+#addMetric(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MetricValueProvider;)V
@1.0.1
+#toHtmlTable(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/String;
-#toHtmlTable(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
@1.1.0
+#removeReporter(Lorg/apache/kafka/common/metrics/MetricsReporter;)V
@2.6.0
+#<init>(Lorg/apache/kafka/common/metrics/MetricConfig;Ljava/util/List;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/metrics/MetricsContext;)V
+#<init>(Lorg/apache/kafka/common/metrics/MetricConfig;Ljava/util/List;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/common/metrics/MetricsContext;)V
@3.3.0
+#addMetricIfAbsent(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MetricConfig;Lorg/apache/kafka/common/metrics/MetricValueProvider;)Lorg/apache/kafka/common/metrics/KafkaMetric;

+###org/apache/kafka/common/metrics/MetricsReporter
@0.8.2-beta
+#init(Ljava/util/List;)V
+#metricChange(Lorg/apache/kafka/common/metrics/KafkaMetric;)V
+#close()V
@0.9.0.0
+#metricRemoval(Lorg/apache/kafka/common/metrics/KafkaMetric;)V
@2.6.0
+#reconfigurableConfigs()Ljava/util/Set;
+#validateReconfiguration(Ljava/util/Map;)V
+#reconfigure(Ljava/util/Map;)V
+#contextChange(Lorg/apache/kafka/common/metrics/MetricsContext;)V

+###org/apache/kafka/common/metrics/MetricValueProvider
@1.0.0

+###org/apache/kafka/common/metrics/Quota
@0.8.2-beta
+#<init>(DZ)V
+#lessThan(D)Lorg/apache/kafka/common/metrics/Quota;
+#moreThan(D)Lorg/apache/kafka/common/metrics/Quota;
+#isUpperBound()Z
+#bound()D
+#acceptable(D)Z
@0.9.0.0
+#upperBound(D)Lorg/apache/kafka/common/metrics/Quota;
+#lowerBound(D)Lorg/apache/kafka/common/metrics/Quota;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
-#lessThan(D)Lorg/apache/kafka/common/metrics/Quota;
-#moreThan(D)Lorg/apache/kafka/common/metrics/Quota;
@0.10.1.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/QuotaViolationException
@0.8.2-beta
+#<init>(Ljava/lang/String;)V
@0.10.1.0
+#<init>(Lorg/apache/kafka/common/MetricName;DD)V
+#metricName()Lorg/apache/kafka/common/MetricName;
+#value()D
+#bound()D
-#<init>(Ljava/lang/String;)V
@2.6.0
+#<init>(Lorg/apache/kafka/common/metrics/KafkaMetric;DD)V
+#metric()Lorg/apache/kafka/common/metrics/KafkaMetric;
+#toString()Ljava/lang/String;
+#fillInStackTrace()Ljava/lang/Throwable;
-#<init>(Lorg/apache/kafka/common/MetricName;DD)V
-#metricName()Lorg/apache/kafka/common/MetricName;

+###org/apache/kafka/common/metrics/Sensor$RecordingLevel
@0.10.2.0
+#values()[Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
+#forId(I)Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
+#forName(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
+#shouldRecord(I)Z

+###org/apache/kafka/common/metrics/Sensor
@0.8.2-beta
+#name()Ljava/lang/String;
+#record()V
+#record(D)V
+#record(DJ)V
+#add(Lorg/apache/kafka/common/metrics/CompoundStat;)V
+#add(Lorg/apache/kafka/common/metrics/CompoundStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
+#add(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;)V
+#add(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;)V
+#add(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
+#add(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
@0.8.2.0
+#add(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MeasurableStat;)V
+#add(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MeasurableStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
-#add(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;)V
-#add(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;)V
-#add(Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
-#add(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/MeasurableStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
@0.9.0.0
+#hasExpired()Z
@0.10.1.0
+#checkQuotas()V
+#checkQuotas(J)V
@0.10.2.0
+#shouldRecord()Z
@0.11.0.0
+#record(DJZ)V
@2.0.0
+#add(Lorg/apache/kafka/common/metrics/CompoundStat;)Z
+#add(Lorg/apache/kafka/common/metrics/CompoundStat;Lorg/apache/kafka/common/metrics/MetricConfig;)Z
+#add(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MeasurableStat;)Z
+#add(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MeasurableStat;Lorg/apache/kafka/common/metrics/MetricConfig;)Z
-#add(Lorg/apache/kafka/common/metrics/CompoundStat;)V
-#add(Lorg/apache/kafka/common/metrics/CompoundStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
-#add(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MeasurableStat;)V
-#add(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/metrics/MeasurableStat;Lorg/apache/kafka/common/metrics/MetricConfig;)V
@2.5.0
+#hasMetrics()Z

+###org/apache/kafka/common/metrics/Stat
@0.8.2-beta
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V

+###org/apache/kafka/common/metrics/stats/Avg
@0.8.2-beta
+#<init>()V
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D

+###org/apache/kafka/common/metrics/stats/Count
@0.8.2-beta
+#<init>()V
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@2.4.0
-#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@3.0.0
-###org/apache/kafka/common/metrics/stats/Count

+###org/apache/kafka/common/metrics/stats/Frequencies
@1.0.0
+#forBooleanValues(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/MetricName;)Lorg/apache/kafka/common/metrics/stats/Frequencies;
+#<init>(IDD[Lorg/apache/kafka/common/metrics/stats/Frequency;)V
+#stats()Ljava/util/List;
+#frequency(Lorg/apache/kafka/common/metrics/MetricConfig;JD)D
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D

+###org/apache/kafka/common/metrics/stats/Frequency
@1.0.0
+#<init>(Lorg/apache/kafka/common/MetricName;D)V
+#name()Lorg/apache/kafka/common/MetricName;
+#centerValue()D
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/Histogram$BinScheme
@0.8.2-beta
+#bins()I
+#toBin(D)I
+#fromBin(I)D

+###org/apache/kafka/common/metrics/stats/Histogram$ConstantBinScheme
@0.8.2-beta
+#<init>(IDD)V
+#bins()I
+#fromBin(I)D
+#toBin(D)I

+###org/apache/kafka/common/metrics/stats/Histogram$LinearBinScheme
@0.8.2-beta
+#<init>(ID)V
+#bins()I
+#fromBin(I)D
+#toBin(D)I

+###org/apache/kafka/common/metrics/stats/Histogram
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/metrics/stats/Histogram$BinScheme;)V
+#record(D)V
+#value(D)D
+#counts()[F
+#clear()V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/Max
@0.8.2-beta
+#<init>()V
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D

+###org/apache/kafka/common/metrics/stats/Meter
@1.0.0
+#<init>(Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/MetricName;)V
+#<init>(Ljava/util/concurrent/TimeUnit;Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/MetricName;)V
+#<init>(Lorg/apache/kafka/common/metrics/stats/SampledStat;Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/MetricName;)V
+#<init>(Ljava/util/concurrent/TimeUnit;Lorg/apache/kafka/common/metrics/stats/SampledStat;Lorg/apache/kafka/common/MetricName;Lorg/apache/kafka/common/MetricName;)V
+#stats()Ljava/util/List;
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/Min
@0.8.2-beta
+#<init>()V
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D

+###org/apache/kafka/common/metrics/stats/Percentile
@0.8.2-beta
+#<init>(Ljava/lang/String;D)V
+#<init>(Ljava/lang/String;Ljava/lang/String;D)V
+#name()Ljava/lang/String;
+#description()Ljava/lang/String;
+#percentile()D
@0.8.2.0
+#<init>(Lorg/apache/kafka/common/MetricName;D)V
+#name()Lorg/apache/kafka/common/MetricName;
-#<init>(Ljava/lang/String;D)V
-#<init>(Ljava/lang/String;Ljava/lang/String;D)V
-#name()Ljava/lang/String;
-#description()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/Percentiles$BucketSizing
@0.8.2-beta
+#values()[Lorg/apache/kafka/common/metrics/stats/Percentiles$BucketSizing;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/stats/Percentiles$BucketSizing;

+###org/apache/kafka/common/metrics/stats/Percentiles
@0.8.2-beta
+#<init>(IDLorg/apache/kafka/common/metrics/stats/Percentiles$BucketSizing;[Lorg/apache/kafka/common/metrics/stats/Percentile;)V
+#<init>(IDDLorg/apache/kafka/common/metrics/stats/Percentiles$BucketSizing;[Lorg/apache/kafka/common/metrics/stats/Percentile;)V
+#stats()Ljava/util/List;
+#value(Lorg/apache/kafka/common/metrics/MetricConfig;JD)D
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D

+###org/apache/kafka/common/metrics/stats/Rate$SampledTotal
@0.8.2-beta
+#<init>()V
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@2.4.0
-#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@3.0.0
-###org/apache/kafka/common/metrics/stats/Rate$SampledTotal

+###org/apache/kafka/common/metrics/stats/Rate
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/util/concurrent/TimeUnit;)V
+#<init>(Lorg/apache/kafka/common/metrics/stats/SampledStat;)V
+#<init>(Ljava/util/concurrent/TimeUnit;Lorg/apache/kafka/common/metrics/stats/SampledStat;)V
+#unitName()Ljava/lang/String;
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@0.9.0.0
+#windowSize(Lorg/apache/kafka/common/metrics/MetricConfig;J)J
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/SampledStat$Sample
@0.8.2-beta
+#<init>(DJ)V
+#reset(J)V
+#isComplete(JLorg/apache/kafka/common/metrics/MetricConfig;)Z
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/SampledStat
@0.8.2-beta
+#<init>(D)V
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
+#current(J)Lorg/apache/kafka/common/metrics/stats/SampledStat$Sample;
+#oldest(J)Lorg/apache/kafka/common/metrics/stats/SampledStat$Sample;
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/SimpleRate
@0.10.1.0
+#<init>()V
+#windowSize(Lorg/apache/kafka/common/metrics/MetricConfig;J)J

+###org/apache/kafka/common/metrics/stats/Sum
@0.11.0.0
+#<init>()V
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@2.4.0
-#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@3.0.0
-###org/apache/kafka/common/metrics/stats/Sum

+###org/apache/kafka/common/metrics/stats/Total
@0.8.2-beta
+#<init>()V
+#<init>(D)V
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@2.4.0
-#<init>(D)V
-#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
-#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@3.0.0
-###org/apache/kafka/common/metrics/stats/Total

+###org/apache/kafka/common/metrics/stats/Value
@0.10.2.0
+#<init>()V
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V

+###org/apache/kafka/common/network/Authenticator
@0.9.0.0
+#configure(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Ljava/util/Map;)V
+#authenticate()V
+#principal()Ljava/security/Principal;
+#complete()Z
+#close()V
@0.10.0.0
-#close()V
@1.0.0
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
-#configure(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Ljava/util/Map;)V
-#principal()Ljava/security/Principal;
@2.1.0
+#handleAuthenticationFailure()V
@2.2.0
+#reauthenticate(Lorg/apache/kafka/common/network/ReauthenticationContext;)V
+#serverSessionExpirationTimeNanos()Ljava/lang/Long;
+#clientSessionReauthenticationTimeNanos()Ljava/lang/Long;
+#reauthenticationLatencyMs()Ljava/lang/Long;
+#getAndClearResponsesReceivedDuringReauthentication()Ljava/util/List;
+#connectedClientSupportsReauthentication()Z
@2.5.0
+#pollResponseReceivedDuringReauthentication()Ljava/util/Optional;
-#getAndClearResponsesReceivedDuringReauthentication()Ljava/util/List;
@2.8.0
+#principalSerde()Ljava/util/Optional;

+###org/apache/kafka/common/network/ByteBufferSend
@0.8.2-beta
+#<init>(I[Ljava/nio/ByteBuffer;)V
+#destination()I
+#completed()Z
+#reify()[Ljava/nio/ByteBuffer;
+#remaining()I
+#size()I
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)J
@0.9.0.0
+#<init>(Ljava/lang/String;[Ljava/nio/ByteBuffer;)V
+#destination()Ljava/lang/String;
+#size()J
-#<init>(I[Ljava/nio/ByteBuffer;)V
-#destination()I
-#reify()[Ljava/nio/ByteBuffer;
-#remaining()I
-#size()I
@2.5.0
+#remaining()J
@2.6.0
+#toString()Ljava/lang/String;
@2.8.0
+#<init>([Ljava/nio/ByteBuffer;)V
+#<init>([Ljava/nio/ByteBuffer;J)V
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;)J
+#sizePrefixed(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/network/ByteBufferSend;
-#<init>(Ljava/lang/String;[Ljava/nio/ByteBuffer;)V
-#destination()Ljava/lang/String;
-#writeTo(Ljava/nio/channels/GatheringByteChannel;)J

+###org/apache/kafka/common/network/ChannelBuilder
@0.9.0.0
+#configure(Ljava/util/Map;)V
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
+#close()V
@1.0.0
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
@1.1.0
-#configure(Ljava/util/Map;)V
@2.5.0
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;)Lorg/apache/kafka/common/network/KafkaChannel;
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;

+###org/apache/kafka/common/network/ChannelBuilders
@0.9.0.0
+#create(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;)Lorg/apache/kafka/common/network/ChannelBuilder;
@0.10.0.0
+#create(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
-#create(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;)Lorg/apache/kafka/common/network/ChannelBuilder;
@0.10.2.0
+#clientChannelBuilder(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
+#serverChannelBuilder(Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/util/Map;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#create(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
@0.11.0.0
+#clientChannelBuilder(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
+#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#clientChannelBuilder(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
-#serverChannelBuilder(Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/util/Map;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
@1.0.0
+#clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
+#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
+#createPrincipalBuilder(Ljava/util/Map;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)Lorg/apache/kafka/common/security/auth/KafkaPrincipalBuilder;
-#clientChannelBuilder(Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
-#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
@1.1.0
+#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/DelegationTokenCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
@2.0.0
+#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/DelegationTokenCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
@2.2.0
+#clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
+#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
+#createPrincipalBuilder(Ljava/util/Map;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/ssl/SslPrincipalMapper;)Lorg/apache/kafka/common/security/auth/KafkaPrincipalBuilder;
-#clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
-#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#createPrincipalBuilder(Ljava/util/Map;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)Lorg/apache/kafka/common/security/auth/KafkaPrincipalBuilder;
@2.5.0
+#clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;ZLorg/apache/kafka/common/utils/LogContext;)Lorg/apache/kafka/common/network/ChannelBuilder;
+#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#clientChannelBuilder(Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Z)Lorg/apache/kafka/common/network/ChannelBuilder;
-#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/network/ChannelBuilder;
@2.8.0
+#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/function/Supplier;)Lorg/apache/kafka/common/network/ChannelBuilder;
-#serverChannelBuilder(Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;)Lorg/apache/kafka/common/network/ChannelBuilder;
@3.0.0
+#createPrincipalBuilder(Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/ssl/SslPrincipalMapper;)Lorg/apache/kafka/common/security/auth/KafkaPrincipalBuilder;
-#createPrincipalBuilder(Ljava/util/Map;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/ssl/SslPrincipalMapper;)Lorg/apache/kafka/common/security/auth/KafkaPrincipalBuilder;

+###org/apache/kafka/common/network/ChannelState$State
@1.0.0
+#values()[Lorg/apache/kafka/common/network/ChannelState$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/network/ChannelState$State;

+###org/apache/kafka/common/network/ChannelState
@0.11.0.0
+#values()[Lorg/apache/kafka/common/network/ChannelState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/network/ChannelState;
@1.0.0
+#<init>(Lorg/apache/kafka/common/network/ChannelState$State;)V
+#<init>(Lorg/apache/kafka/common/network/ChannelState$State;Lorg/apache/kafka/common/errors/AuthenticationException;)V
+#state()Lorg/apache/kafka/common/network/ChannelState$State;
+#exception()Lorg/apache/kafka/common/errors/AuthenticationException;
-#values()[Lorg/apache/kafka/common/network/ChannelState;
-#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/network/ChannelState;
@2.1.0
+#<init>(Lorg/apache/kafka/common/network/ChannelState$State;Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/network/ChannelState$State;Lorg/apache/kafka/common/errors/AuthenticationException;Ljava/lang/String;)V
+#remoteAddress()Ljava/lang/String;
-#<init>(Lorg/apache/kafka/common/network/ChannelState$State;Lorg/apache/kafka/common/errors/AuthenticationException;)V

+###org/apache/kafka/common/network/InvalidReceiveException
@0.9.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/network/KafkaChannel
@0.9.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;I)V
+#close()V
+#principal()Ljava/security/Principal;
+#prepare()V
+#disconnect()V
+#finishConnect()V
+#isConnected()Z
+#id()Ljava/lang/String;
+#mute()V
+#unmute()V
+#isMute()Z
+#ready()Z
+#hasSend()Z
+#socketAddress()Ljava/net/InetAddress;
+#socketDescription()Ljava/lang/String;
+#setSend(Lorg/apache/kafka/common/network/Send;)V
+#read()Lorg/apache/kafka/common/network/NetworkReceive;
+#write()Lorg/apache/kafka/common/network/Send;
@0.10.0.0
+#finishConnect()Z
-#finishConnect()V
@0.11.0.0
+#state(Lorg/apache/kafka/common/network/ChannelState;)V
+#state()Lorg/apache/kafka/common/network/ChannelState;
+#addNetworkThreadTimeNanos(J)V
+#getAndResetNetworkThreadTimeNanos()J
@1.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;ILorg/apache/kafka/common/memory/MemoryPool;)V
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#isInMutableState()Z
+#hasBytesBuffered()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;I)V
-#principal()Ljava/security/Principal;
-#mute()V
-#unmute()V
@1.0.1
+#selectionKey()Ljava/nio/channels/SelectionKey;
@2.0.0
+#handleChannelMuteEvent(Lorg/apache/kafka/common/network/KafkaChannel$ChannelMuteEvent;)V
+#muteState()Lorg/apache/kafka/common/network/KafkaChannel$ChannelMuteState;
@2.2.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/function/Supplier;ILorg/apache/kafka/common/memory/MemoryPool;)V
+#toString()Ljava/lang/String;
+#successfulAuthentications()I
+#maybeBeginServerReauthentication(Lorg/apache/kafka/common/network/NetworkReceive;Ljava/util/function/Supplier;)Z
+#maybeBeginClientReauthentication(Ljava/util/function/Supplier;)Z
+#reauthenticationLatencyMs()Ljava/lang/Long;
+#serverAuthenticationSessionExpired(J)Z
+#getAndClearResponsesReceivedDuringReauthentication()Ljava/util/List;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;ILorg/apache/kafka/common/memory/MemoryPool;)V
@2.5.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/function/Supplier;ILorg/apache/kafka/common/memory/MemoryPool;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;)V
+#isMuted()Z
+#maybeCompleteSend()Lorg/apache/kafka/common/network/Send;
+#read()J
+#currentReceive()Lorg/apache/kafka/common/network/NetworkReceive;
+#maybeCompleteReceive()Lorg/apache/kafka/common/network/NetworkReceive;
+#write()J
+#pollResponseReceivedDuringReauthentication()Ljava/util/Optional;
+#channelMetadataRegistry()Lorg/apache/kafka/common/network/ChannelMetadataRegistry;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/function/Supplier;ILorg/apache/kafka/common/memory/MemoryPool;)V
-#isMute()Z
-#read()Lorg/apache/kafka/common/network/NetworkReceive;
-#write()Lorg/apache/kafka/common/network/Send;
-#getAndClearResponsesReceivedDuringReauthentication()Ljava/util/List;
@2.8.0
+#principalSerde()Ljava/util/Optional;
+#setSend(Lorg/apache/kafka/common/network/NetworkSend;)V
+#maybeCompleteSend()Lorg/apache/kafka/common/network/NetworkSend;
-#setSend(Lorg/apache/kafka/common/network/Send;)V
-#maybeCompleteSend()Lorg/apache/kafka/common/network/Send;

+###org/apache/kafka/common/network/ListenerName
@0.10.2.0
+#forSecurityProtocol(Lorg/apache/kafka/common/protocol/SecurityProtocol;)Lorg/apache/kafka/common/network/ListenerName;
+#normalised(Ljava/lang/String;)Lorg/apache/kafka/common/network/ListenerName;
+#<init>(Ljava/lang/String;)V
+#value()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.11.0.0
+#configPrefix()Ljava/lang/String;
@1.0.0
+#forSecurityProtocol(Lorg/apache/kafka/common/security/auth/SecurityProtocol;)Lorg/apache/kafka/common/network/ListenerName;
-#forSecurityProtocol(Lorg/apache/kafka/common/protocol/SecurityProtocol;)Lorg/apache/kafka/common/network/ListenerName;
@1.1.0
+#saslMechanismConfigPrefix(Ljava/lang/String;)Ljava/lang/String;
@2.0.0
+#saslMechanismPrefix(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/common/network/Mode
@0.9.0.0
+#values()[Lorg/apache/kafka/common/network/Mode;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/network/Mode;

+###org/apache/kafka/common/network/MultiSend
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#size()J
+#destination()Ljava/lang/String;
+#completed()Z
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)J
@1.1.0
+#<init>(Ljava/lang/String;Ljava/util/Queue;)V
-#<init>(Ljava/lang/String;Ljava/util/List;)V
@2.0.0
-###org/apache/kafka/common/network/MultiSend

+###org/apache/kafka/common/network/NetworkReceive
@0.8.2-beta
+#<init>(ILjava/nio/ByteBuffer;)V
+#<init>(I)V
+#source()I
+#complete()Z
+#reify()[Ljava/nio/ByteBuffer;
+#readFrom(Ljava/nio/channels/ScatteringByteChannel;)J
+#payload()Ljava/nio/ByteBuffer;
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/nio/ByteBuffer;)V
+#<init>(Ljava/lang/String;)V
+#<init>(ILjava/lang/String;)V
+#<init>()V
+#source()Ljava/lang/String;
+#readFromReadableChannel(Ljava/nio/channels/ReadableByteChannel;)J[deprecated]
-#<init>(ILjava/nio/ByteBuffer;)V
-#<init>(I)V
-#source()I
-#reify()[Ljava/nio/ByteBuffer;
@1.0.0
+#<init>(ILjava/lang/String;Lorg/apache/kafka/common/memory/MemoryPool;)V
+#requiredMemoryAmountKnown()Z
+#memoryAllocated()Z
+#close()V
@2.0.0
-#readFromReadableChannel(Ljava/nio/channels/ReadableByteChannel;)J[deprecated]
@2.0.1
+#size()I
@2.5.0
+#bytesRead()I

+###org/apache/kafka/common/network/NetworkSend
@0.8.2-beta
+#<init>(I[Ljava/nio/ByteBuffer;)V
@0.9.0.0
+#<init>(Ljava/lang/String;[Ljava/nio/ByteBuffer;)V
-#<init>(I[Ljava/nio/ByteBuffer;)V
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/nio/ByteBuffer;)V
-#<init>(Ljava/lang/String;[Ljava/nio/ByteBuffer;)V
@2.8.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/network/Send;)V
+#destinationId()Ljava/lang/String;
+#completed()Z
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;)J
+#size()J
-#<init>(Ljava/lang/String;Ljava/nio/ByteBuffer;)V

+###org/apache/kafka/common/network/PlaintextChannelBuilder
@0.9.0.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
+#close()V
@1.0.0
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
@2.0.0
+#<init>(Lorg/apache/kafka/common/network/ListenerName;)V
-#<init>()V
@2.5.0
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;)Lorg/apache/kafka/common/network/KafkaChannel;
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;

+###org/apache/kafka/common/network/PlaintextTransportLayer
@0.9.0.0
+#<init>(Ljava/nio/channels/SelectionKey;)V
+#ready()Z
+#finishConnect()V
+#disconnect()V
+#socketChannel()Ljava/nio/channels/SocketChannel;
+#isOpen()Z
+#isConnected()Z
+#close()V
+#handshake()V
+#read(Ljava/nio/ByteBuffer;)I
+#read([Ljava/nio/ByteBuffer;)J
+#read([Ljava/nio/ByteBuffer;II)J
+#write(Ljava/nio/ByteBuffer;)I
+#write([Ljava/nio/ByteBuffer;)J
+#write([Ljava/nio/ByteBuffer;II)J
+#hasPendingWrites()Z
+#peerPrincipal()Ljava/security/Principal;
+#addInterestOps(I)V
+#removeInterestOps(I)V
+#isMute()Z
+#transferFrom(Ljava/nio/channels/FileChannel;JJ)J
@0.10.0.0
+#finishConnect()Z
-#finishConnect()V
@1.0.0
+#hasBytesBuffered()Z
@1.0.1
+#selectionKey()Ljava/nio/channels/SelectionKey;

+###org/apache/kafka/common/network/Receive
@0.8.2-beta
+#source()I
+#complete()Z
+#reify()[Ljava/nio/ByteBuffer;
+#readFrom(Ljava/nio/channels/ScatteringByteChannel;)J
@0.9.0.0
+#source()Ljava/lang/String;
-#source()I
-#reify()[Ljava/nio/ByteBuffer;
@1.0.0
+#requiredMemoryAmountKnown()Z
+#memoryAllocated()Z

+###org/apache/kafka/common/network/SaslChannelBuilder
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Lorg/apache/kafka/common/protocol/SecurityProtocol;)V
+#configure(Ljava/util/Map;)V
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
+#close()V
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Lorg/apache/kafka/common/protocol/SecurityProtocol;)V
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;)V
-#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/lang/String;Z)V
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext;Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;)V
-#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/LoginType;Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;)V
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;
-#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext;Lorg/apache/kafka/common/protocol/SecurityProtocol;Ljava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;)V
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
@1.1.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/DelegationTokenCache;)V
+#reconfigurableConfigs()Ljava/util/Set;
+#validateReconfiguration(Ljava/util/Map;)V
+#reconfigure(Ljava/util/Map;)V
+#listenerName()Lorg/apache/kafka/common/network/ListenerName;
-#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/security/JaasContext;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;)V
@2.0.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;)V
-#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/DelegationTokenCache;)V
@2.2.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)V
-#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;)V
@2.5.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;)V
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;)Lorg/apache/kafka/common/network/KafkaChannel;
-#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;)V
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;
@2.8.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/function/Supplier;)V
-#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/util/Map;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;ZLjava/lang/String;ZLorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;)V

+###org/apache/kafka/common/network/Selectable
@0.8.2-beta
+#connect(ILjava/net/InetSocketAddress;II)V
+#disconnect(I)V
+#wakeup()V
+#close()V
+#poll(JLjava/util/List;)V
+#completedSends()Ljava/util/List;
+#completedReceives()Ljava/util/List;
+#disconnected()Ljava/util/List;
+#connected()Ljava/util/List;
@0.9.0.0
+#connect(Ljava/lang/String;Ljava/net/InetSocketAddress;II)V
+#close(Ljava/lang/String;)V
+#send(Lorg/apache/kafka/common/network/Send;)V
+#poll(J)V
+#mute(Ljava/lang/String;)V
+#unmute(Ljava/lang/String;)V
+#muteAll()V
+#unmuteAll()V
+#isChannelReady(Ljava/lang/String;)Z
-#connect(ILjava/net/InetSocketAddress;II)V
-#disconnect(I)V
-#poll(JLjava/util/List;)V
@0.11.0.0
+#disconnected()Ljava/util/Map;
-#disconnected()Ljava/util/List;
@2.5.0
+#completedReceives()Ljava/util/Collection;
-#completedReceives()Ljava/util/List;
@2.8.0
+#send(Lorg/apache/kafka/common/network/NetworkSend;)V
-#send(Lorg/apache/kafka/common/network/Send;)V

+###org/apache/kafka/common/network/Selector
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
+#connect(ILjava/net/InetSocketAddress;II)V
+#disconnect(I)V
+#wakeup()V
+#close()V
+#poll(JLjava/util/List;)V
+#completedSends()Ljava/util/List;
+#completedReceives()Ljava/util/List;
+#disconnected()Ljava/util/List;
+#connected()Ljava/util/List;
@0.8.2.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;)V
@0.9.0.0
+#<init>(IJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZLorg/apache/kafka/common/network/ChannelBuilder;)V
+#<init>(JLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/network/ChannelBuilder;)V
+#connect(Ljava/lang/String;Ljava/net/InetSocketAddress;II)V
+#register(Ljava/lang/String;Ljava/nio/channels/SocketChannel;)V
+#send(Lorg/apache/kafka/common/network/Send;)V
+#poll(J)V
+#mute(Ljava/lang/String;)V
+#unmute(Ljava/lang/String;)V
+#muteAll()V
+#unmuteAll()V
+#close(Ljava/lang/String;)V
+#isChannelReady(Ljava/lang/String;)Z
+#channels()Ljava/util/List;
+#channel(Ljava/lang/String;)Lorg/apache/kafka/common/network/KafkaChannel;
-#<init>(Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;)V
-#connect(ILjava/net/InetSocketAddress;II)V
-#disconnect(I)V
-#poll(JLjava/util/List;)V
@0.10.0.0
+#<init>(JLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/common/network/ChannelBuilder;)V
-#<init>(JLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/network/ChannelBuilder;)V
@0.10.2.0
+#closingChannel(Ljava/lang/String;)Lorg/apache/kafka/common/network/KafkaChannel;
@0.10.2.2
+#keys()Ljava/util/Set;
@0.11.0.0
+#<init>(IJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZZLorg/apache/kafka/common/network/ChannelBuilder;)V
+#disconnected()Ljava/util/Map;
-#disconnected()Ljava/util/List;
@0.11.0.3
+#numStagedReceives(Lorg/apache/kafka/common/network/KafkaChannel;)I
@1.0.0
+#<init>(IJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZZLorg/apache/kafka/common/network/ChannelBuilder;Lorg/apache/kafka/common/memory/MemoryPool;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(IJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZLorg/apache/kafka/common/network/ChannelBuilder;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(JLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/common/network/ChannelBuilder;Lorg/apache/kafka/common/utils/LogContext;)V
-#<init>(IJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZZLorg/apache/kafka/common/network/ChannelBuilder;)V
-#<init>(IJLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZLorg/apache/kafka/common/network/ChannelBuilder;)V
-#<init>(JLorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/common/network/ChannelBuilder;)V
@2.1.0
+#<init>(IJILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZZLorg/apache/kafka/common/network/ChannelBuilder;Lorg/apache/kafka/common/memory/MemoryPool;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(IJILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Ljava/util/Map;ZLorg/apache/kafka/common/network/ChannelBuilder;Lorg/apache/kafka/common/utils/LogContext;)V
+#<init>(JILorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/utils/Time;Ljava/lang/String;Lorg/apache/kafka/common/network/ChannelBuilder;Lorg/apache/kafka/common/utils/LogContext;)V
@2.3.0
+#lowestPriorityChannel()Lorg/apache/kafka/common/network/KafkaChannel;
@2.5.0
+#completedReceives()Ljava/util/Collection;
-#completedReceives()Ljava/util/List;
-#numStagedReceives(Lorg/apache/kafka/common/network/KafkaChannel;)I
@2.5.1
+#clearCompletedReceives()V
+#clearCompletedSends()V
@2.8.0
+#send(Lorg/apache/kafka/common/network/NetworkSend;)V
-#send(Lorg/apache/kafka/common/network/Send;)V

+###org/apache/kafka/common/network/Send
@0.8.2-beta
+#destination()I
+#remaining()I
+#completed()Z
+#reify()[Ljava/nio/ByteBuffer;
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)J
@0.9.0.0
+#destination()Ljava/lang/String;
+#size()J
-#destination()I
-#remaining()I
-#reify()[Ljava/nio/ByteBuffer;
@2.8.0
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;)J
-#destination()Ljava/lang/String;
-#writeTo(Ljava/nio/channels/GatheringByteChannel;)J

+###org/apache/kafka/common/network/SslChannelBuilder
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/network/Mode;)V
+#configure(Ljava/util/Map;)V
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
+#close()V
@1.0.0
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;I)Lorg/apache/kafka/common/network/KafkaChannel;
@1.1.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/ListenerName;Z)V
+#reconfigurableConfigs()Ljava/util/Set;
+#validateReconfiguration(Ljava/util/Map;)V
+#reconfigure(Ljava/util/Map;)V
+#listenerName()Lorg/apache/kafka/common/network/ListenerName;
-#<init>(Lorg/apache/kafka/common/network/Mode;)V
@2.5.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/ListenerName;ZLorg/apache/kafka/common/utils/LogContext;)V
+#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;)Lorg/apache/kafka/common/network/KafkaChannel;
-#<init>(Lorg/apache/kafka/common/network/Mode;Lorg/apache/kafka/common/network/ListenerName;Z)V
-#buildChannel(Ljava/lang/String;Ljava/nio/channels/SelectionKey;ILorg/apache/kafka/common/memory/MemoryPool;)Lorg/apache/kafka/common/network/KafkaChannel;

+###org/apache/kafka/common/network/SslTransportLayer
@0.9.0.0
+#create(Ljava/lang/String;Ljava/nio/channels/SelectionKey;Ljavax/net/ssl/SSLEngine;)Lorg/apache/kafka/common/network/SslTransportLayer;
+#ready()Z
+#finishConnect()V
+#disconnect()V
+#socketChannel()Ljava/nio/channels/SocketChannel;
+#isOpen()Z
+#isConnected()Z
+#close()V
+#hasPendingWrites()Z
+#handshake()V
+#read(Ljava/nio/ByteBuffer;)I
+#read([Ljava/nio/ByteBuffer;)J
+#read([Ljava/nio/ByteBuffer;II)J
+#write(Ljava/nio/ByteBuffer;)I
+#write([Ljava/nio/ByteBuffer;II)J
+#write([Ljava/nio/ByteBuffer;)J
+#peerPrincipal()Ljava/security/Principal;
+#sslSession()Ljavax/net/ssl/SSLSession;
+#addInterestOps(I)V
+#removeInterestOps(I)V
+#isMute()Z
+#transferFrom(Ljava/nio/channels/FileChannel;JJ)J
@0.10.0.0
+#finishConnect()Z
-#finishConnect()V
@1.0.0
+#hasBytesBuffered()Z
@1.0.1
+#selectionKey()Ljava/nio/channels/SelectionKey;
@2.5.0
+#create(Ljava/lang/String;Ljava/nio/channels/SelectionKey;Ljavax/net/ssl/SSLEngine;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;)Lorg/apache/kafka/common/network/SslTransportLayer;
-#create(Ljava/lang/String;Ljava/nio/channels/SelectionKey;Ljavax/net/ssl/SSLEngine;)Lorg/apache/kafka/common/network/SslTransportLayer;

+###org/apache/kafka/common/network/TransportLayer
@0.9.0.0
+#ready()Z
+#finishConnect()V
+#disconnect()V
+#isConnected()Z
+#socketChannel()Ljava/nio/channels/SocketChannel;
+#handshake()V
+#hasPendingWrites()Z
+#peerPrincipal()Ljava/security/Principal;
+#addInterestOps(I)V
+#removeInterestOps(I)V
+#isMute()Z
+#transferFrom(Ljava/nio/channels/FileChannel;JJ)J
@0.10.0.0
+#finishConnect()Z
-#finishConnect()V
@1.0.0
+#hasBytesBuffered()Z
@1.0.1
+#selectionKey()Ljava/nio/channels/SelectionKey;
@2.8.0
-#hasPendingWrites()Z
-#transferFrom(Ljava/nio/channels/FileChannel;JJ)J

+###org/apache/kafka/common/network/TransportLayers
@0.10.2.0
+#hasPendingWrites(Ljava/nio/channels/GatheringByteChannel;)Z
@2.8.0
-###org/apache/kafka/common/network/TransportLayers

+###org/apache/kafka/common/Node
@0.8.2-beta
+#<init>(ILjava/lang/String;I)V
+#id()I
+#host()Ljava/lang/String;
+#port()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@0.9.0.0
+#noNode()Lorg/apache/kafka/common/Node;
+#idString()Ljava/lang/String;
@0.10.0.0
+#<init>(ILjava/lang/String;ILjava/lang/String;)V
+#isEmpty()Z
+#hasRack()Z
+#rack()Ljava/lang/String;

+###org/apache/kafka/common/PartitionInfo
@0.8.2-beta
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/Node;[Lorg/apache/kafka/common/Node;[Lorg/apache/kafka/common/Node;)V
+#topic()Ljava/lang/String;
+#partition()I
+#leader()Lorg/apache/kafka/common/Node;
+#replicas()[Lorg/apache/kafka/common/Node;
+#inSyncReplicas()[Lorg/apache/kafka/common/Node;
+#toString()Ljava/lang/String;
@1.0.0
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/Node;[Lorg/apache/kafka/common/Node;[Lorg/apache/kafka/common/Node;[Lorg/apache/kafka/common/Node;)V
+#offlineReplicas()[Lorg/apache/kafka/common/Node;

+###org/apache/kafka/common/protocol/ApiKeys
@0.8.2-beta
+#values()[Lorg/apache/kafka/common/protocol/ApiKeys;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/ApiKeys;
+#forId(I)Lorg/apache/kafka/common/protocol/ApiKeys;
@0.10.0.0
+#main([Ljava/lang/String;)V
@0.10.2.0
+#hasId(I)Z
@0.11.0.0
+#latestVersion()S
+#oldestVersion()S
+#requestSchema(S)Lorg/apache/kafka/common/protocol/types/Schema;
+#responseSchema(S)Lorg/apache/kafka/common/protocol/types/Schema;
+#parseRequest(SLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
+#parseResponse(SLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
@1.0.0
+#isVersionSupported(S)Z
@2.4.0
+#requestHeaderVersion(S)S
+#responseHeaderVersion(S)S
@2.7.0
+#enabledApis()Ljava/util/List;
@2.8.0
+#allVersions()Ljava/util/List;
+#inScope(Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;)Z
+#zkBrokerApis()Ljava/util/EnumSet;
+#apisForListener(Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;)Ljava/util/EnumSet;
-#requestSchema(S)Lorg/apache/kafka/common/protocol/types/Schema;
-#responseSchema(S)Lorg/apache/kafka/common/protocol/types/Schema;
-#parseRequest(SLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
-#parseResponse(SLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
-#enabledApis()Ljava/util/List;
@3.2.0
+#controllerApis()Ljava/util/EnumSet;
@3.3.0
+#clientApis()Ljava/util/EnumSet;

+###org/apache/kafka/common/protocol/CommonFields
@1.0.0
+#<init>()V
@2.8.0
-###org/apache/kafka/common/protocol/CommonFields

+###org/apache/kafka/common/protocol/Errors
@0.8.2-beta
+#values()[Lorg/apache/kafka/common/protocol/Errors;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/Errors;
+#exception()Lorg/apache/kafka/common/errors/ApiException;
+#code()S
+#maybeThrow()V
+#forCode(S)Lorg/apache/kafka/common/protocol/Errors;
+#forException(Ljava/lang/Throwable;)Lorg/apache/kafka/common/protocol/Errors;
@0.10.0.0
+#exceptionName()Ljava/lang/String;
+#message()Ljava/lang/String;
+#main([Ljava/lang/String;)V
@0.11.0.0
+#exception(Ljava/lang/String;)Lorg/apache/kafka/common/errors/ApiException;
@3.3.0
+#maybeUnwrapException(Ljava/lang/Throwable;)Ljava/lang/Throwable;

+###org/apache/kafka/common/protocol/Protocol
@0.8.2-beta
+#<init>()V
@0.10.0.0
+#apiVersionSupported(SS)Z
+#toHtml()Ljava/lang/String;
+#main([Ljava/lang/String;)V
@1.0.0
-#apiVersionSupported(SS)Z

+###org/apache/kafka/common/protocol/types/ArrayOf
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/protocol/types/Type;)V
+#write(Ljava/nio/ByteBuffer;Ljava/lang/Object;)V
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#sizeOf(Ljava/lang/Object;)I
+#type()Lorg/apache/kafka/common/protocol/types/Type;
+#toString()Ljava/lang/String;
+#validate(Ljava/lang/Object;)[Ljava/lang/Object;
+#validate(Ljava/lang/Object;)Ljava/lang/Object;
@0.10.0.0
+#nullable(Lorg/apache/kafka/common/protocol/types/Type;)Lorg/apache/kafka/common/protocol/types/ArrayOf;
+#isNullable()Z
@2.0.0
+#typeName()Ljava/lang/String;
+#documentation()Ljava/lang/String;
@2.4.0
+#arrayElementType()Ljava/util/Optional;
-#type()Lorg/apache/kafka/common/protocol/types/Type;

+###org/apache/kafka/common/protocol/types/BoundField
@1.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Field;Lorg/apache/kafka/common/protocol/types/Schema;I)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/protocol/types/Field$Int16
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/types/Field$Int32
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;I)V

+###org/apache/kafka/common/protocol/types/Field$Int64
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;J)V

+###org/apache/kafka/common/protocol/types/Field$Int8
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@2.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;B)V

+###org/apache/kafka/common/protocol/types/Field$NullableStr
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/types/Field$Str
@1.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/types/Field
@0.8.2-beta
+#<init>(ILjava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/protocol/types/Schema;)V
+#<init>(ILjava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;)V
+#type()Lorg/apache/kafka/common/protocol/types/Type;
@0.10.0.0
+#schema()Lorg/apache/kafka/common/protocol/types/Schema;
@1.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;ZLjava/lang/Object;)V
-#<init>(ILjava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/protocol/types/Schema;)V
-#<init>(ILjava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;Ljava/lang/Object;)V
-#type()Lorg/apache/kafka/common/protocol/types/Type;
-#schema()Lorg/apache/kafka/common/protocol/types/Schema;

+###org/apache/kafka/common/protocol/types/Schema$Visitor
@1.0.0
+#<init>()V
+#visit(Lorg/apache/kafka/common/protocol/types/Schema;)V
+#visit(Lorg/apache/kafka/common/protocol/types/ArrayOf;)V
+#visit(Lorg/apache/kafka/common/protocol/types/Type;)V
@2.4.0
-#visit(Lorg/apache/kafka/common/protocol/types/ArrayOf;)V

+###org/apache/kafka/common/protocol/types/Schema
@0.8.2-beta
+#<init>([Lorg/apache/kafka/common/protocol/types/Field;)V
+#write(Ljava/nio/ByteBuffer;Ljava/lang/Object;)V
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#sizeOf(Ljava/lang/Object;)I
+#numFields()I
+#get(I)Lorg/apache/kafka/common/protocol/types/Field;
+#get(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/types/Field;
+#fields()[Lorg/apache/kafka/common/protocol/types/Field;
+#toString()Ljava/lang/String;
+#validate(Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#validate(Ljava/lang/Object;)Ljava/lang/Object;
@0.10.0.0
+#read(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
@1.0.0
+#get(I)Lorg/apache/kafka/common/protocol/types/BoundField;
+#get(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/types/BoundField;
+#fields()[Lorg/apache/kafka/common/protocol/types/BoundField;
+#walk(Lorg/apache/kafka/common/protocol/types/Schema$Visitor;)V
-#get(I)Lorg/apache/kafka/common/protocol/types/Field;
-#get(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/types/Field;
-#fields()[Lorg/apache/kafka/common/protocol/types/Field;
@2.3.0
+#<init>(Z[Lorg/apache/kafka/common/protocol/types/Field;)V

+###org/apache/kafka/common/protocol/types/SchemaException
@0.8.2-beta
+#<init>(Ljava/lang/String;)V
@2.5.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/protocol/types/Struct
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/protocol/types/Schema;)V
+#schema()Lorg/apache/kafka/common/protocol/types/Schema;
+#get(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Object;
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#hasField(Ljava/lang/String;)Z
+#getStruct(Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Struct;
+#getStruct(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/types/Struct;
+#getShort(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Short;
+#getShort(Ljava/lang/String;)Ljava/lang/Short;
+#getInt(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Integer;
+#getInt(Ljava/lang/String;)Ljava/lang/Integer;
+#getLong(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Long;
+#getLong(Ljava/lang/String;)Ljava/lang/Long;
+#getBytes(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/nio/ByteBuffer;
+#getBytes(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#getArray(Lorg/apache/kafka/common/protocol/types/Field;)[Ljava/lang/Object;
+#getArray(Ljava/lang/String;)[Ljava/lang/Object;
+#getString(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/String;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#set(Lorg/apache/kafka/common/protocol/types/Field;Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#instance(Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Struct;
+#instance(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/types/Struct;
+#clear()V
+#sizeOf()I
+#writeTo(Ljava/nio/ByteBuffer;)V
+#validate()V
+#toBytes()[Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.9.0.0
+#getByte(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Byte;
+#getByte(Ljava/lang/String;)B
@0.10.0.0
+#getBoolean(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Boolean;
+#getBoolean(Ljava/lang/String;)Ljava/lang/Boolean;
@0.10.2.0
+#getRecords(Ljava/lang/String;)Lorg/apache/kafka/common/record/Records;
-#toBytes()[Ljava/nio/ByteBuffer;
@0.11.0.0
+#getUnsignedInt(Ljava/lang/String;)Ljava/lang/Long;
@1.0.0
+#get(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Object;
+#get(Lorg/apache/kafka/common/protocol/types/Field$Int8;)Ljava/lang/Byte;
+#get(Lorg/apache/kafka/common/protocol/types/Field$Int32;)Ljava/lang/Integer;
+#get(Lorg/apache/kafka/common/protocol/types/Field$Int64;)Ljava/lang/Long;
+#get(Lorg/apache/kafka/common/protocol/types/Field$Int16;)Ljava/lang/Short;
+#get(Lorg/apache/kafka/common/protocol/types/Field$Str;)Ljava/lang/String;
+#get(Lorg/apache/kafka/common/protocol/types/Field$NullableStr;)Ljava/lang/String;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$Int64;J)Ljava/lang/Long;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$Int32;I)Ljava/lang/Integer;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$NullableStr;Ljava/lang/String;)Ljava/lang/String;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$Str;Ljava/lang/String;)Ljava/lang/String;
+#hasField(Lorg/apache/kafka/common/protocol/types/Field;)Z
+#getStruct(Lorg/apache/kafka/common/protocol/types/BoundField;)Lorg/apache/kafka/common/protocol/types/Struct;
+#getByte(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Byte;
+#getShort(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Short;
+#getInt(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Integer;
+#getLong(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Long;
+#getArray(Lorg/apache/kafka/common/protocol/types/BoundField;)[Ljava/lang/Object;
+#getString(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/String;
+#getBoolean(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Boolean;
+#getBytes(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/nio/ByteBuffer;
+#set(Lorg/apache/kafka/common/protocol/types/BoundField;Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Str;Ljava/lang/String;)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$NullableStr;Ljava/lang/String;)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Int8;B)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Int32;I)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Int64;J)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Int16;S)Lorg/apache/kafka/common/protocol/types/Struct;
+#setIfExists(Lorg/apache/kafka/common/protocol/types/Field;Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#instance(Lorg/apache/kafka/common/protocol/types/BoundField;)Lorg/apache/kafka/common/protocol/types/Struct;
-#get(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Object;
-#getStruct(Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Struct;
-#getByte(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Byte;
-#getShort(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Short;
-#getInt(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Integer;
-#getLong(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Long;
-#getArray(Lorg/apache/kafka/common/protocol/types/Field;)[Ljava/lang/Object;
-#getString(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/String;
-#getBoolean(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/lang/Boolean;
-#getBytes(Lorg/apache/kafka/common/protocol/types/Field;)Ljava/nio/ByteBuffer;
-#set(Lorg/apache/kafka/common/protocol/types/Field;Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
-#instance(Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Struct;
@1.1.0
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$Int16;S)Ljava/lang/Short;
+#setIfExists(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
@2.0.0
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$Int8;B)Ljava/lang/Byte;
+#getRecords(Ljava/lang/String;)Lorg/apache/kafka/common/record/BaseRecords;
-#getRecords(Ljava/lang/String;)Lorg/apache/kafka/common/record/Records;
@2.1.0
+#get(Lorg/apache/kafka/common/protocol/types/Field$Array;)[Ljava/lang/Object;
+#get(Lorg/apache/kafka/common/protocol/types/Field$ComplexArray;)[Ljava/lang/Object;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$Bool;Z)Z
+#getOrEmpty(Lorg/apache/kafka/common/protocol/types/Field$Array;)[Ljava/lang/Object;
+#getOrEmpty(Lorg/apache/kafka/common/protocol/types/Field$ComplexArray;)[Ljava/lang/Object;
+#hasField(Lorg/apache/kafka/common/protocol/types/Field$ComplexArray;)Z
+#set(Lorg/apache/kafka/common/protocol/types/Field$Array;[Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$ComplexArray;[Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#setIfExists(Lorg/apache/kafka/common/protocol/types/Field$Array;[Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#setIfExists(Lorg/apache/kafka/common/protocol/types/Field$ComplexArray;[Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Struct;
+#instance(Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Struct;
+#instance(Lorg/apache/kafka/common/protocol/types/Field$ComplexArray;)Lorg/apache/kafka/common/protocol/types/Struct;
@2.2.0
+#get(Lorg/apache/kafka/common/protocol/types/Field$Bool;)Ljava/lang/Boolean;
+#getByteArray(Ljava/lang/String;)[B
+#set(Lorg/apache/kafka/common/protocol/types/Field$Bool;Z)Lorg/apache/kafka/common/protocol/types/Struct;
+#setByteArray(Ljava/lang/String;[B)Lorg/apache/kafka/common/protocol/types/Struct;
@2.4.0
+#get(Lorg/apache/kafka/common/protocol/types/Field$UUID;)Ljava/util/UUID;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$UUID;Ljava/util/UUID;)Ljava/util/UUID;
+#getUUID(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/util/UUID;
+#getUUID(Ljava/lang/String;)Ljava/util/UUID;
+#set(Lorg/apache/kafka/common/protocol/types/Field$UUID;Ljava/util/UUID;)Lorg/apache/kafka/common/protocol/types/Struct;
@2.5.0
+#get(Lorg/apache/kafka/common/protocol/types/Field$Float64;)Ljava/lang/Double;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$Float64;D)Ljava/lang/Double;
+#getDouble(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Double;
+#getDouble(Ljava/lang/String;)Ljava/lang/Double;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Float64;D)Lorg/apache/kafka/common/protocol/types/Struct;
@2.8.0
+#get(Lorg/apache/kafka/common/protocol/types/Field$UUID;)Lorg/apache/kafka/common/Uuid;
+#get(Lorg/apache/kafka/common/protocol/types/Field$Uint16;)Ljava/lang/Integer;
+#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$UUID;Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/Uuid;
+#getUnsignedShort(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Integer;
+#getUnsignedShort(Ljava/lang/String;)Ljava/lang/Integer;
+#getUuid(Lorg/apache/kafka/common/protocol/types/BoundField;)Lorg/apache/kafka/common/Uuid;
+#getUuid(Ljava/lang/String;)Lorg/apache/kafka/common/Uuid;
+#set(Lorg/apache/kafka/common/protocol/types/Field$UUID;Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/protocol/types/Struct;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Uint16;I)Lorg/apache/kafka/common/protocol/types/Struct;
-#get(Lorg/apache/kafka/common/protocol/types/Field$UUID;)Ljava/util/UUID;
-#getOrElse(Lorg/apache/kafka/common/protocol/types/Field$UUID;Ljava/util/UUID;)Ljava/util/UUID;
-#getUUID(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/util/UUID;
-#getUUID(Ljava/lang/String;)Ljava/util/UUID;
-#set(Lorg/apache/kafka/common/protocol/types/Field$UUID;Ljava/util/UUID;)Lorg/apache/kafka/common/protocol/types/Struct;
@3.3.0
+#get(Lorg/apache/kafka/common/protocol/types/Field$Uint32;)Ljava/lang/Long;
+#getUnsignedInt(Lorg/apache/kafka/common/protocol/types/BoundField;)Ljava/lang/Long;
+#set(Lorg/apache/kafka/common/protocol/types/Field$Uint32;J)Lorg/apache/kafka/common/protocol/types/Struct;

+###org/apache/kafka/common/protocol/types/Type
@0.8.2-beta
+#<init>()V
+#write(Ljava/nio/ByteBuffer;Ljava/lang/Object;)V
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#sizeOf(Ljava/lang/Object;)I
+#validate(Ljava/lang/Object;)Ljava/lang/Object;
@0.9.0.1
+#isNullable()Z
@2.0.0
+#main([Ljava/lang/String;)V
@2.4.0
+#arrayElementType()Ljava/util/Optional;
+#isArray()Z

+###org/apache/kafka/common/record/AbstractLegacyRecordBatch
@0.11.0.0
+#<init>()V
+#outerRecord()Lorg/apache/kafka/common/record/LegacyRecord;
+#lastOffset()J
+#isValid()Z
+#ensureValid()V
+#keySize()I
+#hasKey()Z
+#key()Ljava/nio/ByteBuffer;
+#valueSize()I
+#hasValue()Z
+#value()Ljava/nio/ByteBuffer;
+#headers()[Lorg/apache/kafka/common/header/Header;
+#hasMagic(B)Z
+#hasTimestampType(Lorg/apache/kafka/common/record/TimestampType;)Z
+#checksumOrNull()Ljava/lang/Long;
+#checksum()J
+#maxTimestamp()J
+#timestamp()J
+#timestampType()Lorg/apache/kafka/common/record/TimestampType;
+#baseOffset()J
+#magic()B
+#compressionType()Lorg/apache/kafka/common/record/CompressionType;
+#sizeInBytes()I
+#countOrNull()Ljava/lang/Integer;
+#toString()Ljava/lang/String;
+#writeTo(Ljava/nio/ByteBuffer;)V
+#producerId()J
+#producerEpoch()S
+#hasProducerId()Z
+#sequence()I
+#baseSequence()I
+#lastSequence()I
+#isTransactional()Z
+#partitionLeaderEpoch()I
+#isControlBatch()Z
+#iterator()Ljava/util/Iterator;
+#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
+#isCompressed()Z
+#nextOffset()J
@2.8.0
+#streamingIterator(Lorg/apache/kafka/common/utils/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
-#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
@3.0.0
-#checksumOrNull()Ljava/lang/Long;
@3.1.0
+#deleteHorizonMs()Ljava/util/OptionalLong;

+###org/apache/kafka/common/record/AbstractRecords
@0.10.2.0
+#<init>()V
+#hasMatchingShallowMagic(B)Z
+#toMessageFormat(B)Lorg/apache/kafka/common/record/Records;
+#estimatedSize(Lorg/apache/kafka/common/record/CompressionType;Ljava/lang/Iterable;)I
+#records()Ljava/lang/Iterable;
@0.11.0.0
+#hasMatchingMagic(B)Z
+#hasCompatibleMagic(B)Z
+#estimateSizeInBytes(BJLorg/apache/kafka/common/record/CompressionType;Ljava/lang/Iterable;)I
+#estimateSizeInBytes(BLorg/apache/kafka/common/record/CompressionType;Ljava/lang/Iterable;)I
+#estimateSizeInBytesUpperBound(BLorg/apache/kafka/common/record/CompressionType;[B[B[Lorg/apache/kafka/common/header/Header;)I
+#estimateSizeInBytesUpperBound(BLorg/apache/kafka/common/record/CompressionType;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)I
-#hasMatchingShallowMagic(B)Z
-#toMessageFormat(B)Lorg/apache/kafka/common/record/Records;
-#estimatedSize(Lorg/apache/kafka/common/record/CompressionType;Ljava/lang/Iterable;)I
@1.0.0
+#recordBatchHeaderSizeInBytes(BLorg/apache/kafka/common/record/CompressionType;)I
@2.0.0
+#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordsSend;
@2.4.0
+#firstBatch()Lorg/apache/kafka/common/record/RecordBatch;
@2.8.0
+#toSend()Lorg/apache/kafka/common/record/DefaultRecordsSend;
+#toSend()Lorg/apache/kafka/common/record/RecordsSend;
-#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordsSend;
@3.0.0
-#hasCompatibleMagic(B)Z

+###org/apache/kafka/common/record/BufferSupplier
@0.10.2.2
+#<init>()V
+#create()Lorg/apache/kafka/common/record/BufferSupplier;
+#get(I)Ljava/nio/ByteBuffer;
+#release(Ljava/nio/ByteBuffer;)V
+#close()V
@2.8.0
-###org/apache/kafka/common/record/BufferSupplier

+###org/apache/kafka/common/record/CompressionRatioEstimator
@0.11.0.0
+#<init>()V
+#updateEstimation(Ljava/lang/String;Lorg/apache/kafka/common/record/CompressionType;F)F
+#estimation(Ljava/lang/String;Lorg/apache/kafka/common/record/CompressionType;)F
+#resetEstimation(Ljava/lang/String;)V
+#removeEstimation(Ljava/lang/String;)V
+#setEstimation(Ljava/lang/String;Lorg/apache/kafka/common/record/CompressionType;F)V

+###org/apache/kafka/common/record/CompressionType
@0.8.2-beta
+#values()[Lorg/apache/kafka/common/record/CompressionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/record/CompressionType;
+#forId(I)Lorg/apache/kafka/common/record/CompressionType;
+#forName(Ljava/lang/String;)Lorg/apache/kafka/common/record/CompressionType;
@0.11.0.0
+#wrapForOutput(Lorg/apache/kafka/common/utils/ByteBufferOutputStream;B)Ljava/io/OutputStream;
+#wrapForInput(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/BufferSupplier;)Ljava/io/InputStream;
@2.8.0
+#wrapForInput(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/utils/BufferSupplier;)Ljava/io/InputStream;
-#wrapForInput(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/BufferSupplier;)Ljava/io/InputStream;
@3.3.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/record/ControlRecordType
@0.11.0.0
+#values()[Lorg/apache/kafka/common/record/ControlRecordType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/record/ControlRecordType;
+#recordKey()Lorg/apache/kafka/common/protocol/types/Struct;
+#parseTypeId(Ljava/nio/ByteBuffer;)S
+#fromTypeId(S)Lorg/apache/kafka/common/record/ControlRecordType;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/record/ControlRecordType;

+###org/apache/kafka/common/record/ConvertedRecords
@1.0.0
+#<init>(Lorg/apache/kafka/common/record/Records;Lorg/apache/kafka/common/record/RecordsProcessingStats;)V
+#records()Lorg/apache/kafka/common/record/Records;
+#recordsProcessingStats()Lorg/apache/kafka/common/record/RecordsProcessingStats;
@2.0.0
+#<init>(Lorg/apache/kafka/common/record/Records;Lorg/apache/kafka/common/record/RecordConversionStats;)V
+#recordConversionStats()Lorg/apache/kafka/common/record/RecordConversionStats;
-#<init>(Lorg/apache/kafka/common/record/Records;Lorg/apache/kafka/common/record/RecordsProcessingStats;)V
-#recordsProcessingStats()Lorg/apache/kafka/common/record/RecordsProcessingStats;

+###org/apache/kafka/common/record/DefaultRecord
@0.11.0.0
+#offset()J
+#sequence()I
+#sizeInBytes()I
+#timestamp()J
+#attributes()B
+#checksumOrNull()Ljava/lang/Long;
+#isValid()Z
+#ensureValid()V
+#keySize()I
+#valueSize()I
+#hasKey()Z
+#key()Ljava/nio/ByteBuffer;
+#hasValue()Z
+#value()Ljava/nio/ByteBuffer;
+#headers()[Lorg/apache/kafka/common/header/Header;
+#writeTo(Ljava/io/DataOutputStream;IJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)I
+#hasMagic(B)Z
+#isCompressed()Z
+#hasTimestampType(Lorg/apache/kafka/common/record/TimestampType;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#readFrom(Ljava/io/DataInput;JJILjava/lang/Long;)Lorg/apache/kafka/common/record/DefaultRecord;
+#readFrom(Ljava/nio/ByteBuffer;JJILjava/lang/Long;)Lorg/apache/kafka/common/record/DefaultRecord;
+#sizeInBytes(IJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)I
+#sizeInBytes(IJII[Lorg/apache/kafka/common/header/Header;)I
+#computePartialChecksum(JII)J
@2.4.0
+#readPartiallyFrom(Ljava/io/DataInput;[BJJILjava/lang/Long;)Lorg/apache/kafka/common/record/PartialDefaultRecord;
@2.8.0
+#sizeOfBodyInBytes(IJII[Lorg/apache/kafka/common/header/Header;)I
@3.0.0
-#checksumOrNull()Ljava/lang/Long;
-#isValid()Z
-#computePartialChecksum(JII)J

+###org/apache/kafka/common/record/DefaultRecordBatch
@0.11.0.0
+#magic()B
+#ensureValid()V
+#baseTimestamp()J
+#maxTimestamp()J
+#timestampType()Lorg/apache/kafka/common/record/TimestampType;
+#baseOffset()J
+#lastOffset()J
+#producerId()J
+#producerEpoch()S
+#baseSequence()I
+#lastSequence()I
+#compressionType()Lorg/apache/kafka/common/record/CompressionType;
+#sizeInBytes()I
+#countOrNull()Ljava/lang/Integer;
+#writeTo(Ljava/nio/ByteBuffer;)V
+#writeTo(Lorg/apache/kafka/common/utils/ByteBufferOutputStream;)V
+#isTransactional()Z
+#isControlBatch()Z
+#partitionLeaderEpoch()I
+#iterator()Ljava/util/Iterator;
+#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
+#setLastOffset(J)V
+#setMaxTimestamp(Lorg/apache/kafka/common/record/TimestampType;J)V
+#setPartitionLeaderEpoch(I)V
+#checksum()J
+#isValid()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#writeEmptyHeader(Ljava/nio/ByteBuffer;BJSIJJILorg/apache/kafka/common/record/TimestampType;JZZ)V
+#toString()Ljava/lang/String;
+#sizeInBytes(JLjava/lang/Iterable;)I
+#sizeInBytes(Ljava/lang/Iterable;)I
+#isCompressed()Z
+#nextOffset()J
+#hasProducerId()Z
@0.11.0.1
+#firstTimestamp()J
-#baseTimestamp()J
@2.1.1
+#incrementSequence(II)I
+#decrementSequence(II)I
@2.4.0
+#skipKeyValueIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
@2.8.0
+#recordInputStream(Lorg/apache/kafka/common/utils/BufferSupplier;)Ljava/io/DataInputStream;
+#skipKeyValueIterator(Lorg/apache/kafka/common/utils/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
+#streamingIterator(Lorg/apache/kafka/common/utils/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
+#writeHeader(Ljava/nio/ByteBuffer;JIIBLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZZII)V
-#skipKeyValueIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
-#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
@3.1.0
+#baseTimestamp()J
+#deleteHorizonMs()Ljava/util/OptionalLong;
+#writeHeader(Ljava/nio/ByteBuffer;JIIBLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZZZII)V
-#firstTimestamp()J
-#writeHeader(Ljava/nio/ByteBuffer;JIIBLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZZII)V

+###org/apache/kafka/common/record/EndTransactionMarker
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/record/ControlRecordType;I)V
+#coordinatorEpoch()I
+#controlType()Lorg/apache/kafka/common/record/ControlRecordType;
+#serializeValue()Ljava/nio/ByteBuffer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#deserialize(Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/EndTransactionMarker;

+###org/apache/kafka/common/record/FileLogInputStream$FileChannelRecordBatch
@0.11.0.0
+#compressionType()Lorg/apache/kafka/common/record/CompressionType;
+#timestampType()Lorg/apache/kafka/common/record/TimestampType;
+#checksum()J
+#maxTimestamp()J
+#position()I
+#magic()B
+#iterator()Ljava/util/Iterator;
+#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
+#isValid()Z
+#ensureValid()V
+#sizeInBytes()I
+#writeTo(Ljava/nio/ByteBuffer;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#isCompressed()Z
+#nextOffset()J
+#hasProducerId()Z
@2.8.0
+#streamingIterator(Lorg/apache/kafka/common/utils/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
-#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;

+###org/apache/kafka/common/record/FileLogInputStream
@0.10.2.0
+#<init>(Ljava/nio/channels/FileChannel;III)V
+#nextEntry()Lorg/apache/kafka/common/record/FileLogInputStream$FileChannelLogEntry;
+#nextEntry()Lorg/apache/kafka/common/record/LogEntry;
@0.11.0.0
+#nextBatch()Lorg/apache/kafka/common/record/FileLogInputStream$FileChannelRecordBatch;
+#nextBatch()Lorg/apache/kafka/common/record/RecordBatch;
-#<init>(Ljava/nio/channels/FileChannel;III)V
-#nextEntry()Lorg/apache/kafka/common/record/FileLogInputStream$FileChannelLogEntry;
-#nextEntry()Lorg/apache/kafka/common/record/LogEntry;

+###org/apache/kafka/common/record/FileRecords$LogOffsetPosition
@0.11.0.0
+#<init>(JII)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/record/FileRecords$TimestampAndOffset
@0.10.2.0
+#<init>(JJ)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.2.0
+#<init>(JJLjava/util/Optional;)V
-#<init>(JJ)V

+###org/apache/kafka/common/record/FileRecords
@0.10.2.0
+#<init>(Ljava/io/File;Ljava/nio/channels/FileChannel;IIZ)V
+#sizeInBytes()I
+#file()Ljava/io/File;
+#channel()Ljava/nio/channels/FileChannel;
+#readInto(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
+#read(II)Lorg/apache/kafka/common/record/FileRecords;
+#append(Lorg/apache/kafka/common/record/MemoryRecords;)I
+#flush()V
+#close()V
+#delete()Z
+#trim()V
+#setFile(Ljava/io/File;)V
+#renameTo(Ljava/io/File;)V
+#truncateTo(I)I
+#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J
+#searchForOffsetWithSize(JI)Lorg/apache/kafka/common/record/FileRecords$LogEntryPosition;
+#searchForTimestamp(JI)Lorg/apache/kafka/common/record/FileRecords$TimestampAndOffset;
+#largestTimestampAfter(I)Lorg/apache/kafka/common/record/FileRecords$TimestampAndOffset;
+#shallowEntries()Ljava/lang/Iterable;
+#shallowEntries(I)Ljava/lang/Iterable;
+#deepEntries()Ljava/lang/Iterable;
+#open(Ljava/io/File;ZZIZ)Lorg/apache/kafka/common/record/FileRecords;
+#open(Ljava/io/File;ZIZ)Lorg/apache/kafka/common/record/FileRecords;
+#open(Ljava/io/File;Z)Lorg/apache/kafka/common/record/FileRecords;
+#open(Ljava/io/File;)Lorg/apache/kafka/common/record/FileRecords;
@0.10.2.2
+#deepEntries(Lorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
@0.11.0.0
+#downConvert(BJ)Lorg/apache/kafka/common/record/Records;
+#searchForOffsetWithSize(JI)Lorg/apache/kafka/common/record/FileRecords$LogOffsetPosition;
+#searchForTimestamp(JIJ)Lorg/apache/kafka/common/record/FileRecords$TimestampAndOffset;
+#batches()Ljava/lang/Iterable;
-#searchForOffsetWithSize(JI)Lorg/apache/kafka/common/record/FileRecords$LogEntryPosition;
-#searchForTimestamp(JI)Lorg/apache/kafka/common/record/FileRecords$TimestampAndOffset;
-#shallowEntries()Ljava/lang/Iterable;
-#shallowEntries(I)Ljava/lang/Iterable;
-#deepEntries(Lorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
-#deepEntries()Ljava/lang/Iterable;
@1.0.0
+#closeHandlers()V
+#downConvert(BJLorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/record/ConvertedRecords;
-#downConvert(BJ)Lorg/apache/kafka/common/record/Records;
@1.1.0
+#deleteIfExists()Z
-#delete()Z
@2.0.0
+#readInto(Ljava/nio/ByteBuffer;I)V
+#slice(II)Lorg/apache/kafka/common/record/FileRecords;
+#toString()Ljava/lang/String;
+#batchesFrom(I)Ljava/lang/Iterable;
+#batchIterator()Lorg/apache/kafka/common/utils/AbstractIterator;
-#readInto(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
-#read(II)Lorg/apache/kafka/common/record/FileRecords;
@2.1.0
-#<init>(Ljava/io/File;Ljava/nio/channels/FileChannel;IIZ)V
@2.6.0
+#updateParentDir(Ljava/io/File;)V
-#setFile(Ljava/io/File;)V
@2.8.0
+#sliceUnaligned(II)Lorg/apache/kafka/common/record/UnalignedFileRecords;
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;JI)J
-#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J

+###org/apache/kafka/common/record/InvalidRecordException
@0.8.2-beta
+#<init>(Ljava/lang/String;)V
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@2.4.0
-###org/apache/kafka/common/record/InvalidRecordException

+###org/apache/kafka/common/record/KafkaLZ4BlockInputStream
@0.9.0.0
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
+#mark(I)V
+#reset()V
+#markSupported()Z
@0.10.0.0
+#<init>(Ljava/io/InputStream;Z)V
+#ignoreFlagDescriptorChecksum()Z
@0.10.2.2
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/BufferSupplier;Z)V
-#<init>(Ljava/io/InputStream;Z)V
-#<init>(Ljava/io/InputStream;)V
@2.8.0
-###org/apache/kafka/common/record/KafkaLZ4BlockInputStream

+###org/apache/kafka/common/record/KafkaLZ4BlockOutputStream$BD
@0.9.0.0
+#<init>()V
+#<init>(I)V
+#fromByte(B)Lorg/apache/kafka/common/record/KafkaLZ4BlockOutputStream$BD;
+#getBlockMaximumSize()I
+#toByte()B
@2.8.0
-###org/apache/kafka/common/record/KafkaLZ4BlockOutputStream$BD

+###org/apache/kafka/common/record/KafkaLZ4BlockOutputStream$FLG
@0.9.0.0
+#<init>()V
+#<init>(Z)V
+#fromByte(B)Lorg/apache/kafka/common/record/KafkaLZ4BlockOutputStream$FLG;
+#toByte()B
+#isPresetDictionarySet()Z
+#isContentChecksumSet()Z
+#isContentSizeSet()Z
+#isBlockChecksumSet()Z
+#isBlockIndependenceSet()Z
+#getVersion()I
@0.10.0.0
-#isPresetDictionarySet()Z
@2.8.0
-###org/apache/kafka/common/record/KafkaLZ4BlockOutputStream$FLG

+###org/apache/kafka/common/record/KafkaLZ4BlockOutputStream
@0.9.0.0
+#<init>(Ljava/io/OutputStream;IZ)V
+#<init>(Ljava/io/OutputStream;I)V
+#<init>(Ljava/io/OutputStream;)V
+#write(I)V
+#write([BII)V
+#flush()V
+#close()V
@0.10.0.0
+#<init>(Ljava/io/OutputStream;IZZ)V
+#<init>(Ljava/io/OutputStream;Z)V
+#useBrokenFlagDescriptorChecksum()Z
@2.8.0
-###org/apache/kafka/common/record/KafkaLZ4BlockOutputStream

+###org/apache/kafka/common/record/LegacyRecord
@0.11.0.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Ljava/nio/ByteBuffer;Ljava/lang/Long;Lorg/apache/kafka/common/record/TimestampType;)V
+#computeChecksum()J
+#checksum()J
+#isValid()Z
+#wrapperRecordTimestamp()Ljava/lang/Long;
+#wrapperRecordTimestampType()Lorg/apache/kafka/common/record/TimestampType;
+#ensureValid()V
+#sizeInBytes()I
+#keySize()I
+#hasKey()Z
+#valueSize()I
+#hasNullValue()Z
+#magic()B
+#attributes()B
+#timestamp()J
+#timestampType()Lorg/apache/kafka/common/record/TimestampType;
+#compressionType()Lorg/apache/kafka/common/record/CompressionType;
+#value()Ljava/nio/ByteBuffer;
+#key()Ljava/nio/ByteBuffer;
+#buffer()Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#create(BJ[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)Lorg/apache/kafka/common/record/LegacyRecord;
+#create(BJ[B[B)Lorg/apache/kafka/common/record/LegacyRecord;
+#writeCompressedRecordHeader(Ljava/nio/ByteBuffer;BIJLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)V
+#write(Ljava/io/DataOutputStream;BJ[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)J
+#write(Ljava/io/DataOutputStream;BJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)J
+#write(Ljava/io/DataOutputStream;BJBJ[B[B)V
+#recordSize(BII)I
+#computeAttributes(BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)B
+#computeChecksum(BBJ[B[B)J
+#timestampType(BLorg/apache/kafka/common/record/TimestampType;B)Lorg/apache/kafka/common/record/TimestampType;

+###org/apache/kafka/common/record/MemoryRecords$FilterResult
@0.10.2.0
+#<init>(IIIIJJJ)V
@0.10.2.2
+#<init>(Ljava/nio/ByteBuffer;IIIIJJJ)V
-#<init>(IIIIJJJ)V
@2.0.1
+#outputBuffer()Ljava/nio/ByteBuffer;
+#messagesRead()I
+#bytesRead()I
+#messagesRetained()I
+#bytesRetained()I
+#maxOffset()J
+#maxTimestamp()J
+#shallowOffsetOfMaxTimestamp()J
-#<init>(Ljava/nio/ByteBuffer;IIIIJJJ)V

+###org/apache/kafka/common/record/MemoryRecords$RecordFilter$BatchRetention
@0.11.0.1
+#values()[Lorg/apache/kafka/common/record/MemoryRecords$RecordFilter$BatchRetention;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/record/MemoryRecords$RecordFilter$BatchRetention;

+###org/apache/kafka/common/record/MemoryRecords$RecordFilter
@0.11.0.0
+#<init>()V
@3.1.0
+#<init>(JJ)V
-#<init>()V

+###org/apache/kafka/common/record/MemoryRecords
@0.8.2-beta
+#emptyRecords(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;I)Lorg/apache/kafka/common/record/MemoryRecords;
+#emptyRecords(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;)Lorg/apache/kafka/common/record/MemoryRecords;
+#iterableRecords(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/record/MemoryRecords;
+#append(JLorg/apache/kafka/common/record/Record;)V
+#append(J[B[B)V
+#hasRoomFor([B[B)Z
+#isFull()Z
+#close()V
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)I
+#sizeInBytes()I
+#compressionRate()D
+#capacity()I
+#buffer()Ljava/nio/ByteBuffer;
+#iterator()Ljava/util/Iterator;
@0.9.0.0
+#readableRecords(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/record/MemoryRecords;
+#initialCapacity()I
+#toString()Ljava/lang/String;
-#iterableRecords(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/record/MemoryRecords;
-#writeTo(Ljava/nio/channels/GatheringByteChannel;)I
-#capacity()I
@0.10.0.0
+#append(JJ[B[B)J
-#append(J[B[B)V
@0.10.0.1
+#isWritable()Z
@0.10.2.0
+#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J
+#writeFullyTo(Ljava/nio/channels/GatheringByteChannel;)I
+#validBytes()I
+#filterTo(Lorg/apache/kafka/common/record/MemoryRecords$LogEntryFilter;Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/record/MemoryRecords$FilterResult;
+#shallowEntries()Ljava/lang/Iterable;
+#deepEntries()Ljava/lang/Iterable;
+#deepEntries(Z)Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;I)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJ)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;J)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;J)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#withLogEntries(Lorg/apache/kafka/common/record/CompressionType;Ljava/util/List;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withLogEntries([Lorg/apache/kafka/common/record/LogEntry;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(Lorg/apache/kafka/common/record/CompressionType;JLjava/util/List;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords([Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(J[Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(Lorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(Lorg/apache/kafka/common/record/TimestampType;Lorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(JLorg/apache/kafka/common/record/TimestampType;Lorg/apache/kafka/common/record/CompressionType;JLjava/util/List;)Lorg/apache/kafka/common/record/MemoryRecords;
+#builderWithEntries(Lorg/apache/kafka/common/record/TimestampType;Lorg/apache/kafka/common/record/CompressionType;JLjava/util/List;)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
-#emptyRecords(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;I)Lorg/apache/kafka/common/record/MemoryRecords;
-#emptyRecords(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;)Lorg/apache/kafka/common/record/MemoryRecords;
-#append(JLorg/apache/kafka/common/record/Record;)V
-#append(JJ[B[B)J
-#hasRoomFor([B[B)Z
-#isFull()Z
-#close()V
-#compressionRate()D
-#initialCapacity()I
-#iterator()Ljava/util/Iterator;
-#isWritable()Z
@0.10.2.2
+#filterTo(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecords$LogEntryFilter;Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/record/MemoryRecords$FilterResult;
+#deepEntries(Lorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
+#deepEntries(ZLorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
-#filterTo(Lorg/apache/kafka/common/record/MemoryRecords$LogEntryFilter;Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/record/MemoryRecords$FilterResult;
-#deepEntries(Z)Ljava/lang/Iterable;
@0.11.0.0
+#downConvert(BJ)Lorg/apache/kafka/common/record/MemoryRecords;
+#filterTo(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecords$RecordFilter;Ljava/nio/ByteBuffer;ILorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/record/MemoryRecords$FilterResult;
+#batches()Ljava/lang/Iterable;
+#idempotentBuilder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;JJSI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;JJSIZ)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZZI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
+#withRecords(Lorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(Lorg/apache/kafka/common/record/CompressionType;I[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(BLorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(JLorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(JLorg/apache/kafka/common/record/CompressionType;Ljava/lang/Integer;[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withIdempotentRecords(Lorg/apache/kafka/common/record/CompressionType;JSI[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withIdempotentRecords(BJLorg/apache/kafka/common/record/CompressionType;JSII[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withIdempotentRecords(JLorg/apache/kafka/common/record/CompressionType;JSII[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withTransactionalRecords(Lorg/apache/kafka/common/record/CompressionType;JSI[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withTransactionalRecords(BJLorg/apache/kafka/common/record/CompressionType;JSII[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withTransactionalRecords(JLorg/apache/kafka/common/record/CompressionType;JSII[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(BJLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withRecords(BJLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JSIIZ[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withEndTransactionMarker(JSLorg/apache/kafka/common/record/EndTransactionMarker;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withEndTransactionMarker(JJSLorg/apache/kafka/common/record/EndTransactionMarker;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withEndTransactionMarker(JJIJSLorg/apache/kafka/common/record/EndTransactionMarker;)Lorg/apache/kafka/common/record/MemoryRecords;
+#writeEndTransactionalMarker(Ljava/nio/ByteBuffer;JJIJSLorg/apache/kafka/common/record/EndTransactionMarker;)V
+#downConvert(BJ)Lorg/apache/kafka/common/record/Records;
-#filterTo(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecords$LogEntryFilter;Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/record/MemoryRecords$FilterResult;
-#shallowEntries()Ljava/lang/Iterable;
-#deepEntries(Lorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
-#deepEntries()Ljava/lang/Iterable;
-#deepEntries(ZLorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
-#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;I)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
-#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
-#builder(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
-#withLogEntries(Lorg/apache/kafka/common/record/CompressionType;Ljava/util/List;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withLogEntries([Lorg/apache/kafka/common/record/LogEntry;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withRecords(Lorg/apache/kafka/common/record/CompressionType;JLjava/util/List;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withRecords([Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withRecords(J[Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withRecords(Lorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withRecords(Lorg/apache/kafka/common/record/TimestampType;Lorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withRecords(JLorg/apache/kafka/common/record/TimestampType;Lorg/apache/kafka/common/record/CompressionType;JLjava/util/List;)Lorg/apache/kafka/common/record/MemoryRecords;
-#builderWithEntries(Lorg/apache/kafka/common/record/TimestampType;Lorg/apache/kafka/common/record/CompressionType;JLjava/util/List;)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
@1.0.0
+#downConvert(BJLorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/record/ConvertedRecords;
-#downConvert(BJ)Lorg/apache/kafka/common/record/MemoryRecords;
-#downConvert(BJ)Lorg/apache/kafka/common/record/Records;
@2.0.0
+#batchIterator()Lorg/apache/kafka/common/utils/AbstractIterator;
+#firstBatchSize()Ljava/lang/Integer;
+#withRecords(BJLorg/apache/kafka/common/record/CompressionType;[Lorg/apache/kafka/common/record/SimpleRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
@2.6.3
+#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
@2.7.0
+#withLeaderChangeMessage(JILorg/apache/kafka/common/message/LeaderChangeMessage;)Lorg/apache/kafka/common/record/MemoryRecords;
-#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
@2.7.2
+#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
@2.8.0
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;JI)J
+#filterTo(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecords$RecordFilter;Ljava/nio/ByteBuffer;ILorg/apache/kafka/common/utils/BufferSupplier;)Lorg/apache/kafka/common/record/MemoryRecords$FilterResult;
+#withLeaderChangeMessage(JJILorg/apache/kafka/common/message/LeaderChangeMessage;)Lorg/apache/kafka/common/record/MemoryRecords;
-#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J
-#filterTo(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecords$RecordFilter;Ljava/nio/ByteBuffer;ILorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/record/MemoryRecords$FilterResult;
-#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
-#withLeaderChangeMessage(JILorg/apache/kafka/common/message/LeaderChangeMessage;)Lorg/apache/kafka/common/record/MemoryRecords;
@2.8.1
+#builder(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JI)Lorg/apache/kafka/common/record/MemoryRecordsBuilder;
@3.0.0
+#withLeaderChangeMessage(JJILjava/nio/ByteBuffer;Lorg/apache/kafka/common/message/LeaderChangeMessage;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withSnapshotHeaderRecord(JJILjava/nio/ByteBuffer;Lorg/apache/kafka/common/message/SnapshotHeaderRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
+#withSnapshotFooterRecord(JJILjava/nio/ByteBuffer;Lorg/apache/kafka/common/message/SnapshotFooterRecord;)Lorg/apache/kafka/common/record/MemoryRecords;
-#withLeaderChangeMessage(JJILorg/apache/kafka/common/message/LeaderChangeMessage;)Lorg/apache/kafka/common/record/MemoryRecords;

+###org/apache/kafka/common/record/MemoryRecordsBuilder$RecordsInfo
@0.10.2.0
+#<init>(JJ)V

+###org/apache/kafka/common/record/MemoryRecordsBuilder
@0.10.2.0
+#<init>(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJI)V
+#buffer()Ljava/nio/ByteBuffer;
+#initialCapacity()I
+#compressionRate()D
+#build()Lorg/apache/kafka/common/record/MemoryRecords;
+#info()Lorg/apache/kafka/common/record/MemoryRecordsBuilder$RecordsInfo;
+#close()V
+#appendWithOffset(JJ[B[B)J
+#append(J[B[B)J
+#convertAndAppend(Lorg/apache/kafka/common/record/Record;)V
+#convertAndAppendWithOffset(JLorg/apache/kafka/common/record/Record;)V
+#appendUnchecked(JLorg/apache/kafka/common/record/Record;)V
+#appendWithOffset(JLorg/apache/kafka/common/record/Record;)V
+#append(Lorg/apache/kafka/common/record/Record;)V
+#hasRoomFor([B[B)Z
+#isClosed()Z
+#isFull()Z
+#sizeInBytes()I
+#wrapForInput(Lorg/apache/kafka/common/record/ByteBufferInputStream;Lorg/apache/kafka/common/record/CompressionType;B)Ljava/io/DataInputStream;
@0.10.2.2
+#<init>(Lorg/apache/kafka/common/record/ByteBufferOutputStream;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJI)V
+#wrapForInput(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;BLorg/apache/kafka/common/record/BufferSupplier;)Ljava/io/InputStream;
-#wrapForInput(Lorg/apache/kafka/common/record/ByteBufferInputStream;Lorg/apache/kafka/common/record/CompressionType;B)Ljava/io/DataInputStream;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/utils/ByteBufferOutputStream;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZZII)V
+#<init>(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZZII)V
+#compressionRatio()D
+#compressionType()Lorg/apache/kafka/common/record/CompressionType;
+#isControlBatch()Z
+#isTransactional()Z
+#setProducerState(JSIZ)V
+#overrideLastOffset(J)V
+#closeForRecordAppends()V
+#abort()V
+#appendWithOffset(JJ[B[B[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
+#appendWithOffset(JJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
+#appendWithOffset(JJ[B[B)Ljava/lang/Long;
+#appendWithOffset(JJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/lang/Long;
+#appendWithOffset(JLorg/apache/kafka/common/record/SimpleRecord;)Ljava/lang/Long;
+#append(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/lang/Long;
+#append(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
+#append(J[B[B)Ljava/lang/Long;
+#append(J[B[B[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
+#append(Lorg/apache/kafka/common/record/SimpleRecord;)Ljava/lang/Long;
+#appendEndTxnMarker(JLorg/apache/kafka/common/record/EndTransactionMarker;)Ljava/lang/Long;
+#appendUncheckedWithOffset(JLorg/apache/kafka/common/record/LegacyRecord;)V
+#appendWithOffset(JLorg/apache/kafka/common/record/LegacyRecord;)V
+#append(Lorg/apache/kafka/common/record/LegacyRecord;)V
+#setEstimatedCompressionRatio(F)V
+#hasRoomFor(J[B[B[Lorg/apache/kafka/common/header/Header;)Z
+#hasRoomFor(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)Z
+#magic()B
+#producerId()J
+#producerEpoch()S
-#<init>(Lorg/apache/kafka/common/record/ByteBufferOutputStream;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJI)V
-#<init>(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJI)V
-#compressionRate()D
-#appendWithOffset(JJ[B[B)J
-#append(J[B[B)J
-#convertAndAppend(Lorg/apache/kafka/common/record/Record;)V
-#convertAndAppendWithOffset(JLorg/apache/kafka/common/record/Record;)V
-#appendUnchecked(JLorg/apache/kafka/common/record/Record;)V
-#hasRoomFor([B[B)Z
-#wrapForInput(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;BLorg/apache/kafka/common/record/BufferSupplier;)Ljava/io/InputStream;
@1.0.0
+#numRecords()I
+#uncompressedBytesWritten()I
+#reopenAndRewriteProducerState(JSIZ)V
+#estimatedSizeInBytes()I
+#baseSequence()I
-#sizeInBytes()I
@2.5.1
+#appendUncheckedWithOffset(JLorg/apache/kafka/common/record/SimpleRecord;)V
@2.7.0
+#appendControlRecordWithOffset(JLorg/apache/kafka/common/record/SimpleRecord;)Ljava/lang/Long;
+#appendLeaderChangeMessage(JLorg/apache/kafka/common/message/LeaderChangeMessage;)Ljava/lang/Long;
@3.0.0
+#appendWithOffset(JJ[B[B[Lorg/apache/kafka/common/header/Header;)V
+#appendWithOffset(JJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)V
+#appendWithOffset(JJ[B[B)V
+#appendWithOffset(JJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#appendWithOffset(JLorg/apache/kafka/common/record/SimpleRecord;)V
+#appendControlRecordWithOffset(JLorg/apache/kafka/common/record/SimpleRecord;)V
+#append(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#append(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)V
+#append(J[B[B)V
+#append(J[B[B[Lorg/apache/kafka/common/header/Header;)V
+#append(Lorg/apache/kafka/common/record/SimpleRecord;)V
+#appendEndTxnMarker(JLorg/apache/kafka/common/record/EndTransactionMarker;)V
+#appendLeaderChangeMessage(JLorg/apache/kafka/common/message/LeaderChangeMessage;)V
+#appendSnapshotHeaderMessage(JLorg/apache/kafka/common/message/SnapshotHeaderRecord;)V
+#appendSnapshotFooterMessage(JLorg/apache/kafka/common/message/SnapshotFooterRecord;)V
-#appendWithOffset(JJ[B[B[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
-#appendWithOffset(JJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
-#appendWithOffset(JJ[B[B)Ljava/lang/Long;
-#appendWithOffset(JJLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/lang/Long;
-#appendWithOffset(JLorg/apache/kafka/common/record/SimpleRecord;)Ljava/lang/Long;
-#appendControlRecordWithOffset(JLorg/apache/kafka/common/record/SimpleRecord;)Ljava/lang/Long;
-#append(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/lang/Long;
-#append(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
-#append(J[B[B)Ljava/lang/Long;
-#append(J[B[B[Lorg/apache/kafka/common/header/Header;)Ljava/lang/Long;
-#append(Lorg/apache/kafka/common/record/SimpleRecord;)Ljava/lang/Long;
-#appendEndTxnMarker(JLorg/apache/kafka/common/record/EndTransactionMarker;)Ljava/lang/Long;
-#appendLeaderChangeMessage(JLorg/apache/kafka/common/message/LeaderChangeMessage;)Ljava/lang/Long;
@3.1.0
+#<init>(Lorg/apache/kafka/common/utils/ByteBufferOutputStream;BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;JJJSIZZIIJ)V
+#hasDeleteHorizonMs()Z

+###org/apache/kafka/common/record/MutableRecordBatch
@0.11.0.0
+#setLastOffset(J)V
+#setMaxTimestamp(Lorg/apache/kafka/common/record/TimestampType;J)V
+#setPartitionLeaderEpoch(I)V
+#writeTo(Lorg/apache/kafka/common/utils/ByteBufferOutputStream;)V
@2.4.0
+#skipKeyValueIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
@2.8.0
+#skipKeyValueIterator(Lorg/apache/kafka/common/utils/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
-#skipKeyValueIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;

+###org/apache/kafka/common/record/Record
@0.8.2-beta
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>([B[BLorg/apache/kafka/common/record/CompressionType;II)V
+#<init>([B[BLorg/apache/kafka/common/record/CompressionType;)V
+#<init>([BLorg/apache/kafka/common/record/CompressionType;)V
+#<init>([B[B)V
+#<init>([B)V
+#write(Ljava/nio/ByteBuffer;[B[BLorg/apache/kafka/common/record/CompressionType;II)V
+#write(Lorg/apache/kafka/common/record/Compressor;JB[B[BII)V
+#recordSize([B[B)I
+#recordSize(II)I
+#buffer()Ljava/nio/ByteBuffer;
+#computeAttributes(Lorg/apache/kafka/common/record/CompressionType;)B
+#computeChecksum(Ljava/nio/ByteBuffer;II)J
+#computeChecksum([B[BLorg/apache/kafka/common/record/CompressionType;II)J
+#computeChecksum()J
+#checksum()J
+#isValid()Z
+#ensureValid()V
+#size()I
+#keySize()I
+#hasKey()Z
+#valueSize()I
+#magic()B
+#attributes()B
+#compressionType()Lorg/apache/kafka/common/record/CompressionType;
+#value()Ljava/nio/ByteBuffer;
+#key()Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.10.0.0
+#<init>(J[B[BLorg/apache/kafka/common/record/CompressionType;II)V
+#<init>(J[B[BLorg/apache/kafka/common/record/CompressionType;)V
+#<init>(J[BLorg/apache/kafka/common/record/CompressionType;)V
+#<init>(J[B[B)V
+#<init>(J[B)V
+#write(Ljava/nio/ByteBuffer;J[B[BLorg/apache/kafka/common/record/CompressionType;II)V
+#write(Lorg/apache/kafka/common/record/Compressor;JBJ[B[BII)V
+#computeChecksum(J[B[BLorg/apache/kafka/common/record/CompressionType;II)J
+#timestamp()J
+#timestampType()Lorg/apache/kafka/common/record/TimestampType;
-#<init>([B[BLorg/apache/kafka/common/record/CompressionType;II)V
-#<init>([B[BLorg/apache/kafka/common/record/CompressionType;)V
-#<init>([BLorg/apache/kafka/common/record/CompressionType;)V
-#<init>([B[B)V
-#<init>([B)V
-#write(Ljava/nio/ByteBuffer;[B[BLorg/apache/kafka/common/record/CompressionType;II)V
-#write(Lorg/apache/kafka/common/record/Compressor;JB[B[BII)V
-#computeChecksum([B[BLorg/apache/kafka/common/record/CompressionType;II)J
@0.10.2.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/lang/Long;Lorg/apache/kafka/common/record/TimestampType;)V
+#wrapperRecordTimestamp()Ljava/lang/Long;
+#wrapperRecordTimestampType()Lorg/apache/kafka/common/record/TimestampType;
+#sizeInBytes()I
+#hasNullValue()Z
+#convertedSize(B)I
+#convert(B)Lorg/apache/kafka/common/record/Record;
+#convertTo(Ljava/io/DataOutputStream;BJLorg/apache/kafka/common/record/TimestampType;)V
+#create(BJ[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)Lorg/apache/kafka/common/record/Record;
+#create(J[B[B)Lorg/apache/kafka/common/record/Record;
+#create(BJ[B[B)Lorg/apache/kafka/common/record/Record;
+#create(BLorg/apache/kafka/common/record/TimestampType;J[B[B)Lorg/apache/kafka/common/record/Record;
+#create(BJ[B)Lorg/apache/kafka/common/record/Record;
+#create(B[B[B)Lorg/apache/kafka/common/record/Record;
+#create([B[B)Lorg/apache/kafka/common/record/Record;
+#create([B)Lorg/apache/kafka/common/record/Record;
+#writeCompressedRecordHeader(Ljava/nio/ByteBuffer;BIJLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)V
+#write(Ljava/io/DataOutputStream;BJ[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)J
+#write(Ljava/io/DataOutputStream;BJBJ[B[B)V
+#recordSize(B[B[B)I
+#computeAttributes(BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)B
+#computeChecksum(BBJ[B[B)J
+#recordOverhead(B)I
-#<init>(J[B[BLorg/apache/kafka/common/record/CompressionType;II)V
-#<init>(J[B[BLorg/apache/kafka/common/record/CompressionType;)V
-#<init>(J[BLorg/apache/kafka/common/record/CompressionType;)V
-#<init>(J[B[B)V
-#<init>(J[B)V
-#write(Ljava/nio/ByteBuffer;J[B[BLorg/apache/kafka/common/record/CompressionType;II)V
-#write(Lorg/apache/kafka/common/record/Compressor;JBJ[B[BII)V
-#recordSize(II)I
-#computeAttributes(Lorg/apache/kafka/common/record/CompressionType;)B
-#computeChecksum(Ljava/nio/ByteBuffer;II)J
-#computeChecksum(J[B[BLorg/apache/kafka/common/record/CompressionType;II)J
-#size()I
@0.11.0.0
+#offset()J
+#sequence()I
+#checksumOrNull()Ljava/lang/Long;
+#hasValue()Z
+#hasMagic(B)Z
+#isCompressed()Z
+#hasTimestampType(Lorg/apache/kafka/common/record/TimestampType;)Z
+#headers()[Lorg/apache/kafka/common/header/Header;
-#<init>(Ljava/nio/ByteBuffer;)V
-#<init>(Ljava/nio/ByteBuffer;Ljava/lang/Long;Lorg/apache/kafka/common/record/TimestampType;)V
-#computeChecksum()J
-#checksum()J
-#wrapperRecordTimestamp()Ljava/lang/Long;
-#wrapperRecordTimestampType()Lorg/apache/kafka/common/record/TimestampType;
-#hasNullValue()Z
-#magic()B
-#attributes()B
-#timestampType()Lorg/apache/kafka/common/record/TimestampType;
-#compressionType()Lorg/apache/kafka/common/record/CompressionType;
-#buffer()Ljava/nio/ByteBuffer;
-#toString()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#convertedSize(B)I
-#convert(B)Lorg/apache/kafka/common/record/Record;
-#convertTo(Ljava/io/DataOutputStream;BJLorg/apache/kafka/common/record/TimestampType;)V
-#create(BJ[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)Lorg/apache/kafka/common/record/Record;
-#create(J[B[B)Lorg/apache/kafka/common/record/Record;
-#create(BJ[B[B)Lorg/apache/kafka/common/record/Record;
-#create(BLorg/apache/kafka/common/record/TimestampType;J[B[B)Lorg/apache/kafka/common/record/Record;
-#create(BJ[B)Lorg/apache/kafka/common/record/Record;
-#create(B[B[B)Lorg/apache/kafka/common/record/Record;
-#create([B[B)Lorg/apache/kafka/common/record/Record;
-#create([B)Lorg/apache/kafka/common/record/Record;
-#writeCompressedRecordHeader(Ljava/nio/ByteBuffer;BIJLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)V
-#write(Ljava/io/DataOutputStream;BJ[B[BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)J
-#write(Ljava/io/DataOutputStream;BJBJ[B[B)V
-#recordSize([B[B)I
-#recordSize(B[B[B)I
-#computeAttributes(BLorg/apache/kafka/common/record/CompressionType;Lorg/apache/kafka/common/record/TimestampType;)B
-#computeChecksum(BBJ[B[B)J
-#recordOverhead(B)I
@3.0.0
-#checksumOrNull()Ljava/lang/Long;
-#isValid()Z

+###org/apache/kafka/common/record/RecordBatch
@0.11.0.0
+#isValid()Z
+#ensureValid()V
+#checksum()J
+#maxTimestamp()J
+#timestampType()Lorg/apache/kafka/common/record/TimestampType;
+#baseOffset()J
+#lastOffset()J
+#nextOffset()J
+#magic()B
+#producerId()J
+#producerEpoch()S
+#hasProducerId()Z
+#baseSequence()I
+#lastSequence()I
+#compressionType()Lorg/apache/kafka/common/record/CompressionType;
+#sizeInBytes()I
+#countOrNull()Ljava/lang/Integer;
+#isCompressed()Z
+#writeTo(Ljava/nio/ByteBuffer;)V
+#isTransactional()Z
+#partitionLeaderEpoch()I
+#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
+#isControlBatch()Z
@2.8.0
+#streamingIterator(Lorg/apache/kafka/common/utils/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
-#streamingIterator(Lorg/apache/kafka/common/record/BufferSupplier;)Lorg/apache/kafka/common/utils/CloseableIterator;
@3.1.0
+#deleteHorizonMs()Ljava/util/OptionalLong;

+###org/apache/kafka/common/record/Records
@0.8.2-beta
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)I
+#sizeInBytes()I
@0.9.0.0
-#writeTo(Ljava/nio/channels/GatheringByteChannel;)I
@0.10.2.0
+#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J
+#shallowEntries()Ljava/lang/Iterable;
+#deepEntries()Ljava/lang/Iterable;
+#hasMatchingShallowMagic(B)Z
+#toMessageFormat(B)Lorg/apache/kafka/common/record/Records;
@0.10.2.2
+#deepEntries(Lorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
@0.11.0.0
+#batches()Ljava/lang/Iterable;
+#hasMatchingMagic(B)Z
+#hasCompatibleMagic(B)Z
+#downConvert(BJ)Lorg/apache/kafka/common/record/Records;
+#records()Ljava/lang/Iterable;
-#shallowEntries()Ljava/lang/Iterable;
-#deepEntries(Lorg/apache/kafka/common/record/BufferSupplier;)Ljava/lang/Iterable;
-#deepEntries()Ljava/lang/Iterable;
-#hasMatchingShallowMagic(B)Z
-#toMessageFormat(B)Lorg/apache/kafka/common/record/Records;
@1.0.0
+#downConvert(BJLorg/apache/kafka/common/utils/Time;)Lorg/apache/kafka/common/record/ConvertedRecords;
-#downConvert(BJ)Lorg/apache/kafka/common/record/Records;
@2.0.0
+#batchIterator()Lorg/apache/kafka/common/utils/AbstractIterator;
-#sizeInBytes()I
@2.8.0
-#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J
@3.0.0
-#hasCompatibleMagic(B)Z

+###org/apache/kafka/common/record/RecordsProcessingStats
@1.0.0
+#<init>(JIJ)V
+#temporaryMemoryBytes()J
+#numRecordsConverted()I
+#conversionTimeNanos()J
+#toString()Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/record/RecordsProcessingStats

+###org/apache/kafka/common/record/SimpleRecord
@0.11.0.0
+#<init>(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[Lorg/apache/kafka/common/header/Header;)V
+#<init>(J[B[B[Lorg/apache/kafka/common/header/Header;)V
+#<init>(JLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#<init>(J[B[B)V
+#<init>(J[B)V
+#<init>([B)V
+#<init>([B[B)V
+#<init>(Lorg/apache/kafka/common/record/Record;)V
+#key()Ljava/nio/ByteBuffer;
+#value()Ljava/nio/ByteBuffer;
+#timestamp()J
+#headers()[Lorg/apache/kafka/common/header/Header;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.7.0
+#<init>(Ljava/nio/ByteBuffer;)V

+###org/apache/kafka/common/record/TimestampType
@0.10.0.0
+#values()[Lorg/apache/kafka/common/record/TimestampType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/record/TimestampType;
+#updateAttributes(B)B
+#forAttributes(B)Lorg/apache/kafka/common/record/TimestampType;
+#forName(Ljava/lang/String;)Lorg/apache/kafka/common/record/TimestampType;
+#toString()Ljava/lang/String;
@0.11.0.0
-#updateAttributes(B)B
-#forAttributes(B)Lorg/apache/kafka/common/record/TimestampType;

+###org/apache/kafka/common/requests/AbstractRequest$Builder
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;)V
+#apiKey()Lorg/apache/kafka/common/protocol/ApiKeys;
+#setVersion(S)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#version()S
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;Ljava/lang/Short;)V
+#desiredOrLatestVersion()S
+#desiredVersion()Ljava/lang/Short;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#setVersion(S)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#version()S
@1.0.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;S)V
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;SS)V
+#oldestAllowedVersion()S
+#latestAllowedVersion()S
-#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;Ljava/lang/Short;)V
-#desiredOrLatestVersion()S
-#desiredVersion()Ljava/lang/Short;

+###org/apache/kafka/common/requests/AbstractRequest
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#getRequest(IILjava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/AbstractRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
+#version()S
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#getRequest(ISLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/AbstractRequest;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
-#getRequest(IILjava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#<init>(S)V
+#serialize(Lorg/apache/kafka/common/requests/RequestHeader;)Ljava/nio/ByteBuffer;
+#toString(Z)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#getRequest(ISLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/RequestAndSize;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#getRequest(ISLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/AbstractRequest;
@1.0.0
+#errorCounts(Ljava/lang/Throwable;)Ljava/util/Map;
+#parseRequest(Lorg/apache/kafka/common/protocol/ApiKeys;SLorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractRequest;
-#getRequest(ISLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/RequestAndSize;
@2.1.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;S)V
-#<init>(S)V
@2.8.0
+#apiKey()Lorg/apache/kafka/common/protocol/ApiKeys;
+#toSend(Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
+#serialize()Ljava/nio/ByteBuffer;
+#parseRequest(Lorg/apache/kafka/common/protocol/ApiKeys;SLjava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/RequestAndSize;
-#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
-#serialize(Lorg/apache/kafka/common/requests/RequestHeader;)Ljava/nio/ByteBuffer;
-#parseRequest(Lorg/apache/kafka/common/protocol/ApiKeys;SLorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractRequest;
@3.0.0
+#serializeWithHeader(Lorg/apache/kafka/common/requests/RequestHeader;)Ljava/nio/ByteBuffer;

+###org/apache/kafka/common/requests/AbstractRequestResponse
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#sizeOf()I
+#writeTo(Ljava/nio/ByteBuffer;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.10.2.0
+#serialize(Lorg/apache/kafka/common/requests/AbstractRequestResponse;Lorg/apache/kafka/common/requests/AbstractRequestResponse;)Ljava/nio/ByteBuffer;
@0.11.0.0
+#<init>()V
+#serialize(Lorg/apache/kafka/common/protocol/types/Struct;Lorg/apache/kafka/common/protocol/types/Struct;)Ljava/nio/ByteBuffer;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
-#sizeOf()I
-#writeTo(Ljava/nio/ByteBuffer;)V
-#toString()Ljava/lang/String;
-#hashCode()I
-#equals(Ljava/lang/Object;)Z
-#serialize(Lorg/apache/kafka/common/requests/AbstractRequestResponse;Lorg/apache/kafka/common/requests/AbstractRequestResponse;)Ljava/nio/ByteBuffer;
@2.4.0
-#<init>()V
-#serialize(Lorg/apache/kafka/common/protocol/types/Struct;Lorg/apache/kafka/common/protocol/types/Struct;)Ljava/nio/ByteBuffer;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/AbstractResponse
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
+#getResponse(ILorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractResponse;
@0.11.0.0
+#<init>()V
+#toSend(Ljava/lang/String;SLorg/apache/kafka/common/requests/ResponseHeader;)Lorg/apache/kafka/common/network/Send;
+#serialize(SLorg/apache/kafka/common/requests/ResponseHeader;)Ljava/nio/ByteBuffer;
+#getResponse(Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#toString(S)Ljava/lang/String;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getResponse(ILorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#errorCounts()Ljava/util/Map;
+#parseResponse(Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
-#toSend(Ljava/lang/String;SLorg/apache/kafka/common/requests/ResponseHeader;)Lorg/apache/kafka/common/network/Send;
-#getResponse(Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.0.0
+#shouldClientThrottle(S)Z
+#throttleTimeMs()I
@2.2.0
+#parseResponse(Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/protocol/types/Struct;S)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parseResponse(Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.4.0
+#serialize(Lorg/apache/kafka/common/protocol/ApiKeys;SI)Ljava/nio/ByteBuffer;
@2.8.0
+#toSend(Lorg/apache/kafka/common/requests/ResponseHeader;S)Lorg/apache/kafka/common/network/Send;
+#parseResponse(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parseResponse(Lorg/apache/kafka/common/protocol/ApiKeys;Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AbstractResponse;
+#apiKey()Lorg/apache/kafka/common/protocol/ApiKeys;
+#toString()Ljava/lang/String;
-#<init>()V
-#serialize(SLorg/apache/kafka/common/requests/ResponseHeader;)Ljava/nio/ByteBuffer;
-#serialize(Lorg/apache/kafka/common/protocol/ApiKeys;SI)Ljava/nio/ByteBuffer;
-#parseResponse(Lorg/apache/kafka/common/protocol/ApiKeys;Lorg/apache/kafka/common/protocol/types/Struct;S)Lorg/apache/kafka/common/requests/AbstractResponse;
-#toString(S)Ljava/lang/String;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AddOffsetsToTxnRequest$Builder
@0.11.0.0
+#<init>(Ljava/lang/String;JSLjava/lang/String;)V
+#consumerGroupId()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AddOffsetsToTxnRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;)V
-#<init>(Ljava/lang/String;JSLjava/lang/String;)V
-#consumerGroupId()Ljava/lang/String;

+###org/apache/kafka/common/requests/AddOffsetsToTxnRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#consumerGroupId()Ljava/lang/String;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AddOffsetsToTxnResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AddOffsetsToTxnRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#transactionalId()Ljava/lang/String;
-#producerId()J
-#producerEpoch()S
-#consumerGroupId()Ljava/lang/String;
@2.8.0
+#data()Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/AddOffsetsToTxnResponse
@0.11.0.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AddOffsetsToTxnResponse;
+#toString()Ljava/lang/String;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#error()Lorg/apache/kafka/common/protocol/Errors;
@2.8.0
+#data()Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AddPartitionsToTxnRequest$Builder
@0.11.0.0
+#<init>(Ljava/lang/String;JSLjava/util/List;)V
+#build(S)Lorg/apache/kafka/common/requests/AddPartitionsToTxnRequest;
+#partitions()Ljava/util/List;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;)V
-#partitions()Ljava/util/List;

+###org/apache/kafka/common/requests/AddPartitionsToTxnRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#partitions()Ljava/util/List;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AddPartitionsToTxnResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AddPartitionsToTxnRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#transactionalId()Ljava/lang/String;
-#producerId()J
-#producerEpoch()S
@2.8.0
+#data()Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/AddPartitionsToTxnResponse
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#errors()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AddPartitionsToTxnResponse;
+#toString()Ljava/lang/String;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;)V
+#data()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterConfigsRequest$Builder
@0.11.0.0
+#<init>(Ljava/util/Map;Z)V
+#build(S)Lorg/apache/kafka/common/requests/AlterConfigsRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/AlterConfigsRequest$Config
@0.11.0.0
+#<init>(Ljava/util/Collection;)V
+#entries()Ljava/util/Collection;

+###org/apache/kafka/common/requests/AlterConfigsRequest$ConfigEntry
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;

+###org/apache/kafka/common/requests/AlterConfigsRequest
@0.11.0.0
+#<init>(SLjava/util/Map;Z)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#configs()Ljava/util/Map;
+#validateOnly()Z
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterConfigsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AlterConfigsRequestData;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(SLjava/util/Map;Z)V
@2.8.0
+#data()Lorg/apache/kafka/common/message/AlterConfigsRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/AlterConfigsResponse
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errors()Ljava/util/Map;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterConfigsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AlterConfigsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#data()Lorg/apache/kafka/common/message/AlterConfigsResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterReplicaLogDirsRequest$Builder
@1.0.0
+#<init>(Ljava/util/Map;)V
+#build(S)Lorg/apache/kafka/common/requests/AlterReplicaLogDirsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;)V
-#<init>(Ljava/util/Map;)V

+###org/apache/kafka/common/requests/AlterReplicaLogDirsRequest
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Ljava/util/Map;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#partitionDirs()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterReplicaLogDirsRequest;
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AlterReplicaLogDirsResponse;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/Map;S)V
@2.8.0
+#data()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/AlterReplicaLogDirsResponse
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
+#responses()Ljava/util/Map;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterReplicaLogDirsResponse;
@2.0.0
+#shouldClientThrottle(S)Z
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;)V
+#data()Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILjava/util/Map;)V
-#responses()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/ApiError
@0.11.0.0
+#fromThrowable(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/ApiError;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;)V
+#write(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#is(Lorg/apache/kafka/common/protocol/Errors;)Z
+#isFailure()Z
+#isSuccess()Z
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#message()Ljava/lang/String;
+#messageWithFallback()Ljava/lang/String;
+#exception()Lorg/apache/kafka/common/errors/ApiException;
+#toString()Ljava/lang/String;
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
@2.7.0
+#<init>(SLjava/lang/String;)V
@2.8.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#write(Lorg/apache/kafka/common/protocol/types/Struct;)V

+###org/apache/kafka/common/requests/ApiVersionsRequest$Builder
@0.10.2.0
+#<init>()V
+#build()Lorg/apache/kafka/common/requests/ApiVersionsRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#<init>(S)V
+#build(S)Lorg/apache/kafka/common/requests/ApiVersionsRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/ApiVersionsRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/ApiVersionsRequest
@0.10.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ApiVersionsRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ApiVersionsRequest;
@0.10.2.0
+#<init>(S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>()V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ApiVersionsRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ApiVersionsRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ApiVersionsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(SLjava/lang/Short;)V
+#hasUnsupportedRequestVersion()Z
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ApiVersionsRequestData;S)V
+#<init>(Lorg/apache/kafka/common/message/ApiVersionsRequestData;SLjava/lang/Short;)V
+#isValid()Z
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(S)V
-#<init>(SLjava/lang/Short;)V
@2.8.0
+#data()Lorg/apache/kafka/common/message/ApiVersionsRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/ApiVersionsResponse$ApiVersion
@0.10.0.0
+#<init>(SSS)V
@0.10.2.0
+#toString()Ljava/lang/String;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;)V
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;SS)V
@2.4.0
-###org/apache/kafka/common/requests/ApiVersionsResponse$ApiVersion

+###org/apache/kafka/common/requests/ApiVersionsResponse
@0.10.0.0
+#<init>(SLjava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#apiVersions()Ljava/util/Collection;
+#apiVersion(S)Lorg/apache/kafka/common/requests/ApiVersionsResponse$ApiVersion;
+#errorCode()S
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#fromError(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#apiVersionsResponse()Lorg/apache/kafka/common/requests/ApiVersionsResponse;
@0.10.2.0
-#apiVersionsResponse()Lorg/apache/kafka/common/requests/ApiVersionsResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
+#apiVersionsResponse(IB)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#unsupportedVersionSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#createApiVersionsResponse(IB)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#<init>(SLjava/util/List;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#fromError(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
+#defaultApiVersionsResponse()Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#unsupportedVersionSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
@2.0.0
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ApiVersionsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#apiVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
-#apiVersions()Ljava/util/Collection;
-#apiVersion(S)Lorg/apache/kafka/common/requests/ApiVersionsResponse$ApiVersion;
-#error()Lorg/apache/kafka/common/protocol/Errors;
-#defaultApiVersionsResponse()Lorg/apache/kafka/common/requests/ApiVersionsResponse;
@2.7.0
+#data()Lorg/apache/kafka/common/message/ApiVersionsResponseData;
+#apiVersionsResponse(IBLorg/apache/kafka/common/feature/Features;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#apiVersionsResponse(IBLorg/apache/kafka/common/feature/Features;Lorg/apache/kafka/common/feature/Features;J)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#createApiVersionsResponseData(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;Lorg/apache/kafka/common/feature/Features;Lorg/apache/kafka/common/feature/Features;J)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
-#apiVersionsResponse(IB)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
@2.8.0
+#apiVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#defaultApiVersionsResponse(Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#defaultApiVersionsResponse(ILorg/apache/kafka/common/message/ApiMessageType$ListenerType;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#createApiVersionsResponse(ILorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#createApiVersionsResponse(ILorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;Lorg/apache/kafka/common/feature/Features;Lorg/apache/kafka/common/feature/Features;J)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#filterApis(Lorg/apache/kafka/common/record/RecordVersion;Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;
+#collectApis(Ljava/util/Set;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;
+#intersectForwardableApis(Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;Lorg/apache/kafka/common/record/RecordVersion;Ljava/util/Map;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;
+#intersect(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;)Ljava/util/Optional;
+#toApiVersion(Lorg/apache/kafka/common/protocol/ApiKeys;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#apiVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#apiVersionsResponse(IBLorg/apache/kafka/common/feature/Features;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#apiVersionsResponse(IBLorg/apache/kafka/common/feature/Features;Lorg/apache/kafka/common/feature/Features;J)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#createApiVersionsResponse(IB)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#createApiVersionsResponseData(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;Lorg/apache/kafka/common/feature/Features;Lorg/apache/kafka/common/feature/Features;J)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
@3.3.0
+#maybeSetThrottleTimeMs(I)V
+#createApiVersionsResponse(ILorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;Lorg/apache/kafka/common/feature/Features;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#createApiVersionsResponse(ILorg/apache/kafka/common/record/RecordVersion;Lorg/apache/kafka/common/feature/Features;Ljava/util/Map;JLorg/apache/kafka/clients/NodeApiVersions;Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
+#createApiVersionsResponse(ILorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;Lorg/apache/kafka/common/feature/Features;Ljava/util/Map;J)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
-#createApiVersionsResponse(ILorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;Lorg/apache/kafka/common/feature/Features;Lorg/apache/kafka/common/feature/Features;J)Lorg/apache/kafka/common/requests/ApiVersionsResponse;
@3.4.0
+#zkMigrationReady()Z

+###org/apache/kafka/common/requests/BasePartitionState
@1.0.0
@2.4.0
-###org/apache/kafka/common/requests/BasePartitionState

+###org/apache/kafka/common/requests/ControlledShutdownRequest$Builder
@0.10.2.0
+#<init>(I)V
+#build()Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@1.0.0
+#<init>(IS)V
-#<init>(I)V
@2.2.0
+#<init>(IJS)V
-#<init>(IS)V
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/ControlledShutdownRequestData;S)V
-#<init>(IJS)V

+###org/apache/kafka/common/requests/ControlledShutdownRequest
@0.9.0.0
+#<init>(I)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#brokerId()I
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(I)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ControlledShutdownRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.2.0
+#brokerEpoch()J
@2.3.0
+#data()Lorg/apache/kafka/common/message/ControlledShutdownRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#brokerId()I
-#brokerEpoch()J
@2.4.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/ControlledShutdownResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/ControlledShutdownResponse
@0.9.0.0
+#<init>(SLjava/util/Set;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#partitionsRemaining()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ControlledShutdownResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ControlledShutdownResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Set;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ControlledShutdownResponse;
-#<init>(SLjava/util/Set;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ControlledShutdownResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ControlledShutdownResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/ControlledShutdownResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/ControlledShutdownResponseData;
+#prepareResponse(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Set;)Lorg/apache/kafka/common/requests/ControlledShutdownResponse;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Set;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#partitionsRemaining()Ljava/util/Set;
@2.8.0
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/CreateAclsRequest$AclCreation
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/acl/AclBinding;)V
+#acl()Lorg/apache/kafka/common/acl/AclBinding;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/kafka/common/requests/CreateAclsRequest$AclCreation

+###org/apache/kafka/common/requests/CreateAclsRequest$Builder
@0.11.0.0
+#<init>(Ljava/util/List;)V
+#build(S)Lorg/apache/kafka/common/requests/CreateAclsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/CreateAclsRequestData;)V
-#<init>(Ljava/util/List;)V

+###org/apache/kafka/common/requests/CreateAclsRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#aclCreations()Ljava/util/List;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreateAclsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.5.0
+#aclBinding(Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;)Lorg/apache/kafka/common/acl/AclBinding;
+#aclCreation(Lorg/apache/kafka/common/acl/AclBinding;)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#data()Lorg/apache/kafka/common/message/CreateAclsRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/CreateAclsResponse$AclCreationResponse
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/ApiError;)V
+#error()Lorg/apache/kafka/common/requests/ApiError;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/kafka/common/requests/CreateAclsResponse$AclCreationResponse

+###org/apache/kafka/common/requests/CreateAclsResponse
@0.11.0.0
+#<init>(ILjava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#aclCreationResponses()Ljava/util/List;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreateAclsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/CreateAclsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#results()Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILjava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#aclCreationResponses()Ljava/util/List;
@2.8.0
+#data()Lorg/apache/kafka/common/message/CreateAclsResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/CreatePartitionsRequest$Builder
@1.0.0
+#<init>(Ljava/util/Map;IZ)V
+#build(S)Lorg/apache/kafka/common/requests/CreatePartitionsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/CreatePartitionsRequestData;)V
-#<init>(Ljava/util/Map;IZ)V

+###org/apache/kafka/common/requests/CreatePartitionsRequest
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#duplicates()Ljava/util/Set;
+#newPartitions()Ljava/util/Map;
+#timeout()I
+#validateOnly()Z
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreatePartitionsRequest;
@2.5.0
+#data()Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#duplicates()Ljava/util/Set;
-#newPartitions()Ljava/util/Map;
-#timeout()I
-#validateOnly()Z
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/CreatePartitionsResponse
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(ILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errors()Ljava/util/Map;
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreatePartitionsResponse;
@2.0.0
+#shouldClientThrottle(S)Z
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/CreatePartitionsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/CreatePartitionsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#errors()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/CreateTopicsRequest$Builder
@0.10.2.0
+#<init>(Ljava/util/Map;I)V
+#<init>(Ljava/util/Map;IZ)V
+#build()Lorg/apache/kafka/common/requests/CreateTopicsRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/CreateTopicsRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/CreateTopicsRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/CreateTopicsRequestData;)V
-#<init>(Ljava/util/Map;I)V
-#<init>(Ljava/util/Map;IZ)V
@2.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/requests/CreateTopicsRequest$TopicDetails
@0.10.1.0
+#<init>(ISLjava/util/Map;)V
+#<init>(IS)V
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/util/Map;)V
@0.10.2.0
+#toString()Ljava/lang/String;
@2.3.0
-###org/apache/kafka/common/requests/CreateTopicsRequest$TopicDetails

+###org/apache/kafka/common/requests/CreateTopicsRequest
@0.10.1.0
+#<init>(Ljava/util/Map;Ljava/lang/Integer;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#topics()Ljava/util/Map;
+#timeout()Ljava/lang/Integer;
+#duplicateTopics()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/CreateTopicsRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/CreateTopicsRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#timeout()I
+#validateOnly()Z
-#<init>(Ljava/util/Map;Ljava/lang/Integer;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
-#timeout()Ljava/lang/Integer;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreateTopicsRequest;
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/CreateTopicsRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/CreateTopicsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#data()Lorg/apache/kafka/common/message/CreateTopicsRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#topics()Ljava/util/Map;
-#timeout()I
-#validateOnly()Z
-#duplicateTopics()Ljava/util/Set;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/CreateTopicsRequestData;S)V
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;

+###org/apache/kafka/common/requests/CreateTopicsResponse
@0.10.1.0
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errors()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/CreateTopicsResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/CreateTopicsResponse;
@0.10.2.0
+#<init>(Ljava/util/Map;S)V
-#<init>(Ljava/util/Map;)V
@0.11.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreateTopicsResponse;
-#<init>(Ljava/util/Map;S)V
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/CreateTopicsResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/CreateTopicsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/CreateTopicsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/CreateTopicsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/Map;)V
-#<init>(ILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#errors()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DeleteAclsRequest$Builder
@0.11.0.0
+#<init>(Ljava/util/List;)V
+#build(S)Lorg/apache/kafka/common/requests/DeleteAclsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/DeleteAclsRequestData;)V
-#<init>(Ljava/util/List;)V

+###org/apache/kafka/common/requests/DeleteAclsRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#filters()Ljava/util/List;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteAclsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.5.0
+#deleteAclsFilter(Lorg/apache/kafka/common/acl/AclBindingFilter;)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#data()Lorg/apache/kafka/common/message/DeleteAclsRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DeleteAclsResponse$AclDeletionResult
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/ApiError;Lorg/apache/kafka/common/acl/AclBinding;)V
+#<init>(Lorg/apache/kafka/common/acl/AclBinding;)V
+#error()Lorg/apache/kafka/common/requests/ApiError;
+#acl()Lorg/apache/kafka/common/acl/AclBinding;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/kafka/common/requests/DeleteAclsResponse$AclDeletionResult

+###org/apache/kafka/common/requests/DeleteAclsResponse$AclFilterResponse
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/ApiError;Ljava/util/Collection;)V
+#<init>(Ljava/util/Collection;)V
+#error()Lorg/apache/kafka/common/requests/ApiError;
+#deletions()Ljava/util/Collection;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/kafka/common/requests/DeleteAclsResponse$AclFilterResponse

+###org/apache/kafka/common/requests/DeleteAclsResponse
@0.11.0.0
+#<init>(ILjava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#responses()Ljava/util/List;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteAclsResponse;
+#toString()Ljava/lang/String;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/DeleteAclsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#filterResults()Ljava/util/List;
+#filterResult(Lorg/apache/kafka/server/authorizer/AclDeleteResult;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;
+#matchingAcl(Lorg/apache/kafka/common/acl/AclBinding;Lorg/apache/kafka/common/requests/ApiError;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#aclBinding(Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;)Lorg/apache/kafka/common/acl/AclBinding;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILjava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#responses()Ljava/util/List;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DeleteAclsResponseData;S)V
+#data()Lorg/apache/kafka/common/message/DeleteAclsResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/message/DeleteAclsResponseData;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DeleteRecordsRequest$Builder
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#build(S)Lorg/apache/kafka/common/requests/DeleteRecordsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/DeleteRecordsRequestData;)V
-#<init>(ILjava/util/Map;)V

+###org/apache/kafka/common/requests/DeleteRecordsRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(ILjava/util/Map;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#timeout()I
+#partitionOffsets()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteRecordsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.6.0
+#data()Lorg/apache/kafka/common/message/DeleteRecordsRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILjava/util/Map;S)V
-#timeout()I
-#partitionOffsets()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DeleteRecordsResponse$PartitionResponse
@0.11.0.0
+#<init>(JLorg/apache/kafka/common/protocol/Errors;)V
+#toString()Ljava/lang/String;
@2.6.0
-###org/apache/kafka/common/requests/DeleteRecordsResponse$PartitionResponse

+###org/apache/kafka/common/requests/DeleteRecordsResponse
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
+#responses()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteRecordsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/DeleteRecordsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/DeleteRecordsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(ILjava/util/Map;)V
-#responses()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DeleteTopicsRequest$Builder
@0.10.2.0
+#<init>(Ljava/util/Set;Ljava/lang/Integer;)V
+#build()Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/DeleteTopicsRequestData;)V
-#<init>(Ljava/util/Set;Ljava/lang/Integer;)V

+###org/apache/kafka/common/requests/DeleteTopicsRequest
@0.10.1.0
+#<init>(Ljava/util/Set;Ljava/lang/Integer;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#topics()Ljava/util/Set;
+#timeout()Ljava/lang/Integer;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/util/Set;Ljava/lang/Integer;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DeleteTopicsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#data()Lorg/apache/kafka/common/message/DeleteTopicsRequestData;
-#topics()Ljava/util/Set;
-#timeout()Ljava/lang/Integer;
@2.4.0
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#topicNames()Ljava/util/List;
+#topicIds()Ljava/util/List;
+#topics()Ljava/util/List;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.0.0
+#numberOfTopics()I

+###org/apache/kafka/common/requests/DeleteTopicsResponse
@0.10.1.0
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errors()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DeleteTopicsResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/DeleteTopicsResponse;
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteTopicsResponse;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DeleteTopicsResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/DeleteTopicsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/DeleteTopicsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/DeleteTopicsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/Map;)V
-#<init>(ILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#errors()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeAclsRequest$Builder
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/acl/AclBindingFilter;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeAclsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/DescribeAclsRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeAclsRequest;
+#filter()Lorg/apache/kafka/common/acl/AclBindingFilter;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.5.0
+#data()Lorg/apache/kafka/common/message/DescribeAclsRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DescribeAclsResponse
@0.11.0.0
+#<init>(ILorg/apache/kafka/common/requests/ApiError;Ljava/util/Collection;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/requests/ApiError;
+#acls()Ljava/util/Collection;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeAclsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/DescribeAclsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#acls()Ljava/util/List;
+#aclBindings(Ljava/util/List;)Ljava/util/List;
+#aclsResources(Ljava/util/Collection;)Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILorg/apache/kafka/common/requests/ApiError;Ljava/util/Collection;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#acls()Ljava/util/Collection;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeAclsResponseData;S)V
+#data()Lorg/apache/kafka/common/message/DescribeAclsResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/message/DescribeAclsResponseData;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeConfigsRequest$Builder
@0.11.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Collection;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeConfigsRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@1.1.0
+#includeSynonyms(Z)Lorg/apache/kafka/common/requests/DescribeConfigsRequest$Builder;
@2.6.0
+#includeDocumentation(Z)Lorg/apache/kafka/common/requests/DescribeConfigsRequest$Builder;
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/DescribeConfigsRequestData;)V
-#<init>(Ljava/util/Map;)V
-#includeSynonyms(Z)Lorg/apache/kafka/common/requests/DescribeConfigsRequest$Builder;
-#includeDocumentation(Z)Lorg/apache/kafka/common/requests/DescribeConfigsRequest$Builder;
-#<init>(Ljava/util/Collection;)V

+###org/apache/kafka/common/requests/DescribeConfigsRequest
@0.11.0.0
+#<init>(SLjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#resources()Ljava/util/Collection;
+#configNames(Lorg/apache/kafka/common/requests/Resource;)Ljava/util/Collection;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/DescribeConfigsResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeConfigsRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@1.1.0
+#<init>(SLjava/util/Map;Z)V
+#includeSynonyms()Z
-#<init>(SLjava/util/Map;)V
@2.0.0
+#configNames(Lorg/apache/kafka/common/config/ConfigResource;)Ljava/util/Collection;
-#configNames(Lorg/apache/kafka/common/requests/Resource;)Ljava/util/Collection;
@2.6.0
+#<init>(SLjava/util/Map;ZZ)V
+#includeDocumentation()Z
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/DescribeConfigsRequestData;S)V
+#data()Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(SLjava/util/Map;Z)V
-#<init>(SLjava/util/Map;ZZ)V
-#resources()Ljava/util/Collection;
-#configNames(Lorg/apache/kafka/common/config/ConfigResource;)Ljava/util/Collection;
-#includeSynonyms()Z
-#includeDocumentation()Z
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DescribeConfigsResponse$Config
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/ApiError;Ljava/util/Collection;)V
+#error()Lorg/apache/kafka/common/requests/ApiError;
+#entries()Ljava/util/Collection;

+###org/apache/kafka/common/requests/DescribeConfigsResponse$ConfigEntry
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;ZZZ)V
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#isSensitive()Z
+#isDefault()Z
+#isReadOnly()Z
@1.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;ZZLjava/util/Collection;)V
+#source()Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;
+#synonyms()Ljava/util/Collection;
-#<init>(Ljava/lang/String;Ljava/lang/String;ZZZ)V
-#isDefault()Z
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;ZZLjava/util/Collection;Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigType;Ljava/lang/String;)V
+#type()Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigType;
+#documentation()Ljava/lang/String;

+###org/apache/kafka/common/requests/DescribeConfigsResponse
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#configs()Ljava/util/Map;
+#config(Lorg/apache/kafka/common/requests/Resource;)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$Config;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeConfigsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#config(Lorg/apache/kafka/common/config/ConfigResource;)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$Config;
+#shouldClientThrottle(S)Z
-#config(Lorg/apache/kafka/common/requests/Resource;)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$Config;
@2.7.0
+#resultMap()Ljava/util/Map;
+#<init>(Lorg/apache/kafka/common/message/DescribeConfigsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/DescribeConfigsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#configs()Ljava/util/Map;
-#config(Lorg/apache/kafka/common/config/ConfigResource;)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$Config;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeGroupsRequest$Builder
@0.10.2.0
+#<init>(Ljava/util/List;)V
+#build()Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/DescribeGroupsRequestData;)V
-#<init>(Ljava/util/List;)V

+###org/apache/kafka/common/requests/DescribeGroupsRequest
@0.9.0.0
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groupIds()Ljava/util/List;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DescribeGroupsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#data()Lorg/apache/kafka/common/message/DescribeGroupsRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#groupIds()Ljava/util/List;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DescribeGroupsResponse$GroupMember
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#memberId()Ljava/lang/String;
+#clientId()Ljava/lang/String;
+#clientHost()Ljava/lang/String;
+#memberMetadata()Ljava/nio/ByteBuffer;
+#memberAssignment()Ljava/nio/ByteBuffer;
@2.3.0
-###org/apache/kafka/common/requests/DescribeGroupsResponse$GroupMember

+###org/apache/kafka/common/requests/DescribeGroupsResponse$GroupMetadata
@0.9.0.0
+#<init>(SLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#errorCode()S
+#state()Ljava/lang/String;
+#protocolType()Ljava/lang/String;
+#protocol()Ljava/lang/String;
+#members()Ljava/util/List;
+#forError(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/DescribeGroupsResponse$GroupMetadata;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
-#<init>(SLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
-#errorCode()S
@2.3.0
-###org/apache/kafka/common/requests/DescribeGroupsResponse$GroupMetadata

+###org/apache/kafka/common/requests/DescribeGroupsResponse
@0.9.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groups()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DescribeGroupsResponse;
+#fromError(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)Lorg/apache/kafka/common/requests/DescribeGroupsResponse;
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
+#fromError(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)Lorg/apache/kafka/common/requests/DescribeGroupsResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeGroupsResponse;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/DescribeGroupsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/DescribeGroupsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#groupMember(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B[B)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
+#groupMetadata(Ljava/lang/String;Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Set;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#groupMetadata(Ljava/lang/String;Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;I)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#data()Lorg/apache/kafka/common/message/DescribeGroupsResponseData;
+#forError(Ljava/lang/String;Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/Map;)V
-#<init>(ILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#groups()Ljava/util/Map;
-#fromError(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)Lorg/apache/kafka/common/requests/DescribeGroupsResponse;
@2.4.0
+#groupMember(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B[B)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
-#groupMember(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B[B)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeLogDirsRequest$Builder
@1.0.0
+#<init>(Ljava/util/Set;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeLogDirsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;)V
-#<init>(Ljava/util/Set;)V

+###org/apache/kafka/common/requests/DescribeLogDirsRequest
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Ljava/util/Set;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#isAllTopicPartitions()Z
+#topicPartitions()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeLogDirsRequest;
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;S)V
+#data()Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/Set;S)V
-#topicPartitions()Ljava/util/Set;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DescribeLogDirsResponse$LogDirInfo
@1.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;)V
@1.1.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/requests/DescribeLogDirsResponse$ReplicaInfo
@1.0.0
+#<init>(JJZ)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/requests/DescribeLogDirsResponse
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#logDirInfos()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeLogDirsResponse;
@2.0.0
+#shouldClientThrottle(S)Z
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;)V
+#data()Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(ILjava/util/Map;)V
@2.7.0
-#logDirInfos()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/EndTxnRequest$Builder
@0.11.0.0
+#<init>(Ljava/lang/String;JSLorg/apache/kafka/common/requests/TransactionResult;)V
+#result()Lorg/apache/kafka/common/requests/TransactionResult;
+#build(S)Lorg/apache/kafka/common/requests/EndTxnRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/EndTxnRequestData;)V
-#<init>(Ljava/lang/String;JSLorg/apache/kafka/common/requests/TransactionResult;)V
-#result()Lorg/apache/kafka/common/requests/TransactionResult;

+###org/apache/kafka/common/requests/EndTxnRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#command()Lorg/apache/kafka/common/requests/TransactionResult;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/EndTxnResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/EndTxnRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.5.0
+#result()Lorg/apache/kafka/common/requests/TransactionResult;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#transactionalId()Ljava/lang/String;
-#producerId()J
-#producerEpoch()S
-#command()Lorg/apache/kafka/common/requests/TransactionResult;
@2.8.0
+#data()Lorg/apache/kafka/common/message/EndTxnRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/EndTxnResponse
@0.11.0.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/EndTxnResponse;
+#toString()Ljava/lang/String;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.5.0
+#<init>(Lorg/apache/kafka/common/message/EndTxnResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
@2.8.0
+#data()Lorg/apache/kafka/common/message/EndTxnResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/EpochEndOffset
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;J)V
+#<init>(J)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#hasError()Z
+#endOffset()J
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;IJ)V
+#<init>(IJ)V
+#leaderEpoch()I
-#<init>(Lorg/apache/kafka/common/protocol/Errors;J)V
-#<init>(J)V
@2.6.0
+#hasUndefinedEpochOrOffset()Z
@2.8.0
-###org/apache/kafka/common/requests/EpochEndOffset

+###org/apache/kafka/common/requests/FetchRequest$Builder
@0.10.2.0
+#<init>(IILjava/util/LinkedHashMap;)V
+#setReplicaId(I)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#setMaxWait(I)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#setMaxBytes(I)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#fetchData()Ljava/util/LinkedHashMap;
+#build()Lorg/apache/kafka/common/requests/FetchRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#forConsumer(IILjava/util/LinkedHashMap;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#forConsumer(IILjava/util/LinkedHashMap;Lorg/apache/kafka/common/requests/IsolationLevel;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#forReplica(SIIILjava/util/LinkedHashMap;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#build(S)Lorg/apache/kafka/common/requests/FetchRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#<init>(IILjava/util/LinkedHashMap;)V
-#setReplicaId(I)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#setMaxWait(I)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#build()Lorg/apache/kafka/common/requests/FetchRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@1.1.0
+#forConsumer(IILjava/util/Map;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#forReplica(SIIILjava/util/Map;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#<init>(SSIIILjava/util/Map;)V
+#isolationLevel(Lorg/apache/kafka/common/requests/IsolationLevel;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#metadata(Lorg/apache/kafka/common/requests/FetchMetadata;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#fetchData()Ljava/util/Map;
+#toForget()Ljava/util/List;
+#toForget(Ljava/util/List;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#forConsumer(IILjava/util/LinkedHashMap;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#forConsumer(IILjava/util/LinkedHashMap;Lorg/apache/kafka/common/requests/IsolationLevel;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#forReplica(SIIILjava/util/LinkedHashMap;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#fetchData()Ljava/util/LinkedHashMap;
@2.3.0
+#rackId(Ljava/lang/String;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
@2.5.0
+#isolationLevel(Lorg/apache/kafka/common/IsolationLevel;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#isolationLevel(Lorg/apache/kafka/common/requests/IsolationLevel;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
@3.1.0
+#forConsumer(SIILjava/util/Map;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#removed()Ljava/util/List;
+#removed(Ljava/util/List;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
+#replaced()Ljava/util/List;
+#replaced(Ljava/util/List;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#forConsumer(IILjava/util/Map;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;
-#toForget()Ljava/util/List;
-#toForget(Ljava/util/List;)Lorg/apache/kafka/common/requests/FetchRequest$Builder;

+###org/apache/kafka/common/requests/FetchRequest$PartitionData
@0.8.2-beta
+#<init>(JI)V
@0.10.2.0
+#toString()Ljava/lang/String;
@0.11.0.0
+#<init>(JJI)V
-#<init>(JI)V
@1.1.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.1.0
+#<init>(JJILjava/util/Optional;)V
-#<init>(JJI)V
@2.7.0
+#<init>(JJILjava/util/Optional;Ljava/util/Optional;)V
@3.1.0
+#<init>(Lorg/apache/kafka/common/Uuid;JJILjava/util/Optional;)V
+#<init>(Lorg/apache/kafka/common/Uuid;JJILjava/util/Optional;Ljava/util/Optional;)V
-#<init>(JJILjava/util/Optional;)V
-#<init>(JJILjava/util/Optional;Ljava/util/Optional;)V

+###org/apache/kafka/common/requests/FetchRequest
@0.8.2-beta
+#<init>(IIILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#replicaId()I
+#maxWait()I
+#minBytes()I
+#fetchData()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/FetchRequest;
@0.9.0.0
+#<init>(IILjava/util/Map;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/FetchRequest;
@0.10.1.0
*#<init>(IILjava/util/Map;)V[deprecated]
+#<init>(IIILjava/util/LinkedHashMap;)V
+#fromReplica(IIILjava/util/Map;)Lorg/apache/kafka/common/requests/FetchRequest;[deprecated]
+#fromReplica(IIIILjava/util/LinkedHashMap;)Lorg/apache/kafka/common/requests/FetchRequest;
+#maxBytes()I
-#<init>(IIILjava/util/Map;)V
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#isFromFollower()Z
-#<init>(IILjava/util/Map;)V[deprecated]
-#<init>(IIILjava/util/LinkedHashMap;)V
-#fromReplica(IIILjava/util/Map;)Lorg/apache/kafka/common/requests/FetchRequest;[deprecated]
-#fromReplica(IIIILjava/util/LinkedHashMap;)Lorg/apache/kafka/common/requests/FetchRequest;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#isolationLevel()Lorg/apache/kafka/common/requests/IsolationLevel;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/FetchRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/FetchRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/FetchRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@1.1.0
+#toForget()Ljava/util/List;
+#metadata()Lorg/apache/kafka/common/requests/FetchMetadata;
@2.3.0
+#rackId()Ljava/lang/String;
@2.5.0
+#isolationLevel()Lorg/apache/kafka/common/IsolationLevel;
-#isolationLevel()Lorg/apache/kafka/common/requests/IsolationLevel;
@2.7.0
+#data()Lorg/apache/kafka/common/message/FetchRequestData;
+#<init>(Lorg/apache/kafka/common/message/FetchRequestData;S)V
+#serialize(Lorg/apache/kafka/common/requests/RequestHeader;)Ljava/nio/ByteBuffer;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#serialize(Lorg/apache/kafka/common/requests/RequestHeader;)Ljava/nio/ByteBuffer;
@3.1.0
+#fetchData(Ljava/util/Map;)Ljava/util/Map;
+#forgottenTopics(Ljava/util/Map;)Ljava/util/List;
-#fetchData()Ljava/util/Map;
-#toForget()Ljava/util/List;

+###org/apache/kafka/common/requests/FetchResponse$AbortedTransaction
@0.11.0.0
+#<init>(JJ)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0
-###org/apache/kafka/common/requests/FetchResponse$AbortedTransaction

+###org/apache/kafka/common/requests/FetchResponse$PartitionData
@0.8.2-beta
+#<init>(SJLjava/nio/ByteBuffer;)V
@0.10.2.0
+#<init>(SJLorg/apache/kafka/common/record/Records;)V
+#toString()Ljava/lang/String;
-#<init>(SJLjava/nio/ByteBuffer;)V
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJLjava/util/List;Lorg/apache/kafka/common/record/Records;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#<init>(SJLorg/apache/kafka/common/record/Records;)V
@2.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJLjava/util/List;Lorg/apache/kafka/common/record/BaseRecords;)V
-#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJLjava/util/List;Lorg/apache/kafka/common/record/Records;)V
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJLjava/util/Optional;Ljava/util/List;Lorg/apache/kafka/common/record/BaseRecords;)V
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJLjava/util/Optional;Ljava/util/List;Ljava/util/Optional;Lorg/apache/kafka/common/record/BaseRecords;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#highWatermark()J
+#lastStableOffset()J
+#logStartOffset()J
+#preferredReadReplica()Ljava/util/Optional;
+#abortedTransactions()Ljava/util/List;
+#divergingEpoch()Ljava/util/Optional;
+#records()Lorg/apache/kafka/common/record/BaseRecords;
@3.0.0
-###org/apache/kafka/common/requests/FetchResponse$PartitionData

+###org/apache/kafka/common/requests/FetchResponse
@0.8.2-beta
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#responseData()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/FetchResponse;
@0.9.0.0
+#<init>(Ljava/util/Map;I)V
+#getThrottleTime()I
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/FetchResponse;
@0.10.1.0
+#<init>(Ljava/util/LinkedHashMap;I)V
+#responseData()Ljava/util/LinkedHashMap;
-#responseData()Ljava/util/Map;
@0.10.2.0
+#<init>(ILjava/util/LinkedHashMap;I)V
+#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
+#sizeOf(ILjava/util/LinkedHashMap;)I
-#<init>(Ljava/util/Map;)V
-#<init>(Ljava/util/Map;I)V
@0.11.0.0
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#toSend(Lorg/apache/kafka/common/protocol/types/Struct;ILjava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/FetchResponse;
+#sizeOf(SLjava/util/LinkedHashMap;)I
-#<init>(ILjava/util/LinkedHashMap;I)V
-#getThrottleTime()I
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/FetchResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/FetchResponse;
-#sizeOf(ILjava/util/LinkedHashMap;)I
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
-#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
-#toSend(Lorg/apache/kafka/common/protocol/types/Struct;ILjava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;)Lorg/apache/kafka/common/network/Send;
@1.1.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/LinkedHashMap;II)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#sessionId()I
+#sizeOf(SLjava/util/Iterator;)I
-#<init>(Ljava/util/LinkedHashMap;I)V
-#sizeOf(SLjava/util/LinkedHashMap;)I
@2.0.0
+#parse(Lorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/FetchResponse;
+#shouldClientThrottle(S)Z
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.7.0
+#data()Lorg/apache/kafka/common/message/FetchResponseData;
+#<init>(Lorg/apache/kafka/common/message/FetchResponseData;)V
+#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/ResponseHeader;S)Lorg/apache/kafka/common/network/Send;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#parse(Lorg/apache/kafka/common/protocol/types/Struct;)Lorg/apache/kafka/common/requests/FetchResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#toSend(Ljava/lang/String;Lorg/apache/kafka/common/requests/ResponseHeader;S)Lorg/apache/kafka/common/network/Send;
@3.0.0
+#divergingEpoch(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;)Ljava/util/Optional;
+#isDivergingEpoch(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;)Z
+#preferredReadReplica(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;)Ljava/util/Optional;
+#isPreferredReplica(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;)Z
+#partitionResponse(ILorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#recordsOrFail(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;)Lorg/apache/kafka/common/record/Records;
+#recordsSize(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;)I
+#of(Lorg/apache/kafka/common/protocol/Errors;IILjava/util/LinkedHashMap;)Lorg/apache/kafka/common/requests/FetchResponse;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/LinkedHashMap;II)V
@3.1.0
+#responseData(Ljava/util/Map;S)Ljava/util/LinkedHashMap;
+#topicIds()Ljava/util/Set;
+#partitionResponse(Lorg/apache/kafka/common/TopicIdPartition;Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
-#responseData()Ljava/util/LinkedHashMap;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/FindCoordinatorRequest$Builder
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;Ljava/lang/String;)V
+#build(S)Lorg/apache/kafka/common/requests/FindCoordinatorRequest;
+#coordinatorKey()Ljava/lang/String;
+#coordinatorType()Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/FindCoordinatorRequestData;)V
+#data()Lorg/apache/kafka/common/message/FindCoordinatorRequestData;
-#<init>(Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;Ljava/lang/String;)V
-#coordinatorKey()Ljava/lang/String;
-#coordinatorType()Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;

+###org/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType
@0.11.0.0
+#values()[Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;
+#forId(B)Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;
@2.3.0
+#id()B

+###org/apache/kafka/common/requests/FindCoordinatorRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#coordinatorKey()Ljava/lang/String;
+#coordinatorType()Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/FindCoordinatorRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#data()Lorg/apache/kafka/common/message/FindCoordinatorRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#coordinatorKey()Ljava/lang/String;
-#coordinatorType()Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/FindCoordinatorResponse
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/Node;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/Node;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#node()Lorg/apache/kafka/common/Node;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/FindCoordinatorResponse;
+#toString()Ljava/lang/String;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#hasError()Z
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/FindCoordinatorResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#prepareResponse(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/Node;)Lorg/apache/kafka/common/requests/FindCoordinatorResponse;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/Node;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/Node;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.0.0
+#coordinators()Ljava/util/List;
+#prepareOldResponse(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/Node;)Lorg/apache/kafka/common/requests/FindCoordinatorResponse;
+#prepareResponse(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Lorg/apache/kafka/common/Node;)Lorg/apache/kafka/common/requests/FindCoordinatorResponse;
+#prepareErrorResponse(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)Lorg/apache/kafka/common/requests/FindCoordinatorResponse;
-#prepareResponse(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/Node;)Lorg/apache/kafka/common/requests/FindCoordinatorResponse;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/HeartbeatRequest$Builder
@0.10.2.0
+#<init>(Ljava/lang/String;ILjava/lang/String;)V
+#build()Lorg/apache/kafka/common/requests/HeartbeatRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/HeartbeatRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/HeartbeatRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/HeartbeatRequestData;)V
-#<init>(Ljava/lang/String;ILjava/lang/String;)V

+###org/apache/kafka/common/requests/HeartbeatRequest
@0.8.2-beta
+#<init>(Ljava/lang/String;ILjava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groupId()Ljava/lang/String;
+#groupGenerationId()I
+#consumerId()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/HeartbeatRequest;
@0.9.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#memberId()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/HeartbeatRequest;
-#consumerId()Ljava/lang/String;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/lang/String;ILjava/lang/String;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/HeartbeatRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/HeartbeatRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/HeartbeatRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#groupId()Ljava/lang/String;
-#groupGenerationId()I
-#memberId()Ljava/lang/String;
@2.8.0
+#data()Lorg/apache/kafka/common/message/HeartbeatRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/HeartbeatResponse
@0.8.2-beta
+#<init>(S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/HeartbeatResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/HeartbeatResponse;
-#<init>(S)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/HeartbeatResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/HeartbeatResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#data()Lorg/apache/kafka/common/message/HeartbeatResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/InitProducerIdRequest$Builder
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#build(S)Lorg/apache/kafka/common/requests/InitProducerIdRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/InitProducerIdRequestData;)V
-#<init>(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;I)V

+###org/apache/kafka/common/requests/InitProducerIdRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/InitProducerIdRequest;
+#transactionalId()Ljava/lang/String;
+#transactionTimeoutMs()I
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#transactionalId()Ljava/lang/String;
-#transactionTimeoutMs()I
@2.8.0
+#data()Lorg/apache/kafka/common/message/InitProducerIdRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/InitProducerIdResponse
@0.11.0.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;JS)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#throttleTimeMs()I
+#producerId()J
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#epoch()S
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/InitProducerIdResponse;
+#toString()Ljava/lang/String;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/InitProducerIdResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(ILorg/apache/kafka/common/protocol/Errors;JS)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
-#producerId()J
-#epoch()S
@2.8.0
+#data()Lorg/apache/kafka/common/message/InitProducerIdResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/IsolationLevel
@0.11.0.0
+#values()[Lorg/apache/kafka/common/requests/IsolationLevel;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/requests/IsolationLevel;
+#id()B
+#forId(B)Lorg/apache/kafka/common/requests/IsolationLevel;
@2.5.0
-###org/apache/kafka/common/requests/IsolationLevel

+###org/apache/kafka/common/requests/JoinGroupRequest$Builder
@0.10.2.0
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#setRebalanceTimeout(I)Lorg/apache/kafka/common/requests/JoinGroupRequest$Builder;
+#build()Lorg/apache/kafka/common/requests/JoinGroupRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/JoinGroupRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/JoinGroupRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/JoinGroupRequestData;)V
-#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V
-#setRebalanceTimeout(I)Lorg/apache/kafka/common/requests/JoinGroupRequest$Builder;

+###org/apache/kafka/common/requests/JoinGroupRequest$ProtocolMetadata
@0.9.0.1
+#<init>(Ljava/lang/String;Ljava/nio/ByteBuffer;)V
+#name()Ljava/lang/String;
+#metadata()Ljava/nio/ByteBuffer;
@2.3.0
-###org/apache/kafka/common/requests/JoinGroupRequest$ProtocolMetadata

+###org/apache/kafka/common/requests/JoinGroupRequest
@0.8.2-beta
+#<init>(Ljava/lang/String;ILjava/util/List;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groupId()Ljava/lang/String;
+#sessionTimeout()I
+#topics()Ljava/util/List;
+#consumerId()Ljava/lang/String;
+#strategy()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/JoinGroupRequest;
@0.9.0.0
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#memberId()Ljava/lang/String;
+#groupProtocols()Ljava/util/List;
+#protocolType()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/JoinGroupRequest;
-#<init>(Ljava/lang/String;ILjava/util/List;Ljava/lang/String;Ljava/lang/String;)V
-#topics()Ljava/util/List;
-#consumerId()Ljava/lang/String;
-#strategy()Ljava/lang/String;
@0.10.1.0
*#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V[deprecated]
+#<init>(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#rebalanceTimeout()I
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V[deprecated]
-#<init>(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/JoinGroupRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/JoinGroupRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/JoinGroupRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#validateGroupInstanceId(Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/message/JoinGroupRequestData;S)V
+#data()Lorg/apache/kafka/common/message/JoinGroupRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#groupId()Ljava/lang/String;
-#sessionTimeout()I
-#rebalanceTimeout()I
-#memberId()Ljava/lang/String;
-#groupProtocols()Ljava/util/List;
-#protocolType()Ljava/lang/String;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.2.1
+#maybeTruncateReason(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/common/requests/JoinGroupResponse
@0.8.2-beta
+#<init>(SILjava/lang/String;Ljava/util/List;)V
+#<init>(S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#generationId()I
+#consumerId()Ljava/lang/String;
+#assignedPartitions()Ljava/util/List;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/JoinGroupResponse;
@0.9.0.0
+#<init>(SILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#groupProtocol()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#leaderId()Ljava/lang/String;
+#isLeader()Z
+#members()Ljava/util/Map;
-#<init>(SILjava/lang/String;Ljava/util/List;)V
-#<init>(S)V
-#consumerId()Ljava/lang/String;
-#assignedPartitions()Ljava/util/List;
@0.10.1.0
+#<init>(ISILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
@0.10.2.0
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/JoinGroupResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/JoinGroupResponse;
-#<init>(SILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
-#<init>(ISILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/JoinGroupResponse;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/JoinGroupResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@1.1.0
+#toString()Ljava/lang/String;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/JoinGroupResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/JoinGroupResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
-#generationId()I
-#groupProtocol()Ljava/lang/String;
-#memberId()Ljava/lang/String;
-#leaderId()Ljava/lang/String;
-#members()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V
@3.4.0
+#<init>(Lorg/apache/kafka/common/message/JoinGroupResponseData;S)V
-#<init>(Lorg/apache/kafka/common/message/JoinGroupResponseData;)V

+###org/apache/kafka/common/requests/LeaderAndIsrRequest$Builder
@0.10.2.0
+#<init>(IILjava/util/Map;Ljava/util/Set;)V
+#build()Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@1.0.0
+#<init>(SIILjava/util/Map;Ljava/util/Set;)V
-#<init>(IILjava/util/Map;Ljava/util/Set;)V
@2.2.0
+#<init>(SIIJLjava/util/Map;Ljava/util/Set;)V
-#<init>(SIILjava/util/Map;Ljava/util/Set;)V
@2.4.0
+#<init>(SIIJLjava/util/List;Ljava/util/Collection;)V
-#<init>(SIIJLjava/util/Map;Ljava/util/Set;)V
@2.8.0
+#<init>(SIIJLjava/util/List;Ljava/util/Map;Ljava/util/Collection;)V
-#<init>(SIIJLjava/util/List;Ljava/util/Collection;)V
@3.4.0
+#<init>(SIIJLjava/util/List;Ljava/util/Map;Ljava/util/Collection;Z)V

+###org/apache/kafka/common/requests/LeaderAndIsrRequest$PartitionState
@0.9.0.0
+#<init>(IIILjava/util/List;ILjava/util/Set;)V
@0.10.0.1
-###org/apache/kafka/common/requests/LeaderAndIsrRequest$PartitionState

+###org/apache/kafka/common/requests/LeaderAndIsrRequest
@0.9.0.0
+#<init>(IILjava/util/Map;Ljava/util/Set;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#controllerId()I
+#controllerEpoch()I
+#partitionStates()Ljava/util/Map;
+#liveLeaders()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(IILjava/util/Map;Ljava/util/Set;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaderAndIsrRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@1.1.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/LeaderAndIsrResponse;
@2.4.0
+#brokerEpoch()J
+#partitionStates()Ljava/lang/Iterable;
+#liveLeaders()Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#partitionStates()Ljava/util/Map;
-#liveLeaders()Ljava/util/Set;
@2.7.0
+#data()Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
@2.8.0
+#topicIds()Ljava/util/Map;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.4.0
+#isKRaftController()Z

+###org/apache/kafka/common/requests/LeaderAndIsrResponse
@0.9.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(SLjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#responses()Ljava/util/Map;
+#errorCode()S
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/LeaderAndIsrResponse;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaderAndIsrResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/LeaderAndIsrResponse;
-#<init>(Ljava/util/Map;)V
-#<init>(SLjava/util/Map;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/LeaderAndIsrResponse;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaderAndIsrResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@1.1.1
+#toString()Ljava/lang/String;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#partitions()Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#responses()Ljava/util/Map;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;S)V
+#topics()Ljava/util/List;
+#partitionErrors(Ljava/util/Map;)Ljava/util/Map;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#partitions()Ljava/util/List;
@3.0.0
+#topics()Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicErrorCollection;
-#topics()Ljava/util/List;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/LeaveGroupRequest$Builder
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#build()Lorg/apache/kafka/common/requests/LeaveGroupRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/LeaveGroupRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/LeaveGroupRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.2.0
+#<init>(Lorg/apache/kafka/common/message/LeaveGroupRequestData;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
@2.4.0
+#<init>(Ljava/lang/String;Ljava/util/List;)V
-#<init>(Lorg/apache/kafka/common/message/LeaveGroupRequestData;)V

+###org/apache/kafka/common/requests/LeaveGroupRequest
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#groupId()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/LeaveGroupRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaveGroupRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/LeaveGroupRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/LeaveGroupRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaveGroupRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.2.0
+#data()Lorg/apache/kafka/common/message/LeaveGroupRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#groupId()Ljava/lang/String;
-#memberId()Ljava/lang/String;
@2.4.0
+#members()Ljava/util/List;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.4.0
+#normalizedData()Lorg/apache/kafka/common/message/LeaveGroupRequestData;

+###org/apache/kafka/common/requests/LeaveGroupResponse
@0.9.0.0
+#<init>(S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaveGroupResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/LeaveGroupResponse;
-#<init>(S)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/LeaveGroupResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.2.0
+#<init>(Lorg/apache/kafka/common/message/LeaveGroupResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/LeaveGroupResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
@2.2.2
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@2.3.1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.4.0
+#<init>(Ljava/util/List;Lorg/apache/kafka/common/protocol/Errors;IS)V
+#memberResponses()Ljava/util/List;
+#topLevelError()Lorg/apache/kafka/common/protocol/Errors;
-#data()Lorg/apache/kafka/common/message/LeaveGroupResponseData;
@2.6.0
+#toString()Ljava/lang/String;
@2.8.0
+#data()Lorg/apache/kafka/common/message/LeaveGroupResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
@3.3.0
+#maybeSetThrottleTimeMs(I)V
@3.4.0
+#<init>(Lorg/apache/kafka/common/message/LeaveGroupResponseData;S)V

+###org/apache/kafka/common/requests/ListGroupsRequest$Builder
@0.10.2.0
+#<init>()V
+#build()Lorg/apache/kafka/common/requests/ListGroupsRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/ListGroupsRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/ListGroupsRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ListGroupsRequestData;)V
-#<init>()V

+###org/apache/kafka/common/requests/ListGroupsRequest
@0.9.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ListGroupsRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListGroupsRequest;
@0.10.2.0
+#<init>(S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>()V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListGroupsRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ListGroupsRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListGroupsRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/ListGroupsResponse;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ListGroupsRequestData;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(S)V
@2.6.0
+#data()Lorg/apache/kafka/common/message/ListGroupsRequestData;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/ListGroupsResponse$Group
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#groupId()Ljava/lang/String;
+#protocolType()Ljava/lang/String;
@2.4.0
-###org/apache/kafka/common/requests/ListGroupsResponse$Group

+###org/apache/kafka/common/requests/ListGroupsResponse
@0.9.0.0
+#<init>(SLjava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groups()Ljava/util/List;
+#errorCode()S
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListGroupsResponse;
+#fromError(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/ListGroupsResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#fromError(ILorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/ListGroupsResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListGroupsResponse;
-#<init>(SLjava/util/List;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListGroupsResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
-#fromError(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/ListGroupsResponse;
-#fromError(ILorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/ListGroupsResponse;
@2.0.0
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ListGroupsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/ListGroupsResponseData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#groups()Ljava/util/List;
-#error()Lorg/apache/kafka/common/protocol/Errors;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/ListOffsetRequest$Builder
@0.10.2.0
+#<init>()V
+#<init>(I)V
+#setOffsetData(Ljava/util/Map;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
+#setTargetTimes(Ljava/util/Map;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
+#build()Lorg/apache/kafka/common/requests/ListOffsetRequest;
+#setMinVersion(S)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#forReplica(SI)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
+#forConsumer(ZLorg/apache/kafka/common/requests/IsolationLevel;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
+#build(S)Lorg/apache/kafka/common/requests/ListOffsetRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#<init>()V
-#<init>(I)V
-#build()Lorg/apache/kafka/common/requests/ListOffsetRequest;
-#setMinVersion(S)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.1.0
-#setOffsetData(Ljava/util/Map;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
@2.5.0
+#forConsumer(ZLorg/apache/kafka/common/IsolationLevel;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
-#forConsumer(ZLorg/apache/kafka/common/requests/IsolationLevel;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
@2.7.0
+#setTargetTimes(Ljava/util/List;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
-#setTargetTimes(Ljava/util/Map;)Lorg/apache/kafka/common/requests/ListOffsetRequest$Builder;
@2.8.0
-###org/apache/kafka/common/requests/ListOffsetRequest$Builder

+###org/apache/kafka/common/requests/ListOffsetRequest$PartitionData
@0.8.2-beta
+#<init>(JI)V
@0.10.2.0
+#toString()Ljava/lang/String;
@2.1.0
*#<init>(JI)V[deprecated]
+#<init>(JLjava/util/Optional;)V
@2.4.1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.7.0
-###org/apache/kafka/common/requests/ListOffsetRequest$PartitionData

+###org/apache/kafka/common/requests/ListOffsetRequest
@0.8.2-beta
+#<init>(ILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#replicaId()I
+#offsetData()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListOffsetRequest;
@0.9.0.0
+#<init>(Ljava/util/Map;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ListOffsetRequest;
@0.10.1.0
*#<init>(Ljava/util/Map;)V[deprecated]
*#<init>(ILjava/util/Map;)V[deprecated]
+#<init>(Ljava/util/Map;I)V
*#offsetData()Ljava/util/Map;[deprecated]
+#partitionTimestamps()Ljava/util/Map;
+#duplicatePartitions()Ljava/util/Set;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/util/Map;)V[deprecated]
-#<init>(ILjava/util/Map;)V[deprecated]
-#<init>(Ljava/util/Map;I)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#isolationLevel()Lorg/apache/kafka/common/requests/IsolationLevel;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListOffsetRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ListOffsetRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListOffsetRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.1.0
-#offsetData()Ljava/util/Map;[deprecated]
@2.5.0
+#isolationLevel()Lorg/apache/kafka/common/IsolationLevel;
-#isolationLevel()Lorg/apache/kafka/common/requests/IsolationLevel;
@2.7.0
+#data()Lorg/apache/kafka/common/message/ListOffsetRequestData;
+#topics()Ljava/util/List;
+#toListOffsetTopics(Ljava/util/Map;)Ljava/util/List;
+#singletonRequestData(Ljava/lang/String;IJI)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#partitionTimestamps()Ljava/util/Map;
@2.8.0
-###org/apache/kafka/common/requests/ListOffsetRequest

+###org/apache/kafka/common/requests/ListOffsetResponse$PartitionData
@0.8.2-beta
+#<init>(SLjava/util/List;)V
@0.10.1.0
*#<init>(SLjava/util/List;)V[deprecated]
+#<init>(SJJ)V
@0.10.2.0
+#toString()Ljava/lang/String;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V[deprecated]
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJ)V
-#<init>(SLjava/util/List;)V[deprecated]
-#<init>(SJJ)V
@2.1.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJLjava/util/Optional;)V
-#<init>(Lorg/apache/kafka/common/protocol/Errors;JJ)V
@2.7.0
-###org/apache/kafka/common/requests/ListOffsetResponse$PartitionData

+###org/apache/kafka/common/requests/ListOffsetResponse
@0.8.2-beta
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#responseData()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListOffsetResponse;
@0.10.1.0
*#<init>(Ljava/util/Map;)V[deprecated]
+#<init>(Ljava/util/Map;I)V
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ListOffsetResponse;
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListOffsetResponse;
-#<init>(Ljava/util/Map;I)V
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ListOffsetResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ListOffsetResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
+#toString()Ljava/lang/String;
@2.0.0
+#shouldClientThrottle(S)Z
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/ListOffsetResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/ListOffsetResponseData;
+#topics()Ljava/util/List;
+#singletonListOffsetTopicResponse(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/protocol/Errors;JJI)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/Map;)V
-#<init>(ILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#responseData()Ljava/util/Map;
@2.8.0
-###org/apache/kafka/common/requests/ListOffsetResponse

+###org/apache/kafka/common/requests/MetadataRequest$Builder
@0.10.2.0
+#allTopics()Lorg/apache/kafka/common/requests/MetadataRequest$Builder;
+#<init>(Ljava/util/List;)V
+#topics()Ljava/util/List;
+#isAllTopics()Z
+#build()Lorg/apache/kafka/common/requests/MetadataRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#<init>(Ljava/util/List;Z)V
+#build(S)Lorg/apache/kafka/common/requests/MetadataRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#<init>(Ljava/util/List;)V
-#build()Lorg/apache/kafka/common/requests/MetadataRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/MetadataRequestData;)V
+#<init>(Ljava/util/List;ZS)V
+#<init>(Ljava/util/List;ZSS)V
+#emptyTopicList()Z
@3.1.0
+#<init>(Ljava/util/List;)V

+###org/apache/kafka/common/requests/MetadataRequest
@0.8.2-beta
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#topics()Ljava/util/List;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/MetadataRequest;
@0.9.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/MetadataRequest;
@0.10.0.0
+#allTopics()Lorg/apache/kafka/common/requests/MetadataRequest;
+#isAllTopics()Z
@0.10.2.0
+#allTopics(S)Lorg/apache/kafka/common/requests/MetadataRequest;
+#<init>(Ljava/util/List;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#allTopics()Lorg/apache/kafka/common/requests/MetadataRequest;
-#<init>(Ljava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#<init>(Ljava/util/List;ZS)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#allowAutoTopicCreation()Z
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/MetadataRequest;
-#allTopics(S)Lorg/apache/kafka/common/requests/MetadataRequest;
-#<init>(Ljava/util/List;S)V
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/MetadataRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/MetadataRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/MetadataRequestData;S)V
+#data()Lorg/apache/kafka/common/message/MetadataRequestData;
+#convertToMetadataRequestTopic(Ljava/util/Collection;)Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/List;ZS)V
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.1.0
+#topicIds()Ljava/util/List;
+#convertTopicIdsToMetadataRequestTopic(Ljava/util/Collection;)Ljava/util/List;

+###org/apache/kafka/common/requests/MetadataResponse$PartitionMetadata
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;ILorg/apache/kafka/common/Node;Ljava/util/List;Ljava/util/List;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#partition()I
+#leader()Lorg/apache/kafka/common/Node;
+#replicas()Ljava/util/List;
+#isr()Ljava/util/List;
@0.11.0.0
+#toString()Ljava/lang/String;
@1.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;ILorg/apache/kafka/common/Node;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#offlineReplicas()Ljava/util/List;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;ILorg/apache/kafka/common/Node;Ljava/util/List;Ljava/util/List;)V
@1.0.1
+#leaderId()I
@2.1.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;ILorg/apache/kafka/common/Node;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#leaderEpoch()Ljava/util/Optional;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;ILorg/apache/kafka/common/Node;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
@2.5.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/TopicPartition;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#topic()Ljava/lang/String;
+#withoutLeaderEpoch()Lorg/apache/kafka/common/requests/MetadataResponse$PartitionMetadata;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;ILorg/apache/kafka/common/Node;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
-#error()Lorg/apache/kafka/common/protocol/Errors;
-#leaderId()I
-#leaderEpoch()Ljava/util/Optional;
-#leader()Lorg/apache/kafka/common/Node;
-#replicas()Ljava/util/List;
-#isr()Ljava/util/List;
-#offlineReplicas()Ljava/util/List;

+###org/apache/kafka/common/requests/MetadataResponse$TopicMetadata
@0.10.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;ZLjava/util/List;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#topic()Ljava/lang/String;
+#isInternal()Z
+#partitionMetadata()Ljava/util/List;
@1.1.1
+#toString()Ljava/lang/String;
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;ZLjava/util/List;I)V
+#authorizedOperations(I)V
+#authorizedOperations()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Lorg/apache/kafka/common/Uuid;ZLjava/util/List;I)V
+#topicId()Lorg/apache/kafka/common/Uuid;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;ZLjava/util/List;I)V

+###org/apache/kafka/common/requests/MetadataResponse
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/Cluster;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errors()Ljava/util/Map;
+#cluster()Lorg/apache/kafka/common/Cluster;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/MetadataResponse;
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/Cluster;)V
@0.9.0.1
+#hasError(Ljava/lang/String;)Z
@0.10.0.0
+#<init>(Ljava/util/List;ILjava/util/List;)V
+#<init>(Ljava/util/List;ILjava/util/List;I)V
+#brokers()Ljava/util/Collection;
+#topicMetadata()Ljava/util/Collection;
+#controller()Lorg/apache/kafka/common/Node;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/MetadataResponse;
-#<init>(Lorg/apache/kafka/common/Cluster;Ljava/util/Map;)V
-#hasError(Ljava/lang/String;)Z
@0.10.1.0
+#<init>(Ljava/util/List;Ljava/lang/String;ILjava/util/List;)V
+#<init>(Ljava/util/List;Ljava/lang/String;ILjava/util/List;I)V
+#topicsByError(Lorg/apache/kafka/common/protocol/Errors;)Ljava/util/Set;
+#clusterId()Ljava/lang/String;
-#<init>(Ljava/util/List;ILjava/util/List;)V
-#<init>(Ljava/util/List;ILjava/util/List;I)V
@0.10.2.1
+#unavailableTopics()Ljava/util/Set;
@0.11.0.0
+#<init>(ILjava/util/List;Ljava/lang/String;ILjava/util/List;)V
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/MetadataResponse;
-#<init>(Ljava/util/List;Ljava/lang/String;ILjava/util/List;I)V
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/MetadataResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/MetadataResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.2.0
+#partitionMetaToInfo(Ljava/lang/String;Lorg/apache/kafka/common/requests/MetadataResponse$PartitionMetadata;)Lorg/apache/kafka/common/PartitionInfo;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/MetadataResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/MetadataResponseData;
+#prepareResponse(ILjava/util/List;Ljava/lang/String;ILjava/util/List;I)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(ILjava/util/List;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(Ljava/util/List;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/List;Ljava/lang/String;ILjava/util/List;)V
-#<init>(ILjava/util/List;Ljava/lang/String;ILjava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#unavailableTopics()Ljava/util/Set;
@2.3.1
+#topicAuthorizedOperations(Ljava/lang/String;)Ljava/util/Optional;
+#clusterAuthorizedOperations()I
+#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;I)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(Ljava/util/Collection;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
-#data()Lorg/apache/kafka/common/message/MetadataResponseData;
-#prepareResponse(ILjava/util/List;Ljava/lang/String;ILjava/util/List;I)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(ILjava/util/List;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(Ljava/util/List;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
@2.4.0
+#brokersById()Ljava/util/Map;
+#hasReliableLeaderEpochs()Z
@2.5.0
+#toPartitionInfo(Lorg/apache/kafka/common/requests/MetadataResponse$PartitionMetadata;Ljava/util/Map;)Lorg/apache/kafka/common/PartitionInfo;
-#partitionMetaToInfo(Ljava/lang/String;Lorg/apache/kafka/common/requests/MetadataResponse$PartitionMetadata;)Lorg/apache/kafka/common/PartitionInfo;
@2.6.0
+#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;IS)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;S)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(Ljava/util/Collection;Ljava/lang/String;ILjava/util/List;S)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(ILjava/util/List;Ljava/util/Collection;Ljava/lang/String;II)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;I)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/MetadataResponseData;S)V
+#data()Lorg/apache/kafka/common/message/MetadataResponseData;
+#prepareResponse(SILjava/util/Collection;Ljava/lang/String;ILjava/util/List;I)Lorg/apache/kafka/common/requests/MetadataResponse;
+#prepareResponse(ZILjava/util/Collection;Ljava/lang/String;ILjava/util/List;I)Lorg/apache/kafka/common/requests/MetadataResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/message/MetadataResponseData;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;IS)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(ILjava/util/Collection;Ljava/lang/String;ILjava/util/List;S)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(Ljava/util/Collection;Ljava/lang/String;ILjava/util/List;S)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(Ljava/util/Collection;Ljava/lang/String;ILjava/util/List;)Lorg/apache/kafka/common/requests/MetadataResponse;
-#prepareResponse(ILjava/util/List;Ljava/util/Collection;Ljava/lang/String;II)Lorg/apache/kafka/common/requests/MetadataResponse;
@2.8.1
+#buildCluster()Lorg/apache/kafka/common/Cluster;
-#cluster()Lorg/apache/kafka/common/Cluster;
@3.1.0
+#errorsByTopicId()Ljava/util/Map;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/OffsetCommitRequest$Builder
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
+#setGenerationId(I)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
+#setRetentionTime(J)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
+#build()Lorg/apache/kafka/common/requests/OffsetCommitRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/OffsetCommitRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/OffsetCommitRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.1.0
-#setRetentionTime(J)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/OffsetCommitRequestData;)V
-#<init>(Ljava/lang/String;Ljava/util/Map;)V
-#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
-#setGenerationId(I)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;

+###org/apache/kafka/common/requests/OffsetCommitRequest$PartitionData
@0.8.2-beta
+#<init>(JJLjava/lang/String;)V
@0.8.2.0
+#<init>(JLjava/lang/String;)V
@0.9.0.0
*#<init>(JJLjava/lang/String;)V[deprecated]
@0.10.2.0
+#toString()Ljava/lang/String;
@2.1.0
+#<init>(JLjava/util/Optional;Ljava/lang/String;)V
-#<init>(JLjava/lang/String;)V
@2.3.0
-###org/apache/kafka/common/requests/OffsetCommitRequest$PartitionData

+###org/apache/kafka/common/requests/OffsetCommitRequest
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/util/Map;)V[deprecated]
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groupId()Ljava/lang/String;
+#generationId()I
+#consumerId()Ljava/lang/String;
+#offsetData()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetCommitRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetCommitRequest;
@0.9.0.0
*#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V[deprecated]
+#<init>(Ljava/lang/String;ILjava/lang/String;JLjava/util/Map;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#memberId()Ljava/lang/String;
+#retentionTime()J
-#consumerId()Ljava/lang/String;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/lang/String;Ljava/util/Map;)V[deprecated]
-#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V[deprecated]
-#<init>(Ljava/lang/String;ILjava/lang/String;JLjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetCommitRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetCommitRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetCommitRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.1.0
*#retentionTime()J[deprecated]
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/OffsetCommitRequestData;S)V
+#data()Lorg/apache/kafka/common/message/OffsetCommitRequestData;
+#offsets()Ljava/util/Map;
+#getErrorResponseTopics(Ljava/util/List;Lorg/apache/kafka/common/protocol/Errors;)Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
-#groupId()Ljava/lang/String;
-#generationId()I
-#memberId()Ljava/lang/String;
-#retentionTime()J[deprecated]
-#offsetData()Ljava/util/Map;
@2.4.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/OffsetCommitResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/OffsetCommitResponse
@0.8.2-beta
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#responseData()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetCommitResponse;
@0.10.0.0
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetCommitResponse;
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetCommitResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetCommitResponse;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetCommitResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/OffsetCommitResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/OffsetCommitResponseData;
+#toString()Ljava/lang/String;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#responseData()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/OffsetFetchRequest$Builder
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#allTopicPartitions(Ljava/lang/String;)Lorg/apache/kafka/common/requests/OffsetFetchRequest$Builder;
+#isAllTopicPartitions()Z
+#build()Lorg/apache/kafka/common/requests/OffsetFetchRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/OffsetFetchRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.5.0
+#<init>(Ljava/lang/String;ZLjava/util/List;)V
-#<init>(Ljava/lang/String;Ljava/util/List;)V
-#allTopicPartitions(Ljava/lang/String;)Lorg/apache/kafka/common/requests/OffsetFetchRequest$Builder;
-#isAllTopicPartitions()Z
@2.6.0
+#<init>(Ljava/lang/String;ZLjava/util/List;Z)V
-#<init>(Ljava/lang/String;ZLjava/util/List;)V
@3.0.0
+#<init>(Ljava/util/Map;ZZ)V

+###org/apache/kafka/common/requests/OffsetFetchRequest
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groupId()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
@0.9.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
@0.10.2.0
+#forAllPartitions(Ljava/lang/String;)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
+#isAllPartitions()Z
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/lang/String;Ljava/util/List;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.4.0
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#forAllPartitions(Ljava/lang/String;)Lorg/apache/kafka/common/requests/OffsetFetchRequest;
@2.5.0
+#requireStable()Z
@2.8.0
+#data()Lorg/apache/kafka/common/message/OffsetFetchRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.0.0
+#groupIdsToPartitions()Ljava/util/Map;
+#groupIdsToTopics()Ljava/util/Map;
+#groupIds()Ljava/util/List;
+#isAllPartitionsForGroup(Ljava/lang/String;)Z

+###org/apache/kafka/common/requests/OffsetFetchResponse$PartitionData
@0.8.2-beta
+#<init>(JLjava/lang/String;S)V
@0.9.0.0
+#hasError()Z
@0.10.2.0
+#<init>(JLjava/lang/String;Lorg/apache/kafka/common/protocol/Errors;)V
-#<init>(JLjava/lang/String;S)V
@2.1.0
+#<init>(JLjava/util/Optional;Ljava/lang/String;Lorg/apache/kafka/common/protocol/Errors;)V
-#<init>(JLjava/lang/String;Lorg/apache/kafka/common/protocol/Errors;)V
@2.4.0
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I

+###org/apache/kafka/common/requests/OffsetFetchResponse
@0.8.2-beta
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#responseData()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;I)V
+#maybeThrowFirstPartitionError()V
+#hasError()Z
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
-#<init>(Ljava/util/Map;)V
@0.11.0.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;)V
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;I)V
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/OffsetFetchResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#maybeThrowFirstPartitionError()V
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/OffsetFetchResponseData;S)V
+#data()Lorg/apache/kafka/common/message/OffsetFetchResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/OffsetFetchResponseData;)V
+#<init>(ILjava/util/Map;Ljava/util/Map;)V
+#groupHasError(Ljava/lang/String;)Z
+#groupLevelError(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/Errors;
+#partitionDataMap(Ljava/lang/String;)Ljava/util/Map;
-#responseData()Ljava/util/Map;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder
@0.11.0.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#add(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Integer;)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
+#build(S)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.0.0
+#<init>(S)V
+#<init>(SLjava/util/Map;)V
-#<init>()V
-#<init>(Ljava/util/Map;)V
@2.1.0
-#<init>(S)V
-#add(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/Integer;)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
@2.3.0
+#forConsumer(Ljava/util/Map;)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
+#forFollower(SLjava/util/Map;I)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
-#<init>(SLjava/util/Map;)V
@2.8.0
+#forConsumer(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopicCollection;)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
+#forFollower(SLorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopicCollection;I)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
-#forConsumer(Ljava/util/Map;)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
-#forFollower(SLjava/util/Map;I)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder;
-#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest;

+###org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest
@0.11.0.0
+#epochsByTopicPartition()Ljava/util/Map;
+#<init>(Ljava/util/Map;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#replicaId()I
+#<init>(Ljava/util/Map;IS)V
+#supportsTopicPermission(S)Z
-#<init>(Ljava/util/Map;S)V
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;S)V
+#data()Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#epochsByTopicPartition()Ljava/util/Map;
-#<init>(Ljava/util/Map;IS)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/OffsetsForLeaderEpochResponse
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Ljava/util/Map;)V
+#responses()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetsForLeaderEpochResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.1.0
+#<init>(ILjava/util/Map;)V
+#throttleTimeMs()I
@2.1.1
+#toString()Ljava/lang/String;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;)V
+#data()Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Ljava/util/Map;)V
-#<init>(ILjava/util/Map;)V
-#responses()Ljava/util/Map;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/ProduceRequest$Builder
@0.10.2.0
+#<init>(SILjava/util/Map;)V
+#build()Lorg/apache/kafka/common/requests/ProduceRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#<init>(BSILjava/util/Map;Ljava/lang/String;)V
+#<init>(BSILjava/util/Map;)V
+#build(S)Lorg/apache/kafka/common/requests/ProduceRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#<init>(SILjava/util/Map;)V
-#build()Lorg/apache/kafka/common/requests/ProduceRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@1.0.0
+#forCurrentMagic(SILjava/util/Map;)Lorg/apache/kafka/common/requests/ProduceRequest$Builder;
+#forMagic(BSILjava/util/Map;Ljava/lang/String;)Lorg/apache/kafka/common/requests/ProduceRequest$Builder;
-#<init>(BSILjava/util/Map;Ljava/lang/String;)V
-#<init>(BSILjava/util/Map;)V
@2.1.0
+#<init>(SSSILjava/util/Map;Ljava/lang/String;)V
@2.1.1
+#buildUnsafe(S)Lorg/apache/kafka/common/requests/ProduceRequest;
@2.8.0
+#<init>(SSLorg/apache/kafka/common/message/ProduceRequestData;)V
-#forCurrentMagic(SILjava/util/Map;)Lorg/apache/kafka/common/requests/ProduceRequest$Builder;
-#forMagic(BSILjava/util/Map;Ljava/lang/String;)Lorg/apache/kafka/common/requests/ProduceRequest$Builder;
-#<init>(SSSILjava/util/Map;Ljava/lang/String;)V

+###org/apache/kafka/common/requests/ProduceRequest
@0.8.2-beta
+#<init>(SILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#acks()S
+#timeout()I
+#partitionRecords()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ProduceRequest;
@0.9.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ProduceRequest;
@0.10.0.0
+#clearPartitionRecords()V
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(SILjava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.10.2.1
+#toString()Ljava/lang/String;
+#partitionRecordsOrFail()Ljava/util/Map;
-#partitionRecords()Ljava/util/Map;
@0.11.0.0
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#toString(Z)Ljava/lang/String;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/ProduceResponse;
+#transactionalId()Ljava/lang/String;
+#isTransactional()Z
+#isIdempotent()Z
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ProduceRequest;
+#requiredMagicForVersion(S)B
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#toString()Ljava/lang/String;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/ProduceRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ProduceRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts(Ljava/lang/Throwable;)Ljava/util/Map;
@2.1.1
+#hasTransactionalRecords()Z
+#hasIdempotentRecords()Z
+#validateRecords(SLorg/apache/kafka/common/record/MemoryRecords;)V
-#isTransactional()Z
-#isIdempotent()Z
@2.8.0
+#forMagic(BLorg/apache/kafka/common/message/ProduceRequestData;)Lorg/apache/kafka/common/requests/ProduceRequest$Builder;
+#forCurrentMagic(Lorg/apache/kafka/common/message/ProduceRequestData;)Lorg/apache/kafka/common/requests/ProduceRequest$Builder;
+#<init>(Lorg/apache/kafka/common/message/ProduceRequestData;S)V
+#data()Lorg/apache/kafka/common/message/ProduceRequestData;
+#validateRecords(SLorg/apache/kafka/common/record/BaseRecords;)V
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
-#hasTransactionalRecords()Z
-#hasIdempotentRecords()Z
-#partitionRecordsOrFail()Ljava/util/Map;
-#validateRecords(SLorg/apache/kafka/common/record/MemoryRecords;)V

+###org/apache/kafka/common/requests/ProduceResponse$PartitionResponse
@0.8.2-beta
+#<init>(SJ)V
+#toString()Ljava/lang/String;
@0.10.0.0
+#<init>(SJJ)V
-#<init>(SJ)V
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJ)V
-#<init>(SJJ)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJ)V
-#<init>(Lorg/apache/kafka/common/protocol/Errors;JJ)V
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJLjava/util/List;)V
+#<init>(Lorg/apache/kafka/common/protocol/Errors;JJJLjava/util/List;Ljava/lang/String;)V
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/requests/ProduceResponse
@0.8.2-beta
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#responses()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ProduceResponse;
@0.9.0.0
+#<init>(Ljava/util/Map;I)V
+#getThrottleTime()I
@0.10.0.0
+#<init>(Ljava/util/Map;II)V
@0.11.0.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ProduceResponse;
-#<init>(Ljava/util/Map;II)V
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ProduceResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#throttleTimeMs()I
+#shouldClientThrottle(S)Z
-#getThrottleTime()I
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/ProduceResponseData;)V
*#<init>(Ljava/util/Map;)V[deprecated]
*#<init>(Ljava/util/Map;I)V[deprecated]
+#data()Lorg/apache/kafka/common/message/ProduceResponseData;
*#responses()Ljava/util/Map;[deprecated]
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.0.0
-#responses()Ljava/util/Map;[deprecated]
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/RecordsSend
@0.10.2.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/record/Records;)V
+#destination()Ljava/lang/String;
+#completed()Z
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)J
+#size()J
@2.0.0
-###org/apache/kafka/common/requests/RecordsSend

+###org/apache/kafka/common/requests/RequestAndSize
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/AbstractRequest;I)V

+###org/apache/kafka/common/requests/RequestContext
@1.0.0
+#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;)V
+#parseRequest(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/RequestAndSize;
+#buildResponse(Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/common/network/Send;
@1.0.1
+#apiVersion()S
@2.4.0
+#listenerName()Ljava/lang/String;
+#securityProtocol()Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#clientAddress()Ljava/net/InetAddress;
+#requestType()I
+#requestVersion()I
+#clientId()Ljava/lang/String;
+#correlationId()I
@2.5.0
+#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ClientInformation;)V
-#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;)V
@2.8.0
+#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ClientInformation;Z)V
+#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ClientInformation;ZLjava/util/Optional;)V
+#buildResponseSend(Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/common/network/Send;
+#buildResponseEnvelopePayload(Lorg/apache/kafka/common/requests/AbstractResponse;)Ljava/nio/ByteBuffer;
-#<init>(Lorg/apache/kafka/common/requests/RequestHeader;Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ClientInformation;)V
-#buildResponse(Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/common/network/Send;
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/requests/RequestHeader
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(SLjava/lang/String;I)V
+#<init>(SSLjava/lang/String;I)V
+#apiKey()S
+#apiVersion()S
+#clientId()Ljava/lang/String;
+#correlationId()I
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/RequestHeader;
@0.10.2.0
-#<init>(SLjava/lang/String;I)V
@0.11.0.0
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#toResponseHeader()Lorg/apache/kafka/common/requests/ResponseHeader;
+#toString()Ljava/lang/String;
@1.0.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;SLjava/lang/String;I)V
+#apiKey()Lorg/apache/kafka/common/protocol/ApiKeys;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#<init>(SSLjava/lang/String;I)V
-#apiKey()S
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/message/RequestHeaderData;S)V
+#headerVersion()S
+#data()Lorg/apache/kafka/common/message/RequestHeaderData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#write(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
@3.4.0
+#size()I
-#write(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)V
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)I

+###org/apache/kafka/common/requests/Resource
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/requests/ResourceType;Ljava/lang/String;)V
+#type()Lorg/apache/kafka/common/requests/ResourceType;
+#name()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/requests/Resource

+###org/apache/kafka/common/requests/ResourceType
@0.11.0.0
+#values()[Lorg/apache/kafka/common/requests/ResourceType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/requests/ResourceType;
+#id()B
+#forId(B)Lorg/apache/kafka/common/requests/ResourceType;
@2.0.0
-###org/apache/kafka/common/requests/ResourceType

+###org/apache/kafka/common/requests/ResponseHeader
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(I)V
+#correlationId()I
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ResponseHeader;
@0.11.0.0
+#sizeOf()I
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(IS)V
+#<init>(Lorg/apache/kafka/common/message/ResponseHeaderData;S)V
+#headerVersion()S
+#data()Lorg/apache/kafka/common/message/ResponseHeaderData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ResponseHeader;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(I)V
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ResponseHeader;
@2.8.0
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)I
+#write(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#sizeOf()I
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
@3.4.0
+#size()I
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)I
-#write(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;)V

+###org/apache/kafka/common/requests/SaslAuthenticateRequest$Builder
@1.0.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#build(S)Lorg/apache/kafka/common/requests/SaslAuthenticateRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;)V
-#<init>(Ljava/nio/ByteBuffer;)V

+###org/apache/kafka/common/requests/SaslAuthenticateRequest
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Ljava/nio/ByteBuffer;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#saslAuthBytes()Ljava/nio/ByteBuffer;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/SaslAuthenticateRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;)V
+#<init>(Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;S)V
+#data()Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/nio/ByteBuffer;)V
-#<init>(Ljava/nio/ByteBuffer;S)V
-#saslAuthBytes()Ljava/nio/ByteBuffer;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/SaslAuthenticateResponse
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#errorMessage()Ljava/lang/String;
+#saslAuthBytes()Ljava/nio/ByteBuffer;
+#errorCounts()Ljava/util/Map;
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/SaslAuthenticateResponse;
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Ljava/nio/ByteBuffer;J)V
+#sessionLifetimeMs()J
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#saslAuthBytes()[B
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Ljava/nio/ByteBuffer;)V
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;Ljava/nio/ByteBuffer;J)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#saslAuthBytes()Ljava/nio/ByteBuffer;
@2.8.0
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/SaslHandshakeRequest$Builder
@0.11.0.0
+#<init>(Ljava/lang/String;)V
+#build(S)Lorg/apache/kafka/common/requests/SaslHandshakeRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SaslHandshakeRequestData;)V
-#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/requests/SaslHandshakeRequest
@0.10.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#mechanism()Ljava/lang/String;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/SaslHandshakeRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SaslHandshakeRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/SaslHandshakeRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/SaslHandshakeRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SaslHandshakeRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Ljava/lang/String;S)V
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SaslHandshakeRequestData;)V
+#<init>(Lorg/apache/kafka/common/message/SaslHandshakeRequestData;S)V
+#data()Lorg/apache/kafka/common/message/SaslHandshakeRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;S)V
-#mechanism()Ljava/lang/String;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/message/SaslHandshakeRequestData;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/SaslHandshakeResponse
@0.10.0.0
+#<init>(SLjava/util/Collection;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#enabledMechanisms()Ljava/util/List;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SaslHandshakeResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/SaslHandshakeResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Collection;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/SaslHandshakeResponse;
-#<init>(SLjava/util/Collection;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SaslHandshakeResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/SaslHandshakeResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SaslHandshakeResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Collection;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/SaslHandshakeResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/StopReplicaRequest$Builder
@0.10.2.0
+#<init>(IIZLjava/util/Set;)V
+#build()Lorg/apache/kafka/common/requests/StopReplicaRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/StopReplicaRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/StopReplicaRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.2.0
+#<init>(SIIJZLjava/util/Set;)V
-#<init>(IIZLjava/util/Set;)V
@2.3.0
+#<init>(SIIJZLjava/util/Collection;)V
-#<init>(SIIJZLjava/util/Set;)V
@2.6.0
+#<init>(SIIJZLjava/util/List;)V
-#<init>(SIIJZLjava/util/Collection;)V
@3.4.0
+#<init>(SIIJZLjava/util/List;Z)V

+###org/apache/kafka/common/requests/StopReplicaRequest
@0.9.0.0
+#<init>(IIZLjava/util/Set;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#controllerId()I
+#controllerEpoch()I
+#deletePartitions()Z
+#partitions()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/StopReplicaRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/StopReplicaRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(IIZLjava/util/Set;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/StopReplicaRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/StopReplicaRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/StopReplicaRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@1.1.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/StopReplicaResponse;
@2.2.0
-#controllerId()I
-#controllerEpoch()I
@2.3.0
+#partitions()Ljava/util/Collection;
-#partitions()Ljava/util/Set;
@2.4.0
+#partitions()Ljava/lang/Iterable;
+#controllerId()I
+#controllerEpoch()I
+#brokerEpoch()J
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#partitions()Ljava/util/Collection;
@2.6.0
+#topicStates()Ljava/lang/Iterable;
+#partitionStates()Ljava/util/Map;
-#deletePartitions()Z
-#partitions()Ljava/lang/Iterable;
@2.7.0
+#data()Lorg/apache/kafka/common/message/StopReplicaRequestData;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.4.0
+#isKRaftController()Z

+###org/apache/kafka/common/requests/StopReplicaResponse
@0.9.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(SLjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#responses()Ljava/util/Map;
+#errorCode()S
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/StopReplicaResponse;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/StopReplicaResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/StopReplicaResponse;
-#<init>(Ljava/util/Map;)V
-#<init>(SLjava/util/Map;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/StopReplicaResponse;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/StopReplicaResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@1.1.1
+#toString()Ljava/lang/String;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/StopReplicaResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#partitionErrors()Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#responses()Ljava/util/Map;
@2.8.0
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/StopReplicaResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/SyncGroupRequest$Builder
@0.10.2.0
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V
+#build()Lorg/apache/kafka/common/requests/SyncGroupRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#build(S)Lorg/apache/kafka/common/requests/SyncGroupRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#build()Lorg/apache/kafka/common/requests/SyncGroupRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SyncGroupRequestData;)V
-#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V

+###org/apache/kafka/common/requests/SyncGroupRequest
@0.9.0.0
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#groupId()Ljava/lang/String;
+#generationId()I
+#groupAssignment()Ljava/util/Map;
+#memberId()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/SyncGroupRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SyncGroupRequest;
-#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/SyncGroupRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/SyncGroupRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SyncGroupRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SyncGroupRequestData;S)V
+#groupAssignments()Ljava/util/Map;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#groupId()Ljava/lang/String;
-#generationId()I
-#groupAssignment()Ljava/util/Map;
-#memberId()Ljava/lang/String;
@2.5.0
+#areMandatoryProtocolTypeAndNamePresent()Z
@2.8.0
+#data()Lorg/apache/kafka/common/message/SyncGroupRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/SyncGroupResponse
@0.9.0.0
+#<init>(SLjava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#memberAssignment()Ljava/nio/ByteBuffer;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SyncGroupResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/nio/ByteBuffer;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/nio/ByteBuffer;)V
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/SyncGroupResponse;
-#<init>(SLjava/nio/ByteBuffer;)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/SyncGroupResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/SyncGroupResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/nio/ByteBuffer;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/nio/ByteBuffer;)V
-#memberAssignment()Ljava/nio/ByteBuffer;
@2.6.0
+#toString()Ljava/lang/String;
@2.8.0
+#data()Lorg/apache/kafka/common/message/SyncGroupResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/TransactionResult
@0.11.0.0
+#values()[Lorg/apache/kafka/common/requests/TransactionResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/requests/TransactionResult;
+#forId(Z)Lorg/apache/kafka/common/requests/TransactionResult;

+###org/apache/kafka/common/requests/TxnOffsetCommitRequest$Builder
@0.11.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;)V
+#consumerGroupId()Ljava/lang/String;
+#offsets()Ljava/util/Map;
+#build(S)Lorg/apache/kafka/common/requests/TxnOffsetCommitRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;)V
-#consumerGroupId()Ljava/lang/String;
-#offsets()Ljava/util/Map;
@2.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;Ljava/lang/String;ILjava/util/Optional;)V
-#<init>(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;)V
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;Z)V
+#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;Ljava/lang/String;ILjava/util/Optional;Z)V
-#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;Ljava/lang/String;ILjava/util/Optional;)V
@3.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;Ljava/lang/String;ILjava/util/Optional;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;Z)V
-#<init>(Ljava/lang/String;Ljava/lang/String;JSLjava/util/Map;Ljava/lang/String;ILjava/util/Optional;Z)V

+###org/apache/kafka/common/requests/TxnOffsetCommitRequest$CommittedOffset
@0.11.0.0
+#<init>(JLjava/lang/String;)V
+#toString()Ljava/lang/String;
+#offset()J
+#metadata()Ljava/lang/String;
@2.1.0
+#<init>(JLjava/lang/String;Ljava/util/Optional;)V
-#<init>(JLjava/lang/String;)V
-#offset()J
-#metadata()Ljava/lang/String;
@2.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/requests/TxnOffsetCommitRequest
@0.11.0.0
+#<init>(SLjava/lang/String;Ljava/lang/String;JSLjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#transactionalId()Ljava/lang/String;
+#consumerGroupId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#offsets()Ljava/util/Map;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/TxnOffsetCommitResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/TxnOffsetCommitRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;S)V
+#getTopics(Ljava/util/Map;)Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(SLjava/lang/String;Ljava/lang/String;JSLjava/util/Map;)V
-#transactionalId()Ljava/lang/String;
-#consumerGroupId()Ljava/lang/String;
-#producerId()J
-#producerEpoch()S
@2.5.0
-#getTopics(Ljava/util/Map;)Ljava/util/List;
@2.8.0
+#data()Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/TxnOffsetCommitResponse
@0.11.0.0
+#<init>(ILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#errors()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/TxnOffsetCommitResponse;
+#toString()Ljava/lang/String;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.0.0
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#data()Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/UpdateMetadataRequest$Broker
@0.9.0.0
+#<init>(ILjava/util/Map;)V
@0.10.0.0
+#<init>(ILjava/util/Map;Ljava/lang/String;)V
*#<init>(ILjava/util/Map;)V[deprecated]
@0.10.2.0
+#<init>(ILjava/util/List;Ljava/lang/String;)V
+#toString()Ljava/lang/String;
-#<init>(ILjava/util/Map;Ljava/lang/String;)V
-#<init>(ILjava/util/Map;)V[deprecated]
@2.4.0
-###org/apache/kafka/common/requests/UpdateMetadataRequest$Broker

+###org/apache/kafka/common/requests/UpdateMetadataRequest$Builder
@0.10.2.0
+#<init>(IILjava/util/Map;Ljava/util/Set;)V
+#build()Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
+#<init>(SIILjava/util/Map;Ljava/util/Set;)V
+#build(S)Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
-#<init>(IILjava/util/Map;Ljava/util/Set;)V
-#build()Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
-#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@2.2.0
+#<init>(SIIJLjava/util/Map;Ljava/util/Set;)V
-#<init>(SIILjava/util/Map;Ljava/util/Set;)V
@2.4.0
+#<init>(SIIJLjava/util/List;Ljava/util/List;)V
-#<init>(SIIJLjava/util/Map;Ljava/util/Set;)V
@2.8.0
+#<init>(SIIJLjava/util/List;Ljava/util/List;Ljava/util/Map;)V
-#<init>(SIIJLjava/util/List;Ljava/util/List;)V
@3.4.0
+#<init>(SIIJLjava/util/List;Ljava/util/List;Ljava/util/Map;Z)V

+###org/apache/kafka/common/requests/UpdateMetadataRequest$EndPoint
@0.9.0.0
+#<init>(Ljava/lang/String;I)V
@0.10.2.0
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;)V
+#toString()Ljava/lang/String;
-#<init>(Ljava/lang/String;I)V
@1.0.0
+#<init>(Ljava/lang/String;ILorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;)V
-#<init>(Ljava/lang/String;ILorg/apache/kafka/common/protocol/SecurityProtocol;Lorg/apache/kafka/common/network/ListenerName;)V
@2.4.0
-###org/apache/kafka/common/requests/UpdateMetadataRequest$EndPoint

+###org/apache/kafka/common/requests/UpdateMetadataRequest$PartitionState
@0.9.0.0
+#<init>(IIILjava/util/List;ILjava/util/Set;)V
@0.10.0.1
-###org/apache/kafka/common/requests/UpdateMetadataRequest$PartitionState

+###org/apache/kafka/common/requests/UpdateMetadataRequest
@0.9.0.0
+#<init>(IILjava/util/Set;Ljava/util/Map;)V[deprecated]
+#<init>(IILjava/util/Map;Ljava/util/Set;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#controllerId()I
+#controllerEpoch()I
+#partitionStates()Ljava/util/Map;
+#liveBrokers()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
@0.10.0.0
+#<init>(IIILjava/util/Map;Ljava/util/Set;)V
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(IILjava/util/Set;Ljava/util/Map;)V[deprecated]
-#<init>(IILjava/util/Map;Ljava/util/Set;)V
-#<init>(IIILjava/util/Map;Ljava/util/Set;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
-#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/UpdateMetadataRequest;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.2.0
-#controllerId()I
-#controllerEpoch()I
@2.4.0
+#controllerId()I
+#controllerEpoch()I
+#brokerEpoch()J
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/UpdateMetadataResponse;
+#partitionStates()Ljava/lang/Iterable;
+#liveBrokers()Ljava/util/List;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#partitionStates()Ljava/util/Map;
-#liveBrokers()Ljava/util/Set;
@2.7.0
+#data()Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
@2.8.0
+#topicStates()Ljava/util/List;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.4.0
+#isKRaftController()Z

+###org/apache/kafka/common/requests/UpdateMetadataResponse
@0.9.0.0
+#<init>(S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/UpdateMetadataResponse;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/UpdateMetadataResponse;
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/UpdateMetadataResponse;
-#<init>(S)V
-#errorCode()S
-#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/UpdateMetadataResponse;
-#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/UpdateMetadataResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/UpdateMetadataResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/UpdateMetadataResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/WriteTxnMarkersRequest$Builder
@0.11.0.0
+#<init>(Ljava/util/List;)V
+#build(S)Lorg/apache/kafka/common/requests/WriteTxnMarkersRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.8.0
+#<init>(SLjava/util/List;)V
-#<init>(Ljava/util/List;)V
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData;)V

+###org/apache/kafka/common/requests/WriteTxnMarkersRequest$TxnMarkerEntry
@0.11.0.0
+#<init>(JSILorg/apache/kafka/common/requests/TransactionResult;Ljava/util/List;)V
+#producerId()J
+#producerEpoch()S
+#coordinatorEpoch()I
+#transactionResult()Lorg/apache/kafka/common/requests/TransactionResult;
+#partitions()Ljava/util/List;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/requests/WriteTxnMarkersRequest
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#markers()Ljava/util/List;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/WriteTxnMarkersResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/WriteTxnMarkersRequest;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.6.0
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#data()Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/WriteTxnMarkersResponse
@0.11.0.0
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errors(J)Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/WriteTxnMarkersResponse;
@1.0.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData;)V
+#data()Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData;
+#errorsByProducerId()Ljava/util/Map;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#errors(J)Ljava/util/Map;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/resource/Resource
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/resource/ResourceType;Ljava/lang/String;)V
+#resourceType()Lorg/apache/kafka/common/resource/ResourceType;
+#name()Ljava/lang/String;
+#toFilter()Lorg/apache/kafka/common/resource/ResourceFilter;
+#toString()Ljava/lang/String;
+#isUnknown()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0
-#toFilter()Lorg/apache/kafka/common/resource/ResourceFilter;

+###org/apache/kafka/common/resource/ResourceFilter
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/resource/ResourceType;Ljava/lang/String;)V
+#resourceType()Lorg/apache/kafka/common/resource/ResourceType;
+#name()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#isUnknown()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#matches(Lorg/apache/kafka/common/resource/Resource;)Z
+#matchesAtMostOne()Z
+#findIndefiniteField()Ljava/lang/String;
@3.0.0
-###org/apache/kafka/common/resource/ResourceFilter

+###org/apache/kafka/common/resource/ResourceType
@0.11.0.0
+#values()[Lorg/apache/kafka/common/resource/ResourceType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/resource/ResourceType;
+#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/resource/ResourceType;
+#fromCode(B)Lorg/apache/kafka/common/resource/ResourceType;
+#code()B
+#isUnknown()Z

+###org/apache/kafka/common/security/auth/AuthenticationContext
@1.0.0
+#securityProtocol()Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#clientAddress()Ljava/net/InetAddress;
@2.0.0
+#listenerName()Ljava/lang/String;

+###org/apache/kafka/common/security/auth/DefaultPrincipalBuilder
@0.9.0.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#buildPrincipal(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;)Ljava/security/Principal;
+#close()V
@3.0.0
-###org/apache/kafka/common/security/auth/DefaultPrincipalBuilder

+###org/apache/kafka/common/security/auth/KafkaPrincipal
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getName()Ljava/lang/String;
+#getPrincipalType()Ljava/lang/String;
@1.0.0
*#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;[deprecated]
@1.1.0
+#tokenAuthenticated(Z)V
+#tokenAuthenticated()Z
@2.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
@3.0.0
-#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;[deprecated]

+###org/apache/kafka/common/security/auth/KafkaPrincipalBuilder
@1.0.0
+#build(Lorg/apache/kafka/common/security/auth/AuthenticationContext;)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;

+###org/apache/kafka/common/security/auth/PlaintextAuthenticationContext
@1.0.0
+#<init>(Ljava/net/InetAddress;)V
+#securityProtocol()Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#clientAddress()Ljava/net/InetAddress;
@2.0.0
+#<init>(Ljava/net/InetAddress;Ljava/lang/String;)V
+#listenerName()Ljava/lang/String;
-#<init>(Ljava/net/InetAddress;)V

+###org/apache/kafka/common/security/auth/PrincipalBuilder
@0.9.0.0
+#configure(Ljava/util/Map;)V
+#buildPrincipal(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/network/Authenticator;)Ljava/security/Principal;
+#close()V
@3.0.0
-###org/apache/kafka/common/security/auth/PrincipalBuilder

+###org/apache/kafka/common/security/auth/SaslAuthenticationContext
@1.0.0
+#<init>(Ljavax/security/sasl/SaslServer;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Ljava/net/InetAddress;)V
+#server()Ljavax/security/sasl/SaslServer;
+#securityProtocol()Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#clientAddress()Ljava/net/InetAddress;
@2.0.0
+#<init>(Ljavax/security/sasl/SaslServer;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Ljava/net/InetAddress;Ljava/lang/String;)V
+#listenerName()Ljava/lang/String;
-#<init>(Ljavax/security/sasl/SaslServer;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Ljava/net/InetAddress;)V
@2.8.0
+#<init>(Ljavax/security/sasl/SaslServer;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Ljava/net/InetAddress;Ljava/lang/String;Ljava/util/Optional;)V
+#sslSession()Ljava/util/Optional;

+###org/apache/kafka/common/security/auth/SecurityProtocol
@1.0.0
+#values()[Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#names()Ljava/util/List;
+#forId(S)Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#forName(Ljava/lang/String;)Lorg/apache/kafka/common/security/auth/SecurityProtocol;

+###org/apache/kafka/common/security/auth/SslAuthenticationContext
@1.0.0
+#<init>(Ljavax/net/ssl/SSLSession;Ljava/net/InetAddress;)V
+#session()Ljavax/net/ssl/SSLSession;
+#securityProtocol()Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#clientAddress()Ljava/net/InetAddress;
@2.0.0
+#<init>(Ljavax/net/ssl/SSLSession;Ljava/net/InetAddress;Ljava/lang/String;)V
+#listenerName()Ljava/lang/String;
-#<init>(Ljavax/net/ssl/SSLSession;Ljava/net/InetAddress;)V

+###org/apache/kafka/common/security/authenticator/AbstractLogin$LoginCallbackHandler
@0.10.0.0
+#<init>()V
+#handle([Ljavax/security/auth/callback/Callback;)V
@2.0.0
-###org/apache/kafka/common/security/authenticator/AbstractLogin$LoginCallbackHandler

+###org/apache/kafka/common/security/authenticator/AbstractLogin
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;)V
+#login()Ljavax/security/auth/login/LoginContext;
+#subject()Ljavax/security/auth/Subject;
@0.10.2.0
+#configure(Ljava/util/Map;Ljavax/security/auth/login/Configuration;Ljava/lang/String;)V
-#configure(Ljava/util/Map;Ljava/lang/String;)V
@0.11.0.0
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/security/JaasContext;)V
-#configure(Ljava/util/Map;Ljavax/security/auth/login/Configuration;Ljava/lang/String;)V
@2.0.0
+#configure(Ljava/util/Map;Ljava/lang/String;Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;)V
-#configure(Ljava/util/Map;Lorg/apache/kafka/common/security/JaasContext;)V

+###org/apache/kafka/common/security/authenticator/AuthCallbackHandler
@1.0.0
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/network/Mode;Ljavax/security/auth/Subject;Ljava/lang/String;)V
+#close()V
@2.0.0
-###org/apache/kafka/common/security/authenticator/AuthCallbackHandler

+###org/apache/kafka/common/security/authenticator/CredentialCache$Cache
@0.10.2.0
+#<init>(Ljava/lang/Class;)V
+#get(Ljava/lang/String;)Ljava/lang/Object;
+#put(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
+#credentialClass()Ljava/lang/Class;

+###org/apache/kafka/common/security/authenticator/CredentialCache
@0.10.2.0
+#<init>()V
+#createCache(Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;
+#cache(Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;

+###org/apache/kafka/common/security/authenticator/DefaultKafkaPrincipalBuilder
@1.0.0
+#fromOldPrincipalBuilder(Lorg/apache/kafka/common/network/Authenticator;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)Lorg/apache/kafka/common/security/authenticator/DefaultKafkaPrincipalBuilder;
+#<init>(Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
+#build(Lorg/apache/kafka/common/security/auth/AuthenticationContext;)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#close()V
@2.2.0
+#<init>(Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/ssl/SslPrincipalMapper;)V
-#<init>(Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
@2.8.0
+#serialize(Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)[B
+#deserialize([B)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
@3.0.0
-#fromOldPrincipalBuilder(Lorg/apache/kafka/common/network/Authenticator;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)Lorg/apache/kafka/common/security/authenticator/DefaultKafkaPrincipalBuilder;
-#close()V

+###org/apache/kafka/common/security/authenticator/DefaultLogin
@0.10.0.0
+#<init>()V
+#serviceName()Ljava/lang/String;
+#close()V

+###org/apache/kafka/common/security/authenticator/Login
@1.0.0
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/security/JaasContext;)V
+#login()Ljavax/security/auth/login/LoginContext;
+#subject()Ljavax/security/auth/Subject;
+#serviceName()Ljava/lang/String;
+#close()V
@2.0.0
-###org/apache/kafka/common/security/authenticator/Login

+###org/apache/kafka/common/security/authenticator/LoginManager
@0.10.0.0
+#acquireLoginManager(Lorg/apache/kafka/common/network/LoginType;ZLjava/util/Map;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
+#subject()Ljavax/security/auth/Subject;
+#serviceName()Ljava/lang/String;
+#release()V
+#closeAll()V
@0.10.2.0
+#acquireLoginManager(Lorg/apache/kafka/common/network/LoginType;ZLjava/util/Map;Ljavax/security/auth/login/Configuration;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
-#acquireLoginManager(Lorg/apache/kafka/common/network/LoginType;ZLjava/util/Map;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
@0.11.0.0
+#acquireLoginManager(Lorg/apache/kafka/common/security/JaasContext;ZLjava/util/Map;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
-#acquireLoginManager(Lorg/apache/kafka/common/network/LoginType;ZLjava/util/Map;Ljavax/security/auth/login/Configuration;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
@0.11.0.1
+#toString()Ljava/lang/String;
@1.1.0
+#acquireLoginManager(Lorg/apache/kafka/common/security/JaasContext;Ljava/lang/String;ZLjava/util/Map;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
-#acquireLoginManager(Lorg/apache/kafka/common/security/JaasContext;ZLjava/util/Map;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
@2.0.0
+#acquireLoginManager(Lorg/apache/kafka/common/security/JaasContext;Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lorg/apache/kafka/common/security/authenticator/LoginManager;
-#acquireLoginManager(Lorg/apache/kafka/common/security/JaasContext;Ljava/lang/String;ZLjava/util/Map;)Lorg/apache/kafka/common/security/authenticator/LoginManager;

+###org/apache/kafka/common/security/authenticator/SaslClientAuthenticator$SaslState
@0.9.0.0
+#values()[Lorg/apache/kafka/common/security/authenticator/SaslClientAuthenticator$SaslState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/security/authenticator/SaslClientAuthenticator$SaslState;

+###org/apache/kafka/common/security/authenticator/SaslClientAuthenticator
@0.9.0.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;)V
+#configure(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Ljava/util/Map;)V
+#authenticate()V
+#principal()Ljava/security/Principal;
+#complete()Z
+#close()V
@0.10.0.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
-#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;)V
@1.0.0
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/kafka/common/network/TransportLayer;)V
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
-#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
-#configure(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Ljava/util/Map;)V
-#principal()Ljava/security/Principal;
@2.0.0
+#<init>(Ljava/util/Map;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/kafka/common/network/TransportLayer;)V
-#<init>(Ljava/util/Map;Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/kafka/common/network/TransportLayer;)V
@2.2.0
+#<init>(Ljava/util/Map;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/utils/Time;)V
+#reauthenticate(Lorg/apache/kafka/common/network/ReauthenticationContext;)V
+#getAndClearResponsesReceivedDuringReauthentication()Ljava/util/List;
+#clientSessionReauthenticationTimeNanos()Ljava/lang/Long;
+#reauthenticationLatencyMs()Ljava/lang/Long;
-#<init>(Ljava/util/Map;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/kafka/common/network/TransportLayer;)V
@2.5.0
+#<init>(Ljava/util/Map;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/utils/LogContext;)V
+#pollResponseReceivedDuringReauthentication()Ljava/util/Optional;
+#firstPrincipal(Ljavax/security/auth/Subject;)Ljava/lang/String;
-#<init>(Ljava/util/Map;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;Ljava/lang/String;Ljavax/security/auth/Subject;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/utils/Time;)V
-#getAndClearResponsesReceivedDuringReauthentication()Ljava/util/List;
@2.5.1
+#isReserved(I)Z
@2.8.0
+#principalSerde()Ljava/util/Optional;

+###org/apache/kafka/common/security/authenticator/SaslClientCallbackHandler
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/network/Mode;Ljavax/security/auth/Subject;Ljava/lang/String;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V
@2.0.0
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
-#configure(Ljava/util/Map;Lorg/apache/kafka/common/network/Mode;Ljavax/security/auth/Subject;Ljava/lang/String;)V

+###org/apache/kafka/common/security/authenticator/SaslServerAuthenticator
@0.9.0.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
+#configure(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Ljava/util/Map;)V
+#authenticate()V
+#principal()Ljava/security/Principal;
+#complete()Z
+#close()V
@0.9.0.1
+#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;I)V
-#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
@0.10.0.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;I)V
-#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;I)V
@0.10.2.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/login/Configuration;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;ILorg/apache/kafka/common/security/authenticator/CredentialCache;)V
-#<init>(Ljava/lang/String;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;I)V
@0.11.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;ILorg/apache/kafka/common/security/authenticator/CredentialCache;)V
-#<init>(Ljava/lang/String;Ljavax/security/auth/login/Configuration;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;ILorg/apache/kafka/common/security/authenticator/CredentialCache;)V
@0.11.0.1
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;ILorg/apache/kafka/common/security/authenticator/CredentialCache;)V
@1.0.0
+#<init>(Ljava/util/Map;Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;)V
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Ljava/lang/String;Lorg/apache/kafka/common/security/authenticator/CredentialCache;)V
-#configure(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Ljava/util/Map;)V
-#principal()Ljava/security/Principal;
@1.1.0
+#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/token/delegation/DelegationTokenCache;)V
-#<init>(Ljava/util/Map;Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext;Ljavax/security/auth/Subject;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;)V
@2.0.0
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;)V
-#<init>(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/security/authenticator/CredentialCache;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/token/delegation/DelegationTokenCache;)V
@2.1.0
+#handleAuthenticationFailure()V
@2.2.0
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;)V
+#reauthenticate(Lorg/apache/kafka/common/network/ReauthenticationContext;)V
+#serverSessionExpirationTimeNanos()Ljava/lang/Long;
+#reauthenticationLatencyMs()Ljava/lang/Long;
+#connectedClientSupportsReauthentication()Z
-#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;)V
@2.5.0
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/Map;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;Lorg/apache/kafka/common/utils/Time;)V
-#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/Map;Lorg/apache/kafka/common/utils/Time;)V
@2.8.0
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/Map;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;Lorg/apache/kafka/common/utils/Time;Ljava/util/function/Supplier;)V
+#principalSerde()Ljava/util/Optional;
-#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;Lorg/apache/kafka/common/network/ListenerName;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Lorg/apache/kafka/common/network/TransportLayer;Ljava/util/Map;Lorg/apache/kafka/common/network/ChannelMetadataRegistry;Lorg/apache/kafka/common/utils/Time;)V

+###org/apache/kafka/common/security/authenticator/SaslServerCallbackHandler
@0.9.0.0
+#<init>(Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@0.10.0.0
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/network/Mode;Ljavax/security/auth/Subject;Ljava/lang/String;)V
+#close()V
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/security/JaasContext;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
+#jaasContext()Lorg/apache/kafka/common/security/JaasContext;
-#<init>(Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
@1.0.0
+#<init>(Lorg/apache/kafka/common/security/JaasContext;)V
-#<init>(Lorg/apache/kafka/common/security/JaasContext;Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;)V
@2.0.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
-#<init>(Lorg/apache/kafka/common/security/JaasContext;)V
-#configure(Ljava/util/Map;Lorg/apache/kafka/common/network/Mode;Ljavax/security/auth/Subject;Ljava/lang/String;)V
-#jaasContext()Lorg/apache/kafka/common/security/JaasContext;

+###org/apache/kafka/common/security/JaasContext$Type
@0.11.0.0
+#values()[Lorg/apache/kafka/common/security/JaasContext$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/security/JaasContext$Type;

+###org/apache/kafka/common/security/JaasContext
@0.11.0.0
+#load(Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/network/ListenerName;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext$Type;Ljavax/security/auth/login/Configuration;)V
+#name()Ljava/lang/String;
+#type()Lorg/apache/kafka/common/security/JaasContext$Type;
+#configuration()Ljavax/security/auth/login/Configuration;
+#configurationEntries()Ljava/util/List;
+#configEntryOption(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@1.1.0
+#loadServerContext(Lorg/apache/kafka/common/network/ListenerName;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
+#loadClientContext(Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext$Type;Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/config/types/Password;)V
+#dynamicJaasConfig()Lorg/apache/kafka/common/config/types/Password;
-#load(Lorg/apache/kafka/common/security/JaasContext$Type;Lorg/apache/kafka/common/network/ListenerName;Ljava/util/Map;)Lorg/apache/kafka/common/security/JaasContext;
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/JaasContext$Type;Ljavax/security/auth/login/Configuration;)V
@2.0.0
+#configEntryOption(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#configEntryOption(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/common/security/JaasUtils
@0.9.0.0
+#<init>()V
+#jaasConfig(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#defaultRealm()Ljava/lang/String;
+#isZkSecurityEnabled()Z
@0.10.0.0
+#defaultKerberosRealm()Ljava/lang/String;
-#defaultRealm()Ljava/lang/String;
@0.10.2.0
+#jaasConfig(Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;)Ljavax/security/auth/login/Configuration;
+#defaultServerJaasConfigOption(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#jaasConfigOption(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#jaasConfig(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@0.11.0.0
-#jaasConfig(Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;)Ljavax/security/auth/login/Configuration;
-#defaultServerJaasConfigOption(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#jaasConfigOption(Ljavax/security/auth/login/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#defaultKerberosRealm()Ljava/lang/String;
@1.1.0
-#<init>()V
@2.4.0
+#zkSecuritySysConfigString()Ljava/lang/String;
@2.5.0
+#isZkSaslEnabled()Z
-#isZkSecurityEnabled()Z

+###org/apache/kafka/common/security/kerberos/BadFormatString
@0.9.0.0

+###org/apache/kafka/common/security/kerberos/KerberosLogin
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;)V
+#login()Ljavax/security/auth/login/LoginContext;
+#close()V
+#subject()Ljavax/security/auth/Subject;
+#serviceName()Ljava/lang/String;
@0.10.2.0
+#configure(Ljava/util/Map;Ljavax/security/auth/login/Configuration;Ljava/lang/String;)V
-#configure(Ljava/util/Map;Ljava/lang/String;)V
@0.11.0.0
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/security/JaasContext;)V
-#configure(Ljava/util/Map;Ljavax/security/auth/login/Configuration;Ljava/lang/String;)V
@2.0.0
+#configure(Ljava/util/Map;Ljava/lang/String;Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;)V
-#configure(Ljava/util/Map;Lorg/apache/kafka/common/security/JaasContext;)V

+###org/apache/kafka/common/security/kerberos/KerberosName
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#parse(Ljava/lang/String;)Lorg/apache/kafka/common/security/kerberos/KerberosName;
+#toString()Ljava/lang/String;
+#serviceName()Ljava/lang/String;
+#hostName()Ljava/lang/String;
+#realm()Ljava/lang/String;

+###org/apache/kafka/common/security/kerberos/KerberosShortNamer
@0.9.0.0
+#<init>(Ljava/util/List;)V
+#fromUnparsedRules(Ljava/lang/String;Ljava/util/List;)Lorg/apache/kafka/common/security/kerberos/KerberosShortNamer;
+#shortName(Lorg/apache/kafka/common/security/kerberos/KerberosName;)Ljava/lang/String;
@0.10.1.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/security/kerberos/NoMatchingRule
@0.9.0.0

+###org/apache/kafka/common/security/plain/PlainLoginModule
@0.10.0.0
+#<init>()V
+#initialize(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V
+#login()Z
+#logout()Z
+#commit()Z
+#abort()Z

+###org/apache/kafka/common/security/plain/PlainSaslServer$PlainSaslServerFactory
@0.10.0.0
+#<init>()V
+#createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/security/plain/PlainSaslServer$PlainSaslServerFactory

+###org/apache/kafka/common/security/plain/PlainSaslServer
@0.10.0.0
+#<init>(Ljavax/security/auth/callback/CallbackHandler;)V
+#evaluateResponse([B)[B
+#getAuthorizationID()Ljava/lang/String;
+#getMechanismName()Ljava/lang/String;
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#dispose()V
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/security/JaasContext;)V
-#<init>(Ljavax/security/auth/callback/CallbackHandler;)V
@2.0.0
-###org/apache/kafka/common/security/plain/PlainSaslServer

+###org/apache/kafka/common/security/plain/PlainSaslServerProvider
@0.10.0.0
+#initialize()V
@2.0.0
-###org/apache/kafka/common/security/plain/PlainSaslServerProvider

+###org/apache/kafka/common/security/scram/ScramCredential
@0.10.2.0
+#<init>([B[B[BI)V
+#salt()[B
+#serverKey()[B
+#storedKey()[B
+#iterations()I

+###org/apache/kafka/common/security/scram/ScramCredentialCallback
@0.10.2.0
+#<init>()V
+#scramCredential()Lorg/apache/kafka/common/security/scram/ScramCredential;
+#scramCredential(Lorg/apache/kafka/common/security/scram/ScramCredential;)V

+###org/apache/kafka/common/security/scram/ScramCredentialUtils
@0.10.2.0
+#<init>()V
+#credentialToString(Lorg/apache/kafka/common/security/scram/ScramCredential;)Ljava/lang/String;
+#credentialFromString(Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/ScramCredential;
+#createCache(Lorg/apache/kafka/common/security/authenticator/CredentialCache;Ljava/util/Collection;)V
@1.1.0
-#<init>()V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramCredentialUtils

+###org/apache/kafka/common/security/scram/ScramFormatter
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/security/scram/ScramMechanism;)V
+#hmac([B[B)[B
+#hash([B)[B
+#xor([B[B)[B
+#hi([B[BI)[B
+#normalize(Ljava/lang/String;)[B
+#saltedPassword(Ljava/lang/String;[BI)[B
+#clientKey([B)[B
+#storedKey([B)[B
+#saslName(Ljava/lang/String;)Ljava/lang/String;
+#username(Ljava/lang/String;)Ljava/lang/String;
+#authMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#clientSignature([BLorg/apache/kafka/common/security/scram/ScramMessages$ClientFirstMessage;Lorg/apache/kafka/common/security/scram/ScramMessages$ServerFirstMessage;Lorg/apache/kafka/common/security/scram/ScramMessages$ClientFinalMessage;)[B
+#clientProof([BLorg/apache/kafka/common/security/scram/ScramMessages$ClientFirstMessage;Lorg/apache/kafka/common/security/scram/ScramMessages$ServerFirstMessage;Lorg/apache/kafka/common/security/scram/ScramMessages$ClientFinalMessage;)[B
+#storedKey([B[B)[B
+#serverKey([B)[B
+#serverSignature([BLorg/apache/kafka/common/security/scram/ScramMessages$ClientFirstMessage;Lorg/apache/kafka/common/security/scram/ScramMessages$ServerFirstMessage;Lorg/apache/kafka/common/security/scram/ScramMessages$ClientFinalMessage;)[B
+#secureRandomString()Ljava/lang/String;
+#secureRandomBytes()[B
+#toBytes(Ljava/lang/String;)[B
+#generateCredential(Ljava/lang/String;I)Lorg/apache/kafka/common/security/scram/ScramCredential;
@2.0.0
-###org/apache/kafka/common/security/scram/ScramFormatter

+###org/apache/kafka/common/security/scram/ScramLoginModule
@0.10.2.0
+#<init>()V
+#initialize(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V
+#login()Z
+#logout()Z
+#commit()Z
+#abort()Z

+###org/apache/kafka/common/security/scram/ScramMechanism
@0.10.2.0
+#values()[Lorg/apache/kafka/common/security/scram/ScramMechanism;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/ScramMechanism;
+#mechanismName()Ljava/lang/String;
+#hashAlgorithm()Ljava/lang/String;
+#macAlgorithm()Ljava/lang/String;
+#minIterations()I
+#forMechanismName(Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/ScramMechanism;
+#mechanismNames()Ljava/util/Collection;
+#isScram(Ljava/lang/String;)Z
@2.0.0
-###org/apache/kafka/common/security/scram/ScramMechanism

+###org/apache/kafka/common/security/scram/ScramMessages$ClientFinalMessage
@0.10.2.0
+#<init>([B)V
+#<init>([BLjava/lang/String;)V
+#channelBinding()[B
+#nonce()Ljava/lang/String;
+#proof()[B
+#proof([B)V
+#clientFinalMessageWithoutProof()Ljava/lang/String;
+#toBytes()[B
@2.0.0
-###org/apache/kafka/common/security/scram/ScramMessages$ClientFinalMessage

+###org/apache/kafka/common/security/scram/ScramMessages$ClientFirstMessage
@0.10.2.0
+#<init>([B)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#saslName()Ljava/lang/String;
+#nonce()Ljava/lang/String;
+#authorizationId()Ljava/lang/String;
+#gs2Header()Ljava/lang/String;
+#clientFirstMessageBare()Ljava/lang/String;
+#toBytes()[B
@1.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#extensions()Lorg/apache/kafka/common/security/scram/ScramExtensions;
-#<init>(Ljava/lang/String;Ljava/lang/String;)V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramMessages$ClientFirstMessage

+###org/apache/kafka/common/security/scram/ScramMessages$ServerFinalMessage
@0.10.2.0
+#<init>([B)V
+#<init>(Ljava/lang/String;[B)V
+#error()Ljava/lang/String;
+#serverSignature()[B
+#toBytes()[B
@2.0.0
-###org/apache/kafka/common/security/scram/ScramMessages$ServerFinalMessage

+###org/apache/kafka/common/security/scram/ScramMessages$ServerFirstMessage
@0.10.2.0
+#<init>([B)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[BI)V
+#nonce()Ljava/lang/String;
+#salt()[B
+#iterations()I
+#toBytes()[B
@2.0.0
-###org/apache/kafka/common/security/scram/ScramMessages$ServerFirstMessage

+###org/apache/kafka/common/security/scram/ScramMessages
@0.10.2.0
+#<init>()V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramMessages

+###org/apache/kafka/common/security/scram/ScramSaslClient$ScramSaslClientFactory
@0.10.2.0
+#<init>()V
+#createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslClient;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/security/scram/ScramSaslClient$ScramSaslClientFactory

+###org/apache/kafka/common/security/scram/ScramSaslClient
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/security/scram/ScramMechanism;Ljavax/security/auth/callback/CallbackHandler;)V
+#getMechanismName()Ljava/lang/String;
+#hasInitialResponse()Z
+#evaluateChallenge([B)[B
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#dispose()V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramSaslClient

+###org/apache/kafka/common/security/scram/ScramSaslClientProvider
@0.10.2.0
+#initialize()V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramSaslClientProvider

+###org/apache/kafka/common/security/scram/ScramSaslServer$ScramSaslServerFactory
@0.10.2.0
+#<init>()V
+#createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/security/scram/ScramSaslServer$ScramSaslServerFactory

+###org/apache/kafka/common/security/scram/ScramSaslServer
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/security/scram/ScramMechanism;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V
+#evaluateResponse([B)[B
+#getAuthorizationID()Ljava/lang/String;
+#getMechanismName()Ljava/lang/String;
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#dispose()V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramSaslServer

+###org/apache/kafka/common/security/scram/ScramSaslServerProvider
@0.10.2.0
+#initialize()V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramSaslServerProvider

+###org/apache/kafka/common/security/scram/ScramServerCallbackHandler
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/network/Mode;Ljavax/security/auth/Subject;Ljava/lang/String;)V
+#close()V
@1.1.0
+#<init>(Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;Lorg/apache/kafka/common/security/token/delegation/DelegationTokenCache;)V
-#<init>(Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;)V
@2.0.0
-###org/apache/kafka/common/security/scram/ScramServerCallbackHandler

+###org/apache/kafka/common/security/ssl/SslFactory
@0.9.0.0
+#<init>(Lorg/apache/kafka/common/network/Mode;)V
+#configure(Ljava/util/Map;)V
+#createSslEngine(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
+#sslContext()Ljavax/net/ssl/SSLContext;
@0.9.0.1
+#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/lang/String;)V
@1.1.0
+#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/lang/String;Z)V
+#reconfigurableConfigs()Ljava/util/Set;
+#validateReconfiguration(Ljava/util/Map;)V
+#reconfigure(Ljava/util/Map;)V
-#<init>(Lorg/apache/kafka/common/network/Mode;Ljava/lang/String;)V
@2.3.0
*#sslContext()Ljavax/net/ssl/SSLContext;[deprecated]
+#sslEngineBuilder()Lorg/apache/kafka/common/security/ssl/SslEngineBuilder;
@2.6.0
+#sslEngineFactory()Lorg/apache/kafka/common/security/auth/SslEngineFactory;
+#close()V
-#sslContext()Ljavax/net/ssl/SSLContext;[deprecated]
-#sslEngineBuilder()Lorg/apache/kafka/common/security/ssl/SslEngineBuilder;
@2.7.2
+#createSslEngine(Ljava/net/Socket;)Ljavax/net/ssl/SSLEngine;
@2.8.0
-#createSslEngine(Ljava/net/Socket;)Ljavax/net/ssl/SSLEngine;
@2.8.1
+#createSslEngine(Ljava/net/Socket;)Ljavax/net/ssl/SSLEngine;

+###org/apache/kafka/common/serialization/ByteArrayDeserializer
@0.8.2.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)[B
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/ByteArraySerializer
@0.8.2.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;[B)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/ByteBufferDeserializer
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/nio/ByteBuffer;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/ByteBufferSerializer
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/nio/ByteBuffer;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/BytesDeserializer
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Lorg/apache/kafka/common/utils/Bytes;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/BytesSerializer
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/Deserializer
@0.8.2.0
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
+#close()V
@2.1.0
+#deserialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Ljava/lang/Object;

+###org/apache/kafka/common/serialization/DoubleDeserializer
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Double;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/DoubleSerializer
@0.10.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/Double;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/ExtendedDeserializer$Wrapper
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Deserializer;)V
+#deserialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Ljava/lang/Object;
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
+#close()V
+#ensureExtended(Lorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/common/serialization/ExtendedDeserializer;
@3.0.0
-###org/apache/kafka/common/serialization/ExtendedDeserializer$Wrapper

+###org/apache/kafka/common/serialization/ExtendedDeserializer
@0.11.0.0
+#deserialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Ljava/lang/Object;
@3.0.0
-###org/apache/kafka/common/serialization/ExtendedDeserializer

+###org/apache/kafka/common/serialization/ExtendedSerializer$Wrapper
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
+#serialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Object;)[B
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
+#close()V
+#ensureExtended(Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/common/serialization/ExtendedSerializer;
@3.0.0
-###org/apache/kafka/common/serialization/ExtendedSerializer$Wrapper

+###org/apache/kafka/common/serialization/ExtendedSerializer
@0.11.0.0
+#serialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Object;)[B
@3.0.0
-###org/apache/kafka/common/serialization/ExtendedSerializer

+###org/apache/kafka/common/serialization/FloatDeserializer
@0.11.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Float;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/FloatSerializer
@0.11.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/Float;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/IntegerDeserializer
@0.9.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Integer;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/IntegerSerializer
@0.9.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/Integer;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/LongDeserializer
@0.9.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Long;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/LongSerializer
@0.9.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/Long;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/Serde
@0.10.0.0
+#configure(Ljava/util/Map;Z)V
+#close()V
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;

+###org/apache/kafka/common/serialization/Serdes$ByteArraySerde
@0.10.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$ByteBufferSerde
@0.10.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$BytesSerde
@0.10.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$DoubleSerde
@0.10.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$FloatSerde
@0.11.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$IntegerSerde
@0.10.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$LongSerde
@0.10.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$ShortSerde
@0.11.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$StringSerde
@0.10.0.0
+#<init>()V
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#close()V
+#configure(Ljava/util/Map;Z)V
@2.0.0
-#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;
-#serializer()Lorg/apache/kafka/common/serialization/Serializer;
-#close()V
-#configure(Ljava/util/Map;Z)V

+###org/apache/kafka/common/serialization/Serdes$WrapperSerde
@0.10.1.0
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#configure(Ljava/util/Map;Z)V
+#close()V
+#serializer()Lorg/apache/kafka/common/serialization/Serializer;
+#deserializer()Lorg/apache/kafka/common/serialization/Deserializer;

+###org/apache/kafka/common/serialization/Serdes
@0.10.0.0
+#<init>()V
+#serdeFrom(Ljava/lang/Class;)Lorg/apache/kafka/common/serialization/Serde;
+#serdeFrom(Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Deserializer;)Lorg/apache/kafka/common/serialization/Serde;
+#Long()Lorg/apache/kafka/common/serialization/Serde;
+#Integer()Lorg/apache/kafka/common/serialization/Serde;
+#Double()Lorg/apache/kafka/common/serialization/Serde;
+#String()Lorg/apache/kafka/common/serialization/Serde;
+#ByteBuffer()Lorg/apache/kafka/common/serialization/Serde;
+#Bytes()Lorg/apache/kafka/common/serialization/Serde;
+#ByteArray()Lorg/apache/kafka/common/serialization/Serde;
@0.11.0.0
+#Short()Lorg/apache/kafka/common/serialization/Serde;
+#Float()Lorg/apache/kafka/common/serialization/Serde;
@2.1.0
+#UUID()Lorg/apache/kafka/common/serialization/Serde;
@2.5.0
+#Void()Lorg/apache/kafka/common/serialization/Serde;
@3.0.0
+#ListSerde(Ljava/lang/Class;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/common/serialization/Serde;

+###org/apache/kafka/common/serialization/Serializer
@0.8.2.0
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
+#close()V
@2.1.0
+#serialize(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Object;)[B

+###org/apache/kafka/common/serialization/ShortDeserializer
@0.11.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Short;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/ShortSerializer
@0.11.0.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/Short;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#configure(Ljava/util/Map;Z)V
-#close()V

+###org/apache/kafka/common/serialization/StringDeserializer
@0.8.2.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/String;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#close()V

+###org/apache/kafka/common/serialization/StringSerializer
@0.8.2.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/lang/String;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#close()V

+###org/apache/kafka/common/TopicPartition
@0.8.2-beta
+#<init>(Ljava/lang/String;I)V
+#partition()I
+#topic()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/TopicPartitionInfo
@0.11.0.0
+#<init>(ILorg/apache/kafka/common/Node;Ljava/util/List;Ljava/util/List;)V
+#partition()I
+#leader()Lorg/apache/kafka/common/Node;
+#replicas()Ljava/util/List;
+#isr()Ljava/util/List;
+#toString()Ljava/lang/String;
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/TopicPartitionReplica
@1.0.0
+#<init>(Ljava/lang/String;II)V
+#topic()Ljava/lang/String;
+#partition()I
+#brokerId()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/utils/AbstractIterator
@0.8.2-beta
+#<init>()V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#peek()Ljava/lang/Object;

+###org/apache/kafka/common/utils/AppInfoParser$AppInfo
@0.9.0.0
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getCommitId()Ljava/lang/String;
@2.3.0
+#<init>(J)V
+#getStartTimeMs()Ljava/lang/Long;
-#<init>()V

+###org/apache/kafka/common/utils/AppInfoParser$AppInfoMBean
@0.9.0.0
+#getVersion()Ljava/lang/String;
+#getCommitId()Ljava/lang/String;
@2.3.0
+#getStartTimeMs()Ljava/lang/Long;

+###org/apache/kafka/common/utils/AppInfoParser
@0.9.0.0
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getCommitId()Ljava/lang/String;
+#registerAppInfo(Ljava/lang/String;Ljava/lang/String;)V
+#unregisterAppInfo(Ljava/lang/String;Ljava/lang/String;)V
@1.0.0
+#registerAppInfo(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;)V
+#unregisterAppInfo(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;)V
-#registerAppInfo(Ljava/lang/String;Ljava/lang/String;)V
-#unregisterAppInfo(Ljava/lang/String;Ljava/lang/String;)V
@2.3.0
+#registerAppInfo(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;J)V
-#registerAppInfo(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;)V

+###org/apache/kafka/common/utils/Base64$Decoder
@1.0.0
+#decode(Ljava/lang/String;)[B
@2.0.0
-###org/apache/kafka/common/utils/Base64$Decoder

+###org/apache/kafka/common/utils/Base64$Encoder
@1.0.0
+#encodeToString([B)Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/utils/Base64$Encoder

+###org/apache/kafka/common/utils/Base64
@1.0.0
+#encoder()Lorg/apache/kafka/common/utils/Base64$Encoder;
+#urlEncoderNoPadding()Lorg/apache/kafka/common/utils/Base64$Encoder;
+#decoder()Lorg/apache/kafka/common/utils/Base64$Decoder;
@1.0.1
+#urlDecoder()Lorg/apache/kafka/common/utils/Base64$Decoder;
@2.0.0
-###org/apache/kafka/common/utils/Base64

+###org/apache/kafka/common/utils/ByteBufferInputStream
@0.11.0.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#read([BII)I

+###org/apache/kafka/common/utils/ByteBufferOutputStream
@0.11.0.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(I)V
+#<init>(IZ)V
+#write(I)V
+#write([BII)V
+#write(Ljava/nio/ByteBuffer;)V
+#buffer()Ljava/nio/ByteBuffer;
+#position()I
+#remaining()I
+#limit()I
+#position(I)V
+#initialCapacity()I
@0.11.0.1
+#ensureRemaining(I)V

+###org/apache/kafka/common/utils/Bytes$ByteArrayComparator
@0.11.0.0
+#compare([BII[BII)I

+###org/apache/kafka/common/utils/Bytes
@0.10.0.0
+#wrap([B)Lorg/apache/kafka/common/utils/Bytes;
+#<init>([B)V
+#get()[B
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/apache/kafka/common/utils/Bytes;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@2.4.0
+#increment(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/common/utils/Bytes;

+###org/apache/kafka/common/utils/ByteUtils
@0.11.0.0
+#readUnsignedInt(Ljava/nio/ByteBuffer;)J
+#readUnsignedInt(Ljava/nio/ByteBuffer;I)J
+#readUnsignedIntLE(Ljava/io/InputStream;)I
+#readUnsignedIntLE([BI)I
+#writeUnsignedInt(Ljava/nio/ByteBuffer;IJ)V
+#writeUnsignedInt(Ljava/nio/ByteBuffer;J)V
+#writeUnsignedIntLE(Ljava/io/OutputStream;I)V
+#writeUnsignedIntLE([BII)V
+#readVarint(Ljava/nio/ByteBuffer;)I
+#readVarint(Ljava/io/DataInput;)I
+#readVarlong(Ljava/io/DataInput;)J
+#readVarlong(Ljava/nio/ByteBuffer;)J
+#writeVarint(ILjava/io/DataOutput;)V
+#writeVarint(ILjava/nio/ByteBuffer;)V
+#writeVarlong(JLjava/io/DataOutput;)V
+#writeVarlong(JLjava/nio/ByteBuffer;)V
+#sizeOfVarint(I)I
+#sizeOfVarlong(J)I
@2.4.0
+#readUnsignedVarint(Ljava/nio/ByteBuffer;)I
+#readUnsignedVarint(Ljava/io/DataInput;)I
+#writeUnsignedVarint(ILjava/nio/ByteBuffer;)V
+#writeUnsignedVarint(ILjava/io/DataOutput;)V
+#sizeOfUnsignedVarint(I)I
@2.5.0
+#readDouble(Ljava/io/DataInput;)D
+#readDouble(Ljava/nio/ByteBuffer;)D
+#writeDouble(DLjava/io/DataOutput;)V
+#writeDouble(DLjava/nio/ByteBuffer;)V

+###org/apache/kafka/common/utils/Checksums
@0.11.0.0
+#update(Ljava/util/zip/Checksum;Ljava/nio/ByteBuffer;I)V
+#update(Ljava/util/zip/Checksum;Ljava/nio/ByteBuffer;II)V
+#updateInt(Ljava/util/zip/Checksum;I)V
+#updateLong(Ljava/util/zip/Checksum;J)V

+###org/apache/kafka/common/utils/CircularIterator
@0.9.0.0
+#<init>(Ljava/util/List;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#remove()V
@2.5.1
+#<init>(Ljava/util/Collection;)V
-#<init>(Ljava/util/List;)V

+###org/apache/kafka/common/utils/CloseableIterator
@0.11.0.0
+#close()V
@2.4.0
+#wrap(Ljava/util/Iterator;)Lorg/apache/kafka/common/utils/CloseableIterator;

+###org/apache/kafka/common/utils/CollectionUtils
@0.8.2-beta
+#<init>()V
+#groupDataByTopic(Ljava/util/Map;)Ljava/util/Map;
+#groupDataByTopic(Ljava/util/List;)Ljava/util/Map;
@1.1.0
-#<init>()V
@2.1.0
+#subtractMap(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
+#groupPartitionDataByTopic(Ljava/util/Map;)Ljava/util/Map;
+#groupPartitionsByTopic(Ljava/util/List;)Ljava/util/Map;
-#groupDataByTopic(Ljava/util/Map;)Ljava/util/Map;
-#groupDataByTopic(Ljava/util/List;)Ljava/util/Map;
@2.2.0
+#groupPartitionsByTopic(Ljava/util/Collection;)Ljava/util/Map;
-#groupPartitionsByTopic(Ljava/util/List;)Ljava/util/Map;
@3.0.0
+#groupPartitionsByTopic(Ljava/util/Collection;Ljava/util/function/Function;Ljava/util/function/BiConsumer;)Ljava/util/Map;

+###org/apache/kafka/common/utils/CopyOnWriteMap
@0.8.2-beta
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#size()I
+#values()Ljava/util/Collection;
+#clear()V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/common/utils/Crc32
@0.8.2-beta
+#crc32([B)J
+#crc32([BII)J
+#<init>()V
+#getValue()J
+#reset()V
+#update([BII)V
+#update(I)V
+#updateInt(I)V
@0.10.0.0
+#updateLong(J)V
@0.11.0.0
+#crc32(Ljava/nio/ByteBuffer;II)J
-#updateInt(I)V
-#updateLong(J)V
@3.2.0
-###org/apache/kafka/common/utils/Crc32

+###org/apache/kafka/common/utils/Crc32C
@0.11.0.0
+#<init>()V
+#compute([BII)J
+#compute(Ljava/nio/ByteBuffer;II)J
+#create()Ljava/util/zip/Checksum;
@1.0.0
-#<init>()V

+###org/apache/kafka/common/utils/Exit$Procedure
@0.11.0.0
+#execute(ILjava/lang/String;)V

+###org/apache/kafka/common/utils/Exit
@0.11.0.0
+#<init>()V
+#exit(I)V
+#exit(ILjava/lang/String;)V
+#halt(I)V
+#halt(ILjava/lang/String;)V
+#setExitProcedure(Lorg/apache/kafka/common/utils/Exit$Procedure;)V
+#setHaltProcedure(Lorg/apache/kafka/common/utils/Exit$Procedure;)V
+#resetExitProcedure()V
+#resetHaltProcedure()V
@2.5.0
+#addShutdownHook(Ljava/lang/String;Ljava/lang/Runnable;)V
+#setShutdownHookAdder(Lorg/apache/kafka/common/utils/Exit$ShutdownHookAdder;)V
+#resetShutdownHookAdder()V

+###org/apache/kafka/common/utils/Java
@0.11.0.0
+#isIBMJdk()Z
@1.0.0
+#isIbmJdk()Z
-#isIBMJdk()Z
@3.4.0
+#isIbmJdkSemeru()Z

+###org/apache/kafka/common/utils/KafkaThread
@0.8.2-beta
+#<init>(Ljava/lang/String;Ljava/lang/Runnable;Z)V
@0.10.2.0
+#<init>(Ljava/lang/String;Z)V
@1.0.0
+#daemon(Ljava/lang/String;Ljava/lang/Runnable;)Lorg/apache/kafka/common/utils/KafkaThread;
+#nonDaemon(Ljava/lang/String;Ljava/lang/Runnable;)Lorg/apache/kafka/common/utils/KafkaThread;

+###org/apache/kafka/common/utils/LogContext
@1.0.0
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#logger(Ljava/lang/Class;)Lorg/slf4j/Logger;
+#logPrefix()Ljava/lang/String;

+###org/apache/kafka/common/utils/MappedByteBuffers
@1.0.0
+#unmap(Ljava/lang/String;Ljava/nio/MappedByteBuffer;)V
@2.5.0
-###org/apache/kafka/common/utils/MappedByteBuffers

+###org/apache/kafka/common/utils/OperatingSystem
@0.11.0.0

+###org/apache/kafka/common/utils/PureJavaCrc32C
@0.11.0.0
+#<init>()V
+#getValue()J
+#reset()V
+#update([BII)V
+#update(I)V

+###org/apache/kafka/common/utils/Sanitizer
@1.0.0
+#<init>()V
+#sanitize(Ljava/lang/String;)Ljava/lang/String;
+#desanitize(Ljava/lang/String;)Ljava/lang/String;
+#jmxSanitize(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/common/utils/SecurityUtils
@1.0.0
+#<init>()V
+#parseKafkaPrincipal(Ljava/lang/String;)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
@2.4.0
+#addConfiguredSecurityProviders(Ljava/util/Map;)V
+#resourceType(Ljava/lang/String;)Lorg/apache/kafka/common/resource/ResourceType;
+#operation(Ljava/lang/String;)Lorg/apache/kafka/common/acl/AclOperation;
@2.5.0
+#permissionType(Ljava/lang/String;)Lorg/apache/kafka/common/acl/AclPermissionType;
+#resourceTypeName(Lorg/apache/kafka/common/resource/ResourceType;)Ljava/lang/String;
+#operationName(Lorg/apache/kafka/common/acl/AclOperation;)Ljava/lang/String;
+#permissionTypeName(Lorg/apache/kafka/common/acl/AclPermissionType;)Ljava/lang/String;
@2.8.0
+#authorizeByResourceTypeCheckArgs(Lorg/apache/kafka/common/acl/AclOperation;Lorg/apache/kafka/common/resource/ResourceType;)V
+#denyAll(Lorg/apache/kafka/common/resource/ResourcePattern;)Z

+###org/apache/kafka/common/utils/Shell$ExitCodeException
@0.9.0.0
+#<init>(ILjava/lang/String;)V
+#getExitCode()I

+###org/apache/kafka/common/utils/Shell$ShellCommandExecutor
@0.9.0.0
+#<init>([Ljava/lang/String;J)V
+#execute()V
+#output()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/utils/Shell
@0.9.0.0
+#<init>(J)V
+#exitCode()I
+#process()Ljava/lang/Process;
+#execCommand([Ljava/lang/String;)Ljava/lang/String;
+#execCommand([Ljava/lang/String;J)Ljava/lang/String;

+###org/apache/kafka/common/utils/SystemTime
@0.8.2-beta
+#<init>()V
+#milliseconds()J
+#nanoseconds()J
+#sleep(J)V
@0.10.2.0
+#hiResClockMs()J
@2.1.0
-#hiResClockMs()J
@2.3.0
+#waitObject(Ljava/lang/Object;Ljava/util/function/Supplier;J)V

+###org/apache/kafka/common/utils/Time
@0.8.2-beta
+#milliseconds()J
+#nanoseconds()J
+#sleep(J)V
@0.10.2.0
+#hiResClockMs()J
@2.1.0
+#timer(J)Lorg/apache/kafka/common/utils/Timer;
+#timer(Ljava/time/Duration;)Lorg/apache/kafka/common/utils/Timer;
@2.3.0
+#waitObject(Ljava/lang/Object;Ljava/util/function/Supplier;J)V

+###org/apache/kafka/common/utils/Utils
@0.8.2-beta
+#<init>()V
+#utf8([B)Ljava/lang/String;
+#utf8(Ljava/lang/String;)[B
+#readUnsignedInt(Ljava/nio/ByteBuffer;)J
+#readUnsignedInt(Ljava/nio/ByteBuffer;I)J
+#readUnsignedIntLE(Ljava/io/InputStream;)I
+#readUnsignedIntLE([BI)I
+#writetUnsignedInt(Ljava/nio/ByteBuffer;J)V
+#writeUnsignedInt(Ljava/nio/ByteBuffer;IJ)V
+#writeUnsignedIntLE(Ljava/io/OutputStream;I)V
+#writeUnsignedIntLE([BII)V
+#abs(I)I
+#utf8Length(Ljava/lang/CharSequence;)I
+#toArray(Ljava/nio/ByteBuffer;)[B
+#toArray(Ljava/nio/ByteBuffer;II)[B
+#notNull(Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(Ljava/lang/Class;)Ljava/lang/Object;
+#murmur2([B)I
+#getHost(Ljava/lang/String;)Ljava/lang/String;
+#getPort(Ljava/lang/String;)Ljava/lang/Integer;
+#formatAddress(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/String;
@0.9.0.0
+#sorted(Ljava/util/Collection;)Ljava/util/List;
+#toArrayLE(I)[B
+#min(J[J)J
+#sleep(J)V
+#newInstance(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#join([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#join(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
+#loadProps(Ljava/lang/String;)Ljava/util/Properties;
+#propsToStringMap(Ljava/util/Properties;)Ljava/util/Map;
+#stackTrace(Ljava/lang/Throwable;)Ljava/lang/String;
+#newThread(Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Boolean;)Ljava/lang/Thread;
+#daemonThread(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
+#croak(Ljava/lang/String;)V
+#readBytes(Ljava/nio/ByteBuffer;II)[B
+#readBytes(Ljava/nio/ByteBuffer;)[B
+#readFileAsString(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
+#readFileAsString(Ljava/lang/String;)Ljava/lang/String;
+#ensureCapacity(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
+#mkSet([Ljava/lang/Object;)Ljava/util/Set;
+#mkList([Ljava/lang/Object;)Ljava/util/List;
+#mkString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/CharSequence;
+#delete(Ljava/io/File;)V
+#safe(Ljava/util/List;)Ljava/util/List;
+#getKafkaClassLoader()Ljava/lang/ClassLoader;
+#getContextOrKafkaClassLoader()Ljava/lang/ClassLoader;
@0.10.0.0
+#writeUnsignedInt(Ljava/nio/ByteBuffer;J)V
+#newThread(Ljava/lang/String;Ljava/lang/Runnable;Z)Ljava/lang/Thread;
+#atomicMoveWithFallback(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
+#closeAll([Ljava/io/Closeable;)V
-#writetUnsignedInt(Ljava/nio/ByteBuffer;J)V
-#newThread(Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Boolean;)Ljava/lang/Thread;
@0.10.1.0
+#closeQuietly(Ljava/io/Closeable;Ljava/lang/String;)V
+#toPositive(I)I
+#longHashcode(J)I
@0.10.2.0
+#min(SS)S
+#toNullableArray(Ljava/nio/ByteBuffer;)[B
+#wrapNullable([B)Ljava/nio/ByteBuffer;
+#mkString(Ljava/util/Map;)Ljava/lang/String;
+#mkString(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#sizeDelimited(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;
+#computeChecksum(Ljava/nio/ByteBuffer;II)J
+#readFullyOrFail(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;JLjava/lang/String;)V
+#readFully(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;J)V
@0.10.2.2
+#readFully(Ljava/io/InputStream;Ljava/nio/ByteBuffer;)V
@0.11.0.0
+#utf8(Ljava/nio/ByteBuffer;I)Ljava/lang/String;
+#utf8(Ljava/nio/ByteBuffer;II)Ljava/lang/String;
+#max(J[J)J
+#toArray(Ljava/nio/ByteBuffer;I)[B
+#closeQuietly(Ljava/lang/AutoCloseable;Ljava/lang/String;)V
+#writeFully(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;)V
+#writeTo(Ljava/io/DataOutput;Ljava/nio/ByteBuffer;I)V
+#toList(Ljava/util/Iterator;)Ljava/util/List;
-#readUnsignedInt(Ljava/nio/ByteBuffer;)J
-#readUnsignedInt(Ljava/nio/ByteBuffer;I)J
-#readUnsignedIntLE(Ljava/io/InputStream;)I
-#toArrayLE(I)[B
-#readUnsignedIntLE([BI)I
-#writeUnsignedInt(Ljava/nio/ByteBuffer;J)V
-#writeUnsignedInt(Ljava/nio/ByteBuffer;IJ)V
-#writeUnsignedIntLE(Ljava/io/OutputStream;I)V
-#writeUnsignedIntLE([BII)V
-#mkString(Ljava/util/Map;)Ljava/lang/String;
-#mkString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/CharSequence;
-#closeQuietly(Ljava/io/Closeable;Ljava/lang/String;)V
-#computeChecksum(Ljava/nio/ByteBuffer;II)J
@1.0.0
+#newParameterizedInstance(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#formatBytes(J)Ljava/lang/String;
-#newThread(Ljava/lang/String;Ljava/lang/Runnable;Z)Ljava/lang/Thread;
-#daemonThread(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
@1.1.0
+#loadClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
-#<init>()V
@2.0.0
+#utf8(Ljava/nio/ByteBuffer;)Ljava/lang/String;
+#parseMap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;
+#mkEntry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
+#mkMap([Ljava/util/Map$Entry;)Ljava/util/Map;
+#mkProperties(Ljava/util/Map;)Ljava/util/Properties;
@2.1.0
+#validHostPattern(Ljava/lang/String;)Z
@2.2.0
+#concatListsUnmodifiable(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
+#concatLists(Ljava/util/List;Ljava/util/List;Ljava/util/function/Function;)Ljava/util/List;
-#mkList([Ljava/lang/Object;)Ljava/util/List;
@2.2.1
+#closeQuietly(Ljava/lang/AutoCloseable;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;)V
@2.3.0
+#copyArray([B)[B
+#to32BitField(Ljava/util/Set;)I
+#from32BitField(I)Ljava/util/Set;
+#transformMap(Ljava/util/Map;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Map;
-#longHashcode(J)I
@2.4.0
-#notNull(Ljava/lang/Object;)Ljava/lang/Object;
-#croak(Ljava/lang/String;)V
@2.5.0
+#loadProps(Ljava/lang/String;Ljava/util/List;)Ljava/util/Properties;
+#delete(Ljava/io/File;Ljava/util/List;)V
-#readFileAsString(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
@2.5.1
+#getNullableSizePrefixedArray(Ljava/nio/ByteBuffer;)[B
+#getNullableArray(Ljava/nio/ByteBuffer;I)[B
@2.6.0
+#newInstance(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
+#mkSortedSet([Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#mkObjectProperties(Ljava/util/Map;)Ljava/util/Properties;
+#entriesToMap(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
+#union(Ljava/util/function/Supplier;[Ljava/util/Set;)Ljava/util/Set;
+#intersection(Ljava/util/function/Supplier;Ljava/util/Set;[Ljava/util/Set;)Ljava/util/Set;
+#diff(Ljava/util/function/Supplier;Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
@2.6.3
+#isEqualConstantTime([C[C)Z
@2.7.0
+#closeAllQuietly(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;[Ljava/lang/AutoCloseable;)V
+#toList(Ljava/lang/Iterable;)Ljava/util/List;
+#propsToMap(Ljava/util/Properties;)Ljava/util/Map;
+#getDateTime(Ljava/lang/String;)J
-#isEqualConstantTime([C[C)Z
@2.7.2
+#isEqualConstantTime([C[C)Z
@2.8.0
+#tryWriteTo(Lorg/apache/kafka/common/network/TransferableChannel;IILjava/nio/ByteBuffer;)J
+#covariantCast(Ljava/util/Iterator;)Ljava/util/Iterator;
-#isEqualConstantTime([C[C)Z
@2.8.1
+#isEqualConstantTime([C[C)Z
@3.0.0
+#atomicMoveWithFallback(Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V
+#flushDir(Ljava/nio/file/Path;)V
+#isBlank(Ljava/lang/String;)Z
+#initializeMap(Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/util/Map;
-#delete(Ljava/io/File;Ljava/util/List;)V
@3.1.0
+#toList(Ljava/util/Iterator;Ljava/util/function/Predicate;)Ljava/util/List;
+#filterMap(Ljava/util/Map;Ljava/util/function/Predicate;)Ljava/util/Map;
@3.2.0
+#enumOptions(Ljava/lang/Class;)[Ljava/lang/String;
@3.4.0
+#mkString(Ljava/util/stream/Stream;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#swallow(Lorg/slf4j/Logger;Ljava/lang/String;Ljava/lang/Runnable;)V
+#toLogDateTimeFormat(J)Ljava/lang/String;

+###org/apache/kafka/server/policy/AlterConfigPolicy$RequestMetadata
@0.11.0.0
+#<init>(Lorg/apache/kafka/common/config/ConfigResource;Ljava/util/Map;)V
+#configs()Ljava/util/Map;
+#resource()Lorg/apache/kafka/common/config/ConfigResource;
+#toString()Ljava/lang/String;
@3.1.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/kafka/server/policy/AlterConfigPolicy
@0.11.0.0
+#validate(Lorg/apache/kafka/server/policy/AlterConfigPolicy$RequestMetadata;)V

+###org/apache/kafka/server/policy/CreateTopicPolicy$RequestMetadata
@0.10.2.0
+#<init>(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Short;Ljava/util/Map;Ljava/util/Map;)V
+#topic()Ljava/lang/String;
+#numPartitions()Ljava/lang/Integer;
+#replicationFactor()Ljava/lang/Short;
+#replicasAssignments()Ljava/util/Map;
+#configs()Ljava/util/Map;
+#toString()Ljava/lang/String;
@3.1.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/kafka/server/policy/CreateTopicPolicy
@0.10.2.0
+#validate(Lorg/apache/kafka/server/policy/CreateTopicPolicy$RequestMetadata;)V

+###org/apache/kafka/clients/FetchSessionHandler
@1.1.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;I)V
+#newBuilder()Lorg/apache/kafka/clients/FetchSessionHandler$Builder;
+#handleResponse(Lorg/apache/kafka/common/requests/FetchResponse;)Z
+#handleError(Ljava/lang/Throwable;)V
@2.5.0
+#newBuilder(IZ)Lorg/apache/kafka/clients/FetchSessionHandler$Builder;
@3.1.0
+#sessionTopicNames()Ljava/util/Map;
+#handleResponse(Lorg/apache/kafka/common/requests/FetchResponse;S)Z
-#handleResponse(Lorg/apache/kafka/common/requests/FetchResponse;)Z
@3.3.2
+#sessionTopicPartitions()Ljava/util/Set;

+###org/apache/kafka/clients/FetchSessionHandler$FetchRequestData
@1.1.0
+#toSend()Ljava/util/Map;
+#toForget()Ljava/util/List;
+#sessionPartitions()Ljava/util/Map;
+#metadata()Lorg/apache/kafka/common/requests/FetchMetadata;
+#toString()Ljava/lang/String;
@3.1.0
+#toReplace()Ljava/util/List;
+#canUseTopicIds()Z

+###org/apache/kafka/clients/FetchSessionHandler$Builder
@1.1.0
+#<init>(Lorg/apache/kafka/clients/FetchSessionHandler;)V
+#add(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/requests/FetchRequest$PartitionData;)V
+#build()Lorg/apache/kafka/clients/FetchSessionHandler$FetchRequestData;
@2.5.0
-#<init>(Lorg/apache/kafka/clients/FetchSessionHandler;)V

+###org/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult
@2.0.0
+#partitionsToOffsetAndMetadata()Lorg/apache/kafka/common/KafkaFuture;
@3.3.0
+#partitionsToOffsetAndMetadata(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeConsumerGroupsOptions
@2.0.0
+#<init>()V
@2.3.0
+#includeAuthorizedOperations(Z)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsOptions;
+#includeAuthorizedOperations()Z

+###org/apache/kafka/clients/admin/ConsumerGroupListing
@2.0.0
+#<init>(Ljava/lang/String;Z)V
+#groupId()Ljava/lang/String;
+#isSimpleConsumerGroup()Z
+#toString()Ljava/lang/String;
@2.6.0
+#<init>(Ljava/lang/String;ZLjava/util/Optional;)V
+#state()Ljava/util/Optional;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/kafka/clients/admin/RecordsToDelete
@1.1.0
+#beforeOffset(J)Lorg/apache/kafka/clients/admin/RecordsToDelete;
+#beforeOffset()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ExpireDelegationTokenOptions
@2.0.0
+#<init>()V
+#expiryTimePeriodMs(J)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenOptions;
+#expiryTimePeriodMs()J

+###org/apache/kafka/clients/admin/ConfigEntry$ConfigSynonym
@1.1.0
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#source()Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ListConsumerGroupsOptions
@2.0.0
+#<init>()V
@2.6.0
+#inStates(Ljava/util/Set;)Lorg/apache/kafka/clients/admin/ListConsumerGroupsOptions;
+#states()Ljava/util/Set;

+###org/apache/kafka/clients/admin/RenewDelegationTokenOptions
@2.0.0
+#<init>()V
+#renewTimePeriodMs(J)Lorg/apache/kafka/clients/admin/RenewDelegationTokenOptions;
+#renewTimePeriodMs()J

+###org/apache/kafka/clients/admin/ConfigEntry$ConfigSource
@1.1.0
+#values()[Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;

+###org/apache/kafka/clients/admin/DeletedRecords
@1.1.0
+#<init>(J)V
+#lowWatermark()J

+###org/apache/kafka/clients/admin/CreateDelegationTokenResult
@2.0.0
+#delegationToken()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeDelegationTokenOptions
@2.0.0
+#<init>()V
+#owners(Ljava/util/List;)Lorg/apache/kafka/clients/admin/DescribeDelegationTokenOptions;
+#owners()Ljava/util/List;

+###org/apache/kafka/clients/admin/DeleteConsumerGroupsResult
@2.0.0
+#deletedGroups()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DeleteRecordsResult
@1.1.0
+#<init>(Ljava/util/Map;)V
+#lowWatermarks()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeDelegationTokenResult
@2.0.0
+#delegationTokens()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/ElectPreferredLeadersOptions
@2.2.0
+#<init>()V
@3.0.0
-###org/apache/kafka/clients/admin/ElectPreferredLeadersOptions

+###org/apache/kafka/clients/admin/DeleteConsumerGroupsOptions
@2.0.0
+#<init>()V

+###org/apache/kafka/clients/admin/internals/AdminMetadataManager$AdminMetadataUpdater
@2.0.0
+#<init>(Lorg/apache/kafka/clients/admin/internals/AdminMetadataManager;)V
+#fetchNodes()Ljava/util/List;
+#isUpdateDue(J)Z
+#maybeUpdate(J)J
+#handleDisconnection(Ljava/lang/String;)V
+#handleAuthenticationFailure(Lorg/apache/kafka/common/errors/AuthenticationException;)V
+#handleCompletedMetadataResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
+#requestUpdate()V
+#close()V
@2.3.0
+#handleFatalException(Lorg/apache/kafka/common/KafkaException;)V
-#handleAuthenticationFailure(Lorg/apache/kafka/common/errors/AuthenticationException;)V
@2.4.1
+#handleServerDisconnect(JLjava/lang/String;Ljava/util/Optional;)V
+#handleFailedRequest(JLjava/util/Optional;)V
+#handleSuccessfulResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
-#handleDisconnection(Ljava/lang/String;)V
-#handleFatalException(Lorg/apache/kafka/common/KafkaException;)V
-#handleCompletedMetadataResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
-#requestUpdate()V

+###org/apache/kafka/clients/admin/internals/AdminMetadataManager
@2.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;JJ)V
+#updater()Lorg/apache/kafka/clients/admin/internals/AdminMetadataManager$AdminMetadataUpdater;
+#isReady()Z
+#controller()Lorg/apache/kafka/common/Node;
+#nodeById(I)Lorg/apache/kafka/common/Node;
+#requestUpdate()V
+#clearController()V
+#metadataFetchDelayMs(J)J
+#transitionToUpdatePending(J)V
+#updateFailed(Ljava/lang/Throwable;)V
+#update(Lorg/apache/kafka/common/Cluster;J)V

+###org/apache/kafka/clients/admin/ListConsumerGroupsResult
@2.0.0
+#all()Lorg/apache/kafka/common/KafkaFuture;
+#valid()Lorg/apache/kafka/common/KafkaFuture;
+#errors()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DeleteRecordsOptions
@1.1.0
+#<init>()V

+###org/apache/kafka/clients/admin/ExpireDelegationTokenResult
@2.0.0
+#expiryTimestamp()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/MemberDescription
@2.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/clients/admin/MemberAssignment;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#consumerId()Ljava/lang/String;
+#clientId()Ljava/lang/String;
+#host()Ljava/lang/String;
+#assignment()Lorg/apache/kafka/clients/admin/MemberAssignment;
+#toString()Ljava/lang/String;
@2.4.0
+#<init>(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/clients/admin/MemberAssignment;)V
+#groupInstanceId()Ljava/util/Optional;

+###org/apache/kafka/clients/admin/RenewDelegationTokenResult
@2.0.0
+#expiryTimestamp()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeConsumerGroupsResult
@2.0.0
+#<init>(Ljava/util/Map;)V
+#describedGroups()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/ConsumerGroupDescription
@2.0.0
+#<init>(Ljava/lang/String;ZLjava/util/Collection;Ljava/lang/String;Lorg/apache/kafka/common/ConsumerGroupState;Lorg/apache/kafka/common/Node;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#groupId()Ljava/lang/String;
+#isSimpleConsumerGroup()Z
+#members()Ljava/util/Collection;
+#partitionAssignor()Ljava/lang/String;
+#state()Lorg/apache/kafka/common/ConsumerGroupState;
+#coordinator()Lorg/apache/kafka/common/Node;
+#toString()Ljava/lang/String;
@2.3.0
+#authorizedOperations()Ljava/util/Set;
@3.0.0
+#<init>(Ljava/lang/String;ZLjava/util/Collection;Ljava/lang/String;Lorg/apache/kafka/common/ConsumerGroupState;Lorg/apache/kafka/common/Node;Ljava/util/Set;)V

+###org/apache/kafka/clients/admin/MemberAssignment
@2.0.0
+#<init>(Ljava/util/Set;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#topicPartitions()Ljava/util/Set;
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/CreateDelegationTokenOptions
@2.0.0
+#<init>()V
+#renewers(Ljava/util/List;)Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;
+#renewers()Ljava/util/List;
+#maxlifeTimeMs(J)Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;
+#maxlifeTimeMs()J
@3.3.0
+#owner(Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;
+#owner()Ljava/util/Optional;

+###org/apache/kafka/clients/admin/ElectPreferredLeadersResult
@2.2.0
+#partitionResult(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/KafkaFuture;
+#partitions()Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;
@3.0.0
-###org/apache/kafka/clients/admin/ElectPreferredLeadersResult

+###org/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions
@2.0.0
+#<init>()V
+#topicPartitions(Ljava/util/List;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;
+#topicPartitions()Ljava/util/List;
@3.3.0
*#topicPartitions(Ljava/util/List;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;[deprecated]
+#requireStable(Z)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;
*#topicPartitions()Ljava/util/List;[deprecated]
+#requireStable()Z

+###org/apache/kafka/clients/StaleMetadataException
@2.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/clients/ClientDnsLookup
@2.1.0
+#values()[Lorg/apache/kafka/clients/ClientDnsLookup;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/ClientDnsLookup;
+#toString()Ljava/lang/String;
+#forConfig(Ljava/lang/String;)Lorg/apache/kafka/clients/ClientDnsLookup;

+###org/apache/kafka/clients/MetadataUpdater
@2.0.0
+#fetchNodes()Ljava/util/List;
+#isUpdateDue(J)Z
+#maybeUpdate(J)J
+#handleDisconnection(Ljava/lang/String;)V
+#handleAuthenticationFailure(Lorg/apache/kafka/common/errors/AuthenticationException;)V
+#handleCompletedMetadataResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
+#requestUpdate()V
+#close()V
@2.3.0
+#handleFatalException(Lorg/apache/kafka/common/KafkaException;)V
-#handleAuthenticationFailure(Lorg/apache/kafka/common/errors/AuthenticationException;)V
@2.4.1
+#handleServerDisconnect(JLjava/lang/String;Ljava/util/Optional;)V
+#handleFailedRequest(JLjava/util/Optional;)V
+#handleSuccessfulResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
-#handleDisconnection(Ljava/lang/String;)V
-#handleFatalException(Lorg/apache/kafka/common/KafkaException;)V
-#handleCompletedMetadataResponse(Lorg/apache/kafka/common/requests/RequestHeader;JLorg/apache/kafka/common/requests/MetadataResponse;)V
-#requestUpdate()V

+###org/apache/kafka/server/quota/ClientQuotaEntity
@2.0.0
+#configEntities()Ljava/util/List;

+###org/apache/kafka/server/quota/ClientQuotaType
@2.0.0
+#values()[Lorg/apache/kafka/server/quota/ClientQuotaType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/server/quota/ClientQuotaType;

+###org/apache/kafka/server/quota/ClientQuotaEntity$ConfigEntity
@2.0.0
+#name()Ljava/lang/String;
+#entityType()Lorg/apache/kafka/server/quota/ClientQuotaEntity$ConfigEntityType;

+###org/apache/kafka/server/quota/ClientQuotaEntity$ConfigEntityType
@2.0.0
+#values()[Lorg/apache/kafka/server/quota/ClientQuotaEntity$ConfigEntityType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/server/quota/ClientQuotaEntity$ConfigEntityType;

+###org/apache/kafka/server/quota/ClientQuotaCallback
@2.0.0
+#quotaMetricTags(Lorg/apache/kafka/server/quota/ClientQuotaType;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Ljava/lang/String;)Ljava/util/Map;
+#quotaLimit(Lorg/apache/kafka/server/quota/ClientQuotaType;Ljava/util/Map;)Ljava/lang/Double;
+#updateQuota(Lorg/apache/kafka/server/quota/ClientQuotaType;Lorg/apache/kafka/server/quota/ClientQuotaEntity;D)V
+#removeQuota(Lorg/apache/kafka/server/quota/ClientQuotaType;Lorg/apache/kafka/server/quota/ClientQuotaEntity;)V
+#quotaResetRequired(Lorg/apache/kafka/server/quota/ClientQuotaType;)Z
+#updateClusterMetadata(Lorg/apache/kafka/common/Cluster;)Z
+#close()V

+###org/apache/kafka/common/KafkaFuture$BaseFunction
@1.1.0
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/common/ConsumerGroupState
@2.0.0
+#values()[Lorg/apache/kafka/common/ConsumerGroupState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/ConsumerGroupState;
+#parse(Ljava/lang/String;)Lorg/apache/kafka/common/ConsumerGroupState;
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/record/RecordsSend
@2.0.0
+#destination()Ljava/lang/String;
+#completed()Z
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)J
+#size()J
@2.8.0
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;)J
-#destination()Ljava/lang/String;
-#writeTo(Ljava/nio/channels/GatheringByteChannel;)J

+###org/apache/kafka/common/record/BaseRecords
@2.0.0
+#sizeInBytes()I
+#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordsSend;
@2.8.0
+#toSend()Lorg/apache/kafka/common/record/RecordsSend;
-#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordsSend;

+###org/apache/kafka/common/record/MultiRecordsSend
@2.0.0
+#<init>(Ljava/lang/String;Ljava/util/Queue;)V
+#size()J
+#destination()Ljava/lang/String;
+#completed()Z
+#writeTo(Ljava/nio/channels/GatheringByteChannel;)J
+#recordConversionStats()Ljava/util/Map;
@2.6.0
+#toString()Ljava/lang/String;
@2.8.0
+#<init>(Ljava/util/Queue;)V
+#<init>(Ljava/util/Queue;J)V
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;)J
-#<init>(Ljava/lang/String;Ljava/util/Queue;)V
-#destination()Ljava/lang/String;
-#writeTo(Ljava/nio/channels/GatheringByteChannel;)J

+###org/apache/kafka/common/record/LazyDownConversionRecords
@2.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/Records;BJLorg/apache/kafka/common/utils/Time;)V
+#sizeInBytes()I
+#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/LazyDownConversionRecordsSend;
+#topicPartition()Lorg/apache/kafka/common/TopicPartition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#iterator(J)Ljava/util/Iterator;
+#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordsSend;
@2.4.0
+#toString()Ljava/lang/String;
@2.8.0
+#toSend()Lorg/apache/kafka/common/record/LazyDownConversionRecordsSend;
+#toSend()Lorg/apache/kafka/common/record/RecordsSend;
-#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/LazyDownConversionRecordsSend;
-#toSend(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordsSend;

+###org/apache/kafka/common/record/LazyDownConversionRecordsSend
@2.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/record/LazyDownConversionRecords;)V
+#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J
+#recordConversionStats()Lorg/apache/kafka/common/record/RecordConversionStats;
+#topicPartition()Lorg/apache/kafka/common/TopicPartition;
@2.8.0
+#<init>(Lorg/apache/kafka/common/record/LazyDownConversionRecords;)V
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;JI)J
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/record/LazyDownConversionRecords;)V
-#writeTo(Ljava/nio/channels/GatheringByteChannel;JI)J

+###org/apache/kafka/common/record/RecordsUtil
@2.0.0
+#<init>()V

+###org/apache/kafka/common/record/DefaultRecordsSend
@2.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/record/Records;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/record/Records;I)V
@2.8.0
+#<init>(Lorg/apache/kafka/common/record/TransferableRecords;)V
+#<init>(Lorg/apache/kafka/common/record/TransferableRecords;I)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/record/Records;)V
-#<init>(Ljava/lang/String;Lorg/apache/kafka/common/record/Records;I)V

+###org/apache/kafka/common/record/RecordVersion
@2.0.0
+#values()[Lorg/apache/kafka/common/record/RecordVersion;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordVersion;
+#lookup(B)Lorg/apache/kafka/common/record/RecordVersion;
+#current()Lorg/apache/kafka/common/record/RecordVersion;
@2.1.1
+#precedes(Lorg/apache/kafka/common/record/RecordVersion;)Z

+###org/apache/kafka/common/record/BufferSupplier$GrowableBufferSupplier
@2.0.0
+#<init>()V
+#get(I)Ljava/nio/ByteBuffer;
+#release(Ljava/nio/ByteBuffer;)V
+#close()V
@2.8.0
-###org/apache/kafka/common/record/BufferSupplier$GrowableBufferSupplier

+###org/apache/kafka/common/record/RecordConversionStats
@2.0.0
+#<init>(JIJ)V
+#<init>()V
+#add(Lorg/apache/kafka/common/record/RecordConversionStats;)V
+#temporaryMemoryBytes()J
+#numRecordsConverted()I
+#conversionTimeNanos()J
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/ConfigDef$CompositeValidator
@1.1.0
+#of([Lorg/apache/kafka/common/config/ConfigDef$Validator;)Lorg/apache/kafka/common/config/ConfigDef$CompositeValidator;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
@2.1.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/provider/FileConfigProvider
@2.0.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#get(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigData;
+#get(Ljava/lang/String;Ljava/util/Set;)Lorg/apache/kafka/common/config/ConfigData;
+#close()V

+###org/apache/kafka/common/config/provider/ConfigProvider
@2.0.0
+#get(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigData;
+#get(Ljava/lang/String;Ljava/util/Set;)Lorg/apache/kafka/common/config/ConfigData;
+#subscribe(Ljava/lang/String;Ljava/util/Set;Lorg/apache/kafka/common/config/ConfigChangeCallback;)V
+#unsubscribe(Ljava/lang/String;Ljava/util/Set;Lorg/apache/kafka/common/config/ConfigChangeCallback;)V
+#unsubscribeAll()V

+###org/apache/kafka/common/config/ConfigData
@2.0.0
+#<init>(Ljava/util/Map;Ljava/lang/Long;)V
+#<init>(Ljava/util/Map;)V
+#data()Ljava/util/Map;
+#ttl()Ljava/lang/Long;

+###org/apache/kafka/common/config/ConfigDef$NonEmptyStringWithoutControlChars
@1.1.0
+#<init>()V
+#nonEmptyStringWithoutControlChars()Lorg/apache/kafka/common/config/ConfigDef$NonEmptyStringWithoutControlChars;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
@2.1.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/ConfigChangeCallback
@2.0.0
+#onChange(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigData;)V

+###org/apache/kafka/common/config/ConfigTransformerResult
@2.0.0
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#data()Ljava/util/Map;
+#ttls()Ljava/util/Map;

+###org/apache/kafka/common/config/ConfigTransformer
@2.0.0
+#<init>(Ljava/util/Map;)V
+#transform(Ljava/util/Map;)Lorg/apache/kafka/common/config/ConfigTransformerResult;

+###org/apache/kafka/common/config/ConfigDef$NonNullValidator
@1.1.0
+#<init>()V
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
@2.1.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/security/token/delegation/internals/DelegationTokenCredentialCallback
@2.0.0
+#<init>()V
+#tokenOwner(Ljava/lang/String;)V
+#tokenOwner()Ljava/lang/String;
@2.2.0
+#tokenExpiryTimestamp(Ljava/lang/Long;)V
+#tokenExpiryTimestamp()Ljava/lang/Long;

+###org/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache
@2.0.0
+#<init>(Ljava/util/Collection;)V
+#credential(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/ScramCredential;
+#owner(Ljava/lang/String;)Ljava/lang/String;
+#updateCache(Lorg/apache/kafka/common/security/token/delegation/DelegationToken;Ljava/util/Map;)V
+#removeCache(Ljava/lang/String;)V
+#tokenForHmac(Ljava/lang/String;)Lorg/apache/kafka/common/security/token/delegation/TokenInformation;
+#addToken(Ljava/lang/String;Lorg/apache/kafka/common/security/token/delegation/TokenInformation;)Lorg/apache/kafka/common/security/token/delegation/TokenInformation;
+#removeToken(Ljava/lang/String;)V
+#tokens()Ljava/util/Collection;
+#token(Ljava/lang/String;)Lorg/apache/kafka/common/security/token/delegation/TokenInformation;
+#credentialCache(Ljava/lang/String;)Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;
@2.2.0
+#tokenIdForHmac(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/common/security/token/delegation/TokenInformation
@1.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Ljava/util/Collection;JJJ)V
+#owner()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#ownerAsString()Ljava/lang/String;
+#renewers()Ljava/util/Collection;
+#renewersAsString()Ljava/util/Collection;
+#issueTimestamp()J
+#expiryTimestamp()J
+#setExpiryTimestamp(J)V
+#tokenId()Ljava/lang/String;
+#maxTimestamp()J
+#ownerOrRenewer(Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.3.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Ljava/util/Collection;JJJ)V
+#tokenRequester()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;

+###org/apache/kafka/common/security/token/delegation/DelegationToken
@1.1.0
+#<init>(Lorg/apache/kafka/common/security/token/delegation/TokenInformation;[B)V
+#tokenInfo()Lorg/apache/kafka/common/security/token/delegation/TokenInformation;
+#hmac()[B
+#hmacAsBase64String()Ljava/lang/String;
+#hmacBuffer()Ljava/nio/ByteBuffer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.0.0
-#hmacBuffer()Ljava/nio/ByteBuffer;

+###org/apache/kafka/common/security/kerberos/KerberosError
@2.0.1
+#values()[Lorg/apache/kafka/common/security/kerberos/KerberosError;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/security/kerberos/KerberosError;
+#retriable()Z
+#fromException(Ljava/lang/Exception;)Lorg/apache/kafka/common/security/kerberos/KerberosError;
@2.6.3
+#isRetriableClientGssException(Ljava/lang/Exception;)Z
@2.7.0
-#isRetriableClientGssException(Ljava/lang/Exception;)Z
@2.7.2
+#isRetriableClientGssException(Ljava/lang/Exception;)Z

+###org/apache/kafka/common/security/kerberos/KerberosClientCallbackHandler
@2.0.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V

+###org/apache/kafka/common/security/ssl/SslPrincipalMapper$NoMatchingRule
@2.2.0

+###org/apache/kafka/common/security/ssl/SslPrincipalMapper
@2.2.0
+#<init>(Ljava/util/List;)V
+#fromRules(Ljava/util/List;)Lorg/apache/kafka/common/security/ssl/SslPrincipalMapper;
+#getName(Ljava/lang/String;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.4.0
+#<init>(Ljava/lang/String;)V
+#fromRules(Ljava/lang/String;)Lorg/apache/kafka/common/security/ssl/SslPrincipalMapper;
-#<init>(Ljava/util/List;)V
-#fromRules(Ljava/util/List;)Lorg/apache/kafka/common/security/ssl/SslPrincipalMapper;

+###org/apache/kafka/common/security/auth/AuthenticateCallbackHandler
@2.0.0
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#close()V

+###org/apache/kafka/common/security/auth/Login
@0.10.0.0
+#configure(Ljava/util/Map;Ljava/lang/String;)V
+#login()Ljavax/security/auth/login/LoginContext;
+#subject()Ljavax/security/auth/Subject;
+#serviceName()Ljava/lang/String;
+#close()V
@0.10.2.0
+#configure(Ljava/util/Map;Ljavax/security/auth/login/Configuration;Ljava/lang/String;)V
-#configure(Ljava/util/Map;Ljava/lang/String;)V
@0.11.0.0
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/security/JaasContext;)V
-#configure(Ljava/util/Map;Ljavax/security/auth/login/Configuration;Ljava/lang/String;)V
@1.0.0
-###org/apache/kafka/common/security/auth/Login

+###org/apache/kafka/common/security/auth/SaslExtensionsCallback
@2.1.0
+#<init>()V
+#extensions()Lorg/apache/kafka/common/security/auth/SaslExtensions;
+#extensions(Lorg/apache/kafka/common/security/auth/SaslExtensions;)V

+###org/apache/kafka/common/security/auth/SaslExtensions
@2.1.0
+#<init>(Ljava/util/Map;)V
+#map()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#hashCode()I
@3.1.2
+#empty()Lorg/apache/kafka/common/security/auth/SaslExtensions;
@3.2.0
-#empty()Lorg/apache/kafka/common/security/auth/SaslExtensions;
@3.2.1
+#empty()Lorg/apache/kafka/common/security/auth/SaslExtensions;

+###org/apache/kafka/common/security/plain/PlainAuthenticateCallback
@2.0.0
+#<init>([C)V
+#password()[C
+#authenticated()Z
+#authenticated(Z)V

+###org/apache/kafka/common/security/plain/internals/PlainSaslServerProvider
@2.0.0
+#initialize()V

+###org/apache/kafka/common/security/plain/internals/PlainServerCallbackHandler
@2.0.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V

+###org/apache/kafka/common/security/plain/internals/PlainSaslServer$PlainSaslServerFactory
@2.0.0
+#<init>()V
+#createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;

+###org/apache/kafka/common/security/plain/internals/PlainSaslServer
@2.0.0
+#<init>(Ljavax/security/auth/callback/CallbackHandler;)V
+#evaluateResponse([B)[B
+#getAuthorizationID()Ljava/lang/String;
+#getMechanismName()Ljava/lang/String;
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#dispose()V

+###org/apache/kafka/common/security/oauthbearer/OAuthBearerTokenCallback
@2.0.0
+#<init>()V
+#token()Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;
+#errorCode()Ljava/lang/String;
+#errorDescription()Ljava/lang/String;
+#errorUri()Ljava/lang/String;
+#token(Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;)V
+#error(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/security/oauthbearer/OAuthBearerValidatorCallback
@2.0.0
+#<init>(Ljava/lang/String;)V
+#tokenValue()Ljava/lang/String;
+#token()Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;
+#errorStatus()Ljava/lang/String;
+#errorScope()Ljava/lang/String;
+#errorOpenIDConfiguration()Ljava/lang/String;
+#token(Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;)V
+#error(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/security/oauthbearer/OAuthBearerExtensionsValidatorCallback
@2.1.0
+#<init>(Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;Lorg/apache/kafka/common/security/auth/SaslExtensions;)V
+#token()Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;
+#inputExtensions()Lorg/apache/kafka/common/security/auth/SaslExtensions;
+#validatedExtensions()Ljava/util/Map;
+#invalidExtensions()Ljava/util/Map;
+#ignoredExtensions()Ljava/util/Map;
+#valid(Ljava/lang/String;)V
+#error(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/security/oauthbearer/OAuthBearerLoginModule
@2.0.0
+#<init>()V
+#initialize(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V
+#login()Z
+#logout()Z
+#commit()Z
+#abort()Z

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClientCallbackHandler
@2.0.0
+#<init>()V
+#configured()Z
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClientProvider
@2.0.0
+#initialize()V

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredLoginCallbackHandler
@2.0.0
+#<init>()V
+#configured()Z
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredValidatorCallbackHandler
@2.0.0
+#<init>()V
+#configured()Z
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerIllegalTokenException
@2.0.0
+#<init>(Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;)V
+#reason()Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult
@2.0.0
+#newSuccess()Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;
+#newFailure(Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;
+#newFailure(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;
+#success()Z
+#failureDescription()Ljava/lang/String;
+#failureScope()Ljava/lang/String;
+#failureOpenIdConfig()Ljava/lang/String;
+#throwExceptionIfFailed()V

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerConfigException
@2.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJws
@2.0.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#value()Ljava/lang/String;
+#splits()Ljava/util/List;
+#header()Ljava/util/Map;
+#principalName()Ljava/lang/String;
+#startTimeMs()Ljava/lang/Long;
+#lifetimeMs()J
+#scope()Ljava/util/Set;
+#claims()Ljava/util/Map;
+#principalClaimName()Ljava/lang/String;
+#scopeClaimName()Ljava/lang/String;
+#isClaimType(Ljava/lang/String;Ljava/lang/Class;)Z
+#claim(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#rawClaim(Ljava/lang/String;)Ljava/lang/Object;
+#expirationTime()Ljava/lang/Number;
+#issuedAt()Ljava/lang/Number;
+#subject()Ljava/lang/String;
+#toMap(Ljava/lang/String;)Ljava/util/Map;

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerScopeUtils
@2.0.0
+#isValidScopeItem(Ljava/lang/String;)Z
+#parseScope(Ljava/lang/String;)Ljava/util/List;

+###org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils
@2.0.0
+#validateClaimForExistenceAndType(Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJws;ZLjava/lang/String;[Ljava/lang/Class;)Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;
+#validateIssuedAt(Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJws;ZJI)Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;
+#validateExpirationTime(Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJws;JI)Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;
+#validateTimeConsistency(Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJws;)Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;
+#validateScope(Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;Ljava/util/List;)Lorg/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationResult;

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerClientInitialResponse
@2.0.0
+#<init>([B)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#toBytes()[B
+#tokenValue()Ljava/lang/String;
+#authorizationId()Ljava/lang/String;
+#propertyValue(Ljava/lang/String;)Ljava/lang/String;
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/auth/SaslExtensions;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/security/auth/SaslExtensions;)V
+#extensions()Lorg/apache/kafka/common/security/auth/SaslExtensions;
+#validateExtensions(Lorg/apache/kafka/common/security/auth/SaslExtensions;)V
-#<init>(Ljava/lang/String;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
-#propertyValue(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClient
@2.0.0
+#<init>(Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;)V
+#callbackHandler()Ljavax/security/auth/callback/CallbackHandler;
+#getMechanismName()Ljava/lang/String;
+#hasInitialResponse()Z
+#evaluateChallenge([B)[B
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#dispose()V

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClient$OAuthBearerSaslClientFactory
@2.0.0
+#<init>()V
+#createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslClient;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServer
@2.0.0
+#<init>(Ljavax/security/auth/callback/CallbackHandler;)V
+#evaluateResponse([B)[B
+#getAuthorizationID()Ljava/lang/String;
+#getMechanismName()Ljava/lang/String;
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#dispose()V
+#mechanismNamesCompatibleWithPolicy(Ljava/util/Map;)[Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServerProvider
@2.0.0
+#initialize()V

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServer$OAuthBearerSaslServerFactory
@2.0.0
+#<init>()V
+#createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerRefreshingLogin
@2.0.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;)V
+#close()V
+#subject()Ljavax/security/auth/Subject;
+#serviceName()Ljava/lang/String;
+#login()Ljavax/security/auth/login/LoginContext;

+###org/apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredential
@2.0.0
+#principalName()Ljava/lang/String;
+#startTimeMs()Ljava/lang/Long;
+#expireTimeMs()J
+#absoluteLastRefreshTimeMs()Ljava/lang/Long;

+###org/apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredentialRefreshConfig
@2.0.0
+#<init>(Ljava/util/Map;Z)V
+#loginRefreshWindowFactor()D
+#loginRefreshWindowJitter()D
+#loginRefreshMinPeriodSeconds()S
+#loginRefreshBufferSeconds()S
+#loginRefreshReloginAllowedBeforeLogout()Z

+###org/apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredentialRefreshingLogin
@2.0.0
+#<init>(Ljava/lang/String;Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredentialRefreshConfig;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;Ljavax/security/auth/login/Configuration;Lorg/apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredentialRefreshConfig;Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;Ljava/lang/Class;Lorg/apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredentialRefreshingLogin$LoginContextFactory;Lorg/apache/kafka/common/utils/Time;)V
+#subject()Ljavax/security/auth/Subject;
+#contextName()Ljava/lang/String;
+#configuration()Ljavax/security/auth/login/Configuration;
+#callbackHandler()Lorg/apache/kafka/common/security/auth/AuthenticateCallbackHandler;
+#serviceName()Ljava/lang/String;
+#login()Ljavax/security/auth/login/LoginContext;
+#close()V
+#expiringCredential()Lorg/apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredential;

+###org/apache/kafka/common/security/oauthbearer/OAuthBearerToken
@2.0.0
+#value()Ljava/lang/String;
+#scope()Ljava/util/Set;
+#lifetimeMs()J
+#principalName()Ljava/lang/String;
+#startTimeMs()Ljava/lang/Long;

+###org/apache/kafka/common/security/scram/internals/ScramExtensions
@2.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/Map;)V
+#extensionValue(Ljava/lang/String;)Ljava/lang/String;
+#extensionNames()Ljava/util/Set;
+#tokenAuthenticated()Z
+#toString()Ljava/lang/String;
@2.1.0
-#extensionValue(Ljava/lang/String;)Ljava/lang/String;
-#extensionNames()Ljava/util/Set;
-#toString()Ljava/lang/String;

+###org/apache/kafka/common/security/scram/internals/ScramMessages$ClientFinalMessage
@2.0.0
+#<init>([B)V
+#<init>([BLjava/lang/String;)V
+#channelBinding()[B
+#nonce()Ljava/lang/String;
+#proof()[B
+#proof([B)V
+#clientFinalMessageWithoutProof()Ljava/lang/String;
+#toBytes()[B

+###org/apache/kafka/common/security/scram/internals/ScramMessages$ServerFinalMessage
@2.0.0
+#<init>([B)V
+#<init>(Ljava/lang/String;[B)V
+#error()Ljava/lang/String;
+#serverSignature()[B
+#toBytes()[B

+###org/apache/kafka/common/security/scram/internals/ScramSaslServerProvider
@2.0.0
+#initialize()V

+###org/apache/kafka/common/security/scram/internals/ScramSaslServer$ScramSaslServerFactory
@2.0.0
+#<init>()V
+#createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;

+###org/apache/kafka/common/security/scram/internals/ScramFormatter
@2.0.0
+#<init>(Lorg/apache/kafka/common/security/scram/internals/ScramMechanism;)V
+#hmac([B[B)[B
+#hash([B)[B
+#xor([B[B)[B
+#hi([B[BI)[B
+#normalize(Ljava/lang/String;)[B
+#saltedPassword(Ljava/lang/String;[BI)[B
+#clientKey([B)[B
+#storedKey([B)[B
+#saslName(Ljava/lang/String;)Ljava/lang/String;
+#username(Ljava/lang/String;)Ljava/lang/String;
+#authMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#clientSignature([BLorg/apache/kafka/common/security/scram/internals/ScramMessages$ClientFirstMessage;Lorg/apache/kafka/common/security/scram/internals/ScramMessages$ServerFirstMessage;Lorg/apache/kafka/common/security/scram/internals/ScramMessages$ClientFinalMessage;)[B
+#clientProof([BLorg/apache/kafka/common/security/scram/internals/ScramMessages$ClientFirstMessage;Lorg/apache/kafka/common/security/scram/internals/ScramMessages$ServerFirstMessage;Lorg/apache/kafka/common/security/scram/internals/ScramMessages$ClientFinalMessage;)[B
+#storedKey([B[B)[B
+#serverKey([B)[B
+#serverSignature([BLorg/apache/kafka/common/security/scram/internals/ScramMessages$ClientFirstMessage;Lorg/apache/kafka/common/security/scram/internals/ScramMessages$ServerFirstMessage;Lorg/apache/kafka/common/security/scram/internals/ScramMessages$ClientFinalMessage;)[B
+#secureRandomString()Ljava/lang/String;
+#secureRandomBytes()[B
+#toBytes(Ljava/lang/String;)[B
+#generateCredential(Ljava/lang/String;I)Lorg/apache/kafka/common/security/scram/ScramCredential;
@2.7.0
+#secureRandomString(Ljava/security/SecureRandom;)Ljava/lang/String;
+#secureRandomBytes(Ljava/security/SecureRandom;)[B
+#generateCredential([B[BI)Lorg/apache/kafka/common/security/scram/ScramCredential;

+###org/apache/kafka/common/security/scram/internals/ScramSaslClient
@2.0.0
+#<init>(Lorg/apache/kafka/common/security/scram/internals/ScramMechanism;Ljavax/security/auth/callback/CallbackHandler;)V
+#getMechanismName()Ljava/lang/String;
+#hasInitialResponse()Z
+#evaluateChallenge([B)[B
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#dispose()V

+###org/apache/kafka/common/security/scram/internals/ScramSaslClient$ScramSaslClientFactory
@2.0.0
+#<init>()V
+#createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslClient;
+#getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;

+###org/apache/kafka/common/security/scram/internals/ScramSaslServer
@2.0.0
+#<init>(Lorg/apache/kafka/common/security/scram/internals/ScramMechanism;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)V
+#evaluateResponse([B)[B
+#getAuthorizationID()Ljava/lang/String;
+#getMechanismName()Ljava/lang/String;
+#getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;
+#isComplete()Z
+#unwrap([BII)[B
+#wrap([BII)[B
+#dispose()V

+###org/apache/kafka/common/security/scram/internals/ScramCredentialUtils
@2.0.0
+#credentialToString(Lorg/apache/kafka/common/security/scram/ScramCredential;)Ljava/lang/String;
+#credentialFromString(Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/ScramCredential;
+#createCache(Lorg/apache/kafka/common/security/authenticator/CredentialCache;Ljava/util/Collection;)V

+###org/apache/kafka/common/security/scram/internals/ScramMechanism
@2.0.0
+#values()[Lorg/apache/kafka/common/security/scram/internals/ScramMechanism;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/internals/ScramMechanism;
+#mechanismName()Ljava/lang/String;
+#hashAlgorithm()Ljava/lang/String;
+#macAlgorithm()Ljava/lang/String;
+#minIterations()I
+#forMechanismName(Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/internals/ScramMechanism;
+#mechanismNames()Ljava/util/Collection;
+#isScram(Ljava/lang/String;)Z

+###org/apache/kafka/common/security/scram/internals/ScramSaslClientProvider
@2.0.0
+#initialize()V

+###org/apache/kafka/common/security/scram/internals/ScramMessages
@2.0.0
+#<init>()V

+###org/apache/kafka/common/security/scram/internals/ScramMessages$ClientFirstMessage
@2.0.0
+#<init>([B)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#saslName()Ljava/lang/String;
+#nonce()Ljava/lang/String;
+#authorizationId()Ljava/lang/String;
+#gs2Header()Ljava/lang/String;
+#extensions()Lorg/apache/kafka/common/security/scram/internals/ScramExtensions;
+#clientFirstMessageBare()Ljava/lang/String;
+#toBytes()[B

+###org/apache/kafka/common/security/scram/internals/ScramServerCallbackHandler
@2.0.0
+#<init>(Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;Lorg/apache/kafka/common/security/token/delegation/internals/DelegationTokenCache;)V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V

+###org/apache/kafka/common/security/scram/internals/ScramMessages$ServerFirstMessage
@2.0.0
+#<init>([B)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[BI)V
+#nonce()Ljava/lang/String;
+#salt()[B
+#iterations()I
+#toBytes()[B

+###org/apache/kafka/common/security/scram/ScramExtensionsCallback
@1.1.0
+#<init>()V
+#extensions()Ljava/util/Map;
+#extensions(Ljava/util/Map;)V

+###org/apache/kafka/common/security/authenticator/SaslInternalConfigs
@2.2.0

+###org/apache/kafka/common/security/authenticator/AbstractLogin$DefaultLoginCallbackHandler
@2.0.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
+#close()V

+###org/apache/kafka/common/serialization/UUIDSerializer
@2.1.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/util/UUID;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B
@2.3.0
-#close()V

+###org/apache/kafka/common/serialization/Serdes$UUIDSerde
@2.1.0
+#<init>()V

+###org/apache/kafka/common/serialization/UUIDDeserializer
@2.1.0
+#<init>()V
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/util/UUID;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;
@2.3.0
-#close()V

+###org/apache/kafka/common/network/ReauthenticationContext
@2.2.0
+#<init>(Lorg/apache/kafka/common/network/Authenticator;Lorg/apache/kafka/common/network/NetworkReceive;J)V
+#networkReceive()Lorg/apache/kafka/common/network/NetworkReceive;
+#previousAuthenticator()Lorg/apache/kafka/common/network/Authenticator;
+#reauthenticationBeginNanos()J

+###org/apache/kafka/common/network/KafkaChannel$ChannelMuteState
@2.0.0
+#values()[Lorg/apache/kafka/common/network/KafkaChannel$ChannelMuteState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/network/KafkaChannel$ChannelMuteState;

+###org/apache/kafka/common/network/ListenerReconfigurable
@1.1.0
+#listenerName()Lorg/apache/kafka/common/network/ListenerName;

+###org/apache/kafka/common/network/DelayedResponseAuthenticationException
@2.1.0
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/kafka/common/network/KafkaChannel$ChannelMuteEvent
@2.0.0
+#values()[Lorg/apache/kafka/common/network/KafkaChannel$ChannelMuteEvent;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/network/KafkaChannel$ChannelMuteEvent;

+###org/apache/kafka/common/Reconfigurable
@1.1.0
+#reconfigurableConfigs()Ljava/util/Set;
+#validateReconfiguration(Ljava/util/Map;)V
+#reconfigure(Ljava/util/Map;)V

+###org/apache/kafka/common/message/FetchResponseData$AbortedTransaction
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#producerId()J
+#firstOffset()J
+#setProducerId(J)Lorg/apache/kafka/common/message/FetchResponseData$AbortedTransaction;
+#setFirstOffset(J)Lorg/apache/kafka/common/message/FetchResponseData$AbortedTransaction;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData$AbortedTransaction;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarkerTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarkerTopic;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarkerTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarkerTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#oldStyleOffsets()Ljava/util/List;
+#timestamp()J
+#offset()J
+#leaderEpoch()I
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
+#setOldStyleOffsets(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
+#setTimestamp(J)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
+#setOffset(J)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse

+###org/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(BLjava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
+#findAll(BLjava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceSet

+###org/apache/kafka/common/message/ElectPreferredLeadersResponseData$ReplicaElectionResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitionResult()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData$ReplicaElectionResult;
+#setPartitionResult(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData$ReplicaElectionResult;
@2.4.0
-###org/apache/kafka/common/message/ElectPreferredLeadersResponseData$ReplicaElectionResult

+###org/apache/kafka/common/message/SaslAuthenticateResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#authBytes()[B
+#sessionLifetimeMs()J
+#setErrorCode(S)Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;
+#setAuthBytes([B)Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;
+#setSessionLifetimeMs(J)Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/RenewDelegationTokenResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#expiryTimestampMs()J
+#throttleTimeMs()I
+#setErrorCode(S)Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;
+#setExpiryTimestampMs(J)Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FetchRequestData$ForgottenTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#forgottenPartitionIndexes()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
+#setForgottenPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#topic()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
-#name()Ljava/lang/String;
-#forgottenPartitionIndexes()Ljava/util/List;
-#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
-#setForgottenPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.1.0
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicSet

+###org/apache/kafka/common/message/DescribeGroupsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#groups()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeGroupsResponseData;
+#setGroups(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeGroupsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#matchingAcls()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;
+#setMatchingAcls(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#currentLeaderEpoch()I
+#leaderEpoch()I
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;
+#setCurrentLeaderEpoch(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#partition()I
+#setPartition(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#partitionIndex()I
-#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;

+###org/apache/kafka/common/message/AlterConfigsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resources()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceSet;
+#validateOnly()Z
+#setResources(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceSet;)Lorg/apache/kafka/common/message/AlterConfigsRequestData;
+#setValidateOnly(Z)Lorg/apache/kafka/common/message/AlterConfigsRequestData;
@2.3.0
+#resources()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceCollection;
+#setResources(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceCollection;)Lorg/apache/kafka/common/message/AlterConfigsRequestData;
-#resources()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceSet;
-#setResources(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceSet;)Lorg/apache/kafka/common/message/AlterConfigsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterConfigsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultSet

+###org/apache/kafka/common/message/ListOffsetResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ListOffsetResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetResponseData

+###org/apache/kafka/common/message/ApiMessageFactory
@2.2.0
+#<init>()V
+#newRequest(S)Lorg/apache/kafka/common/protocol/Message;
+#newResponse(S)Lorg/apache/kafka/common/protocol/Message;
+#requestSchemas(S)[Lorg/apache/kafka/common/protocol/types/Schema;
+#responseSchemas(S)[Lorg/apache/kafka/common/protocol/types/Schema;
@2.3.0
-###org/apache/kafka/common/message/ApiMessageFactory

+###org/apache/kafka/common/message/JoinGroupResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#generationId()I
+#protocolName()Ljava/lang/String;
+#leader()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#members()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#setGenerationId(I)Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#setProtocolName(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#setLeader(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#setMembers(Ljava/util/List;)Lorg/apache/kafka/common/message/JoinGroupResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#protocolType()Ljava/lang/String;
+#setProtocolType(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
+#skipAssignment()Z
+#setSkipAssignment(Z)Lorg/apache/kafka/common/message/JoinGroupResponseData;

+###org/apache/kafka/common/message/MetadataRequestData$MetadataRequestTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/MetadataRequestData$MetadataRequestTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/MetadataRequestData$MetadataRequestTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/MetadataRequestData$MetadataRequestTopic;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeDelegationTokenRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#owners()Ljava/util/List;
+#setOwners(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestEndpoint
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#port()I
+#host()Ljava/lang/String;
+#listener()Ljava/lang/String;
+#securityProtocol()S
+#setPort(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestEndpoint;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestEndpoint;
+#setListener(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestEndpoint;
+#setSecurityProtocol(S)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestEndpoint;
@2.4.0
-###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestEndpoint

+###org/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponsePartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponsePartition;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponsePartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponsePartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetCommitResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/OffsetCommitResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetCommitResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetCommitResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicSet

+###org/apache/kafka/common/message/DescribeLogDirsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;
+#setResults(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
+#errorCode()S
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;

+###org/apache/kafka/common/message/LeaveGroupRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaveGroupRequestData;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaveGroupRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#members()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setMembers(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaveGroupRequestData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaveGroupRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerTopicResult;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerTopicResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerTopicResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#apiKeys()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeySet;
+#throttleTimeMs()I
+#setErrorCode(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
+#setApiKeys(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeySet;)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
@2.3.0
+#apiKeys()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;
+#setApiKeys(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
-#apiKeys()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeySet;
-#setApiKeys(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeySet;)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#supportedFeatures()Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKeyCollection;
+#finalizedFeaturesEpoch()J
+#finalizedFeatures()Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKeyCollection;
+#setSupportedFeatures(Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKeyCollection;)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
+#setFinalizedFeaturesEpoch(J)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
+#setFinalizedFeatures(Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKeyCollection;)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#apiKeys()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;
+#setApiKeys(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#apiKeys()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;
-#setApiKeys(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
@3.4.0
+#zkMigrationReady()Z
+#setZkMigrationReady(Z)Lorg/apache/kafka/common/message/ApiVersionsResponseData;

+###org/apache/kafka/common/message/DeleteGroupsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultSet;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DeleteGroupsResponseData;
+#setResults(Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultSet;)Lorg/apache/kafka/common/message/DeleteGroupsResponseData;
@2.3.0
+#results()Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultCollection;
+#setResults(Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultCollection;)Lorg/apache/kafka/common/message/DeleteGroupsResponseData;
-#results()Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultSet;
-#setResults(Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultSet;)Lorg/apache/kafka/common/message/DeleteGroupsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteGroupsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/JoinGroupRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#sessionTimeoutMs()I
+#rebalanceTimeoutMs()I
+#memberId()Ljava/lang/String;
+#protocolType()Ljava/lang/String;
+#protocols()Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolSet;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#setSessionTimeoutMs(I)Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#setRebalanceTimeoutMs(I)Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#setProtocolType(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#setProtocols(Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolSet;)Lorg/apache/kafka/common/message/JoinGroupRequestData;
@2.3.0
+#groupInstanceId()Ljava/lang/String;
+#protocols()Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolCollection;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#setProtocols(Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolCollection;)Lorg/apache/kafka/common/message/JoinGroupRequestData;
-#protocols()Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolSet;
-#setProtocols(Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolSet;)Lorg/apache/kafka/common/message/JoinGroupRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
+#reason()Ljava/lang/String;
+#setReason(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData;

+###org/apache/kafka/common/message/AlterConfigsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#resources()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AlterConfigsResponseData;
+#setResources(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterConfigsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#responses()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterConfigsResponseData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
-#resources()Ljava/util/List;
-#setResources(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterConfigsResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterConfigsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#partitionResponses()Ljava/util/List;
+#next()I
+#prev()I
+#setPartitionResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;
+#setNext(I)V
+#setPrev(I)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#partitions()Ljava/util/List;
-#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;

+###org/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;
+#partitions()Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResultCollection;
+#next()I
+#prev()I
+#setPartitions(Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResultCollection;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
-#partitions()Ljava/util/List;
-#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestTopicState
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionStates()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestTopicState;
+#setPartitionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestTopicState;
@2.4.0
-###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestTopicState

+###org/apache/kafka/common/message/HeartbeatResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/HeartbeatResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/HeartbeatResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/HeartbeatResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/InitProducerIdRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#transactionalId()Ljava/lang/String;
+#transactionTimeoutMs()I
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/InitProducerIdRequestData;
+#setTransactionTimeoutMs(I)Lorg/apache/kafka/common/message/InitProducerIdRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#producerId()J
+#producerEpoch()S
+#setProducerId(J)Lorg/apache/kafka/common/message/InitProducerIdRequestData;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/InitProducerIdRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/InitProducerIdRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeySet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#findAll(S)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeySet

+###org/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;
+#setResourceType(B)Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#index()S
+#minVersion()S
+#maxVersion()S
+#next()I
+#prev()I
+#setIndex(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#setMinVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#setMaxVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#apiKey()S
+#unknownTaggedFields()Ljava/util/List;
+#setApiKey(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
-#index()S
-#setIndex(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey

+###org/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#source()B
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym;
+#setValue(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym;
+#setSource(B)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AddPartitionsToTxnRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#topics()Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicSet;
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
+#setProducerId(J)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
+#setTopics(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicSet;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
@2.3.0
+#topics()Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicCollection;
+#setTopics(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicCollection;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
-#topics()Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicSet;
-#setTopics(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicSet;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#errorCode()S
+#next()I
+#prev()I
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#setErrorCode(S)Lorg/apache/kafka/common/message/UpdateMetadataResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/UpdateMetadataResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#clientSoftwareName()Ljava/lang/String;
+#clientSoftwareVersion()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setClientSoftwareName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiVersionsRequestData;
+#setClientSoftwareVersion(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiVersionsRequestData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceRequestData$TopicProduceData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#partitionData()Ljava/util/List;
+#next()I
+#prev()I
+#setPartitionData(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;
+#setNext(I)V
+#setPrev(I)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#partitions()Ljava/util/List;
-#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;
+#findAll(I)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultSet

+###org/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirTopicResult;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirTopicResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirTopicResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetForLeaderEpochRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;
@2.3.0
+#replicaId()I
+#setReplicaId(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topics()Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopicCollection;
+#setTopics(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopicCollection;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;

+###org/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic

+###org/apache/kafka/common/message/RenewDelegationTokenRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#hmac()[B
+#renewPeriodMs()J
+#setHmac([B)Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;
+#setRenewPeriodMs(J)Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;I)Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;
+#findAll(Ljava/lang/String;I)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionSet

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigSet

+###org/apache/kafka/common/message/ElectPreferredLeadersResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#replicaElectionResults()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData;
+#setReplicaElectionResults(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData;
@2.4.0
-###org/apache/kafka/common/message/ElectPreferredLeadersResponseData

+###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestPartitionV0
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestPartitionV0;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestPartitionV0;
@2.4.0
-###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestPartitionV0

+###org/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#topicConfigErrorCode()S
+#numPartitions()I
+#replicationFactor()S
+#configs()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicConfigErrorCode(S)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#setNumPartitions(I)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#setReplicationFactor(S)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#setConfigs(Ljava/util/List;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrResponsePartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrResponsePartition;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrResponsePartition;
+#setErrorCode(S)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrResponsePartition;
@2.4.0
-###org/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrResponsePartition

+###org/apache/kafka/common/message/RequestHeaderData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#requestApiKey()S
+#requestApiVersion()S
+#correlationId()I
+#clientId()Ljava/lang/String;
+#setRequestApiKey(S)Lorg/apache/kafka/common/message/RequestHeaderData;
+#setRequestApiVersion(S)Lorg/apache/kafka/common/message/RequestHeaderData;
+#setCorrelationId(I)Lorg/apache/kafka/common/message/RequestHeaderData;
+#setClientId(Ljava/lang/String;)Lorg/apache/kafka/common/message/RequestHeaderData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/RequestHeaderData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/HeartbeatRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#generationid()I
+#memberId()Ljava/lang/String;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/HeartbeatRequestData;
+#setGenerationid(I)Lorg/apache/kafka/common/message/HeartbeatRequestData;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/HeartbeatRequestData;
@2.3.0
+#generationId()I
+#groupInstanceId()Ljava/lang/String;
+#setGenerationId(I)Lorg/apache/kafka/common/message/HeartbeatRequestData;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/HeartbeatRequestData;
-#generationid()I
-#setGenerationid(I)Lorg/apache/kafka/common/message/HeartbeatRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/HeartbeatRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ExpireDelegationTokenRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#hmac()[B
+#expiryTimePeriodMs()J
+#setHmac([B)Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;
+#setExpiryTimePeriodMs(J)Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#committedOffset()J
+#committedLeaderEpoch()I
+#committedMetadata()Ljava/lang/String;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;
+#setCommittedOffset(J)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;
+#setCommittedLeaderEpoch(I)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;
+#setCommittedMetadata(Ljava/lang/String;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#principalType()Ljava/lang/String;
+#principalName()Ljava/lang/String;
+#issueTimestamp()J
+#expiryTimestamp()J
+#maxTimestamp()J
+#tokenId()Ljava/lang/String;
+#hmac()[B
+#renewers()Ljava/util/List;
+#setPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setIssueTimestamp(J)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setExpiryTimestamp(J)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setMaxTimestamp(J)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setTokenId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setHmac([B)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setRenewers(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.3.0
+#tokenRequesterPrincipalType()Ljava/lang/String;
+#tokenRequesterPrincipalName()Ljava/lang/String;
+#setTokenRequesterPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#setTokenRequesterPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;

+###org/apache/kafka/common/message/SyncGroupRequestData$SyncGroupRequestAssignment
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#assignment()[B
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupRequestData$SyncGroupRequestAssignment;
+#setAssignment([B)Lorg/apache/kafka/common/message/SyncGroupRequestData$SyncGroupRequestAssignment;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/SyncGroupRequestData$SyncGroupRequestAssignment;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/TxnOffsetCommitRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#transactionalId()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#topics()Ljava/util/List;
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#setProducerId(J)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#generationId()I
+#memberId()Ljava/lang/String;
+#groupInstanceId()Ljava/lang/String;
+#setGenerationId(I)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponseTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponseTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponseTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponseTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeDelegationTokenRequestData$DescribeDelegationTokenOwner
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#principalType()Ljava/lang/String;
+#principalName()Ljava/lang/String;
+#setPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData$DescribeDelegationTokenOwner;
+#setPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData$DescribeDelegationTokenOwner;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData$DescribeDelegationTokenOwner;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/MetadataResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#brokers()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerSet;
+#clusterId()Ljava/lang/String;
+#controllerId()I
+#topics()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicSet;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/MetadataResponseData;
+#setBrokers(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerSet;)Lorg/apache/kafka/common/message/MetadataResponseData;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/MetadataResponseData;
+#setControllerId(I)Lorg/apache/kafka/common/message/MetadataResponseData;
+#setTopics(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicSet;)Lorg/apache/kafka/common/message/MetadataResponseData;
@2.3.0
+#brokers()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerCollection;
+#topics()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicCollection;
+#clusterAuthorizedOperations()I
+#setBrokers(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerCollection;)Lorg/apache/kafka/common/message/MetadataResponseData;
+#setTopics(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicCollection;)Lorg/apache/kafka/common/message/MetadataResponseData;
+#setClusterAuthorizedOperations(I)Lorg/apache/kafka/common/message/MetadataResponseData;
-#brokers()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerSet;
-#topics()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicSet;
-#setBrokers(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerSet;)Lorg/apache/kafka/common/message/MetadataResponseData;
-#setTopics(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicSet;)Lorg/apache/kafka/common/message/MetadataResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/MetadataResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateDelegationTokenResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#principalType()Ljava/lang/String;
+#principalName()Ljava/lang/String;
+#issueTimestampMs()J
+#expiryTimestampMs()J
+#maxTimestampMs()J
+#tokenId()Ljava/lang/String;
+#hmac()[B
+#throttleTimeMs()I
+#setErrorCode(S)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setIssueTimestampMs(J)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setExpiryTimestampMs(J)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setMaxTimestampMs(J)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setTokenId(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setHmac([B)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.3.0
+#tokenRequesterPrincipalType()Ljava/lang/String;
+#tokenRequesterPrincipalName()Ljava/lang/String;
+#setTokenRequesterPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#setTokenRequesterPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;

+###org/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#partitionIndex()I
+#leaderId()I
+#leaderEpoch()I
+#replicaNodes()Ljava/util/List;
+#isrNodes()Ljava/util/List;
+#offlineReplicas()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#setLeaderId(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#setReplicaNodes(Ljava/util/List;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#setIsrNodes(Ljava/util/List;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#setOfflineReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#markers()Ljava/util/List;
+#setMarkers(Ljava/util/List;)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/TxnOffsetCommitResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/StopReplicaRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#controllerId()I
+#controllerEpoch()I
+#brokerEpoch()J
+#deletePartitions()Z
+#partitionsV0()Ljava/util/List;
+#topics()Ljava/util/List;
+#setControllerId(I)Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#setDeletePartitions(Z)Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#setPartitionsV0(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#ungroupedPartitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setUngroupedPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
-#partitionsV0()Ljava/util/List;
-#setPartitionsV0(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#topicStates()Ljava/util/List;
+#setTopicStates(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.4.0
+#isKRaftController()Z
+#setIsKRaftController(Z)Lorg/apache/kafka/common/message/StopReplicaRequestData;

+###org/apache/kafka/common/message/SaslHandshakeResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#mechanisms()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/SaslHandshakeResponseData;
+#setMechanisms(Ljava/util/List;)Lorg/apache/kafka/common/message/SaslHandshakeResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/SaslHandshakeResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirSet

+###org/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitionIndex()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;
+#setPartitionIndex(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;
+#next()I
+#prev()I
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#partitions()Ljava/util/List;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;
-#partitionIndex()Ljava/util/List;
-#setPartitionIndex(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;

+###org/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#count()I
+#assignments()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;
+#setCount(I)Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;
+#setAssignments(Ljava/util/List;)Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#next()I
+#prev()I
+#setNext(I)V
+#setPrev(I)V
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/EndTxnRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#committed()Z
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/EndTxnRequestData;
+#setProducerId(J)Lorg/apache/kafka/common/message/EndTxnRequestData;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/EndTxnRequestData;
+#setCommitted(Z)Lorg/apache/kafka/common/message/EndTxnRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/EndTxnRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#name()Ljava/lang/String;
+#isInternal()Z
+#partitions()Ljava/util/List;
+#next()I
+#prev()I
+#setErrorCode(S)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#setIsInternal(Z)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#setNext(I)V
+#setPrev(I)V
@2.3.0
+#topicAuthorizedOperations()I
+#setTopicAuthorizedOperations(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreatePartitionsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/CreatePartitionsResponseData;
+#setResults(Ljava/util/List;)Lorg/apache/kafka/common/message/CreatePartitionsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreatePartitionsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#configs()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;
+#setResourceType(B)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;
+#setConfigs(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#partitionIndex()I
+#leaderEpoch()I
+#endOffset()J
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult;
+#setEndOffset(J)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult

+###org/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#groupId()Ljava/lang/String;
+#groupState()Ljava/lang/String;
+#protocolType()Ljava/lang/String;
+#protocolData()Ljava/lang/String;
+#members()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#setGroupState(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#setProtocolType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#setProtocolData(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#setMembers(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
@2.3.0
+#authorizedOperations()I
+#setAuthorizedOperations(I)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsAssignment
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#brokerIds()Ljava/util/List;
+#setBrokerIds(Ljava/util/List;)Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsAssignment;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsAssignment;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopic;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigSet

+###org/apache/kafka/common/message/CreateAclsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/CreateAclsResponseData;
+#setResults(Ljava/util/List;)Lorg/apache/kafka/common/message/CreateAclsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateAclsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#baseOffset()J
+#logAppendTimeMs()J
+#logStartOffset()J
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
+#setBaseOffset(J)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
+#setLogAppendTimeMs(J)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
+#setLogStartOffset(J)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#recordErrors()Ljava/util/List;
+#errorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setRecordErrors(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#index()I
+#setIndex(I)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#partitionIndex()I
-#setPartitionIndex(I)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;

+###org/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#type()B
+#name()Ljava/lang/String;
+#patternType()B
+#acls()Ljava/util/List;
+#setType(B)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
+#setPatternType(B)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
+#setAcls(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#setResourceType(B)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
-#type()B
-#name()Ljava/lang/String;
-#setType(B)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
-#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AddOffsetsToTxnRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#groupId()Ljava/lang/String;
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;
+#setProducerId(J)Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FindCoordinatorResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#nodeId()I
+#host()Ljava/lang/String;
+#port()I
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#setNodeId(I)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#setPort(I)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#coordinators()Ljava/util/List;
+#setCoordinators(Ljava/util/List;)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;

+###org/apache/kafka/common/message/LeaderAndIsrRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#controllerId()I
+#controllerEpoch()I
+#brokerEpoch()J
+#topicStates()Ljava/util/List;
+#partitionStatesV0()Ljava/util/List;
+#liveLeaders()Ljava/util/List;
+#setControllerId(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
+#setTopicStates(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
+#setPartitionStatesV0(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
+#setLiveLeaders(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#ungroupedPartitionStates()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setUngroupedPartitionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
-#partitionStatesV0()Ljava/util/List;
-#setPartitionStatesV0(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#type()B
+#setType(B)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.4.0
+#isKRaftController()Z
+#setIsKRaftController(Z)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;

+###org/apache/kafka/common/message/ListGroupsResponseData$ListedGroup
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#protocolType()Ljava/lang/String;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListGroupsResponseData$ListedGroup;
+#setProtocolType(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListGroupsResponseData$ListedGroup;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListGroupsResponseData$ListedGroup;
+#groupState()Ljava/lang/String;
+#setGroupState(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListGroupsResponseData$ListedGroup;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestBroker
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#id()I
+#v0Host()Ljava/lang/String;
+#v0Port()I
+#endpoints()Ljava/util/List;
+#rack()Ljava/lang/String;
+#setId(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestBroker;
+#setV0Host(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestBroker;
+#setV0Port(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestBroker;
+#setEndpoints(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestBroker;
+#setRack(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestBroker;
@2.4.0
-###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestBroker

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#dirs()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirSet;
+#setDirs(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirSet;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;
@2.3.0
+#dirs()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirCollection;
+#setDirs(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirCollection;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;
-#dirs()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirSet;
-#setDirs(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirSet;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteTopicsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#responses()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DeleteTopicsResponseData;
+#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteTopicsResponseData;
@2.3.0
+#responses()Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResultCollection;
+#setResponses(Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResultCollection;)Lorg/apache/kafka/common/message/DeleteTopicsResponseData;
-#responses()Ljava/util/List;
-#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteTopicsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteTopicsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteRecordsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#timeoutMs()I
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteRecordsRequestData;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/DeleteRecordsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FindCoordinatorRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#key()Ljava/lang/String;
+#keyType()B
+#setKey(Ljava/lang/String;)Lorg/apache/kafka/common/message/FindCoordinatorRequestData;
+#setKeyType(B)Lorg/apache/kafka/common/message/FindCoordinatorRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FindCoordinatorRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#coordinatorKeys()Ljava/util/List;
+#setCoordinatorKeys(Ljava/util/List;)Lorg/apache/kafka/common/message/FindCoordinatorRequestData;

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topics()Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResultCollection;
+#setTopics(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResultCollection;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;

+###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#brokerId()I
+#hostName()Ljava/lang/String;
+#port()I
+#setBrokerId(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader;
+#setHostName(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader;
+#setPort(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceRequestData$PartitionProduceData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#records()[B
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;
+#setRecords([B)Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#index()I
+#records()Lorg/apache/kafka/common/record/BaseRecords;
+#setIndex(I)Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;
+#setRecords(Lorg/apache/kafka/common/record/BaseRecords;)Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#partitionIndex()I
-#records()[B
-#setPartitionIndex(I)Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;
-#setRecords([B)Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;

+###org/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#offset()J
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsPartition;
+#setOffset(J)Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsPartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateDelegationTokenRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#renewers()Ljava/util/List;
+#maxLifetimeMs()J
+#setRenewers(Ljava/util/List;)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;
+#setMaxLifetimeMs(J)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.3.0
+#ownerPrincipalType()Ljava/lang/String;
+#ownerPrincipalName()Ljava/lang/String;
+#setOwnerPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;
+#setOwnerPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;

+###org/apache/kafka/common/message/ListOffsetRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#replicaId()I
+#isolationLevel()B
+#topics()Ljava/util/List;
+#setReplicaId(I)Lorg/apache/kafka/common/message/ListOffsetRequestData;
+#setIsolationLevel(B)Lorg/apache/kafka/common/message/ListOffsetRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetRequestData

+###org/apache/kafka/common/message/DeleteGroupsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupsNames()Ljava/util/List;
+#setGroupsNames(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteGroupsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteGroupsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultSet;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/CreateTopicsResponseData;
+#setTopics(Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultSet;)Lorg/apache/kafka/common/message/CreateTopicsResponseData;
@2.3.0
+#topics()Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultCollection;
+#setTopics(Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultCollection;)Lorg/apache/kafka/common/message/CreateTopicsResponseData;
-#topics()Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultSet;
-#setTopics(Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultSet;)Lorg/apache/kafka/common/message/CreateTopicsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AddOffsetsToTxnResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/SaslHandshakeRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#mechanism()Ljava/lang/String;
+#setMechanism(Ljava/lang/String;)Lorg/apache/kafka/common/message/SaslHandshakeRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/SaslHandshakeRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#clientId()Ljava/lang/String;
+#clientHost()Ljava/lang/String;
+#memberMetadata()[B
+#memberAssignment()[B
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
+#setClientId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
+#setClientHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
+#setMemberMetadata([B)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
+#setMemberAssignment([B)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#groupInstanceId()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#topic()Ljava/lang/String;
+#next()I
+#prev()I
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;
+#setNext(I)V
+#setPrev(I)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#name()Ljava/lang/String;
-#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;

+###org/apache/kafka/common/message/DescribeAclsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resourceType()B
+#resourceNameFilter()Ljava/lang/String;
+#resourcePatternType()B
+#principalFilter()Ljava/lang/String;
+#hostFilter()Ljava/lang/String;
+#operation()B
+#permissionType()B
+#setResourceType(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#setResourceNameFilter(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#setResourcePatternType(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#setPrincipalFilter(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#setHostFilter(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#setOperation(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#setPermissionType(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#resourceTypeFilter()B
+#patternTypeFilter()B
+#setResourceTypeFilter(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#setPatternTypeFilter(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
-#resourceType()B
-#resourcePatternType()B
-#setResourceType(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
-#setResourcePatternType(B)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ControlledShutdownRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#brokerId()I
+#brokerEpoch()J
+#setBrokerId(I)Lorg/apache/kafka/common/message/ControlledShutdownRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/ControlledShutdownRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ControlledShutdownRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteAclsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#filterResults()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DeleteAclsResponseData;
+#setFilterResults(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteAclsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteAclsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeDelegationTokenResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#tokens()Ljava/util/List;
+#throttleTimeMs()I
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;
+#setTokens(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/StopReplicaResponseData$StopReplicaResponsePartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaResponsePartition;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaResponsePartition;
+#setErrorCode(S)Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaResponsePartition;
@2.4.0
-###org/apache/kafka/common/message/StopReplicaResponseData$StopReplicaResponsePartition

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#topic()Ljava/lang/String;
+#next()I
+#prev()I
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;
+#setNext(I)V
+#setPrev(I)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#name()Ljava/lang/String;
-#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#results()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultSet;
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
+#setResults(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultSet;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
+#setNext(I)V
+#setPrev(I)V
@2.3.0
+#results()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultCollection;
+#setResults(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultCollection;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
-#results()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultSet;
-#setResults(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultSet;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestTopicState
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionStates()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestTopicState;
+#setPartitionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestTopicState;
@2.4.0
-###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestTopicState

+###org/apache/kafka/common/message/ProduceRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#transactionalId()Ljava/lang/String;
+#acks()S
+#timeoutMs()I
+#topics()Ljava/util/List;
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/ProduceRequestData;
+#setAcks(S)Lorg/apache/kafka/common/message/ProduceRequestData;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/ProduceRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ProduceRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topicData()Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceDataCollection;
+#setTopicData(Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceDataCollection;)Lorg/apache/kafka/common/message/ProduceRequestData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceRequestData;

+###org/apache/kafka/common/message/DeleteAclsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#filters()Ljava/util/List;
+#setFilters(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteAclsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteAclsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#patternType()B
+#principal()Ljava/lang/String;
+#host()Ljava/lang/String;
+#operation()B
+#permissionType()B
+#setErrorCode(S)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setResourceType(B)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setPatternType(B)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setPrincipal(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setOperation(B)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#setPermissionType(B)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#next()I
+#prev()I
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#next()I
+#prev()I
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#committedOffset()J
+#committedLeaderEpoch()I
+#metadata()Ljava/lang/String;
+#errorCode()S
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;
+#setCommittedOffset(J)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;
+#setCommittedLeaderEpoch(I)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;
+#setMetadata(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;
+#setValue(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponsePartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponsePartition;
+#setErrorCode(S)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponsePartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponsePartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/SaslAuthenticateRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#authBytes()[B
+#setAuthBytes([B)Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#lowWatermark()J
+#errorCode()S
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;
+#setLowWatermark(J)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;
+#next()I
+#prev()I
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestTopic;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestTopic;
@2.4.0
-###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaRequestTopic

+###org/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#partitionSize()J
+#offsetLag()J
+#isFutureKey()Z
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;
+#setPartitionSize(J)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;
+#setOffsetLag(J)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;
+#setIsFutureKey(Z)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/StopReplicaResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#partitions()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/StopReplicaResponseData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#partitionErrors()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionErrors(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaResponseData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
-#partitions()Ljava/util/List;
-#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/StopReplicaResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#controllerEpoch()I
+#leaderKey()I
+#leaderEpoch()I
+#isrReplicas()Ljava/util/List;
+#zkVersion()I
+#replicas()Ljava/util/List;
+#isNew()Z
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
+#setLeaderKey(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
+#setIsrReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
+#setZkVersion(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
+#setReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
+#setIsNew(Z)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState;
@2.4.0
-###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionState

+###org/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#path()Ljava/lang/String;
+#topics()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicSet;
+#next()I
+#prev()I
+#setPath(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
+#setTopics(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicSet;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
+#setNext(I)V
+#setPrev(I)V
@2.3.0
+#topics()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicCollection;
+#setTopics(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicCollection;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
-#topics()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicSet;
-#setTopics(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicSet;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/MetadataRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#allowAutoTopicCreation()Z
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/MetadataRequestData;
+#setAllowAutoTopicCreation(Z)Lorg/apache/kafka/common/message/MetadataRequestData;
@2.3.0
+#includeClusterAuthorizedOperations()Z
+#includeTopicAuthorizedOperations()Z
+#setIncludeClusterAuthorizedOperations(Z)Lorg/apache/kafka/common/message/MetadataRequestData;
+#setIncludeTopicAuthorizedOperations(Z)Lorg/apache/kafka/common/message/MetadataRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/MetadataRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationTokenRenewer
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#principalType()Ljava/lang/String;
+#principalName()Ljava/lang/String;
+#setPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationTokenRenewer;
+#setPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationTokenRenewer;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationTokenRenewer;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#readOnly()Z
+#isDefault()Z
+#configSource()B
+#isSensitive()Z
+#synonyms()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#setValue(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#setReadOnly(Z)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#setIsDefault(Z)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#setConfigSource(B)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#setIsSensitive(Z)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#setSynonyms(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#configType()B
+#documentation()Ljava/lang/String;
+#setConfigType(B)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#setDocumentation(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteTopicsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicNames()Ljava/util/List;
+#timeoutMs()I
+#setTopicNames(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteTopicsRequestData;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/DeleteTopicsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteTopicsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topics()Ljava/util/List;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteTopicsRequestData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#brokerIds()Ljava/util/List;
+#next()I
+#prev()I
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;
+#setBrokerIds(Ljava/util/List;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;
+#findAll(I)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentSet

+###org/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#producerId()J
+#topics()Ljava/util/List;
+#setProducerId(J)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerResult;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#controllerId()I
+#controllerEpoch()I
+#brokerEpoch()J
+#topicStates()Ljava/util/List;
+#partitionStatesV0()Ljava/util/List;
+#brokers()Ljava/util/List;
+#setControllerId(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#setTopicStates(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#setPartitionStatesV0(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#setBrokers(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#ungroupedPartitionStates()Ljava/util/List;
+#liveBrokers()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setUngroupedPartitionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#setLiveBrokers(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
-#partitionStatesV0()Ljava/util/List;
-#brokers()Ljava/util/List;
-#setPartitionStatesV0(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
-#setBrokers(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.4.0
+#isKRaftController()Z
+#setIsKRaftController(Z)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#controllerEpoch()I
+#leader()I
+#leaderEpoch()I
+#isr()Ljava/util/List;
+#zkVersion()I
+#replicas()Ljava/util/List;
+#offlineReplicas()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#setLeader(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#setIsr(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#setZkVersion(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#setReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#setOfflineReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#topicName()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#highWatermark()J
+#lastStableOffset()J
+#logStartOffset()J
+#aborted()Ljava/util/List;
+#records()[B
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setErrorCode(S)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setHighWatermark(J)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setLastStableOffset(J)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setLogStartOffset(J)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setAborted(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setRecords([B)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
@2.3.0
+#preferredReadReplica()I
+#setPreferredReadReplica(I)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#partition()I
+#divergingEpoch()Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;
+#currentLeader()Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;
+#abortedTransactions()Ljava/util/List;
+#recordSet()Lorg/apache/kafka/common/record/BaseRecords;
+#setPartition(I)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setDivergingEpoch(Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setCurrentLeader(Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setAbortedTransactions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#setRecordSet(Lorg/apache/kafka/common/record/BaseRecords;)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
-#partitionIndex()I
-#aborted()Ljava/util/List;
-#records()[B
-#setPartitionIndex(I)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
-#setAborted(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
-#setRecords([B)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#snapshotId()Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;
+#setSnapshotId(Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
-###org/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse

+###org/apache/kafka/common/message/ListGroupsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListGroupsRequestData;
+#statesFilter()Ljava/util/List;
+#setStatesFilter(Ljava/util/List;)Lorg/apache/kafka/common/message/ListGroupsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ListGroupsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#groups()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ListGroupsResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ListGroupsResponseData;
+#setGroups(Ljava/util/List;)Lorg/apache/kafka/common/message/ListGroupsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListGroupsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse

+###org/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#committedOffset()J
+#committedLeaderEpoch()I
+#commitTimestamp()J
+#committedMetadata()Ljava/lang/String;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;
+#setCommittedOffset(J)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;
+#setCommittedLeaderEpoch(I)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;
+#setCommitTimestamp(J)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;
+#setCommittedMetadata(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ExpireDelegationTokenResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#expiryTimestampMs()J
+#throttleTimeMs()I
+#setErrorCode(S)Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;
+#setExpiryTimestampMs(J)Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#numPartitions()I
+#replicationFactor()S
+#assignments()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentSet;
+#configs()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigSet;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#setNumPartitions(I)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#setReplicationFactor(S)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#setAssignments(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentSet;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#setConfigs(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigSet;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
@2.3.0
+#assignments()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentCollection;
+#configs()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigCollection;
+#next()I
+#prev()I
+#setAssignments(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentCollection;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#setConfigs(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigCollection;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#setNext(I)V
+#setPrev(I)V
-#assignments()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentSet;
-#configs()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigSet;
-#setAssignments(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentSet;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
-#setConfigs(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigSet;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#controllerEpoch()I
+#leaderKey()I
+#leaderEpoch()I
+#isrReplicas()Ljava/util/List;
+#zkVersion()I
+#replicas()Ljava/util/List;
+#isNew()Z
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setLeaderKey(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setIsrReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setZkVersion(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
+#setIsNew(Z)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0;
@2.4.0
-###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrRequestPartitionStateV0

+###org/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicSet

+###org/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolSet

+###org/apache/kafka/common/message/CreateAclsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#creations()Ljava/util/List;
+#setCreations(Ljava/util/List;)Lorg/apache/kafka/common/message/CreateAclsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateAclsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#errorCode()S
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;
@2.3.0
+#next()I
+#prev()I
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#errorMessage()Ljava/lang/String;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/EndTxnResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/EndTxnResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/EndTxnResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/EndTxnResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#resourcePatternType()B
+#principal()Ljava/lang/String;
+#host()Ljava/lang/String;
+#operation()B
+#permissionType()B
+#setResourceType(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl;
+#setResourcePatternType(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl;
+#setPrincipal(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl;
+#setOperation(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl;
+#setPermissionType(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
-###org/apache/kafka/common/message/CreateAclsRequestData$CreatableAcl

+###org/apache/kafka/common/message/LeaveGroupResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/LeaveGroupResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/LeaveGroupResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#members()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setMembers(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaveGroupResponseData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaveGroupResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FetchResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#sessionId()I
+#topics()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/FetchResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/FetchResponseData;
+#setSessionId(I)Lorg/apache/kafka/common/message/FetchResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#responses()Ljava/util/List;
+#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData;
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerPartitionResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerPartitionResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerPartitionResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerPartitionResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetFetchRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#topics()Ljava/util/List;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#requireStable()Z
+#setRequireStable(Z)Lorg/apache/kafka/common/message/OffsetFetchRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#groups()Ljava/util/List;
+#setGroups(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchRequestData;

+###org/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultSet

+###org/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#logDir()Ljava/lang/String;
+#topics()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;
+#setLogDir(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.3.0
+#totalBytes()J
+#usableBytes()J
+#setTotalBytes(J)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;
+#setUsableBytes(J)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;

+###org/apache/kafka/common/message/DescribeAclsResponseData$AclDescription
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#principal()Ljava/lang/String;
+#host()Ljava/lang/String;
+#operation()B
+#permissionType()B
+#setPrincipal(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;
+#setOperation(B)Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;
+#setPermissionType(B)Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#metadata()[B
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember;
+#setMetadata([B)Lorg/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember;
@2.3.0
+#groupInstanceId()Ljava/lang/String;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#findAll(I)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerSet

+###org/apache/kafka/common/message/WriteTxnMarkersResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#markers()Ljava/util/List;
+#setMarkers(Ljava/util/List;)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteRecordsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DeleteRecordsResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsResponseData;
+#topics()Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResultCollection;
+#setTopics(Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResultCollection;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateDelegationTokenRequestData$CreatableRenewers
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#principalType()Ljava/lang/String;
+#principalName()Ljava/lang/String;
+#setPrincipalType(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData$CreatableRenewers;
+#setPrincipalName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData$CreatableRenewers;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData$CreatableRenewers;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateAclsResponseData$CreatableAclResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#setErrorCode(S)Lorg/apache/kafka/common/message/CreateAclsResponseData$CreatableAclResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsResponseData$CreatableAclResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
-###org/apache/kafka/common/message/CreateAclsResponseData$CreatableAclResult

+###org/apache/kafka/common/message/FetchRequestData$FetchableTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#fetchPartitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchRequestData$FetchableTopic;
+#setFetchPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData$FetchableTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchRequestData$FetchableTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
-###org/apache/kafka/common/message/FetchRequestData$FetchableTopic

+###org/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#topic()Ljava/lang/String;
+#partitionResponses()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
+#setPartitionResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
-#name()Ljava/lang/String;
-#partitions()Ljava/util/List;
-#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
-#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#partitions()Ljava/util/List;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
-#partitionResponses()Ljava/util/List;
-#setPartitionResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
@3.1.0
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;

+###org/apache/kafka/common/message/InitProducerIdResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#producerId()J
+#producerEpoch()S
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/InitProducerIdResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/InitProducerIdResponseData;
+#setProducerId(J)Lorg/apache/kafka/common/message/InitProducerIdResponseData;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/InitProducerIdResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/InitProducerIdResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ResponseHeaderData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#correlationId()I
+#setCorrelationId(I)Lorg/apache/kafka/common/message/ResponseHeaderData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ResponseHeaderData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#currentLeaderEpoch()I
+#timestamp()J
+#maxNumOffsets()I
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition;
+#setCurrentLeaderEpoch(I)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition;
+#setTimestamp(J)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition;
+#setMaxNumOffsets(I)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition

+###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#nodeId()I
+#host()Ljava/lang/String;
+#port()I
+#rack()Ljava/lang/String;
+#next()I
+#prev()I
+#setNodeId(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#setPort(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#setRack(Ljava/lang/String;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#controllerEpoch()I
+#leader()I
+#leaderEpoch()I
+#isr()Ljava/util/List;
+#zkVersion()I
+#replicas()Ljava/util/List;
+#offlineReplicas()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setLeader(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setIsr(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setZkVersion(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
+#setOfflineReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0;
@2.4.0
-###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataRequestPartitionStateV0

+###org/apache/kafka/common/message/CreatePartitionsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#timeoutMs()I
+#validateOnly()Z
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
+#setValidateOnly(Z)Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#topics()Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopicCollection;
+#setTopics(Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopicCollection;)Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeConfigsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resources()Ljava/util/List;
+#includeSynoyms()Z
+#setResources(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
+#setIncludeSynoyms(Z)Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
+#includeSynonyms()Z
+#includeDocumentation()Z
+#setIncludeSynonyms(Z)Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
+#setIncludeDocumentation(Z)Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
-#includeSynoyms()Z
-#setIncludeSynoyms(Z)Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponseTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponseTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponseTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponseTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;
+#setValue(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#configurationKeys()Ljava/util/List;
+#setResourceType(B)Lorg/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource;
+#setConfigurationKeys(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ElectPreferredLeadersRequestData$TopicPartitions
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitionId()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/ElectPreferredLeadersRequestData$TopicPartitions;
+#setPartitionId(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectPreferredLeadersRequestData$TopicPartitions;
@2.4.0
-###org/apache/kafka/common/message/ElectPreferredLeadersRequestData$TopicPartitions

+###org/apache/kafka/common/message/DescribeConfigsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeConfigsResponseData;
+#setResults(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeConfigsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeConfigsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#metadata()[B
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;
+#setMetadata([B)Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#timeoutMs()I
+#validateOnly()Z
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/CreateTopicsRequestData;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/CreateTopicsRequestData;
+#setValidateOnly(Z)Lorg/apache/kafka/common/message/CreateTopicsRequestData;
@2.3.0
+#topics()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopicCollection;
+#setTopics(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopicCollection;)Lorg/apache/kafka/common/message/CreateTopicsRequestData;
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/CreateTopicsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestTopic;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetFetchResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#errorCode()S
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/OffsetFetchResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetFetchResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#groups()Ljava/util/List;
+#setGroups(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchResponseData;

+###org/apache/kafka/common/message/FetchRequestData$FetchPartition
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#currentLeaderEpoch()I
+#fetchOffset()J
+#logStartOffset()J
+#maxBytes()I
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#setCurrentLeaderEpoch(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#setFetchOffset(J)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#setLogStartOffset(J)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#setMaxBytes(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#partition()I
+#lastFetchedEpoch()I
+#partitionMaxBytes()I
+#setPartition(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#setLastFetchedEpoch(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#setPartitionMaxBytes(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
-#partitionIndex()I
-#maxBytes()I
-#setPartitionIndex(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
-#setMaxBytes(I)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeAclsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#resources()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeAclsResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeAclsResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeAclsResponseData;
+#setResources(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeAclsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeAclsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#producerId()J
+#producerEpoch()S
+#transactionResult()Z
+#topics()Ljava/util/List;
+#coordinatorEpoch()I
+#setProducerId(J)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;
+#setTransactionResult(Z)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;
+#setCoordinatorEpoch(I)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ElectPreferredLeadersRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicPartitions()Ljava/util/List;
+#timeoutMs()I
+#setTopicPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectPreferredLeadersRequestData;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/ElectPreferredLeadersRequestData;
@2.4.0
-###org/apache/kafka/common/message/ElectPreferredLeadersRequestData

+###org/apache/kafka/common/message/FetchRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#replicaId()I
+#maxWait()I
+#minBytes()I
+#maxBytes()I
+#isolationLevel()B
+#sessionId()I
+#epoch()I
+#topics()Ljava/util/List;
+#forgotten()Ljava/util/List;
+#setReplicaId(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setMaxWait(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setMinBytes(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setMaxBytes(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setIsolationLevel(B)Lorg/apache/kafka/common/message/FetchRequestData;
+#setSessionId(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setEpoch(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData;
+#setForgotten(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData;
@2.3.0
+#rackId()Ljava/lang/String;
+#setRackId(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/FetchRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.7.0
+#clusterId()Ljava/lang/String;
+#maxWaitMs()I
+#sessionEpoch()I
+#forgottenTopicsData()Ljava/util/List;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchRequestData;
+#setMaxWaitMs(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setSessionEpoch(I)Lorg/apache/kafka/common/message/FetchRequestData;
+#setForgottenTopicsData(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData;
-#maxWait()I
-#epoch()I
-#forgotten()Ljava/util/List;
-#setMaxWait(I)Lorg/apache/kafka/common/message/FetchRequestData;
-#setEpoch(I)Lorg/apache/kafka/common/message/FetchRequestData;
-#setForgotten(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ControlledShutdownResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#remainingPartitions()Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionSet;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ControlledShutdownResponseData;
+#setRemainingPartitions(Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionSet;)Lorg/apache/kafka/common/message/ControlledShutdownResponseData;
@2.3.0
+#remainingPartitions()Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionCollection;
+#setRemainingPartitions(Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionCollection;)Lorg/apache/kafka/common/message/ControlledShutdownResponseData;
-#remainingPartitions()Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionSet;
-#setRemainingPartitions(Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionSet;)Lorg/apache/kafka/common/message/ControlledShutdownResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ControlledShutdownResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeGroupsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groups()Ljava/util/List;
+#setGroups(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeGroupsRequestData;
@2.3.0
+#includeAuthorizedOperations()Z
+#setIncludeAuthorizedOperations(Z)Lorg/apache/kafka/common/message/DescribeGroupsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeGroupsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resourceTypeFilter()B
+#resourceNameFilter()Ljava/lang/String;
+#patternTypeFilter()B
+#principalFilter()Ljava/lang/String;
+#hostFilter()Ljava/lang/String;
+#operation()B
+#permissionType()B
+#setResourceTypeFilter(B)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#setResourceNameFilter(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#setPatternTypeFilter(B)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#setPrincipalFilter(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#setHostFilter(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#setOperation(B)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#setPermissionType(B)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetCommitRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#generationId()I
+#memberId()Ljava/lang/String;
+#retentionTimeMs()J
+#topics()Ljava/util/List;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetCommitRequestData;
+#setGenerationId(I)Lorg/apache/kafka/common/message/OffsetCommitRequestData;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetCommitRequestData;
+#setRetentionTimeMs(J)Lorg/apache/kafka/common/message/OffsetCommitRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetCommitRequestData;
@2.3.0
+#groupInstanceId()Ljava/lang/String;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetCommitRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetCommitRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaderAndIsrResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#partitions()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#partitionErrors()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionErrors(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
-#partitions()Ljava/util/List;
-#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topics()Ljava/util/List;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#topics()Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicErrorCollection;
+#setTopics(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicErrorCollection;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;

+###org/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirPartitionResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirPartitionResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirPartitionResult;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirPartitionResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterReplicaLogDirsResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;
+#setResults(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#responses()Ljava/util/List;
+#throttleTimeMs()I
+#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceResponseData;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ProduceResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ProduceResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#responses()Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponseCollection;
+#setResponses(Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponseCollection;)Lorg/apache/kafka/common/message/ProduceResponseData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#responses()Ljava/util/List;
-#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/ProduceResponseData;

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultSet;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;
+#setResults(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultSet;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;
@2.3.0
+#results()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultCollection;
+#setResults(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultCollection;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;
-#results()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultSet;
-#setResults(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultSet;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#configs()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigSet;
+#next()I
+#prev()I
+#setResourceType(B)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
+#setConfigs(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigSet;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
+#setNext(I)V
+#setPrev(I)V
@2.3.0
+#configs()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigCollection;
+#setConfigs(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigCollection;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
-#configs()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigSet;
-#setConfigs(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigSet;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/SyncGroupRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#generationId()I
+#memberId()Ljava/lang/String;
+#assignments()Ljava/util/List;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupRequestData;
+#setGenerationId(I)Lorg/apache/kafka/common/message/SyncGroupRequestData;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupRequestData;
+#setAssignments(Ljava/util/List;)Lorg/apache/kafka/common/message/SyncGroupRequestData;
@2.3.0
+#groupInstanceId()Ljava/lang/String;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#protocolType()Ljava/lang/String;
+#protocolName()Ljava/lang/String;
+#setProtocolType(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupRequestData;
+#setProtocolName(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/SyncGroupRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultSet

+###org/apache/kafka/common/message/SyncGroupResponseData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#assignment()[B
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/SyncGroupResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/SyncGroupResponseData;
+#setAssignment([B)Lorg/apache/kafka/common/message/SyncGroupResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.5.0
+#protocolType()Ljava/lang/String;
+#protocolName()Ljava/lang/String;
+#setProtocolType(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupResponseData;
+#setProtocolName(Ljava/lang/String;)Lorg/apache/kafka/common/message/SyncGroupResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/SyncGroupResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeLogDirsRequestData
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;
+#topics()Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopicCollection;
+#setTopics(Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopicCollection;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
-#topics()Ljava/util/List;
-#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ElectPreferredLeadersResponseData$PartitionResult
@2.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionId()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#setPartitionId(I)Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData$PartitionResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData$PartitionResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData$PartitionResult;
@2.4.0
-###org/apache/kafka/common/message/ElectPreferredLeadersResponseData$PartitionResult

+###org/apache/kafka/common/utils/ImplicitLinkedHashSet
@1.1.0
+#iterator()Ljava/util/Iterator;
+#find(Lorg/apache/kafka/common/utils/ImplicitLinkedHashSet$Element;)Lorg/apache/kafka/common/utils/ImplicitLinkedHashSet$Element;
+#size()I
+#contains(Ljava/lang/Object;)Z
+#add(Lorg/apache/kafka/common/utils/ImplicitLinkedHashSet$Element;)Z
+#mustAdd(Lorg/apache/kafka/common/utils/ImplicitLinkedHashSet$Element;)V
+#remove(Ljava/lang/Object;)Z
+#clear()V
+#<init>()V
+#<init>(I)V
+#add(Ljava/lang/Object;)Z
@2.2.0
+#<init>(Ljava/util/Iterator;)V
+#clear(I)V
@2.3.0
-###org/apache/kafka/common/utils/ImplicitLinkedHashSet

+###org/apache/kafka/common/utils/LoggingSignalHandler
@1.1.1
+#<init>()V
+#register()V

+###org/apache/kafka/common/utils/Timer
@2.1.0
+#isExpired()Z
+#notExpired()Z
+#updateAndReset(J)V
+#reset(J)V
+#update()V
+#update(J)V
+#remainingMs()J
+#currentTimeMs()J
+#elapsedMs()J
+#sleep(J)V
@2.7.0
+#resetDeadline(J)V
+#timeoutMs()J

+###org/apache/kafka/common/utils/ImplicitLinkedHashSet$Element
@1.1.0
+#prev()I
+#setPrev(I)V
+#next()I
+#setNext(I)V
@2.3.0
-###org/apache/kafka/common/utils/ImplicitLinkedHashSet$Element

+###org/apache/kafka/common/utils/SystemScheduler
@1.1.0
+#time()Lorg/apache/kafka/common/utils/Time;
+#schedule(Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Callable;J)Ljava/util/concurrent/Future;

+###org/apache/kafka/common/utils/Scheduler
@1.1.0
+#time()Lorg/apache/kafka/common/utils/Time;
+#schedule(Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/Callable;J)Ljava/util/concurrent/Future;

+###org/apache/kafka/common/utils/ImplicitLinkedHashMultiSet
@2.2.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#findAll(Lorg/apache/kafka/common/utils/ImplicitLinkedHashSet$Element;)Ljava/util/List;
@2.3.0
-###org/apache/kafka/common/utils/ImplicitLinkedHashMultiSet

+###org/apache/kafka/common/protocol/Writable
@2.2.0
+#writeByte(B)V
+#writeShort(S)V
+#writeInt(I)V
+#writeLong(J)V
+#writeArray([B)V
+#writeNullableBytes([B)V
+#writeBytes([B)V
+#writeNullableString(Ljava/lang/String;)V
+#writeString(Ljava/lang/String;)V
@2.4.0
+#writeByteArray([B)V
+#writeUnsignedVarint(I)V
+#writeUUID(Ljava/util/UUID;)V
-#writeArray([B)V
-#writeNullableBytes([B)V
-#writeBytes([B)V
-#writeNullableString(Ljava/lang/String;)V
-#writeString(Ljava/lang/String;)V
@2.5.0
+#writeDouble(D)V
+#writeByteBuffer(Ljava/nio/ByteBuffer;)V
@2.8.0
+#writeVarint(I)V
+#writeVarlong(J)V
+#writeRecords(Lorg/apache/kafka/common/record/BaseRecords;)V
+#writeUuid(Lorg/apache/kafka/common/Uuid;)V
+#writeUnsignedShort(I)V
-#writeUUID(Ljava/util/UUID;)V
@3.3.0
+#writeUnsignedInt(J)V

+###org/apache/kafka/common/protocol/types/Field$ComplexArray
@2.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#withFields([Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Field;
+#nullableWithFields([Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Field;
+#withFields(Ljava/lang/String;[Lorg/apache/kafka/common/protocol/types/Field;)Lorg/apache/kafka/common/protocol/types/Field;

+###org/apache/kafka/common/protocol/types/Type$DocumentedType
@2.0.0
+#<init>()V
+#typeName()Ljava/lang/String;
+#documentation()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/protocol/types/Field$Bool
@2.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/types/Field$Array
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/ApiMessage
@2.2.0
+#apiKey()S

+###org/apache/kafka/common/protocol/Message
@2.2.0
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#size(S)I
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
@2.4.0
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#unknownTaggedFields()Ljava/util/List;
-#size(S)I
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
@2.6.0
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;

+###org/apache/kafka/common/protocol/MessageUtil
@2.2.0
+#<init>()V
+#serializedUtf8Length(Ljava/lang/CharSequence;)S
+#deepToString(Ljava/util/Iterator;)Ljava/lang/String;
@2.4.0
+#byteBufferToArray(Ljava/nio/ByteBuffer;)[B
-#serializedUtf8Length(Ljava/lang/CharSequence;)S
@2.6.0
+#jsonNodeToByte(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)B
+#jsonNodeToShort(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)S
+#jsonNodeToInt(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)I
+#jsonNodeToLong(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)J
+#jsonNodeToBinary(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)[B
+#jsonNodeToDouble(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)D
+#duplicate([B)[B
@2.6.1
-#jsonNodeToByte(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)B
-#jsonNodeToShort(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)S
-#jsonNodeToInt(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)I
-#jsonNodeToLong(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)J
-#jsonNodeToBinary(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)[B
-#jsonNodeToDouble(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)D
@2.7.0
+#jsonNodeToByte(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)B
+#jsonNodeToShort(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)S
+#jsonNodeToInt(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)I
+#jsonNodeToLong(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)J
+#jsonNodeToBinary(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)[B
+#jsonNodeToDouble(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)D
+#compareRawTaggedFields(Ljava/util/List;Ljava/util/List;)Z
@2.8.0
+#jsonNodeToUnsignedShort(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)I
+#toByteBuffer(Lorg/apache/kafka/common/protocol/Message;S)Ljava/nio/ByteBuffer;
+#toVersionPrefixedByteBuffer(SLorg/apache/kafka/common/protocol/Message;)Ljava/nio/ByteBuffer;
+#toVersionPrefixedBytes(SLorg/apache/kafka/common/protocol/Message;)[B
@3.3.0
+#jsonNodeToUnsignedInt(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)J

+###org/apache/kafka/common/protocol/ByteBufferAccessor
@2.2.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#readByte()B
+#readShort()S
+#readInt()I
+#readLong()J
+#readArray([B)V
+#writeByte(B)V
+#writeShort(S)V
+#writeInt(I)V
+#writeLong(J)V
+#writeArray([B)V
@2.4.0
+#readUnsignedVarint()I
+#writeByteArray([B)V
+#writeUnsignedVarint(I)V
-#writeArray([B)V
@2.5.0
+#readDouble()D
+#readByteBuffer(I)Ljava/nio/ByteBuffer;
+#writeDouble(D)V
+#writeByteBuffer(Ljava/nio/ByteBuffer;)V
@2.8.0
+#writeVarint(I)V
+#writeVarlong(J)V
+#readVarint()I
+#readVarlong()J
+#flip()V
+#buffer()Ljava/nio/ByteBuffer;
@2.8.2
+#readArray(I)[B
+#remaining()I
-#readArray([B)V
@3.0.0
+#readArray([B)V
-#readArray(I)[B
@3.0.2
+#readArray(I)[B
-#readArray([B)V
@3.1.0
+#readArray([B)V
-#readArray(I)[B
@3.1.2
+#readArray(I)[B
-#readArray([B)V
@3.2.0
+#readArray([B)V
-#readArray(I)[B
@3.2.2
+#readArray(I)[B
-#readArray([B)V

+###org/apache/kafka/common/protocol/Readable
@2.2.0
+#readByte()B
+#readShort()S
+#readInt()I
+#readLong()J
+#readArray([B)V
+#readNullableString()Ljava/lang/String;
+#readNullableBytes()[B
@2.4.0
+#readUnsignedVarint()I
+#readString(I)Ljava/lang/String;
+#readUnknownTaggedField(Ljava/util/List;II)Ljava/util/List;
+#readUUID()Ljava/util/UUID;
-#readNullableString()Ljava/lang/String;
-#readNullableBytes()[B
@2.5.0
+#readDouble()D
+#readByteBuffer(I)Ljava/nio/ByteBuffer;
@2.8.0
+#readVarint()I
+#readVarlong()J
+#readRecords(I)Lorg/apache/kafka/common/record/MemoryRecords;
+#readUuid()Lorg/apache/kafka/common/Uuid;
+#readUnsignedShort()I
-#readUUID()Ljava/util/UUID;
@2.8.2
+#readArray(I)[B
+#remaining()I
-#readArray([B)V
@3.0.0
+#readArray([B)V
-#readArray(I)[B
@3.0.2
+#readArray(I)[B
-#readArray([B)V
@3.1.0
+#readArray([B)V
-#readArray(I)[B
@3.1.2
+#readArray(I)[B
-#readArray([B)V
@3.2.0
+#readArray([B)V
-#readArray(I)[B
@3.2.2
+#readArray(I)[B
-#readArray([B)V
@3.3.0
+#readUnsignedInt()J

+###org/apache/kafka/common/requests/FetchMetadata
@1.1.0
+#nextEpoch(I)I
+#<init>(II)V
+#isFull()Z
+#sessionId()I
+#epoch()I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#nextCloseExisting()Lorg/apache/kafka/common/requests/FetchMetadata;
+#newIncremental(I)Lorg/apache/kafka/common/requests/FetchMetadata;
+#nextIncremental()Lorg/apache/kafka/common/requests/FetchMetadata;
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/requests/ElectPreferredLeadersRequest$Builder
@2.2.0
+#<init>(Lorg/apache/kafka/common/message/ElectPreferredLeadersRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/ElectPreferredLeadersRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.4.0
-###org/apache/kafka/common/requests/ElectPreferredLeadersRequest$Builder

+###org/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSynonym
@1.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;)V
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#source()Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;

+###org/apache/kafka/common/requests/ExpireDelegationTokenResponse
@1.1.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;J)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ExpireDelegationTokenResponse;
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#expiryTimestamp()J
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
@2.0.0
+#hasError()Z
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;J)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#data()Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AbstractControlRequest
@2.2.0
+#controllerId()I
+#controllerEpoch()I
+#brokerEpoch()J
@3.4.0
+#isKRaftController()Z

+###org/apache/kafka/common/requests/DeleteGroupsRequest
@1.1.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#groups()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteGroupsRequest;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/DeleteGroupsRequestData;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#groups()Ljava/util/Set;
@2.8.0
+#data()Lorg/apache/kafka/common/message/DeleteGroupsRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DescribeDelegationTokenResponse
@1.1.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeDelegationTokenResponse;
+#errorCounts()Ljava/util/Map;
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#tokens()Ljava/util/List;
@2.0.0
+#hasError()Z
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;)V
+#data()Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#<init>(IILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
+#<init>(IILorg/apache/kafka/common/protocol/Errors;)V
+#maybeSetThrottleTimeMs(I)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;Ljava/util/List;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V

+###org/apache/kafka/common/requests/ElectPreferredLeadersResponse
@2.2.0
+#<init>(Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#data()Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData;
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ElectPreferredLeadersResponse;
+#shouldClientThrottle(S)Z
@2.4.0
-###org/apache/kafka/common/requests/ElectPreferredLeadersResponse

+###org/apache/kafka/common/requests/AbstractControlRequest$Builder
@2.2.0

+###org/apache/kafka/common/requests/DeleteGroupsRequest$Builder
@1.1.0
+#<init>(Ljava/util/Set;)V
+#build(S)Lorg/apache/kafka/common/requests/DeleteGroupsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/DeleteGroupsRequestData;)V
-#<init>(Ljava/util/Set;)V

+###org/apache/kafka/common/requests/CreateDelegationTokenRequest$Builder
@1.1.0
+#<init>(Ljava/util/List;J)V
+#build(S)Lorg/apache/kafka/common/requests/CreateDelegationTokenRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;)V
-#<init>(Ljava/util/List;J)V

+###org/apache/kafka/common/requests/CreateDelegationTokenRequest
@1.1.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreateDelegationTokenRequest;
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#renewers()Ljava/util/List;
+#maxLifeTime()J
@2.4.0
+#data()Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#renewers()Ljava/util/List;
-#maxLifeTime()J
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DescribeDelegationTokenRequest$Builder
@1.1.0
+#<init>(Ljava/util/List;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeDelegationTokenRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/RenewDelegationTokenRequest
@1.1.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/RenewDelegationTokenRequest;
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#hmac()Ljava/nio/ByteBuffer;
+#renewTimePeriod()J
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;S)V
+#data()Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#hmac()Ljava/nio/ByteBuffer;
-#renewTimePeriod()J
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/ExpireDelegationTokenRequest$Builder
@1.1.0
+#<init>(Ljava/nio/ByteBuffer;J)V
+#build(S)Lorg/apache/kafka/common/requests/ExpireDelegationTokenRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.0.0
+#<init>([BJ)V
-#<init>(Ljava/nio/ByteBuffer;J)V
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;)V
-#<init>([BJ)V

+###org/apache/kafka/common/requests/RenewDelegationTokenRequest$Builder
@1.1.0
+#<init>(Ljava/nio/ByteBuffer;J)V
+#build(S)Lorg/apache/kafka/common/requests/RenewDelegationTokenRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.0.0
+#<init>([BJ)V
-#<init>(Ljava/nio/ByteBuffer;J)V
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;)V
-#<init>([BJ)V

+###org/apache/kafka/common/requests/CreateDelegationTokenResponse
@1.1.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;JJJLjava/lang/String;Ljava/nio/ByteBuffer;)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/CreateDelegationTokenResponse;
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#owner()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#issueTimestamp()J
+#expiryTimestamp()J
+#maxTimestamp()J
+#tokenId()Ljava/lang/String;
+#hmacBytes()[B
+#throttleTimeMs()I
+#hasError()Z
@2.0.0
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#prepareResponse(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;JJJLjava/lang/String;Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/CreateDelegationTokenResponse;
+#prepareResponse(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)Lorg/apache/kafka/common/requests/CreateDelegationTokenResponse;
+#data()Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
-#<init>(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;JJJLjava/lang/String;Ljava/nio/ByteBuffer;)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#owner()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
-#issueTimestamp()J
-#expiryTimestamp()J
-#maxTimestamp()J
-#tokenId()Ljava/lang/String;
-#hmacBytes()[B
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#prepareResponse(IILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;JJJLjava/lang/String;Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/CreateDelegationTokenResponse;
+#prepareResponse(IILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)Lorg/apache/kafka/common/requests/CreateDelegationTokenResponse;
+#maybeSetThrottleTimeMs(I)V
-#prepareResponse(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;JJJLjava/lang/String;Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/CreateDelegationTokenResponse;
-#prepareResponse(ILorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)Lorg/apache/kafka/common/requests/CreateDelegationTokenResponse;

+###org/apache/kafka/common/requests/DescribeDelegationTokenRequest
@1.1.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#owners()Ljava/util/List;
+#ownersListEmpty()Z
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeDelegationTokenRequest;
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData;S)V
+#data()Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData;
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#owners()Ljava/util/List;
-#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeDelegationTokenRequest;
@2.8.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeDelegationTokenRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/ExpireDelegationTokenRequest
@1.1.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ExpireDelegationTokenRequest;
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#hmac()Ljava/nio/ByteBuffer;
+#expiryTimePeriod()J
@2.4.0
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#data()Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/CreatePartitionsRequest$PartitionDetails
@2.1.0
+#<init>(I)V
+#<init>(ILjava/util/List;)V
+#totalCount()I
+#newAssignments()Ljava/util/List;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/kafka/common/requests/CreatePartitionsRequest$PartitionDetails

+###org/apache/kafka/common/requests/RenewDelegationTokenResponse
@1.1.0
+#<init>(ILorg/apache/kafka/common/protocol/Errors;J)V
+#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/RenewDelegationTokenResponse;
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#expiryTimestamp()J
@2.0.0
+#hasError()Z
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;J)V
-#<init>(ILorg/apache/kafka/common/protocol/Errors;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
@2.8.0
+#data()Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$PartitionData
@2.1.0
+#<init>(Ljava/util/Optional;I)V
@2.1.1
+#toString()Ljava/lang/String;
@2.8.0
-###org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$PartitionData

+###org/apache/kafka/common/requests/DeleteGroupsResponse
@1.1.0
+#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
+#<init>(Ljava/util/Map;)V
+#<init>(ILjava/util/Map;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#throttleTimeMs()I
+#errors()Ljava/util/Map;
+#hasError(Ljava/lang/String;)Z
+#get(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/Errors;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DeleteGroupsResponse;
@2.0.0
+#shouldClientThrottle(S)Z
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/DeleteGroupsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#schemaVersions()[Lorg/apache/kafka/common/protocol/types/Schema;
-#<init>(Ljava/util/Map;)V
-#<init>(ILjava/util/Map;)V
-#hasError(Ljava/lang/String;)Z
@2.8.0
+#data()Lorg/apache/kafka/common/message/DeleteGroupsResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource
@1.1.0
+#values()[Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;
+#forId(B)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigSource;
@2.7.0
+#id()B
+#source()Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigSource;

+###org/apache/kafka/common/requests/ElectPreferredLeadersRequest
@2.2.0
+#toRequestData(Ljava/util/Collection;I)Lorg/apache/kafka/common/message/ElectPreferredLeadersRequestData;
+#fromResponseData(Lorg/apache/kafka/common/message/ElectPreferredLeadersResponseData;)Ljava/util/Map;
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/ElectPreferredLeadersRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ElectPreferredLeadersRequest;
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
@2.4.0
-###org/apache/kafka/common/requests/ElectPreferredLeadersRequest

+###org/apache/kafka/common/errors/GroupIdNotFoundException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#groupId()Ljava/lang/String;
@2.0.0
-#groupId()Ljava/lang/String;

+###org/apache/kafka/common/errors/FencedLeaderEpochException
@2.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/ListenerNotFoundException
@2.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/DelegationTokenNotFoundException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/DelegationTokenOwnerMismatchException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnsupportedByAuthenticationException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/DelegationTokenExpiredException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/PreferredLeaderNotAvailableException
@2.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidFetchSessionEpochException
@1.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/DelegationTokenAuthorizationException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/GroupNotEmptyException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#groupId()Ljava/lang/String;
@2.0.0
-#groupId()Ljava/lang/String;

+###org/apache/kafka/common/errors/FetchSessionIdNotFoundException
@1.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/OffsetNotAvailableException
@2.2.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/UnsupportedCompressionTypeException
@2.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/DelegationTokenDisabledException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/StaleBrokerEpochException
@2.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/GroupMaxSizeReachedException
@2.2.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/TopicDeletionDisabledException
@2.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/InvalidPrincipalTypeException
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnknownLeaderEpochException
@2.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/MemberIdRequiredException
@2.2.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/resource/ResourcePattern
@2.0.0
+#<init>(Lorg/apache/kafka/common/resource/ResourceType;Ljava/lang/String;Lorg/apache/kafka/common/resource/PatternType;)V
+#resourceType()Lorg/apache/kafka/common/resource/ResourceType;
+#name()Ljava/lang/String;
+#patternType()Lorg/apache/kafka/common/resource/PatternType;
+#toFilter()Lorg/apache/kafka/common/resource/ResourcePatternFilter;
+#toString()Ljava/lang/String;
+#isUnknown()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/resource/PatternType
@2.0.0
+#values()[Lorg/apache/kafka/common/resource/PatternType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/resource/PatternType;
+#code()B
+#isUnknown()Z
+#isSpecific()Z
+#fromCode(B)Lorg/apache/kafka/common/resource/PatternType;
+#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/resource/PatternType;

+###org/apache/kafka/common/resource/ResourcePatternFilter
@2.0.0
+#<init>(Lorg/apache/kafka/common/resource/ResourceType;Ljava/lang/String;Lorg/apache/kafka/common/resource/PatternType;)V
+#isUnknown()Z
+#resourceType()Lorg/apache/kafka/common/resource/ResourceType;
+#name()Ljava/lang/String;
+#patternType()Lorg/apache/kafka/common/resource/PatternType;
+#matches(Lorg/apache/kafka/common/resource/ResourcePattern;)Z
+#matchesAtMostOne()Z
+#findIndefiniteField()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/clients/DefaultHostResolver
@2.6.2
+#<init>()V
+#resolve(Ljava/lang/String;)[Ljava/net/InetAddress;
@2.7.0
-###org/apache/kafka/clients/DefaultHostResolver

+###org/apache/kafka/clients/producer/internals/StickyPartitionCache
@2.4.0
+#<init>()V
+#partition(Ljava/lang/String;Lorg/apache/kafka/common/Cluster;)I
+#nextPartition(Ljava/lang/String;Lorg/apache/kafka/common/Cluster;I)I

+###org/apache/kafka/clients/producer/internals/ProducerMetadata
@2.3.0
+#<init>(JJLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/common/internals/ClusterResourceListeners;Lorg/apache/kafka/common/utils/Time;)V
+#newMetadataRequestBuilder()Lorg/apache/kafka/common/requests/MetadataRequest$Builder;
+#add(Ljava/lang/String;)V
+#containsTopic(Ljava/lang/String;)Z
+#retainTopic(Ljava/lang/String;ZJ)Z
+#awaitUpdate(IJ)V
+#update(ILorg/apache/kafka/common/requests/MetadataResponse;J)V
+#failedUpdate(JLorg/apache/kafka/common/KafkaException;)V
+#close()V
@2.4.1
+#fatalError(Lorg/apache/kafka/common/KafkaException;)V
-#failedUpdate(JLorg/apache/kafka/common/KafkaException;)V
@2.5.0
+#<init>(JJJLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/common/internals/ClusterResourceListeners;Lorg/apache/kafka/common/utils/Time;)V
+#newMetadataRequestBuilderForNewTopics()Lorg/apache/kafka/common/requests/MetadataRequest$Builder;
+#add(Ljava/lang/String;J)V
+#requestUpdateForTopic(Ljava/lang/String;)I
+#update(ILorg/apache/kafka/common/requests/MetadataResponse;ZJ)V
-#<init>(JJLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/common/internals/ClusterResourceListeners;Lorg/apache/kafka/common/utils/Time;)V
-#add(Ljava/lang/String;)V
-#update(ILorg/apache/kafka/common/requests/MetadataResponse;J)V

+###org/apache/kafka/clients/producer/RoundRobinPartitioner
@2.4.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#partition(Ljava/lang/String;Ljava/lang/Object;[BLjava/lang/Object;[BLorg/apache/kafka/common/Cluster;)I
+#close()V

+###org/apache/kafka/clients/producer/UniformStickyPartitioner
@2.4.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#partition(Ljava/lang/String;Ljava/lang/Object;[BLjava/lang/Object;[BLorg/apache/kafka/common/Cluster;)I
+#close()V
+#onNewBatch(Ljava/lang/String;Lorg/apache/kafka/common/Cluster;I)V

+###org/apache/kafka/clients/ApiVersion
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/ApiKeys;)V
+#<init>(SSS)V
+#<init>(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;)V
+#toString()Ljava/lang/String;
@2.8.0
-###org/apache/kafka/clients/ApiVersion

+###org/apache/kafka/clients/NetworkClient$DefaultMetadataUpdater$InProgressData
@2.5.0

+###org/apache/kafka/clients/admin/ElectLeadersResult
@2.4.0
+#partitions()Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/AlterUserScramCredentialsOptions
@2.7.0
+#<init>()V

+###org/apache/kafka/clients/admin/UserScramCredentialDeletion
@2.7.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ScramMechanism;)V
+#mechanism()Lorg/apache/kafka/clients/admin/ScramMechanism;

+###org/apache/kafka/clients/admin/ListPartitionReassignmentsResult
@2.4.0
+#reassignments()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/MemberToRemove
@2.4.0
+#<init>(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#groupInstanceId()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ListOffsetsResult
@2.5.0
+#partitionResult(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;
@2.6.0
+#<init>(Ljava/util/Map;)V

+###org/apache/kafka/clients/admin/FeatureUpdate
@2.7.0
+#<init>(SZ)V
+#maxVersionLevel()S
+#allowDowngrade()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.3.0
*#<init>(SZ)V[deprecated]
+#<init>(SLorg/apache/kafka/clients/admin/FeatureUpdate$UpgradeType;)V
*#allowDowngrade()Z[deprecated]
+#upgradeType()Lorg/apache/kafka/clients/admin/FeatureUpdate$UpgradeType;

+###org/apache/kafka/clients/admin/UpdateFeaturesOptions
@2.7.0
+#<init>()V
@3.3.0
+#dryRun()Z[deprecated]
+#validateOnly()Z
+#dryRun(Z)Lorg/apache/kafka/clients/admin/UpdateFeaturesOptions;[deprecated]
+#validateOnly(Z)Lorg/apache/kafka/clients/admin/UpdateFeaturesOptions;

+###org/apache/kafka/clients/admin/NewPartitionReassignment
@2.4.0
+#<init>(Ljava/util/List;)V
+#targetReplicas()Ljava/util/List;

+###org/apache/kafka/clients/admin/UpdateFeaturesResult
@2.7.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsOptions
@2.4.0
+#<init>()V

+###org/apache/kafka/clients/admin/ListOffsetsOptions
@2.5.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/IsolationLevel;)V
+#isolationLevel()Lorg/apache/kafka/common/IsolationLevel;

+###org/apache/kafka/clients/admin/SupportedVersionRange
@2.7.0
+#minVersion()S
+#maxVersion()S
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/OffsetSpec$LatestSpec
@2.6.0
+#<init>()V

+###org/apache/kafka/clients/admin/ConfigEntry$ConfigType
@2.6.0
+#values()[Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigType;

+###org/apache/kafka/clients/admin/DescribeUserScramCredentialsResult
@2.7.0
+#all()Lorg/apache/kafka/common/KafkaFuture;
+#users()Lorg/apache/kafka/common/KafkaFuture;
+#description(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/AlterConsumerGroupOffsetsResult
@2.5.0
+#partitionResult(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsResult
@2.4.0
+#partitionResult(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/AlterClientQuotasResult
@2.6.0
+#<init>(Ljava/util/Map;)V
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeClientQuotasOptions
@2.6.0
+#<init>()V

+###org/apache/kafka/clients/admin/ScramCredentialInfo
@2.7.0
+#<init>(Lorg/apache/kafka/clients/admin/ScramMechanism;I)V
+#mechanism()Lorg/apache/kafka/clients/admin/ScramMechanism;
+#iterations()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/clients/admin/DescribeFeaturesOptions
@2.7.0
+#<init>()V
+#sendRequestToController(Z)Lorg/apache/kafka/clients/admin/DescribeFeaturesOptions;
+#sendRequestToController()Z
@2.8.0
-#sendRequestToController(Z)Lorg/apache/kafka/clients/admin/DescribeFeaturesOptions;
-#sendRequestToController()Z

+###org/apache/kafka/clients/admin/Admin
@2.4.0
+#create(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/Admin;
+#create(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/Admin;
+#close()V
+#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
+#close(Ljava/time/Duration;)V
+#createTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
+#createTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateTopicsOptions;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
+#deleteTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#deleteTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#listTopics()Lorg/apache/kafka/clients/admin/ListTopicsResult;
+#listTopics(Lorg/apache/kafka/clients/admin/ListTopicsOptions;)Lorg/apache/kafka/clients/admin/ListTopicsResult;
+#describeTopics(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
+#describeTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
+#describeCluster()Lorg/apache/kafka/clients/admin/DescribeClusterResult;
+#describeCluster(Lorg/apache/kafka/clients/admin/DescribeClusterOptions;)Lorg/apache/kafka/clients/admin/DescribeClusterResult;
+#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
+#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;Lorg/apache/kafka/clients/admin/DescribeAclsOptions;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
+#createAcls(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
+#createAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateAclsOptions;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
+#deleteAcls(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
+#deleteAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteAclsOptions;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
+#describeConfigs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
+#describeConfigs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
+#alterConfigs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
+#alterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
+#incrementalAlterConfigs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
+#incrementalAlterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
+#alterReplicaLogDirs(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
+#alterReplicaLogDirs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
+#describeLogDirs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
+#describeLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
+#describeReplicaLogDirs(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
+#describeReplicaLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
+#createPartitions(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
+#createPartitions(Ljava/util/Map;Lorg/apache/kafka/clients/admin/CreatePartitionsOptions;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
+#deleteRecords(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
+#deleteRecords(Ljava/util/Map;Lorg/apache/kafka/clients/admin/DeleteRecordsOptions;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
+#createDelegationToken()Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
+#createDelegationToken(Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
+#renewDelegationToken([B)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
+#renewDelegationToken([BLorg/apache/kafka/clients/admin/RenewDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
+#expireDelegationToken([B)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
+#expireDelegationToken([BLorg/apache/kafka/clients/admin/ExpireDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
+#describeDelegationToken()Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
+#describeDelegationToken(Lorg/apache/kafka/clients/admin/DescribeDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
+#describeConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
+#describeConsumerGroups(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
+#listConsumerGroups(Lorg/apache/kafka/clients/admin/ListConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
+#listConsumerGroups()Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
+#listConsumerGroupOffsets(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#listConsumerGroupOffsets(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#deleteConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
+#deleteConsumerGroups(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
+#deleteConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Set;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsResult;
+#deleteConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Set;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsResult;
+#electPreferredLeaders(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;[deprecated]
+#electPreferredLeaders(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/ElectPreferredLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;[deprecated]
+#electLeaders(Lorg/apache/kafka/common/ElectionType;Ljava/util/Set;)Lorg/apache/kafka/clients/admin/ElectLeadersResult;
+#electLeaders(Lorg/apache/kafka/common/ElectionType;Ljava/util/Set;Lorg/apache/kafka/clients/admin/ElectLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectLeadersResult;
+#alterPartitionReassignments(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterPartitionReassignmentsResult;
+#alterPartitionReassignments(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/AlterPartitionReassignmentsResult;
+#listPartitionReassignments()Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsResult;
+#listPartitionReassignments(Ljava/util/Set;)Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsResult;
+#listPartitionReassignments(Ljava/util/Set;Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsResult;
+#listPartitionReassignments(Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsResult;
+#listPartitionReassignments(Ljava/util/Optional;Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsResult;
+#removeMembersFromConsumerGroup(Ljava/lang/String;Lorg/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupOptions;)Lorg/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupResult;
+#metrics()Ljava/util/Map;
@2.5.0
+#alterConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/clients/admin/AlterConsumerGroupOffsetsResult;
+#alterConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/AlterConsumerGroupOffsetsResult;
+#listOffsets(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/ListOffsetsResult;
+#listOffsets(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ListOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListOffsetsResult;
@2.6.0
+#describeClientQuotas(Lorg/apache/kafka/common/quota/ClientQuotaFilter;)Lorg/apache/kafka/clients/admin/DescribeClientQuotasResult;
+#describeClientQuotas(Lorg/apache/kafka/common/quota/ClientQuotaFilter;Lorg/apache/kafka/clients/admin/DescribeClientQuotasOptions;)Lorg/apache/kafka/clients/admin/DescribeClientQuotasResult;
+#alterClientQuotas(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/AlterClientQuotasResult;
+#alterClientQuotas(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/AlterClientQuotasOptions;)Lorg/apache/kafka/clients/admin/AlterClientQuotasResult;
@2.7.0
+#describeUserScramCredentials()Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsResult;
+#describeUserScramCredentials(Ljava/util/List;)Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsResult;
+#describeUserScramCredentials(Ljava/util/List;Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsOptions;)Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsResult;
+#alterUserScramCredentials(Ljava/util/List;)Lorg/apache/kafka/clients/admin/AlterUserScramCredentialsResult;
+#alterUserScramCredentials(Ljava/util/List;Lorg/apache/kafka/clients/admin/AlterUserScramCredentialsOptions;)Lorg/apache/kafka/clients/admin/AlterUserScramCredentialsResult;
+#describeFeatures()Lorg/apache/kafka/clients/admin/DescribeFeaturesResult;
+#describeFeatures(Lorg/apache/kafka/clients/admin/DescribeFeaturesOptions;)Lorg/apache/kafka/clients/admin/DescribeFeaturesResult;
+#updateFeatures(Ljava/util/Map;Lorg/apache/kafka/clients/admin/UpdateFeaturesOptions;)Lorg/apache/kafka/clients/admin/UpdateFeaturesResult;
@2.8.0
+#unregisterBroker(I)Lorg/apache/kafka/clients/admin/UnregisterBrokerResult;
+#unregisterBroker(ILorg/apache/kafka/clients/admin/UnregisterBrokerOptions;)Lorg/apache/kafka/clients/admin/UnregisterBrokerResult;
@3.0.0
+#deleteTopics(Lorg/apache/kafka/common/TopicCollection;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#deleteTopics(Lorg/apache/kafka/common/TopicCollection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#describeProducers(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeProducersResult;
+#describeProducers(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeProducersOptions;)Lorg/apache/kafka/clients/admin/DescribeProducersResult;
+#describeTransactions(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/DescribeTransactionsResult;
+#describeTransactions(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTransactionsOptions;)Lorg/apache/kafka/clients/admin/DescribeTransactionsResult;
+#abortTransaction(Lorg/apache/kafka/clients/admin/AbortTransactionSpec;)Lorg/apache/kafka/clients/admin/AbortTransactionResult;
+#abortTransaction(Lorg/apache/kafka/clients/admin/AbortTransactionSpec;Lorg/apache/kafka/clients/admin/AbortTransactionOptions;)Lorg/apache/kafka/clients/admin/AbortTransactionResult;
+#listTransactions()Lorg/apache/kafka/clients/admin/ListTransactionsResult;
+#listTransactions(Lorg/apache/kafka/clients/admin/ListTransactionsOptions;)Lorg/apache/kafka/clients/admin/ListTransactionsResult;
-#close(JLjava/util/concurrent/TimeUnit;)V[deprecated]
-#electPreferredLeaders(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;[deprecated]
-#electPreferredLeaders(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/ElectPreferredLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectPreferredLeadersResult;[deprecated]
@3.1.0
+#describeTopics(Lorg/apache/kafka/common/TopicCollection;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
+#describeTopics(Lorg/apache/kafka/common/TopicCollection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
@3.2.0
+#fenceProducers(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/FenceProducersResult;
+#fenceProducers(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/FenceProducersOptions;)Lorg/apache/kafka/clients/admin/FenceProducersResult;
@3.3.0
+#listConsumerGroupOffsets(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#listConsumerGroupOffsets(Ljava/util/Map;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#describeMetadataQuorum()Lorg/apache/kafka/clients/admin/DescribeMetadataQuorumResult;
+#describeMetadataQuorum(Lorg/apache/kafka/clients/admin/DescribeMetadataQuorumOptions;)Lorg/apache/kafka/clients/admin/DescribeMetadataQuorumResult;

+###org/apache/kafka/clients/admin/ListPartitionReassignmentsOptions
@2.4.0
+#<init>()V

+###org/apache/kafka/clients/admin/internals/MetadataOperationContext
@2.5.0
+#<init>(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/AbstractOptions;JLjava/util/Map;)V
+#setResponse(Ljava/util/Optional;)V
+#response()Ljava/util/Optional;
+#options()Lorg/apache/kafka/clients/admin/AbstractOptions;
+#deadline()J
+#futures()Ljava/util/Map;
+#topics()Ljava/util/Collection;
+#handleMetadataErrors(Lorg/apache/kafka/common/requests/MetadataResponse;)V
+#shouldRefreshMetadata(Lorg/apache/kafka/common/protocol/Errors;)Z

+###org/apache/kafka/clients/admin/internals/ConsumerGroupOperationContext
@2.5.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/admin/AbstractOptions;JLorg/apache/kafka/common/internals/KafkaFutureImpl;)V
+#groupId()Ljava/lang/String;
+#options()Lorg/apache/kafka/clients/admin/AbstractOptions;
+#deadline()J
+#future()Lorg/apache/kafka/common/internals/KafkaFutureImpl;
+#node()Ljava/util/Optional;
+#setNode(Lorg/apache/kafka/common/Node;)V
+#hasCoordinatorMoved(Lorg/apache/kafka/common/requests/AbstractResponse;)Z
+#shouldRefreshCoordinator(Lorg/apache/kafka/common/protocol/Errors;)Z
@2.8.0
+#hasCoordinatorMoved(Ljava/util/Map;)Z
+#shouldRefreshCoordinator(Ljava/util/Map;)Z
-#shouldRefreshCoordinator(Lorg/apache/kafka/common/protocol/Errors;)Z
@3.0.0
-###org/apache/kafka/clients/admin/internals/ConsumerGroupOperationContext

+###org/apache/kafka/clients/admin/DescribeFeaturesResult
@2.7.0
+#featureMetadata()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/UserScramCredentialsDescription
@2.7.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#name()Ljava/lang/String;
+#credentialInfos()Ljava/util/List;

+###org/apache/kafka/clients/admin/OffsetSpec$EarliestSpec
@2.6.0
+#<init>()V

+###org/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupOptions
@2.4.0
+#<init>(Ljava/util/Collection;)V
+#members()Ljava/util/Set;
@2.6.0
+#<init>()V
+#removeAll()Z
@3.2.0
+#reason(Ljava/lang/String;)V
+#reason()Ljava/lang/String;

+###org/apache/kafka/clients/admin/DescribeClientQuotasResult
@2.6.0
+#<init>(Lorg/apache/kafka/common/KafkaFuture;)V
+#entities()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/FeatureMetadata
@2.7.0
+#finalizedFeatures()Ljava/util/Map;
+#finalizedFeaturesEpoch()Ljava/util/Optional;
+#supportedFeatures()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ElectLeadersOptions
@2.4.0
+#<init>()V

+###org/apache/kafka/clients/admin/AlterConfigOp$OpType
@2.3.0
+#values()[Lorg/apache/kafka/clients/admin/AlterConfigOp$OpType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/AlterConfigOp$OpType;
+#id()B
+#forId(B)Lorg/apache/kafka/clients/admin/AlterConfigOp$OpType;

+###org/apache/kafka/clients/admin/AlterConsumerGroupOffsetsOptions
@2.5.0
+#<init>()V

+###org/apache/kafka/clients/admin/OffsetSpec
@2.5.0
+#<init>()V
+#latest()Lorg/apache/kafka/clients/admin/OffsetSpec;
+#earliest()Lorg/apache/kafka/clients/admin/OffsetSpec;
+#forTimestamp(J)Lorg/apache/kafka/clients/admin/OffsetSpec;
@3.0.0
+#maxTimestamp()Lorg/apache/kafka/clients/admin/OffsetSpec;

+###org/apache/kafka/clients/admin/FinalizedVersionRange
@2.7.0
+#minVersionLevel()S
+#maxVersionLevel()S
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/AlterClientQuotasOptions
@2.6.0
+#<init>()V
+#validateOnly()Z
+#validateOnly(Z)Lorg/apache/kafka/clients/admin/AlterClientQuotasOptions;

+###org/apache/kafka/clients/admin/PartitionReassignment
@2.4.0
+#<init>(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
+#replicas()Ljava/util/List;
+#addingReplicas()Ljava/util/List;
+#removingReplicas()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ScramMechanism
@2.7.0
+#values()[Lorg/apache/kafka/clients/admin/ScramMechanism;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ScramMechanism;
+#fromType(B)Lorg/apache/kafka/clients/admin/ScramMechanism;
+#fromMechanismName(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/ScramMechanism;
+#mechanismName()Ljava/lang/String;
+#type()B

+###org/apache/kafka/clients/admin/CreateTopicsResult$TopicMetadataAndConfig
@2.5.0
+#numPartitions()I
+#replicationFactor()I
+#config()Lorg/apache/kafka/clients/admin/Config;
@2.8.0
+#topicId()Lorg/apache/kafka/common/Uuid;
@3.0.0
+#<init>(Lorg/apache/kafka/common/Uuid;IILorg/apache/kafka/clients/admin/Config;)V
+#<init>(Lorg/apache/kafka/common/errors/ApiException;)V

+###org/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupResult
@2.4.0
+#all()Lorg/apache/kafka/common/KafkaFuture;
+#memberResult(Lorg/apache/kafka/clients/admin/MemberToRemove;)Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/OffsetSpec$TimestampSpec
@2.6.0

+###org/apache/kafka/clients/admin/AlterUserScramCredentialsResult
@2.7.0
+#<init>(Ljava/util/Map;)V
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/UserScramCredentialAlteration
@2.7.0
+#user()Ljava/lang/String;

+###org/apache/kafka/clients/admin/AlterPartitionReassignmentsResult
@2.4.0
+#values()Ljava/util/Map;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeUserScramCredentialsOptions
@2.7.0
+#<init>()V

+###org/apache/kafka/clients/admin/AlterPartitionReassignmentsOptions
@2.4.0
+#<init>()V

+###org/apache/kafka/clients/admin/ListOffsetsResult$ListOffsetsResultInfo
@2.5.0
+#offset()J
+#timestamp()J
+#leaderEpoch()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@2.6.0
+#<init>(JJLjava/util/Optional;)V

+###org/apache/kafka/clients/admin/LogDirDescription
@2.7.0
+#<init>(Lorg/apache/kafka/common/errors/ApiException;Ljava/util/Map;)V
+#error()Lorg/apache/kafka/common/errors/ApiException;
+#replicaInfos()Ljava/util/Map;
+#toString()Ljava/lang/String;
@3.3.0
+#<init>(Lorg/apache/kafka/common/errors/ApiException;Ljava/util/Map;JJ)V
+#totalBytes()Ljava/util/OptionalLong;
+#usableBytes()Ljava/util/OptionalLong;

+###org/apache/kafka/clients/admin/UserScramCredentialUpsertion
@2.7.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ScramCredentialInfo;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ScramCredentialInfo;[B)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/admin/ScramCredentialInfo;[B[B)V
+#credentialInfo()Lorg/apache/kafka/clients/admin/ScramCredentialInfo;
+#salt()[B
+#password()[B

+###org/apache/kafka/clients/admin/ReplicaInfo
@2.7.0
+#<init>(JJZ)V
+#size()J
+#offsetLag()J
+#isFuture()Z
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/AlterConfigOp
@2.3.0
+#<init>(Lorg/apache/kafka/clients/admin/ConfigEntry;Lorg/apache/kafka/clients/admin/AlterConfigOp$OpType;)V
+#configEntry()Lorg/apache/kafka/clients/admin/ConfigEntry;
+#opType()Lorg/apache/kafka/clients/admin/AlterConfigOp$OpType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/MetadataCache
@2.3.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/Metadata$MetadataRequestAndVersion
@2.2.1

+###org/apache/kafka/clients/GroupRebalanceConfig
@2.4.0
+#<init>(Lorg/apache/kafka/common/config/AbstractConfig;Lorg/apache/kafka/clients/GroupRebalanceConfig$ProtocolType;)V
+#<init>(IIILjava/lang/String;Ljava/util/Optional;JZ)V

+###org/apache/kafka/clients/Metadata$LeaderAndEpoch
@2.3.0
+#<init>(Lorg/apache/kafka/common/Node;Ljava/util/Optional;)V
+#noLeaderOrEpoch()Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0
+#<init>(Ljava/util/Optional;Ljava/util/Optional;)V
-#<init>(Lorg/apache/kafka/common/Node;Ljava/util/Optional;)V

+###org/apache/kafka/clients/HostResolver
@2.6.2
+#resolve(Ljava/lang/String;)[Ljava/net/InetAddress;
@2.7.0
-###org/apache/kafka/clients/HostResolver

+###org/apache/kafka/clients/consumer/ConsumerPartitionAssignor$RebalanceProtocol
@2.4.0
+#values()[Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$RebalanceProtocol;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$RebalanceProtocol;
+#id()B
+#forId(B)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$RebalanceProtocol;

+###org/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment
@2.4.0
+#<init>(Ljava/util/List;Ljava/nio/ByteBuffer;)V
+#<init>(Ljava/util/List;)V
+#partitions()Ljava/util/List;
+#userData()Ljava/nio/ByteBuffer;
@2.4.1
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Subscription
@2.4.0
+#<init>(Ljava/util/List;Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Ljava/util/List;Ljava/nio/ByteBuffer;)V
+#<init>(Ljava/util/List;)V
+#topics()Ljava/util/List;
+#userData()Ljava/nio/ByteBuffer;
+#ownedPartitions()Ljava/util/List;
+#setGroupInstanceId(Ljava/util/Optional;)V
+#groupInstanceId()Ljava/util/Optional;
@3.0.0
+#toString()Ljava/lang/String;
@3.4.0
+#<init>(Ljava/util/List;Ljava/nio/ByteBuffer;Ljava/util/List;ILjava/util/Optional;)V
+#rackId()Ljava/util/Optional;
+#generationId()Ljava/util/Optional;

+###org/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupAssignment
@2.4.0
+#<init>(Ljava/util/Map;)V
+#groupAssignment()Ljava/util/Map;
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/CooperativeStickyAssignor
@2.4.0
+#<init>()V
+#name()Ljava/lang/String;
+#supportedProtocols()Ljava/util/List;
+#assign(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
@2.8.1
+#onAssignment(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
+#subscriptionUserData(Ljava/util/Set;)Ljava/nio/ByteBuffer;

+###org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor$MemberData
@2.4.0
+#<init>(Ljava/util/List;Ljava/util/Optional;)V

+###org/apache/kafka/clients/consumer/internals/PartitionAssignorAdapter
@2.4.0
+#subscriptionUserData(Ljava/util/Set;)Ljava/nio/ByteBuffer;
+#assign(Lorg/apache/kafka/common/Cluster;Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupSubscription;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupAssignment;
+#onAssignment(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
+#name()Ljava/lang/String;
+#getAssignorInstances(Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
@3.0.0
-###org/apache/kafka/clients/consumer/internals/PartitionAssignorAdapter

+###org/apache/kafka/clients/consumer/internals/ConsumerMetadata
@2.3.0
+#<init>(JJZZLorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/common/internals/ClusterResourceListeners;)V
+#allowAutoTopicCreation()Z
+#newMetadataRequestBuilder()Lorg/apache/kafka/common/requests/MetadataRequest$Builder;

+###org/apache/kafka/clients/consumer/internals/SubscriptionState$LogTruncation
@2.6.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition;Ljava/util/Optional;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/OffsetsForLeaderEpochClient$OffsetForEpochResult
@2.3.0
+#endOffsets()Ljava/util/Map;
+#partitionsToRetry()Ljava/util/Set;

+###org/apache/kafka/clients/consumer/internals/AbstractCoordinator$MemberState
@2.5.0
+#values()[Lorg/apache/kafka/clients/consumer/internals/AbstractCoordinator$MemberState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/internals/AbstractCoordinator$MemberState;
@2.6.1
+#hasNotJoinedGroup()Z

+###org/apache/kafka/clients/consumer/internals/KafkaConsumerMetrics
@2.4.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;Ljava/lang/String;)V
+#recordPollStart(J)V
+#recordPollEnd(J)V
@2.4.1
+#close()V
@3.1.0
+#recordCommitSync(J)V
+#recordCommitted(J)V

+###org/apache/kafka/clients/consumer/internals/AbstractPartitionAssignor$MemberInfo
@2.4.0
+#<init>(Ljava/lang/String;Ljava/util/Optional;)V
+#compareTo(Lorg/apache/kafka/clients/consumer/internals/AbstractPartitionAssignor$MemberInfo;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/kafka/clients/consumer/internals/SubscriptionState$FetchPosition
@2.3.0
+#<init>(JLjava/util/Optional;Lorg/apache/kafka/clients/Metadata$LeaderAndEpoch;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor
@2.4.0
+#<init>()V
+#assign(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
+#isSticky()Z

+###org/apache/kafka/clients/consumer/internals/OffsetsForLeaderEpochClient
@2.3.0

+###org/apache/kafka/clients/consumer/internals/AsyncClient
@2.3.0
+#sendAsyncRequest(Lorg/apache/kafka/common/Node;Ljava/lang/Object;)Lorg/apache/kafka/clients/consumer/internals/RequestFuture;

+###org/apache/kafka/clients/consumer/LogTruncationException
@2.3.0
+#<init>(Ljava/util/Map;)V
+#divergentOffsets()Ljava/util/Map;
@2.6.0
+#<init>(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
-#<init>(Ljava/util/Map;)V

+###org/apache/kafka/clients/consumer/ConsumerGroupMetadata
@2.4.0
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/Optional;)V
+#groupId()Ljava/lang/String;
+#generationId()I
+#memberId()Ljava/lang/String;
+#groupInstanceId()Ljava/util/Optional;
@2.5.0
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@2.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupSubscription
@2.4.0
+#<init>(Ljava/util/Map;)V
+#groupSubscription()Ljava/util/Map;
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/ConsumerPartitionAssignor
@2.4.0
+#subscriptionUserData(Ljava/util/Set;)Ljava/nio/ByteBuffer;
+#assign(Lorg/apache/kafka/common/Cluster;Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupSubscription;)Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$GroupAssignment;
+#onAssignment(Lorg/apache/kafka/clients/consumer/ConsumerPartitionAssignor$Assignment;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
+#supportedProtocols()Ljava/util/List;
+#version()S
+#name()Ljava/lang/String;
@3.0.0
+#getAssignorInstances(Ljava/util/List;Ljava/util/Map;)Ljava/util/List;

+###org/apache/kafka/clients/GroupRebalanceConfig$ProtocolType
@2.4.0
+#values()[Lorg/apache/kafka/clients/GroupRebalanceConfig$ProtocolType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/GroupRebalanceConfig$ProtocolType;
+#toString()Ljava/lang/String;

+###org/apache/kafka/server/authorizer/AclCreateResult
@2.4.0
+#<init>(Lorg/apache/kafka/common/errors/ApiException;)V
+#exception()Ljava/util/Optional;

+###org/apache/kafka/server/authorizer/AclDeleteResult
@2.4.0
+#<init>(Lorg/apache/kafka/common/errors/ApiException;)V
+#<init>(Ljava/util/Collection;)V
+#exception()Ljava/util/Optional;
+#aclBindingDeleteResults()Ljava/util/Collection;

+###org/apache/kafka/server/authorizer/AuthorizerServerInfo
@2.4.0
+#clusterResource()Lorg/apache/kafka/common/ClusterResource;
+#brokerId()I
+#endpoints()Ljava/util/Collection;
+#interBrokerEndpoint()Lorg/apache/kafka/common/Endpoint;
@3.3.0
+#earlyStartListeners()Ljava/util/Collection;

+###org/apache/kafka/server/authorizer/Authorizer
@2.4.0
+#start(Lorg/apache/kafka/server/authorizer/AuthorizerServerInfo;)Ljava/util/Map;
+#authorize(Lorg/apache/kafka/server/authorizer/AuthorizableRequestContext;Ljava/util/List;)Ljava/util/List;
+#createAcls(Lorg/apache/kafka/server/authorizer/AuthorizableRequestContext;Ljava/util/List;)Ljava/util/List;
+#deleteAcls(Lorg/apache/kafka/server/authorizer/AuthorizableRequestContext;Ljava/util/List;)Ljava/util/List;
+#acls(Lorg/apache/kafka/common/acl/AclBindingFilter;)Ljava/lang/Iterable;
@2.8.0
+#authorizeByResourceType(Lorg/apache/kafka/server/authorizer/AuthorizableRequestContext;Lorg/apache/kafka/common/acl/AclOperation;Lorg/apache/kafka/common/resource/ResourceType;)Lorg/apache/kafka/server/authorizer/AuthorizationResult;
@3.2.0
+#aclCount()I

+###org/apache/kafka/server/authorizer/AuthorizableRequestContext
@2.4.0
+#listenerName()Ljava/lang/String;
+#securityProtocol()Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#clientAddress()Ljava/net/InetAddress;
+#requestType()I
+#requestVersion()I
+#clientId()Ljava/lang/String;
+#correlationId()I

+###org/apache/kafka/server/authorizer/AuthorizationResult
@2.4.0
+#values()[Lorg/apache/kafka/server/authorizer/AuthorizationResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/server/authorizer/AuthorizationResult;

+###org/apache/kafka/server/authorizer/Action
@2.4.0
+#<init>(Lorg/apache/kafka/common/acl/AclOperation;Lorg/apache/kafka/common/resource/ResourcePattern;IZZ)V
+#resourcePattern()Lorg/apache/kafka/common/resource/ResourcePattern;
+#operation()Lorg/apache/kafka/common/acl/AclOperation;
+#logIfAllowed()Z
+#logIfDenied()Z
+#resourceReferenceCount()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/server/authorizer/AclDeleteResult$AclBindingDeleteResult
@2.4.0
+#<init>(Lorg/apache/kafka/common/acl/AclBinding;)V
+#<init>(Lorg/apache/kafka/common/acl/AclBinding;Lorg/apache/kafka/common/errors/ApiException;)V
+#aclBinding()Lorg/apache/kafka/common/acl/AclBinding;
+#exception()Ljava/util/Optional;

+###org/apache/kafka/common/InvalidRecordException
@2.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/metrics/MetricsContext
@2.6.0
+#contextLabels()Ljava/util/Map;

+###org/apache/kafka/common/metrics/internals/MetricsUtils
@2.7.0
+#<init>()V
+#convert(JLjava/util/concurrent/TimeUnit;)D
@2.8.0
+#getTags([Ljava/lang/String;)Ljava/util/Map;

+###org/apache/kafka/common/metrics/internals/IntGaugeSuite
@2.5.0
+#<init>(Lorg/slf4j/Logger;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Metrics;Ljava/util/function/Function;I)V
+#increment(Ljava/lang/Object;)V
+#decrement(Ljava/lang/Object;)V
+#close()V
+#maxEntries()I

+###org/apache/kafka/common/metrics/KafkaMetricsContext
@2.6.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#contextLabels()Ljava/util/Map;

+###org/apache/kafka/common/metrics/stats/CumulativeCount
@2.4.0
+#<init>()V
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V

+###org/apache/kafka/common/metrics/stats/CumulativeSum
@2.4.0
+#<init>()V
+#<init>(D)V
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/metrics/stats/WindowedCount
@2.4.0
+#<init>()V

+###org/apache/kafka/common/metrics/stats/WindowedSum
@2.4.0
+#<init>()V
+#combine(Ljava/util/List;Lorg/apache/kafka/common/metrics/MetricConfig;J)D

+###org/apache/kafka/common/metrics/stats/TokenBucket
@2.7.0
+#<init>()V
+#<init>(Ljava/util/concurrent/TimeUnit;)V
+#measure(Lorg/apache/kafka/common/metrics/MetricConfig;J)D
+#record(Lorg/apache/kafka/common/metrics/MetricConfig;DJ)V
@3.0.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/ElectionType
@2.4.0
+#values()[Lorg/apache/kafka/common/ElectionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/ElectionType;
+#valueOf(B)Lorg/apache/kafka/common/ElectionType;

+###org/apache/kafka/common/IsolationLevel
@2.5.0
+#values()[Lorg/apache/kafka/common/IsolationLevel;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/IsolationLevel;
+#id()B
+#forId(B)Lorg/apache/kafka/common/IsolationLevel;

+###org/apache/kafka/common/record/ControlRecordUtils
@2.7.0
+#<init>()V
+#deserializeLeaderChangeMessage(Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/message/LeaderChangeMessage;
+#deserializeLeaderChangeMessage(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/message/LeaderChangeMessage;
@3.0.0
+#deserializedSnapshotHeaderRecord(Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/message/SnapshotHeaderRecord;
+#deserializedSnapshotHeaderRecord(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/message/SnapshotHeaderRecord;
+#deserializedSnapshotFooterRecord(Lorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/message/SnapshotFooterRecord;
+#deserializedSnapshotFooterRecord(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/message/SnapshotFooterRecord;

+###org/apache/kafka/common/record/PartialDefaultRecord
@2.4.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#keySize()I
+#hasKey()Z
+#key()Ljava/nio/ByteBuffer;
+#valueSize()I
+#hasValue()Z
+#value()Ljava/nio/ByteBuffer;
+#headers()[Lorg/apache/kafka/common/header/Header;

+###org/apache/kafka/common/config/provider/DirectoryConfigProvider
@2.7.0
+#<init>()V
+#configure(Ljava/util/Map;)V
+#close()V
+#get(Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigData;
+#get(Ljava/lang/String;Ljava/util/Set;)Lorg/apache/kafka/common/config/ConfigData;

+###org/apache/kafka/common/config/ConfigDef$CaseInsensitiveValidString
@2.4.0
+#in([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$CaseInsensitiveValidString;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/ConfigDef$LambdaValidator
@2.3.0
+#with(Ljava/util/function/BiConsumer;Ljava/util/function/Supplier;)Lorg/apache/kafka/common/config/ConfigDef$LambdaValidator;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/SecurityConfig
@2.4.0
+#<init>()V

+###org/apache/kafka/common/config/SslClientAuth
@2.3.0
+#values()[Lorg/apache/kafka/common/config/SslClientAuth;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/config/SslClientAuth;
+#forConfig(Ljava/lang/String;)Lorg/apache/kafka/common/config/SslClientAuth;
@3.3.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/config/LogLevelConfig
@2.4.0
+#<init>()V

+###org/apache/kafka/common/security/ssl/DefaultSslEngineFactory
@2.6.0
+#<init>()V
+#createClientSslEngine(Ljava/lang/String;ILjava/lang/String;)Ljavax/net/ssl/SSLEngine;
+#createServerSslEngine(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
+#shouldBeRebuilt(Ljava/util/Map;)Z
+#reconfigurableConfigs()Ljava/util/Set;
+#keystore()Ljava/security/KeyStore;
+#truststore()Ljava/security/KeyStore;
+#configure(Ljava/util/Map;)V
+#close()V
+#sslContext()Ljavax/net/ssl/SSLContext;

+###org/apache/kafka/common/security/auth/SslEngineFactory
@2.6.0
+#createClientSslEngine(Ljava/lang/String;ILjava/lang/String;)Ljavax/net/ssl/SSLEngine;
+#createServerSslEngine(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;
+#shouldBeRebuilt(Ljava/util/Map;)Z
+#reconfigurableConfigs()Ljava/util/Set;
+#keystore()Ljava/security/KeyStore;
+#truststore()Ljava/security/KeyStore;

+###org/apache/kafka/common/security/auth/SecurityProviderCreator
@2.4.0
+#configure(Ljava/util/Map;)V
+#getProvider()Ljava/security/Provider;

+###org/apache/kafka/common/serialization/VoidDeserializer
@2.5.0
+#<init>()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Void;
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;

+###org/apache/kafka/common/serialization/VoidSerializer
@2.5.0
+#<init>()V
+#serialize(Ljava/lang/String;Ljava/lang/Void;)[B
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B

+###org/apache/kafka/common/serialization/Serdes$VoidSerde
@2.5.0
+#<init>()V

+###org/apache/kafka/common/MessageFormatter
@2.7.0
+#init(Ljava/util/Properties;)V[deprecated]
+#configure(Ljava/util/Map;)V
+#writeTo(Lorg/apache/kafka/clients/consumer/ConsumerRecord;Ljava/io/PrintStream;)V
+#close()V
@3.0.0
-#init(Ljava/util/Properties;)V[deprecated]

+###org/apache/kafka/common/network/CipherInformation
@2.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#cipher()Ljava/lang/String;
+#protocol()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/kafka/common/network/DefaultChannelMetadataRegistry
@2.5.0
+#<init>()V
+#registerCipherInformation(Lorg/apache/kafka/common/network/CipherInformation;)V
+#cipherInformation()Lorg/apache/kafka/common/network/CipherInformation;
+#registerClientInformation(Lorg/apache/kafka/common/network/ClientInformation;)V
+#clientInformation()Lorg/apache/kafka/common/network/ClientInformation;
+#close()V

+###org/apache/kafka/common/network/ClientInformation
@2.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#softwareName()Ljava/lang/String;
+#softwareVersion()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/kafka/common/network/ChannelMetadataRegistry
@2.5.0
+#registerCipherInformation(Lorg/apache/kafka/common/network/CipherInformation;)V
+#cipherInformation()Lorg/apache/kafka/common/network/CipherInformation;
+#registerClientInformation(Lorg/apache/kafka/common/network/ClientInformation;)V
+#clientInformation()Lorg/apache/kafka/common/network/ClientInformation;
+#close()V

+###org/apache/kafka/common/message/TxnOffsetCommitRequestDataJsonConverter$TxnOffsetCommitRequestTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestTopic;
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ElectLeadersRequestData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#electionType()B
+#topicPartitions()Ljava/util/List;
+#timeoutMs()I
+#unknownTaggedFields()Ljava/util/List;
+#setElectionType(B)Lorg/apache/kafka/common/message/ElectLeadersRequestData;
+#setTopicPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectLeadersRequestData;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/ElectLeadersRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ElectLeadersRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#topicPartitions()Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitionsCollection;
+#setTopicPartitions(Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitionsCollection;)Lorg/apache/kafka/common/message/ElectLeadersRequestData;
-#topicPartitions()Ljava/util/List;
-#setTopicPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectLeadersRequestData;

+###org/apache/kafka/common/message/CreateAclsRequestDataJsonConverter$AclCreationJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#write(Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetForLeaderEpochRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#leaderId()I
+#leaderEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/SaslAuthenticateResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;
+#write(Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/SaslAuthenticateResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterReplicaLogDirsResponseDataJsonConverter$AlterReplicaLogDirPartitionResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirPartitionResult;
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirPartitionResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirPartitionResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsRequestDataJsonConverter$UserNameJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData$UserName;
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData$UserName;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData$UserName;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetCommitRequestDataJsonConverter$OffsetCommitRequestTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestTopic;
+#write(Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListPartitionReassignmentsResponseDataJsonConverter$OngoingPartitionReassignmentJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;
+#toString()Ljava/lang/String;
+#replicaId()I
+#logEndOffset()J
+#unknownTaggedFields()Ljava/util/List;
+#setReplicaId(I)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;
+#setLogEndOffset(J)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.3.0
+#lastFetchTimestamp()J
+#lastCaughtUpTimestamp()J
+#setLastFetchTimestamp(J)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;
+#setLastCaughtUpTimestamp(J)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;

+###org/apache/kafka/common/message/TxnOffsetCommitResponseDataJsonConverter$TxnOffsetCommitResponseTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponseTopic;
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponseTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponseTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestDataJsonConverter$AlterableConfigJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsRequestDataJsonConverter$ReassignablePartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignablePartition;
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignablePartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignablePartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderChangeMessageJsonConverter$VoterJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderChangeMessage$Voter;
+#write(Lorg/apache/kafka/common/message/LeaderChangeMessage$Voter;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderChangeMessage$Voter;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicState
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicState;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionStates()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicState;
+#setPartitionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseDataJsonConverter$AddPartitionsToTxnPartitionResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#leaderId()I
+#leaderEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/VoteResponseDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;
+#write(Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeDelegationTokenResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseData$EntryData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntryData;
+#toString()Ljava/lang/String;
+#entity()Ljava/util/List;
+#values()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setEntity(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntryData;
+#setValues(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntryData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ProduceRequestData;
+#write(Lorg/apache/kafka/common/message/ProduceRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ProduceRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/JoinGroupRequestDataJsonConverter$JoinGroupRequestProtocolJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;
+#write(Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsRequestData$UserName
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData$UserName;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData$UserName;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersRequestDataJsonConverter$WritableTxnMarkerTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarkerTopic;
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarkerTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarkerTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeConfigsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeConfigsResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterClientQuotasResponseDataJsonConverter$EntryDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData;
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResourceCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(BLjava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;
+#findAll(BLjava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResourceCollection;

+###org/apache/kafka/common/message/AlterIsrRequestData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterIsrRequestData$TopicData;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterIsrRequestData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterIsrRequestData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
-###org/apache/kafka/common/message/AlterIsrRequestData$TopicData

+###org/apache/kafka/common/message/AlterClientQuotasRequestDataJsonConverter$EntityDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntityData;
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntityData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntityData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#configs()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfigCollection;
+#next()I
+#prev()I
+#setResourceType(B)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;
+#setConfigs(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfigCollection;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterIsrResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterIsrResponseData;
+#write(Lorg/apache/kafka/common/message/AlterIsrResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterIsrResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
@3.2.0
-###org/apache/kafka/common/message/AlterIsrResponseDataJsonConverter

+###org/apache/kafka/common/message/CreateTopicsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateTopicsRequestData;
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#leaderId()I
+#leaderEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData;
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeDelegationTokenRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/InitProducerIdRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/InitProducerIdRequestData;
+#write(Lorg/apache/kafka/common/message/InitProducerIdRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/InitProducerIdRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochResponseDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchRequestData;
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition;
+#setNext(I)V
+#setPrev(I)V
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/MetadataResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/MetadataResponseData;
+#write(Lorg/apache/kafka/common/message/MetadataResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/MetadataResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateFeaturesResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/HeartbeatResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/HeartbeatResponseData;
+#write(Lorg/apache/kafka/common/message/HeartbeatResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/HeartbeatResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochResponseDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$TopicData;
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsResponseDataJsonConverter$CredentialInfoJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$CredentialInfo;
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$CredentialInfo;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$CredentialInfo;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseDataJsonConverter$OffsetFetchResponseTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopic;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData;
+#toString()Ljava/lang/String;
+#users()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setUsers(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetDeleteRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetDeleteRequestData;
+#write(Lorg/apache/kafka/common/message/OffsetDeleteRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetDeleteRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListPartitionReassignmentsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateTopicsRequestDataJsonConverter$CreatableTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateAclsResponseData$AclCreationResult
@2.5.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/CreateAclsResponseData$AclCreationResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsResponseData$AclCreationResult;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateAclsResponseData$AclCreationResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfigCollection;

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#id()I
+#v0Host()Ljava/lang/String;
+#v0Port()I
+#endpoints()Ljava/util/List;
+#rack()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setId(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;
+#setV0Host(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;
+#setV0Port(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;
+#setEndpoints(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;
+#setRack(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeDelegationTokenRequestDataJsonConverter$DescribeDelegationTokenOwnerJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData$DescribeDelegationTokenOwner;
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData$DescribeDelegationTokenOwner;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenRequestData$DescribeDelegationTokenOwner;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeLogDirsRequestDataJsonConverter$DescribableLogDirTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestDataJsonConverter$AlterReplicaLogDirJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$CredentialInfo
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$CredentialInfo;
+#toString()Ljava/lang/String;
+#mechanism()B
+#iterations()I
+#unknownTaggedFields()Ljava/util/List;
+#setMechanism(B)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$CredentialInfo;
+#setIterations(I)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$CredentialInfo;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterConfigsRequestDataJsonConverter$AlterConfigsResourceJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
+#write(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetRequestDataJsonConverter$ListOffsetPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition;
+#write(Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetRequestDataJsonConverter$ListOffsetPartitionJsonConverter

+###org/apache/kafka/common/message/DeleteTopicsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteTopicsResponseData;
+#write(Lorg/apache/kafka/common/message/DeleteTopicsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteTopicsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteRequestDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/VoteRequestData$TopicData;
+#write(Lorg/apache/kafka/common/message/VoteRequestData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/VoteRequestData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeGroupsResponseDataJsonConverter$DescribedGroupJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;
+#write(Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroup;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#groupInstanceId()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
+#reason()Ljava/lang/String;
+#setReason(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity;

+###org/apache/kafka/common/message/ApiVersionsResponseDataJsonConverter$FinalizedFeatureKeyJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;
+#toString()Ljava/lang/String;
+#leaderId()I
+#leaderEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setLeaderId(I)Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/InitProducerIdResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/InitProducerIdResponseData;
+#write(Lorg/apache/kafka/common/message/InitProducerIdResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/InitProducerIdResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/SaslAuthenticateRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;
+#write(Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/SaslAuthenticateRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetDeleteResponseData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#throttleTimeMs()I
+#topics()Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopicCollection;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetDeleteResponseData;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/OffsetDeleteResponseData;
+#setTopics(Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopicCollection;)Lorg/apache/kafka/common/message/OffsetDeleteResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeClientQuotasRequestData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;
+#toString()Ljava/lang/String;
+#components()Ljava/util/List;
+#strict()Z
+#unknownTaggedFields()Ljava/util/List;
+#setComponents(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;
+#setStrict(Z)Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/StopReplicaRequestData;
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateMetadataRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateMetadataRequestData;
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteAclsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteAclsResponseData;
+#write(Lorg/apache/kafka/common/message/DeleteAclsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteAclsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteAclsResponseDataJsonConverter$DeleteAclsMatchingAclJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;
+#write(Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsMatchingAcl;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeDelegationTokenResponseDataJsonConverter$DescribedDelegationTokenJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationToken;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteAclsRequestDataJsonConverter$DeleteAclsFilterJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;
+#write(Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteAclsRequestData$DeleteAclsFilter;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#minVersion()S
+#maxVersion()S
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;
+#setMinVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;
+#setMaxVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic;
+#setNext(I)V
+#setPrev(I)V
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersRequestDataJsonConverter$WritableTxnMarkerJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData$WritableTxnMarker;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsRequestData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#timeoutMs()I
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ElectLeadersResponseData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#replicaElectionResults()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ElectLeadersResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ElectLeadersResponseData;
+#setReplicaElectionResults(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectLeadersResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ElectLeadersResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/EndQuorumEpochRequestData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterClientQuotasRequestData$OpData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$OpData;
+#toString()Ljava/lang/String;
+#key()Ljava/lang/String;
+#value()D
+#remove()Z
+#unknownTaggedFields()Ljava/util/List;
+#setKey(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$OpData;
+#setValue(D)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$OpData;
+#setRemove(Z)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$OpData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestPartition
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestPartition;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateAclsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateAclsResponseData;
+#write(Lorg/apache/kafka/common/message/CreateAclsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateAclsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ProduceResponseDataJsonConverter$PartitionProduceResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;
+#write(Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ProduceResponseData$PartitionProduceResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult;
+#toString()Ljava/lang/String;
+#user()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setUser(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetCommitResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetCommitResponseData;
+#write(Lorg/apache/kafka/common/message/OffsetCommitResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetCommitResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfigCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;B)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;
+#findAll(Ljava/lang/String;B)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfigCollection;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/MetadataResponseDataJsonConverter$MetadataResponseTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#write(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateTopicsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateTopicsResponseData;
+#write(Lorg/apache/kafka/common/message/CreateTopicsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateTopicsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListPartitionReassignmentsRequestData$ListPartitionReassignmentsTopics
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData$ListPartitionReassignmentsTopics;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData$ListPartitionReassignmentsTopics;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData$ListPartitionReassignmentsTopics;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestDataJsonConverter$AlterReplicaLogDirTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListPartitionReassignmentsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter$LeaderIdAndEpochJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderAndIsrResponseDataJsonConverter$LeaderAndIsrPartitionErrorJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochResponseDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ControlledShutdownResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ControlledShutdownResponseData;
+#write(Lorg/apache/kafka/common/message/ControlledShutdownResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ControlledShutdownResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteResponseDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/VoteResponseData$TopicData;
+#write(Lorg/apache/kafka/common/message/VoteResponseData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/VoteResponseData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterIsrRequestDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;
+#write(Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
@3.2.0
-###org/apache/kafka/common/message/AlterIsrRequestDataJsonConverter$PartitionDataJsonConverter

+###org/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#replicas()Ljava/util/List;
+#addingReplicas()Ljava/util/List;
+#removingReplicas()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;
+#setReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;
+#setAddingReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;
+#setRemovingReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingPartitionReassignment;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaderAndIsrRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListGroupsResponseDataJsonConverter$ListedGroupJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListGroupsResponseData$ListedGroup;
+#write(Lorg/apache/kafka/common/message/ListGroupsResponseData$ListedGroup;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListGroupsResponseData$ListedGroup;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;
+#toString()Ljava/lang/String;
+#errorCode()S
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateFeaturesRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;
+#toString()Ljava/lang/String;
+#timeoutMs()I
+#featureUpdates()Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKeyCollection;
+#unknownTaggedFields()Ljava/util/List;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;
+#setFeatureUpdates(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKeyCollection;)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.3.0
+#validateOnly()Z
+#setValidateOnly(Z)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsResponseDataJsonConverter$ReassignablePartitionResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse;
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiVersionsResponseDataJsonConverter$SupportedFeatureKeyJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseData$EntityData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntityData;
+#toString()Ljava/lang/String;
+#entityType()Ljava/lang/String;
+#entityName()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setEntityType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntityData;
+#setEntityName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntityData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter$EpochEndOffsetJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ControlledShutdownResponseDataJsonConverter$RemainingPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;
+#write(Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#port()I
+#host()Ljava/lang/String;
+#listener()Ljava/lang/String;
+#securityProtocol()S
+#unknownTaggedFields()Ljava/util/List;
+#setPort(I)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;
+#setListener(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;
+#setSecurityProtocol(S)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsResponseDataJsonConverter$CreatableTopicConfigsJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;
+#write(Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ProduceResponseData$BatchIndexAndErrorMessage
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#batchIndex()I
+#batchIndexErrorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setBatchIndex(I)Lorg/apache/kafka/common/message/ProduceResponseData$BatchIndexAndErrorMessage;
+#setBatchIndexErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/ProduceResponseData$BatchIndexAndErrorMessage;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ProduceResponseData$BatchIndexAndErrorMessage;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/JoinGroupResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/JoinGroupResponseData;
+#write(Lorg/apache/kafka/common/message/JoinGroupResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/JoinGroupResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeLogDirsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/HeartbeatRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/HeartbeatRequestData;
+#write(Lorg/apache/kafka/common/message/HeartbeatRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/HeartbeatRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/RequestHeaderDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/RequestHeaderData;
+#write(Lorg/apache/kafka/common/message/RequestHeaderData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/RequestHeaderData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseDataJsonConverter$OffsetFetchResponsePartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetDeleteRequestDataJsonConverter$OffsetDeleteRequestPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestPartition;
+#write(Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;
+#toString()Ljava/lang/String;
+#user()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#credentialInfos()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setUser(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;
+#setCredentialInfos(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/SaslHandshakeResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SaslHandshakeResponseData;
+#write(Lorg/apache/kafka/common/message/SaslHandshakeResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/SaslHandshakeResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestDataJsonConverter$StopReplicaTopicV1JsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicV1;
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicV1;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicV1;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchRequestDataJsonConverter$OffsetFetchRequestTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopic;
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AddOffsetsToTxnRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;
+#write(Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AddOffsetsToTxnRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterConfigsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterConfigsResponseData;
+#write(Lorg/apache/kafka/common/message/AlterConfigsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterConfigsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumRequestData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeQuorumRequestData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeQuorumRequestData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumRequestData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FetchRequestDataJsonConverter$ForgottenTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;
+#write(Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchRequestData$ForgottenTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterClientQuotasRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetRequestData;
+#write(Lorg/apache/kafka/common/message/ListOffsetRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetRequestDataJsonConverter

+###org/apache/kafka/common/message/UpdateFeaturesResponseDataJsonConverter$UpdatableFeatureResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/JoinGroupRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/JoinGroupRequestData;
+#write(Lorg/apache/kafka/common/message/JoinGroupRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/JoinGroupRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsResponseDataJsonConverter$DescribeUserScramCredentialsResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData$DescribeUserScramCredentialsResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/IncrementalAlterConfigsResponseData
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#responses()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;
+#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetDeleteRequestData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#topics()Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopicCollection;
+#unknownTaggedFields()Ljava/util/List;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetDeleteRequestData;
+#setTopics(Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopicCollection;)Lorg/apache/kafka/common/message/OffsetDeleteRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderAndIsrResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/WriteTxnMarkersResponseDataJsonConverter$WritableTxnMarkerResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerResult;
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeConfigsResponseDataJsonConverter$DescribeConfigsSynonymJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym;
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsSynonym;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderAndIsrRequestDataJsonConverter$LeaderAndIsrTopicStateJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData;
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#entity()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData;
+#setEntity(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntryData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/EndQuorumEpochResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;
+#toString()Ljava/lang/String;
+#errorCode()S
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteTopicsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteTopicsRequestData;
+#write(Lorg/apache/kafka/common/message/DeleteTopicsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteTopicsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndTxnResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndTxnResponseData;
+#write(Lorg/apache/kafka/common/message/EndTxnResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndTxnResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResultCollection;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#entries()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;
+#setEntries(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ListOffsetResponseDataJsonConverter$ListOffsetTopicResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse;
+#write(Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetTopicResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetResponseDataJsonConverter$ListOffsetTopicResponseJsonConverter

+###org/apache/kafka/common/message/LeaderAndIsrRequestDataJsonConverter$LeaderAndIsrLiveLeaderJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrLiveLeader;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingTopicReassignment
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingTopicReassignment;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingTopicReassignment;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingTopicReassignment;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceResponseDataJsonConverter$BatchIndexAndErrorMessageJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ProduceResponseData$BatchIndexAndErrorMessage;
+#write(Lorg/apache/kafka/common/message/ProduceResponseData$BatchIndexAndErrorMessage;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ProduceResponseData$BatchIndexAndErrorMessage;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseDataJsonConverter$AddPartitionsToTxnTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/MetadataResponseDataJsonConverter$MetadataResponsePartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;
+#write(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponsePartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseData$ValueData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$ValueData;
+#toString()Ljava/lang/String;
+#key()Ljava/lang/String;
+#value()D
+#unknownTaggedFields()Ljava/util/List;
+#setKey(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$ValueData;
+#setValue(D)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$ValueData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKeyCollection
@2.7.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKey;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$SupportedFeatureKeyCollection;

+###org/apache/kafka/common/message/DescribeLogDirsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListPartitionReassignmentsRequestData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#timeoutMs()I
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTimeoutMs(I)Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/TxnOffsetCommitRequestDataJsonConverter$TxnOffsetCommitRequestPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData$TxnOffsetCommitRequestPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteAclsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteAclsRequestData;
+#write(Lorg/apache/kafka/common/message/DeleteAclsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteAclsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirTopicCollection;

+###org/apache/kafka/common/message/DescribeQuorumRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeQuorumRequestData;
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseDataJsonConverter$OffsetForLeaderPartitionResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderPartitionResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/OffsetForLeaderEpochResponseDataJsonConverter$OffsetForLeaderPartitionResultJsonConverter

+###org/apache/kafka/common/message/IncrementalAlterConfigsResponseDataJsonConverter$AlterConfigsResourceResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;I)Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartition;
+#findAll(Ljava/lang/String;I)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/ControlledShutdownResponseData$RemainingPartitionCollection;

+###org/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartitionCollection
@2.4.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition;
+#findAll(I)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartitionCollection;

+###org/apache/kafka/common/message/DescribeQuorumResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#toString()Ljava/lang/String;
+#errorCode()S
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#maxVersionLevel()S
+#minVersionLevel()S
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;
+#setMaxVersionLevel(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;
+#setMinVersionLevel(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaveGroupRequestDataJsonConverter$MemberIdentityJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity;
+#write(Lorg/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaveGroupRequestData$MemberIdentity;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterClientQuotasRequestData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;
+#toString()Ljava/lang/String;
+#entries()Ljava/util/List;
+#validateOnly()Z
+#unknownTaggedFields()Ljava/util/List;
+#setEntries(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;
+#setValidateOnly(Z)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/FetchResponseData$EpochEndOffset
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;
+#toString()Ljava/lang/String;
+#epoch()I
+#endOffset()J
+#unknownTaggedFields()Ljava/util/List;
+#setEpoch(I)Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;
+#setEndOffset(J)Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/WriteTxnMarkersResponseDataJsonConverter$WritableTxnMarkerPartitionResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerPartitionResult;
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerPartitionResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerPartitionResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateAclsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateAclsRequestData;
+#write(Lorg/apache/kafka/common/message/CreateAclsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateAclsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterIsrRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterIsrRequestData;
+#toString()Ljava/lang/String;
+#brokerId()I
+#brokerEpoch()J
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setBrokerId(I)Lorg/apache/kafka/common/message/AlterIsrRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/AlterIsrRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterIsrRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
-###org/apache/kafka/common/message/AlterIsrRequestData

+###org/apache/kafka/common/message/AlterPartitionReassignmentsRequestDataJsonConverter$ReassignableTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignableTopic;
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignableTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignableTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#leaderEpoch()I
+#deletePartition()Z
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState;
+#setDeletePartition(Z)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition;
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#next()I
+#prev()I
+#setNext(I)V
+#setPrev(I)V

+###org/apache/kafka/common/message/AlterClientQuotasRequestDataJsonConverter$EntryDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntryData;
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntryData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntryData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreatePartitionsRequestDataJsonConverter$CreatePartitionsTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;
+#write(Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ConsumerProtocolAssignmentJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetForLeaderEpochRequestDataJsonConverter$OffsetForLeaderPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FindCoordinatorResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FindCoordinatorResponseData;
+#write(Lorg/apache/kafka/common/message/FindCoordinatorResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FindCoordinatorResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListGroupsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListGroupsRequestData;
+#write(Lorg/apache/kafka/common/message/ListGroupsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListGroupsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/SaslHandshakeRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SaslHandshakeRequestData;
+#write(Lorg/apache/kafka/common/message/SaslHandshakeRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/SaslHandshakeRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeAclsResponseDataJsonConverter$DescribeAclsResourceJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;
+#write(Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeAclsResponseData$DescribeAclsResource;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumRequestDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeQuorumRequestData$PartitionData;
+#write(Lorg/apache/kafka/common/message/DescribeQuorumRequestData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeQuorumRequestData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterUserScramCredentialsRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;
+#toString()Ljava/lang/String;
+#deletions()Ljava/util/List;
+#upsertions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setDeletions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;
+#setUpsertions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateTopicsRequestDataJsonConverter$CreateableTopicConfigJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreateableTopicConfig;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiVersionsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ApiVersionsRequestData;
+#write(Lorg/apache/kafka/common/message/ApiVersionsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ApiVersionsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FindCoordinatorRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FindCoordinatorRequestData;
+#write(Lorg/apache/kafka/common/message/FindCoordinatorRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FindCoordinatorRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterConfigsResponseDataJsonConverter$AlterConfigsResourceResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;
+#write(Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterConfigsResponseData$AlterConfigsResourceResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteRecordsRequestDataJsonConverter$DeleteRecordsTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsTopic;
+#write(Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumRequestDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeQuorumRequestData$TopicData;
+#write(Lorg/apache/kafka/common/message/DescribeQuorumRequestData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeQuorumRequestData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateMetadataRequestDataJsonConverter$UpdateMetadataPartitionStateJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataPartitionState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ElectLeadersRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ElectLeadersRequestData;
+#write(Lorg/apache/kafka/common/message/ElectLeadersRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ElectLeadersRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochRequestData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#memberId()Ljava/lang/String;
+#groupInstanceId()Ljava/lang/String;
+#errorCode()S
+#unknownTaggedFields()Ljava/util/List;
+#setMemberId(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse;
+#setGroupInstanceId(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse;
+#setErrorCode(S)Lorg/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData;
+#toString()Ljava/lang/String;
+#entityType()Ljava/lang/String;
+#matchType()B
+#match()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setEntityType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData;
+#setMatchType(B)Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData;
+#setMatch(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterIsrRequestData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#leaderEpoch()I
+#newIsr()Ljava/util/List;
+#currentIsrVersion()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;
+#setNewIsr(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;
+#setCurrentIsrVersion(I)Lorg/apache/kafka/common/message/AlterIsrRequestData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
-###org/apache/kafka/common/message/AlterIsrRequestData$PartitionData

+###org/apache/kafka/common/message/AlterIsrResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterIsrResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AlterIsrResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterIsrResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterIsrResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
-###org/apache/kafka/common/message/AlterIsrResponseData

+###org/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(BLjava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResource;
+#findAll(BLjava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterConfigsResourceCollection;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseDataJsonConverter$EntityDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntityData;
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntityData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntityData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteRecordsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteRecordsResponseData;
+#write(Lorg/apache/kafka/common/message/DeleteRecordsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteRecordsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateAclsRequestData$AclCreation
@2.5.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#resourcePatternType()B
+#principal()Ljava/lang/String;
+#host()Ljava/lang/String;
+#operation()B
+#permissionType()B
+#unknownTaggedFields()Ljava/util/List;
+#setResourceType(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#setResourcePatternType(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#setPrincipal(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#setOperation(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#setPermissionType(B)Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateAclsRequestData$AclCreation;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeLogDirsResponseDataJsonConverter$DescribeLogDirsTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsTopic;
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/WriteTxnMarkersRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData;
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetCommitResponseDataJsonConverter$OffsetCommitResponsePartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponsePartition;
+#write(Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponsePartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponsePartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeUserScramCredentialsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/TxnOffsetCommitRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ElectLeadersResponseData$ReplicaElectionResult
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitionResult()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/ElectLeadersResponseData$ReplicaElectionResult;
+#setPartitionResult(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectLeadersResponseData$ReplicaElectionResult;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ElectLeadersResponseData$ReplicaElectionResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetDeleteRequestDataJsonConverter$OffsetDeleteRequestTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic;
+#write(Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ConsumerProtocolAssignmentJsonConverter$TopicPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition;
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;
+#toString()Ljava/lang/String;
+#clusterId()Ljava/lang/String;
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterClientQuotasResponseData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#entries()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;
+#setEntries(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreateDelegationTokenRequestDataJsonConverter$CreatableRenewersJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData$CreatableRenewers;
+#write(Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData$CreatableRenewers;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData$CreatableRenewers;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterUserScramCredentialsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochRequestDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData;
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/JoinGroupResponseDataJsonConverter$JoinGroupResponseMemberJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember;
+#write(Lorg/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/JoinGroupResponseData$JoinGroupResponseMember;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResultCollection;

+###org/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#leaderId()I
+#leaderEpoch()I
+#highWatermark()J
+#currentVoters()Ljava/util/List;
+#observers()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#setHighWatermark(J)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#setCurrentVoters(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#setObservers(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/CreatePartitionsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreatePartitionsRequestData;
+#write(Lorg/apache/kafka/common/message/CreatePartitionsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreatePartitionsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumResponseDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$TopicData;
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeGroupsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeGroupsRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeGroupsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeGroupsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchRequestDataJsonConverter$FetchTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchRequestData$FetchTopic;
+#write(Lorg/apache/kafka/common/message/FetchRequestData$FetchTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchRequestData$FetchTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignableTopic
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignableTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignableTopic;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignableTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataRequestDataJsonConverter$UpdateMetadataEndpointJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataEndpoint;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterIsrResponseData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#leaderId()I
+#leaderEpoch()I
+#isr()Ljava/util/List;
+#currentIsrVersion()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#setIsr(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#setCurrentIsrVersion(I)Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
-###org/apache/kafka/common/message/AlterIsrResponseData$PartitionData

+###org/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionId()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionId(I)Lorg/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ControlledShutdownRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ControlledShutdownRequestData;
+#write(Lorg/apache/kafka/common/message/ControlledShutdownRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ControlledShutdownRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaResponseDataJsonConverter$StopReplicaPartitionErrorJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError;
+#write(Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchResponseData;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#value()Ljava/lang/String;
+#readOnly()Z
+#configSource()B
+#isSensitive()Z
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;
+#setValue(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;
+#setReadOnly(Z)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;
+#setConfigSource(B)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;
+#setIsSensitive(Z)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicConfigs;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateMetadataRequestDataJsonConverter$UpdateMetadataTopicStateJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState;
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AddPartitionsToTxnRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopicCollection
@2.4.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteRequestData$OffsetDeleteRequestTopicCollection;

+###org/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfigCollection;

+###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseTopicCollection;

+###org/apache/kafka/common/message/LeaveGroupResponseDataJsonConverter$MemberResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse;
+#write(Lorg/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaveGroupResponseData$MemberResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeGroupsResponseDataJsonConverter$DescribedGroupMemberJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;
+#write(Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeGroupsResponseData$DescribedGroupMember;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateTopicsRequestDataJsonConverter$CreatableReplicaAssignmentJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterIsrResponseDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;
+#write(Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterIsrResponseData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
@3.2.0
-###org/apache/kafka/common/message/AlterIsrResponseDataJsonConverter$PartitionDataJsonConverter

+###org/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKeyCollection
@2.7.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKeyCollection;

+###org/apache/kafka/common/message/FetchRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchRequestData;
+#write(Lorg/apache/kafka/common/message/FetchRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreatePartitionsResponseDataJsonConverter$CreatePartitionsTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult;
+#write(Lorg/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreatePartitionsResponseData$CreatePartitionsTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteTopicsResponseDataJsonConverter$DeletableTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;
+#write(Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochRequestDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$TopicData;
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitionId()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;
+#setPartitionId(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#partitions()Ljava/util/List;
+#next()I
+#prev()I
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;
+#setNext(I)V
+#setPrev(I)V
-#partitionId()Ljava/util/List;
-#setPartitionId(Ljava/util/List;)Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;

+###org/apache/kafka/common/message/ListOffsetRequestDataJsonConverter$ListOffsetTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic;
+#write(Lorg/apache/kafka/common/message/ListOffsetRequestData$ListOffsetTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetRequestDataJsonConverter$ListOffsetTopicJsonConverter

+###org/apache/kafka/common/message/ProduceResponseDataJsonConverter$TopicProduceResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;
+#write(Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestDataJsonConverter$StopReplicaPartitionStateJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState;
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeGroupsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeGroupsResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeGroupsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeGroupsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter$AbortedTransactionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData$AbortedTransaction;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$AbortedTransaction;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchResponseData$AbortedTransaction;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderChangeMessageJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderChangeMessage;
+#write(Lorg/apache/kafka/common/message/LeaderChangeMessage;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderChangeMessage;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetCommitRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetCommitRequestData;
+#write(Lorg/apache/kafka/common/message/OffsetCommitRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetCommitRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BeginQuorumEpochResponseData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaderAndIsrRequestDataJsonConverter$LeaderAndIsrPartitionStateJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumRequestData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeQuorumRequestData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/DescribeQuorumRequestData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeUserScramCredentialsResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#results()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;
+#setResults(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/IncrementalAlterConfigsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseDataJsonConverter$EntryDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntryData;
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntryData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$EntryData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetDeleteResponseDataJsonConverter$OffsetDeleteResponseTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic;
+#write(Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/MetadataRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/MetadataRequestData;
+#write(Lorg/apache/kafka/common/message/MetadataRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/MetadataRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocol;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/JoinGroupRequestData$JoinGroupRequestProtocolCollection;

+###org/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartitionCollection;
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic;
+#setPartitions(Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartitionCollection;)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic;
+#setNext(I)V
+#setPrev(I)V
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterIsrResponseData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterIsrResponseData$TopicData;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterIsrResponseData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterIsrResponseData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
-###org/apache/kafka/common/message/AlterIsrResponseData$TopicData

+###org/apache/kafka/common/message/DescribeConfigsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeConfigsRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeConfigsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeConfigsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignment;
+#findAll(I)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableReplicaAssignmentCollection;

+###org/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopicCollection
@2.7.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsTopicCollection;

+###org/apache/kafka/common/message/RenewDelegationTokenRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;
+#write(Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/RenewDelegationTokenRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterIsrResponseDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterIsrResponseData$TopicData;
+#write(Lorg/apache/kafka/common/message/AlterIsrResponseData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterIsrResponseData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
@3.2.0
-###org/apache/kafka/common/message/AlterIsrResponseDataJsonConverter$TopicDataJsonConverter

+###org/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError;
+#setErrorCode(S)Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/StopReplicaResponseData$StopReplicaPartitionError;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaveGroupRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaveGroupRequestData;
+#write(Lorg/apache/kafka/common/message/LeaveGroupRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaveGroupRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateTopicsResponseDataJsonConverter$CreatableTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;
+#write(Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateTopicsResponseData$CreatableTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResultCollection
@2.6.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResultCollection;

+###org/apache/kafka/common/message/DescribeConfigsResponseDataJsonConverter$DescribeConfigsResourceResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResourceResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteAclsResponseDataJsonConverter$DeleteAclsFilterResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;
+#write(Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteAclsResponseData$DeleteAclsFilterResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestDataJsonConverter$StopReplicaTopicStateJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicState;
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicState;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteGroupsResponseDataJsonConverter$DeletableGroupResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;
+#write(Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteGroupsResponseData$DeletableGroupResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnTopicResultCollection;

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#configOperation()B
+#value()Ljava/lang/String;
+#next()I
+#prev()I
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;
+#setConfigOperation(B)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;
+#setValue(Ljava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;
+#setNext(I)V
+#setPrev(I)V
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#duplicate()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterableConfig;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterClientQuotasResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition;
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#next()I
+#prev()I
+#setNext(I)V
+#setPrev(I)V

+###org/apache/kafka/common/message/DeleteRecordsResponseDataJsonConverter$DeleteRecordsPartitionResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;
+#write(Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochRequestDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumResponseDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;
+#toString()Ljava/lang/String;
+#feature()Ljava/lang/String;
+#maxVersionLevel()S
+#allowDowngrade()Z
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setFeature(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;
+#setMaxVersionLevel(S)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;
+#setAllowDowngrade(Z)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.3.0
+#upgradeType()B
+#setUpgradeType(B)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;

+###org/apache/kafka/common/message/DescribeDelegationTokenResponseDataJsonConverter$DescribedDelegationTokenRenewerJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationTokenRenewer;
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationTokenRenewer;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeDelegationTokenResponseData$DescribedDelegationTokenRenewer;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateMetadataRequestDataJsonConverter$UpdateMetadataBrokerJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataBroker;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateFeaturesRequestDataJsonConverter$FeatureUpdateKeyJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochResponseDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$TopicData;
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter$FetchablePartitionResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchResponseData$FetchablePartitionResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
@3.0.0
-###org/apache/kafka/common/message/FetchResponseDataJsonConverter$FetchablePartitionResponseJsonConverter

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData;
+#write(Lorg/apache/kafka/common/message/FetchResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateFeaturesResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#results()Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResultCollection;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;
+#setResults(Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResultCollection;)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDir;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/AlterReplicaLogDirsRequestData$AlterReplicaLogDirCollection;

+###org/apache/kafka/common/message/ListPartitionReassignmentsResponseData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/EndQuorumEpochResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionStates()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState;
+#setPartitionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrTopicState;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/LeaveGroupResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaveGroupResponseData;
+#write(Lorg/apache/kafka/common/message/LeaveGroupResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/LeaveGroupResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClientQuotasRequestDataJsonConverter$ComponentDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData;
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData$ComponentData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopicCollection
@2.4.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponseTopicCollection;

+###org/apache/kafka/common/message/ElectLeadersRequestDataJsonConverter$TopicPartitionsJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;
+#write(Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteRequestData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#candidateEpoch()I
+#candidateId()I
+#lastOffsetEpoch()I
+#lastOffset()J
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;
+#setCandidateEpoch(I)Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;
+#setCandidateId(I)Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;
+#setLastOffsetEpoch(I)Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;
+#setLastOffset(J)Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ListPartitionReassignmentsResponseDataJsonConverter$OngoingTopicReassignmentJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingTopicReassignment;
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingTopicReassignment;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData$OngoingTopicReassignment;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeLogDirsResponseDataJsonConverter$DescribeLogDirsPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/WriteTxnMarkersResponseDataJsonConverter$WritableTxnMarkerTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerTopicResult;
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/WriteTxnMarkersResponseData$WritableTxnMarkerTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/SyncGroupRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SyncGroupRequestData;
+#write(Lorg/apache/kafka/common/message/SyncGroupRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/SyncGroupRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#findAll(I)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBrokerCollection;

+###org/apache/kafka/common/message/ListGroupsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListGroupsResponseData;
+#write(Lorg/apache/kafka/common/message/ListGroupsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListGroupsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteRequestData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/VoteRequestData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/VoteRequestData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/VoteRequestData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResultCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/DeleteTopicsResponseData$DeletableTopicResultCollection;

+###org/apache/kafka/common/message/VoteRequestDataJsonConverter$PartitionDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;
+#write(Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/VoteRequestData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateAclsResponseDataJsonConverter$AclCreationResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateAclsResponseData$AclCreationResult;
+#write(Lorg/apache/kafka/common/message/CreateAclsResponseData$AclCreationResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateAclsResponseData$AclCreationResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreatePartitionsRequestDataJsonConverter$CreatePartitionsAssignmentJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsAssignment;
+#write(Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsAssignment;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreatePartitionsRequestData$CreatePartitionsAssignment;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreatePartitionsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreatePartitionsResponseData;
+#write(Lorg/apache/kafka/common/message/CreatePartitionsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreatePartitionsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterReplicaLogDirsResponseDataJsonConverter$AlterReplicaLogDirTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirTopicResult;
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData$AlterReplicaLogDirTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ConsumerProtocolSubscriptionJsonConverter$TopicPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition;
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeConfigsRequestDataJsonConverter$DescribeConfigsResourceJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource;
+#write(Lorg/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeConfigsRequestData$DescribeConfigsResource;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterIsrRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterIsrRequestData;
+#write(Lorg/apache/kafka/common/message/AlterIsrRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterIsrRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
@3.2.0
-###org/apache/kafka/common/message/AlterIsrRequestDataJsonConverter

+###org/apache/kafka/common/message/LeaderChangeMessage
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/LeaderChangeMessage;
+#toString()Ljava/lang/String;
+#leaderId()I
+#voters()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setLeaderId(I)Lorg/apache/kafka/common/message/LeaderChangeMessage;
+#setVoters(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderChangeMessage;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#grantingVoters()Ljava/util/List;
+#setGrantingVoters(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderChangeMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#version()S
+#setVersion(S)Lorg/apache/kafka/common/message/LeaderChangeMessage;

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResult;
+#findAll(I)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData$AddPartitionsToTxnPartitionResultCollection;

+###org/apache/kafka/common/message/DescribeClientQuotasResponseDataJsonConverter$ValueDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$ValueData;
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$ValueData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData$ValueData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#toString()Ljava/lang/String;
+#clusterId()Ljava/lang/String;
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterClientQuotasResponseDataJsonConverter$EntityDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntityData;
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntityData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntityData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ExpireDelegationTokenResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;
+#write(Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ExpireDelegationTokenResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/TxnOffsetCommitResponseDataJsonConverter$TxnOffsetCommitResponsePartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponsePartition;
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponsePartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData$TxnOffsetCommitResponsePartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#replicaId()I
+#leaderId()I
+#leaderEpoch()I
+#preferredSuccessors()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;
+#setReplicaId(I)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;
+#setPreferredSuccessors(Ljava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
-#replicaId()I
-#setReplicaId(I)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$PartitionData;

+###org/apache/kafka/common/message/AddOffsetsToTxnResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;
+#write(Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AddOffsetsToTxnResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/MetadataResponseDataJsonConverter$MetadataResponseBrokerJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;
+#write(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/MetadataResponseData$MetadataResponseBroker;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateDelegationTokenResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;
+#write(Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateDelegationTokenResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteResponseData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/VoteResponseData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/VoteResponseData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/VoteResponseData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestData
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#resources()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResourceCollection;
+#validateOnly()Z
+#setResources(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResourceCollection;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;
+#setValidateOnly(Z)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;
@2.4.0
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#unknownTaggedFields()Ljava/util/List;
-#write(Lorg/apache/kafka/common/protocol/Writable;S)V
-#size(S)I
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsResponseDataJsonConverter$ApiVersionsResponseKeyJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ApiVersionsResponseDataJsonConverter$ApiVersionsResponseKeyJsonConverter

+###org/apache/kafka/common/message/DeleteRecordsRequestDataJsonConverter$DeleteRecordsPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsPartition;
+#write(Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteRecordsRequestData$DeleteRecordsPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteGroupsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteGroupsRequestData;
+#write(Lorg/apache/kafka/common/message/DeleteGroupsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteGroupsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterUserScramCredentialsResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#results()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;
+#setResults(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/UpdateFeaturesRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/IncrementalAlterConfigsRequestDataJsonConverter$AlterConfigsResourceJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData$AlterConfigsResource;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter$FetchableTopicResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchResponseData$FetchableTopicResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKey;
+#findAll(S)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection;
@2.8.0
-###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionsResponseKeyCollection

+###org/apache/kafka/common/message/DescribeAclsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeAclsRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeAclsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeAclsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/MetadataRequestDataJsonConverter$MetadataRequestTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/MetadataRequestData$MetadataRequestTopic;
+#write(Lorg/apache/kafka/common/message/MetadataRequestData$MetadataRequestTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/MetadataRequestData$MetadataRequestTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchRequestDataJsonConverter$FetchPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;
+#write(Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/FetchRequestData$FetchPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeConfigsResponseDataJsonConverter$DescribeConfigsResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeConfigsResponseData$DescribeConfigsResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiMessageType
@2.3.0
+#values()[Lorg/apache/kafka/common/message/ApiMessageType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiMessageType;
+#fromApiKey(S)Lorg/apache/kafka/common/message/ApiMessageType;
+#newRequest()Lorg/apache/kafka/common/protocol/ApiMessage;
+#newResponse()Lorg/apache/kafka/common/protocol/ApiMessage;
+#apiKey()S
+#requestSchemas()[Lorg/apache/kafka/common/protocol/types/Schema;
+#responseSchemas()[Lorg/apache/kafka/common/protocol/types/Schema;
+#toString()Ljava/lang/String;
@2.4.0
+#requestHeaderVersion(S)S
+#responseHeaderVersion(S)S
@2.8.0
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#listeners()Ljava/util/EnumSet;

+###org/apache/kafka/common/message/ResponseHeaderDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ResponseHeaderData;
+#write(Lorg/apache/kafka/common/message/ResponseHeaderData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ResponseHeaderData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetCommitRequestDataJsonConverter$OffsetCommitRequestPartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;
+#write(Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetCommitRequestData$OffsetCommitRequestPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochResponseData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialDeletion
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialDeletion;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#mechanism()B
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialDeletion;
+#setMechanism(B)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialDeletion;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeQuorumResponseData$TopicData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeQuorumResponseData$TopicData;
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignableTopicResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignableTopicResponse;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignableTopicResponse;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignableTopicResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterClientQuotasRequestData$EntityData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntityData;
+#toString()Ljava/lang/String;
+#entityType()Ljava/lang/String;
+#entityName()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setEntityType(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntityData;
+#setEntityName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntityData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeLogDirsResponseDataJsonConverter$DescribeLogDirsResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeLogDirsResponseData$DescribeLogDirsResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderChangeMessage$Voter
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/LeaderChangeMessage$Voter;
+#toString()Ljava/lang/String;
+#voterId()I
+#unknownTaggedFields()Ljava/util/List;
+#setVoterId(I)Lorg/apache/kafka/common/message/LeaderChangeMessage$Voter;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/DescribeQuorumResponseDataJsonConverter$ReplicaStateJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData$ReplicaState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AddPartitionsToTxnResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;
+#setResourceType(B)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ProduceRequestDataJsonConverter$TopicProduceDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;
+#write(Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicV1
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicV1;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicV1;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopicV1;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterUserScramCredentialsRequestDataJsonConverter$ScramCredentialUpsertionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/TxnOffsetCommitResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/TxnOffsetCommitResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterClientQuotasRequestData$EntryData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntryData;
+#toString()Ljava/lang/String;
+#entity()Ljava/util/List;
+#ops()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setEntity(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntryData;
+#setOps(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$EntryData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterConfigsRequestDataJsonConverter$AlterableConfigJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;
+#write(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterConfigsRequestData$AlterableConfig;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsResponseData
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#responses()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;
+#setResponses(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterUserScramCredentialsRequestDataJsonConverter$ScramCredentialDeletionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialDeletion;
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialDeletion;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialDeletion;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ExpireDelegationTokenRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;
+#write(Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ExpireDelegationTokenRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeQuorumRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeQuorumRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeQuorumRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeQuorumRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteRecordsResponseDataJsonConverter$DeleteRecordsTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;
+#write(Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndQuorumEpochRequestDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$TopicData;
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndQuorumEpochRequestData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ProduceResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ProduceResponseData;
+#write(Lorg/apache/kafka/common/message/ProduceResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ProduceResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteGroupsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteGroupsResponseData;
+#write(Lorg/apache/kafka/common/message/DeleteGroupsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteGroupsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeAclsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeAclsResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeAclsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeAclsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKeyCollection
@2.7.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKey;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$FinalizedFeatureKeyCollection;

+###org/apache/kafka/common/message/AddPartitionsToTxnRequestDataJsonConverter$AddPartitionsToTxnTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/StopReplicaResponseData;
+#write(Lorg/apache/kafka/common/message/StopReplicaResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/StopReplicaResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ConsumerProtocolSubscriptionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterReplicaLogDirsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterReplicaLogDirsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteRequestData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/VoteRequestData;
+#toString()Ljava/lang/String;
+#clusterId()Ljava/lang/String;
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/VoteRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/VoteRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterClientQuotasResponseData$EntityData
@2.6.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntityData;
+#toString()Ljava/lang/String;
+#entityType()Ljava/lang/String;
+#entityName()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setEntityType(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntityData;
+#setEntityName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterClientQuotasResponseData$EntityData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/VoteResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/VoteResponseData;
+#write(Lorg/apache/kafka/common/message/VoteResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/VoteResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseDataJsonConverter$OffsetForLeaderTopicResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#mechanism()B
+#iterations()I
+#salt()[B
+#saltedPassword()[B
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;
+#setMechanism(B)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;
+#setIterations(I)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;
+#setSalt([B)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;
+#setSaltedPassword([B)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData$ScramCredentialUpsertion;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ElectLeadersResponseDataJsonConverter$PartitionResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult;
+#write(Lorg/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ElectLeadersResponseData$PartitionResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionV0
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionV0;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionV0;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionV0;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/RenewDelegationTokenResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;
+#write(Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/RenewDelegationTokenResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsResponseDataJsonConverter$ReassignableTopicResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignableTopicResponse;
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignableTopicResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignableTopicResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetDeleteResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetDeleteResponseData;
+#write(Lorg/apache/kafka/common/message/OffsetDeleteResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetDeleteResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ElectLeadersResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ElectLeadersResponseData;
+#write(Lorg/apache/kafka/common/message/ElectLeadersResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ElectLeadersResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetResponseData;
+#write(Lorg/apache/kafka/common/message/ListOffsetResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetResponseDataJsonConverter

+###org/apache/kafka/common/message/OffsetCommitResponseDataJsonConverter$OffsetCommitResponseTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponseTopic;
+#write(Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponseTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetCommitResponseData$OffsetCommitResponseTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetForLeaderEpochRequestDataJsonConverter$OffsetForLeaderTopicJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/SyncGroupRequestDataJsonConverter$SyncGroupRequestAssignmentJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SyncGroupRequestData$SyncGroupRequestAssignment;
+#write(Lorg/apache/kafka/common/message/SyncGroupRequestData$SyncGroupRequestAssignment;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/SyncGroupRequestData$SyncGroupRequestAssignment;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/AddPartitionsToTxnRequestData$AddPartitionsToTxnTopicCollection;

+###org/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#controllerEpoch()I
+#leader()I
+#leaderEpoch()I
+#isr()Ljava/util/List;
+#zkVersion()I
+#replicas()Ljava/util/List;
+#addingReplicas()Ljava/util/List;
+#removingReplicas()Ljava/util/List;
+#isNew()Z
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setControllerEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setLeader(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setIsr(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setZkVersion(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setAddingReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setRemovingReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#setIsNew(Z)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.2.0
+#leaderRecoveryState()B
+#setLeaderRecoveryState(B)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
@3.3.0
+#partitionEpoch()I
+#setPartitionEpoch(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;
-#zkVersion()I
-#setZkVersion(I)Lorg/apache/kafka/common/message/LeaderAndIsrRequestData$LeaderAndIsrPartitionState;

+###org/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionStates()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState;
+#setPartitionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/UpdateMetadataRequestData$UpdateMetadataTopicState;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterClientQuotasRequestDataJsonConverter$OpDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$OpData;
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$OpData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData$OpData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/CreateDelegationTokenRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;
+#write(Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/CreateDelegationTokenRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeAclsResponseDataJsonConverter$AclDescriptionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;
+#write(Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeAclsResponseData$AclDescription;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignablePartition
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#replicas()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignablePartition;
+#setReplicas(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignablePartition;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData$ReassignablePartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterUserScramCredentialsResponseDataJsonConverter$AlterUserScramCredentialsResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult;
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData$AlterUserScramCredentialsResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ElectLeadersResponseDataJsonConverter$ReplicaElectionResultJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ElectLeadersResponseData$ReplicaElectionResult;
+#write(Lorg/apache/kafka/common/message/ElectLeadersResponseData$ReplicaElectionResult;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ElectLeadersResponseData$ReplicaElectionResult;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;
+#toString()Ljava/lang/String;
+#feature()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setFeature(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;
+#setErrorCode(S)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/AlterIsrRequestDataJsonConverter$TopicDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterIsrRequestData$TopicData;
+#write(Lorg/apache/kafka/common/message/AlterIsrRequestData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterIsrRequestData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
@3.2.0
-###org/apache/kafka/common/message/AlterIsrRequestDataJsonConverter$TopicDataJsonConverter

+###org/apache/kafka/common/message/UpdateMetadataResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UpdateMetadataResponseData;
+#write(Lorg/apache/kafka/common/message/UpdateMetadataResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/UpdateMetadataResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteResponseData$PartitionData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#leaderId()I
+#leaderEpoch()I
+#voteGranted()Z
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;
+#setVoteGranted(Z)Lorg/apache/kafka/common/message/VoteResponseData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/ApiVersionsResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ApiVersionsResponseData;
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/VoteRequestData;
+#write(Lorg/apache/kafka/common/message/VoteRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/VoteRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterConfigsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterConfigsRequestData;
+#write(Lorg/apache/kafka/common/message/AlterConfigsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterConfigsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/SyncGroupResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SyncGroupResponseData;
+#write(Lorg/apache/kafka/common/message/SyncGroupResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/SyncGroupResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterUserScramCredentialsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResultCollection
@2.6.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResult;
+#findAll(I)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/DeleteRecordsResponseData$DeleteRecordsPartitionResultCollection;

+###org/apache/kafka/common/message/DescribeQuorumResponseDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeQuorumResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#topicName()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#unknownTaggedFields()Ljava/util/List;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError;
+#setErrorCode(S)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrPartitionError;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/OffsetDeleteResponseDataJsonConverter$OffsetDeleteResponsePartitionJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition;
+#write(Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/OffsetDeleteResponseData$OffsetDeleteResponsePartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ConsumerProtocolSubscription
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#userData()Ljava/nio/ByteBuffer;
+#ownedPartitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
+#setUserData(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
+#setOwnedPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#ownedPartitions()Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartitionCollection;
+#setOwnedPartitions(Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartitionCollection;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
-#ownedPartitions()Ljava/util/List;
-#setOwnedPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
@3.4.0
+#generationId()I
+#rackId()Ljava/lang/String;
+#setGenerationId(I)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;
+#setRackId(Ljava/lang/String;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription;

+###org/apache/kafka/common/message/ConsumerProtocolAssignment
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;
+#toString()Ljava/lang/String;
+#assignedPartitions()Ljava/util/List;
+#userData()Ljava/nio/ByteBuffer;
+#unknownTaggedFields()Ljava/util/List;
+#setAssignedPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;
+#setUserData(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.0.0
+#assignedPartitions()Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartitionCollection;
+#setAssignedPartitions(Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartitionCollection;)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;
-#assignedPartitions()Ljava/util/List;
-#setAssignedPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment;

+###org/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopicCollection
@2.6.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/DescribeLogDirsRequestData$DescribableLogDirTopicCollection;

+###org/apache/kafka/common/message/ListOffsetResponseDataJsonConverter$ListOffsetPartitionResponseJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;
+#write(Lorg/apache/kafka/common/message/ListOffsetResponseData$ListOffsetPartitionResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
-###org/apache/kafka/common/message/ListOffsetResponseDataJsonConverter$ListOffsetPartitionResponseJsonConverter

+###org/apache/kafka/common/message/DescribeUserScramCredentialsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteRecordsRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteRecordsRequestData;
+#write(Lorg/apache/kafka/common/message/DeleteRecordsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DeleteRecordsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/VoteResponseData
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/VoteResponseData;
+#toString()Ljava/lang/String;
+#errorCode()S
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/VoteResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/VoteResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/message/StopReplicaRequestDataJsonConverter$StopReplicaPartitionV0JsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionV0;
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionV0;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaPartitionV0;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EndTxnRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EndTxnRequestData;
+#write(Lorg/apache/kafka/common/message/EndTxnRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/EndTxnRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListPartitionReassignmentsRequestDataJsonConverter$ListPartitionReassignmentsTopicsJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData$ListPartitionReassignmentsTopics;
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData$ListPartitionReassignmentsTopics;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData$ListPartitionReassignmentsTopics;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ProduceRequestDataJsonConverter$PartitionProduceDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;
+#write(Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/ProduceRequestData$PartitionProduceData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClientQuotasRequestDataJsonConverter
@2.7.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#write(Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResultCollection
@2.7.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/UpdateFeaturesResponseData$UpdatableFeatureResultCollection;

+###org/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopicCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
@2.6.0
+#duplicate()Lorg/apache/kafka/common/message/CreateTopicsRequestData$CreatableTopicCollection;

+###org/apache/kafka/common/message/FetchRequestData$FetchTopic
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchRequestData$FetchTopic;
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchRequestData$FetchTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchRequestData$FetchTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
@3.1.0
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/FetchRequestData$FetchTopic;

+###org/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse;
@2.6.0
+#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
+#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData$ReassignablePartitionResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@2.6.1
-#<init>(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#fromJson(Lcom/fasterxml/jackson/databind/JsonNode;S)V
-#toJson(S)Lcom/fasterxml/jackson/databind/JsonNode;
@2.8.0
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
-#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I

+###org/apache/kafka/common/utils/ConfigUtils
@2.7.0
+#<init>()V
+#translateDeprecatedConfigs(Ljava/util/Map;[[Ljava/lang/String;)Ljava/util/Map;
+#translateDeprecatedConfigs(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
@2.8.1
+#configMapToRedactedString(Ljava/util/Map;Lorg/apache/kafka/common/config/ConfigDef;)Ljava/lang/String;

+###org/apache/kafka/common/utils/ThreadUtils
@2.5.0
+#<init>()V
+#createThreadFactory(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;

+###org/apache/kafka/common/utils/Exit$ShutdownHookAdder
@2.5.0
+#addShutdownHook(Ljava/lang/String;Ljava/lang/Runnable;)V

+###org/apache/kafka/common/utils/PrimitiveRef
@2.4.0
+#<init>()V
+#ofInt(I)Lorg/apache/kafka/common/utils/PrimitiveRef$IntRef;

+###org/apache/kafka/common/utils/MappedIterator
@2.4.0
+#<init>(Ljava/util/Iterator;Ljava/util/function/Function;)V
+#hasNext()Z
+#next()Ljava/lang/Object;

+###org/apache/kafka/common/utils/FlattenedIterator
@2.4.0
+#<init>(Ljava/util/Iterator;Ljava/util/function/Function;)V
+#makeNext()Ljava/lang/Object;

+###org/apache/kafka/common/utils/ImplicitLinkedHashCollection
@2.3.0
+#iterator()Ljava/util/Iterator;
+#find(Lorg/apache/kafka/common/utils/ImplicitLinkedHashCollection$Element;)Lorg/apache/kafka/common/utils/ImplicitLinkedHashCollection$Element;
+#size()I
+#contains(Ljava/lang/Object;)Z
+#add(Lorg/apache/kafka/common/utils/ImplicitLinkedHashCollection$Element;)Z
+#mustAdd(Lorg/apache/kafka/common/utils/ImplicitLinkedHashCollection$Element;)V
+#remove(Ljava/lang/Object;)Z
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#clear()V
+#clear(I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#valuesList()Ljava/util/List;
+#valuesSet()Ljava/util/Set;
+#add(Ljava/lang/Object;)Z
@2.7.0
+#moveToEnd(Lorg/apache/kafka/common/utils/ImplicitLinkedHashCollection$Element;)V
@3.0.0
+#sort(Ljava/util/Comparator;)V

+###org/apache/kafka/common/utils/ExponentialBackoff
@2.7.0
+#<init>(JIJD)V
+#backoff(J)J

+###org/apache/kafka/common/utils/PrimitiveRef$IntRef
@2.4.0

+###org/apache/kafka/common/utils/ImplicitLinkedHashCollection$Element
@2.3.0
+#prev()I
+#setPrev(I)V
+#next()I
+#setNext(I)V
@2.6.0
+#elementKeysAreEqual(Ljava/lang/Object;)Z

+###org/apache/kafka/common/utils/ByteBufferUnmapper
@2.5.0
+#unmap(Ljava/lang/String;Ljava/nio/ByteBuffer;)V

+###org/apache/kafka/common/utils/ProducerIdAndEpoch
@2.5.0
+#<init>(JS)V
+#isValid()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/utils/Utils$UncheckedCloseable
@2.5.1
+#close()V

+###org/apache/kafka/common/utils/ImplicitLinkedHashMultiCollection
@2.3.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#findAll(Lorg/apache/kafka/common/utils/ImplicitLinkedHashCollection$Element;)Ljava/util/List;

+###org/apache/kafka/common/utils/FixedOrderMap
@2.2.1
+#<init>()V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z[deprecated]
+#clear()V[deprecated]
+#clone()Lorg/apache/kafka/common/utils/FixedOrderMap;
+#clone()Ljava/lang/Object;
@2.6.0
-#clear()V[deprecated]

+###org/apache/kafka/common/protocol/types/Field$CompactNullableStr
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/types/RawTaggedFieldWriter
@2.4.0
+#forFields(Ljava/util/List;)Lorg/apache/kafka/common/protocol/types/RawTaggedFieldWriter;
+#numFields()I
+#writeRawTags(Lorg/apache/kafka/common/protocol/Writable;I)V

+###org/apache/kafka/common/protocol/types/TaggedFields
@2.4.0
+#of([Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/TaggedFields;
+#<init>(Ljava/util/Map;)V
+#isNullable()Z
+#write(Ljava/nio/ByteBuffer;Ljava/lang/Object;)V
+#read(Ljava/nio/ByteBuffer;)Ljava/util/NavigableMap;
+#sizeOf(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#validate(Ljava/lang/Object;)Ljava/util/Map;
+#typeName()Ljava/lang/String;
+#documentation()Ljava/lang/String;
+#validate(Ljava/lang/Object;)Ljava/lang/Object;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
@3.3.0
+#numFields()I

+###org/apache/kafka/common/protocol/types/Field$CompactStr
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/types/Field$TaggedFieldsSection
@2.4.0
+#of([Ljava/lang/Object;)Lorg/apache/kafka/common/protocol/types/Field$TaggedFieldsSection;
+#<init>(Lorg/apache/kafka/common/protocol/types/Type;)V

+###org/apache/kafka/common/protocol/types/CompactArrayOf
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Type;)V
+#nullable(Lorg/apache/kafka/common/protocol/types/Type;)Lorg/apache/kafka/common/protocol/types/CompactArrayOf;
+#isNullable()Z
+#write(Ljava/nio/ByteBuffer;Ljava/lang/Object;)V
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#sizeOf(Ljava/lang/Object;)I
+#arrayElementType()Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#validate(Ljava/lang/Object;)[Ljava/lang/Object;
+#typeName()Ljava/lang/String;
+#documentation()Ljava/lang/String;
+#validate(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/kafka/common/protocol/types/Field$CompactArray
@2.4.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/protocol/types/Type;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/types/Field$Float64
@2.5.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;D)V

+###org/apache/kafka/common/protocol/types/Field$UUID
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/protocol/types/Field$UUID;)V

+###org/apache/kafka/common/protocol/types/RawTaggedField
@2.4.0
+#<init>(I[B)V
+#tag()I
+#data()[B
+#size()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/common/protocol/RecordsWritable
@2.7.0
+#<init>(Ljava/lang/String;ILjava/util/function/Consumer;)V
+#writeByte(B)V
+#writeShort(S)V
+#writeInt(I)V
+#writeLong(J)V
+#writeDouble(D)V
+#writeByteArray([B)V
+#writeUnsignedVarint(I)V
+#writeByteBuffer(Ljava/nio/ByteBuffer;)V
+#writeRecords(Lorg/apache/kafka/common/record/BaseRecords;)V
+#flush()V
@2.8.0
-###org/apache/kafka/common/protocol/RecordsWritable

+###org/apache/kafka/common/protocol/ObjectSerializationCache
@2.4.0
+#<init>()V
+#setArraySizeInBytes(Ljava/lang/Object;I)V
+#getArraySizeInBytes(Ljava/lang/Object;)I
+#cacheSerializedValue(Ljava/lang/Object;[B)V
+#getSerializedValue(Ljava/lang/Object;)[B
@2.8.0
+#setArraySizeInBytes(Ljava/lang/Object;Ljava/lang/Integer;)V
+#getArraySizeInBytes(Ljava/lang/Object;)Ljava/lang/Integer;
-#setArraySizeInBytes(Ljava/lang/Object;I)V
-#getArraySizeInBytes(Ljava/lang/Object;)I

+###org/apache/kafka/common/protocol/RecordsReadable
@2.7.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#readByte()B
+#readShort()S
+#readInt()I
+#readLong()J
+#readDouble()D
+#readArray([B)V
+#readUnsignedVarint()I
+#readByteBuffer(I)Ljava/nio/ByteBuffer;
+#readRecords(I)Lorg/apache/kafka/common/record/BaseRecords;
@2.8.0
-###org/apache/kafka/common/protocol/RecordsReadable

+###org/apache/kafka/common/requests/DescribeConfigsResponse$ConfigType
@2.6.0
+#values()[Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigType;
+#forId(B)Lorg/apache/kafka/common/requests/DescribeConfigsResponse$ConfigType;
@2.7.0
+#id()B
+#type()Lorg/apache/kafka/clients/admin/ConfigEntry$ConfigType;

+###org/apache/kafka/common/requests/AlterClientQuotasRequest
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#entries()Ljava/util/Collection;
+#validateOnly()Z
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AlterClientQuotasResponse;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#entries()Ljava/util/List;
+#data()Lorg/apache/kafka/common/message/AlterClientQuotasRequestData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterClientQuotasRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#entries()Ljava/util/Collection;

+###org/apache/kafka/common/requests/AlterUserScramCredentialsRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/AlterUserScramCredentialsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/ListPartitionReassignmentsRequest$Builder
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/ListPartitionReassignmentsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/UpdateFeaturesResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#errors()Ljava/util/Map;
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
+#toString()Ljava/lang/String;
+#data()Lorg/apache/kafka/common/message/UpdateFeaturesResponseData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/UpdateFeaturesResponse;
+#createWithErrors(Lorg/apache/kafka/common/requests/ApiError;Ljava/util/Map;I)Lorg/apache/kafka/common/requests/UpdateFeaturesResponse;
@2.8.0
+#topLevelError()Lorg/apache/kafka/common/requests/ApiError;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#errors()Ljava/util/Map;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/RequestUtils
@2.4.0
+#serialize(Lorg/apache/kafka/common/protocol/types/Struct;Lorg/apache/kafka/common/protocol/types/Struct;)Ljava/nio/ByteBuffer;
@2.8.0
+#getLeaderEpoch(I)Ljava/util/Optional;
+#hasTransactionalRecords(Lorg/apache/kafka/common/requests/ProduceRequest;)Z
+#serialize(Lorg/apache/kafka/common/protocol/Message;SLorg/apache/kafka/common/protocol/Message;S)Ljava/nio/ByteBuffer;
-#serialize(Lorg/apache/kafka/common/protocol/types/Struct;Lorg/apache/kafka/common/protocol/types/Struct;)Ljava/nio/ByteBuffer;

+###org/apache/kafka/common/requests/DescribeQuorumRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/DescribeQuorumRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeQuorumRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/DescribeUserScramCredentialsResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeUserScramCredentialsResponse;
+#data()Lorg/apache/kafka/common/message/DescribeUserScramCredentialsResponseData;
+#shouldClientThrottle(S)Z
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterIsrResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/AlterIsrResponseData;)V
+#data()Lorg/apache/kafka/common/message/AlterIsrResponseData;
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
@2.8.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterIsrResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.2.0
-###org/apache/kafka/common/requests/AlterIsrResponse

+###org/apache/kafka/common/requests/AlterIsrRequest
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/AlterIsrRequestData;S)V
+#data()Lorg/apache/kafka/common/message/AlterIsrRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterIsrRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.2.0
-###org/apache/kafka/common/requests/AlterIsrRequest

+###org/apache/kafka/common/requests/ProduceResponse$RecordError
@2.4.0
+#<init>(ILjava/lang/String;)V
+#<init>(I)V
@2.8.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.2.0
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/requests/ListPartitionReassignmentsRequest
@2.4.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListPartitionReassignmentsRequest;
+#data()Lorg/apache/kafka/common/message/ListPartitionReassignmentsRequestData;
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;

+###org/apache/kafka/common/requests/ElectLeadersRequest
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/ElectLeadersRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ElectLeadersRequest;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/AlterPartitionReassignmentsRequest
@2.4.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterPartitionReassignmentsRequest;
+#data()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;

+###org/apache/kafka/common/requests/DescribeUserScramCredentialsRequest
@2.7.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeUserScramCredentialsRequest;
+#data()Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData;
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;

+###org/apache/kafka/common/requests/VoteResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/VoteResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#singletonResponse(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/protocol/Errors;IIZ)Lorg/apache/kafka/common/message/VoteResponseData;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/VoteResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/message/VoteResponseData;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeQuorumResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/DescribeQuorumResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#errorCounts()Ljava/util/Map;
+#singletonResponse(Lorg/apache/kafka/common/TopicPartition;IIJLjava/util/List;Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeQuorumResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V
+#singletonErrorResponse(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#singletonResponse(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/message/DescribeQuorumResponseData$PartitionData;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
-#singletonResponse(Lorg/apache/kafka/common/TopicPartition;IIJLjava/util/List;Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;

+###org/apache/kafka/common/requests/UpdateFeaturesRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/UpdateFeaturesRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/EndQuorumEpochRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/EndQuorumEpochRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/OffsetDeleteResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/OffsetDeleteResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetDeleteResponse;
+#throttleTimeMs()I
+#shouldClientThrottle(S)Z
@2.8.0
+#data()Lorg/apache/kafka/common/message/OffsetDeleteResponseData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeClientQuotasResponse
@2.6.0
+#<init>(Ljava/util/Map;I)V
+#<init>(ILjava/lang/Throwable;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#complete(Lorg/apache/kafka/common/internals/KafkaFutureImpl;)V
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeClientQuotasResponse;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;)V
+#data()Lorg/apache/kafka/common/message/DescribeClientQuotasResponseData;
+#fromQuotaEntities(Ljava/util/Map;I)Lorg/apache/kafka/common/requests/DescribeClientQuotasResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Ljava/util/Map;I)V
-#<init>(ILjava/lang/Throwable;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterClientQuotasRequest$Builder
@2.6.0
+#<init>(Ljava/util/Collection;Z)V
+#build(S)Lorg/apache/kafka/common/requests/AlterClientQuotasRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/BeginQuorumEpochResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#singletonResponse(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/protocol/Errors;II)Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/BeginQuorumEpochResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/message/BeginQuorumEpochResponseData;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/OffsetDeleteRequest$Builder
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/OffsetDeleteRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/OffsetDeleteRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/VoteRequest
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;IIIJ)Lorg/apache/kafka/common/message/VoteRequestData;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;IIIJ)Lorg/apache/kafka/common/message/VoteRequestData;
@2.8.0
+#data()Lorg/apache/kafka/common/message/VoteRequestData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/VoteRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/BeginQuorumEpochRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/BeginQuorumEpochRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/UpdateFeaturesRequest
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/message/UpdateFeaturesRequestData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/UpdateFeaturesRequest;
+#isDeleteRequest(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;)Z
@2.8.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/UpdateFeaturesResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#getFeature(Ljava/lang/String;)Lorg/apache/kafka/common/requests/UpdateFeaturesRequest$FeatureUpdateItem;
+#featureUpdates()Ljava/util/Collection;
-#isDeleteRequest(Lorg/apache/kafka/common/message/UpdateFeaturesRequestData$FeatureUpdateKey;)Z

+###org/apache/kafka/common/requests/DescribeClientQuotasRequest$Builder
@2.6.0
+#<init>(Lorg/apache/kafka/common/quota/ClientQuotaFilter;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeClientQuotasRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/AlterPartitionReassignmentsResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterPartitionReassignmentsResponse;
+#data()Lorg/apache/kafka/common/message/AlterPartitionReassignmentsResponseData;
+#shouldClientThrottle(S)Z
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/IncrementalAlterConfigsRequest$Builder
@2.3.0
+#<init>(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/IncrementalAlterConfigsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@2.8.0
+#<init>(Ljava/util/Collection;Ljava/util/Map;Z)V
+#<init>(Ljava/util/Map;Z)V

+###org/apache/kafka/common/requests/VoteRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/VoteRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/VoteRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/AlterIsrRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/AlterIsrRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/AlterIsrRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@3.2.0
-###org/apache/kafka/common/requests/AlterIsrRequest$Builder

+###org/apache/kafka/common/requests/DescribeQuorumRequest
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/message/DescribeQuorumRequestData;)V
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/message/DescribeQuorumRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#getPartitionLevelErrorResponse(Lorg/apache/kafka/common/message/DescribeQuorumRequestData;Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
+#getTopLevelErrorResponse(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/message/DescribeQuorumResponseData;
@2.8.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeQuorumRequest;
+#data()Lorg/apache/kafka/common/message/DescribeQuorumRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(Lorg/apache/kafka/common/message/DescribeQuorumRequestData;)V

+###org/apache/kafka/common/requests/IncrementalAlterConfigsResponse
@2.3.0
+#toResponseData(ILjava/util/Map;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;
+#fromResponseData(Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;)Ljava/util/Map;
+#<init>(Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#data()Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;
+#errorCounts()Ljava/util/Map;
+#shouldClientThrottle(S)Z
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/IncrementalAlterConfigsResponse;
@2.8.0
+#<init>(ILjava/util/Map;)V
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#toResponseData(ILjava/util/Map;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterUserScramCredentialsResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterUserScramCredentialsResponse;
+#data()Lorg/apache/kafka/common/message/AlterUserScramCredentialsResponseData;
+#shouldClientThrottle(S)Z
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/BeginQuorumEpochRequest
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/BeginQuorumEpochResponse;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;II)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;II)Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/message/BeginQuorumEpochRequestData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/BeginQuorumEpochRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/AlterClientQuotasResponse
@2.6.0
+#<init>(Ljava/util/Map;I)V
+#<init>(Ljava/util/Collection;ILjava/lang/Throwable;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#complete(Ljava/util/Map;)V
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterClientQuotasResponse;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;)V
+#data()Lorg/apache/kafka/common/message/AlterClientQuotasResponseData;
+#fromQuotaEntities(Ljava/util/Map;I)Lorg/apache/kafka/common/requests/AlterClientQuotasResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Ljava/util/Map;I)V
-#<init>(Ljava/util/Collection;ILjava/lang/Throwable;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterPartitionReassignmentsRequest$Builder
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/AlterPartitionReassignmentsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/AlterPartitionReassignmentsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/AlterUserScramCredentialsRequest
@2.7.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterUserScramCredentialsRequest;
+#data()Lorg/apache/kafka/common/message/AlterUserScramCredentialsRequestData;
+#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#toStruct()Lorg/apache/kafka/common/protocol/types/Struct;

+###org/apache/kafka/common/requests/IncrementalAlterConfigsRequest
@2.3.0
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/IncrementalAlterConfigsRequest;
+#data()Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.2.0
+#<init>(Lorg/apache/kafka/common/message/IncrementalAlterConfigsRequestData;S)V

+###org/apache/kafka/common/requests/ListPartitionReassignmentsResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;)V
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListPartitionReassignmentsResponse;
+#data()Lorg/apache/kafka/common/message/ListPartitionReassignmentsResponseData;
+#shouldClientThrottle(S)Z
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
@2.8.0
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/EndQuorumEpochRequest
@2.7.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/EndQuorumEpochResponse;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;IIILjava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;IIILjava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/EndQuorumEpochRequest;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;IILjava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#singletonRequest(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;IILjava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#singletonRequest(Lorg/apache/kafka/common/TopicPartition;IIILjava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;
-#singletonRequest(Lorg/apache/kafka/common/TopicPartition;Ljava/lang/String;IIILjava/util/List;)Lorg/apache/kafka/common/message/EndQuorumEpochRequestData;

+###org/apache/kafka/common/requests/DescribeClientQuotasRequest
@2.6.0
+#<init>(Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#filter()Lorg/apache/kafka/common/quota/ClientQuotaFilter;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/DescribeClientQuotasResponse;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/message/DescribeClientQuotasRequestData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeClientQuotasRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/ElectLeadersRequest$Builder
@2.4.0
+#<init>(Lorg/apache/kafka/common/ElectionType;Ljava/util/Collection;I)V
+#build(S)Lorg/apache/kafka/common/requests/ElectLeadersRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/EndQuorumEpochResponse
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCounts()Ljava/util/Map;
+#singletonResponse(Lorg/apache/kafka/common/protocol/Errors;Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/protocol/Errors;II)Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/EndQuorumEpochResponse;
@2.8.0
+#data()Lorg/apache/kafka/common/message/EndQuorumEpochResponseData;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/OffsetDeleteRequest
@2.4.0
+#<init>(Lorg/apache/kafka/common/message/OffsetDeleteRequestData;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(ILorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/OffsetDeleteRequest;
@2.8.0
+#data()Lorg/apache/kafka/common/message/OffsetDeleteRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V

+###org/apache/kafka/common/requests/DescribeUserScramCredentialsRequest$Builder
@2.7.0
+#<init>(Lorg/apache/kafka/common/message/DescribeUserScramCredentialsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeUserScramCredentialsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/ElectLeadersResponse
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>(ISLjava/util/List;)V
+#<init>(ISLjava/util/List;S)V
+#data()Lorg/apache/kafka/common/message/ElectLeadersResponseData;
+#version()S
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ElectLeadersResponse;
+#shouldClientThrottle(S)Z
+#electLeadersResult(Lorg/apache/kafka/common/message/ElectLeadersResponseData;)Ljava/util/Map;
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/ElectLeadersResponseData;)V
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
-#<init>(ISLjava/util/List;)V
-#version()S
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/feature/SupportedVersionRange
@2.7.0
+#<init>(SS)V
+#<init>(S)V
+#fromMap(Ljava/util/Map;)Lorg/apache/kafka/common/feature/SupportedVersionRange;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#max()S
+#min()S
@3.3.0
+#isIncompatibleWith(S)Z

+###org/apache/kafka/common/feature/FinalizedVersionRange
@2.7.0
+#<init>(SS)V
+#fromMap(Ljava/util/Map;)Lorg/apache/kafka/common/feature/FinalizedVersionRange;
+#isIncompatibleWith(Lorg/apache/kafka/common/feature/SupportedVersionRange;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#max()S
+#min()S
@3.3.0
-###org/apache/kafka/common/feature/FinalizedVersionRange

+###org/apache/kafka/common/feature/Features
@2.7.0
+#supportedFeatures(Ljava/util/Map;)Lorg/apache/kafka/common/feature/Features;
+#finalizedFeatures(Ljava/util/Map;)Lorg/apache/kafka/common/feature/Features;
+#emptyFinalizedFeatures()Lorg/apache/kafka/common/feature/Features;
+#emptySupportedFeatures()Lorg/apache/kafka/common/feature/Features;
+#features()Ljava/util/Map;
+#empty()Z
+#get(Ljava/lang/String;)Lorg/apache/kafka/common/feature/BaseVersionRange;
+#toString()Ljava/lang/String;
+#toMap()Ljava/util/Map;
+#fromFinalizedFeaturesMap(Ljava/util/Map;)Lorg/apache/kafka/common/feature/Features;
+#fromSupportedFeaturesMap(Ljava/util/Map;)Lorg/apache/kafka/common/feature/Features;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.3.0
-#finalizedFeatures(Ljava/util/Map;)Lorg/apache/kafka/common/feature/Features;
-#emptyFinalizedFeatures()Lorg/apache/kafka/common/feature/Features;
-#fromFinalizedFeaturesMap(Ljava/util/Map;)Lorg/apache/kafka/common/feature/Features;

+###org/apache/kafka/common/quota/ClientQuotaEntity
@2.6.0
+#<init>(Ljava/util/Map;)V
+#entries()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.8.0
+#isValidEntityType(Ljava/lang/String;)Z

+###org/apache/kafka/common/quota/ClientQuotaAlteration$Op
@2.6.0
+#<init>(Ljava/lang/String;Ljava/lang/Double;)V
+#key()Ljava/lang/String;
+#value()Ljava/lang/Double;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/quota/ClientQuotaAlteration
@2.6.0
+#<init>(Lorg/apache/kafka/common/quota/ClientQuotaEntity;Ljava/util/Collection;)V
+#entity()Lorg/apache/kafka/common/quota/ClientQuotaEntity;
+#ops()Ljava/util/Collection;
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/quota/ClientQuotaFilter
@2.6.0
+#contains(Ljava/util/Collection;)Lorg/apache/kafka/common/quota/ClientQuotaFilter;
+#containsOnly(Ljava/util/Collection;)Lorg/apache/kafka/common/quota/ClientQuotaFilter;
+#all()Lorg/apache/kafka/common/quota/ClientQuotaFilter;
+#components()Ljava/util/Collection;
+#strict()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/quota/ClientQuotaFilterComponent
@2.6.0
+#ofEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/quota/ClientQuotaFilterComponent;
+#ofDefaultEntity(Ljava/lang/String;)Lorg/apache/kafka/common/quota/ClientQuotaFilterComponent;
+#ofEntityType(Ljava/lang/String;)Lorg/apache/kafka/common/quota/ClientQuotaFilterComponent;
+#entityType()Ljava/lang/String;
+#match()Ljava/util/Optional;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/replica/ReplicaSelector
@2.4.0
+#select(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/replica/ClientMetadata;Lorg/apache/kafka/common/replica/PartitionView;)Ljava/util/Optional;
+#close()V
+#configure(Ljava/util/Map;)V

+###org/apache/kafka/common/replica/PartitionView
@2.4.0
+#replicas()Ljava/util/Set;
+#leader()Lorg/apache/kafka/common/replica/ReplicaView;

+###org/apache/kafka/common/replica/ClientMetadata
@2.4.0
+#rackId()Ljava/lang/String;
+#clientId()Ljava/lang/String;
+#clientAddress()Ljava/net/InetAddress;
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#listenerName()Ljava/lang/String;

+###org/apache/kafka/common/replica/ReplicaView$DefaultReplicaView
@2.4.0
+#<init>(Lorg/apache/kafka/common/Node;JJ)V
+#endpoint()Lorg/apache/kafka/common/Node;
+#logEndOffset()J
+#timeSinceLastCaughtUpMs()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/replica/RackAwareReplicaSelector
@2.4.0
+#<init>()V
+#select(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/replica/ClientMetadata;Lorg/apache/kafka/common/replica/PartitionView;)Ljava/util/Optional;

+###org/apache/kafka/common/replica/PartitionView$DefaultPartitionView
@2.4.0
+#<init>(Ljava/util/Set;Lorg/apache/kafka/common/replica/ReplicaView;)V
+#replicas()Ljava/util/Set;
+#leader()Lorg/apache/kafka/common/replica/ReplicaView;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/replica/ClientMetadata$DefaultClientMetadata
@2.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/net/InetAddress;Lorg/apache/kafka/common/security/auth/KafkaPrincipal;Ljava/lang/String;)V
+#rackId()Ljava/lang/String;
+#clientId()Ljava/lang/String;
+#clientAddress()Ljava/net/InetAddress;
+#principal()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;
+#listenerName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/replica/ReplicaView
@2.4.0
+#endpoint()Lorg/apache/kafka/common/Node;
+#logEndOffset()J
+#timeSinceLastCaughtUpMs()J
+#comparator()Ljava/util/Comparator;

+###org/apache/kafka/common/errors/UnstableOffsetCommitException
@2.5.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/EligibleLeadersNotAvailableException
@2.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/TransactionAbortedException
@2.7.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>()V

+###org/apache/kafka/common/errors/NotLeaderOrFollowerException
@2.6.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidProducerEpochException
@2.7.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/DuplicateResourceException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#resource()Ljava/lang/String;

+###org/apache/kafka/common/errors/ElectionNotNeededException
@2.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InvalidUpdateVersionException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/NoReassignmentInProgressException
@2.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/ThrottlingQuotaExceededException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(ILjava/lang/String;)V
+#throttleTimeMs()I

+###org/apache/kafka/common/errors/GroupSubscribedToTopicException
@2.4.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/ResourceNotFoundException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#resource()Ljava/lang/String;

+###org/apache/kafka/common/errors/FeatureUpdateFailedException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InconsistentVoterSetException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/FencedInstanceIdException
@2.3.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/UnacceptableCredentialException
@2.7.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/Endpoint
@2.4.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/security/auth/SecurityProtocol;Ljava/lang/String;I)V
+#listenerName()Ljava/util/Optional;
+#securityProtocol()Lorg/apache/kafka/common/security/auth/SecurityProtocol;
+#host()Ljava/lang/String;
+#port()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/ConsumerCoordinator$DefaultOffsetCommitCallback
@0.9.0.0
+#<init>()V
+#onComplete(Ljava/util/Map;Ljava/lang/Exception;)V
@0.10.2.0
-###org/apache/kafka/clients/consumer/internals/ConsumerCoordinator$DefaultOffsetCommitCallback

+###org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$RequestFutureCompletionHandler
@0.9.0.0
+#<init>()V
+#onComplete(Lorg/apache/kafka/clients/ClientResponse;)V
@0.10.1.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;)V
+#fireCompletion()V
+#onFailure(Ljava/lang/RuntimeException;)V
-#<init>()V
@0.11.0.0
-###org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$RequestFutureCompletionHandler

+###org/apache/kafka/clients/consumer/internals/DelayedTask
@0.9.0.0
+#run(J)V
@0.10.1.0
-###org/apache/kafka/clients/consumer/internals/DelayedTask

+###org/apache/kafka/clients/consumer/internals/DelayedTaskQueue
@0.9.0.0
+#<init>()V
+#add(Lorg/apache/kafka/clients/consumer/internals/DelayedTask;J)V
+#remove(Lorg/apache/kafka/clients/consumer/internals/DelayedTask;)Z
+#nextTimeout(J)J
+#poll(J)V
@0.10.1.0
-###org/apache/kafka/clients/consumer/internals/DelayedTaskQueue

+###org/apache/kafka/clients/consumer/internals/SendFailedException
@0.9.0.0
+#<init>()V
@0.10.0.0
-###org/apache/kafka/clients/consumer/internals/SendFailedException

+###org/apache/kafka/clients/producer/internals/RecordBatch
@0.8.2-beta
+#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecords;J)V
+#tryAppend([B[BLorg/apache/kafka/clients/producer/Callback;)Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;
+#done(JLjava/lang/RuntimeException;)V
+#toString()Ljava/lang/String;
@0.9.0.0
+#tryAppend([B[BLorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;
+#maybeExpire(IJJ)Z
+#inRetry()Z
+#setRetry()V
-#tryAppend([B[BLorg/apache/kafka/clients/producer/Callback;)Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;
@0.10.0.0
+#tryAppend(J[B[BLorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;
+#done(JJLjava/lang/RuntimeException;)V
+#maybeExpire(IJJJZ)Z
-#tryAppend([B[BLorg/apache/kafka/clients/producer/Callback;J)Lorg/apache/kafka/clients/producer/internals/FutureRecordMetadata;
-#done(JLjava/lang/RuntimeException;)V
-#maybeExpire(IJJ)Z
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecordsBuilder;J)V
+#records()Lorg/apache/kafka/common/record/MemoryRecords;
+#sizeInBytes()I
+#compressionRate()D
+#isFull()Z
+#close()V
+#buffer()Ljava/nio/ByteBuffer;
+#initialCapacity()I
+#isWritable()Z
-#<init>(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/record/MemoryRecords;J)V
-#inRetry()Z
@0.11.0.0
-###org/apache/kafka/clients/producer/internals/RecordBatch

+###org/apache/kafka/common/network/ByteBufferReceive
@0.8.2-beta
+#<init>(I[Ljava/nio/ByteBuffer;)V
+#source()I
+#complete()Z
+#readFrom(Ljava/nio/channels/ScatteringByteChannel;)J
+#reify()[Ljava/nio/ByteBuffer;
@0.9.0.0
+#<init>(Ljava/lang/String;[Ljava/nio/ByteBuffer;)V
+#source()Ljava/lang/String;
-#<init>(I[Ljava/nio/ByteBuffer;)V
-#source()I
-#reify()[Ljava/nio/ByteBuffer;
@0.11.0.0
-###org/apache/kafka/common/network/ByteBufferReceive

+###org/apache/kafka/common/network/DefaultAuthenticator
@0.9.0.0
+#<init>()V
+#configure(Lorg/apache/kafka/common/network/TransportLayer;Lorg/apache/kafka/common/security/auth/PrincipalBuilder;Ljava/util/Map;)V
+#authenticate()V
+#principal()Ljava/security/Principal;
+#close()V
+#complete()Z
@1.0.0
-###org/apache/kafka/common/network/DefaultAuthenticator

+###org/apache/kafka/common/network/LoginType
@0.9.0.0
+#values()[Lorg/apache/kafka/common/network/LoginType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/network/LoginType;
+#contextName()Ljava/lang/String;
@0.11.0.0
-###org/apache/kafka/common/network/LoginType

+###org/apache/kafka/common/protocol/ProtoUtils
@0.8.2-beta
+#<init>()V
+#latestVersion(I)S
+#requestSchema(II)Lorg/apache/kafka/common/protocol/types/Schema;
+#currentRequestSchema(I)Lorg/apache/kafka/common/protocol/types/Schema;
+#responseSchema(II)Lorg/apache/kafka/common/protocol/types/Schema;
+#currentResponseSchema(I)Lorg/apache/kafka/common/protocol/types/Schema;
+#parseRequest(IILjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
+#parseResponse(ILjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
@0.9.0.0
+#parseResponse(IILjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
@0.10.2.0
+#oldestVersion(I)S
-#parseResponse(ILjava/nio/ByteBuffer;)Lorg/apache/kafka/common/protocol/types/Struct;
@0.11.0.0
-###org/apache/kafka/common/protocol/ProtoUtils

+###org/apache/kafka/common/protocol/SecurityProtocol
@0.9.0.0
+#values()[Lorg/apache/kafka/common/protocol/SecurityProtocol;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/SecurityProtocol;
+#getName(I)Ljava/lang/String;
+#getNames()Ljava/util/List;
+#forId(Ljava/lang/Short;)Lorg/apache/kafka/common/protocol/SecurityProtocol;
@0.9.0.1
+#nonTestingValues()Ljava/util/Set;
@0.10.0.0
+#forName(Ljava/lang/String;)Lorg/apache/kafka/common/protocol/SecurityProtocol;
@1.0.0
-###org/apache/kafka/common/protocol/SecurityProtocol

+###org/apache/kafka/common/record/ByteBufferInputStream
@0.8.2-beta
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#read([BII)I
@0.10.2.0
-#read()I
-#read([BII)I
@0.11.0.0
-###org/apache/kafka/common/record/ByteBufferInputStream

+###org/apache/kafka/common/record/ByteBufferOutputStream
@0.8.2-beta
+#<init>(Ljava/nio/ByteBuffer;)V
+#write(I)V
+#write([BII)V
+#buffer()Ljava/nio/ByteBuffer;
@0.10.2.0
-#write(I)V
-#write([BII)V
@0.10.2.2
+#<init>(I)V
+#<init>(IZ)V
+#write(I)V
+#write([BII)V
+#write(Ljava/nio/ByteBuffer;)V
+#position()I
+#remaining()I
+#limit()I
+#position(I)V
+#initialCapacity()I
@0.11.0.0
-###org/apache/kafka/common/record/ByteBufferOutputStream

+###org/apache/kafka/common/record/Compressor
@0.8.2-beta
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;I)V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;)V
+#buffer()Ljava/nio/ByteBuffer;
+#compressionRate()D
+#close()V
+#putLong(J)V
+#putInt(I)V
+#put(Ljava/nio/ByteBuffer;)V
+#putByte(B)V
+#put([BII)V
+#putRecord([B[BLorg/apache/kafka/common/record/CompressionType;II)V
+#putRecord([B[B)V
+#recordWritten(I)V
+#estimatedBytesWritten()J
+#wrapForOutput(Lorg/apache/kafka/common/record/ByteBufferOutputStream;Lorg/apache/kafka/common/record/CompressionType;I)Ljava/io/DataOutputStream;
+#wrapForInput(Lorg/apache/kafka/common/record/ByteBufferInputStream;Lorg/apache/kafka/common/record/CompressionType;)Ljava/io/DataInputStream;
@0.9.0.0
+#numRecordsWritten()J
@0.10.0.0
+#putRecord(J[B[BLorg/apache/kafka/common/record/CompressionType;II)J
+#putRecord(J[B[B)J
+#wrapForInput(Lorg/apache/kafka/common/record/ByteBufferInputStream;Lorg/apache/kafka/common/record/CompressionType;B)Ljava/io/DataInputStream;
-#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;I)V
-#putRecord([B[BLorg/apache/kafka/common/record/CompressionType;II)V
-#putRecord([B[B)V
-#wrapForInput(Lorg/apache/kafka/common/record/ByteBufferInputStream;Lorg/apache/kafka/common/record/CompressionType;)Ljava/io/DataInputStream;
@0.10.2.0
-###org/apache/kafka/common/record/Compressor

+###org/apache/kafka/common/record/LogEntry
@0.8.2-beta
+#<init>(JLorg/apache/kafka/common/record/Record;)V
+#offset()J
+#record()Lorg/apache/kafka/common/record/Record;
+#toString()Ljava/lang/String;
@0.9.0.0
+#size()I
@0.10.2.0
+#<init>()V
+#firstOffset()J
+#nextOffset()J
+#magic()B
+#sizeInBytes()I
+#isCompressed()Z
+#writeTo(Ljava/nio/ByteBuffer;)V
+#iterator()Ljava/util/Iterator;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#writeHeader(Ljava/nio/ByteBuffer;JI)V
+#writeHeader(Ljava/io/DataOutputStream;JI)V
+#create(JLorg/apache/kafka/common/record/Record;)Lorg/apache/kafka/common/record/LogEntry;
-#<init>(JLorg/apache/kafka/common/record/Record;)V
-#size()I
@0.11.0.0
-###org/apache/kafka/common/record/LogEntry

+###org/apache/kafka/common/record/MemoryRecords$RecordsIterator
@0.8.2-beta
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Z)V
@0.10.0.0
+#<init>(Ljava/nio/ByteBuffer;Z)V
-#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/record/CompressionType;Z)V
@0.10.2.0
-###org/apache/kafka/common/record/MemoryRecords$RecordsIterator

+###org/apache/kafka/common/requests/GroupCoordinatorRequest
@0.9.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
+#groupId()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;I)Lorg/apache/kafka/common/requests/GroupCoordinatorRequest;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/GroupCoordinatorRequest;
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#getErrorResponse(Ljava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
-#<init>(Ljava/lang/String;)V
-#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
-#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractRequestResponse;
@0.11.0.0
-###org/apache/kafka/common/requests/GroupCoordinatorRequest

+###org/apache/kafka/common/requests/GroupCoordinatorResponse
@0.9.0.0
+#<init>(SLorg/apache/kafka/common/Node;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#node()Lorg/apache/kafka/common/Node;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/GroupCoordinatorResponse;
@0.11.0.0
-###org/apache/kafka/common/requests/GroupCoordinatorResponse

+###org/apache/kafka/common/requests/LeaderAndIsrRequest$EndPoint
@0.9.0.0
+#<init>(ILjava/lang/String;I)V
@0.10.0.0
-###org/apache/kafka/common/requests/LeaderAndIsrRequest$EndPoint

+###org/apache/kafka/common/requests/RequestSend
@0.8.2-beta
+#<init>(ILorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/common/protocol/types/Struct;)V
+#header()Lorg/apache/kafka/common/requests/RequestHeader;
+#body()Lorg/apache/kafka/common/protocol/types/Struct;
+#toString()Ljava/lang/String;
@0.9.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/common/protocol/types/Struct;)V
-#<init>(ILorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/common/protocol/types/Struct;)V
@0.10.0.0
+#serialize(Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/common/protocol/types/Struct;)Ljava/nio/ByteBuffer;
@0.10.2.0
-###org/apache/kafka/common/requests/RequestSend

+###org/apache/kafka/common/requests/ResponseSend
@0.9.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/requests/ResponseHeader;Lorg/apache/kafka/common/protocol/types/Struct;)V
+#<init>(Ljava/lang/String;Lorg/apache/kafka/common/requests/ResponseHeader;Lorg/apache/kafka/common/requests/AbstractRequestResponse;)V
@0.10.0.0
+#serialize(Lorg/apache/kafka/common/requests/ResponseHeader;Lorg/apache/kafka/common/protocol/types/Struct;)Ljava/nio/ByteBuffer;
@0.10.2.0
-###org/apache/kafka/common/requests/ResponseSend

+###org/apache/kafka/common/requests/UpdateMetadataRequest$BrokerEndPoint
@0.9.0.0
+#<init>(ILjava/lang/String;I)V
@0.10.0.0
-###org/apache/kafka/common/requests/UpdateMetadataRequest$BrokerEndPoint

+###org/apache/kafka/common/security/authenticator/SaslClientAuthenticator$ClientCallbackHandler
@0.9.0.0
+#<init>()V
+#handle([Ljavax/security/auth/callback/Callback;)V
@0.10.0.0
-###org/apache/kafka/common/security/authenticator/SaslClientAuthenticator$ClientCallbackHandler

+###org/apache/kafka/common/security/kerberos/Login
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#startThreadIfNeeded()V
+#shutdown()V
+#subject()Ljavax/security/auth/Subject;
@0.10.0.0
-###org/apache/kafka/common/security/kerberos/Login

+###org/apache/kafka/common/security/kerberos/LoginManager
@0.9.0.0
+#acquireLoginManager(Lorg/apache/kafka/common/network/LoginType;Ljava/util/Map;)Lorg/apache/kafka/common/security/kerberos/LoginManager;
+#subject()Ljavax/security/auth/Subject;
+#serviceName()Ljava/lang/String;
+#release()V
+#closeAll()V
@0.10.0.0
-###org/apache/kafka/common/security/kerberos/LoginManager

+###org/apache/kafka/clients/admin/UnregisterBrokerResult
@2.8.0
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/UnregisterBrokerOptions
@2.8.0
+#<init>()V

+###org/apache/kafka/common/compress/SnappyFactory
@2.8.0
+#wrapForOutput(Lorg/apache/kafka/common/utils/ByteBufferOutputStream;)Ljava/io/OutputStream;
+#wrapForInput(Ljava/nio/ByteBuffer;)Ljava/io/InputStream;

+###org/apache/kafka/common/compress/ZstdFactory
@2.8.0
+#wrapForOutput(Lorg/apache/kafka/common/utils/ByteBufferOutputStream;)Ljava/io/OutputStream;
+#wrapForInput(Ljava/nio/ByteBuffer;BLorg/apache/kafka/common/utils/BufferSupplier;)Ljava/io/InputStream;

+###org/apache/kafka/common/compress/KafkaLZ4BlockOutputStream$BD
@2.8.0
+#<init>()V
+#<init>(I)V
+#fromByte(B)Lorg/apache/kafka/common/compress/KafkaLZ4BlockOutputStream$BD;
+#getBlockMaximumSize()I
+#toByte()B

+###org/apache/kafka/common/compress/KafkaLZ4BlockOutputStream$FLG
@2.8.0
+#<init>()V
+#<init>(Z)V
+#fromByte(B)Lorg/apache/kafka/common/compress/KafkaLZ4BlockOutputStream$FLG;
+#toByte()B
+#isContentChecksumSet()Z
+#isContentSizeSet()Z
+#isBlockChecksumSet()Z
+#isBlockIndependenceSet()Z
+#getVersion()I

+###org/apache/kafka/common/compress/KafkaLZ4BlockOutputStream
@2.8.0
+#<init>(Ljava/io/OutputStream;IZZ)V
+#<init>(Ljava/io/OutputStream;IZ)V
+#<init>(Ljava/io/OutputStream;I)V
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;Z)V
+#useBrokenFlagDescriptorChecksum()Z
+#write(I)V
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/kafka/common/compress/KafkaLZ4BlockInputStream
@2.8.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/utils/BufferSupplier;Z)V
+#ignoreFlagDescriptorChecksum()Z
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
+#mark(I)V
+#reset()V
+#markSupported()Z

+###org/apache/kafka/common/record/UnalignedFileRecords
@2.8.0
+#<init>(Ljava/nio/channels/FileChannel;JI)V
+#sizeInBytes()I
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;JI)J

+###org/apache/kafka/common/record/UnalignedRecords
@2.8.0
+#toSend()Lorg/apache/kafka/common/record/RecordsSend;

+###org/apache/kafka/common/record/UnalignedMemoryRecords
@2.8.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#buffer()Ljava/nio/ByteBuffer;
+#sizeInBytes()I
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;JI)J

+###org/apache/kafka/common/record/TransferableRecords
@2.8.0
+#writeTo(Lorg/apache/kafka/common/network/TransferableChannel;JI)J

+###org/apache/kafka/common/config/internals/QuotaConfigs
@2.8.0
+#<init>()V
+#isClientOrUserConfig(Ljava/lang/String;)Z
+#userConfigs()Lorg/apache/kafka/common/config/ConfigDef;
+#clientConfigs()Lorg/apache/kafka/common/config/ConfigDef;
+#ipConfigs()Lorg/apache/kafka/common/config/ConfigDef;

+###org/apache/kafka/common/security/auth/KafkaPrincipalSerde
@2.8.0
+#serialize(Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)[B
+#deserialize([B)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;

+###org/apache/kafka/common/network/TransferableChannel
@2.8.0
+#hasPendingWrites()Z
+#transferFrom(Ljava/nio/channels/FileChannel;JJ)J

+###org/apache/kafka/common/message/DefaultPrincipalData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DefaultPrincipalData;
+#toString()Ljava/lang/String;
+#type()Ljava/lang/String;
+#name()Ljava/lang/String;
+#tokenAuthenticated()Z
+#unknownTaggedFields()Ljava/util/List;
+#setType(Ljava/lang/String;)Lorg/apache/kafka/common/message/DefaultPrincipalData;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DefaultPrincipalData;
+#setTokenAuthenticated(Z)Lorg/apache/kafka/common/message/DefaultPrincipalData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotResponseDataJsonConverter$PartitionSnapshotJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClusterResponseDataJsonConverter$DescribeClusterBrokerJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;
+#write(Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BrokerRegistrationRequestData$ListenerCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$ListenerCollection;

+###org/apache/kafka/common/message/BrokerRegistrationRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ProduceResponseData$TopicProduceResponseCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponse;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ProduceResponseData$TopicProduceResponseCollection;

+###org/apache/kafka/common/message/ListOffsetsResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetsResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ListOffsetsResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotResponseData$TopicSnapshot
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotResponseData$TopicSnapshot;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$TopicSnapshot;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$TopicSnapshot;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseDataJsonConverter$EpochEndOffsetJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBrokerCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(I)Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;
+#findAll(I)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBrokerCollection;

+###org/apache/kafka/common/message/DescribeClusterResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#clusterId()Ljava/lang/String;
+#controllerId()I
+#brokers()Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBrokerCollection;
+#clusterAuthorizedOperations()I
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#setControllerId(I)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#setBrokers(Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBrokerCollection;)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#setClusterAuthorizedOperations(I)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeProducersResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeProducersResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeProducersResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeProducersResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/BrokerHeartbeatResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#isCaughtUp()Z
+#isFenced()Z
+#shouldShutDown()Z
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#setIsCaughtUp(Z)Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#setIsFenced(Z)Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#setShouldShutDown(Z)Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DeleteTopicsRequestDataJsonConverter$DeleteTopicStateJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DeleteTopicsRequestData$DeleteTopicState;
+#write(Lorg/apache/kafka/common/message/DeleteTopicsRequestData$DeleteTopicState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DeleteTopicsRequestData$DeleteTopicState;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeProducersResponseDataJsonConverter$PartitionResponseJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BrokerRegistrationResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/EnvelopeResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EnvelopeResponseData;
+#toString()Ljava/lang/String;
+#responseData()Ljava/nio/ByteBuffer;
+#errorCode()S
+#unknownTaggedFields()Ljava/util/List;
+#setResponseData(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/message/EnvelopeResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/EnvelopeResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DefaultPrincipalDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DefaultPrincipalData;
+#write(Lorg/apache/kafka/common/message/DefaultPrincipalData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DefaultPrincipalData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeProducersRequestDataJsonConverter$TopicRequestJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest;
+#write(Lorg/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ProduceRequestData$TopicProduceDataCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceData;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ProduceRequestData$TopicProduceDataCollection;

+###org/apache/kafka/common/message/BrokerRegistrationRequestData$Listener
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#host()Ljava/lang/String;
+#port()I
+#securityProtocol()S
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;
+#setPort(I)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;
+#setSecurityProtocol(S)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#currentLeaderEpoch()I
+#timestamp()J
+#maxNumOffsets()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;
+#setCurrentLeaderEpoch(I)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;
+#setTimestamp(J)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;
+#setMaxNumOffsets(I)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/UnregisterBrokerResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/BrokerRegistrationRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#toString()Ljava/lang/String;
+#brokerId()I
+#clusterId()Ljava/lang/String;
+#incarnationId()Lorg/apache/kafka/common/Uuid;
+#listeners()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$ListenerCollection;
+#features()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$FeatureCollection;
+#rack()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setBrokerId(I)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#setIncarnationId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#setListeners(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$ListenerCollection;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#setFeatures(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$FeatureCollection;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#setRack(Ljava/lang/String;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@3.4.0
+#isMigratingZkBroker()Z
+#setIsMigratingZkBroker(Z)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter$SnapshotIdJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DeleteTopicsRequestData$DeleteTopicState
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DeleteTopicsRequestData$DeleteTopicState;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#topicId()Lorg/apache/kafka/common/Uuid;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DeleteTopicsRequestData$DeleteTopicState;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/DeleteTopicsRequestData$DeleteTopicState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/BrokerHeartbeatResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#write(Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotRequestDataJsonConverter$PartitionSnapshotJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetsRequestDataJsonConverter$ListOffsetsTopicJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic;
+#write(Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BrokerRegistrationRequestDataJsonConverter$ListenerJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Listener;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;
+#toString()Ljava/lang/String;
+#endOffset()J
+#epoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setEndOffset(J)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;
+#setEpoch(I)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListOffsetsRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetsRequestData;
+#write(Lorg/apache/kafka/common/message/ListOffsetsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListOffsetsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetsResponseDataJsonConverter$ListOffsetsTopicResponseJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse;
+#write(Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BrokerRegistrationResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#brokerEpoch()J
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/BrokerHeartbeatRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#toString()Ljava/lang/String;
+#brokerId()I
+#brokerEpoch()J
+#currentMetadataOffset()J
+#wantFence()Z
+#wantShutDown()Z
+#unknownTaggedFields()Ljava/util/List;
+#setBrokerId(I)Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#setCurrentMetadataOffset(J)Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#setWantFence(Z)Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#setWantShutDown(Z)Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotRequestDataJsonConverter$TopicSnapshotJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$TopicSnapshot;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData$TopicSnapshot;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData$TopicSnapshot;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetsRequestDataJsonConverter$ListOffsetsPartitionJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;
+#write(Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsPartition;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BrokerRegistrationRequestData$Feature
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#minSupportedVersion()S
+#maxSupportedVersion()S
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;
+#setMinSupportedVersion(S)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;
+#setMaxSupportedVersion(S)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopicCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopic;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochRequestData$OffsetForLeaderTopicCollection;

+###org/apache/kafka/common/message/BrokerRegistrationRequestDataJsonConverter$FeatureJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeProducersResponseDataJsonConverter$TopicResponseJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeProducersResponseData$TopicResponse;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData$TopicResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData$TopicResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetsRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetsRequestData;
+#toString()Ljava/lang/String;
+#replicaId()I
+#isolationLevel()B
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setReplicaId(I)Lorg/apache/kafka/common/message/ListOffsetsRequestData;
+#setIsolationLevel(B)Lorg/apache/kafka/common/message/ListOffsetsRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/EnvelopeRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EnvelopeRequestData;
+#write(Lorg/apache/kafka/common/message/EnvelopeRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/EnvelopeRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeProducersResponseDataJsonConverter$ProducerStateJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeProducersRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeProducersRequestData;
+#toString()Ljava/lang/String;
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeProducersRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/EnvelopeRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/EnvelopeRequestData;
+#toString()Ljava/lang/String;
+#requestData()Ljava/nio/ByteBuffer;
+#requestPrincipal()[B
+#clientHostAddress()[B
+#unknownTaggedFields()Ljava/util/List;
+#setRequestData(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/message/EnvelopeRequestData;
+#setRequestPrincipal([B)Lorg/apache/kafka/common/message/EnvelopeRequestData;
+#setClientHostAddress([B)Lorg/apache/kafka/common/message/EnvelopeRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeProducersRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeProducersRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeProducersRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeProducersRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;
+#toString()Ljava/lang/String;
+#leaderId()I
+#leaderEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setLeaderId(I)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListOffsetsResponseDataJsonConverter$ListOffsetsPartitionResponseJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#write(Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#findAll(S)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersionCollection;

+###org/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;
+#toString()Ljava/lang/String;
+#brokerId()I
+#host()Ljava/lang/String;
+#port()I
+#rack()Ljava/lang/String;
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setBrokerId(I)Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;
+#setPort(I)Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;
+#setRack(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeClusterResponseData$DescribeClusterBroker;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;
+#toString()Ljava/lang/String;
+#errorCode()S
+#partition()I
+#leaderEpoch()I
+#endOffset()J
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;
+#setPartition(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;
+#setEndOffset(J)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$EpochEndOffset;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/UnregisterBrokerRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;
+#toString()Ljava/lang/String;
+#brokerId()I
+#unknownTaggedFields()Ljava/util/List;
+#setBrokerId(I)Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#toString()Ljava/lang/String;
+#clusterId()Ljava/lang/String;
+#replicaId()I
+#maxBytes()I
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setClusterId(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#setReplicaId(I)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#setMaxBytes(I)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeProducersResponseData$ProducerState
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#toString()Ljava/lang/String;
+#producerId()J
+#producerEpoch()I
+#lastSequence()I
+#lastTimestamp()J
+#coordinatorEpoch()I
+#currentTxnStartOffset()J
+#unknownTaggedFields()Ljava/util/List;
+#setProducerId(J)Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#setProducerEpoch(I)Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#setLastSequence(I)Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#setLastTimestamp(J)Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#setCoordinatorEpoch(I)Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#setCurrentTxnStartOffset(J)Lorg/apache/kafka/common/message/DescribeProducersResponseData$ProducerState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ApiVersionsResponseDataJsonConverter$ApiVersionJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotResponseDataJsonConverter$LeaderIdAndEpochJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/UnregisterBrokerResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;
+#write(Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#toString()Ljava/lang/String;
+#index()I
+#errorCode()S
+#snapshotId()Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;
+#currentLeader()Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;
+#size()J
+#position()J
+#unalignedRecords()Lorg/apache/kafka/common/record/BaseRecords;
+#unknownTaggedFields()Ljava/util/List;
+#setIndex(I)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#setErrorCode(S)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#setSnapshotId(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#setCurrentLeader(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$LeaderIdAndEpoch;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#setSize(J)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#setPosition(J)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#setUnalignedRecords(Lorg/apache/kafka/common/record/BaseRecords;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$PartitionSnapshot;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;
+#toString()Ljava/lang/String;
+#partition()I
+#currentLeaderEpoch()I
+#snapshotId()Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;
+#position()J
+#unknownTaggedFields()Ljava/util/List;
+#setPartition(I)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;
+#setCurrentLeaderEpoch(I)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;
+#setSnapshotId(Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;
+#setPosition(J)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$PartitionSnapshot;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResultCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResult;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/OffsetForLeaderEpochResponseData$OffsetForLeaderTopicResultCollection;

+###org/apache/kafka/common/message/DescribeClusterResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeClusterResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeClusterResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#activeProducers()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;
+#setActiveProducers(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeProducersResponseData$PartitionResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/BrokerHeartbeatRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#write(Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotRequestDataJsonConverter$SnapshotIdJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;
+#toString()Ljava/lang/String;
+#endOffset()J
+#epoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setEndOffset(J)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;
+#setEpoch(I)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$SnapshotId;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotResponseDataJsonConverter$TopicSnapshotJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$TopicSnapshot;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$TopicSnapshot;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$TopicSnapshot;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/BrokerRegistrationRequestData$FeatureCollection
@2.8.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$Feature;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData$FeatureCollection;

+###org/apache/kafka/common/message/FetchResponseData$SnapshotId
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;
+#toString()Ljava/lang/String;
+#endOffset()J
+#epoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setEndOffset(J)Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;
+#setEpoch(I)Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/UnregisterBrokerRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;
+#write(Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeProducersResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeProducersResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeProducersResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#oldStyleOffsets()Ljava/util/List;
+#timestamp()J
+#offset()J
+#leaderEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#setOldStyleOffsets(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#setTimestamp(J)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#setOffset(J)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsPartitionResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListOffsetsResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListOffsetsResponseData;
+#write(Lorg/apache/kafka/common/message/ListOffsetsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListOffsetsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/FetchSnapshotResponseDataJsonConverter$SnapshotIdJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchSnapshotResponseData$SnapshotId;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClusterRequestData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeClusterRequestData;
+#toString()Ljava/lang/String;
+#includeClusterAuthorizedOperations()Z
+#unknownTaggedFields()Ljava/util/List;
+#setIncludeClusterAuthorizedOperations(Z)Lorg/apache/kafka/common/message/DescribeClusterRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotRequestData$TopicSnapshot
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotRequestData$TopicSnapshot;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$TopicSnapshot;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData$TopicSnapshot;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeProducersResponseData$TopicResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeProducersResponseData$TopicResponse;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeProducersResponseData$TopicResponse;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeProducersResponseData$TopicResponse;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#toString()Ljava/lang/String;
+#apiKey()S
+#minVersion()S
+#maxVersion()S
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setApiKey(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#setMinVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#setMaxVersion(S)Lorg/apache/kafka/common/message/ApiVersionsResponseData$ApiVersion;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FetchSnapshotResponseData
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError
@2.8.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError;
+#toString()Ljava/lang/String;
+#topicId()Lorg/apache/kafka/common/Uuid;
+#partitionErrors()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError;
+#setPartitionErrors(Ljava/util/List;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@3.0.0
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#next()I
+#prev()I
+#setNext(I)V
+#setPrev(I)V

+###org/apache/kafka/common/message/LeaderAndIsrResponseDataJsonConverter$LeaderAndIsrTopicErrorJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeClusterRequestDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeClusterRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeClusterRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeClusterRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ApiMessageType$ListenerType
@2.8.0
+#values()[Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/message/ApiMessageType$ListenerType;

+###org/apache/kafka/common/message/EnvelopeResponseDataJsonConverter
@2.8.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/EnvelopeResponseData;
+#write(Lorg/apache/kafka/common/message/EnvelopeResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/EnvelopeResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/utils/BufferSupplier
@2.8.0
+#<init>()V
+#create()Lorg/apache/kafka/common/utils/BufferSupplier;
+#get(I)Ljava/nio/ByteBuffer;
+#release(Ljava/nio/ByteBuffer;)V
+#close()V

+###org/apache/kafka/common/utils/BufferSupplier$GrowableBufferSupplier
@2.8.0
+#<init>()V
+#get(I)Ljava/nio/ByteBuffer;
+#release(Ljava/nio/ByteBuffer;)V
+#close()V

+###org/apache/kafka/common/protocol/DataInputStreamReadable
@2.8.0
+#<init>(Ljava/io/DataInputStream;)V
+#readByte()B
+#readShort()S
+#readInt()I
+#readLong()J
+#readDouble()D
+#readArray([B)V
+#readUnsignedVarint()I
+#readByteBuffer(I)Ljava/nio/ByteBuffer;
+#readVarint()I
+#readVarlong()J
+#close()V
@2.8.2
+#readArray(I)[B
+#remaining()I
-#readArray([B)V
@3.0.0
+#readArray([B)V
-#readArray(I)[B
@3.0.2
-###org/apache/kafka/common/protocol/DataInputStreamReadable

+###org/apache/kafka/common/protocol/types/Field$Uint16
@2.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/protocol/DataOutputStreamWritable
@2.8.0
+#<init>(Ljava/io/DataOutputStream;)V
+#writeByte(B)V
+#writeShort(S)V
+#writeInt(I)V
+#writeLong(J)V
+#writeDouble(D)V
+#writeByteArray([B)V
+#writeUnsignedVarint(I)V
+#writeByteBuffer(Ljava/nio/ByteBuffer;)V
+#writeVarint(I)V
+#writeVarlong(J)V
+#flush()V
+#close()V

+###org/apache/kafka/common/protocol/SendBuilder
@2.8.0
+#writeByte(B)V
+#writeShort(S)V
+#writeInt(I)V
+#writeLong(J)V
+#writeDouble(D)V
+#writeByteArray([B)V
+#writeUnsignedVarint(I)V
+#writeByteBuffer(Ljava/nio/ByteBuffer;)V
+#writeVarint(I)V
+#writeVarlong(J)V
+#writeRecords(Lorg/apache/kafka/common/record/BaseRecords;)V
+#build()Lorg/apache/kafka/common/network/Send;
+#buildRequestSend(Lorg/apache/kafka/common/requests/RequestHeader;Lorg/apache/kafka/common/protocol/Message;)Lorg/apache/kafka/common/network/Send;
+#buildResponseSend(Lorg/apache/kafka/common/requests/ResponseHeader;Lorg/apache/kafka/common/protocol/Message;S)Lorg/apache/kafka/common/network/Send;

+###org/apache/kafka/common/protocol/MessageSizeAccumulator
@2.8.0
+#<init>()V
+#totalSize()I
+#sizeExcludingZeroCopy()I
+#zeroCopySize()I
+#addZeroCopyBytes(I)V
+#addBytes(I)V
+#add(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;)V

+###org/apache/kafka/common/Uuid
@2.8.0
+#<init>(JJ)V
+#randomUuid()Lorg/apache/kafka/common/Uuid;
+#getMostSignificantBits()J
+#getLeastSignificantBits()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#fromString(Ljava/lang/String;)Lorg/apache/kafka/common/Uuid;
+#compareTo(Lorg/apache/kafka/common/Uuid;)I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/kafka/common/requests/ListOffsetsResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/ListOffsetsResponseData;)V
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/ListOffsetsResponseData;
+#topics()Ljava/util/List;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListOffsetsResponse;
+#toString()Ljava/lang/String;
+#shouldClientThrottle(S)Z
+#singletonListOffsetsTopicResponse(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/protocol/Errors;JJI)Lorg/apache/kafka/common/message/ListOffsetsResponseData$ListOffsetsTopicResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/UnregisterBrokerRequest$Builder
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/UnregisterBrokerRequest;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/UnregisterBrokerResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;)V
+#data()Lorg/apache/kafka/common/message/UnregisterBrokerResponseData;
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/UnregisterBrokerResponse;
+#shouldClientThrottle(S)Z
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeProducersRequest$Builder
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeProducersRequestData;)V
+#addTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeProducersRequestData$TopicRequest;
+#build(S)Lorg/apache/kafka/common/requests/DescribeProducersRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/EnvelopeResponse
@2.8.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/protocol/Errors;)V
+#<init>(Lorg/apache/kafka/common/message/EnvelopeResponseData;)V
+#responseData()Ljava/nio/ByteBuffer;
+#errorCounts()Ljava/util/Map;
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#data()Lorg/apache/kafka/common/message/EnvelopeResponseData;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/EnvelopeResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeProducersRequest
@2.8.0
+#data()Lorg/apache/kafka/common/message/DescribeProducersRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/DescribeProducersResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeProducersRequest;
+#toString(Z)Ljava/lang/String;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/BrokerHeartbeatRequest$Builder
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/BrokerHeartbeatRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/FetchSnapshotRequest
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/FetchSnapshotRequestData;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/FetchSnapshotResponse;
+#data()Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#singleton(Lorg/apache/kafka/common/TopicPartition;Ljava/util/function/UnaryOperator;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
+#forTopicPartition(Lorg/apache/kafka/common/message/FetchSnapshotRequestData;Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Optional;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/FetchSnapshotRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.0.0
+#singleton(Ljava/lang/String;Lorg/apache/kafka/common/TopicPartition;Ljava/util/function/UnaryOperator;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;
-#singleton(Lorg/apache/kafka/common/TopicPartition;Ljava/util/function/UnaryOperator;)Lorg/apache/kafka/common/message/FetchSnapshotRequestData;

+###org/apache/kafka/common/requests/DescribeClusterRequest
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeClusterRequestData;S)V
+#data()Lorg/apache/kafka/common/message/DescribeClusterRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#toString(Z)Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeClusterRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/UnregisterBrokerRequest
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;S)V
+#data()Lorg/apache/kafka/common/message/UnregisterBrokerRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/UnregisterBrokerResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/UnregisterBrokerRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/CorrelationIdMismatchException
@2.8.0
+#<init>(Ljava/lang/String;II)V
+#requestCorrelationId()I
+#responseCorrelationId()I

+###org/apache/kafka/common/requests/EnvelopeRequest$Builder
@2.8.0
+#<init>(Ljava/nio/ByteBuffer;[B[B)V
+#build(S)Lorg/apache/kafka/common/requests/EnvelopeRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/EnvelopeRequest
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/EnvelopeRequestData;S)V
+#requestData()Ljava/nio/ByteBuffer;
+#clientAddress()[B
+#requestPrincipal()[B
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/EnvelopeRequest;
+#data()Lorg/apache/kafka/common/message/EnvelopeRequestData;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/DescribeProducersResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeProducersResponseData;)V
+#data()Lorg/apache/kafka/common/message/DescribeProducersResponseData;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeProducersResponse;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/BrokerHeartbeatResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;)V
+#data()Lorg/apache/kafka/common/message/BrokerHeartbeatResponseData;
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/BrokerHeartbeatResponse;
+#shouldClientThrottle(S)Z
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/DescribeClusterResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeClusterResponseData;)V
+#nodes()Ljava/util/Map;
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/DescribeClusterResponseData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeClusterResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/FetchSnapshotRequest$Builder
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/FetchSnapshotRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/FetchSnapshotRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/FetchSnapshotResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/FetchSnapshotResponseData;)V
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#withTopLevelError(Lorg/apache/kafka/common/protocol/Errors;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#singleton(Lorg/apache/kafka/common/TopicPartition;Ljava/util/function/UnaryOperator;)Lorg/apache/kafka/common/message/FetchSnapshotResponseData;
+#forTopicPartition(Lorg/apache/kafka/common/message/FetchSnapshotResponseData;Lorg/apache/kafka/common/TopicPartition;)Ljava/util/Optional;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/FetchSnapshotResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/BrokerRegistrationRequest$Builder
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/BrokerRegistrationRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@3.4.0
+#oldestAllowedVersion()S

+###org/apache/kafka/common/requests/ListOffsetsRequest$Builder
@2.8.0
+#forReplica(SI)Lorg/apache/kafka/common/requests/ListOffsetsRequest$Builder;
+#forConsumer(ZLorg/apache/kafka/common/IsolationLevel;)Lorg/apache/kafka/common/requests/ListOffsetsRequest$Builder;
+#setTargetTimes(Ljava/util/List;)Lorg/apache/kafka/common/requests/ListOffsetsRequest$Builder;
+#build(S)Lorg/apache/kafka/common/requests/ListOffsetsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@3.0.0
+#forConsumer(ZLorg/apache/kafka/common/IsolationLevel;Z)Lorg/apache/kafka/common/requests/ListOffsetsRequest$Builder;
-#forConsumer(ZLorg/apache/kafka/common/IsolationLevel;)Lorg/apache/kafka/common/requests/ListOffsetsRequest$Builder;

+###org/apache/kafka/common/requests/BrokerRegistrationResponse
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;)V
+#data()Lorg/apache/kafka/common/message/BrokerRegistrationResponseData;
+#throttleTimeMs()I
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/BrokerRegistrationResponse;
+#shouldClientThrottle(S)Z
+#toString()Ljava/lang/String;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/ListOffsetsRequest
@2.8.0
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/message/ListOffsetsRequestData;
+#replicaId()I
+#isolationLevel()Lorg/apache/kafka/common/IsolationLevel;
+#topics()Ljava/util/List;
+#duplicatePartitions()Ljava/util/Set;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListOffsetsRequest;
+#toListOffsetsTopics(Ljava/util/Map;)Ljava/util/List;
+#singletonRequestData(Ljava/lang/String;IJI)Lorg/apache/kafka/common/message/ListOffsetsRequestData$ListOffsetsTopic;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/DescribeClusterRequest$Builder
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/DescribeClusterRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeClusterRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/BrokerHeartbeatRequest
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;S)V
+#data()Lorg/apache/kafka/common/message/BrokerHeartbeatRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/BrokerHeartbeatResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/BrokerHeartbeatRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/BrokerRegistrationRequest
@2.8.0
+#<init>(Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;S)V
+#data()Lorg/apache/kafka/common/message/BrokerRegistrationRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/BrokerRegistrationResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/BrokerRegistrationRequest;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/errors/UnknownTopicIdException
@2.8.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/PrincipalDeserializationException
@2.8.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/PositionOutOfRangeException
@2.8.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InconsistentTopicIdException
@2.8.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/DuplicateBrokerRegistrationException
@2.8.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/BrokerIdNotRegisteredException
@2.8.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/SnapshotNotFoundException
@2.8.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/errors/InconsistentClusterIdException
@2.8.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/clients/producer/internals/RecordAccumulator$PartitionerConfig
@3.3.0
+#<init>(ZJ)V
+#<init>()V

+###org/apache/kafka/clients/producer/internals/BuiltInPartitioner$StickyPartitionInfo
@3.3.0
+#partition()I

+###org/apache/kafka/clients/producer/internals/RecordAccumulator$AppendCallbacks
@3.3.0
+#setPartition(I)V

+###org/apache/kafka/clients/producer/internals/KafkaProducerMetrics
@3.1.0
+#<init>(Lorg/apache/kafka/common/metrics/Metrics;)V
+#close()V
+#recordFlush(J)V
+#recordInit(J)V
+#recordBeginTxn(J)V
+#recordSendOffsets(J)V
+#recordCommitTxn(J)V
+#recordAbortTxn(J)V
@3.3.0
+#recordMetadataWait(J)V

+###org/apache/kafka/clients/producer/internals/RecordAccumulator$NodeLatencyStats
@3.3.0

+###org/apache/kafka/clients/producer/internals/BuiltInPartitioner
@3.3.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;Ljava/lang/String;I)V
+#loadStatsRangeEnd()I
+#updatePartitionLoadStats([I[II)V
+#partitionForKey([BI)I

+###org/apache/kafka/clients/admin/ProducerState
@3.0.0
+#<init>(JIIJLjava/util/OptionalInt;Ljava/util/OptionalLong;)V
+#producerId()J
+#producerEpoch()I
+#lastSequence()I
+#lastTimestamp()J
+#currentTransactionStartOffset()Ljava/util/OptionalLong;
+#coordinatorEpoch()Ljava/util/OptionalInt;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/DescribeTransactionsResult
@3.0.0
+#description(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/ForwardingAdmin
@3.4.0
+#<init>(Ljava/util/Map;)V
+#close(Ljava/time/Duration;)V
+#createTopics(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateTopicsOptions;)Lorg/apache/kafka/clients/admin/CreateTopicsResult;
+#deleteTopics(Lorg/apache/kafka/common/TopicCollection;Lorg/apache/kafka/clients/admin/DeleteTopicsOptions;)Lorg/apache/kafka/clients/admin/DeleteTopicsResult;
+#listTopics(Lorg/apache/kafka/clients/admin/ListTopicsOptions;)Lorg/apache/kafka/clients/admin/ListTopicsResult;
+#describeTopics(Lorg/apache/kafka/common/TopicCollection;Lorg/apache/kafka/clients/admin/DescribeTopicsOptions;)Lorg/apache/kafka/clients/admin/DescribeTopicsResult;
+#describeCluster(Lorg/apache/kafka/clients/admin/DescribeClusterOptions;)Lorg/apache/kafka/clients/admin/DescribeClusterResult;
+#describeAcls(Lorg/apache/kafka/common/acl/AclBindingFilter;Lorg/apache/kafka/clients/admin/DescribeAclsOptions;)Lorg/apache/kafka/clients/admin/DescribeAclsResult;
+#createAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/CreateAclsOptions;)Lorg/apache/kafka/clients/admin/CreateAclsResult;
+#deleteAcls(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteAclsOptions;)Lorg/apache/kafka/clients/admin/DeleteAclsResult;
+#describeConfigs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConfigsOptions;)Lorg/apache/kafka/clients/admin/DescribeConfigsResult;
+#alterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;[deprecated]
+#incrementalAlterConfigs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConfigsOptions;)Lorg/apache/kafka/clients/admin/AlterConfigsResult;
+#alterReplicaLogDirs(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/AlterReplicaLogDirsResult;
+#describeLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeLogDirsResult;
+#describeReplicaLogDirs(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsOptions;)Lorg/apache/kafka/clients/admin/DescribeReplicaLogDirsResult;
+#createPartitions(Ljava/util/Map;Lorg/apache/kafka/clients/admin/CreatePartitionsOptions;)Lorg/apache/kafka/clients/admin/CreatePartitionsResult;
+#deleteRecords(Ljava/util/Map;Lorg/apache/kafka/clients/admin/DeleteRecordsOptions;)Lorg/apache/kafka/clients/admin/DeleteRecordsResult;
+#createDelegationToken(Lorg/apache/kafka/clients/admin/CreateDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/CreateDelegationTokenResult;
+#renewDelegationToken([BLorg/apache/kafka/clients/admin/RenewDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/RenewDelegationTokenResult;
+#expireDelegationToken([BLorg/apache/kafka/clients/admin/ExpireDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/ExpireDelegationTokenResult;
+#describeDelegationToken(Lorg/apache/kafka/clients/admin/DescribeDelegationTokenOptions;)Lorg/apache/kafka/clients/admin/DescribeDelegationTokenResult;
+#describeConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DescribeConsumerGroupsResult;
+#listConsumerGroups(Lorg/apache/kafka/clients/admin/ListConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupsResult;
+#listConsumerGroupOffsets(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult;
+#deleteConsumerGroups(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupsResult;
+#deleteConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Set;Lorg/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsResult;
+#electLeaders(Lorg/apache/kafka/common/ElectionType;Ljava/util/Set;Lorg/apache/kafka/clients/admin/ElectLeadersOptions;)Lorg/apache/kafka/clients/admin/ElectLeadersResult;
+#alterPartitionReassignments(Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/AlterPartitionReassignmentsResult;
+#listPartitionReassignments(Ljava/util/Optional;Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsOptions;)Lorg/apache/kafka/clients/admin/ListPartitionReassignmentsResult;
+#removeMembersFromConsumerGroup(Ljava/lang/String;Lorg/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupOptions;)Lorg/apache/kafka/clients/admin/RemoveMembersFromConsumerGroupResult;
+#alterConsumerGroupOffsets(Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/clients/admin/AlterConsumerGroupOffsetsOptions;)Lorg/apache/kafka/clients/admin/AlterConsumerGroupOffsetsResult;
+#listOffsets(Ljava/util/Map;Lorg/apache/kafka/clients/admin/ListOffsetsOptions;)Lorg/apache/kafka/clients/admin/ListOffsetsResult;
+#describeClientQuotas(Lorg/apache/kafka/common/quota/ClientQuotaFilter;Lorg/apache/kafka/clients/admin/DescribeClientQuotasOptions;)Lorg/apache/kafka/clients/admin/DescribeClientQuotasResult;
+#alterClientQuotas(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/AlterClientQuotasOptions;)Lorg/apache/kafka/clients/admin/AlterClientQuotasResult;
+#describeUserScramCredentials(Ljava/util/List;Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsOptions;)Lorg/apache/kafka/clients/admin/DescribeUserScramCredentialsResult;
+#alterUserScramCredentials(Ljava/util/List;Lorg/apache/kafka/clients/admin/AlterUserScramCredentialsOptions;)Lorg/apache/kafka/clients/admin/AlterUserScramCredentialsResult;
+#describeFeatures(Lorg/apache/kafka/clients/admin/DescribeFeaturesOptions;)Lorg/apache/kafka/clients/admin/DescribeFeaturesResult;
+#updateFeatures(Ljava/util/Map;Lorg/apache/kafka/clients/admin/UpdateFeaturesOptions;)Lorg/apache/kafka/clients/admin/UpdateFeaturesResult;
+#describeMetadataQuorum(Lorg/apache/kafka/clients/admin/DescribeMetadataQuorumOptions;)Lorg/apache/kafka/clients/admin/DescribeMetadataQuorumResult;
+#unregisterBroker(ILorg/apache/kafka/clients/admin/UnregisterBrokerOptions;)Lorg/apache/kafka/clients/admin/UnregisterBrokerResult;
+#describeProducers(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeProducersOptions;)Lorg/apache/kafka/clients/admin/DescribeProducersResult;
+#describeTransactions(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/DescribeTransactionsOptions;)Lorg/apache/kafka/clients/admin/DescribeTransactionsResult;
+#abortTransaction(Lorg/apache/kafka/clients/admin/AbortTransactionSpec;Lorg/apache/kafka/clients/admin/AbortTransactionOptions;)Lorg/apache/kafka/clients/admin/AbortTransactionResult;
+#listTransactions(Lorg/apache/kafka/clients/admin/ListTransactionsOptions;)Lorg/apache/kafka/clients/admin/ListTransactionsResult;
+#fenceProducers(Ljava/util/Collection;Lorg/apache/kafka/clients/admin/FenceProducersOptions;)Lorg/apache/kafka/clients/admin/FenceProducersResult;
+#metrics()Ljava/util/Map;

+###org/apache/kafka/clients/admin/ListTransactionsOptions
@3.0.0
+#<init>()V
+#filterStates(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/ListTransactionsOptions;
+#filterProducerIds(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/ListTransactionsOptions;
+#filteredStates()Ljava/util/Set;
+#filteredProducerIds()Ljava/util/Set;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/kafka/clients/admin/TransactionState
@3.0.0
+#values()[Lorg/apache/kafka/clients/admin/TransactionState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/TransactionState;
+#toString()Ljava/lang/String;
+#parse(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/TransactionState;

+###org/apache/kafka/clients/admin/DescribeTransactionsOptions
@3.0.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/DescribeMetadataQuorumOptions
@3.3.0
+#<init>()V

+###org/apache/kafka/clients/admin/AbortTransactionSpec
@3.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;JSI)V
+#topicPartition()Lorg/apache/kafka/common/TopicPartition;
+#producerId()J
+#producerEpoch()S
+#coordinatorEpoch()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/TransactionListing
@3.0.0
+#<init>(Ljava/lang/String;JLorg/apache/kafka/clients/admin/TransactionState;)V
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#state()Lorg/apache/kafka/clients/admin/TransactionState;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/DescribeMetadataQuorumResult
@3.3.0
+#quorumInfo()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/QuorumInfo
@3.3.0
+#leaderId()I
+#leaderEpoch()J
+#highWatermark()J
+#voters()Ljava/util/List;
+#observers()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/internals/AdminApiHandler$RequestAndKeys
@3.2.0
+#<init>(Lorg/apache/kafka/common/requests/AbstractRequest$Builder;Ljava/util/Set;)V

+###org/apache/kafka/clients/admin/internals/CoordinatorStrategy
@3.0.0
+#<init>(Lorg/apache/kafka/common/requests/FindCoordinatorRequest$CoordinatorType;Lorg/apache/kafka/common/utils/LogContext;)V
+#lookupScope(Lorg/apache/kafka/clients/admin/internals/CoordinatorKey;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/FindCoordinatorRequest$Builder;
+#handleResponse(Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy$LookupResult;
+#disableBatch()V
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#lookupScope(Ljava/lang/Object;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;
@3.3.0
+#batch()Z

+###org/apache/kafka/clients/admin/internals/RemoveMembersFromConsumerGroupHandler
@3.0.0
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/utils/LogContext;)V
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#newFuture(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/LeaveGroupRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/LeaveGroupRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/LeaveGroupRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/AllBrokersStrategy
@3.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;)V
+#lookupScope(Lorg/apache/kafka/clients/admin/internals/AllBrokersStrategy$BrokerKey;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/MetadataRequest$Builder;
+#handleResponse(Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy$LookupResult;
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#lookupScope(Ljava/lang/Object;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;

+###org/apache/kafka/clients/admin/internals/ApiRequestScope
@3.0.0
+#destinationBrokerId()Ljava/util/OptionalInt;

+###org/apache/kafka/clients/admin/internals/DescribeProducersHandler
@3.0.0
+#<init>(Lorg/apache/kafka/clients/admin/DescribeProducersOptions;Lorg/apache/kafka/common/utils/LogContext;)V
+#newFuture(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeProducersRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeProducersRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeProducersRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/AlterConsumerGroupOffsetsHandler
@3.0.0
+#<init>(Ljava/lang/String;Ljava/util/Map;Lorg/apache/kafka/common/utils/LogContext;)V
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#newFuture(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetCommitRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/StaticBrokerStrategy
@3.0.0
+#<init>(I)V
+#lookupScope(Ljava/lang/Object;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#handleResponse(Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy$LookupResult;

+###org/apache/kafka/clients/admin/internals/CoordinatorKey
@3.0.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#byGroupId(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/internals/CoordinatorKey;
+#byTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/internals/CoordinatorKey;

+###org/apache/kafka/clients/admin/internals/AdminApiHandler
@3.0.0
+#apiName()Ljava/lang/String;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
@3.2.0
+#buildRequest(ILjava/util/Set;)Ljava/util/Collection;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/FenceProducersHandler
@3.2.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;)V
+#newFuture(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#handleSingleResponse(Lorg/apache/kafka/common/Node;Lorg/apache/kafka/clients/admin/internals/CoordinatorKey;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#handleSingleResponse(Lorg/apache/kafka/common/Node;Ljava/lang/Object;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;

+###org/apache/kafka/clients/admin/internals/AdminApiDriver$RequestSpec
@3.0.0
+#<init>(Ljava/lang/String;Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractRequest$Builder;JJI)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/internals/AdminApiFuture
@3.0.0
+#lookupKeys()Ljava/util/Set;
+#complete(Ljava/util/Map;)V
+#completeLookup(Ljava/util/Map;)V
+#completeLookupExceptionally(Ljava/util/Map;)V
+#completeExceptionally(Ljava/util/Map;)V
+#forKeys(Ljava/util/Set;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;

+###org/apache/kafka/clients/admin/internals/AbortTransactionHandler
@3.0.0
+#<init>(Lorg/apache/kafka/clients/admin/AbortTransactionSpec;Lorg/apache/kafka/common/utils/LogContext;)V
+#newFuture(Ljava/util/Set;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/WriteTxnMarkersRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/WriteTxnMarkersRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/WriteTxnMarkersRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/ListConsumerGroupOffsetsHandler
@3.0.0
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/utils/LogContext;)V
+#newFuture(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetFetchRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetFetchRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetFetchRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.3.0
+#<init>(Ljava/util/Map;ZLorg/apache/kafka/common/utils/LogContext;)V
+#newFuture(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#buildBatchedRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/OffsetFetchRequest$Builder;
+#buildRequest(ILjava/util/Set;)Ljava/util/Collection;
-#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/kafka/common/utils/LogContext;)V
-#newFuture(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
-#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetFetchRequest$Builder;
-#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/AllBrokersStrategy$BrokerKey
@3.0.0
+#<init>(Ljava/util/OptionalInt;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/internals/DescribeConsumerGroupsHandler
@3.0.0
+#<init>(ZLorg/apache/kafka/common/utils/LogContext;)V
+#newFuture(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeGroupsRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeGroupsRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeGroupsRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/PartitionLeaderStrategy
@3.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;)V
+#lookupScope(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/MetadataRequest$Builder;
+#handleResponse(Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy$LookupResult;
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#lookupScope(Ljava/lang/Object;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;

+###org/apache/kafka/clients/admin/internals/AdminApiLookupStrategy$LookupResult
@3.0.0
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/util/List;Ljava/util/Map;Ljava/util/Map;)V

+###org/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult
@3.0.0
+#<init>(Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)V
+#completed(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#failed(Ljava/lang/Object;Ljava/lang/Throwable;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#unmapped(Ljava/util/List;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#empty()Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;

+###org/apache/kafka/clients/admin/internals/AdminApiHandler$Unbatched
@3.2.0
+#<init>()V
+#buildRequest(ILjava/util/Set;)Ljava/util/Collection;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;

+###org/apache/kafka/clients/admin/internals/DeleteConsumerGroupOffsetsHandler
@3.0.0
+#<init>(Ljava/lang/String;Ljava/util/Set;Lorg/apache/kafka/common/utils/LogContext;)V
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#newFuture(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetDeleteRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetDeleteRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/OffsetDeleteRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/ListTransactionsHandler
@3.0.0
+#<init>(Lorg/apache/kafka/clients/admin/ListTransactionsOptions;Lorg/apache/kafka/common/utils/LogContext;)V
+#newFuture()Lorg/apache/kafka/clients/admin/internals/AllBrokersStrategy$AllBrokersFuture;
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/ListTransactionsRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/ListTransactionsRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/ListTransactionsRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/AdminApiDriver
@3.0.0
+#<init>(Lorg/apache/kafka/clients/admin/internals/AdminApiHandler;Lorg/apache/kafka/clients/admin/internals/AdminApiFuture;JJLorg/apache/kafka/common/utils/LogContext;)V
+#poll()Ljava/util/List;
+#onResponse(JLorg/apache/kafka/clients/admin/internals/AdminApiDriver$RequestSpec;Lorg/apache/kafka/common/requests/AbstractResponse;Lorg/apache/kafka/common/Node;)V
+#onFailure(JLorg/apache/kafka/clients/admin/internals/AdminApiDriver$RequestSpec;Ljava/lang/Throwable;)V

+###org/apache/kafka/clients/admin/internals/AdminApiHandler$Batched
@3.2.0
+#<init>()V
+#buildRequest(ILjava/util/Set;)Ljava/util/Collection;

+###org/apache/kafka/clients/admin/internals/DescribeTransactionsHandler
@3.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;)V
+#newFuture(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeTransactionsRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeTransactionsRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DescribeTransactionsRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/DeleteConsumerGroupsHandler
@3.0.0
+#<init>(Lorg/apache/kafka/common/utils/LogContext;)V
+#apiName()Ljava/lang/String;
+#lookupStrategy()Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy;
+#newFuture(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DeleteGroupsRequest$Builder;
+#handleResponse(Lorg/apache/kafka/common/Node;Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiHandler$ApiResult;
+#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
@3.2.0
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DeleteGroupsRequest$Builder;
+#buildBatchedRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/DeleteGroupsRequest$Builder;
-#buildRequest(ILjava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;

+###org/apache/kafka/clients/admin/internals/AdminApiLookupStrategy
@3.0.0
+#lookupScope(Ljava/lang/Object;)Lorg/apache/kafka/clients/admin/internals/ApiRequestScope;
+#buildRequest(Ljava/util/Set;)Lorg/apache/kafka/common/requests/AbstractRequest$Builder;
+#handleResponse(Ljava/util/Set;Lorg/apache/kafka/common/requests/AbstractResponse;)Lorg/apache/kafka/clients/admin/internals/AdminApiLookupStrategy$LookupResult;

+###org/apache/kafka/clients/admin/internals/AllBrokersStrategy$AllBrokersFuture
@3.0.0
+#<init>()V
+#lookupKeys()Ljava/util/Set;
+#completeLookup(Ljava/util/Map;)V
+#completeLookupExceptionally(Ljava/util/Map;)V
+#complete(Ljava/util/Map;)V
+#completeExceptionally(Ljava/util/Map;)V
+#all()Lorg/apache/kafka/common/internals/KafkaFutureImpl;

+###org/apache/kafka/clients/admin/internals/AdminApiFuture$SimpleAdminApiFuture
@3.0.0
+#<init>(Ljava/util/Set;)V
+#lookupKeys()Ljava/util/Set;
+#complete(Ljava/util/Map;)V
+#completeExceptionally(Ljava/util/Map;)V
+#all()Ljava/util/Map;
+#get(Ljava/lang/Object;)Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeProducersOptions
@3.0.0
+#<init>()V
+#brokerId(I)Lorg/apache/kafka/clients/admin/DescribeProducersOptions;
+#brokerId()Ljava/util/OptionalInt;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/AbortTransactionResult
@3.0.0
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/FeatureUpdate$UpgradeType
@3.3.0
+#values()[Lorg/apache/kafka/clients/admin/FeatureUpdate$UpgradeType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/admin/FeatureUpdate$UpgradeType;
+#code()B
+#fromCode(I)Lorg/apache/kafka/clients/admin/FeatureUpdate$UpgradeType;

+###org/apache/kafka/clients/admin/FenceProducersResult
@3.2.0
+#fencedProducers()Ljava/util/Map;
+#producerId(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
+#epochId(Ljava/lang/String;)Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/TransactionDescription
@3.0.0
+#<init>(ILorg/apache/kafka/clients/admin/TransactionState;JIJLjava/util/OptionalLong;Ljava/util/Set;)V
+#coordinatorId()I
+#state()Lorg/apache/kafka/clients/admin/TransactionState;
+#producerId()J
+#producerEpoch()I
+#transactionTimeoutMs()J
+#transactionStartTimeMs()Ljava/util/OptionalLong;
+#topicPartitions()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/DescribeProducersResult$PartitionProducerState
@3.0.0
+#<init>(Ljava/util/List;)V
+#activeProducers()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ListConsumerGroupOffsetsSpec
@3.3.0
+#<init>()V
+#topicPartitions(Ljava/util/Collection;)Lorg/apache/kafka/clients/admin/ListConsumerGroupOffsetsSpec;
+#topicPartitions()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/OffsetSpec$MaxTimestampSpec
@3.0.0
+#<init>()V

+###org/apache/kafka/clients/admin/FenceProducersOptions
@3.2.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/ListTransactionsResult
@3.0.0
+#all()Lorg/apache/kafka/common/KafkaFuture;
+#byBrokerId()Lorg/apache/kafka/common/KafkaFuture;
+#allByBrokerId()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/DescribeProducersResult
@3.0.0
+#partitionResult(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/common/KafkaFuture;
+#all()Lorg/apache/kafka/common/KafkaFuture;

+###org/apache/kafka/clients/admin/AbortTransactionOptions
@3.0.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/admin/QuorumInfo$ReplicaState
@3.3.0
+#replicaId()I
+#logEndOffset()J
+#lastFetchTimestamp()Ljava/util/OptionalLong;
+#lastCaughtUpTimestamp()Ljava/util/OptionalLong;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/DefaultEventHandler
@3.4.0
+#<init>(Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/internals/ClusterResourceListeners;Lorg/apache/kafka/common/metrics/Sensor;)V
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/BlockingQueue;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/clients/ApiVersions;Lorg/apache/kafka/common/metrics/Metrics;Lorg/apache/kafka/common/internals/ClusterResourceListeners;Lorg/apache/kafka/common/metrics/Sensor;)V
+#poll()Ljava/util/Optional;
+#isEmpty()Z
+#add(Lorg/apache/kafka/clients/consumer/internals/events/ApplicationEvent;)Z
+#close()V

+###org/apache/kafka/clients/consumer/internals/Fetch
@3.2.0
+#empty()Lorg/apache/kafka/clients/consumer/internals/Fetch;
+#forPartition(Lorg/apache/kafka/common/TopicPartition;Ljava/util/List;Z)Lorg/apache/kafka/clients/consumer/internals/Fetch;
+#add(Lorg/apache/kafka/clients/consumer/internals/Fetch;)V
+#records()Ljava/util/Map;
+#positionAdvanced()Z
+#numRecords()I
+#isEmpty()Z

+###org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer
@3.4.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#poll(Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/ConsumerRecords;
+#commitSync()V
+#commitAsync()V
+#commitAsync(Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#commitAsync(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/OffsetCommitCallback;)V
+#seek(Lorg/apache/kafka/common/TopicPartition;J)V
+#seek(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;)V
+#seekToBeginning(Ljava/util/Collection;)V
+#seekToEnd(Ljava/util/Collection;)V
+#position(Lorg/apache/kafka/common/TopicPartition;)J
+#position(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)J
+#committed(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
+#committed(Lorg/apache/kafka/common/TopicPartition;Ljava/time/Duration;)Lorg/apache/kafka/clients/consumer/OffsetAndMetadata;[deprecated]
+#committed(Ljava/util/Set;)Ljava/util/Map;
+#committed(Ljava/util/Set;Ljava/time/Duration;)Ljava/util/Map;
+#metrics()Ljava/util/Map;
+#partitionsFor(Ljava/lang/String;)Ljava/util/List;
+#partitionsFor(Ljava/lang/String;Ljava/time/Duration;)Ljava/util/List;
+#listTopics()Ljava/util/Map;
+#listTopics(Ljava/time/Duration;)Ljava/util/Map;
+#paused()Ljava/util/Set;
+#pause(Ljava/util/Collection;)V
+#resume(Ljava/util/Collection;)V
+#offsetsForTimes(Ljava/util/Map;)Ljava/util/Map;
+#offsetsForTimes(Ljava/util/Map;Ljava/time/Duration;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;)Ljava/util/Map;
+#beginningOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;)Ljava/util/Map;
+#endOffsets(Ljava/util/Collection;Ljava/time/Duration;)Ljava/util/Map;
+#currentLag(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/OptionalLong;
+#groupMetadata()Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;
+#enforceRebalance()V
+#enforceRebalance(Ljava/lang/String;)V
+#close()V
+#close(Ljava/time/Duration;)V
+#wakeup()V
+#commitSync(Ljava/time/Duration;)V
+#commitSync(Ljava/util/Map;)V
+#commitSync(Ljava/util/Map;Ljava/time/Duration;)V
+#assignment()Ljava/util/Set;
+#subscription()Ljava/util/Set;
+#subscribe(Ljava/util/Collection;)V
+#subscribe(Ljava/util/Collection;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#assign(Ljava/util/Collection;)V
+#subscribe(Ljava/util/regex/Pattern;Lorg/apache/kafka/clients/consumer/ConsumerRebalanceListener;)V
+#subscribe(Ljava/util/regex/Pattern;)V
+#unsubscribe()V
+#poll(J)Lorg/apache/kafka/clients/consumer/ConsumerRecords;[deprecated]

+###org/apache/kafka/clients/consumer/internals/NoopBackgroundEvent
@3.4.0
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/events/NoopApplicationEvent
@3.4.0
+#<init>(Ljava/util/concurrent/BlockingQueue;Ljava/lang/String;)V
+#process()Z
+#toString()Ljava/lang/String;

+###org/apache/kafka/clients/consumer/internals/events/BackgroundEvent$EventType
@3.4.0
+#values()[Lorg/apache/kafka/clients/consumer/internals/events/BackgroundEvent$EventType;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/clients/consumer/internals/events/BackgroundEvent$EventType;

+###org/apache/kafka/clients/consumer/internals/events/EventHandler
@3.4.0
+#poll()Ljava/util/Optional;
+#isEmpty()Z
+#add(Lorg/apache/kafka/clients/consumer/internals/events/ApplicationEvent;)Z

+###org/apache/kafka/clients/consumer/internals/events/ApplicationEvent
@3.4.0
+#<init>()V
+#process()Z

+###org/apache/kafka/clients/consumer/internals/events/BackgroundEvent
@3.4.0
+#<init>(Lorg/apache/kafka/clients/consumer/internals/events/BackgroundEvent$EventType;)V

+###org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread
@3.4.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/clients/consumer/ConsumerConfig;Lorg/apache/kafka/common/utils/LogContext;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/BlockingQueue;Lorg/apache/kafka/clients/consumer/internals/SubscriptionState;Lorg/apache/kafka/clients/consumer/internals/ConsumerMetadata;Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient;Lorg/apache/kafka/common/metrics/Metrics;)V
+#run()V
+#isRunning()Z
+#wakeup()V
+#close()V

+###org/apache/kafka/common/record/MemoryRecords$RecordFilter$BatchRetentionResult
@3.1.0
+#<init>(Lorg/apache/kafka/common/record/MemoryRecords$RecordFilter$BatchRetention;Z)V

+###org/apache/kafka/common/config/ConfigDef$ListSize
@3.2.0
+#atMostOfSize(I)Lorg/apache/kafka/common/config/ConfigDef$ListSize;
+#ensureValid(Ljava/lang/String;Ljava/lang/Object;)V
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/UnretryableException
@3.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/security/oauthbearer/internals/secured/CloseableVerificationKeyResolver
@3.4.0
+#close()V

+###org/apache/kafka/common/security/oauthbearer/internals/secured/ClaimValidationUtils
@3.4.0
+#<init>()V
+#validateScopes(Ljava/lang/String;Ljava/util/Collection;)Ljava/util/Set;
+#validateExpiration(Ljava/lang/String;Ljava/lang/Long;)J
+#validateSubject(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#validateIssuedAt(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;
+#validateClaimNameOverride(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/ValidateException
@3.4.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidatorFactory
@3.4.0
+#<init>()V
+#create(Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidator;
+#create(Ljava/util/Map;Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidator;
+#create(Ljava/util/Map;Lorg/jose4j/keys/resolvers/VerificationKeyResolver;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidator;
+#create(Ljava/util/Map;Ljava/lang/String;Lorg/jose4j/keys/resolvers/VerificationKeyResolver;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidator;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/FileTokenRetriever
@3.4.0
+#<init>(Ljava/nio/file/Path;)V
+#init()V
+#retrieve()Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/LoginAccessTokenValidator
@3.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#validate(Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/RefreshingHttpsJwksVerificationKeyResolver
@3.4.0
+#<init>(Lorg/apache/kafka/common/security/oauthbearer/internals/secured/RefreshingHttpsJwks;)V
+#init()V
+#close()V
+#resolveKey(Lorg/jose4j/jws/JsonWebSignature;Ljava/util/List;)Ljava/security/Key;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenRetriever
@3.4.0
+#retrieve()Ljava/lang/String;
+#close()V

+###org/apache/kafka/common/security/oauthbearer/internals/secured/Initable
@3.4.0
+#init()V

+###org/apache/kafka/common/security/oauthbearer/internals/secured/ValidatorAccessTokenValidator$ClaimSupplier
@3.4.0
+#get()Ljava/lang/Object;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/JaasOptionsUtils
@3.4.0
+#<init>(Ljava/util/Map;)V
+#getOptions(Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;
+#shouldCreateSSLSocketFactory(Ljava/net/URL;)Z
+#getSslClientConfig()Ljava/util/Map;
+#createSSLSocketFactory()Ljavax/net/ssl/SSLSocketFactory;
+#validateString(Ljava/lang/String;)Ljava/lang/String;
+#validateString(Ljava/lang/String;Z)Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/ConfigurationUtils
@3.4.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;)V
+#validateFile(Ljava/lang/String;)Ljava/nio/file/Path;
+#validateInteger(Ljava/lang/String;Z)Ljava/lang/Integer;
+#validateLong(Ljava/lang/String;)Ljava/lang/Long;
+#validateLong(Ljava/lang/String;Z)Ljava/lang/Long;
+#validateLong(Ljava/lang/String;ZLjava/lang/Long;)Ljava/lang/Long;
+#validateUrl(Ljava/lang/String;)Ljava/net/URL;
+#validateString(Ljava/lang/String;)Ljava/lang/String;
+#validateString(Ljava/lang/String;Z)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/Object;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetriever
@3.4.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/net/ssl/SSLSocketFactory;Ljava/lang/String;JJLjava/lang/Integer;Ljava/lang/Integer;)V
+#retrieve()Ljava/lang/String;
+#post(Ljava/net/HttpURLConnection;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidator
@3.4.0
+#validate(Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/SerializedJwt
@3.4.0
+#<init>(Ljava/lang/String;)V
+#getToken()Ljava/lang/String;
+#getHeader()Ljava/lang/String;
+#getPayload()Ljava/lang/String;
+#getSignature()Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenRetrieverFactory
@3.4.0
+#<init>()V
+#create(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenRetriever;
+#create(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenRetriever;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/Retryable
@3.4.0
+#call()Ljava/lang/Object;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/BasicOAuthBearerToken
@3.4.0
+#<init>(Ljava/lang/String;Ljava/util/Set;JLjava/lang/String;Ljava/lang/Long;)V
+#value()Ljava/lang/String;
+#scope()Ljava/util/Set;
+#lifetimeMs()J
+#principalName()Ljava/lang/String;
+#startTimeMs()Ljava/lang/Long;
+#toString()Ljava/lang/String;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/JwksFileVerificationKeyResolver
@3.4.0
+#<init>(Ljava/nio/file/Path;)V
+#init()V
+#resolveKey(Lorg/jose4j/jws/JsonWebSignature;Ljava/util/List;)Ljava/security/Key;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/VerificationKeyResolverFactory
@3.4.0
+#<init>()V
+#create(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/CloseableVerificationKeyResolver;
+#create(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/internals/secured/CloseableVerificationKeyResolver;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/RefreshingHttpsJwks
@3.4.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/jose4j/jwk/HttpsJwks;JJJ)V
+#init()V
+#close()V
+#getJsonWebKeys()Ljava/util/List;
+#getLocation()Ljava/lang/String;
+#maybeExpediteRefresh(Ljava/lang/String;)Z

+###org/apache/kafka/common/security/oauthbearer/internals/secured/Retry
@3.4.0
+#<init>(JJ)V
+#<init>(Lorg/apache/kafka/common/utils/Time;JJ)V
+#execute(Lorg/apache/kafka/common/security/oauthbearer/internals/secured/Retryable;)Ljava/lang/Object;

+###org/apache/kafka/common/security/oauthbearer/internals/secured/ValidatorAccessTokenValidator
@3.4.0
+#<init>(Ljava/lang/Integer;Ljava/util/Set;Ljava/lang/String;Lorg/jose4j/keys/resolvers/VerificationKeyResolver;Ljava/lang/String;Ljava/lang/String;)V
+#validate(Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;

+###org/apache/kafka/common/security/oauthbearer/OAuthBearerLoginCallbackHandler
@3.4.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#init(Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenRetriever;Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidator;)V
+#close()V
+#handle([Ljavax/security/auth/callback/Callback;)V

+###org/apache/kafka/common/security/oauthbearer/secured/OAuthBearerLoginCallbackHandler
@3.1.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#close()V
+#handle([Ljavax/security/auth/callback/Callback;)V
@3.4.0
-#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
-#close()V
-#handle([Ljavax/security/auth/callback/Callback;)V

+###org/apache/kafka/common/security/oauthbearer/secured/OAuthBearerValidatorCallbackHandler
@3.1.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#close()V
+#handle([Ljavax/security/auth/callback/Callback;)V
@3.4.0
-#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
-#close()V
-#handle([Ljavax/security/auth/callback/Callback;)V

+###org/apache/kafka/common/security/oauthbearer/OAuthBearerValidatorCallbackHandler
@3.4.0
+#<init>()V
+#configure(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V
+#init(Lorg/apache/kafka/common/security/oauthbearer/internals/secured/CloseableVerificationKeyResolver;Lorg/apache/kafka/common/security/oauthbearer/internals/secured/AccessTokenValidator;)V
+#close()V
+#handle([Ljavax/security/auth/callback/Callback;)V

+###org/apache/kafka/common/TopicIdPartition
@3.0.0
+#<init>(Lorg/apache/kafka/common/Uuid;Lorg/apache/kafka/common/TopicPartition;)V
+#topicId()Lorg/apache/kafka/common/Uuid;
+#topicPartition()Lorg/apache/kafka/common/TopicPartition;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.1.0
+#<init>(Lorg/apache/kafka/common/Uuid;ILjava/lang/String;)V
+#topic()Ljava/lang/String;
+#partition()I

+###org/apache/kafka/common/serialization/ListSerializer
@3.0.0
+#<init>()V
+#<init>(Lorg/apache/kafka/common/serialization/Serializer;)V
+#getInnerSerializer()Lorg/apache/kafka/common/serialization/Serializer;
+#configure(Ljava/util/Map;Z)V
+#serialize(Ljava/lang/String;Ljava/util/List;)[B
+#close()V
+#serialize(Ljava/lang/String;Ljava/lang/Object;)[B

+###org/apache/kafka/common/serialization/Serdes$ListSerde
@3.0.0
+#<init>()V
+#<init>(Ljava/lang/Class;Lorg/apache/kafka/common/serialization/Serde;)V

+###org/apache/kafka/common/serialization/ListDeserializer
@3.0.0
+#<init>()V
+#<init>(Ljava/lang/Class;Lorg/apache/kafka/common/serialization/Deserializer;)V
+#innerDeserializer()Lorg/apache/kafka/common/serialization/Deserializer;
+#configure(Ljava/util/Map;Z)V
+#deserialize(Ljava/lang/String;[B)Ljava/util/List;
+#close()V
+#deserialize(Ljava/lang/String;[B)Ljava/lang/Object;

+###org/apache/kafka/common/message/AllocateProducerIdsResponseData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#producerIdStart()J
+#producerIdLen()I
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;
+#setProducerIdStart(J)Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;
+#setProducerIdLen(I)Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListTransactionsResponseDataJsonConverter$TransactionStateJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListTransactionsResponseData$TransactionState;
+#write(Lorg/apache/kafka/common/message/ListTransactionsResponseData$TransactionState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListTransactionsResponseData$TransactionState;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitionsCollection
@3.0.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitions;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ElectLeadersRequestData$TopicPartitionsCollection;

+###org/apache/kafka/common/message/OffsetFetchRequestDataJsonConverter$OffsetFetchRequestGroupJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestGroup;
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestGroup;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestGroup;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopics
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopics;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopics;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopics;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestGroup
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestGroup;
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestGroup;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestGroup;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AlterPartitionRequestData
@3.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionRequestData;
+#toString()Ljava/lang/String;
+#brokerId()I
+#brokerEpoch()J
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setBrokerId(I)Lorg/apache/kafka/common/message/AlterPartitionRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/AlterPartitionRequestData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AlterPartitionResponseDataJsonConverter$PartitionDataJsonConverter
@3.2.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseDataJsonConverter$OffsetFetchResponsePartitionsJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopics
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopics;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopics;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopics;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#toString()Ljava/lang/String;
+#errorCode()S
+#transactionalId()Ljava/lang/String;
+#transactionState()Ljava/lang/String;
+#transactionTimeoutMs()I
+#transactionStartTimeMs()J
+#producerId()J
+#producerEpoch()S
+#topics()Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicDataCollection;
+#unknownTaggedFields()Ljava/util/List;
+#setErrorCode(S)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#setTransactionState(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#setTransactionTimeoutMs(I)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#setTransactionStartTimeMs(J)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#setProducerId(J)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#setProducerEpoch(S)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#setTopics(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicDataCollection;)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AlterPartitionRequestData$TopicData
@3.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@3.3.0
+#topicName()Ljava/lang/String;
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;
-#name()Ljava/lang/String;
-#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;

+###org/apache/kafka/common/message/AlterPartitionResponseDataJsonConverter
@3.2.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionResponseData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AlterPartitionResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeTransactionsRequestDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeTransactionsRequestData;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionResponseData
@3.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#topics()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/AlterPartitionResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterPartitionResponseData;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicErrorCollection
@3.0.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicError;
+#findAll(Lorg/apache/kafka/common/Uuid;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/LeaderAndIsrResponseData$LeaderAndIsrTopicErrorCollection;

+###org/apache/kafka/common/message/OffsetFetchResponseDataJsonConverter$OffsetFetchResponseGroupJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListTransactionsResponseData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListTransactionsResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#errorCode()S
+#unknownStateFilters()Ljava/util/List;
+#transactionStates()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/ListTransactionsResponseData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/ListTransactionsResponseData;
+#setUnknownStateFilters(Ljava/util/List;)Lorg/apache/kafka/common/message/ListTransactionsResponseData;
+#setTransactionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/ListTransactionsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AlterPartitionResponseDataJsonConverter$TopicDataJsonConverter
@3.2.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionRequestDataJsonConverter$PartitionDataJsonConverter
@3.2.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionRequestData$PartitionData
@3.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#leaderEpoch()I
+#newIsr()Ljava/util/List;
+#leaderRecoveryState()B
+#partitionEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;
+#setNewIsr(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;
+#setLeaderRecoveryState(B)Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;
+#setPartitionEpoch(I)Lorg/apache/kafka/common/message/AlterPartitionRequestData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#elementKeysAreEqual(Ljava/lang/Object;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData;
+#toString()Ljava/lang/String;
+#topic()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#next()I
+#prev()I
+#unknownTaggedFields()Ljava/util/List;
+#setTopic(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData;
+#setNext(I)V
+#setPrev(I)V
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AllocateProducerIdsRequestData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;
+#toString()Ljava/lang/String;
+#brokerId()I
+#brokerEpoch()J
+#unknownTaggedFields()Ljava/util/List;
+#setBrokerId(I)Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;
+#setBrokerEpoch(J)Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/OffsetFetchRequestDataJsonConverter$OffsetFetchRequestTopicsJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopics;
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopics;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/OffsetFetchRequestData$OffsetFetchRequestTopics;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/SnapshotFooterRecordJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SnapshotFooterRecord;
+#write(Lorg/apache/kafka/common/message/SnapshotFooterRecord;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/SnapshotFooterRecord;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeTransactionsRequestData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeTransactionsRequestData;
+#toString()Ljava/lang/String;
+#transactionalIds()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setTransactionalIds(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeTransactionsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AlterPartitionRequestDataJsonConverter$TopicDataJsonConverter
@3.2.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AlterPartitionRequestData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup;
+#toString()Ljava/lang/String;
+#groupId()Ljava/lang/String;
+#topics()Ljava/util/List;
+#errorCode()S
+#unknownTaggedFields()Ljava/util/List;
+#setGroupId(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup;
+#setTopics(Ljava/util/List;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseGroup;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/FindCoordinatorResponseDataJsonConverter$CoordinatorJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#write(Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AllocateProducerIdsRequestDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;
+#write(Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#committedOffset()J
+#committedLeaderEpoch()I
+#metadata()Ljava/lang/String;
+#errorCode()S
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;
+#setCommittedOffset(J)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;
+#setCommittedLeaderEpoch(I)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;
+#setMetadata(Ljava/lang/String;)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;
+#setErrorCode(S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponsePartitions;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AlterPartitionResponseData$TopicData
@3.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitions()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;
+#setPartitions(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;
@3.3.0
+#topicName()Ljava/lang/String;
+#topicId()Lorg/apache/kafka/common/Uuid;
+#setTopicName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;
+#setTopicId(Lorg/apache/kafka/common/Uuid;)Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;
-#name()Ljava/lang/String;
-#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/AlterPartitionResponseData$TopicData;

+###org/apache/kafka/common/message/FetchResponseDataJsonConverter$PartitionDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListTransactionsRequestData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListTransactionsRequestData;
+#toString()Ljava/lang/String;
+#stateFilters()Ljava/util/List;
+#producerIdFilters()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setStateFilters(Ljava/util/List;)Lorg/apache/kafka/common/message/ListTransactionsRequestData;
+#setProducerIdFilters(Ljava/util/List;)Lorg/apache/kafka/common/message/ListTransactionsRequestData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeTransactionsResponseDataJsonConverter$TopicDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeTransactionsResponseData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#transactionStates()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setThrottleTimeMs(I)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;
+#setTransactionStates(Ljava/util/List;)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartitionCollection
@3.0.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartition;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ConsumerProtocolAssignment$TopicPartitionCollection;

+###org/apache/kafka/common/message/FetchResponseData$PartitionData
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#highWatermark()J
+#lastStableOffset()J
+#logStartOffset()J
+#divergingEpoch()Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;
+#currentLeader()Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;
+#snapshotId()Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;
+#abortedTransactions()Ljava/util/List;
+#preferredReadReplica()I
+#records()Lorg/apache/kafka/common/record/BaseRecords;
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setHighWatermark(J)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setLastStableOffset(J)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setLogStartOffset(J)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setDivergingEpoch(Lorg/apache/kafka/common/message/FetchResponseData$EpochEndOffset;)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setCurrentLeader(Lorg/apache/kafka/common/message/FetchResponseData$LeaderIdAndEpoch;)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setSnapshotId(Lorg/apache/kafka/common/message/FetchResponseData$SnapshotId;)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setAbortedTransactions(Ljava/util/List;)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setPreferredReadReplica(I)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#setRecords(Lorg/apache/kafka/common/record/BaseRecords;)Lorg/apache/kafka/common/message/FetchResponseData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/SnapshotHeaderRecord
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/SnapshotHeaderRecord;
+#toString()Ljava/lang/String;
+#version()S
+#lastContainedLogTimestamp()J
+#unknownTaggedFields()Ljava/util/List;
+#setVersion(S)Lorg/apache/kafka/common/message/SnapshotHeaderRecord;
+#setLastContainedLogTimestamp(J)Lorg/apache/kafka/common/message/SnapshotHeaderRecord;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/DescribeTransactionsResponseDataJsonConverter$TransactionStateJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TransactionState;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/DescribeTransactionsResponseData$TopicDataCollection
@3.0.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicData;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/DescribeTransactionsResponseData$TopicDataCollection;

+###org/apache/kafka/common/message/DescribeTransactionsResponseDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/SnapshotHeaderRecordJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/SnapshotHeaderRecord;
+#write(Lorg/apache/kafka/common/message/SnapshotHeaderRecord;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/SnapshotHeaderRecord;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartitionCollection
@3.0.0
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Iterator;)V
+#find(Ljava/lang/String;)Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartition;
+#findAll(Ljava/lang/String;)Ljava/util/List;
+#duplicate()Lorg/apache/kafka/common/message/ConsumerProtocolSubscription$TopicPartitionCollection;

+###org/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#toString()Ljava/lang/String;
+#key()Ljava/lang/String;
+#nodeId()I
+#host()Ljava/lang/String;
+#port()I
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setKey(Ljava/lang/String;)Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#setNodeId(I)Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#setHost(Ljava/lang/String;)Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#setPort(I)Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#setErrorCode(S)Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/FindCoordinatorResponseData$Coordinator;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/SnapshotFooterRecord
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#apiKey()S
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/SnapshotFooterRecord;
+#toString()Ljava/lang/String;
+#version()S
+#unknownTaggedFields()Ljava/util/List;
+#setVersion(S)Lorg/apache/kafka/common/message/SnapshotFooterRecord;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListTransactionsResponseDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListTransactionsResponseData;
+#write(Lorg/apache/kafka/common/message/ListTransactionsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListTransactionsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/OffsetFetchResponseDataJsonConverter$OffsetFetchResponseTopicsJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopics;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopics;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/OffsetFetchResponseData$OffsetFetchResponseTopics;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AllocateProducerIdsResponseDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;
+#write(Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/ListTransactionsResponseData$TransactionState
@3.0.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/ListTransactionsResponseData$TransactionState;
+#toString()Ljava/lang/String;
+#transactionalId()Ljava/lang/String;
+#producerId()J
+#transactionState()Ljava/lang/String;
+#unknownTaggedFields()Ljava/util/List;
+#setTransactionalId(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListTransactionsResponseData$TransactionState;
+#setProducerId(J)Lorg/apache/kafka/common/message/ListTransactionsResponseData$TransactionState;
+#setTransactionState(Ljava/lang/String;)Lorg/apache/kafka/common/message/ListTransactionsResponseData$TransactionState;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/ListTransactionsRequestDataJsonConverter
@3.0.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/ListTransactionsRequestData;
+#write(Lorg/apache/kafka/common/message/ListTransactionsRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/ListTransactionsRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/message/AlterPartitionResponseData$PartitionData
@3.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#addSize(Lorg/apache/kafka/common/protocol/MessageSizeAccumulator;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#duplicate()Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#toString()Ljava/lang/String;
+#partitionIndex()I
+#errorCode()S
+#leaderId()I
+#leaderEpoch()I
+#isr()Ljava/util/List;
+#leaderRecoveryState()B
+#partitionEpoch()I
+#unknownTaggedFields()Ljava/util/List;
+#setPartitionIndex(I)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#setErrorCode(S)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#setLeaderId(I)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#setLeaderEpoch(I)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#setIsr(Ljava/util/List;)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#setLeaderRecoveryState(B)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#setPartitionEpoch(I)Lorg/apache/kafka/common/message/AlterPartitionResponseData$PartitionData;
+#duplicate()Lorg/apache/kafka/common/protocol/Message;

+###org/apache/kafka/common/message/AlterPartitionRequestDataJsonConverter
@3.2.0
+#<init>()V
+#read(Lcom/fasterxml/jackson/databind/JsonNode;S)Lorg/apache/kafka/common/message/AlterPartitionRequestData;
+#write(Lorg/apache/kafka/common/message/AlterPartitionRequestData;SZ)Lcom/fasterxml/jackson/databind/JsonNode;
+#write(Lorg/apache/kafka/common/message/AlterPartitionRequestData;S)Lcom/fasterxml/jackson/databind/JsonNode;

+###org/apache/kafka/common/TopicCollection
@3.0.0
+#ofTopicIds(Ljava/util/Collection;)Lorg/apache/kafka/common/TopicCollection$TopicIdCollection;
+#ofTopicNames(Ljava/util/Collection;)Lorg/apache/kafka/common/TopicCollection$TopicNameCollection;

+###org/apache/kafka/common/protocol/types/Field$Uint32
@3.3.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/kafka/common/requests/AllocateProducerIdsResponse
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;)V
+#data()Lorg/apache/kafka/common/message/AllocateProducerIdsResponseData;
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AllocateProducerIdsResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V
+#error()Lorg/apache/kafka/common/protocol/Errors;

+###org/apache/kafka/common/requests/DescribeTransactionsRequest$Builder
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/DescribeTransactionsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/DescribeTransactionsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/AlterPartitionRequest
@3.2.0
+#<init>(Lorg/apache/kafka/common/message/AlterPartitionRequestData;S)V
+#data()Lorg/apache/kafka/common/message/AlterPartitionRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterPartitionRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/ListTransactionsResponse
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/ListTransactionsResponseData;)V
+#data()Lorg/apache/kafka/common/message/ListTransactionsResponseData;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListTransactionsResponse;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/UpdateFeaturesRequest$FeatureUpdateItem
@3.3.0
+#<init>(Ljava/lang/String;SLorg/apache/kafka/clients/admin/FeatureUpdate$UpgradeType;)V
+#feature()Ljava/lang/String;
+#versionLevel()S
+#upgradeType()Lorg/apache/kafka/clients/admin/FeatureUpdate$UpgradeType;
+#isDeleteRequest()Z

+###org/apache/kafka/common/requests/AllocateProducerIdsRequest$Builder
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/AllocateProducerIdsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/DescribeTransactionsResponse
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;)V
+#data()Lorg/apache/kafka/common/message/DescribeTransactionsResponseData;
+#errorCounts()Ljava/util/Map;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeTransactionsResponse;
+#toString()Ljava/lang/String;
+#throttleTimeMs()I
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterPartitionResponse
@3.2.0
+#<init>(Lorg/apache/kafka/common/message/AlterPartitionResponseData;)V
+#data()Lorg/apache/kafka/common/message/AlterPartitionResponseData;
+#errorCounts()Ljava/util/Map;
+#throttleTimeMs()I
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AlterPartitionResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;
@3.3.0
+#maybeSetThrottleTimeMs(I)V

+###org/apache/kafka/common/requests/AlterPartitionRequest$Builder
@3.2.0
+#<init>(Lorg/apache/kafka/common/message/AlterPartitionRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/AlterPartitionRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;
@3.3.0
+#<init>(Lorg/apache/kafka/common/message/AlterPartitionRequestData;Z)V
-#<init>(Lorg/apache/kafka/common/message/AlterPartitionRequestData;)V

+###org/apache/kafka/common/requests/AllocateProducerIdsRequest
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;S)V
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/message/AllocateProducerIdsRequestData;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/AllocateProducerIdsRequest;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/ListTransactionsRequest$Builder
@3.0.0
+#<init>(Lorg/apache/kafka/common/message/ListTransactionsRequestData;)V
+#build(S)Lorg/apache/kafka/common/requests/ListTransactionsRequest;
+#toString()Ljava/lang/String;
+#build(S)Lorg/apache/kafka/common/requests/AbstractRequest;

+###org/apache/kafka/common/requests/OffsetFetchRequest$NoBatchedOffsetFetchRequestException
@3.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/requests/FindCoordinatorRequest$NoBatchedFindCoordinatorsException
@3.0.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/requests/ListTransactionsRequest
@3.0.0
+#data()Lorg/apache/kafka/common/message/ListTransactionsRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/ListTransactionsResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/ListTransactionsRequest;
+#toString(Z)Ljava/lang/String;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/requests/DescribeTransactionsRequest
@3.0.0
+#data()Lorg/apache/kafka/common/message/DescribeTransactionsRequestData;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/DescribeTransactionsResponse;
+#parse(Ljava/nio/ByteBuffer;S)Lorg/apache/kafka/common/requests/DescribeTransactionsRequest;
+#toString(Z)Ljava/lang/String;
+#getErrorResponse(ILjava/lang/Throwable;)Lorg/apache/kafka/common/requests/AbstractResponse;
+#data()Lorg/apache/kafka/common/protocol/ApiMessage;

+###org/apache/kafka/common/internals/KafkaCompletableFuture
@3.0.0
+#<init>()V
+#complete(Ljava/lang/Object;)Z
+#completeExceptionally(Ljava/lang/Throwable;)Z
+#obtrudeValue(Ljava/lang/Object;)V
+#obtrudeException(Ljava/lang/Throwable;)V
+#newIncompleteFuture()Ljava/util/concurrent/CompletableFuture;
+#completeAsync(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#completeAsync(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
+#completeOnTimeout(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/kafka/common/TopicCollection$TopicNameCollection
@3.0.0
+#topicNames()Ljava/util/Collection;

+###org/apache/kafka/common/TopicCollection$TopicIdCollection
@3.0.0
+#topicIds()Ljava/util/Collection;

+###org/apache/kafka/common/errors/RecordDeserializationException
@3.0.0
+#<init>(Lorg/apache/kafka/common/TopicPartition;JLjava/lang/String;Ljava/lang/Throwable;)V
+#topicPartition()Lorg/apache/kafka/common/TopicPartition;
+#offset()J

+###org/apache/kafka/common/errors/AuthorizerNotReadyException
@3.3.0
+#<init>()V

+###org/apache/kafka/common/errors/IneligibleReplicaException
@3.3.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/NewLeaderElectedException
@3.3.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/TransactionalIdNotFoundException
@3.0.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/errors/FetchSessionTopicIdException
@3.1.0
+#<init>(Ljava/lang/String;)V

+###org/apache/kafka/common/record/ByteBufferLogInputStream$ByteBufferLogEntry
@0.10.2.0
+#offset()J
+#record()Lorg/apache/kafka/common/record/Record;
+#setOffset(J)V
+#setCreateTime(J)V
+#setLogAppendTime(J)V
+#buffer()Ljava/nio/ByteBuffer;
@0.11.0.0
-###org/apache/kafka/common/record/ByteBufferLogInputStream$ByteBufferLogEntry

+###org/apache/kafka/common/record/ByteBufferOutputStream$UnderlyingOutputStream
@0.10.2.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#write(I)V
+#write([BII)V
+#buffer()Ljava/nio/ByteBuffer;
@0.10.2.2
-###org/apache/kafka/common/record/ByteBufferOutputStream$UnderlyingOutputStream

+###org/apache/kafka/common/record/FileLogInputStream$FileChannelLogEntry
@0.10.2.0
+#offset()J
+#position()I
+#magic()B
+#record()Lorg/apache/kafka/common/record/Record;
+#sizeInBytes()I
@0.11.0.0
-###org/apache/kafka/common/record/FileLogInputStream$FileChannelLogEntry

+###org/apache/kafka/common/record/FileRecords$LogEntryPosition
@0.10.2.0
+#<init>(JII)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.11.0.0
-###org/apache/kafka/common/record/FileRecords$LogEntryPosition

+###org/apache/kafka/common/record/MemoryRecords$LogEntryFilter
@0.10.2.0
+#shouldRetain(Lorg/apache/kafka/common/record/LogEntry;)Z
@0.11.0.0
-###org/apache/kafka/common/record/MemoryRecords$LogEntryFilter

+###org/apache/kafka/common/record/RecordsIterator$DeepRecordsIterator
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/record/LogEntry;ZI)V
@0.10.2.2
+#<init>(Lorg/apache/kafka/common/record/LogEntry;ZILorg/apache/kafka/common/record/BufferSupplier;)V
-#<init>(Lorg/apache/kafka/common/record/LogEntry;ZI)V
@0.11.0.0
-###org/apache/kafka/common/record/RecordsIterator$DeepRecordsIterator

+###org/apache/kafka/common/record/RecordsIterator
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/record/LogInputStream;ZZI)V
+#shallowIterator(Lorg/apache/kafka/common/record/LogInputStream;)Ljava/util/Iterator;
@0.10.2.2
+#<init>(Lorg/apache/kafka/common/record/LogInputStream;ZZILorg/apache/kafka/common/record/BufferSupplier;)V
-#<init>(Lorg/apache/kafka/common/record/LogInputStream;ZZI)V
@0.11.0.0
-###org/apache/kafka/common/record/RecordsIterator

+###org/apache/kafka/common/requests/CreateTopicsResponse$Error
@0.10.2.0
+#<init>(Lorg/apache/kafka/common/protocol/Errors;Ljava/lang/String;)V
+#is(Lorg/apache/kafka/common/protocol/Errors;)Z
+#error()Lorg/apache/kafka/common/protocol/Errors;
+#message()Ljava/lang/String;
+#messageWithFallback()Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.11.0.0
-###org/apache/kafka/common/requests/CreateTopicsResponse$Error

+###org/apache/kafka/common/requests/GroupCoordinatorRequest$Builder
@0.10.2.0
+#<init>(Ljava/lang/String;)V
+#build()Lorg/apache/kafka/common/requests/GroupCoordinatorRequest;
+#toString()Ljava/lang/String;
+#build()Lorg/apache/kafka/common/requests/AbstractRequest;
@0.11.0.0
-###org/apache/kafka/common/requests/GroupCoordinatorRequest$Builder

+###org/apache/kafka/common/requests/PartitionState
@0.10.0.1
+#<init>(IIILjava/util/List;ILjava/util/Set;)V
+#toString()Ljava/lang/String;
@0.11.0.0
+#<init>(IIILjava/util/List;ILjava/util/List;)V
-#<init>(IIILjava/util/List;ILjava/util/Set;)V
@1.0.0
-###org/apache/kafka/common/requests/PartitionState

+###org/apache/kafka/common/security/auth/AuthCallbackHandler
@0.10.0.0
+#configure(Ljava/util/Map;Lorg/apache/kafka/common/network/Mode;Ljavax/security/auth/Subject;Ljava/lang/String;)V
+#close()V
@1.0.0
-###org/apache/kafka/common/security/auth/AuthCallbackHandler

+###org/apache/kafka/common/security/authenticator/SaslServerAuthenticator$SaslState
@0.10.0.0
+#values()[Lorg/apache/kafka/common/security/authenticator/SaslServerAuthenticator$SaslState;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/security/authenticator/SaslServerAuthenticator$SaslState;
@1.0.0
-###org/apache/kafka/common/security/authenticator/SaslServerAuthenticator$SaslState

+###org/apache/kafka/common/record/RecordFormat
@1.0.1
+#values()[Lorg/apache/kafka/common/record/RecordFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/kafka/common/record/RecordFormat;
+#lookup(B)Lorg/apache/kafka/common/record/RecordFormat;
+#current()Lorg/apache/kafka/common/record/RecordFormat;
@2.0.0
-###org/apache/kafka/common/record/RecordFormat

+###org/apache/kafka/common/security/oauthbearer/secured/UnretryableException
@3.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/UnretryableException

+###org/apache/kafka/common/security/oauthbearer/secured/CloseableVerificationKeyResolver
@3.1.0
+#close()V
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/CloseableVerificationKeyResolver

+###org/apache/kafka/common/security/oauthbearer/secured/ClaimValidationUtils
@3.1.0
+#<init>()V
+#validateScopes(Ljava/lang/String;Ljava/util/Collection;)Ljava/util/Set;
+#validateExpiration(Ljava/lang/String;Ljava/lang/Long;)J
+#validateSubject(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#validateIssuedAt(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;
+#validateClaimNameOverride(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/ClaimValidationUtils

+###org/apache/kafka/common/security/oauthbearer/secured/ValidateException
@3.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/ValidateException

+###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidatorFactory
@3.1.0
+#<init>()V
+#create(Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidator;
+#create(Ljava/util/Map;Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidator;
+#create(Ljava/util/Map;Lorg/jose4j/keys/resolvers/VerificationKeyResolver;)Lorg/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidator;
+#create(Ljava/util/Map;Ljava/lang/String;Lorg/jose4j/keys/resolvers/VerificationKeyResolver;)Lorg/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidator;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidatorFactory

+###org/apache/kafka/common/security/oauthbearer/secured/FileTokenRetriever
@3.1.0
+#<init>(Ljava/nio/file/Path;)V
+#init()V
+#retrieve()Ljava/lang/String;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/FileTokenRetriever

+###org/apache/kafka/common/security/oauthbearer/secured/LoginAccessTokenValidator
@3.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#validate(Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/LoginAccessTokenValidator

+###org/apache/kafka/common/security/oauthbearer/secured/RefreshingHttpsJwksVerificationKeyResolver
@3.1.0
+#<init>(Lorg/apache/kafka/common/security/oauthbearer/secured/RefreshingHttpsJwks;)V
+#init()V
+#close()V
+#resolveKey(Lorg/jose4j/jws/JsonWebSignature;Ljava/util/List;)Ljava/security/Key;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/RefreshingHttpsJwksVerificationKeyResolver

+###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenRetriever
@3.1.0
+#retrieve()Ljava/lang/String;
+#close()V
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenRetriever

+###org/apache/kafka/common/security/oauthbearer/secured/Initable
@3.1.0
+#init()V
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/Initable

+###org/apache/kafka/common/security/oauthbearer/secured/ValidatorAccessTokenValidator$ClaimSupplier
@3.1.0
+#get()Ljava/lang/Object;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/ValidatorAccessTokenValidator$ClaimSupplier

+###org/apache/kafka/common/security/oauthbearer/secured/JaasOptionsUtils
@3.1.0
+#<init>(Ljava/util/Map;)V
+#getOptions(Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;
+#shouldCreateSSLSocketFactory(Ljava/net/URL;)Z
+#getSslClientConfig()Ljava/util/Map;
+#createSSLSocketFactory()Ljavax/net/ssl/SSLSocketFactory;
+#validateString(Ljava/lang/String;)Ljava/lang/String;
+#validateString(Ljava/lang/String;Z)Ljava/lang/String;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/JaasOptionsUtils

+###org/apache/kafka/common/security/oauthbearer/secured/ConfigurationUtils
@3.1.0
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Ljava/lang/String;)V
+#validateFile(Ljava/lang/String;)Ljava/nio/file/Path;
+#validateInteger(Ljava/lang/String;Z)Ljava/lang/Integer;
+#validateLong(Ljava/lang/String;)Ljava/lang/Long;
+#validateLong(Ljava/lang/String;Z)Ljava/lang/Long;
+#validateLong(Ljava/lang/String;ZLjava/lang/Long;)Ljava/lang/Long;
+#validateUrl(Ljava/lang/String;)Ljava/net/URL;
+#validateString(Ljava/lang/String;)Ljava/lang/String;
+#validateString(Ljava/lang/String;Z)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/Object;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/ConfigurationUtils

+###org/apache/kafka/common/security/oauthbearer/secured/HttpAccessTokenRetriever
@3.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/net/ssl/SSLSocketFactory;Ljava/lang/String;JJLjava/lang/Integer;Ljava/lang/Integer;)V
+#retrieve()Ljava/lang/String;
+#post(Ljava/net/HttpURLConnection;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/String;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/HttpAccessTokenRetriever

+###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidator
@3.1.0
+#validate(Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenValidator

+###org/apache/kafka/common/security/oauthbearer/secured/SerializedJwt
@3.1.0
+#<init>(Ljava/lang/String;)V
+#getToken()Ljava/lang/String;
+#getHeader()Ljava/lang/String;
+#getPayload()Ljava/lang/String;
+#getSignature()Ljava/lang/String;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/SerializedJwt

+###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenRetrieverFactory
@3.1.0
+#<init>()V
+#create(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/secured/AccessTokenRetriever;
+#create(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/secured/AccessTokenRetriever;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/AccessTokenRetrieverFactory

+###org/apache/kafka/common/security/oauthbearer/secured/Retryable
@3.1.0
+#call()Ljava/lang/Object;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/Retryable

+###org/apache/kafka/common/security/oauthbearer/secured/BasicOAuthBearerToken
@3.1.0
+#<init>(Ljava/lang/String;Ljava/util/Set;JLjava/lang/String;Ljava/lang/Long;)V
+#value()Ljava/lang/String;
+#scope()Ljava/util/Set;
+#lifetimeMs()J
+#principalName()Ljava/lang/String;
+#startTimeMs()Ljava/lang/Long;
+#toString()Ljava/lang/String;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/BasicOAuthBearerToken

+###org/apache/kafka/common/security/oauthbearer/secured/JwksFileVerificationKeyResolver
@3.1.0
+#<init>(Ljava/nio/file/Path;)V
+#init()V
+#resolveKey(Lorg/jose4j/jws/JsonWebSignature;Ljava/util/List;)Ljava/security/Key;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/JwksFileVerificationKeyResolver

+###org/apache/kafka/common/security/oauthbearer/secured/VerificationKeyResolverFactory
@3.1.0
+#<init>()V
+#create(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/secured/CloseableVerificationKeyResolver;
+#create(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/kafka/common/security/oauthbearer/secured/CloseableVerificationKeyResolver;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/VerificationKeyResolverFactory

+###org/apache/kafka/common/security/oauthbearer/secured/RefreshingHttpsJwks
@3.1.0
+#<init>(Lorg/apache/kafka/common/utils/Time;Lorg/jose4j/jwk/HttpsJwks;JJJ)V
+#init()V
+#close()V
+#getJsonWebKeys()Ljava/util/List;
+#getLocation()Ljava/lang/String;
+#maybeExpediteRefresh(Ljava/lang/String;)Z
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/RefreshingHttpsJwks

+###org/apache/kafka/common/security/oauthbearer/secured/Retry
@3.1.0
+#<init>(JJ)V
+#<init>(Lorg/apache/kafka/common/utils/Time;JJ)V
+#execute(Lorg/apache/kafka/common/security/oauthbearer/secured/Retryable;)Ljava/lang/Object;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/Retry

+###org/apache/kafka/common/security/oauthbearer/secured/ValidatorAccessTokenValidator
@3.1.0
+#<init>(Ljava/lang/Integer;Ljava/util/Set;Ljava/lang/String;Lorg/jose4j/keys/resolvers/VerificationKeyResolver;Ljava/lang/String;Ljava/lang/String;)V
+#validate(Ljava/lang/String;)Lorg/apache/kafka/common/security/oauthbearer/OAuthBearerToken;
@3.4.0
-###org/apache/kafka/common/security/oauthbearer/secured/ValidatorAccessTokenValidator

+###org/apache/kafka/common/security/token/delegation/DelegationTokenCredentialCallback
@1.1.0
+#<init>()V
+#tokenOwner(Ljava/lang/String;)V
+#tokenOwner()Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/security/token/delegation/DelegationTokenCredentialCallback

+###org/apache/kafka/common/security/token/delegation/DelegationTokenCache
@1.1.0
+#<init>(Ljava/util/Collection;)V
+#credential(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/security/scram/ScramCredential;
+#owner(Ljava/lang/String;)Ljava/lang/String;
+#updateCache(Lorg/apache/kafka/common/security/token/delegation/DelegationToken;Ljava/util/Map;)V
+#removeCache(Ljava/lang/String;)V
+#tokenForHmac(Ljava/lang/String;)Lorg/apache/kafka/common/security/token/delegation/TokenInformation;
+#addToken(Ljava/lang/String;Lorg/apache/kafka/common/security/token/delegation/TokenInformation;)Lorg/apache/kafka/common/security/token/delegation/TokenInformation;
+#removeToken(Ljava/lang/String;)V
+#tokens()Ljava/util/Collection;
+#token(Ljava/lang/String;)Lorg/apache/kafka/common/security/token/delegation/TokenInformation;
+#credentialCache(Ljava/lang/String;)Lorg/apache/kafka/common/security/authenticator/CredentialCache$Cache;
@2.0.0
-###org/apache/kafka/common/security/token/delegation/DelegationTokenCache

+###org/apache/kafka/common/security/scram/ScramExtensions
@1.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/util/Map;)V
+#extensionValue(Ljava/lang/String;)Ljava/lang/String;
+#extensionNames()Ljava/util/Set;
+#tokenAuthenticated()Z
+#toString()Ljava/lang/String;
@2.0.0
-###org/apache/kafka/common/security/scram/ScramExtensions

+###org/apache/kafka/clients/consumer/ConsumerRebalanceCallback
@0.8.2-beta
+#onPartitionsAssigned(Lorg/apache/kafka/clients/consumer/Consumer;Ljava/util/Collection;)V
+#onPartitionsRevoked(Lorg/apache/kafka/clients/consumer/Consumer;Ljava/util/Collection;)V
@0.9.0.0
-###org/apache/kafka/clients/consumer/ConsumerRebalanceCallback

+###org/apache/kafka/clients/consumer/OffsetMetadata
@0.8.2-beta
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/util/Map;)V
+#offset(Lorg/apache/kafka/common/TopicPartition;)J
+#error(Lorg/apache/kafka/common/TopicPartition;)Ljava/lang/Exception;
@0.9.0.0
-###org/apache/kafka/clients/consumer/OffsetMetadata

+###org/apache/kafka/clients/producer/internals/Metadata
@0.8.2-beta
+#<init>()V
+#<init>(JJ)V
+#fetch()Lorg/apache/kafka/common/Cluster;
+#add(Ljava/lang/String;)V
+#timeToNextUpdate(J)J
+#requestUpdate()I
+#awaitUpdate(IJ)V
+#topics()Ljava/util/Set;
+#update(Lorg/apache/kafka/common/Cluster;J)V
+#lastUpdate()J
+#refreshBackoff()J
@0.8.2.1
+#failedUpdate(J)V
@0.9.0.0
-###org/apache/kafka/clients/producer/internals/Metadata

+###org/apache/kafka/clients/producer/internals/Partitioner
@0.8.2-beta
+#<init>()V
+#partition(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/common/Cluster;)I
@0.9.0.0
-###org/apache/kafka/clients/producer/internals/Partitioner

+###org/apache/kafka/clients/tools/ProducerPerformance
@0.8.2-beta
+#<init>()V
+#main([Ljava/lang/String;)V
@0.9.0.0
-###org/apache/kafka/clients/tools/ProducerPerformance

+###org/apache/kafka/common/message/KafkaLZ4BlockInputStream
@0.8.2-beta
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
+#mark(I)V
+#reset()V
+#markSupported()Z
@0.9.0.0
-###org/apache/kafka/common/message/KafkaLZ4BlockInputStream

+###org/apache/kafka/common/message/KafkaLZ4BlockOutputStream$BD
@0.8.2-beta
+#<init>()V
+#<init>(I)V
+#fromByte(B)Lorg/apache/kafka/common/message/KafkaLZ4BlockOutputStream$BD;
+#getBlockMaximumSize()I
+#toByte()B
@0.9.0.0
-###org/apache/kafka/common/message/KafkaLZ4BlockOutputStream$BD

+###org/apache/kafka/common/message/KafkaLZ4BlockOutputStream$FLG
@0.8.2-beta
+#<init>()V
+#<init>(Z)V
+#fromByte(B)Lorg/apache/kafka/common/message/KafkaLZ4BlockOutputStream$FLG;
+#toByte()B
+#isPresetDictionarySet()Z
+#isContentChecksumSet()Z
+#isContentSizeSet()Z
+#isBlockChecksumSet()Z
+#isBlockIndependenceSet()Z
+#getVersion()I
@0.9.0.0
-###org/apache/kafka/common/message/KafkaLZ4BlockOutputStream$FLG

+###org/apache/kafka/common/message/KafkaLZ4BlockOutputStream
@0.8.2-beta
+#<init>(Ljava/io/OutputStream;IZ)V
+#<init>(Ljava/io/OutputStream;I)V
+#<init>(Ljava/io/OutputStream;)V
+#write(I)V
+#write([BII)V
+#flush()V
+#close()V
@0.9.0.0
-###org/apache/kafka/common/message/KafkaLZ4BlockOutputStream

+###org/apache/kafka/common/requests/ConsumerMetadataRequest
@0.8.2-beta
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#groupId()Ljava/lang/String;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ConsumerMetadataRequest;
@0.9.0.0
-###org/apache/kafka/common/requests/ConsumerMetadataRequest

+###org/apache/kafka/common/requests/ConsumerMetadataResponse
@0.8.2-beta
+#<init>(SLorg/apache/kafka/common/Node;)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;)V
+#errorCode()S
+#node()Lorg/apache/kafka/common/Node;
+#parse(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/common/requests/ConsumerMetadataResponse;
@0.9.0.0
-###org/apache/kafka/common/requests/ConsumerMetadataResponse

+###org/apache/kafka/common/utils/ClientUtils
@0.8.2-beta
+#<init>()V
+#parseAndValidateAddresses(Ljava/util/List;)Ljava/util/List;
@0.9.0.0
-###org/apache/kafka/common/utils/ClientUtils

+###org/apache/kafka/common/security/ssl/SslEngineBuilder
@2.3.0
+#keystore()Lorg/apache/kafka/common/security/ssl/SslEngineBuilder$SecurityStore;
+#truststore()Lorg/apache/kafka/common/security/ssl/SslEngineBuilder$SecurityStore;
+#createSslEngine(Lorg/apache/kafka/common/network/Mode;Ljava/lang/String;ILjava/lang/String;)Ljavax/net/ssl/SSLEngine;
+#sslContext()Ljavax/net/ssl/SSLContext;
+#shouldBeRebuilt(Ljava/util/Map;)Z
@2.6.0
-###org/apache/kafka/common/security/ssl/SslEngineBuilder

+###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopic
@2.4.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(Lorg/apache/kafka/common/protocol/ObjectSerializationCache;S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#name()Ljava/lang/String;
+#partitionIndexes()Ljava/util/List;
+#unknownTaggedFields()Ljava/util/List;
+#setName(Ljava/lang/String;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopic;
+#setPartitionIndexes(Ljava/util/List;)Lorg/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopic;
@2.6.0
-###org/apache/kafka/common/message/StopReplicaRequestData$StopReplicaTopic

+###org/apache/kafka/clients/MetadataCache$PartitionInfoAndEpoch
@2.3.0
+#partitionInfo()Lorg/apache/kafka/common/PartitionInfo;
+#epoch()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/kafka/clients/MetadataCache$PartitionInfoAndEpoch

+###org/apache/kafka/common/internals/TopicConstants
@0.10.0.0
@0.10.1.0
-###org/apache/kafka/common/internals/TopicConstants

+###org/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResult
@2.3.0
+#<init>(Lorg/apache/kafka/common/protocol/Readable;S)V
+#<init>(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#<init>()V
+#lowestSupportedVersion()S
+#highestSupportedVersion()S
+#read(Lorg/apache/kafka/common/protocol/Readable;S)V
+#write(Lorg/apache/kafka/common/protocol/Writable;S)V
+#fromStruct(Lorg/apache/kafka/common/protocol/types/Struct;S)V
+#toStruct(S)Lorg/apache/kafka/common/protocol/types/Struct;
+#size(S)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#errorCode()S
+#errorMessage()Ljava/lang/String;
+#resourceType()B
+#resourceName()Ljava/lang/String;
+#setErrorCode(S)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResult;
+#setErrorMessage(Ljava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResult;
+#setResourceType(B)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResult;
+#setResourceName(Ljava/lang/String;)Lorg/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResult;
@2.4.0
-###org/apache/kafka/common/message/IncrementalAlterConfigsResponseData$AlterConfigsResourceResult

+###org/apache/kafka/common/errors/DuplicateSequenceNumberException
@0.11.0.0
+#<init>(Ljava/lang/String;)V
@1.0.0
-###org/apache/kafka/common/errors/DuplicateSequenceNumberException

+###org/apache/kafka/common/requests/JoinGroupRequest$GroupProtocol
@0.9.0.0
+#<init>(Ljava/lang/String;Ljava/nio/ByteBuffer;)V
+#name()Ljava/lang/String;
+#metadata()Ljava/nio/ByteBuffer;
@0.9.0.1
-###org/apache/kafka/common/requests/JoinGroupRequest$GroupProtocol
