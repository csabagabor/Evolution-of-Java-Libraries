
+###org/springframework/security/web/DefaultRedirectStrategy
@3.0.0.RELEASE
+#<init>()V
+#sendRedirect(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V
+#setContextRelative(Z)V
@6.0.0
+#sendRedirect(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
-#sendRedirect(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V

+###org/springframework/security/web/http/SecurityHeaders
@5.1.0.RELEASE
+#bearerToken(Ljava/lang/String;)Ljava/util/function/Consumer;

+###org/springframework/security/web/RedirectStrategy
@3.0.0.RELEASE
+#sendRedirect(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V
@6.0.0
+#sendRedirect(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
-#sendRedirect(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V

+###org/springframework/security/web/servletapi/SecurityContextHolderAwareRequestWrapper
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
+#getRemoteUser()Ljava/lang/String;
+#getUserPrincipal()Ljava/security/Principal;
+#isUserInRole(Ljava/lang/String;)Z
@3.1.0.RELEASE
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/authentication/AuthenticationTrustResolver;Ljava/lang/String;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/security/authentication/AuthenticationTrustResolver;Ljava/lang/String;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/authentication/AuthenticationTrustResolver;Ljava/lang/String;)V

+###org/springframework/security/web/servletapi/SecurityContextHolderAwareRequestFilter
@3.0.0.RELEASE
+#<init>()V
+#setRolePrefix(Ljava/lang/String;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@3.2.0.RELEASE
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#setLogoutHandlers(Ljava/util/List;)V
+#afterPropertiesSet()V
+#setTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/PortMapper
@3.0.0.RELEASE
+#lookupHttpPort(Ljava/lang/Integer;)Ljava/lang/Integer;
+#lookupHttpsPort(Ljava/lang/Integer;)Ljava/lang/Integer;

+###org/springframework/security/web/FilterChainProxy$FilterChainValidator
@3.0.0.RELEASE
+#validate(Lorg/springframework/security/web/FilterChainProxy;)V

+###org/springframework/security/web/firewall/StrictHttpFirewall
@4.1.5.RELEASE
+#<init>()V
+#setAllowSemicolon(Z)V
+#setAllowUrlEncodedSlash(Z)V
+#setAllowUrlEncodedPeriod(Z)V
+#setAllowBackSlash(Z)V
+#setAllowUrlEncodedPercent(Z)V
+#getFirewalledRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/firewall/FirewalledRequest;
+#getFirewalledResponse(Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletResponse;
@4.2.0.RELEASE
-###org/springframework/security/web/firewall/StrictHttpFirewall

+###org/springframework/security/web/firewall/RequestRejectedException
@3.0.4.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/web/firewall/FirewalledRequest
@3.0.4.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#reset()V
@3.1.0.RELEASE
+#toString()Ljava/lang/String;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V

+###org/springframework/security/web/firewall/HttpFirewall
@3.0.4.RELEASE
+#getFirewalledRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/firewall/FirewalledRequest;
+#getFirewalledResponse(Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletResponse;
@6.0.0
+#getFirewalledRequest(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/firewall/FirewalledRequest;
+#getFirewalledResponse(Ljakarta/servlet/http/HttpServletResponse;)Ljakarta/servlet/http/HttpServletResponse;
-#getFirewalledRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/firewall/FirewalledRequest;
-#getFirewalledResponse(Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletResponse;

+###org/springframework/security/web/firewall/DefaultHttpFirewall
@3.0.4.RELEASE
+#<init>()V
+#getFirewalledRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/firewall/FirewalledRequest;
+#getFirewalledResponse(Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletResponse;
@3.2.10.RELEASE
+#setAllowUrlEncodedSlash(Z)V
@4.0.0.RELEASE
-#setAllowUrlEncodedSlash(Z)V
@4.1.4.RELEASE
+#setAllowUrlEncodedSlash(Z)V
@4.2.0.RELEASE
-#setAllowUrlEncodedSlash(Z)V
@4.2.1.RELEASE
+#setAllowUrlEncodedSlash(Z)V
@6.0.0
+#getFirewalledRequest(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/firewall/FirewalledRequest;
+#getFirewalledResponse(Ljakarta/servlet/http/HttpServletResponse;)Ljakarta/servlet/http/HttpServletResponse;
-#getFirewalledRequest(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/firewall/FirewalledRequest;
-#getFirewalledResponse(Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletResponse;

+###org/springframework/security/web/bind/support/AuthenticationPrincipalArgumentResolver
@3.2.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/security/web/bind/annotation/AuthenticationPrincipal
@3.2.0.RELEASE
+#errorOnInvalidType()Z

+###org/springframework/security/web/context/SecurityContextPersistenceFilter
@3.0.0.RELEASE
+#<init>()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
+#setForceEagerSessionCreation(Z)V
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/context/SecurityContextRepository;)V
*#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V[deprecated]
@4.0.0.RELEASE
-#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V[deprecated]
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/context/HttpRequestResponseHolder
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@3.0.3.RELEASE
+#getRequest()Ljavax/servlet/http/HttpServletRequest;
+#setRequest(Ljavax/servlet/http/HttpServletRequest;)V
+#getResponse()Ljavax/servlet/http/HttpServletResponse;
+#setResponse(Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getRequest()Ljakarta/servlet/http/HttpServletRequest;
+#setRequest(Ljakarta/servlet/http/HttpServletRequest;)V
+#getResponse()Ljakarta/servlet/http/HttpServletResponse;
+#setResponse(Ljakarta/servlet/http/HttpServletResponse;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getRequest()Ljavax/servlet/http/HttpServletRequest;
-#setRequest(Ljavax/servlet/http/HttpServletRequest;)V
-#getResponse()Ljavax/servlet/http/HttpServletResponse;
-#setResponse(Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/context/request/async/WebAsyncManagerIntegrationFilter
@3.2.0.RELEASE
+#<init>()V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V

+###org/springframework/security/web/context/request/async/SecurityContextCallableProcessingInterceptor
@3.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/security/core/context/SecurityContext;)V
+#beforeConcurrentHandling(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#preProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;)V
+#postProcess(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/util/concurrent/Callable;Ljava/lang/Object;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V

+###org/springframework/security/web/context/support/SecurityWebApplicationContextUtils
@3.2.9.RELEASE
+#<init>()V
+#findRequiredWebApplicationContext(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
@4.0.0.RELEASE
-###org/springframework/security/web/context/support/SecurityWebApplicationContextUtils

+###org/springframework/security/web/context/AbstractSecurityWebApplicationInitializer
@3.2.0.RELEASE
+#onStartup(Ljavax/servlet/ServletContext;)V
@6.0.0
+#onStartup(Ljakarta/servlet/ServletContext;)V
-#onStartup(Ljavax/servlet/ServletContext;)V

+###org/springframework/security/web/context/SecurityContextRepository
@3.0.0.RELEASE
+#loadContext(Lorg/springframework/security/web/context/HttpRequestResponseHolder;)Lorg/springframework/security/core/context/SecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z
@5.7.0
*#loadContext(Lorg/springframework/security/web/context/HttpRequestResponseHolder;)Lorg/springframework/security/core/context/SecurityContext;[deprecated]
+#loadContext(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/function/Supplier;
@5.8.0
*#loadContext(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/function/Supplier;[deprecated]
+#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
@6.0.0
+#loadDeferredContext(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#containsContext(Ljakarta/servlet/http/HttpServletRequest;)Z
-#loadContext(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/function/Supplier;[deprecated]
-#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
-#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/context/NullSecurityContextRepository
@3.1.0.RELEASE
+#<init>()V
+#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z
+#loadContext(Lorg/springframework/security/web/context/HttpRequestResponseHolder;)Lorg/springframework/security/core/context/SecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#containsContext(Ljakarta/servlet/http/HttpServletRequest;)Z
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z
-#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/context/SaveContextOnUpdateOrErrorResponseWrapper
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletResponse;Z)V
+#sendError(I)V
+#sendError(ILjava/lang/String;)V
+#sendRedirect(Ljava/lang/String;)V
+#encodeRedirectUrl(Ljava/lang/String;)Ljava/lang/String;
+#encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;
+#encodeUrl(Ljava/lang/String;)Ljava/lang/String;
+#encodeURL(Ljava/lang/String;)Ljava/lang/String;
+#isContextSaved()Z
@3.0.8.RELEASE
+#getOutputStream()Ljavax/servlet/ServletOutputStream;
+#getWriter()Ljava/io/PrintWriter;
+#flushBuffer()V
@3.1.0.RELEASE
-#getOutputStream()Ljavax/servlet/ServletOutputStream;
-#getWriter()Ljava/io/PrintWriter;
-#flushBuffer()V
@3.1.2.RELEASE
+#getOutputStream()Ljavax/servlet/ServletOutputStream;
+#getWriter()Ljava/io/PrintWriter;
+#flushBuffer()V
@3.2.0.RELEASE
+#disableSaveOnResponseCommitted()V
@3.2.8.RELEASE
+#disableOnResponseCommitted()V
+#setContentLength(I)V
+#addHeader(Ljava/lang/String;Ljava/lang/String;)V
-#sendError(I)V
-#sendError(ILjava/lang/String;)V
-#sendRedirect(Ljava/lang/String;)V
@4.0.0.RELEASE
+#sendError(I)V
+#sendError(ILjava/lang/String;)V
+#sendRedirect(Ljava/lang/String;)V
-#disableOnResponseCommitted()V
-#setContentLength(I)V
-#addHeader(Ljava/lang/String;Ljava/lang/String;)V
@4.0.2.RELEASE
+#disableOnResponseCommitted()V
+#setContentLength(I)V
+#addHeader(Ljava/lang/String;Ljava/lang/String;)V
-#sendError(I)V
-#sendError(ILjava/lang/String;)V
-#sendRedirect(Ljava/lang/String;)V
@4.1.0.RELEASE
-#flushBuffer()V
-#getWriter()Ljava/io/PrintWriter;
-#getOutputStream()Ljavax/servlet/ServletOutputStream;
-#disableOnResponseCommitted()V
-#setContentLength(I)V
-#addHeader(Ljava/lang/String;Ljava/lang/String;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletResponse;Z)V
-#<init>(Ljavax/servlet/http/HttpServletResponse;Z)V
-#encodeRedirectUrl(Ljava/lang/String;)Ljava/lang/String;
-#encodeUrl(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/security/web/context/HttpSessionSecurityContextRepository
@3.0.0.RELEASE
+#<init>()V
+#loadContext(Lorg/springframework/security/web/context/HttpRequestResponseHolder;)Lorg/springframework/security/core/context/SecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z
+#setSecurityContextClass(Ljava/lang/Class;)V[deprecated]
+#setCloneFromHttpSession(Z)V[deprecated]
+#setAllowSessionCreation(Z)V
+#setDisableUrlRewriting(Z)V
@3.1.0.RELEASE
+#setSpringSecurityContextKey(Ljava/lang/String;)V
-#setSecurityContextClass(Ljava/lang/Class;)V[deprecated]
-#setCloneFromHttpSession(Z)V[deprecated]
@3.2.0.RELEASE
+#setTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
@5.8.0
+#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#loadDeferredContext(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#containsContext(Ljakarta/servlet/http/HttpServletRequest;)Z
-#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
-#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/AuthenticationEntryPoint
@3.0.0.RELEASE
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/method/annotation/AuthenticationPrincipalArgumentResolver
@4.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
@4.2.0.RELEASE
+#setBeanResolver(Lorg/springframework/expression/BeanResolver;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V

+###org/springframework/security/web/method/annotation/CsrfTokenArgumentResolver
@4.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;

+###org/springframework/security/web/access/AccessDeniedHandler
@3.0.0.RELEASE
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/web/access/AccessDeniedHandlerImpl
@3.0.0.RELEASE
+#<init>()V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
+#setErrorPage(Ljava/lang/String;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/web/access/WebInvocationPrivilegeEvaluator
@3.0.0.RELEASE
+#isAllowed(Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z
+#isAllowed(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z

+###org/springframework/security/web/access/DelegatingAccessDeniedHandler
@3.2.0.RELEASE
+#<init>(Ljava/util/LinkedHashMap;Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/web/access/channel/InsecureChannelProcessor
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#decide(Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)V
+#getEntryPoint()Lorg/springframework/security/web/access/channel/ChannelEntryPoint;
+#getInsecureKeyword()Ljava/lang/String;
+#setEntryPoint(Lorg/springframework/security/web/access/channel/ChannelEntryPoint;)V
+#setInsecureKeyword(Ljava/lang/String;)V
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z

+###org/springframework/security/web/access/channel/RetryWithHttpEntryPoint
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/web/access/channel/ChannelProcessor
@3.0.0.RELEASE
+#decide(Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)V
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z

+###org/springframework/security/web/access/channel/ChannelDecisionManagerImpl
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#decide(Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)V
+#setChannelProcessors(Ljava/util/List;)V
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z

+###org/springframework/security/web/access/channel/ChannelEntryPoint
@3.0.0.RELEASE
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/access/channel/AbstractRetryEntryPoint
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;I)V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setPortMapper(Lorg/springframework/security/web/PortMapper;)V
+#setPortResolver(Lorg/springframework/security/web/PortResolver;)V
@3.1.0.RELEASE
+#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/access/channel/RetryWithHttpsEntryPoint
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/web/access/channel/ChannelProcessingFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setChannelDecisionManager(Lorg/springframework/security/web/access/channel/ChannelDecisionManager;)V
+#setSecurityMetadataSource(Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/access/channel/SecureChannelProcessor
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#decide(Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)V
+#getEntryPoint()Lorg/springframework/security/web/access/channel/ChannelEntryPoint;
+#getSecureKeyword()Ljava/lang/String;
+#setEntryPoint(Lorg/springframework/security/web/access/channel/ChannelEntryPoint;)V
+#setSecureKeyword(Ljava/lang/String;)V
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z

+###org/springframework/security/web/access/channel/ChannelDecisionManager
@3.0.0.RELEASE
+#decide(Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)V
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z

+###org/springframework/security/web/access/DefaultWebInvocationPrivilegeEvaluator
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/access/intercept/AbstractSecurityInterceptor;)V
+#isAllowed(Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z
+#isAllowed(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z
@5.4.10
+#setServletContext(Ljavax/servlet/ServletContext;)V
@5.5.0
-#setServletContext(Ljavax/servlet/ServletContext;)V
@5.5.4
+#setServletContext(Ljavax/servlet/ServletContext;)V
@6.0.0
+#setServletContext(Ljakarta/servlet/ServletContext;)V
-#setServletContext(Ljavax/servlet/ServletContext;)V

+###org/springframework/security/web/access/RequestMatcherDelegatingAccessDeniedHandler
@5.1.0.RELEASE
+#<init>(Ljava/util/LinkedHashMap;Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/web/access/intercept/RequestKey
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/security/web/access/intercept/FilterSecurityInterceptor
@3.0.0.RELEASE
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#getSecurityMetadataSource()Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;
+#getSecureObjectClass()Ljava/lang/Class;
+#invoke(Lorg/springframework/security/web/FilterInvocation;)V
+#isObserveOncePerRequest()Z
+#obtainSecurityMetadataSource()Lorg/springframework/security/access/SecurityMetadataSource;
+#setObjectDefinitionSource(Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;)V
+#setSecurityMetadataSource(Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;)V
+#setObserveOncePerRequest(Z)V
@3.1.0.RELEASE
-#setObjectDefinitionSource(Lorg/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource;)V
@6.0.0
+#init(Ljakarta/servlet/FilterConfig;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#init(Ljavax/servlet/FilterConfig;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/access/intercept/DefaultFilterInvocationSecurityMetadataSource
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/UrlMatcher;Ljava/util/LinkedHashMap;)V
+#getAllConfigAttributes()Ljava/util/Collection;
+#getAttributes(Ljava/lang/Object;)Ljava/util/Collection;
+#lookupAttributes(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
+#supports(Ljava/lang/Class;)Z
+#isConvertUrlToLowercaseBeforeComparison()Z
+#setStripQueryStringFromUrls(Z)V
@3.1.0.RELEASE
+#<init>(Ljava/util/LinkedHashMap;)V
-#<init>(Lorg/springframework/security/web/util/UrlMatcher;Ljava/util/LinkedHashMap;)V
-#lookupAttributes(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;
-#isConvertUrlToLowercaseBeforeComparison()Z
-#setStripQueryStringFromUrls(Z)V

+###org/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource
@3.0.0.RELEASE

+###org/springframework/security/web/access/expression/WebExpressionVoter
@3.0.0.RELEASE
+#<init>()V
+#vote(Lorg/springframework/security/core/Authentication;Ljava/lang/Object;Ljava/util/Collection;)I
+#supports(Lorg/springframework/security/access/ConfigAttribute;)Z
+#supports(Ljava/lang/Class;)Z
+#setExpressionHandler(Lorg/springframework/security/web/access/expression/WebSecurityExpressionHandler;)V
@3.1.0.RELEASE
+#vote(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;Ljava/util/Collection;)I
+#setExpressionHandler(Lorg/springframework/security/access/expression/SecurityExpressionHandler;)V
-#setExpressionHandler(Lorg/springframework/security/web/access/expression/WebSecurityExpressionHandler;)V

+###org/springframework/security/web/access/expression/DefaultWebSecurityExpressionHandler
@3.0.0.RELEASE
+#<init>()V
+#getExpressionParser()Lorg/springframework/expression/ExpressionParser;
+#createEvaluationContext(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)Lorg/springframework/expression/EvaluationContext;
+#setRoleHierarchy(Lorg/springframework/security/access/hierarchicalroles/RoleHierarchy;)V
@3.1.0.RELEASE
-#getExpressionParser()Lorg/springframework/expression/ExpressionParser;
-#createEvaluationContext(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)Lorg/springframework/expression/EvaluationContext;
-#setRoleHierarchy(Lorg/springframework/security/access/hierarchicalroles/RoleHierarchy;)V
@3.1.1.RELEASE
+#createEvaluationContext(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)Lorg/springframework/expression/EvaluationContext;
@3.2.0.RELEASE
+#setTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
@4.0.0.RELEASE
+#setDefaultRolePrefix(Ljava/lang/String;)V
-#createEvaluationContext(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)Lorg/springframework/expression/EvaluationContext;

+###org/springframework/security/web/access/expression/WebSecurityExpressionRoot
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)V
+#hasIpAddress(Ljava/lang/String;)Z
@5.8.0
+#<init>(Ljava/util/function/Supplier;Ljavax/servlet/http/HttpServletRequest;)V
@6.0.0
+#<init>(Ljava/util/function/Supplier;Ljakarta/servlet/http/HttpServletRequest;)V
-#<init>(Ljava/util/function/Supplier;Ljavax/servlet/http/HttpServletRequest;)V

+###org/springframework/security/web/access/expression/ExpressionBasedFilterInvocationSecurityMetadataSource
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/UrlMatcher;Ljava/util/LinkedHashMap;Lorg/springframework/security/web/access/expression/WebSecurityExpressionHandler;)V
@3.1.0.RELEASE
+#<init>(Ljava/util/LinkedHashMap;Lorg/springframework/security/access/expression/SecurityExpressionHandler;)V
-#<init>(Lorg/springframework/security/web/util/UrlMatcher;Ljava/util/LinkedHashMap;Lorg/springframework/security/web/access/expression/WebSecurityExpressionHandler;)V

+###org/springframework/security/web/access/ExceptionTranslationFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/AuthenticationEntryPoint;
+#setAccessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#setAuthenticationTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
+#setThrowableAnalyzer(Lorg/springframework/security/web/util/ThrowableAnalyzer;)V
+#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V
@3.1.0.RELEASE
*#<init>()V[deprecated]
+#<init>(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#<init>(Lorg/springframework/security/web/AuthenticationEntryPoint;Lorg/springframework/security/web/savedrequest/RequestCache;)V
*#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V[deprecated]
*#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V[deprecated]
@4.0.0.RELEASE
-#<init>()V[deprecated]
-#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V[deprecated]
-#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V[deprecated]
@5.5.0
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/PortMapperImpl
@3.0.0.RELEASE
+#<init>()V
+#getTranslatedPortMappings()Ljava/util/Map;
+#lookupHttpPort(Ljava/lang/Integer;)Ljava/lang/Integer;
+#lookupHttpsPort(Ljava/lang/Integer;)Ljava/lang/Integer;
+#setPortMappings(Ljava/util/Map;)V

+###org/springframework/security/web/WebAttributes
@3.0.3.RELEASE
+#<init>()V
@5.4.0
-#<init>()V

+###org/springframework/security/web/DefaultSecurityFilterChain
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/RequestMatcher;[Ljavax/servlet/Filter;)V
+#<init>(Lorg/springframework/security/web/util/RequestMatcher;Ljava/util/List;)V
+#getRequestMatcher()Lorg/springframework/security/web/util/RequestMatcher;
+#getFilters()Ljava/util/List;
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;[Ljavax/servlet/Filter;)V
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/util/List;)V
+#getRequestMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
-#<init>(Lorg/springframework/security/web/util/RequestMatcher;[Ljavax/servlet/Filter;)V
-#<init>(Lorg/springframework/security/web/util/RequestMatcher;Ljava/util/List;)V
-#getRequestMatcher()Lorg/springframework/security/web/util/RequestMatcher;
@6.0.0
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;[Ljakarta/servlet/Filter;)V
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;[Ljavax/servlet/Filter;)V
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/FilterChainProxy
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#getFilters(Ljava/lang/String;)Ljava/util/List;
+#setFilterChainMap(Ljava/util/Map;)V
+#getFilterChainMap()Ljava/util/Map;
+#setMatcher(Lorg/springframework/security/web/util/UrlMatcher;)V
+#getMatcher()Lorg/springframework/security/web/util/UrlMatcher;
+#setStripQueryStringFromUrls(Z)V
+#setFilterChainValidator(Lorg/springframework/security/web/FilterChainProxy$FilterChainValidator;)V
+#toString()Ljava/lang/String;
@3.0.4.RELEASE
+#setFirewall(Lorg/springframework/security/web/firewall/HttpFirewall;)V
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/SecurityFilterChain;)V
+#<init>(Ljava/util/List;)V
*#setFilterChainMap(Ljava/util/Map;)V[deprecated]
*#getFilterChainMap()Ljava/util/Map;[deprecated]
+#getFilterChains()Ljava/util/List;
-#setMatcher(Lorg/springframework/security/web/util/UrlMatcher;)V
-#getMatcher()Lorg/springframework/security/web/util/UrlMatcher;
-#setStripQueryStringFromUrls(Z)V
@4.0.0.RELEASE
-#setFilterChainMap(Ljava/util/Map;)V[deprecated]
-#getFilterChainMap()Ljava/util/Map;[deprecated]
@5.4.0
+#setRequestRejectedHandler(Lorg/springframework/security/web/firewall/RequestRejectedHandler;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
+#setFilterChainDecorator(Lorg/springframework/security/web/FilterChainProxy$FilterChainDecorator;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/authentication/AuthenticationSuccessHandler
@3.0.0.RELEASE
+#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@5.2.0.RELEASE
+#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#onAuthenticationSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljakarta/servlet/FilterChain;Lorg/springframework/security/core/Authentication;)V
+#onAuthenticationSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;Lorg/springframework/security/core/Authentication;)V
-#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/AuthenticationFailureHandler
@3.0.0.RELEASE
+#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@6.0.0
+#onAuthenticationFailure(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/WebAuthenticationDetailsSource
@3.0.0.RELEASE
+#<init>()V
+#buildDetails(Ljava/lang/Object;)Ljava/lang/Object;
+#setClazz(Ljava/lang/Class;)V
@3.1.0.RELEASE
+#buildDetails(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/WebAuthenticationDetails;
-#setClazz(Ljava/lang/Class;)V
@6.0.0
+#buildDetails(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/WebAuthenticationDetails;
-#buildDetails(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/WebAuthenticationDetails;

+###org/springframework/security/web/authentication/LoginUrlAuthenticationEntryPoint
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
+#setForceHttps(Z)V
+#setLoginFormUrl(Ljava/lang/String;)V
+#getLoginFormUrl()Ljava/lang/String;
+#setPortMapper(Lorg/springframework/security/web/PortMapper;)V
+#setPortResolver(Lorg/springframework/security/web/PortResolver;)V
+#setUseForward(Z)V
@3.1.0.RELEASE
*#<init>()V[deprecated]
+#<init>(Ljava/lang/String;)V
*#setLoginFormUrl(Ljava/lang/String;)V[deprecated]
@4.0.0.RELEASE
-#<init>()V[deprecated]
-#setLoginFormUrl(Ljava/lang/String;)V[deprecated]
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/AnonymousAuthenticationFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#getKey()Ljava/lang/String;
+#getUserAttribute()Lorg/springframework/security/core/userdetails/memory/UserAttribute;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#setKey(Ljava/lang/String;)V
+#setUserAttribute(Lorg/springframework/security/core/userdetails/memory/UserAttribute;)V
@3.1.0.RELEASE
*#<init>()V[deprecated]
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;)V
+#getPrincipal()Ljava/lang/Object;
+#getAuthorities()Ljava/util/List;
*#setKey(Ljava/lang/String;)V[deprecated]
*#setUserAttribute(Lorg/springframework/security/core/userdetails/memory/UserAttribute;)V[deprecated]
-#getKey()Ljava/lang/String;
-#getUserAttribute()Lorg/springframework/security/core/userdetails/memory/UserAttribute;
@4.0.0.RELEASE
-#<init>()V[deprecated]
-#setKey(Ljava/lang/String;)V[deprecated]
-#setUserAttribute(Lorg/springframework/security/core/userdetails/memory/UserAttribute;)V[deprecated]
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/authentication/switchuser/AuthenticationSwitchUserEvent
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/core/userdetails/UserDetails;)V
+#getTargetUser()Lorg/springframework/security/core/userdetails/UserDetails;

+###org/springframework/security/web/authentication/switchuser/SwitchUserFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#setExitUserUrl(Ljava/lang/String;)V
+#setSwitchUserUrl(Ljava/lang/String;)V
+#setTargetUrl(Ljava/lang/String;)V
+#setSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#setSwitchFailureUrl(Ljava/lang/String;)V
+#setFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#setSwitchUserAuthorityChanger(Lorg/springframework/security/web/authentication/switchuser/SwitchUserAuthorityChanger;)V
+#setUserDetailsChecker(Lorg/springframework/security/core/userdetails/UserDetailsChecker;)V
@3.1.0.RELEASE
+#setUsernameParameter(Ljava/lang/String;)V
@4.1.0.RELEASE
+#setSwitchAuthorityRole(Ljava/lang/String;)V
@4.2.9.RELEASE
+#setExitUserMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#setSwitchUserMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
@5.0.0.RELEASE
-#setExitUserMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
-#setSwitchUserMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
@5.0.9.RELEASE
+#setExitUserMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#setSwitchUserMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
@5.7.7
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
-#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.2
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@6.0.2
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V

+###org/springframework/security/web/authentication/switchuser/SwitchUserGrantedAuthority
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/security/core/Authentication;)V
+#getSource()Lorg/springframework/security/core/Authentication;
@3.1.0.RELEASE
+#getAuthority()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/security/web/authentication/switchuser/SwitchUserAuthorityChanger
@3.0.0.RELEASE
+#modifyGrantedAuthorities(Lorg/springframework/security/core/userdetails/UserDetails;Lorg/springframework/security/core/Authentication;Ljava/util/Collection;)Ljava/util/Collection;

+###org/springframework/security/web/authentication/DelegatingAuthenticationFailureHandler
@4.0.0.RELEASE
+#<init>(Ljava/util/LinkedHashMap;Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@6.0.0
+#onAuthenticationFailure(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/NullRememberMeServices
@3.0.0.RELEASE
+#<init>()V
+#autoLogin(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#loginFail(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#loginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#autoLogin(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#loginFail(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#loginSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#autoLogin(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
-#loginFail(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#loginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/CookieClearingLogoutHandler
@3.1.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@5.2.0.RELEASE
+#<init>([Ljavax/servlet/http/Cookie;)V
@6.0.0
+#<init>([Ljakarta/servlet/http/Cookie;)V
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#<init>([Ljavax/servlet/http/Cookie;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/DelegatingLogoutSuccessHandler
@4.1.0.RELEASE
+#<init>(Ljava/util/LinkedHashMap;)V
+#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#setDefaultLogoutSuccessHandler(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;)V
@6.0.0
+#onLogoutSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/HttpStatusReturningLogoutSuccessHandler
@4.0.2.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#<init>()V
+#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#onLogoutSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/ForwardLogoutSuccessHandler
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#onLogoutSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler
@3.0.0.RELEASE
+#<init>()V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#isInvalidateHttpSession()Z
+#setInvalidateHttpSession(Z)V
@3.0.8.RELEASE
+#setClearAuthentication(Z)V
@3.1.0.RELEASE
-#setClearAuthentication(Z)V
@3.1.3.RELEASE
+#setClearAuthentication(Z)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/LogoutFilter
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/authentication/logout/LogoutSuccessHandler;[Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
+#<init>(Ljava/lang/String;[Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setFilterProcessesUrl(Ljava/lang/String;)V
@3.2.0.RELEASE
+#setLogoutRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
*#setFilterProcessesUrl(Ljava/lang/String;)V[deprecated]
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/authentication/logout/LogoutHandler
@3.0.0.RELEASE
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/LogoutSuccessHandler
@3.0.0.RELEASE
+#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#onLogoutSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/SimpleUrlLogoutSuccessHandler
@3.0.0.RELEASE
+#<init>()V
+#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#onLogoutSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onLogoutSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/CompositeLogoutHandler
@4.2.0.RELEASE
+#<init>([Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
+#<init>(Ljava/util/List;)V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getGrantedAuthorities()Ljava/util/List;
+#setGrantedAuthorities(Ljava/util/List;)V
+#toString()Ljava/lang/String;
@3.1.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Collection;)V
+#getGrantedAuthorities()Ljava/util/Collection;
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V
-#setGrantedAuthorities(Ljava/util/List;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljava/util/Collection;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Collection;)V

+###org/springframework/security/web/authentication/preauth/x509/X509AuthenticationFilter
@3.0.0.RELEASE
+#<init>()V
+#setPrincipalExtractor(Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;)V

+###org/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor
@3.0.0.RELEASE
+#extractPrincipal(Ljava/security/cert/X509Certificate;)Ljava/lang/Object;

+###org/springframework/security/web/authentication/preauth/x509/SubjectDnX509PrincipalExtractor
@3.0.0.RELEASE
+#<init>()V
+#extractPrincipal(Ljava/security/cert/X509Certificate;)Ljava/lang/Object;
+#setSubjectDnRegex(Ljava/lang/String;)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V

+###org/springframework/security/web/authentication/preauth/RequestHeaderAuthenticationFilter
@3.0.0.RELEASE
+#<init>()V
+#setPrincipalRequestHeader(Ljava/lang/String;)V
+#setCredentialsRequestHeader(Ljava/lang/String;)V
+#setExceptionIfHeaderMissing(Z)V

+###org/springframework/security/web/authentication/preauth/RequestAttributeAuthenticationFilter
@4.2.0.RELEASE
+#<init>()V
+#setPrincipalEnvironmentVariable(Ljava/lang/String;)V
+#setCredentialsEnvironmentVariable(Ljava/lang/String;)V
+#setExceptionIfVariableMissing(Z)V

+###org/springframework/security/web/authentication/preauth/j2ee/J2eePreAuthenticatedProcessingFilter
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/web/authentication/preauth/j2ee/WebXmlMappableAttributesRetriever
@3.0.0.RELEASE
+#<init>()V
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
+#getMappableAttributes()Ljava/util/Set;
+#afterPropertiesSet()V

+###org/springframework/security/web/authentication/preauth/j2ee/J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource
@3.0.0.RELEASE
+#<init>()V
@3.1.0.RELEASE
+#afterPropertiesSet()V
+#buildDetails(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;
+#setMappableRolesRetriever(Lorg/springframework/security/core/authority/mapping/MappableAttributesRetriever;)V
+#setUserRoles2GrantedAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/Attributes2GrantedAuthoritiesMapper;)V
+#buildDetails(Ljava/lang/Object;)Ljava/lang/Object;
@6.0.0
+#buildDetails(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;
-#buildDetails(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;

+###org/springframework/security/web/authentication/preauth/websphere/WebSpherePreAuthenticatedWebAuthenticationDetailsSource
@3.0.0.RELEASE
+#<init>()V
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/authentication/preauth/websphere/WASUsernameAndGroupsExtractor;)V
+#buildDetails(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;
+#setWebSphereGroups2GrantedAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/Attributes2GrantedAuthoritiesMapper;)V
+#buildDetails(Ljava/lang/Object;)Ljava/lang/Object;
@6.0.0
+#buildDetails(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;
-#buildDetails(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;

+###org/springframework/security/web/authentication/preauth/websphere/WebSpherePreAuthenticatedProcessingFilter
@3.0.0.RELEASE
+#<init>()V

+###org/springframework/security/web/authentication/preauth/PreAuthenticatedAuthenticationToken
@3.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)V
+#getCredentials()Ljava/lang/Object;
+#getPrincipal()Ljava/lang/Object;

+###org/springframework/security/web/authentication/preauth/AbstractPreAuthenticatedProcessingFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#setContinueFilterChainOnUnsuccessfulAuthentication(Z)V
+#setCheckForPrincipalChanges(Z)V
+#setInvalidateSessionOnPrincipalChange(Z)V
@4.1.0.RELEASE
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
@5.2.1.RELEASE
+#setRequiresAuthenticationRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
@5.7.0
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesUserDetailsService
@3.0.0.RELEASE
+#<init>()V
+#loadUserDetails(Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/core/userdetails/UserDetails;
@3.1.0.RELEASE
+#loadUserDetails(Lorg/springframework/security/web/authentication/preauth/PreAuthenticatedAuthenticationToken;)Lorg/springframework/security/core/userdetails/UserDetails;

+###org/springframework/security/web/authentication/preauth/PreAuthenticatedCredentialsNotFoundException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
@3.1.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/web/authentication/preauth/PreAuthenticatedAuthenticationProvider
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#authenticate(Lorg/springframework/security/core/Authentication;)Lorg/springframework/security/core/Authentication;
+#supports(Ljava/lang/Class;)Z
+#setPreAuthenticatedUserDetailsService(Lorg/springframework/security/core/userdetails/AuthenticationUserDetailsService;)V
+#getOrder()I
+#setOrder(I)V
+#setThrowExceptionWhenTokenRejected(Z)V
+#setUserDetailsChecker(Lorg/springframework/security/core/userdetails/UserDetailsChecker;)V

+###org/springframework/security/web/authentication/DelegatingAuthenticationEntryPoint
@3.0.2.RELEASE
+#<init>(Ljava/util/LinkedHashMap;)V
+#setDefaultEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
+#afterPropertiesSet()V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/ExceptionMappingAuthenticationFailureHandler
@3.0.0.RELEASE
+#<init>()V
+#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
+#setExceptionMappings(Ljava/util/Map;)V
@6.0.0
+#onAuthenticationFailure(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/ui/DefaultLogoutPageGeneratingFilter
@5.1.0.RELEASE
+#<init>()V
+#setResolveHiddenInputs(Ljava/util/function/Function;)V

+###org/springframework/security/web/authentication/ui/DefaultLoginPageGeneratingFilter
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/authentication/AbstractAuthenticationProcessingFilter;)V
+#<init>(Lorg/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter;Lorg/springframework/security/web/authentication/AbstractAuthenticationProcessingFilter;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@3.2.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setLogoutSuccessUrl(Ljava/lang/String;)V
+#getLoginPageUrl()Ljava/lang/String;
+#setLoginPageUrl(Ljava/lang/String;)V
+#setFailureUrl(Ljava/lang/String;)V
+#setFormLoginEnabled(Z)V
+#setOpenIdEnabled(Z)V
+#setAuthenticationUrl(Ljava/lang/String;)V
+#setUsernameParameter(Ljava/lang/String;)V
+#setPasswordParameter(Ljava/lang/String;)V
+#setRememberMeParameter(Ljava/lang/String;)V
+#setOpenIDauthenticationUrl(Ljava/lang/String;)V
+#setOpenIDusernameParameter(Ljava/lang/String;)V
@5.0.0.RELEASE
+#setResolveHiddenInputs(Ljava/util/function/Function;)V
+#setOauth2LoginEnabled(Z)V
+#setOauth2AuthenticationUrlToClientName(Ljava/util/Map;)V
@5.2.0.RELEASE
+#setSaml2LoginEnabled(Z)V
+#setSaml2AuthenticationUrlToProviderName(Ljava/util/Map;)V
@6.0.0
+#<init>(Lorg/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#<init>(Lorg/springframework/security/web/authentication/AbstractAuthenticationProcessingFilter;)V
-#<init>(Lorg/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter;Lorg/springframework/security/web/authentication/AbstractAuthenticationProcessingFilter;)V
-#setOpenIdEnabled(Z)V
-#setOpenIDauthenticationUrl(Ljava/lang/String;)V
-#setOpenIDusernameParameter(Ljava/lang/String;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/authentication/HttpStatusEntryPoint
@4.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/ForwardAuthenticationSuccessHandler
@4.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#onAuthenticationSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/AbstractAuthenticationProcessingFilter
@3.0.0.RELEASE
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#attemptAuthentication(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#getFilterProcessesUrl()Ljava/lang/String;
+#setFilterProcessesUrl(Ljava/lang/String;)V
+#getRememberMeServices()Lorg/springframework/security/web/authentication/RememberMeServices;
+#setRememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)V
+#setContinueChainBeforeSuccessfulAuthentication(Z)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAllowSessionCreation(Z)V
+#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
@3.1.0.RELEASE
-#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
@3.2.0.RELEASE
*#getFilterProcessesUrl()Ljava/lang/String;[deprecated]
*#setFilterProcessesUrl(Ljava/lang/String;)V[deprecated]
+#setRequiresAuthenticationRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
@4.0.0.RELEASE
-#getFilterProcessesUrl()Ljava/lang/String;[deprecated]
@5.7.0
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
+#attemptAuthentication(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#attemptAuthentication(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;

+###org/springframework/security/web/authentication/WebAuthenticationDetails
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#equals(Ljava/lang/Object;)Z
+#getRemoteAddress()Ljava/lang/String;
+#getSessionId()Ljava/lang/String;
+#hashCode()I
+#toString()Ljava/lang/String;
@5.7.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V

+###org/springframework/security/web/authentication/SimpleUrlAuthenticationSuccessHandler
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#onAuthenticationSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/AbstractAuthenticationTargetUrlRequestHandler
@3.0.0.RELEASE
+#setDefaultTargetUrl(Ljava/lang/String;)V
+#setAlwaysUseDefaultTargetUrl(Z)V
+#setTargetUrlParameter(Ljava/lang/String;)V
+#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
+#setUseReferer(Z)V

+###org/springframework/security/web/authentication/Http403ForbiddenEntryPoint
@3.0.0.RELEASE
+#<init>()V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter
@3.0.0.RELEASE
+#<init>()V
+#attemptAuthentication(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#setUsernameParameter(Ljava/lang/String;)V
+#setPasswordParameter(Ljava/lang/String;)V
+#setPostOnly(Z)V
+#getUsernameParameter()Ljava/lang/String;
+#getPasswordParameter()Ljava/lang/String;
@5.4.0
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;)V
@6.0.0
+#attemptAuthentication(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
-#attemptAuthentication(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;

+###org/springframework/security/web/authentication/ForwardAuthenticationFailureHandler
@4.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@6.0.0
+#onAuthenticationFailure(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/rememberme/PersistentTokenBasedRememberMeServices
@3.0.0.RELEASE
+#<init>()V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#setTokenRepository(Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;)V
+#setSeriesLength(I)V
+#setTokenLength(I)V
+#setTokenValiditySeconds(I)V
@3.1.0.RELEASE
*#<init>()V[deprecated]
+#<init>(Ljava/lang/String;Lorg/springframework/security/core/userdetails/UserDetailsService;Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;)V
*#setTokenRepository(Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;)V[deprecated]
@4.0.0.RELEASE
-#<init>()V[deprecated]
-#setTokenRepository(Lorg/springframework/security/web/authentication/rememberme/PersistentTokenRepository;)V[deprecated]
@6.0.0
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/rememberme/CookieTheftException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/web/authentication/rememberme/RememberMeAuthenticationFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#getRememberMeServices()Lorg/springframework/security/web/authentication/RememberMeServices;
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#setRememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)V
@3.1.0.RELEASE
*#<init>()V[deprecated]
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/security/web/authentication/RememberMeServices;)V
*#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V[deprecated]
*#setRememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)V[deprecated]
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
@4.0.0.RELEASE
-#<init>()V[deprecated]
-#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V[deprecated]
-#setRememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)V[deprecated]
@5.7.0
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/authentication/rememberme/AbstractRememberMeServices
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#autoLogin(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#loginFail(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#loginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#setCookieName(Ljava/lang/String;)V
+#setAlwaysRemember(Z)V
+#setParameter(Ljava/lang/String;)V
+#getParameter()Ljava/lang/String;
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#setKey(Ljava/lang/String;)V
+#getKey()Ljava/lang/String;
+#setTokenValiditySeconds(I)V
+#setUseSecureCookie(Z)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
@3.1.0.RELEASE
*#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V[deprecated]
*#setKey(Ljava/lang/String;)V[deprecated]
+#setUserDetailsChecker(Lorg/springframework/security/core/userdetails/UserDetailsChecker;)V
+#setAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper;)V
-#<init>()V
@4.0.0.RELEASE
-#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V[deprecated]
-#setKey(Ljava/lang/String;)V[deprecated]
@4.1.0.RELEASE
+#setCookieDomain(Ljava/lang/String;)V
@5.5.0
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
@6.0.0
+#autoLogin(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#loginFail(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#loginSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#autoLogin(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
-#loginFail(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#loginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/rememberme/RememberMeAuthenticationException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
@3.2.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/web/authentication/rememberme/InvalidCookieException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/web/authentication/rememberme/PersistentRememberMeToken
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)V
+#getUsername()Ljava/lang/String;
+#getSeries()Ljava/lang/String;
+#getTokenValue()Ljava/lang/String;
+#getDate()Ljava/util/Date;

+###org/springframework/security/web/authentication/rememberme/PersistentTokenRepository
@3.0.0.RELEASE
+#createNewToken(Lorg/springframework/security/web/authentication/rememberme/PersistentRememberMeToken;)V
+#updateToken(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)V
+#getTokenForSeries(Ljava/lang/String;)Lorg/springframework/security/web/authentication/rememberme/PersistentRememberMeToken;
+#removeUserTokens(Ljava/lang/String;)V

+###org/springframework/security/web/authentication/rememberme/TokenBasedRememberMeServices
@3.0.0.RELEASE
+#<init>()V
+#onLoginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@3.1.0.RELEASE
*#<init>()V[deprecated]
+#<init>(Ljava/lang/String;Lorg/springframework/security/core/userdetails/UserDetailsService;)V
@4.0.0.RELEASE
-#<init>()V[deprecated]
@5.8.0
+#<init>(Ljava/lang/String;Lorg/springframework/security/core/userdetails/UserDetailsService;Lorg/springframework/security/web/authentication/rememberme/TokenBasedRememberMeServices$RememberMeTokenAlgorithm;)V
+#setMatchingAlgorithm(Lorg/springframework/security/web/authentication/rememberme/TokenBasedRememberMeServices$RememberMeTokenAlgorithm;)V
@6.0.0
+#onLoginSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onLoginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/rememberme/JdbcTokenRepositoryImpl
@3.0.0.RELEASE
+#<init>()V
+#createNewToken(Lorg/springframework/security/web/authentication/rememberme/PersistentRememberMeToken;)V
+#updateToken(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)V
+#getTokenForSeries(Ljava/lang/String;)Lorg/springframework/security/web/authentication/rememberme/PersistentRememberMeToken;
+#removeUserTokens(Ljava/lang/String;)V
+#setCreateTableOnStartup(Z)V

+###org/springframework/security/web/authentication/rememberme/InMemoryTokenRepositoryImpl
@3.0.0.RELEASE
+#<init>()V
+#createNewToken(Lorg/springframework/security/web/authentication/rememberme/PersistentRememberMeToken;)V
+#updateToken(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)V
+#getTokenForSeries(Ljava/lang/String;)Lorg/springframework/security/web/authentication/rememberme/PersistentRememberMeToken;
+#removeUserTokens(Ljava/lang/String;)V

+###org/springframework/security/web/authentication/session/ConcurrentSessionControlAuthenticationStrategy
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/core/session/SessionRegistry;)V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setExceptionIfMaximumExceeded(Z)V
+#setMaximumSessions(I)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
@6.0.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/session/NullAuthenticatedSessionStrategy
@3.0.0.RELEASE
+#<init>()V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/session/SessionFixationProtectionStrategy
@3.0.0.RELEASE
+#<init>()V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setMigrateSessionAttributes(Z)V
+#setRetainedAttributes(Ljava/util/List;)V
+#setAlwaysCreateSession(Z)V
@3.1.0.RELEASE
*#setRetainedAttributes(Ljava/util/List;)V[deprecated]
@3.2.0.RELEASE
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
@4.0.0.RELEASE
-#setRetainedAttributes(Ljava/util/List;)V[deprecated]
@5.4.0
-#setAlwaysCreateSession(Z)V
-#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/session/SessionFixationProtectionEvent
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/core/Authentication;Ljava/lang/String;Ljava/lang/String;)V
+#getOldSessionId()Ljava/lang/String;
+#getNewSessionId()Ljava/lang/String;

+###org/springframework/security/web/authentication/session/SessionAuthenticationException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/web/authentication/session/RegisterSessionAuthenticationStrategy
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/core/session/SessionRegistry;)V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/session/SessionAuthenticationStrategy
@3.0.0.RELEASE
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/session/ChangeSessionIdAuthenticationStrategy
@3.2.0.RELEASE
+#<init>()V
+#setAlwaysCreateSession(Z)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@5.4.0
-#setAlwaysCreateSession(Z)V
-#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy$NullEventPublisher
@3.2.0.RELEASE
+#publishEvent(Lorg/springframework/context/ApplicationEvent;)V
@4.0.2.RELEASE
+#publishEvent(Ljava/lang/Object;)V

+###org/springframework/security/web/authentication/session/CompositeSessionAuthenticationStrategy
@3.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#toString()Ljava/lang/String;
@6.0.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/SimpleUrlAuthenticationFailureHandler
@3.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
+#setDefaultFailureUrl(Ljava/lang/String;)V
+#setUseForward(Z)V
+#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@3.0.3.RELEASE
+#setAllowSessionCreation(Z)V
@6.0.0
+#onAuthenticationFailure(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/RememberMeServices
@3.0.0.RELEASE
+#autoLogin(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#loginFail(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#loginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#autoLogin(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
+#loginFail(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#loginSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#autoLogin(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/core/Authentication;
-#loginFail(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#loginSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/SavedRequestAwareAuthenticationSuccessHandler
@3.0.0.RELEASE
+#<init>()V
+#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V
@6.0.0
+#onAuthenticationSuccess(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#onAuthenticationSuccess(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/www/BasicAuthenticationFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#setIgnoreFailure(Z)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#setRememberMeServices(Lorg/springframework/security/web/authentication/RememberMeServices;)V
+#setCredentialsCharset(Ljava/lang/String;)V
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/security/web/AuthenticationEntryPoint;)V
*#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V[deprecated]
*#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V[deprecated]
*#setIgnoreFailure(Z)V[deprecated]
@4.0.0.RELEASE
-#<init>()V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#setAuthenticationEntryPoint(Lorg/springframework/security/web/AuthenticationEntryPoint;)V[deprecated]
-#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V[deprecated]
-#setIgnoreFailure(Z)V[deprecated]
@5.7.0
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V

+###org/springframework/security/web/authentication/www/DigestAuthenticationFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#getAuthenticationEntryPoint()Lorg/springframework/security/web/authentication/www/DigestAuthenticationEntryPoint;
+#getUserCache()Lorg/springframework/security/core/userdetails/UserCache;
+#getUserDetailsService()Lorg/springframework/security/core/userdetails/UserDetailsService;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/authentication/www/DigestAuthenticationEntryPoint;)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
+#setPasswordAlreadyEncoded(Z)V
+#setUserCache(Lorg/springframework/security/core/userdetails/UserCache;)V
+#setUserDetailsService(Lorg/springframework/security/core/userdetails/UserDetailsService;)V
+#setCreateAuthenticatedToken(Z)V
@3.1.0.RELEASE
-#getAuthenticationEntryPoint()Lorg/springframework/security/web/authentication/www/DigestAuthenticationEntryPoint;
@5.7.0
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/authentication/www/NonceExpiredException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/security/web/authentication/www/BasicAuthenticationEntryPoint
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
+#getRealmName()Ljava/lang/String;
+#setRealmName(Ljava/lang/String;)V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/www/DigestAuthenticationEntryPoint
@3.0.0.RELEASE
+#<init>()V
+#getOrder()I
+#setOrder(I)V
+#afterPropertiesSet()V
+#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
+#getKey()Ljava/lang/String;
+#getNonceValiditySeconds()I
+#getRealmName()Ljava/lang/String;
+#setKey(Ljava/lang/String;)V
+#setNonceValiditySeconds(I)V
+#setRealmName(Ljava/lang/String;)V
@6.0.0
+#commence(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#commence(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/savedrequest/DefaultSavedRequest$Builder
@4.2.0.RELEASE
+#<init>()V
+#setCookies(Ljava/util/List;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setLocales(Ljava/util/List;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setHeaders(Ljava/util/Map;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setParameters(Ljava/util/Map;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setContextPath(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setMethod(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setPathInfo(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setQueryString(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setRequestURI(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setRequestURL(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setScheme(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setServerName(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setServletPath(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#setServerPort(I)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;
+#build()Lorg/springframework/security/web/savedrequest/DefaultSavedRequest;
@5.8.0
+#setMatchingRequestParameterName(Ljava/lang/String;)Lorg/springframework/security/web/savedrequest/DefaultSavedRequest$Builder;

+###org/springframework/security/web/savedrequest/HttpSessionRequestCache
@3.0.0.RELEASE
+#<init>()V
+#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;
+#setJustUseSavedRequestOnGet(Z)V
+#setCreateSessionAllowed(Z)V
+#setPortResolver(Lorg/springframework/security/web/PortResolver;)V
@3.1.0.RELEASE
+#setRequestMatcher(Lorg/springframework/security/web/util/RequestMatcher;)V
-#setJustUseSavedRequestOnGet(Z)V
@3.2.0.RELEASE
+#setRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
-#setRequestMatcher(Lorg/springframework/security/web/util/RequestMatcher;)V
@4.2.1.RELEASE
+#setSessionAttrName(Ljava/lang/String;)V
@5.8.0
+#setMatchingRequestParameterName(Ljava/lang/String;)V
@6.0.0
+#saveRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#removeRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getMatchingRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Ljakarta/servlet/http/HttpServletRequest;
-#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
-#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;

+###org/springframework/security/web/savedrequest/DefaultSavedRequest
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)V
+#doesRequestMatch(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)Z
+#getContextPath()Ljava/lang/String;
+#getCookies()Ljava/util/List;
+#getRedirectUrl()Ljava/lang/String;
+#getHeaderNames()Ljava/util/Collection;
+#getHeaderValues(Ljava/lang/String;)Ljava/util/List;
+#getLocales()Ljava/util/List;
+#getMethod()Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#getParameterNames()Ljava/util/Collection;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getPathInfo()Ljava/lang/String;
+#getQueryString()Ljava/lang/String;
+#getRequestURI()Ljava/lang/String;
+#getRequestURL()Ljava/lang/String;
+#getScheme()Ljava/lang/String;
+#getServerName()Ljava/lang/String;
+#getServerPort()I
+#getServletPath()Ljava/lang/String;
+#toString()Ljava/lang/String;
@5.8.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;Ljava/lang/String;)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;Ljava/lang/String;)V
+#doesRequestMatch(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)Z
-#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;Ljava/lang/String;)V
-#doesRequestMatch(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/PortResolver;)Z

+###org/springframework/security/web/savedrequest/FastHttpDateFormat
@3.0.0.RELEASE
+#<init>()V
+#formatDate(JLjava/text/DateFormat;)Ljava/lang/String;
+#getCurrentDate()Ljava/lang/String;
+#parseDate(Ljava/lang/String;[Ljava/text/DateFormat;)J
@5.4.0
-#<init>()V

+###org/springframework/security/web/savedrequest/RequestCache
@3.0.0.RELEASE
+#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;
+#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#saveRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#getMatchingRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Ljakarta/servlet/http/HttpServletRequest;
+#removeRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
-#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;
-#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/savedrequest/Enumerator
@3.0.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/util/Collection;Z)V
+#<init>(Ljava/util/Iterator;)V
+#<init>(Ljava/util/Iterator;Z)V
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;Z)V
+#hasMoreElements()Z
+#nextElement()Ljava/lang/Object;

+###org/springframework/security/web/savedrequest/RequestCacheAwareFilter
@3.0.0.RELEASE
+#<init>()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/savedrequest/RequestCache;)V
*#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V[deprecated]
@4.0.0.RELEASE
-#setRequestCache(Lorg/springframework/security/web/savedrequest/RequestCache;)V[deprecated]
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/savedrequest/SavedCookie
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;ZI)V
+#<init>(Ljavax/servlet/http/Cookie;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#getComment()Ljava/lang/String;
+#getDomain()Ljava/lang/String;
+#getMaxAge()I
+#getPath()Ljava/lang/String;
+#isSecure()Z
+#getVersion()I
+#getCookie()Ljavax/servlet/http/Cookie;
@6.0.0
+#<init>(Ljakarta/servlet/http/Cookie;)V
+#getCookie()Ljakarta/servlet/http/Cookie;
-#<init>(Ljavax/servlet/http/Cookie;)V
-#getCookie()Ljavax/servlet/http/Cookie;

+###org/springframework/security/web/savedrequest/SimpleSavedRequest
@5.1.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/security/web/savedrequest/SavedRequest;)V
+#getRedirectUrl()Ljava/lang/String;
+#getCookies()Ljava/util/List;
+#getMethod()Ljava/lang/String;
+#getHeaderValues(Ljava/lang/String;)Ljava/util/List;
+#getHeaderNames()Ljava/util/Collection;
+#getLocales()Ljava/util/List;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#setRedirectUrl(Ljava/lang/String;)V
+#setCookies(Ljava/util/List;)V
+#setMethod(Ljava/lang/String;)V
+#setHeaders(Ljava/util/Map;)V
+#setLocales(Ljava/util/List;)V
+#setParameters(Ljava/util/Map;)V

+###org/springframework/security/web/savedrequest/NullRequestCache
@3.0.0.RELEASE
+#<init>()V
+#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;
@6.0.0
+#getRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#removeRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#saveRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getMatchingRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Ljakarta/servlet/http/HttpServletRequest;
-#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
-#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;

+###org/springframework/security/web/savedrequest/SavedRequest
@3.0.0.RELEASE
+#getRedirectUrl()Ljava/lang/String;
+#getCookies()Ljava/util/List;
+#getMethod()Ljava/lang/String;
+#getHeaderValues(Ljava/lang/String;)Ljava/util/List;
+#getHeaderNames()Ljava/util/Collection;
+#getLocales()Ljava/util/List;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;

+###org/springframework/security/web/jackson2/WebJackson2Module
@4.2.0.RELEASE
+#<init>()V
+#setupModule(Lcom/fasterxml/jackson/databind/Module$SetupContext;)V

+###org/springframework/security/web/PortResolverImpl
@3.0.0.RELEASE
+#<init>()V
+#getPortMapper()Lorg/springframework/security/web/PortMapper;
+#getServerPort(Ljavax/servlet/ServletRequest;)I
+#setPortMapper(Lorg/springframework/security/web/PortMapper;)V
@6.0.0
+#getServerPort(Ljakarta/servlet/ServletRequest;)I
-#getServerPort(Ljavax/servlet/ServletRequest;)I

+###org/springframework/security/web/servlet/support/csrf/CsrfRequestDataValueProcessor
@3.2.0.RELEASE
+#<init>()V
+#processAction(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#processAction(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#processFormFieldValue(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getExtraHiddenFields(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;
+#processUrl(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
@6.0.0
+#processAction(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#processAction(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#processFormFieldValue(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getExtraHiddenFields(Ljakarta/servlet/http/HttpServletRequest;)Ljava/util/Map;
+#processUrl(Ljakarta/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
-#processAction(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
-#processAction(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#processFormFieldValue(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#getExtraHiddenFields(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;
-#processUrl(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher
@4.1.1.RELEASE
+#<init>(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;
+#setMethod(Lorg/springframework/http/HttpMethod;)V
@4.1.2.RELEASE
+#afterPropertiesSet()V
+#setServletContext(Ljavax/servlet/ServletContext;)V
+#setServletPath(Ljava/lang/String;)V
@4.1.3.RELEASE
-#afterPropertiesSet()V
-#setServletContext(Ljavax/servlet/ServletContext;)V
@5.1.0.RELEASE
+#toString()Ljava/lang/String;
@5.2.0.RELEASE
*#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;[deprecated]
+#matcher(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
+#extractUriTemplateVariables(Ljakarta/servlet/http/HttpServletRequest;)Ljava/util/Map;[deprecated]
+#matcher(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z
-#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;[deprecated]
-#matcher(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;

+###org/springframework/security/web/debug/DebugFilter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/FilterChainProxy;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
@5.5.5
+#getFilterChainProxy()Lorg/springframework/security/web/FilterChainProxy;
@5.6.0
-#getFilterChainProxy()Lorg/springframework/security/web/FilterChainProxy;
@5.6.2
+#getFilterChainProxy()Lorg/springframework/security/web/FilterChainProxy;
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
+#init(Ljakarta/servlet/FilterConfig;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#init(Ljavax/servlet/FilterConfig;)V

+###org/springframework/security/web/header/HeaderWriter
@3.2.0.RELEASE
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/Header
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValues()Ljava/util/List;
+#hashCode()I
+#toString()Ljava/lang/String;
@5.0.0.RELEASE
+#equals(Ljava/lang/Object;)Z

+###org/springframework/security/web/header/HeaderWriterFilter
@3.2.0.RELEASE
+#<init>(Ljava/util/List;)V
@5.2.0.RELEASE
+#setShouldWriteHeadersEagerly(Z)V

+###org/springframework/security/web/header/writers/frameoptions/XFrameOptionsHeaderWriter
@3.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/security/web/header/writers/frameoptions/XFrameOptionsHeaderWriter$XFrameOptionsMode;)V
+#<init>(Lorg/springframework/security/web/header/writers/frameoptions/AllowFromStrategy;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@5.4.0
*#<init>(Lorg/springframework/security/web/header/writers/frameoptions/AllowFromStrategy;)V[deprecated]
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/frameoptions/WhiteListedAllowFromStrategy
@3.2.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#setAllowFromParameterName(Ljava/lang/String;)V
+#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@5.4.0
-#setAllowFromParameterName(Ljava/lang/String;)V
-#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;

+###org/springframework/security/web/header/writers/frameoptions/RegExpAllowFromStrategy
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setAllowFromParameterName(Ljava/lang/String;)V
+#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@5.4.0
-#setAllowFromParameterName(Ljava/lang/String;)V
-#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;

+###org/springframework/security/web/header/writers/frameoptions/XFrameOptionsHeaderWriter$XFrameOptionsMode
@3.2.0.RELEASE
+#values()[Lorg/springframework/security/web/header/writers/frameoptions/XFrameOptionsHeaderWriter$XFrameOptionsMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/frameoptions/XFrameOptionsHeaderWriter$XFrameOptionsMode;

+###org/springframework/security/web/header/writers/frameoptions/AllowFromStrategy
@3.2.0.RELEASE
+#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@6.0.0
+#getAllowFromValue(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;

+###org/springframework/security/web/header/writers/frameoptions/StaticAllowFromStrategy
@3.2.0.RELEASE
+#<init>(Ljava/net/URI;)V
+#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
@6.0.0
+#getAllowFromValue(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;

+###org/springframework/security/web/header/writers/HstsHeaderWriter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;JZ)V
+#<init>(JZ)V
+#<init>(J)V
+#<init>(Z)V
+#<init>()V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#setMaxAgeInSeconds(J)V
+#setIncludeSubDomains(Z)V
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;JZZ)V
+#<init>(JZZ)V
+#setPreload(Z)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/XXssProtectionHeaderWriter
@3.2.0.RELEASE
+#<init>()V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setEnabled(Z)V
+#setBlock(Z)V
+#toString()Ljava/lang/String;
@5.8.0
*#setEnabled(Z)V[deprecated]
*#setBlock(Z)V[deprecated]
+#setHeaderValue(Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#setEnabled(Z)V[deprecated]
-#setBlock(Z)V[deprecated]

+###org/springframework/security/web/header/writers/ContentSecurityPolicyHeaderWriter
@4.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setPolicyDirectives(Ljava/lang/String;)V
+#setReportOnly(Z)V
+#toString()Ljava/lang/String;
@5.2.0.RELEASE
+#<init>()V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/CacheControlHeadersWriter
@3.2.0.RELEASE
+#<init>()V
@4.1.0.RELEASE
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@4.2.0.RELEASE
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@4.2.2.RELEASE
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/DelegatingRequestMatcherHeaderWriter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/web/header/HeaderWriter;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#toString()Ljava/lang/String;
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter
@4.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;)V
+#setPolicy(Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy
@4.2.0.RELEASE
+#values()[Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;
+#getPolicy()Ljava/lang/String;
+#get(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter$ReferrerPolicy;

+###org/springframework/security/web/header/writers/FeaturePolicyHeaderWriter
@5.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setPolicyDirectives(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/XContentTypeOptionsHeaderWriter
@3.2.0.RELEASE
+#<init>()V

+###org/springframework/security/web/header/writers/StaticHeadersWriter
@3.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#toString()Ljava/lang/String;
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/HpkpHeaderWriter
@4.1.0.RELEASE
+#<init>(JZZ)V
+#<init>(JZ)V
+#<init>(J)V
+#<init>()V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setPins(Ljava/util/Map;)V
+#addSha256Pins([Ljava/lang/String;)V
+#setMaxAgeInSeconds(J)V
+#setIncludeSubDomains(Z)V
+#setReportOnly(Z)V
+#setReportUri(Ljava/net/URI;)V
+#setReportUri(Ljava/lang/String;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/server/transport/HttpsRedirectWebFilter
@5.1.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
+#setPortMapper(Lorg/springframework/security/web/PortMapper;)V
+#setRequiresHttpsRedirectMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V

+###org/springframework/security/web/server/ServerRedirectStrategy
@5.0.0.RELEASE
+#sendRedirect(Lorg/springframework/web/server/ServerWebExchange;Ljava/net/URI;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/context/NoOpServerSecurityContextRepository
@5.0.0.RELEASE
+#save(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/context/SecurityContext;)Lreactor/core/publisher/Mono;
+#load(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getInstance()Lorg/springframework/security/web/server/context/NoOpServerSecurityContextRepository;

+###org/springframework/security/web/server/context/SecurityContextServerWebExchange
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/ServerWebExchange;Lreactor/core/publisher/Mono;)V
+#getPrincipal()Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/context/ReactorContextWebFilter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/context/WebSessionServerSecurityContextRepository
@5.0.0.RELEASE
+#<init>()V
+#setSpringSecurityContextAttrName(Ljava/lang/String;)V
+#save(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/context/SecurityContext;)Lreactor/core/publisher/Mono;
+#load(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.7.0
+#setCacheSecurityContext(Z)V

+###org/springframework/security/web/server/context/SecurityContextServerWebExchangeWebFilter
@5.0.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/context/ServerSecurityContextRepository
@5.0.0.RELEASE
+#save(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/context/SecurityContext;)Lreactor/core/publisher/Mono;
+#load(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/ServerAuthenticationEntryPoint
@5.0.0.RELEASE
+#commence(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/WebFilterChainProxy
@5.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>([Lorg/springframework/security/web/server/SecurityWebFilterChain;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
@6.0.0
+#setFilterChainDecorator(Lorg/springframework/security/web/server/WebFilterChainProxy$WebFilterChainDecorator;)V

+###org/springframework/security/web/server/ui/LogoutPageGeneratingWebFilter
@5.0.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/ui/LoginPageGeneratingWebFilter
@5.0.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#setFormLoginEnabled(Z)V
+#setOauth2AuthenticationUrlToClientName(Ljava/util/Map;)V

+###org/springframework/security/web/server/DelegatingServerAuthenticationEntryPoint
@5.0.0.RELEASE
+#<init>([Lorg/springframework/security/web/server/DelegatingServerAuthenticationEntryPoint$DelegateEntry;)V
+#<init>(Ljava/util/List;)V
+#commence(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;
+#setDefaultEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V

+###org/springframework/security/web/server/authentication/RedirectServerAuthenticationFailureHandler
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setRedirectStrategy(Lorg/springframework/security/web/server/ServerRedirectStrategy;)V
+#onAuthenticationFailure(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/RedirectServerAuthenticationSuccessHandler
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setRequestCache(Lorg/springframework/security/web/server/savedrequest/ServerRequestCache;)V
+#onAuthenticationSuccess(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;
+#setLocation(Ljava/net/URI;)V
+#setRedirectStrategy(Lorg/springframework/security/web/server/ServerRedirectStrategy;)V

+###org/springframework/security/web/server/authentication/HttpBasicServerAuthenticationEntryPoint
@5.0.0.RELEASE
+#<init>()V
+#commence(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;
+#setRealm(Ljava/lang/String;)V

+###org/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler
@5.0.0.RELEASE
+#onAuthenticationFailure(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/logout/RedirectServerLogoutSuccessHandler
@5.0.0.RELEASE
+#<init>()V
+#onLogoutSuccess(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;
+#setLogoutSuccessUrl(Ljava/net/URI;)V

+###org/springframework/security/web/server/authentication/logout/LogoutWebFilter
@5.0.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
+#setLogoutSuccessHandler(Lorg/springframework/security/web/server/authentication/logout/ServerLogoutSuccessHandler;)V
+#setLogoutHandler(Lorg/springframework/security/web/server/authentication/logout/ServerLogoutHandler;)V
+#setRequiresLogoutMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V

+###org/springframework/security/web/server/authentication/logout/ServerLogoutSuccessHandler
@5.0.0.RELEASE
+#onLogoutSuccess(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/logout/DelegatingServerLogoutHandler
@5.1.0.RELEASE
+#<init>([Lorg/springframework/security/web/server/authentication/logout/ServerLogoutHandler;)V
+#<init>(Ljava/util/Collection;)V
+#logout(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/logout/ServerLogoutHandler
@5.0.0.RELEASE
+#logout(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/logout/HttpStatusReturningServerLogoutSuccessHandler
@5.1.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#<init>()V
+#onLogoutSuccess(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/logout/SecurityContextServerLogoutHandler
@5.0.0.RELEASE
+#<init>()V
+#logout(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;
+#setSecurityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)V

+###org/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler
@5.0.0.RELEASE
+#onAuthenticationSuccess(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/ServerAuthenticationEntryPointFailureHandler
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V
+#onAuthenticationFailure(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;
@5.8.0
+#setRethrowAuthenticationServiceException(Z)V

+###org/springframework/security/web/server/authentication/RedirectServerAuthenticationEntryPoint
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#setRequestCache(Lorg/springframework/security/web/server/savedrequest/ServerRequestCache;)V
+#commence(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;
+#setRedirectStrategy(Lorg/springframework/security/web/server/ServerRedirectStrategy;)V

+###org/springframework/security/web/server/authentication/DelegatingServerAuthenticationSuccessHandler
@5.1.0.RELEASE
+#<init>([Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;)V
+#onAuthenticationSuccess(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/HttpStatusServerEntryPoint
@5.1.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#commence(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/core/AuthenticationException;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/WebFilterChainServerAuthenticationSuccessHandler
@5.0.0.RELEASE
+#<init>()V
+#onAuthenticationSuccess(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/ServerAuthenticationConverter
@5.1.0.RELEASE
+#convert(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/ServerHttpBasicAuthenticationConverter
@5.1.0.RELEASE
+#<init>()V
+#convert(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/ServerFormLoginAuthenticationConverter
@5.1.0.RELEASE
+#<init>()V
+#convert(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/AuthenticationWebFilter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
+#setSecurityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)V
+#setAuthenticationSuccessHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;)V
+#setAuthenticationConverter(Ljava/util/function/Function;)V
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)V
+#setRequiresAuthenticationMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
@5.1.0.RELEASE
*#setAuthenticationConverter(Ljava/util/function/Function;)V[deprecated]
+#setServerAuthenticationConverter(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)V
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/authentication/ReactiveAuthenticationManagerResolver;)V

+###org/springframework/security/web/server/DelegatingServerAuthenticationEntryPoint$DelegateEntry
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V
+#getMatcher()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#getEntryPoint()Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;

+###org/springframework/security/web/server/savedrequest/NoOpServerRequestCache
@5.0.0.RELEASE
+#saveRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#removeMatchingRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getInstance()Lorg/springframework/security/web/server/savedrequest/NoOpServerRequestCache;

+###org/springframework/security/web/server/savedrequest/ServerRequestCacheWebFilter
@5.0.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
+#setRequestCache(Lorg/springframework/security/web/server/savedrequest/ServerRequestCache;)V

+###org/springframework/security/web/server/savedrequest/WebSessionServerRequestCache
@5.0.0.RELEASE
+#<init>()V
+#setSaveRequestMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#saveRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#removeMatchingRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.8.0
+#setMatchingRequestParameterName(Ljava/lang/String;)V

+###org/springframework/security/web/server/savedrequest/ServerRequestCache
@5.0.0.RELEASE
+#saveRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#removeMatchingRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/DefaultServerRedirectStrategy
@5.0.0.RELEASE
+#<init>()V
+#sendRedirect(Lorg/springframework/web/server/ServerWebExchange;Ljava/net/URI;)Lreactor/core/publisher/Mono;
+#setHttpStatus(Lorg/springframework/http/HttpStatus;)V
+#setContextRelative(Z)V

+###org/springframework/security/web/server/ServerHttpBasicAuthenticationConverter
@5.0.0.RELEASE
+#<init>()V
+#apply(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@5.1.0.RELEASE
*#apply(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;[deprecated]
*#apply(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]
@5.7.0
+#setCredentialsCharset(Ljava/nio/charset/Charset;)V

+###org/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setEnabled(Z)V
+#setBlock(Z)V
@5.8.0
*#setEnabled(Z)V[deprecated]
*#setBlock(Z)V[deprecated]
+#setHeaderValue(Lorg/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter$HeaderValue;)V
@6.0.0
-#setEnabled(Z)V[deprecated]
-#setBlock(Z)V[deprecated]

+###org/springframework/security/web/server/header/CompositeServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>([Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;)V
+#<init>(Ljava/util/List;)V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/XContentTypeOptionsServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy
@5.1.0.RELEASE
+#values()[Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;
+#getPolicy()Ljava/lang/String;

+###org/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder
@5.0.0.RELEASE
+#<init>()V
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder;
+#build()Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter;

+###org/springframework/security/web/server/header/StrictTransportSecurityServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setIncludeSubDomains(Z)V
+#setMaxAge(Ljava/time/Duration;)V
@5.2.0.RELEASE
+#setPreload(Z)V

+###org/springframework/security/web/server/header/ContentSecurityPolicyServerHttpHeadersWriter
@5.1.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setPolicyDirectives(Ljava/lang/String;)V
+#setReportOnly(Z)V

+###org/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter
@5.1.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setPolicy(Lorg/springframework/security/web/server/header/ReferrerPolicyServerHttpHeadersWriter$ReferrerPolicy;)V

+###org/springframework/security/web/server/header/FeaturePolicyServerHttpHeadersWriter
@5.1.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setPolicyDirectives(Ljava/lang/String;)V

+###org/springframework/security/web/server/header/HttpHeaderWriterWebFilter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/CacheControlServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode
@5.0.0.RELEASE
+#values()[Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;

+###org/springframework/security/web/server/header/StaticServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpHeaders;)V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#builder()Lorg/springframework/security/web/server/header/StaticServerHttpHeadersWriter$Builder;

+###org/springframework/security/web/server/header/ServerHttpHeadersWriter
@5.0.0.RELEASE
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/ContentTypeOptionsServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter
@5.0.0.RELEASE
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setMode(Lorg/springframework/security/web/server/header/XFrameOptionsServerHttpHeadersWriter$Mode;)V

+###org/springframework/security/web/server/ServerFormLoginAuthenticationConverter
@5.0.0.RELEASE
+#<init>()V
+#apply(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setUsernameParameter(Ljava/lang/String;)V
+#setPasswordParameter(Ljava/lang/String;)V
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@5.1.0.RELEASE
*#apply(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;[deprecated]
*#apply(Ljava/lang/Object;)Ljava/lang/Object;[deprecated]

+###org/springframework/security/web/server/WebFilterExchange
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)V
+#getExchange()Lorg/springframework/web/server/ServerWebExchange;
+#getChain()Lorg/springframework/web/server/WebFilterChain;

+###org/springframework/security/web/server/MatcherSecurityWebFilterChain
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Ljava/util/List;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getWebFilters()Lreactor/core/publisher/Flux;

+###org/springframework/security/web/server/csrf/CsrfToken
@5.0.0.RELEASE
+#getHeaderName()Ljava/lang/String;
+#getParameterName()Ljava/lang/String;
+#getToken()Ljava/lang/String;

+###org/springframework/security/web/server/csrf/ServerCsrfTokenRepository
@5.0.0.RELEASE
+#generateToken(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#saveToken(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/csrf/CsrfToken;)Lreactor/core/publisher/Mono;
+#loadToken(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/csrf/CsrfServerLogoutHandler
@5.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRepository;)V
+#logout(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/csrf/DefaultCsrfToken
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getHeaderName()Ljava/lang/String;
+#getParameterName()Ljava/lang/String;
+#getToken()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/security/web/server/csrf/CookieServerCsrfTokenRepository
@5.1.0.RELEASE
+#<init>()V
+#withHttpOnlyFalse()Lorg/springframework/security/web/server/csrf/CookieServerCsrfTokenRepository;
+#generateToken(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#saveToken(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/csrf/CsrfToken;)Lreactor/core/publisher/Mono;
+#loadToken(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setCookieHttpOnly(Z)V
+#setCookieName(Ljava/lang/String;)V
+#setParameterName(Ljava/lang/String;)V
+#setHeaderName(Ljava/lang/String;)V
+#setCookiePath(Ljava/lang/String;)V
+#setCookieDomain(Ljava/lang/String;)V
@5.5.0
+#setSecure(Z)V
@5.8.0
+#setCookieMaxAge(I)V

+###org/springframework/security/web/server/csrf/CsrfWebFilter
@5.0.0.RELEASE
+#<init>()V
+#setAccessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)V
+#setCsrfTokenRepository(Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRepository;)V
+#setRequireCsrfProtectionMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
+#skipExchange(Lorg/springframework/web/server/ServerWebExchange;)V
@5.2.1.RELEASE
+#setTokenFromMultipartDataEnabled(Z)V
@5.8.0
+#setRequestHandler(Lorg/springframework/security/web/server/csrf/ServerCsrfTokenRequestHandler;)V
*#setTokenFromMultipartDataEnabled(Z)V[deprecated]
@6.0.0
-#setTokenFromMultipartDataEnabled(Z)V[deprecated]

+###org/springframework/security/web/server/csrf/CsrfException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/web/server/csrf/WebSessionServerCsrfTokenRepository
@5.0.0.RELEASE
+#<init>()V
+#generateToken(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#saveToken(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/csrf/CsrfToken;)Lreactor/core/publisher/Mono;
+#loadToken(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setParameterName(Ljava/lang/String;)V
+#setHeaderName(Ljava/lang/String;)V
+#setSessionAttributeName(Ljava/lang/String;)V

+###org/springframework/security/web/server/util/matcher/NegatedServerWebExchangeMatcher
@5.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;

+###org/springframework/security/web/server/util/matcher/MediaTypeServerWebExchangeMatcher
@5.0.0.RELEASE
+#<init>([Lorg/springframework/http/MediaType;)V
+#<init>(Ljava/util/Collection;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setUseEquals(Z)V
+#setIgnoredMediaTypes(Ljava/util/Set;)V
+#toString()Ljava/lang/String;

+###org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcherEntry
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Ljava/lang/Object;)V
+#getMatcher()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#getEntry()Ljava/lang/Object;

+###org/springframework/security/web/server/util/matcher/OrServerWebExchangeMatcher
@5.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;

+###org/springframework/security/web/server/util/matcher/AndServerWebExchangeMatcher
@5.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;

+###org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher
@5.0.0.RELEASE
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher$MatchResult
@5.0.0.RELEASE
+#isMatch()Z
+#getVariables()Ljava/util/Map;
+#match()Lreactor/core/publisher/Mono;
+#match(Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#notMatch()Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/util/matcher/PathPatternParserServerWebExchangeMatcher
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/util/pattern/PathPattern;)V
+#<init>(Lorg/springframework/web/util/pattern/PathPattern;Lorg/springframework/http/HttpMethod;)V
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpMethod;)V
+#<init>(Ljava/lang/String;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;

+###org/springframework/security/web/server/util/matcher/ServerWebExchangeMatchers
@5.0.0.RELEASE
+#pathMatchers(Lorg/springframework/http/HttpMethod;[Ljava/lang/String;)Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#pathMatchers([Ljava/lang/String;)Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#matchers([Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#anyExchange()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;

+###org/springframework/security/web/server/authorization/ServerAccessDeniedHandler
@5.0.0.RELEASE
+#handle(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/access/AccessDeniedException;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authorization/AuthorizationContext
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/ServerWebExchange;)V
+#<init>(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;)V
+#getExchange()Lorg/springframework/web/server/ServerWebExchange;
+#getVariables()Ljava/util/Map;

+###org/springframework/security/web/server/authorization/ServerWebExchangeDelegatingServerAccessDeniedHandler
@5.1.0.RELEASE
+#<init>([Lorg/springframework/security/web/server/authorization/ServerWebExchangeDelegatingServerAccessDeniedHandler$DelegateEntry;)V
+#<init>(Ljava/util/List;)V
+#handle(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/access/AccessDeniedException;)Lreactor/core/publisher/Mono;
+#setDefaultAccessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)V

+###org/springframework/security/web/server/authorization/HttpStatusServerAccessDeniedHandler
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#handle(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/access/AccessDeniedException;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authorization/ServerWebExchangeDelegatingServerAccessDeniedHandler$DelegateEntry
@5.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)V
+#getMatcher()Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;
+#getAccessDeniedHandler()Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;

+###org/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager$Builder
@5.0.0.RELEASE
+#add(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcherEntry;)Lorg/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager$Builder;
+#build()Lorg/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager;

+###org/springframework/security/web/server/authorization/ExceptionTranslationWebFilter
@5.0.0.RELEASE
+#<init>()V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
+#setAccessDeniedHandler(Lorg/springframework/security/web/server/authorization/ServerAccessDeniedHandler;)V
+#setAuthenticationEntryPoint(Lorg/springframework/security/web/server/ServerAuthenticationEntryPoint;)V
@5.6.0
+#setAuthenticationTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
@5.7.0
*#setMessageSource(Lorg/springframework/context/MessageSource;)V[deprecated]
@6.0.0
-#setMessageSource(Lorg/springframework/context/MessageSource;)V[deprecated]

+###org/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager
@5.0.0.RELEASE
+#check(Lreactor/core/publisher/Mono;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#builder()Lorg/springframework/security/web/server/authorization/DelegatingReactiveAuthorizationManager$Builder;
+#check(Lreactor/core/publisher/Mono;Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authorization/AuthorizationWebFilter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/security/authorization/ReactiveAuthorizationManager;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/SecurityWebFilterChain
@5.0.0.RELEASE
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getWebFilters()Lreactor/core/publisher/Flux;

+###org/springframework/security/web/reactive/result/method/annotation/AuthenticationPrincipalArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#setBeanResolver(Lorg/springframework/expression/BeanResolver;)V

+###org/springframework/security/web/reactive/result/view/CsrfRequestDataValueProcessor
@5.0.0.RELEASE
+#<init>()V
+#processAction(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#processFormFieldValue(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getExtraHiddenFields(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Map;
+#processUrl(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/security/web/jaasapi/JaasApiIntegrationFilter
@3.1.0.RELEASE
+#<init>()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setCreateEmptySubject(Z)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/session/HttpSessionDestroyedEvent
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpSession;)V
+#getSession()Ljavax/servlet/http/HttpSession;
+#getSecurityContext()Lorg/springframework/security/core/context/SecurityContext;
+#getId()Ljava/lang/String;
@3.1.0.RELEASE
+#getSecurityContexts()Ljava/util/List;
-#getSecurityContext()Lorg/springframework/security/core/context/SecurityContext;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpSession;)V
+#getSession()Ljakarta/servlet/http/HttpSession;
-#<init>(Ljavax/servlet/http/HttpSession;)V
-#getSession()Ljavax/servlet/http/HttpSession;

+###org/springframework/security/web/session/HttpSessionCreatedEvent
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpSession;)V
+#getSession()Ljavax/servlet/http/HttpSession;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpSession;)V
+#getSession()Ljakarta/servlet/http/HttpSession;
-#<init>(Ljavax/servlet/http/HttpSession;)V
-#getSession()Ljavax/servlet/http/HttpSession;

+###org/springframework/security/web/session/SimpleRedirectInvalidSessionStrategy
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setCreateNewSession(Z)V
@6.0.0
+#onInvalidSessionDetected(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/session/InvalidSessionAccessDeniedHandler
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/session/InvalidSessionStrategy;)V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/web/session/SessionInformationExpiredStrategy
@4.2.0.RELEASE
+#onExpiredSessionDetected(Lorg/springframework/security/web/session/SessionInformationExpiredEvent;)V

+###org/springframework/security/web/session/HttpSessionEventPublisher
@3.0.0.RELEASE
+#<init>()V
+#sessionCreated(Ljavax/servlet/http/HttpSessionEvent;)V
+#sessionDestroyed(Ljavax/servlet/http/HttpSessionEvent;)V
@5.4.0
+#sessionIdChanged(Ljavax/servlet/http/HttpSessionEvent;Ljava/lang/String;)V
@6.0.0
+#sessionCreated(Ljakarta/servlet/http/HttpSessionEvent;)V
+#sessionDestroyed(Ljakarta/servlet/http/HttpSessionEvent;)V
+#sessionIdChanged(Ljakarta/servlet/http/HttpSessionEvent;Ljava/lang/String;)V
-#sessionCreated(Ljavax/servlet/http/HttpSessionEvent;)V
-#sessionDestroyed(Ljavax/servlet/http/HttpSessionEvent;)V
-#sessionIdChanged(Ljavax/servlet/http/HttpSessionEvent;Ljava/lang/String;)V

+###org/springframework/security/web/session/ConcurrentSessionFilter
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setExpiredUrl(Ljava/lang/String;)V
+#setSessionRegistry(Lorg/springframework/security/core/session/SessionRegistry;)V
+#setLogoutHandlers([Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
+#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/core/session/SessionRegistry;)V
+#<init>(Lorg/springframework/security/core/session/SessionRegistry;Ljava/lang/String;)V
*#setExpiredUrl(Ljava/lang/String;)V[deprecated]
*#setSessionRegistry(Lorg/springframework/security/core/session/SessionRegistry;)V[deprecated]
@4.0.0.RELEASE
-#<init>()V
-#setExpiredUrl(Ljava/lang/String;)V[deprecated]
-#setSessionRegistry(Lorg/springframework/security/core/session/SessionRegistry;)V[deprecated]
@4.2.0.RELEASE
*#<init>(Lorg/springframework/security/core/session/SessionRegistry;Ljava/lang/String;)V[deprecated]
+#<init>(Lorg/springframework/security/core/session/SessionRegistry;Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;)V
@5.0.4.RELEASE
*#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V[deprecated]
@5.2.0.RELEASE
+#setLogoutHandlers(Ljava/util/List;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/session/SessionInformationExpiredEvent
@4.2.0.RELEASE
+#<init>(Lorg/springframework/security/core/session/SessionInformation;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getRequest()Ljavax/servlet/http/HttpServletRequest;
+#getResponse()Ljavax/servlet/http/HttpServletResponse;
+#getSessionInformation()Lorg/springframework/security/core/session/SessionInformation;
@6.0.0
+#<init>(Lorg/springframework/security/core/session/SessionInformation;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getRequest()Ljakarta/servlet/http/HttpServletRequest;
+#getResponse()Ljakarta/servlet/http/HttpServletResponse;
-#<init>(Lorg/springframework/security/core/session/SessionInformation;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getRequest()Ljavax/servlet/http/HttpServletRequest;
-#getResponse()Ljavax/servlet/http/HttpServletResponse;

+###org/springframework/security/web/session/SimpleRedirectSessionInformationExpiredStrategy
@4.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/security/web/RedirectStrategy;)V
+#onExpiredSessionDetected(Lorg/springframework/security/web/session/SessionInformationExpiredEvent;)V

+###org/springframework/security/web/session/SessionManagementFilter
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/web/context/SecurityContextRepository;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V
+#setInvalidSessionUrl(Ljava/lang/String;)V
+#setAuthenticationFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@3.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/context/SecurityContextRepository;Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V
*#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V[deprecated]
+#setInvalidSessionStrategy(Lorg/springframework/security/web/session/InvalidSessionStrategy;)V
-#setInvalidSessionUrl(Ljava/lang/String;)V
-#setRedirectStrategy(Lorg/springframework/security/web/RedirectStrategy;)V
@3.2.0.RELEASE
+#setTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
@4.0.0.RELEASE
-#setSessionAuthenticationStrategy(Lorg/springframework/security/web/authentication/session/SessionAuthenticationStrategy;)V[deprecated]
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/session/InvalidSessionStrategy
@3.1.0.RELEASE
+#onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#onInvalidSessionDetected(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/FilterInvocation
@3.0.0.RELEASE
+#<init>(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#getChain()Ljavax/servlet/FilterChain;
+#getFullRequestUrl()Ljava/lang/String;
+#getHttpRequest()Ljavax/servlet/http/HttpServletRequest;
+#getHttpResponse()Ljavax/servlet/http/HttpServletResponse;
+#getRequestUrl()Ljava/lang/String;
+#getRequest()Ljavax/servlet/http/HttpServletRequest;
+#getResponse()Ljavax/servlet/http/HttpServletResponse;
+#toString()Ljava/lang/String;
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@5.4.10
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
@5.5.0
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
@5.5.4
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
@6.0.0
+#<init>(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljakarta/servlet/ServletContext;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljakarta/servlet/ServletContext;)V
+#getChain()Ljakarta/servlet/FilterChain;
+#getHttpRequest()Ljakarta/servlet/http/HttpServletRequest;
+#getHttpResponse()Ljakarta/servlet/http/HttpServletResponse;
+#getRequest()Ljakarta/servlet/http/HttpServletRequest;
+#getResponse()Ljakarta/servlet/http/HttpServletResponse;
-#<init>(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
-#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/ServletContext;)V
-#getChain()Ljavax/servlet/FilterChain;
-#getHttpRequest()Ljavax/servlet/http/HttpServletRequest;
-#getHttpResponse()Ljavax/servlet/http/HttpServletResponse;
-#getRequest()Ljavax/servlet/http/HttpServletRequest;
-#getResponse()Ljavax/servlet/http/HttpServletResponse;

+###org/springframework/security/web/csrf/HttpSessionCsrfTokenRepository
@3.2.0.RELEASE
+#<init>()V
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#setParameterName(Ljava/lang/String;)V
+#setHeaderName(Ljava/lang/String;)V
+#setSessionAttributeName(Ljava/lang/String;)V
@6.0.0
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#loadToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#generateToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;

+###org/springframework/security/web/csrf/CsrfToken
@3.2.0.RELEASE
+#getHeaderName()Ljava/lang/String;
+#getParameterName()Ljava/lang/String;
+#getToken()Ljava/lang/String;

+###org/springframework/security/web/csrf/CsrfFilter
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/csrf/CsrfTokenRepository;)V
+#setRequireCsrfProtectionMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#setAccessDeniedHandler(Lorg/springframework/security/web/access/AccessDeniedHandler;)V
@5.2.0.RELEASE
+#skipRequest(Ljavax/servlet/http/HttpServletRequest;)V
@5.8.0
+#setRequestHandler(Lorg/springframework/security/web/csrf/CsrfTokenRequestHandler;)V
@6.0.0
+#skipRequest(Ljakarta/servlet/http/HttpServletRequest;)V
-#skipRequest(Ljavax/servlet/http/HttpServletRequest;)V

+###org/springframework/security/web/csrf/MissingCsrfTokenException
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/web/csrf/InvalidCsrfTokenException
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/csrf/CsrfToken;Ljava/lang/String;)V

+###org/springframework/security/web/csrf/DefaultCsrfToken
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getHeaderName()Ljava/lang/String;
+#getParameterName()Ljava/lang/String;
+#getToken()Ljava/lang/String;

+###org/springframework/security/web/csrf/LazyCsrfTokenRepository
@4.1.0.RELEASE
+#<init>(Lorg/springframework/security/web/csrf/CsrfTokenRepository;)V
+#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
@5.8.0
+#setDeferLoadToken(Z)V
@6.0.0
+#generateToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#loadToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;

+###org/springframework/security/web/csrf/CsrfAuthenticationStrategy
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/csrf/CsrfTokenRepository;)V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@5.8.0
+#setRequestHandler(Lorg/springframework/security/web/csrf/CsrfTokenRequestHandler;)V
@6.0.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/csrf/CookieCsrfTokenRepository
@4.1.0.RELEASE
+#<init>()V
+#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#setParameterName(Ljava/lang/String;)V
+#setHeaderName(Ljava/lang/String;)V
+#setCookieName(Ljava/lang/String;)V
+#setCookieHttpOnly(Z)V
@4.1.1.RELEASE
+#withHttpOnlyFalse()Lorg/springframework/security/web/csrf/CookieCsrfTokenRepository;
@4.2.0.RELEASE
+#setCookiePath(Ljava/lang/String;)V
+#getCookiePath()Ljava/lang/String;
@5.2.0.RELEASE
+#setCookieDomain(Ljava/lang/String;)V
@5.4.0
+#setSecure(Ljava/lang/Boolean;)V
@5.5.0
+#setCookieMaxAge(I)V
@6.0.0
+#generateToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#loadToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;

+###org/springframework/security/web/csrf/CsrfTokenRepository
@3.2.0.RELEASE
+#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
@5.8.0
+#loadDeferredToken(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/csrf/DeferredCsrfToken;
@6.0.0
+#generateToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#loadToken(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
+#loadDeferredToken(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/csrf/DeferredCsrfToken;
-#generateToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#saveToken(Lorg/springframework/security/web/csrf/CsrfToken;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#loadToken(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/csrf/CsrfToken;
-#loadDeferredToken(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/csrf/DeferredCsrfToken;

+###org/springframework/security/web/csrf/CsrfException
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/web/csrf/CsrfLogoutHandler
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/csrf/CsrfTokenRepository;)V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/SecurityFilterChain
@3.1.0.RELEASE
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#getFilters()Ljava/util/List;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/ThrowableAnalyzer
@3.0.0.RELEASE
+#<init>()V
+#determineCauseChain(Ljava/lang/Throwable;)[Ljava/lang/Throwable;
+#getFirstThrowableOfType(Ljava/lang/Class;[Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#verifyThrowableHierarchy(Ljava/lang/Throwable;Ljava/lang/Class;)V

+###org/springframework/security/web/util/OnCommittedResponseWrapper
@4.1.0.RELEASE
+#<init>(Ljavax/servlet/http/HttpServletResponse;)V
+#addHeader(Ljava/lang/String;Ljava/lang/String;)V
+#setContentLength(I)V
+#sendError(I)V
+#sendError(ILjava/lang/String;)V
+#sendRedirect(Ljava/lang/String;)V
+#getOutputStream()Ljavax/servlet/ServletOutputStream;
+#getWriter()Ljava/io/PrintWriter;
+#flushBuffer()V
@5.1.7.RELEASE
+#setContentLengthLong(J)V
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletResponse;)V
+#getOutputStream()Ljakarta/servlet/ServletOutputStream;
-#<init>(Ljavax/servlet/http/HttpServletResponse;)V
-#getOutputStream()Ljavax/servlet/ServletOutputStream;

+###org/springframework/security/web/util/UrlUtils
@3.0.0.RELEASE
+#<init>()V
+#buildFullRequestUrl(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#buildFullRequestUrl(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#buildRequestUrl(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#isValidRedirectUrl(Ljava/lang/String;)Z
@3.0.3.RELEASE
+#isAbsoluteUrl(Ljava/lang/String;)Z
@5.4.0
-#<init>()V
@6.0.0
+#buildFullRequestUrl(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#buildRequestUrl(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#buildFullRequestUrl(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#buildRequestUrl(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;

+###org/springframework/security/web/util/TextEscapeUtils
@3.0.0.RELEASE
+#<init>()V
+#escapeEntities(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/security/web/util/matcher/AnyRequestMatcher
@3.2.0.RELEASE
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.1.0.RELEASE
+#toString()Ljava/lang/String;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/matcher/AntPathRequestMatcher
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#getPattern()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@4.1.0.RELEASE
+#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;
+#postProcessVariableName(Ljava/lang/String;)Ljava/lang/String;
@4.1.1.RELEASE
-#postProcessVariableName(Ljava/lang/String;)Ljava/lang/String;
@4.2.9.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;ZLorg/springframework/web/util/UrlPathHelper;)V
@5.0.0.RELEASE
-#<init>(Ljava/lang/String;Ljava/lang/String;ZLorg/springframework/web/util/UrlPathHelper;)V
@5.0.9.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;ZLorg/springframework/web/util/UrlPathHelper;)V
@5.2.0.RELEASE
*#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;[deprecated]
+#matcher(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
@5.8.0
+#antMatcher(Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/AntPathRequestMatcher;
+#antMatcher(Lorg/springframework/http/HttpMethod;)Lorg/springframework/security/web/util/matcher/AntPathRequestMatcher;
+#antMatcher(Lorg/springframework/http/HttpMethod;Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/AntPathRequestMatcher;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
+#extractUriTemplateVariables(Ljakarta/servlet/http/HttpServletRequest;)Ljava/util/Map;[deprecated]
+#matcher(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z
-#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;[deprecated]
-#matcher(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;

+###org/springframework/security/web/util/matcher/RegexRequestMatcher
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
@5.1.0.RELEASE
+#toString()Ljava/lang/String;
@5.8.0
+#regexMatcher(Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/RegexRequestMatcher;
+#regexMatcher(Lorg/springframework/http/HttpMethod;)Lorg/springframework/security/web/util/matcher/RegexRequestMatcher;
+#regexMatcher(Lorg/springframework/http/HttpMethod;Ljava/lang/String;)Lorg/springframework/security/web/util/matcher/RegexRequestMatcher;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/matcher/IpAddressMatcher
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#matches(Ljava/lang/String;)Z
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/matcher/RequestMatcherEditor
@3.2.0.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/security/web/util/matcher/NegatedRequestMatcher
@3.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#toString()Ljava/lang/String;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/matcher/ELRequestMatcher
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#createELContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/expression/EvaluationContext;
@5.1.0.RELEASE
+#toString()Ljava/lang/String;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
+#createELContext(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/expression/EvaluationContext;
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z
-#createELContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/expression/EvaluationContext;

+###org/springframework/security/web/util/matcher/AndRequestMatcher
@3.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>([Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#toString()Ljava/lang/String;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/matcher/OrRequestMatcher
@3.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#<init>([Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#toString()Ljava/lang/String;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/matcher/MediaTypeRequestMatcher
@3.2.0.RELEASE
+#<init>(Lorg/springframework/web/accept/ContentNegotiationStrategy;[Lorg/springframework/http/MediaType;)V
+#<init>(Lorg/springframework/web/accept/ContentNegotiationStrategy;Ljava/util/Collection;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#setUseEquals(Z)V
+#setIgnoredMediaTypes(Ljava/util/Set;)V
+#toString()Ljava/lang/String;
@5.2.0.RELEASE
+#<init>([Lorg/springframework/http/MediaType;)V
+#<init>(Ljava/util/Collection;)V
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/matcher/RequestMatcher
@3.2.0.RELEASE
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
@5.2.0.RELEASE
+#matcher(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
+#matcher(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z
-#matcher(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;

+###org/springframework/security/web/util/matcher/RequestVariablesExtractor
@4.1.1.RELEASE
+#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;
@6.0.0
+#extractUriTemplateVariables(Ljakarta/servlet/http/HttpServletRequest;)Ljava/util/Map;
-#extractUriTemplateVariables(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Map;

+###org/springframework/security/web/util/matcher/RequestHeaderRequestMatcher
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#toString()Ljava/lang/String;
@6.0.0
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/util/RedirectUrlBuilder
@3.0.0.RELEASE
+#<init>()V
+#setScheme(Ljava/lang/String;)V
+#setServerName(Ljava/lang/String;)V
+#setPort(I)V
+#setContextPath(Ljava/lang/String;)V
+#setServletPath(Ljava/lang/String;)V
+#setPathInfo(Ljava/lang/String;)V
+#setQuery(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;

+###org/springframework/security/web/util/ThrowableCauseExtractor
@3.0.0.RELEASE
+#extractCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;

+###org/springframework/security/web/PortResolver
@3.0.0.RELEASE
+#getServerPort(Ljavax/servlet/ServletRequest;)I
@6.0.0
+#getServerPort(Ljakarta/servlet/ServletRequest;)I
-#getServerPort(Ljavax/servlet/ServletRequest;)I

+###org/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesAuthenticationDetails
@3.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#getGrantedAuthorities()Ljava/util/List;
+#setGrantedAuthorities(Ljava/util/List;)V
@3.1.0.RELEASE
+#setGrantedAuthorities(Ljava/util/Collection;)V
+#getGrantedAuthorities()Ljava/util/Collection;
-#setGrantedAuthorities(Ljava/util/List;)V
@4.0.0.RELEASE
-###org/springframework/security/web/authentication/preauth/PreAuthenticatedGrantedAuthoritiesAuthenticationDetails

+###org/springframework/security/web/authentication/preauth/websphere/WebSpherePreAuthenticatedAuthenticationDetailsSource
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#buildDetails(Ljava/lang/Object;)Ljava/lang/Object;
+#setWebSphereGroups2GrantedAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/Attributes2GrantedAuthoritiesMapper;)V
@4.0.0.RELEASE
-###org/springframework/security/web/authentication/preauth/websphere/WebSpherePreAuthenticatedAuthenticationDetailsSource

+###org/springframework/security/web/authentication/preauth/websphere/WebSphere2SpringSecurityPropagationInterceptor
@3.0.0.RELEASE
+#<init>()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
+#setAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
@4.0.0.RELEASE
-###org/springframework/security/web/authentication/preauth/websphere/WebSphere2SpringSecurityPropagationInterceptor

+###org/springframework/security/web/authentication/session/ConcurrentSessionControlStrategy
@3.0.0.RELEASE
+#<init>(Lorg/springframework/security/core/session/SessionRegistry;)V
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setExceptionIfMaximumExceeded(Z)V
+#setMaximumSessions(I)V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
+#setAlwaysCreateSession(Z)V
@4.0.0.RELEASE
-###org/springframework/security/web/authentication/session/ConcurrentSessionControlStrategy

+###org/springframework/security/web/util/AntPathRequestMatcher
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#getPattern()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.2.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#getHttpMethod()Lorg/springframework/http/HttpMethod;
+#isCaseSensitive()Z
@4.0.0.RELEASE
-###org/springframework/security/web/util/AntPathRequestMatcher

+###org/springframework/security/web/util/IpAddressMatcher
@3.0.2.RELEASE
+#<init>(Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
@3.0.6.RELEASE
+#matches(Ljava/lang/String;)Z
@4.0.0.RELEASE
-###org/springframework/security/web/util/IpAddressMatcher

+###org/springframework/security/web/util/RequestMatcherEditor
@3.0.2.RELEASE
+#<init>()V
+#setAsText(Ljava/lang/String;)V
@4.0.0.RELEASE
-###org/springframework/security/web/util/RequestMatcherEditor

+###org/springframework/security/web/util/ELRequestMatcher
@3.0.2.RELEASE
+#<init>(Ljava/lang/String;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#createELContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/expression/EvaluationContext;
@4.0.0.RELEASE
-###org/springframework/security/web/util/ELRequestMatcher

+###org/springframework/security/web/util/RequestMatcher
@3.0.2.RELEASE
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
@4.0.0.RELEASE
-###org/springframework/security/web/util/RequestMatcher

+###org/springframework/security/web/util/RegexRequestMatcher
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Z)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
@4.0.0.RELEASE
-###org/springframework/security/web/util/RegexRequestMatcher

+###org/springframework/security/web/util/AnyRequestMatcher
@3.1.0.RELEASE
+#<init>()V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@4.0.0.RELEASE
-###org/springframework/security/web/util/AnyRequestMatcher

+###org/springframework/security/web/access/expression/WebSecurityExpressionHandler
@3.0.0.RELEASE
+#getExpressionParser()Lorg/springframework/expression/ExpressionParser;
+#createEvaluationContext(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)Lorg/springframework/expression/EvaluationContext;
@3.1.0.RELEASE
-#getExpressionParser()Lorg/springframework/expression/ExpressionParser;
-#createEvaluationContext(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)Lorg/springframework/expression/EvaluationContext;
@3.1.1.RELEASE
+#createEvaluationContext(Lorg/springframework/security/core/Authentication;Lorg/springframework/security/web/FilterInvocation;)Lorg/springframework/expression/EvaluationContext;
@4.0.0.RELEASE
-###org/springframework/security/web/access/expression/WebSecurityExpressionHandler

+###org/springframework/security/web/reactive/result/method/annotation/CurrentSecurityContextArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#setBeanResolver(Lorg/springframework/expression/BeanResolver;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/authentication/AuthenticationEntryPointFailureHandler
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/AuthenticationEntryPoint;)V
+#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
@5.8.0
+#setRethrowAuthenticationServiceException(Z)V
@6.0.0
+#onAuthenticationFailure(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V
-#onAuthenticationFailure(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/AuthenticationException;)V

+###org/springframework/security/web/authentication/logout/LogoutSuccessEventPublishingLogoutHandler
@5.2.0.RELEASE
+#<init>()V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
@6.0.0
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/logout/HeaderWriterLogoutHandler
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/header/HeaderWriter;)V
+#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
@6.0.0
+#logout(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
-#logout(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V

+###org/springframework/security/web/authentication/AuthenticationFilter
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/authentication/AuthenticationManager;Lorg/springframework/security/web/authentication/AuthenticationConverter;)V
+#<init>(Lorg/springframework/security/authentication/AuthenticationManagerResolver;Lorg/springframework/security/web/authentication/AuthenticationConverter;)V
+#getRequestMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#setRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
+#getAuthenticationConverter()Lorg/springframework/security/web/authentication/AuthenticationConverter;
+#setAuthenticationConverter(Lorg/springframework/security/web/authentication/AuthenticationConverter;)V
+#getSuccessHandler()Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;
+#setSuccessHandler(Lorg/springframework/security/web/authentication/AuthenticationSuccessHandler;)V
+#getFailureHandler()Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;
+#setFailureHandler(Lorg/springframework/security/web/authentication/AuthenticationFailureHandler;)V
+#getAuthenticationManagerResolver()Lorg/springframework/security/authentication/AuthenticationManagerResolver;
+#setAuthenticationManagerResolver(Lorg/springframework/security/authentication/AuthenticationManagerResolver;)V
@5.7.0
+#setSecurityContextRepository(Lorg/springframework/security/web/context/SecurityContextRepository;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V

+###org/springframework/security/web/authentication/www/BasicAuthenticationConverter
@5.2.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#getCredentialsCharset()Ljava/nio/charset/Charset;
+#setCredentialsCharset(Ljava/nio/charset/Charset;)V
+#getAuthenticationDetailsSource()Lorg/springframework/security/authentication/AuthenticationDetailsSource;
+#setAuthenticationDetailsSource(Lorg/springframework/security/authentication/AuthenticationDetailsSource;)V
+#convert(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/authentication/UsernamePasswordAuthenticationToken;
+#convert(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;
@6.0.0
+#convert(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/authentication/UsernamePasswordAuthenticationToken;
+#convert(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;
-#convert(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/authentication/UsernamePasswordAuthenticationToken;
-#convert(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;

+###org/springframework/security/web/authentication/session/AbstractSessionFixationProtectionStrategy
@5.4.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V
+#setAlwaysCreateSession(Z)V
@6.0.0
+#onAuthentication(Lorg/springframework/security/core/Authentication;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onAuthentication(Lorg/springframework/security/core/Authentication;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/authentication/AuthenticationConverter
@5.2.0.RELEASE
+#convert(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;
@6.0.0
+#convert(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;
-#convert(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/Authentication;

+###org/springframework/security/web/header/writers/ClearSiteDataHeaderWriter$Directive
@5.2.0.RELEASE
+#values()[Lorg/springframework/security/web/header/writers/ClearSiteDataHeaderWriter$Directive;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/ClearSiteDataHeaderWriter$Directive;
+#getHeaderValue()Ljava/lang/String;

+###org/springframework/security/web/header/writers/ClearSiteDataHeaderWriter
@5.2.0.RELEASE
+#<init>([Lorg/springframework/security/web/header/writers/ClearSiteDataHeaderWriter$Directive;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#toString()Ljava/lang/String;
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/PermissionsPolicyHeaderWriter
@5.5.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setPolicy(Ljava/lang/String;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#toString()Ljava/lang/String;
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/frameoptions/AbstractRequestParameterAllowFromStrategy
@5.4.0
+#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#setAllowFromParameterName(Ljava/lang/String;)V
@6.0.0
+#getAllowFromValue(Ljakarta/servlet/http/HttpServletRequest;)Ljava/lang/String;
-#getAllowFromValue(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;

+###org/springframework/security/web/header/writers/CompositeHeaderWriter
@5.2.0.RELEASE
+#<init>(Ljava/util/List;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/RequestMatcherRedirectFilter
@5.6.0
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/String;)V

+###org/springframework/security/web/jackson2/WebServletJackson2Module
@5.1.3.RELEASE
+#<init>()V
+#setupModule(Lcom/fasterxml/jackson/databind/Module$SetupContext;)V

+###org/springframework/security/web/firewall/HttpStatusRequestRejectedHandler
@5.4.0
+#<init>()V
+#<init>(I)V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V

+###org/springframework/security/web/firewall/DefaultRequestRejectedHandler
@5.4.0
+#<init>()V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V

+###org/springframework/security/web/firewall/RequestRejectedHandler
@5.4.0
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V

+###org/springframework/security/web/savedrequest/CookieRequestCache
@5.4.0
+#<init>()V
+#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;
+#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setRequestMatcher(Lorg/springframework/security/web/util/matcher/RequestMatcher;)V
@6.0.0
+#saveRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#getRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
+#getMatchingRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)Ljakarta/servlet/http/HttpServletRequest;
+#removeRequest(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#saveRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#getRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/security/web/savedrequest/SavedRequest;
-#getMatchingRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljavax/servlet/http/HttpServletRequest;
-#removeRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/session/HttpSessionIdChangedEvent
@5.4.0
+#<init>(Ljavax/servlet/http/HttpSession;Ljava/lang/String;)V
+#getOldSessionId()Ljava/lang/String;
+#getNewSessionId()Ljava/lang/String;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpSession;Ljava/lang/String;)V
-#<init>(Ljavax/servlet/http/HttpSession;Ljava/lang/String;)V

+###org/springframework/security/web/session/RequestedUrlRedirectInvalidSessionStrategy
@5.6.0
+#<init>()V
+#onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#setCreateNewSession(Z)V
@6.0.0
+#onInvalidSessionDetected(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#onInvalidSessionDetected(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/method/annotation/CurrentSecurityContextArgumentResolver
@5.2.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/method/support/ModelAndViewContainer;Lorg/springframework/web/context/request/NativeWebRequest;Lorg/springframework/web/bind/support/WebDataBinderFactory;)Ljava/lang/Object;
+#setBeanResolver(Lorg/springframework/expression/BeanResolver;)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V

+###org/springframework/security/web/server/authentication/AnonymousAuthenticationWebFilter
@5.2.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/AuthenticationConverterServerWebExchangeMatcher
@5.4.0
+#<init>(Lorg/springframework/security/web/server/authentication/ServerAuthenticationConverter;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/ServerX509AuthenticationConverter
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/authentication/preauth/x509/X509PrincipalExtractor;)V
+#convert(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/logout/HeaderWriterServerLogoutHandler
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;)V
+#logout(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/logout/WebSessionServerLogoutHandler
@5.6.0
+#<init>()V
+#logout(Lorg/springframework/security/web/server/WebFilterExchange;Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/SwitchUserWebFilter
@5.4.0
+#<init>(Lorg/springframework/security/core/userdetails/ReactiveUserDetailsService;Lorg/springframework/security/web/server/authentication/ServerAuthenticationSuccessHandler;Lorg/springframework/security/web/server/authentication/ServerAuthenticationFailureHandler;)V
+#<init>(Lorg/springframework/security/core/userdetails/ReactiveUserDetailsService;Ljava/lang/String;Ljava/lang/String;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;
+#setSecurityContextRepository(Lorg/springframework/security/web/server/context/ServerSecurityContextRepository;)V
+#setExitUserUrl(Ljava/lang/String;)V
+#setExitUserMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#setSwitchUserUrl(Ljava/lang/String;)V
+#setSwitchUserMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V

+###org/springframework/security/web/server/authentication/ReactivePreAuthenticatedAuthenticationManager
@5.2.0.RELEASE
+#<init>(Lorg/springframework/security/core/userdetails/ReactiveUserDetailsService;)V
+#<init>(Lorg/springframework/security/core/userdetails/ReactiveUserDetailsService;Lorg/springframework/security/core/userdetails/UserDetailsChecker;)V
+#authenticate(Lorg/springframework/security/core/Authentication;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/PermissionsPolicyServerHttpHeadersWriter
@5.5.0
+#<init>()V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setPolicy(Ljava/lang/String;)V

+###org/springframework/security/web/server/header/ClearSiteDataServerHttpHeadersWriter
@5.2.0.RELEASE
+#<init>([Lorg/springframework/security/web/server/header/ClearSiteDataServerHttpHeadersWriter$Directive;)V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/ClearSiteDataServerHttpHeadersWriter$Directive
@5.2.0.RELEASE
+#values()[Lorg/springframework/security/web/server/header/ClearSiteDataServerHttpHeadersWriter$Directive;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/server/header/ClearSiteDataServerHttpHeadersWriter$Directive;
+#getHeaderValue()Ljava/lang/String;

+###org/springframework/security/web/server/jackson2/WebServerJackson2Module
@5.2.0.RELEASE
+#<init>()V
+#setupModule(Lcom/fasterxml/jackson/databind/Module$SetupContext;)V

+###org/springframework/security/web/server/savedrequest/CookieServerRequestCache
@5.4.0
+#<init>()V
+#setSaveRequestMatcher(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;)V
+#saveRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#getRedirectUri(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#removeMatchingRequest(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/ExchangeMatcherRedirectWebFilter
@5.6.0
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Ljava/lang/String;)V
+#filter(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/util/matcher/RequestMatcherEntry
@5.5.5
+#<init>(Lorg/springframework/security/web/util/matcher/RequestMatcher;Ljava/lang/Object;)V
+#getRequestMatcher()Lorg/springframework/security/web/util/matcher/RequestMatcher;
+#getEntry()Ljava/lang/Object;
@5.6.0
-###org/springframework/security/web/util/matcher/RequestMatcherEntry

+###org/springframework/security/web/util/matcher/RequestMatcher$MatchResult
@5.2.0.RELEASE
+#isMatch()Z
+#getVariables()Ljava/util/Map;
+#match()Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
+#match(Ljava/util/Map;)Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;
+#notMatch()Lorg/springframework/security/web/util/matcher/RequestMatcher$MatchResult;

+###org/springframework/security/web/util/matcher/DispatcherTypeRequestMatcher
@5.5.0
+#<init>(Ljavax/servlet/DispatcherType;)V
+#<init>(Ljavax/servlet/DispatcherType;Lorg/springframework/http/HttpMethod;)V
+#matches(Ljavax/servlet/http/HttpServletRequest;)Z
+#toString()Ljava/lang/String;
@6.0.0
+#<init>(Ljakarta/servlet/DispatcherType;)V
+#<init>(Ljakarta/servlet/DispatcherType;Lorg/springframework/http/HttpMethod;)V
+#matches(Ljakarta/servlet/http/HttpServletRequest;)Z
-#<init>(Ljavax/servlet/DispatcherType;)V
-#<init>(Ljavax/servlet/DispatcherType;Lorg/springframework/http/HttpMethod;)V
-#matches(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/access/RequestMatcherDelegatingWebInvocationPrivilegeEvaluator
@5.5.5
+#<init>(Ljava/util/List;)V
+#isAllowed(Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z
+#isAllowed(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z
+#setServletContext(Ljavax/servlet/ServletContext;)V
@5.6.0
-###org/springframework/security/web/access/RequestMatcherDelegatingWebInvocationPrivilegeEvaluator

+###org/springframework/security/web/access/intercept/RequestAuthorizationContext
@5.5.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)V
+#getRequest()Ljavax/servlet/http/HttpServletRequest;
+#getVariables()Ljava/util/Map;
@6.0.0
+#<init>(Ljakarta/servlet/http/HttpServletRequest;)V
+#<init>(Ljakarta/servlet/http/HttpServletRequest;Ljava/util/Map;)V
+#getRequest()Ljakarta/servlet/http/HttpServletRequest;
-#<init>(Ljavax/servlet/http/HttpServletRequest;)V
-#<init>(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)V
-#getRequest()Ljavax/servlet/http/HttpServletRequest;

+###org/springframework/security/web/access/intercept/RequestMatcherDelegatingAuthorizationManager
@5.5.0
+#check(Ljava/util/function/Supplier;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/authorization/AuthorizationDecision;
+#builder()Lorg/springframework/security/web/access/intercept/RequestMatcherDelegatingAuthorizationManager$Builder;
+#check(Ljava/util/function/Supplier;Ljava/lang/Object;)Lorg/springframework/security/authorization/AuthorizationDecision;
@6.0.0
+#check(Ljava/util/function/Supplier;Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/authorization/AuthorizationDecision;
-#check(Ljava/util/function/Supplier;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/authorization/AuthorizationDecision;

+###org/springframework/security/web/access/intercept/RequestMatcherDelegatingAuthorizationManager$Builder
@5.5.0
+#<init>()V
+#add(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authorization/AuthorizationManager;)Lorg/springframework/security/web/access/intercept/RequestMatcherDelegatingAuthorizationManager$Builder;
+#build()Lorg/springframework/security/web/access/intercept/RequestMatcherDelegatingAuthorizationManager;
@5.7.0
+#mappings(Ljava/util/function/Consumer;)Lorg/springframework/security/web/access/intercept/RequestMatcherDelegatingAuthorizationManager$Builder;

+###org/springframework/security/web/access/intercept/AuthorizationFilter
@5.5.0
+#<init>(Lorg/springframework/security/authorization/AuthorizationManager;)V
@5.5.5
+#getAuthorizationManager()Lorg/springframework/security/authorization/AuthorizationManager;
@5.6.0
-#getAuthorizationManager()Lorg/springframework/security/authorization/AuthorizationManager;
@5.6.2
+#getAuthorizationManager()Lorg/springframework/security/authorization/AuthorizationManager;
@5.6.9
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#isObserveOncePerRequest()Z
+#setObserveOncePerRequest(Z)V
+#setFilterErrorDispatch(Z)V
+#setFilterAsyncDispatch(Z)V
@5.7.0
+#setAuthorizationEventPublisher(Lorg/springframework/security/authorization/AuthorizationEventPublisher;)V
+#setShouldFilterAllDispatcherTypes(Z)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#isObserveOncePerRequest()Z
-#setObserveOncePerRequest(Z)V
-#setFilterErrorDispatch(Z)V
-#setFilterAsyncDispatch(Z)V
@5.7.5
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#isObserveOncePerRequest()Z
+#setObserveOncePerRequest(Z)V
+#setFilterErrorDispatch(Z)V
+#setFilterAsyncDispatch(Z)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@6.0.0
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/security/web/access/AuthorizationManagerWebInvocationPrivilegeEvaluator
@5.5.5
+#<init>(Lorg/springframework/security/authorization/AuthorizationManager;)V
+#isAllowed(Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z
+#isAllowed(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Z
@5.5.6
+#setServletContext(Ljavax/servlet/ServletContext;)V
@5.6.0
-###org/springframework/security/web/access/AuthorizationManagerWebInvocationPrivilegeEvaluator

+###org/springframework/security/web/ObservationFilterChainDecorator
@6.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#decorate(Ljakarta/servlet/FilterChain;)Ljakarta/servlet/FilterChain;
+#decorate(Ljakarta/servlet/FilterChain;Ljava/util/List;)Ljakarta/servlet/FilterChain;

+###org/springframework/security/web/authentication/RequestMatcherDelegatingAuthenticationManagerResolver
@5.7.0
+#resolve(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/authentication/AuthenticationManager;
+#setDefaultAuthenticationManager(Lorg/springframework/security/authentication/AuthenticationManager;)V
+#builder()Lorg/springframework/security/web/authentication/RequestMatcherDelegatingAuthenticationManagerResolver$Builder;
+#resolve(Ljava/lang/Object;)Lorg/springframework/security/authentication/AuthenticationManager;
@6.0.0
+#resolve(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/authentication/AuthenticationManager;
-#resolve(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/authentication/AuthenticationManager;

+###org/springframework/security/web/authentication/RequestMatcherDelegatingAuthenticationManagerResolver$Builder
@5.7.0
+#add(Lorg/springframework/security/web/util/matcher/RequestMatcher;Lorg/springframework/security/authentication/AuthenticationManager;)Lorg/springframework/security/web/authentication/RequestMatcherDelegatingAuthenticationManagerResolver$Builder;
+#build()Lorg/springframework/security/web/authentication/RequestMatcherDelegatingAuthenticationManagerResolver;

+###org/springframework/security/web/authentication/rememberme/TokenBasedRememberMeServices$RememberMeTokenAlgorithm
@5.8.0
+#values()[Lorg/springframework/security/web/authentication/rememberme/TokenBasedRememberMeServices$RememberMeTokenAlgorithm;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/authentication/rememberme/TokenBasedRememberMeServices$RememberMeTokenAlgorithm;
+#getDigestAlgorithm()Ljava/lang/String;

+###org/springframework/security/web/csrf/XorCsrfTokenRequestAttributeHandler
@5.8.0
+#<init>()V
+#setSecureRandom(Ljava/security/SecureRandom;)V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
+#resolveCsrfTokenValue(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
+#resolveCsrfTokenValue(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
-#resolveCsrfTokenValue(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;

+###org/springframework/security/web/csrf/CsrfTokenRequestHandler
@5.8.0
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
+#resolveCsrfTokenValue(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
+#resolveCsrfTokenValue(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
-#resolveCsrfTokenValue(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;

+###org/springframework/security/web/csrf/CsrfTokenRequestResolver
@5.8.0
+#resolveCsrfTokenValue(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;
@6.0.0
+#resolveCsrfTokenValue(Ljakarta/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;
-#resolveCsrfTokenValue(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/security/web/csrf/CsrfToken;)Ljava/lang/String;

+###org/springframework/security/web/csrf/DeferredCsrfToken
@5.8.0
+#get()Lorg/springframework/security/web/csrf/CsrfToken;
+#isGenerated()Z

+###org/springframework/security/web/csrf/CsrfTokenRequestAttributeHandler
@5.8.0
+#<init>()V
+#setCsrfRequestAttributeName(Ljava/lang/String;)V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/util/function/Supplier;)V

+###org/springframework/security/web/FilterChainProxy$FilterChainDecorator
@6.0.0
+#decorate(Ljakarta/servlet/FilterChain;)Ljakarta/servlet/FilterChain;
+#decorate(Ljakarta/servlet/FilterChain;Ljava/util/List;)Ljakarta/servlet/FilterChain;

+###org/springframework/security/web/context/DelegatingSecurityContextRepository
@5.8.0
+#<init>([Lorg/springframework/security/web/context/SecurityContextRepository;)V
+#<init>(Ljava/util/List;)V
+#loadContext(Lorg/springframework/security/web/context/HttpRequestResponseHolder;)Lorg/springframework/security/core/context/SecurityContext;
+#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z
@6.0.0
+#loadDeferredContext(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
+#containsContext(Ljakarta/servlet/http/HttpServletRequest;)Z
-#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
-#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z

+###org/springframework/security/web/context/SecurityContextHolderFilter
@5.7.0
+#<init>(Lorg/springframework/security/web/context/SecurityContextRepository;)V
+#setShouldNotFilterErrorDispatch(Z)V
@5.8.0
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
@5.8.1
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
-#setShouldNotFilterErrorDispatch(Z)V
@6.0.0
+#setShouldNotFilterErrorDispatch(Z)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@6.0.1
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#setShouldNotFilterErrorDispatch(Z)V

+###org/springframework/security/web/context/RequestAttributeSecurityContextRepository
@5.7.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z
+#loadContext(Lorg/springframework/security/web/context/HttpRequestResponseHolder;)Lorg/springframework/security/core/context/SecurityContext;
+#loadContext(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/function/Supplier;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@5.8.0
+#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
+#setSecurityContextHolderStrategy(Lorg/springframework/security/core/context/SecurityContextHolderStrategy;)V
-#loadContext(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/function/Supplier;
@6.0.0
+#containsContext(Ljakarta/servlet/http/HttpServletRequest;)Z
+#loadDeferredContext(Ljakarta/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
+#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#containsContext(Ljavax/servlet/http/HttpServletRequest;)Z
-#loadDeferredContext(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/security/core/context/DeferredSecurityContext;
-#saveContext(Lorg/springframework/security/core/context/SecurityContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/session/ForceEagerSessionCreationFilter
@5.7.0
+#<init>()V

+###org/springframework/security/web/session/DisableEncodeUrlFilter
@5.7.0
+#<init>()V

+###org/springframework/security/web/firewall/CompositeRequestRejectedHandler
@5.7.0
+#<init>([Lorg/springframework/security/web/firewall/RequestRejectedHandler;)V
+#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
@6.0.0
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V
-#handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V

+###org/springframework/security/web/firewall/ObservationMarkingRequestRejectedHandler
@6.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/web/firewall/RequestRejectedException;)V

+###org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher$Builder
@5.8.0
+#<init>(Lorg/springframework/web/servlet/handler/HandlerMappingIntrospector;)V
+#servletPath(Ljava/lang/String;)Lorg/springframework/security/web/servlet/util/matcher/MvcRequestMatcher$Builder;
+#pattern(Ljava/lang/String;)Lorg/springframework/security/web/servlet/util/matcher/MvcRequestMatcher;
+#pattern(Lorg/springframework/http/HttpMethod;Ljava/lang/String;)Lorg/springframework/security/web/servlet/util/matcher/MvcRequestMatcher;

+###org/springframework/security/web/FilterChainProxy$VirtualFilterChainDecorator
@6.0.0
+#<init>()V
+#decorate(Ljakarta/servlet/FilterChain;)Ljakarta/servlet/FilterChain;
+#decorate(Ljakarta/servlet/FilterChain;Ljava/util/List;)Ljakarta/servlet/FilterChain;

+###org/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter
@5.7.0
+#<init>()V
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter
@5.7.0
+#<init>()V
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter
@5.7.0
+#<init>()V
+#setPolicy(Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;)V
+#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@6.0.0
+#writeHeaders(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
-#writeHeaders(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy
@5.7.0
+#values()[Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;
+#getPolicy()Ljava/lang/String;
+#from(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/CrossOriginResourcePolicyHeaderWriter$CrossOriginResourcePolicy;

+###org/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy
@5.7.0
+#values()[Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;
+#getPolicy()Ljava/lang/String;
+#from(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/CrossOriginOpenerPolicyHeaderWriter$CrossOriginOpenerPolicy;

+###org/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy
@5.7.0
+#values()[Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;
+#getPolicy()Ljava/lang/String;
+#from(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/CrossOriginEmbedderPolicyHeaderWriter$CrossOriginEmbedderPolicy;

+###org/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue
@5.8.0
+#values()[Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;
+#from(Ljava/lang/String;)Lorg/springframework/security/web/header/writers/XXssProtectionHeaderWriter$HeaderValue;
+#toString()Ljava/lang/String;

+###org/springframework/security/web/ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation
@6.0.0
+#start()V
+#error(Ljava/lang/Throwable;)V
+#stop()V
+#wrap(Ljakarta/servlet/Filter;)Ljakarta/servlet/Filter;
+#wrap(Ljakarta/servlet/FilterChain;)Ljakarta/servlet/FilterChain;

+###org/springframework/security/web/server/ObservationWebFilterChainDecorator
@6.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#decorate(Lorg/springframework/web/server/WebFilterChain;)Lorg/springframework/web/server/WebFilterChain;
+#decorate(Lorg/springframework/web/server/WebFilterChain;Ljava/util/List;)Lorg/springframework/web/server/WebFilterChain;

+###org/springframework/security/web/server/authentication/ServerWebExchangeDelegatingReactiveAuthenticationManagerResolver
@5.7.0
+#resolve(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#setDefaultAuthenticationManager(Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)V
+#builder()Lorg/springframework/security/web/server/authentication/ServerWebExchangeDelegatingReactiveAuthenticationManagerResolver$Builder;
+#resolve(Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/authentication/ServerWebExchangeDelegatingReactiveAuthenticationManagerResolver$Builder
@5.7.0
+#add(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Lorg/springframework/security/authentication/ReactiveAuthenticationManager;)Lorg/springframework/security/web/server/authentication/ServerWebExchangeDelegatingReactiveAuthenticationManagerResolver$Builder;
+#build()Lorg/springframework/security/web/server/authentication/ServerWebExchangeDelegatingReactiveAuthenticationManagerResolver;

+###org/springframework/security/web/server/csrf/ServerCsrfTokenRequestHandler
@5.8.0
+#handle(Lorg/springframework/web/server/ServerWebExchange;Lreactor/core/publisher/Mono;)V
+#resolveCsrfTokenValue(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/csrf/CsrfToken;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/csrf/XorServerCsrfTokenRequestAttributeHandler
@5.8.0
+#<init>()V
+#setSecureRandom(Ljava/security/SecureRandom;)V
+#handle(Lorg/springframework/web/server/ServerWebExchange;Lreactor/core/publisher/Mono;)V
+#resolveCsrfTokenValue(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/csrf/CsrfToken;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/csrf/ServerCsrfTokenRequestAttributeHandler
@5.8.0
+#<init>()V
+#handle(Lorg/springframework/web/server/ServerWebExchange;Lreactor/core/publisher/Mono;)V
+#resolveCsrfTokenValue(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/csrf/CsrfToken;)Lreactor/core/publisher/Mono;
+#setTokenFromMultipartDataEnabled(Z)V

+###org/springframework/security/web/server/csrf/ServerCsrfTokenRequestResolver
@5.8.0
+#resolveCsrfTokenValue(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/security/web/server/csrf/CsrfToken;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation
@6.0.0
+#start()V
+#error(Ljava/lang/Throwable;)V
+#stop()V
+#wrap(Lorg/springframework/web/server/WebFilterChain;)Lorg/springframework/web/server/WebFilterChain;
+#wrap(Lorg/springframework/web/server/WebFilter;)Lorg/springframework/web/server/WebFilter;
+#before()Lio/micrometer/observation/Observation;
+#after()Lio/micrometer/observation/Observation;

+###org/springframework/security/web/server/WebFilterChainProxy$WebFilterChainDecorator
@6.0.0
+#decorate(Lorg/springframework/web/server/WebFilterChain;)Lorg/springframework/web/server/WebFilterChain;
+#decorate(Lorg/springframework/web/server/WebFilterChain;Ljava/util/List;)Lorg/springframework/web/server/WebFilterChain;

+###org/springframework/security/web/server/WebFilterChainProxy$DefaultWebFilterChainDecorator
@6.0.0
+#<init>()V
+#decorate(Lorg/springframework/web/server/WebFilterChain;)Lorg/springframework/web/server/WebFilterChain;
+#decorate(Lorg/springframework/web/server/WebFilterChain;Ljava/util/List;)Lorg/springframework/web/server/WebFilterChain;

+###org/springframework/security/web/server/authorization/IpAddressReactiveAuthorizationManager
@5.7.0
+#check(Lreactor/core/publisher/Mono;Lorg/springframework/security/web/server/authorization/AuthorizationContext;)Lreactor/core/publisher/Mono;
+#hasIpAddress(Ljava/lang/String;)Lorg/springframework/security/web/server/authorization/IpAddressReactiveAuthorizationManager;
+#check(Lreactor/core/publisher/Mono;Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter
@5.7.0
+#<init>()V
+#setPolicy(Lorg/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter$CrossOriginEmbedderPolicy;)V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter$CrossOriginEmbedderPolicy
@5.7.0
+#values()[Lorg/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter$CrossOriginEmbedderPolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/server/header/CrossOriginEmbedderPolicyServerHttpHeadersWriter$CrossOriginEmbedderPolicy;
+#getPolicy()Ljava/lang/String;

+###org/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter
@5.7.0
+#<init>()V
+#setPolicy(Lorg/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter$CrossOriginResourcePolicy;)V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter$CrossOriginOpenerPolicy
@5.7.0
+#values()[Lorg/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter$CrossOriginOpenerPolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter$CrossOriginOpenerPolicy;
+#getPolicy()Ljava/lang/String;

+###org/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter
@5.7.0
+#<init>()V
+#setPolicy(Lorg/springframework/security/web/server/header/CrossOriginOpenerPolicyServerHttpHeadersWriter$CrossOriginOpenerPolicy;)V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/ServerWebExchangeDelegatingServerHttpHeadersWriter
@5.8.0
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcherEntry;)V
+#<init>(Lorg/springframework/security/web/server/util/matcher/ServerWebExchangeMatcher;Lorg/springframework/security/web/server/header/ServerHttpHeadersWriter;)V
+#writeHttpHeaders(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter$CrossOriginResourcePolicy
@5.7.0
+#values()[Lorg/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter$CrossOriginResourcePolicy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/server/header/CrossOriginResourcePolicyServerHttpHeadersWriter$CrossOriginResourcePolicy;
+#getPolicy()Ljava/lang/String;

+###org/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter$HeaderValue
@5.8.0
+#values()[Lorg/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter$HeaderValue;
+#valueOf(Ljava/lang/String;)Lorg/springframework/security/web/server/header/XXssProtectionServerHttpHeadersWriter$HeaderValue;
+#toString()Ljava/lang/String;

+###org/springframework/security/web/server/ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation
@6.0.0
+#start()V
+#error(Ljava/lang/Throwable;)V
+#stop()V
+#wrap(Lorg/springframework/web/server/WebFilter;)Lorg/springframework/web/server/WebFilter;
+#wrap(Lorg/springframework/web/server/WebFilterChain;)Lorg/springframework/web/server/WebFilterChain;

+###org/springframework/security/web/server/util/matcher/IpAddressServerWebExchangeMatcher
@5.7.0
+#<init>(Ljava/lang/String;)V
+#matches(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;

+###org/springframework/security/web/ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation
@6.0.0
+#start()V
+#error(Ljava/lang/Throwable;)V
+#stop()V
+#wrap(Ljakarta/servlet/Filter;)Ljakarta/servlet/Filter;
+#wrap(Ljakarta/servlet/FilterChain;)Ljakarta/servlet/FilterChain;
+#before()Lio/micrometer/observation/Observation;
+#after()Lio/micrometer/observation/Observation;

+###org/springframework/security/web/access/CompositeAccessDeniedHandler
@6.0.0
+#<init>([Lorg/springframework/security/web/access/AccessDeniedHandler;)V
+#<init>(Ljava/util/Collection;)V
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/web/access/expression/DefaultHttpSecurityExpressionHandler
@5.8.0
+#<init>()V
+#createEvaluationContext(Ljava/util/function/Supplier;Lorg/springframework/security/web/access/intercept/RequestAuthorizationContext;)Lorg/springframework/expression/EvaluationContext;
+#setTrustResolver(Lorg/springframework/security/authentication/AuthenticationTrustResolver;)V
+#setDefaultRolePrefix(Ljava/lang/String;)V
+#createEvaluationContext(Ljava/util/function/Supplier;Ljava/lang/Object;)Lorg/springframework/expression/EvaluationContext;

+###org/springframework/security/web/access/expression/WebExpressionAuthorizationManager
@5.8.0
+#<init>(Ljava/lang/String;)V
+#setExpressionHandler(Lorg/springframework/security/access/expression/SecurityExpressionHandler;)V
+#check(Ljava/util/function/Supplier;Lorg/springframework/security/web/access/intercept/RequestAuthorizationContext;)Lorg/springframework/security/authorization/AuthorizationDecision;
+#toString()Ljava/lang/String;
+#check(Ljava/util/function/Supplier;Ljava/lang/Object;)Lorg/springframework/security/authorization/AuthorizationDecision;

+###org/springframework/security/web/access/ObservationMarkingAccessDeniedHandler
@6.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;)V
+#handle(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Lorg/springframework/security/access/AccessDeniedException;)V

+###org/springframework/security/web/authentication/AbstractProcessingFilter
@3.0.0.RELEASE
@3.1.0.RELEASE
-###org/springframework/security/web/authentication/AbstractProcessingFilter

+###org/springframework/security/web/authentication/AuthenticationProcessingFilter
@3.0.0.RELEASE
+#<init>()V
@3.1.0.RELEASE
-###org/springframework/security/web/authentication/AuthenticationProcessingFilter

+###org/springframework/security/web/authentication/AuthenticationProcessingFilterEntryPoint
@3.0.0.RELEASE
+#<init>()V
@3.1.0.RELEASE
-###org/springframework/security/web/authentication/AuthenticationProcessingFilterEntryPoint

+###org/springframework/security/web/authentication/preauth/j2ee/AbstractPreAuthenticatedAuthenticationDetailsSource
@3.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#buildDetails(Ljava/lang/Object;)Ljava/lang/Object;
+#setMappableRolesRetriever(Lorg/springframework/security/core/authority/mapping/MappableAttributesRetriever;)V
+#setUserRoles2GrantedAuthoritiesMapper(Lorg/springframework/security/core/authority/mapping/Attributes2GrantedAuthoritiesMapper;)V
@3.1.0.RELEASE
-###org/springframework/security/web/authentication/preauth/j2ee/AbstractPreAuthenticatedAuthenticationDetailsSource

+###org/springframework/security/web/authentication/preauth/PreAuthenticatedProcessingFilterEntryPoint
@3.0.0.RELEASE
+#<init>()V
@3.1.0.RELEASE
-###org/springframework/security/web/authentication/preauth/PreAuthenticatedProcessingFilterEntryPoint

+###org/springframework/security/web/context/HttpSessionContextIntegrationFilter
@3.0.0.RELEASE
+#<init>()V
+#isCloneFromHttpSession()Z
+#setCloneFromHttpSession(Z)V
+#isAllowSessionCreation()Z
+#setAllowSessionCreation(Z)V
+#setContextClass(Ljava/lang/Class;)V
+#isForceEagerSessionCreation()Z
+#setForceEagerSessionCreation(Z)V
+#afterPropertiesSet()V
@3.1.0.RELEASE
-###org/springframework/security/web/context/HttpSessionContextIntegrationFilter

+###org/springframework/security/web/util/AntUrlPathMatcher
@3.0.0.RELEASE
+#<init>()V
+#<init>(Z)V
+#compile(Ljava/lang/String;)Ljava/lang/Object;
+#setRequiresLowerCaseUrl(Z)V
+#pathMatchesUrl(Ljava/lang/Object;Ljava/lang/String;)Z
+#getUniversalMatchPattern()Ljava/lang/String;
+#requiresLowerCaseUrl()Z
+#toString()Ljava/lang/String;
@3.1.0.RELEASE
-###org/springframework/security/web/util/AntUrlPathMatcher

+###org/springframework/security/web/util/RegexUrlPathMatcher
@3.0.0.RELEASE
+#<init>()V
+#compile(Ljava/lang/String;)Ljava/lang/Object;
+#setRequiresLowerCaseUrl(Z)V
+#pathMatchesUrl(Ljava/lang/Object;Ljava/lang/String;)Z
+#getUniversalMatchPattern()Ljava/lang/String;
+#requiresLowerCaseUrl()Z
@3.1.0.RELEASE
-###org/springframework/security/web/util/RegexUrlPathMatcher

+###org/springframework/security/web/util/UrlMatcher
@3.0.0.RELEASE
+#compile(Ljava/lang/String;)Ljava/lang/Object;
+#pathMatchesUrl(Ljava/lang/Object;Ljava/lang/String;)Z
+#getUniversalMatchPattern()Ljava/lang/String;
+#requiresLowerCaseUrl()Z
@3.1.0.RELEASE
-###org/springframework/security/web/util/UrlMatcher
