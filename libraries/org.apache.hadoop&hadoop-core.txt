
+###org/apache/hadoop/HadoopVersionAnnotation
@0.20.2
+#version()Ljava/lang/String;
+#user()Ljava/lang/String;
+#date()Ljava/lang/String;
+#url()Ljava/lang/String;
+#revision()Ljava/lang/String;
@1.0.1
+#srcChecksum()Ljava/lang/String;

+###org/apache/hadoop/classification/InterfaceAudience$LimitedPrivate
@0.20.203.0
+#value()[Ljava/lang/String;

+###org/apache/hadoop/classification/InterfaceAudience$Private
@0.20.203.0

+###org/apache/hadoop/classification/InterfaceAudience$Public
@0.20.203.0

+###org/apache/hadoop/classification/InterfaceAudience
@0.20.203.0

+###org/apache/hadoop/classification/InterfaceStability$Evolving
@0.20.203.0

+###org/apache/hadoop/classification/InterfaceStability$Stable
@0.20.203.0

+###org/apache/hadoop/classification/InterfaceStability$Unstable
@0.20.203.0

+###org/apache/hadoop/classification/InterfaceStability
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/conf/Configurable
@0.20.2
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/conf/Configuration$IntegerRanges
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#isIncluded(I)Z
+#toString()Ljava/lang/String;

+###org/apache/hadoop/conf/Configuration
@0.20.2
+#<init>()V
+#<init>(Z)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#addDefaultResource(Ljava/lang/String;)V
+#addResource(Ljava/lang/String;)V
+#addResource(Ljava/net/URL;)V
+#addResource(Lorg/apache/hadoop/fs/Path;)V
+#addResource(Ljava/io/InputStream;)V
+#reloadConfiguration()V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getRaw(Ljava/lang/String;)Ljava/lang/String;
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#setIfUnset(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getInt(Ljava/lang/String;I)I
+#setInt(Ljava/lang/String;I)V
+#getLong(Ljava/lang/String;J)J
+#setLong(Ljava/lang/String;J)V
+#getFloat(Ljava/lang/String;F)F
+#setFloat(Ljava/lang/String;F)V
+#getBoolean(Ljava/lang/String;Z)Z
+#setBoolean(Ljava/lang/String;Z)V
+#setBooleanIfUnset(Ljava/lang/String;Z)V
+#getRange(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
+#getStringCollection(Ljava/lang/String;)Ljava/util/Collection;
+#getStrings(Ljava/lang/String;)[Ljava/lang/String;
+#getStrings(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#setStrings(Ljava/lang/String;[Ljava/lang/String;)V
+#getClassByName(Ljava/lang/String;)Ljava/lang/Class;
+#getClasses(Ljava/lang/String;[Ljava/lang/Class;)[Ljava/lang/Class;
+#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#setClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
+#getLocalPath(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getConfResourceAsInputStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getConfResourceAsReader(Ljava/lang/String;)Ljava/io/Reader;
+#size()I
+#clear()V
+#iterator()Ljava/util/Iterator;
+#writeXml(Ljava/io/OutputStream;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#toString()Ljava/lang/String;
+#setQuietMode(Z)V
+#main([Ljava/lang/String;)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
@0.20.203.0
+#setEnum(Ljava/lang/String;Ljava/lang/Enum;)V
+#getEnum(Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum;
+#dumpConfiguration(Lorg/apache/hadoop/conf/Configuration;Ljava/io/Writer;)V
+#getValByRegex(Ljava/lang/String;)Ljava/util/Map;
@1.0.1
+#getInstances(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
@1.1.2
+#writeXml(Ljava/io/Writer;)V
@1.2.0
+#unset(Ljava/lang/String;)V

+###org/apache/hadoop/conf/Configured
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/filecache/DistributedCache
@0.20.2
+#<init>()V
+#getLocalCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;ZJLorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getLocalCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;ZJLorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/Path;
+#getLocalCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#releaseCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#makeRelative(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getTimestamp(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)J
+#createAllSymlink(Lorg/apache/hadoop/conf/Configuration;Ljava/io/File;Ljava/io/File;)V
+#setCacheArchives([Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#setCacheFiles([Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getCacheArchives(Lorg/apache/hadoop/conf/Configuration;)[Ljava/net/URI;
+#getCacheFiles(Lorg/apache/hadoop/conf/Configuration;)[Ljava/net/URI;
+#getLocalCacheArchives(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/fs/Path;
+#getLocalCacheFiles(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/fs/Path;
+#getArchiveTimestamps(Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/String;
+#getFileTimestamps(Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/String;
+#setArchiveTimestamps(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#setFileTimestamps(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#setLocalArchives(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#setLocalFiles(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#addCacheArchive(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#addCacheFile(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#addFileToClassPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#getFileClassPaths(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/fs/Path;
+#addArchiveToClassPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#getArchiveClassPaths(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/fs/Path;
+#createSymlink(Lorg/apache/hadoop/conf/Configuration;)V
+#getSymlink(Lorg/apache/hadoop/conf/Configuration;)Z
+#checkURIs([Ljava/net/URI;[Ljava/net/URI;)Z
+#purgeCache(Lorg/apache/hadoop/conf/Configuration;)V
@0.20.203.0
+#getFileStatus(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)Lorg/apache/hadoop/fs/FileStatus;
+#getArchiveTimestamps(Lorg/apache/hadoop/conf/Configuration;)[J
+#getFileTimestamps(Lorg/apache/hadoop/conf/Configuration;)[J
+#addLocalArchives(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#addLocalFiles(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
*#addFileToClassPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V[deprecated]
+#addFileToClassPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
*#addArchiveToClassPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V[deprecated]
+#addArchiveToClassPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
-#getLocalCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;ZJLorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getLocalCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;ZJLorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/Path;
-#getLocalCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#releaseCache(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
-#makeRelative(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
-#getArchiveTimestamps(Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/String;
-#getFileTimestamps(Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/String;
-#purgeCache(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/filecache/TaskDistributedCacheManager
@0.20.203.0
+#setupCache(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#getClassPaths()Ljava/util/List;
+#release()V
+#setSizes([J)V
+#makeClassLoader(Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;

+###org/apache/hadoop/filecache/TrackerDistributedCacheManager$BaseDirManager
@0.20.204.0
+#deleteCacheInfoUpdate(Lorg/apache/hadoop/filecache/TrackerDistributedCacheManager$CacheStatus;)V
+#addCacheInfoUpdate(Lorg/apache/hadoop/filecache/TrackerDistributedCacheManager$CacheStatus;)V

+###org/apache/hadoop/filecache/TrackerDistributedCacheManager$CleanupThread
@0.20.204.0
+#<init>(Lorg/apache/hadoop/filecache/TrackerDistributedCacheManager;Lorg/apache/hadoop/conf/Configuration;)V
+#stopRunning()V
+#run()V

+###org/apache/hadoop/filecache/TrackerDistributedCacheManager
@0.20.203.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/TaskController;)V
+#downloadCacheObject(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;Lorg/apache/hadoop/fs/Path;JZLorg/apache/hadoop/fs/permission/FsPermission;)J
+#createAllSymlink(Lorg/apache/hadoop/conf/Configuration;Ljava/io/File;Ljava/io/File;)V
+#purgeCache()V
+#newTaskDistributedCacheManager(Lorg/apache/hadoop/mapreduce/JobID;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/filecache/TaskDistributedCacheManager;
+#setArchiveSizes(Lorg/apache/hadoop/mapreduce/JobID;[J)V
+#determineTimestamps(Lorg/apache/hadoop/conf/Configuration;)V
+#determineCacheVisibilities(Lorg/apache/hadoop/conf/Configuration;)V
+#getFileVisibilities(Lorg/apache/hadoop/conf/Configuration;)[Z
+#getArchiveVisibilities(Lorg/apache/hadoop/conf/Configuration;)[Z
+#getDelegationTokens(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/Credentials;)V
+#validate(Lorg/apache/hadoop/conf/Configuration;)V
@0.20.204.0
+#startCleanupThread()V
+#stopCleanupThread()V
@1.0.1
+#removeTaskDistributedCacheManager(Lorg/apache/hadoop/mapreduce/JobID;)V
@1.2.0
+#determineTimestampsAndCacheVisibilities(Lorg/apache/hadoop/conf/Configuration;)V
-#determineTimestamps(Lorg/apache/hadoop/conf/Configuration;)V
-#determineCacheVisibilities(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/fs/BlockLocation
@0.20.2
+#<init>()V
+#<init>([Ljava/lang/String;[Ljava/lang/String;JJ)V
+#<init>([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;JJ)V
+#getHosts()[Ljava/lang/String;
+#getNames()[Ljava/lang/String;
+#getTopologyPaths()[Ljava/lang/String;
+#getOffset()J
+#getLength()J
+#setOffset(J)V
+#setLength(J)V
+#setHosts([Ljava/lang/String;)V
+#setNames([Ljava/lang/String;)V
+#setTopologyPaths([Ljava/lang/String;)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/fs/BufferedFSInputStream
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FSInputStream;I)V
+#getPos()J
+#skip(J)J
+#seek(J)V
+#seekToNewSource(J)Z
+#read(J[BII)I
+#readFully(J[BII)V
+#readFully(J[B)V
@1.2.0
+#getFileDescriptor()Ljava/io/FileDescriptor;

+###org/apache/hadoop/fs/ChecksumException
@0.20.2
+#<init>(Ljava/lang/String;J)V
+#getPos()J

+###org/apache/hadoop/fs/ChecksumFileSystem
@0.20.2
+#getApproxChkSumLength(J)D
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#setVerifyChecksum(Z)V
+#getRawFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#getChecksumFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#isChecksumFile(Lorg/apache/hadoop/fs/Path;)Z
+#getChecksumFileLength(Lorg/apache/hadoop/fs/Path;J)J
+#getBytesPerSum()I
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#getChecksumLength(JI)J
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#setReplication(Lorg/apache/hadoop/fs/Path;S)Z
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#mkdirs(Lorg/apache/hadoop/fs/Path;)Z
+#copyFromLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
+#startLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#completeLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#reportChecksumFailure(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/fs/FSDataInputStream;J)Z
@1.0.0
+#createNonRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;

+###org/apache/hadoop/fs/CommonConfigurationKeys
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/fs/ContentSummary
@0.20.2
+#<init>()V
+#<init>(JJJ)V
+#<init>(JJJJJJ)V
+#getLength()J
+#getDirectoryCount()J
+#getFileCount()J
+#getQuota()J
+#getSpaceConsumed()J
+#getSpaceQuota()J
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#getHeader(Z)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#toString(Z)Ljava/lang/String;

+###org/apache/hadoop/fs/DF
@0.20.2
+#<init>(Ljava/io/File;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Ljava/io/File;J)V
+#getDirPath()Ljava/lang/String;
+#getFilesystem()Ljava/lang/String;
+#getCapacity()J
+#getUsed()J
+#getAvailable()J
+#getPercentUsed()I
+#getMount()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/fs/DU
@0.20.2
+#<init>(Ljava/io/File;J)V
+#<init>(Ljava/io/File;Lorg/apache/hadoop/conf/Configuration;)V
+#decDfsUsed(J)V
+#incDfsUsed(J)V
+#getUsed()J
+#getDirPath()Ljava/lang/String;
+#start()V
+#shutdown()V
+#toString()Ljava/lang/String;
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/fs/FSDataInputStream
@0.20.2
+#<init>(Ljava/io/InputStream;)V
+#seek(J)V
+#getPos()J
+#read(J[BII)I
+#readFully(J[BII)V
+#readFully(J[B)V
+#seekToNewSource(J)Z
@1.2.0
+#getFileDescriptor()Ljava/io/FileDescriptor;

+###org/apache/hadoop/fs/FSDataOutputStream
@0.20.2
+#<init>(Ljava/io/OutputStream;)V[deprecated]
+#<init>(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem$Statistics;J)V
+#getPos()J
+#close()V
+#getWrappedStream()Ljava/io/OutputStream;
+#sync()V

+###org/apache/hadoop/fs/FSError
@0.20.2

+###org/apache/hadoop/fs/FSInputChecker
@0.20.2
+#read()I
+#read([BII)I
+#checksum2long([B)J
+#getPos()J
+#available()I
+#skip(J)J
+#seek(J)V
+#markSupported()Z
+#mark(I)V
+#reset()V

+###org/apache/hadoop/fs/FSInputStream
@0.20.2
+#<init>()V
+#seek(J)V
+#getPos()J
+#seekToNewSource(J)Z
+#read(J[BII)I
+#readFully(J[BII)V
+#readFully(J[B)V

+###org/apache/hadoop/fs/FSOutputSummer
@0.20.2
+#write(I)V
+#write([BII)V
+#convertToByteStream(Ljava/util/zip/Checksum;I)[B

+###org/apache/hadoop/fs/FileAlreadyExistsException
@1.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/fs/FileChecksum
@0.20.2
+#<init>()V
+#getAlgorithmName()Ljava/lang/String;
+#getLength()I
+#getBytes()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/fs/FileStatus
@0.20.2
+#<init>()V
+#<init>(JZIJJLorg/apache/hadoop/fs/Path;)V
+#<init>(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
+#getLen()J
+#isDir()Z
+#getBlockSize()J
+#getReplication()S
+#getModificationTime()J
+#getAccessTime()J
+#getPermission()Lorg/apache/hadoop/fs/permission/FsPermission;
+#getOwner()Ljava/lang/String;
+#getGroup()Ljava/lang/String;
+#getPath()Lorg/apache/hadoop/fs/Path;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/fs/FileSystem$Statistics
@0.20.2
+#<init>(Ljava/lang/String;)V
+#incrementBytesRead(J)V
+#incrementBytesWritten(J)V
+#getBytesRead()J
+#getBytesWritten()J
+#toString()Ljava/lang/String;
+#reset()V
+#getScheme()Ljava/lang/String;
@0.20.203.0
+#incrementReadOps(I)V
+#incrementLargeReadOps(I)V
+#incrementWriteOps(I)V
+#getReadOps()I
+#getLargeReadOps()I
+#getWriteOps()I

+###org/apache/hadoop/fs/FileSystem
@0.20.2
+#get(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getDefaultUri(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/URI;
+#setDefaultUri(Lorg/apache/hadoop/conf/Configuration;Ljava/net/URI;)V
+#setDefaultUri(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getUri()Ljava/net/URI;
+#getName()Ljava/lang/String;
+#getNamed(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getLocal(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/LocalFileSystem;
+#get(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#closeAll()V
+#makeQualified(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#mkdirs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#getFileBlockLocations(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#open(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataInputStream;
+#create(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;S)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;SLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;ZI)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;ZILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;ZISJ)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#createNewFile(Lorg/apache/hadoop/fs/Path;)Z
+#append(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#append(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#getReplication(Lorg/apache/hadoop/fs/Path;)S[deprecated]
+#setReplication(Lorg/apache/hadoop/fs/Path;S)Z
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#deleteOnExit(Lorg/apache/hadoop/fs/Path;)Z
+#exists(Lorg/apache/hadoop/fs/Path;)Z
+#isDirectory(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#isFile(Lorg/apache/hadoop/fs/Path;)Z
+#getLength(Lorg/apache/hadoop/fs/Path;)J[deprecated]
+#getContentSummary(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#listStatus(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
+#listStatus([Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#listStatus([Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
+#globStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#globStatus(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
+#getHomeDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#mkdirs(Lorg/apache/hadoop/fs/Path;)Z
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#copyFromLocalFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#moveFromLocalFile([Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#moveFromLocalFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyFromLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyFromLocalFile(ZZ[Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyFromLocalFile(ZZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#moveToLocalFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#startLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#completeLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#close()V
+#getUsed()J
+#getBlockSize(Lorg/apache/hadoop/fs/Path;)J[deprecated]
+#getDefaultBlockSize()J
+#getDefaultReplication()S
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
+#setVerifyChecksum(Z)V
+#setPermission(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#setOwner(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setTimes(Lorg/apache/hadoop/fs/Path;JJ)V
+#getStatistics()Ljava/util/Map;
+#getAllStatistics()Ljava/util/List;
+#getStatistics(Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/hadoop/fs/FileSystem$Statistics;
+#clearStatistics()V
+#printStatistics()V
@0.20.203.0
+#get(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/FileSystem;
+#getCanonicalServiceName()Ljava/lang/String;
+#closeAllForUGI(Lorg/apache/hadoop/security/UserGroupInformation;)V
+#getDelegationToken(Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
@0.20.205.0
+#addFileSystemForTesting(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
@1.0.0
+#createNonRecursive(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;[deprecated]
+#createNonRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;[deprecated]
@1.1.0
*#getDefaultBlockSize()J[deprecated]
+#getDefaultBlockSize(Lorg/apache/hadoop/fs/Path;)J
*#getDefaultReplication()S[deprecated]
+#getDefaultReplication(Lorg/apache/hadoop/fs/Path;)S
@1.2.0
+#concat(Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Path;)V
@1.2.1
+#getCacheSize()I

+###org/apache/hadoop/fs/FileUtil
@0.20.2
+#<init>()V
+#stat2Paths([Lorg/apache/hadoop/fs/FileStatus;)[Lorg/apache/hadoop/fs/Path;
+#stat2Paths([Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/Path;
+#fullyDelete(Ljava/io/File;)Z
+#fullyDelete(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V[deprecated]
+#copy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
+#copy(Lorg/apache/hadoop/fs/FileSystem;[Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZLorg/apache/hadoop/conf/Configuration;)Z
+#copy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZLorg/apache/hadoop/conf/Configuration;)Z
+#copyMerge(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Z
+#copy(Ljava/io/File;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/conf/Configuration;)Z
+#copy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/io/File;ZLorg/apache/hadoop/conf/Configuration;)Z
+#makeShellPath(Ljava/lang/String;)Ljava/lang/String;
+#makeShellPath(Ljava/io/File;)Ljava/lang/String;
+#makeShellPath(Ljava/io/File;Z)Ljava/lang/String;
+#getDU(Ljava/io/File;)J
+#unZip(Ljava/io/File;Ljava/io/File;)V
+#unTar(Ljava/io/File;Ljava/io/File;)V
+#symLink(Ljava/lang/String;Ljava/lang/String;)I
+#chmod(Ljava/lang/String;Ljava/lang/String;)I
+#createLocalTempFile(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/File;
+#replaceFile(Ljava/io/File;Ljava/io/File;)V
@0.20.203.0
+#fullyDeleteContents(Ljava/io/File;)Z
+#chmod(Ljava/lang/String;Ljava/lang/String;Z)I
@0.20.204.0
+#setPermission(Ljava/io/File;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#listFiles(Ljava/io/File;)[Ljava/io/File;
+#list(Ljava/io/File;)[Ljava/lang/String;

+###org/apache/hadoop/fs/FilterFileSystem
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getUri()Ljava/net/URI;
+#getName()Ljava/lang/String;
+#makeQualified(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getFileBlockLocations(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#setReplication(Lorg/apache/hadoop/fs/Path;S)Z
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#getHomeDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#copyFromLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#startLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#completeLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#getDefaultBlockSize()J
+#getDefaultReplication()S
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
+#setVerifyChecksum(Z)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#close()V
+#setOwner(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setPermission(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
@0.20.205.0
+#getCanonicalServiceName()Ljava/lang/String;
@1.2.0
+#concat(Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/fs/FsShell
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getCurrentTrashDir()Lorg/apache/hadoop/fs/Path;
+#byteDesc(J)Ljava/lang/String;[deprecated]
+#limitDecimalTo2(D)Ljava/lang/String;[deprecated]
+#run([Ljava/lang/String;)I
+#close()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/fs/FsUrlStreamHandlerFactory
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#createURLStreamHandler(Ljava/lang/String;)Ljava/net/URLStreamHandler;

+###org/apache/hadoop/fs/GlobPattern
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#compiled()Ljava/util/regex/Pattern;
+#compile(Ljava/lang/String;)Ljava/util/regex/Pattern;
+#matches(Ljava/lang/CharSequence;)Z
+#set(Ljava/lang/String;)V
+#hasWildcard()Z

+###org/apache/hadoop/fs/HarFileSystem
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getHarVersion()I
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#getUri()Ljava/net/URI;
+#makeQualified(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getFileBlockLocations(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
+#getHarHash(Lorg/apache/hadoop/fs/Path;)I
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#create(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#close()V
+#setReplication(Lorg/apache/hadoop/fs/Path;S)Z
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#getHomeDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#copyFromLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#startLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#completeLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#setOwner(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setPermission(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
@0.20.205.0
+#getCanonicalServiceName()Ljava/lang/String;
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;

+###org/apache/hadoop/fs/HardLink$LinkStats
@0.20.203.0
+#<init>()V
+#clear()V
+#report()Ljava/lang/String;

+###org/apache/hadoop/fs/HardLink$OSType
@0.20.203.0
+#values()[Lorg/apache/hadoop/fs/HardLink$OSType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/fs/HardLink$OSType;

+###org/apache/hadoop/fs/HardLink
@0.20.203.0
+#<init>()V
+#createHardLink(Ljava/io/File;Ljava/io/File;)V
+#createHardLinkMult(Ljava/io/File;[Ljava/lang/String;Ljava/io/File;)V
+#getLinkCount(Ljava/io/File;)I

+###org/apache/hadoop/fs/InMemoryFileSystem
@0.20.2
+#<init>()V
+#<init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#reserveSpaceWithCheckSum(Lorg/apache/hadoop/fs/Path;J)Z
+#getFiles(Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/Path;
+#getNumFiles(Lorg/apache/hadoop/fs/PathFilter;)I
+#getFSSize()J
+#getPercentUsed()F

+###org/apache/hadoop/fs/LocalDirAllocator
@0.20.2
+#<init>(Ljava/lang/String;)V
+#getLocalPathForWrite(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getLocalPathForWrite(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getLocalPathToRead(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#createTmpFileForWrite(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;)Ljava/io/File;
+#isContextValid(Ljava/lang/String;)Z
+#ifExists(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z
@0.20.203.0
+#getLocalPathForWrite(Ljava/lang/String;JLorg/apache/hadoop/conf/Configuration;Z)Lorg/apache/hadoop/fs/Path;
+#getAllLocalPathsToRead(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Iterable;

+###org/apache/hadoop/fs/LocalFileSystem
@0.20.2
+#<init>()V
+#getRaw()Lorg/apache/hadoop/fs/FileSystem;
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#pathToFile(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
+#copyFromLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#reportChecksumFailure(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/fs/FSDataInputStream;J)Z
@0.20.203.0
+#exists(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/fs/MD5MD5CRC32FileChecksum
@0.20.2
+#<init>()V
+#<init>(IJLorg/apache/hadoop/io/MD5Hash;)V
+#getAlgorithmName()Ljava/lang/String;
+#getLength()I
+#getBytes()[B
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#write(Lorg/znerd/xmlenc/XMLOutputter;Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;)V
+#valueOf(Lorg/xml/sax/Attributes;)Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/fs/Path
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#toUri()Ljava/net/URI;
+#getFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#isAbsolute()Z
+#getName()Ljava/lang/String;
+#getParent()Lorg/apache/hadoop/fs/Path;
+#suffix(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#depth()I
+#makeQualified(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/Path;
@0.20.203.0
+#<init>(Ljava/net/URI;)V
+#makeQualified(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/fs/PathFilter
@0.20.2
+#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/fs/PositionedReadable
@0.20.2
+#read(J[BII)I
+#readFully(J[BII)V
+#readFully(J[B)V

+###org/apache/hadoop/fs/RawLocalFileSystem
@0.20.2
+#<init>()V
+#pathToFile(Lorg/apache/hadoop/fs/Path;)Ljava/io/File;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#mkdirs(Lorg/apache/hadoop/fs/Path;)Z
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#getHomeDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#moveFromLocalFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#startLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#completeLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#close()V
+#toString()Ljava/lang/String;
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#setOwner(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setPermission(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
@1.0.0
+#createNonRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;

+###org/apache/hadoop/fs/Seekable
@0.20.2
+#seek(J)V
+#getPos()J
+#seekToNewSource(J)Z

+###org/apache/hadoop/fs/Syncable
@0.20.2
+#sync()V

+###org/apache/hadoop/fs/Trash
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)V
+#moveToTrash(Lorg/apache/hadoop/fs/Path;)Z
+#checkpoint()V
+#expunge()V
+#getEmptier()Ljava/lang/Runnable;
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/fs/ftp/FTPException
@0.20.2
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/fs/ftp/FTPFileSystem
@0.20.2
+#<init>()V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#getUri()Ljava/net/URI;
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#getHomeDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/fs/ftp/FTPInputStream
@0.20.2
+#<init>(Ljava/io/InputStream;Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
+#getPos()J
+#seek(J)V
+#seekToNewSource(J)Z
+#read()I
+#read([BII)I
+#close()V
+#markSupported()Z
+#mark(I)V
+#reset()V

+###org/apache/hadoop/fs/kfs/KosmosFileSystem
@0.20.2
+#<init>()V
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getName()Ljava/lang/String;[deprecated]
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#isDirectory(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#isFile(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#getLength(Lorg/apache/hadoop/fs/Path;)J[deprecated]
+#getReplication(Lorg/apache/hadoop/fs/Path;)S[deprecated]
+#getDefaultReplication()S
+#setReplication(Lorg/apache/hadoop/fs/Path;S)Z
+#getDefaultBlockSize()J
+#lock(Lorg/apache/hadoop/fs/Path;Z)V[deprecated]
+#release(Lorg/apache/hadoop/fs/Path;)V[deprecated]
+#getFileBlockLocations(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
+#copyFromLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#copyToLocalFile(ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#startLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#completeLocalOutput(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/fs/permission/AccessControlException
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/fs/permission/ChmodParser
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#applyNewPermission(Lorg/apache/hadoop/fs/FileStatus;)S

+###org/apache/hadoop/fs/permission/FsAction
@0.20.2
+#values()[Lorg/apache/hadoop/fs/permission/FsAction;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsAction;
+#implies(Lorg/apache/hadoop/fs/permission/FsAction;)Z
+#and(Lorg/apache/hadoop/fs/permission/FsAction;)Lorg/apache/hadoop/fs/permission/FsAction;
+#or(Lorg/apache/hadoop/fs/permission/FsAction;)Lorg/apache/hadoop/fs/permission/FsAction;
+#not()Lorg/apache/hadoop/fs/permission/FsAction;

+###org/apache/hadoop/fs/permission/FsPermission
@0.20.2
+#createImmutable(S)Lorg/apache/hadoop/fs/permission/FsPermission;
+#<init>(Lorg/apache/hadoop/fs/permission/FsAction;Lorg/apache/hadoop/fs/permission/FsAction;Lorg/apache/hadoop/fs/permission/FsAction;)V
+#<init>(S)V
+#<init>(Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#getUserAction()Lorg/apache/hadoop/fs/permission/FsAction;
+#getGroupAction()Lorg/apache/hadoop/fs/permission/FsAction;
+#getOtherAction()Lorg/apache/hadoop/fs/permission/FsAction;
+#fromShort(S)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#read(Ljava/io/DataInput;)Lorg/apache/hadoop/fs/permission/FsPermission;
+#toShort()S
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#applyUMask(Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/FsPermission;
+#getUMask(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/permission/FsPermission;
+#setUMask(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#getDefault()Lorg/apache/hadoop/fs/permission/FsPermission;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
@0.20.203.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/fs/permission/PermissionStatus
@0.20.2
+#createImmutable(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/PermissionStatus;
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#getUserName()Ljava/lang/String;
+#getGroupName()Ljava/lang/String;
+#getPermission()Lorg/apache/hadoop/fs/permission/FsPermission;
+#applyUMask(Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/permission/PermissionStatus;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#read(Ljava/io/DataInput;)Lorg/apache/hadoop/fs/permission/PermissionStatus;
+#write(Ljava/io/DataOutput;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/fs/s3/Block
@0.20.2
+#<init>(JJ)V
+#getId()J
+#getLength()J
+#toString()Ljava/lang/String;

+###org/apache/hadoop/fs/s3/FileSystemStore
@0.20.2
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getVersion()Ljava/lang/String;
+#storeINode(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V
+#storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V
+#inodeExists(Lorg/apache/hadoop/fs/Path;)Z
+#blockExists(J)Z
+#retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;
+#retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;
+#deleteINode(Lorg/apache/hadoop/fs/Path;)V
+#deleteBlock(Lorg/apache/hadoop/fs/s3/Block;)V
+#listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
+#listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
+#purge()V
+#dump()V

+###org/apache/hadoop/fs/s3/INode
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/s3/INode$FileType;[Lorg/apache/hadoop/fs/s3/Block;)V
+#getBlocks()[Lorg/apache/hadoop/fs/s3/Block;
+#getFileType()Lorg/apache/hadoop/fs/s3/INode$FileType;
+#isDirectory()Z
+#isFile()Z
+#getSerializedLength()J
+#serialize()Ljava/io/InputStream;
+#deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;

+###org/apache/hadoop/fs/s3/MigrationTool
@0.20.2
+#<init>()V
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
+#initialize(Ljava/net/URI;)V

+###org/apache/hadoop/fs/s3/S3Credentials
@0.20.2
+#<init>()V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getAccessKey()Ljava/lang/String;
+#getSecretAccessKey()Ljava/lang/String;

+###org/apache/hadoop/fs/s3/S3Exception
@0.20.2
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/fs/s3/S3FileSystem
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/fs/s3/FileSystemStore;)V
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getName()Ljava/lang/String;
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#isFile(Lorg/apache/hadoop/fs/Path;)Z
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;

+###org/apache/hadoop/fs/s3/S3FileSystemException
@0.20.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/fs/s3/VersionMismatchException
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/fs/s3native/NativeS3FileSystem
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/fs/s3native/NativeFileSystemStore;)V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#getUri()Ljava/net/URI;
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/fs/shell/Command
@0.20.2
+#getCommandName()Ljava/lang/String;
+#runAll()I

+###org/apache/hadoop/fs/shell/CommandFormat
@0.20.2
+#<init>(Ljava/lang/String;II[Ljava/lang/String;)V
+#parse([Ljava/lang/String;I)Ljava/util/List;
+#getOpt(Ljava/lang/String;)Z

+###org/apache/hadoop/fs/shell/Count
@0.20.2
+#<init>([Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;)V
+#matches(Ljava/lang/String;)Z
+#getCommandName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/BlockReader
@1.1.0
+#read([BII)I
+#readAll([BII)I
+#skip(J)J

+###org/apache/hadoop/hdfs/ByteRangeInputStream$URLOpener
@1.0.0
+#<init>(Ljava/net/URL;)V
+#setURL(Ljava/net/URL;)V
+#getURL()Ljava/net/URL;

+###org/apache/hadoop/hdfs/ByteRangeInputStream
@0.20.205.0
+#<init>(Ljava/net/URL;)V
+#read()I
+#seek(J)V
+#getPos()J
+#seekToNewSource(J)Z
@1.0.0
+#<init>(Lorg/apache/hadoop/hdfs/ByteRangeInputStream$URLOpener;Lorg/apache/hadoop/hdfs/ByteRangeInputStream$URLOpener;)V
-#<init>(Ljava/net/URL;)V
@1.2.0
+#read([BII)I
+#close()V

+###org/apache/hadoop/hdfs/ChecksumDistributedFileSystem
@0.20.2
+#<init>()V
+#<init>(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)V
+#getRawCapacity()J
+#getRawUsed()J
+#getDataNodeStats()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#setSafeMode(Lorg/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction;)Z
+#refreshNodes()V
+#finalizeUpgrade()V
+#distributedUpgradeProgress(Lorg/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction;)Lorg/apache/hadoop/hdfs/server/common/UpgradeStatusReport;
+#metaSave(Ljava/lang/String;)V
+#reportChecksumFailure(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/fs/FSDataInputStream;J)Z
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;

+###org/apache/hadoop/hdfs/DFSClient$DFSDataInputStream
@0.20.203.0
+#getCurrentDatanode()Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#getCurrentBlock()Lorg/apache/hadoop/hdfs/protocol/Block;
+#getVisibleLength()J
@0.20.205.0
+#<init>(Lorg/apache/hadoop/hdfs/DFSClient$DFSInputStream;)V

+###org/apache/hadoop/hdfs/DFSClient$DFSInputStream
@0.20.203.0
+#getFileLength()J
+#getCurrentDatanode()Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#getCurrentBlock()Lorg/apache/hadoop/hdfs/protocol/Block;
+#close()V
+#read()I
+#read([BII)I
+#read(J[BII)I
+#skip(J)J
+#seek(J)V
+#seekToNewSource(J)Z
+#getPos()J
+#available()I
+#markSupported()Z
+#mark(I)V
+#reset()V

+###org/apache/hadoop/hdfs/DFSClient$RemoteBlockReader
@1.1.0
+#read([BII)I
+#skip(J)J
+#read()I
+#seekToNewSource(J)Z
+#seek(J)V
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JLorg/apache/hadoop/security/token/Token;JJJI)Lorg/apache/hadoop/hdfs/BlockReader;
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JLorg/apache/hadoop/security/token/Token;JJJIZ)Lorg/apache/hadoop/hdfs/BlockReader;
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JLorg/apache/hadoop/security/token/Token;JJJIZLjava/lang/String;)Lorg/apache/hadoop/hdfs/BlockReader;
+#close()V
+#readAll([BII)I

+###org/apache/hadoop/hdfs/DFSClient$Renewer
@0.20.205.0
+#<init>()V
+#handleKind(Lorg/apache/hadoop/io/Text;)Z
+#renew(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
+#cancel(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V
+#isManaged(Lorg/apache/hadoop/security/token/Token;)Z

+###org/apache/hadoop/hdfs/DFSClient
@0.20.2
+#createNamenode(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
+#createNamenode(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem$Statistics;)V
+#close()V
+#getDefaultBlockSize()J
+#getBlockSize(Ljava/lang/String;)J
+#reportBadBlocks([Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;)V
+#getDefaultReplication()S
+#getHints(Ljava/lang/String;JJ)[[Ljava/lang/String;[deprecated]
+#getBlockLocations(Ljava/lang/String;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
+#open(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/DFSClient$DFSInputStream;
+#create(Ljava/lang/String;Z)Ljava/io/OutputStream;
+#create(Ljava/lang/String;ZLorg/apache/hadoop/util/Progressable;)Ljava/io/OutputStream;
+#create(Ljava/lang/String;ZSJ)Ljava/io/OutputStream;
+#create(Ljava/lang/String;ZSJLorg/apache/hadoop/util/Progressable;)Ljava/io/OutputStream;
+#create(Ljava/lang/String;ZSJLorg/apache/hadoop/util/Progressable;I)Ljava/io/OutputStream;
+#create(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;ZSJLorg/apache/hadoop/util/Progressable;I)Ljava/io/OutputStream;
+#setReplication(Ljava/lang/String;S)Z
+#rename(Ljava/lang/String;Ljava/lang/String;)Z
+#delete(Ljava/lang/String;)Z[deprecated]
+#delete(Ljava/lang/String;Z)Z
+#exists(Ljava/lang/String;)Z
+#isDirectory(Ljava/lang/String;)Z[deprecated]
+#listPaths(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
+#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/fs/FileStatus;
+#getFileChecksum(Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/ClientProtocol;Ljavax/net/SocketFactory;I)Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;
+#setPermission(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#setOwner(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getDiskStatus()Lorg/apache/hadoop/hdfs/DistributedFileSystem$DiskStatus;
+#totalRawCapacity()J
+#totalRawUsed()J
+#getMissingBlocksCount()J
+#getUnderReplicatedBlocksCount()J
+#getCorruptBlocksCount()J
+#datanodeReport(Lorg/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType;)[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#setSafeMode(Lorg/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction;)Z
+#refreshNodes()V
+#metaSave(Ljava/lang/String;)V
+#finalizeUpgrade()V
+#distributedUpgradeProgress(Lorg/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction;)Lorg/apache/hadoop/hdfs/server/common/UpgradeStatusReport;
+#mkdirs(Ljava/lang/String;)Z
+#mkdirs(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#setTimes(Ljava/lang/String;JJ)V
+#toString()Ljava/lang/String;
@0.20.203.0
+#stringifyToken(Lorg/apache/hadoop/security/token/Token;)Ljava/lang/String;
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
+#listPaths(Ljava/lang/String;[B)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
+#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
-#listPaths(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
-#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/fs/FileStatus;
@0.20.205.0
+#open(Ljava/lang/String;IZLorg/apache/hadoop/fs/FileSystem$Statistics;)Lorg/apache/hadoop/hdfs/DFSClient$DFSInputStream;
+#append(Ljava/lang/String;ILorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/fs/FileSystem$Statistics;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#getFileChecksum(Ljava/lang/String;)Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;
+#setBalancerBandwidth(J)V
@1.0.0
+#create(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;ZZSJLorg/apache/hadoop/util/Progressable;I)Ljava/io/OutputStream;
@1.1.1
+#getLeaseRenewer()Lorg/apache/hadoop/hdfs/LeaseRenewer;
@1.2.0
+#isFileClosed(Ljava/lang/String;)Z
+#concat(Ljava/lang/String;[Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/DFSConfigKeys
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/hdfs/DFSUtil$StaleComparator
@1.1.0
+#<init>(J)V
+#compare(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/hdfs/DFSUtil
@0.20.2
+#<init>()V
+#isValidName(Ljava/lang/String;)Z
@0.20.203.0
+#bytes2String([B)Ljava/lang/String;
+#string2Bytes(Ljava/lang/String;)[B
@0.20.205.0
+#locatedBlocks2Locations(Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;)[Lorg/apache/hadoop/fs/BlockLocation;
+#createUri(Ljava/lang/String;Ljava/net/InetSocketAddress;)Ljava/net/URI;
@1.1.0
+#getInvalidateWorkPctPerIteration(Lorg/apache/hadoop/conf/Configuration;)F
+#getReplWorkMultiplier(Lorg/apache/hadoop/conf/Configuration;)I

+###org/apache/hadoop/hdfs/DistributedFileSystem$DiskStatus
@0.20.2
+#<init>(JJJ)V
+#getCapacity()J
+#getDfsUsed()J
+#getRemaining()J

+###org/apache/hadoop/hdfs/DistributedFileSystem
@0.20.2
+#<init>()V
+#<init>(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)V
+#getName()Ljava/lang/String;
+#getUri()Ljava/net/URI;
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#makeQualified(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#getDefaultBlockSize()J
+#getDefaultReplication()S
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#getHomeDirectory()Lorg/apache/hadoop/fs/Path;
+#getFileBlockLocations(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
+#setVerifyChecksum(Z)V
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#setReplication(Lorg/apache/hadoop/fs/Path;S)Z
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#getContentSummary(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
+#setQuota(Lorg/apache/hadoop/fs/Path;JJ)V
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#close()V
+#toString()Ljava/lang/String;
+#getClient()Lorg/apache/hadoop/hdfs/DFSClient;
+#getDiskStatus()Lorg/apache/hadoop/hdfs/DistributedFileSystem$DiskStatus;
+#getRawCapacity()J
+#getRawUsed()J
+#getMissingBlocksCount()J
+#getUnderReplicatedBlocksCount()J
+#getCorruptBlocksCount()J
+#getDataNodeStats()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#setSafeMode(Lorg/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction;)Z
+#saveNamespace()V
+#refreshNodes()V
+#finalizeUpgrade()V
+#distributedUpgradeProgress(Lorg/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction;)Lorg/apache/hadoop/hdfs/server/common/UpgradeStatusReport;
+#metaSave(Ljava/lang/String;)V
+#reportChecksumFailure(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/fs/FSDataInputStream;J)Z
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;
+#setPermission(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#setOwner(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setTimes(Lorg/apache/hadoop/fs/Path;JJ)V
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
@0.20.203.0
+#getDelegationToken(Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;[deprecated]
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
@0.20.205.0
+#recoverLease(Lorg/apache/hadoop/fs/Path;)Z
+#setBalancerBandwidth(J)V
@1.0.0
+#createNonRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
-#makeQualified(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
@1.1.0
+#isHealthy(Ljava/net/URI;)Z
@1.2.0
+#isFileClosed(Lorg/apache/hadoop/fs/Path;)Z
+#concat(Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/hdfs/HDFSPolicyProvider
@0.20.2
+#<init>()V
+#getServices()[Lorg/apache/hadoop/security/authorize/Service;

+###org/apache/hadoop/hdfs/HftpFileSystem$TokenManager
@0.20.205.0
+#<init>()V
+#handleKind(Lorg/apache/hadoop/io/Text;)Z
+#isManaged(Lorg/apache/hadoop/security/token/Token;)Z
+#renew(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
+#cancel(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hdfs/HftpFileSystem
@0.20.2
+#<init>()V
+#getDateFormat()Ljava/text/SimpleDateFormat;
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getUri()Ljava/net/URI;
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
@0.20.203.0
+#getCanonicalServiceName()Ljava/lang/String;
+#getDelegationToken(Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
+#getContentSummary(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
@0.20.205.0
+#getRenewToken()Lorg/apache/hadoop/security/token/Token;
+#setDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
@1.1.0
+#close()V

+###org/apache/hadoop/hdfs/HsftpFileSystem$DummyHostnameVerifier
@0.20.2
+#verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z

+###org/apache/hadoop/hdfs/HsftpFileSystem$TokenManager
@1.1.0
+#<init>()V
+#handleKind(Lorg/apache/hadoop/io/Text;)Z

+###org/apache/hadoop/hdfs/HsftpFileSystem
@0.20.2
+#<init>()V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getUri()Ljava/net/URI;
@0.20.205.0
-#getUri()Ljava/net/URI;

+###org/apache/hadoop/hdfs/protocol/AlreadyBeingCreatedException
@0.20.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/protocol/Block
@0.20.2
+#isBlockFilename(Ljava/io/File;)Z
+#<init>()V
+#<init>(JJJ)V
+#<init>(J)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#<init>(Ljava/io/File;JJ)V
+#set(JJJ)V
+#getBlockId()J
+#setBlockId(J)V
+#getBlockName()Ljava/lang/String;
+#getNumBytes()J
+#setNumBytes(J)V
+#getGenerationStamp()J
+#setGenerationStamp(J)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Lorg/apache/hadoop/hdfs/protocol/Block;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
@1.1.0
+#getWithWildcardGS()Lorg/apache/hadoop/hdfs/protocol/Block;

+###org/apache/hadoop/hdfs/protocol/BlockListAsLongs
@0.20.2
+#convertToArrayLongs([Lorg/apache/hadoop/hdfs/protocol/Block;)[J
+#<init>([J)V
+#getNumberOfBlocks()I
+#getBlockId(I)J
+#getBlockLen(I)J
+#getBlockGenStamp(I)J

+###org/apache/hadoop/hdfs/protocol/BlockLocalPathInfo
@1.0.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;Ljava/lang/String;Ljava/lang/String;)V
+#getBlockPath()Ljava/lang/String;
+#getMetaPath()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#getNumBytes()J

+###org/apache/hadoop/hdfs/protocol/ClientDatanodeProtocol
@0.20.2
+#recoverBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Z[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
@0.20.205.0
+#getBlockInfo(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/protocol/Block;
@1.0.0
+#getBlockLocalPathInfo(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/security/token/Token;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;

+###org/apache/hadoop/hdfs/protocol/ClientProtocol
@0.20.2
+#getBlockLocations(Ljava/lang/String;JJ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
+#create(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;ZSJ)V
+#append(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#setReplication(Ljava/lang/String;S)Z
+#setPermission(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#setOwner(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#abandonBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Ljava/lang/String;Ljava/lang/String;)V
+#addBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#complete(Ljava/lang/String;Ljava/lang/String;)Z
+#reportBadBlocks([Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;)V
+#rename(Ljava/lang/String;Ljava/lang/String;)Z
+#delete(Ljava/lang/String;)Z
+#delete(Ljava/lang/String;Z)Z
+#mkdirs(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#getListing(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
+#renewLease(Ljava/lang/String;)V
+#getStats()[J
+#getDatanodeReport(Lorg/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType;)[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#getPreferredBlockSize(Ljava/lang/String;)J
+#setSafeMode(Lorg/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction;)Z
+#saveNamespace()V
+#refreshNodes()V
+#finalizeUpgrade()V
+#distributedUpgradeProgress(Lorg/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction;)Lorg/apache/hadoop/hdfs/server/common/UpgradeStatusReport;
+#metaSave(Ljava/lang/String;)V
+#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/fs/FileStatus;
+#getContentSummary(Ljava/lang/String;)Lorg/apache/hadoop/fs/ContentSummary;
+#setQuota(Ljava/lang/String;JJ)V
+#fsync(Ljava/lang/String;Ljava/lang/String;)V
+#setTimes(Ljava/lang/String;JJ)V
@0.20.203.0
+#getListing(Ljava/lang/String;[B)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
+#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
-#getListing(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
-#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/fs/FileStatus;
@0.20.205.0
+#recoverLease(Ljava/lang/String;Ljava/lang/String;)Z
+#addBlock(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#setBalancerBandwidth(J)V
@1.0.0
+#create(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;ZZSJ)V
@1.2.0
+#isFileClosed(Ljava/lang/String;)Z
+#concat(Ljava/lang/String;[Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/protocol/DSQuotaExceededException
@0.20.2
+#<init>(Ljava/lang/String;)V
+#<init>(JJ)V
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/hdfs/protocol/DataTransferProtocol$PipelineAck
@0.20.2
+#<init>()V
+#<init>(J[S)V
+#getSeqno()J
+#getReply(I)S
+#isSuccess()Z
+#readFields(Ljava/io/DataInput;I)V
+#write(Ljava/io/DataOutput;)V
+#toString()Ljava/lang/String;
@0.20.203.0
+#getNumOfReplies()S
+#readFields(Ljava/io/DataInput;)V
-#readFields(Ljava/io/DataInput;I)V

+###org/apache/hadoop/hdfs/protocol/DataTransferProtocol
@0.20.2

+###org/apache/hadoop/hdfs/protocol/DatanodeID
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;II)V
+#getName()Ljava/lang/String;
+#getStorageID()Ljava/lang/String;
+#getInfoPort()I
+#getIpcPort()I
+#setStorageID(Ljava/lang/String;)V
+#getHost()Ljava/lang/String;
+#getPort()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#updateRegInfo(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#compareTo(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hdfs/protocol/DatanodeInfo$AdminStates
@0.20.2
+#values()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo$AdminStates;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo$AdminStates;

+###org/apache/hadoop/hdfs/protocol/DatanodeInfo
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#getCapacity()J
+#getDfsUsed()J
+#getNonDfsUsed()J
+#getDfsUsedPercent()F
+#getRemaining()J
+#getRemainingPercent()F
+#getLastUpdate()J
+#getXceiverCount()I
+#setCapacity(J)V
+#setRemaining(J)V
+#setLastUpdate(J)V
+#setXceiverCount(I)V
+#getNetworkLocation()Ljava/lang/String;
+#setNetworkLocation(Ljava/lang/String;)V
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getDatanodeReport()Ljava/lang/String;
+#dumpDatanode()Ljava/lang/String;
+#startDecommission()V
+#stopDecommission()V
+#isDecommissionInProgress()Z
+#isDecommissioned()Z
+#setDecommissioned()V
+#getParent()Lorg/apache/hadoop/net/Node;
+#setParent(Lorg/apache/hadoop/net/Node;)V
+#getLevel()I
+#setLevel(I)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.20.205.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IIJJJJILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo$AdminStates;)V
+#getAdminState()Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo$AdminStates;
@1.1.0
+#getName(Z)Ljava/lang/String;
+#getNameWithIpcPort(Z)Ljava/lang/String;
+#isStale(J)Z

+###org/apache/hadoop/hdfs/protocol/DirectoryListing
@0.20.203.0
+#<init>()V
+#<init>([Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;I)V
+#getPartialListing()[Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
+#getRemainingEntries()I
+#hasMore()Z
+#getLastName()[B
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType
@0.20.2
+#values()[Lorg/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType;

+###org/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction
@0.20.2
+#values()[Lorg/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction;

+###org/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction
@0.20.2
+#values()[Lorg/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction;

+###org/apache/hadoop/hdfs/protocol/FSConstants
@0.20.2

+###org/apache/hadoop/hdfs/protocol/HdfsFileStatus
@0.20.203.0
+#<init>()V
+#<init>(JZIJJJLorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;Ljava/lang/String;[B)V
+#getLen()J
+#isDir()Z
+#getBlockSize()J
+#getReplication()S
+#getModificationTime()J
+#getAccessTime()J
+#getPermission()Lorg/apache/hadoop/fs/permission/FsPermission;
+#getOwner()Ljava/lang/String;
+#getGroup()Ljava/lang/String;
+#isEmptyLocalName()Z
+#getLocalName()Ljava/lang/String;
+#getLocalNameInBytes()[B
+#getFullName(Ljava/lang/String;)Ljava/lang/String;
+#getFullPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/protocol/LocatedBlock
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;J)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;JZ)V
+#getBlock()Lorg/apache/hadoop/hdfs/protocol/Block;
+#getLocations()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#getStartOffset()J
+#getBlockSize()J
+#isCorrupt()Z
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.20.203.0
+#getBlockToken()Lorg/apache/hadoop/security/token/Token;
+#setBlockToken(Lorg/apache/hadoop/security/token/Token;)V

+###org/apache/hadoop/hdfs/protocol/LocatedBlocks
@0.20.2
+#<init>(JLjava/util/List;Z)V
+#getLocatedBlocks()Ljava/util/List;
+#get(I)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#locatedBlockCount()I
+#getFileLength()J
+#isUnderConstruction()Z
+#findBlock(J)I
+#insertRange(ILjava/util/List;)V
+#getInsertIndex(I)I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.20.205.0
+#setFileLength(J)V

+###org/apache/hadoop/hdfs/protocol/NSQuotaExceededException
@0.20.2
+#<init>(Ljava/lang/String;)V
+#<init>(JJ)V
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/hdfs/protocol/QuotaExceededException
@0.20.2
+#setPathName(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/hdfs/protocol/UnregisteredDatanodeException
@0.20.2
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V

+###org/apache/hadoop/hdfs/security/token/block/BlockKey
@0.20.203.0
+#<init>()V
+#<init>(IJLjavax/crypto/SecretKey;)V

+###org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier$Renewer
@0.20.205.0
+#<init>()V

+###org/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier
@0.20.203.0
+#<init>()V
+#<init>(Ljava/lang/String;[JLjava/util/EnumSet;)V
+#getKind()Lorg/apache/hadoop/io/Text;
+#getUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#getExpiryDate()J
+#setExpiryDate(J)V
+#getKeyId()I
+#setKeyId(I)V
+#getUserId()Ljava/lang/String;
+#getBlockIds()[J
+#isBlockIncluded(J)Z
+#getAccessModes()Ljava/util/EnumSet;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#getBytes()[B

+###org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager$AccessMode
@0.20.203.0
+#values()[Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager$AccessMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager$AccessMode;

+###org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager
@0.20.203.0
+#<init>(ZJJ)V
+#exportKeys()Lorg/apache/hadoop/hdfs/security/token/block/ExportedBlockKeys;
+#setKeys(Lorg/apache/hadoop/hdfs/security/token/block/ExportedBlockKeys;)V
+#updateKeys()V
+#generateToken(Lorg/apache/hadoop/hdfs/protocol/Block;Ljava/util/EnumSet;)Lorg/apache/hadoop/security/token/Token;
+#generateToken(Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/Block;Ljava/util/EnumSet;)Lorg/apache/hadoop/security/token/Token;
+#generateToken([JLjava/util/EnumSet;)Lorg/apache/hadoop/security/token/Token;
+#generateToken(Ljava/lang/String;[JLjava/util/EnumSet;)Lorg/apache/hadoop/security/token/Token;
+#checkAccess(Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier;Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager$AccessMode;)V
+#checkAccess(Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager$AccessMode;)V
+#setTokenLifetime(J)V
+#createIdentifier()Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier;
+#retrievePassword(Lorg/apache/hadoop/hdfs/security/token/block/BlockTokenIdentifier;)[B
+#createIdentifier()Lorg/apache/hadoop/security/token/TokenIdentifier;
+#retrievePassword(Lorg/apache/hadoop/security/token/TokenIdentifier;)[B

+###org/apache/hadoop/hdfs/security/token/block/BlockTokenSelector
@0.20.203.0
+#<init>()V
+#selectToken(Lorg/apache/hadoop/io/Text;Ljava/util/Collection;)Lorg/apache/hadoop/security/token/Token;

+###org/apache/hadoop/hdfs/security/token/block/ExportedBlockKeys
@0.20.203.0
+#<init>()V
+#isBlockTokenEnabled()Z
+#getKeyUpdateInterval()J
+#getTokenLifetime()J
+#getCurrentKey()Lorg/apache/hadoop/hdfs/security/token/block/BlockKey;
+#getAllKeys()[Lorg/apache/hadoop/hdfs/security/token/block/BlockKey;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/security/token/block/InvalidBlockTokenException
@0.20.203.0
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenIdentifier
@0.20.203.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
+#getKind()Lorg/apache/hadoop/io/Text;

+###org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenRenewer$Renewable
@0.20.205.0
+#getRenewToken()Lorg/apache/hadoop/security/token/Token;
+#setDelegationToken(Lorg/apache/hadoop/security/token/Token;)V

+###org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenRenewer
@0.20.205.0
+#<init>(Ljava/lang/Class;)V
+#addRenewAction(Lorg/apache/hadoop/fs/FileSystem;)V
+#run()V
@1.0.0
+#start()V

+###org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager
@0.20.203.0
+#<init>(JJJJLorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;)V
+#createIdentifier()Lorg/apache/hadoop/hdfs/security/token/delegation/DelegationTokenIdentifier;
+#getTokenExpiryTime(Lorg/apache/hadoop/hdfs/security/token/delegation/DelegationTokenIdentifier;)J
+#loadSecretManagerState(Ljava/io/DataInputStream;)V
+#saveSecretManagerState(Ljava/io/DataOutputStream;)V
+#addPersistedDelegationToken(Lorg/apache/hadoop/hdfs/security/token/delegation/DelegationTokenIdentifier;J)V
+#updatePersistedMasterKey(Lorg/apache/hadoop/security/token/delegation/DelegationKey;)V
+#updatePersistedTokenRenewal(Lorg/apache/hadoop/hdfs/security/token/delegation/DelegationTokenIdentifier;J)V
+#updatePersistedTokenCancellation(Lorg/apache/hadoop/hdfs/security/token/delegation/DelegationTokenIdentifier;)V
+#getNumberOfKeys()I
+#createIdentifier()Lorg/apache/hadoop/security/token/TokenIdentifier;
@0.20.205.0
+#createCredentials(Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Lorg/apache/hadoop/security/UserGroupInformation;Ljava/lang/String;)Lorg/apache/hadoop/security/Credentials;

+###org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSelector
@0.20.203.0
+#<init>()V
@0.20.205.0
+#selectHdfsDelegationToken(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/token/Token;

+###org/apache/hadoop/hdfs/server/balancer/Balancer
@0.20.2
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hdfs/server/common/GenerationStamp
@0.20.2
+#<init>()V
+#getStamp()J
+#setStamp(J)V
+#nextStamp()J
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compare(JJ)I
+#compareTo(Lorg/apache/hadoop/hdfs/server/common/GenerationStamp;)I
+#equals(Ljava/lang/Object;)Z
+#equalsWithWildcard(JJ)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType
@0.20.2
+#values()[Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType;

+###org/apache/hadoop/hdfs/server/common/HdfsConstants$StartupOption
@0.20.2
+#values()[Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$StartupOption;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$StartupOption;
+#getName()Ljava/lang/String;
@1.1.0
+#createRecoveryContext()Lorg/apache/hadoop/hdfs/server/namenode/MetaRecoveryContext;
+#setForce(I)V
+#getForce()I
+#setConfirmationNeeded(Z)V
+#getConfirmationNeeded()Z
+#setInteractive(Z)V
+#getInteractive()Z

+###org/apache/hadoop/hdfs/server/common/HdfsConstants
@0.20.2

+###org/apache/hadoop/hdfs/server/common/InconsistentFSStateException
@0.20.2
+#<init>(Ljava/io/File;Ljava/lang/String;)V
+#<init>(Ljava/io/File;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/hdfs/server/common/IncorrectVersionException
@0.20.2
+#<init>(ILjava/lang/String;)V
+#<init>(ILjava/lang/String;I)V

+###org/apache/hadoop/hdfs/server/common/Storage$StorageDirType
@0.20.2
+#getStorageDirType()Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirType;
+#isOfType(Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirType;)Z

+###org/apache/hadoop/hdfs/server/common/Storage$StorageDirectory
@0.20.2
+#<init>(Lorg/apache/hadoop/hdfs/server/common/Storage;Ljava/io/File;)V
+#<init>(Lorg/apache/hadoop/hdfs/server/common/Storage;Ljava/io/File;Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirType;)V
+#getRoot()Ljava/io/File;
+#getStorageDirType()Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirType;
+#read()V
+#read(Ljava/io/File;)V
+#write()V
+#write(Ljava/io/File;)V
+#clearDirectory()V
+#getCurrentDir()Ljava/io/File;
+#getVersionFile()Ljava/io/File;
+#getPreviousVersionFile()Ljava/io/File;
+#getPreviousDir()Ljava/io/File;
+#getPreviousTmp()Ljava/io/File;
+#getRemovedTmp()Ljava/io/File;
+#getFinalizedTmp()Ljava/io/File;
+#getLastCheckpointTmp()Ljava/io/File;
+#getPreviousCheckpoint()Ljava/io/File;
+#analyzeStorage(Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$StartupOption;)Lorg/apache/hadoop/hdfs/server/common/Storage$StorageState;
+#doRecover(Lorg/apache/hadoop/hdfs/server/common/Storage$StorageState;)V
+#lock()V
+#unlock()V

+###org/apache/hadoop/hdfs/server/common/Storage$StorageState
@0.20.2
+#values()[Lorg/apache/hadoop/hdfs/server/common/Storage$StorageState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/server/common/Storage$StorageState;

+###org/apache/hadoop/hdfs/server/common/Storage
@0.20.2
+#dirIterator()Ljava/util/Iterator;
+#dirIterator(Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirType;)Ljava/util/Iterator;
+#getNumStorageDirs()I
+#getStorageDir(I)Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirectory;
+#isConversionNeeded(Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirectory;)Z
+#rename(Ljava/io/File;Ljava/io/File;)V
+#writeAll()V
+#unlockAll()V
+#isLockSupported(I)Z
+#getBuildVersion()Ljava/lang/String;
+#getRegistrationID(Lorg/apache/hadoop/hdfs/server/common/StorageInfo;)Ljava/lang/String;
@0.20.203.0
+#checkVersionUpgradable(I)V
@0.20.204.0
+#is203LayoutVersion(I)Z
-#checkVersionUpgradable(I)V
@1.1.0
-#getBuildVersion()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/common/StorageInfo
@0.20.2
+#<init>()V
+#<init>(IIJ)V
+#<init>(Lorg/apache/hadoop/hdfs/server/common/StorageInfo;)V
+#getLayoutVersion()I
+#getNamespaceID()I
+#getCTime()J
+#setStorageInfo(Lorg/apache/hadoop/hdfs/server/common/StorageInfo;)V

+###org/apache/hadoop/hdfs/server/common/UpgradeManager
@0.20.2
+#<init>()V
+#getBroadcastCommand()Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;
+#getUpgradeState()Z
+#getUpgradeVersion()I
+#setUpgradeState(ZI)V
+#getDistributedUpgrades()Ljava/util/SortedSet;
+#getUpgradeStatus()S
+#initializeUpgrade()Z
+#isUpgradeCompleted()Z
+#getType()Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType;
+#startUpgrade()Z
+#completeUpgrade()V

+###org/apache/hadoop/hdfs/server/common/UpgradeObject
@0.20.2
+#<init>()V
+#getUpgradeStatus()S
+#getDescription()Ljava/lang/String;
+#getUpgradeStatusReport(Z)Lorg/apache/hadoop/hdfs/server/common/UpgradeStatusReport;
+#compareTo(Lorg/apache/hadoop/hdfs/server/common/Upgradeable;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hdfs/server/common/UpgradeObjectCollection
@0.20.2
+#<init>()V
+#getDistributedUpgrades(ILorg/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType;)Ljava/util/SortedSet;

+###org/apache/hadoop/hdfs/server/common/UpgradeStatusReport
@0.20.2
+#<init>()V
+#<init>(ISZ)V
+#getVersion()I
+#getUpgradeStatus()S
+#isFinalized()Z
+#getStatusText(Z)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/common/Upgradeable
@0.20.2
+#getVersion()I
+#getType()Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType;
+#getDescription()Ljava/lang/String;
+#getUpgradeStatus()S
+#startUpgrade()Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;
+#completeUpgrade()Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;
+#getUpgradeStatusReport(Z)Lorg/apache/hadoop/hdfs/server/common/UpgradeStatusReport;

+###org/apache/hadoop/hdfs/server/common/Util
@0.20.2
+#<init>()V
+#now()J

+###org/apache/hadoop/hdfs/server/datanode/BlockMetadataHeader
@1.0.0
+#getVersion()S
+#getChecksum()Lorg/apache/hadoop/util/DataChecksum;
+#readHeader(Ljava/io/DataInputStream;)Lorg/apache/hadoop/hdfs/server/datanode/BlockMetadataHeader;

+###org/apache/hadoop/hdfs/server/datanode/DataBlockScanner$Servlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/datanode/DataNode
@0.20.2
+#createSocketAddr(Ljava/lang/String;)Ljava/net/InetSocketAddress;[deprecated]
+#getDataNode()Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
+#createInterDataNodeProtocolProxy(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/protocol/InterDatanodeProtocol;
+#getNameNodeAddr()Ljava/net/InetSocketAddress;
+#getSelfAddr()Ljava/net/InetSocketAddress;
+#getNamenode()Ljava/lang/String;
+#setNewStorageID(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;)V
+#shutdown()V
+#offerService()V
+#run()V
+#runDatanodeDaemon(Lorg/apache/hadoop/hdfs/server/datanode/DataNode;)V
+#instantiateDataNode([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
+#createDataNode([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
+#makeInstance([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
+#toString()Ljava/lang/String;
+#scheduleBlockReport(J)V
+#getFSDataset()Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface;
+#main([Ljava/lang/String;)V
+#getBlockMetaDataInfo(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/server/protocol/BlockMetaDataInfo;
+#recoverBlocks([Lorg/apache/hadoop/hdfs/protocol/Block;[[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)Lorg/apache/hadoop/util/Daemon;
+#updateBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/protocol/Block;Z)V
+#getProtocolVersion(Ljava/lang/String;J)J
+#recoverBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Z[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
@0.20.203.0
+#unRegisterMXBean()V
+#getInfoAddr(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/InetSocketAddress;
+#instantiateDataNode([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/datanode/SecureDataNodeStarter$SecureResources;)Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
+#createDataNode([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/datanode/SecureDataNodeStarter$SecureResources;)Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
+#makeInstance([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/datanode/SecureDataNodeStarter$SecureResources;)Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
+#secureMain([Ljava/lang/String;Lorg/apache/hadoop/hdfs/server/datanode/SecureDataNodeStarter$SecureResources;)V
+#getStreamingAddr(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/InetSocketAddress;
+#getHostName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getRpcPort()Ljava/lang/String;
+#getHttpPort()Ljava/lang/String;
+#getNamenodeAddress()Ljava/lang/String;
+#getVolumeInfo()Ljava/lang/String;
-#makeInstance([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/datanode/DataNode;
@0.20.205.0
+#createInterDataNodeProtocolProxy(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/hdfs/server/protocol/InterDatanodeProtocol;
+#startBlockRecovery(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/server/protocol/BlockRecoveryInfo;
+#getBlockInfo(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/protocol/Block;
+#getBalancerBandwidth()Ljava/lang/Long;
-#createInterDataNodeProtocolProxy(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/protocol/InterDatanodeProtocol;
@1.0.0
+#getBlockLocalPathInfo(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/security/token/Token;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;
@1.1.0
+#createInterDataNodeProtocolProxy(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;Lorg/apache/hadoop/conf/Configuration;IZ)Lorg/apache/hadoop/hdfs/server/protocol/InterDatanodeProtocol;
-#createInterDataNodeProtocolProxy(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/hdfs/server/protocol/InterDatanodeProtocol;
@1.2.0
+#getXceiverCount()I

+###org/apache/hadoop/hdfs/server/datanode/DataNodeMXBean
@0.20.203.0
+#getHostName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getRpcPort()Ljava/lang/String;
+#getHttpPort()Ljava/lang/String;
+#getNamenodeAddress()Ljava/lang/String;
+#getVolumeInfo()Ljava/lang/String;
@1.2.0
+#getXceiverCount()I

+###org/apache/hadoop/hdfs/server/datanode/DataStorage
@0.20.2
+#<init>(Lorg/apache/hadoop/hdfs/server/common/StorageInfo;Ljava/lang/String;)V
+#getStorageID()Ljava/lang/String;
+#isConversionNeeded(Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirectory;)Z

+###org/apache/hadoop/hdfs/server/datanode/FSDataset
@0.20.2
+#findBlockFile(J)Ljava/io/File;
+#getStoredBlock(J)Lorg/apache/hadoop/hdfs/protocol/Block;
+#metaFileExists(Lorg/apache/hadoop/hdfs/protocol/Block;)Z
+#getMetaDataLength(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#getMetaDataInputStream(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$MetaDataInputStream;
+#<init>(Lorg/apache/hadoop/hdfs/server/datanode/DataStorage;Lorg/apache/hadoop/conf/Configuration;)V
+#getDfsUsed()J
+#getCapacity()J
+#getRemaining()J
+#getLength(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#getBlockFile(Lorg/apache/hadoop/hdfs/protocol/Block;)Ljava/io/File;
+#getBlockInputStream(Lorg/apache/hadoop/hdfs/protocol/Block;)Ljava/io/InputStream;
+#getBlockInputStream(Lorg/apache/hadoop/hdfs/protocol/Block;J)Ljava/io/InputStream;
+#getTmpInputStreams(Lorg/apache/hadoop/hdfs/protocol/Block;JJ)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockInputStreams;
+#detachBlock(Lorg/apache/hadoop/hdfs/protocol/Block;I)Z
+#updateBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#writeToBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Z)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;
+#getChannelPosition(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;)J
+#setChannelPosition(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;JJ)V
+#finalizeBlock(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#unfinalizeBlock(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#getBlockReport()[Lorg/apache/hadoop/hdfs/protocol/Block;
+#isValidBlock(Lorg/apache/hadoop/hdfs/protocol/Block;)Z
+#validateBlockMetadata(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#invalidate([Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#getFile(Lorg/apache/hadoop/hdfs/protocol/Block;)Ljava/io/File;
+#checkDataDir()V
+#toString()Ljava/lang/String;
+#shutdown()V
+#getStorageInfo()Ljava/lang/String;
@0.20.203.0
+#hasEnoughResource()Z
@0.20.205.0
+#findMetaFile(Ljava/io/File;)Ljava/io/File;
+#getVisibleLength(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#setVisibleLength(Lorg/apache/hadoop/hdfs/protocol/Block;J)V
+#writeToBlock(Lorg/apache/hadoop/hdfs/protocol/Block;ZZ)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;
+#finalizeBlockIfNeeded(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#getBlocksBeingWrittenReport()[Lorg/apache/hadoop/hdfs/protocol/Block;
+#startBlockRecovery(J)Lorg/apache/hadoop/hdfs/server/protocol/BlockRecoveryInfo;
-#writeToBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Z)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;
@1.0.0
+#getBlockLocalPathInfo(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;
@1.0.1
+#requestAsyncBlockReport()V
+#isAsyncBlockReportReady()Z
+#retrieveAsyncBlockReport()[Lorg/apache/hadoop/hdfs/protocol/Block;

+###org/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockInputStreams
@0.20.2
+#close()V

+###org/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams
@0.20.2

+###org/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$MetaDataInputStream
@0.20.2
+#getLength()J

+###org/apache/hadoop/hdfs/server/datanode/FSDatasetInterface
@0.20.2
+#getMetaDataLength(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#getMetaDataInputStream(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$MetaDataInputStream;
+#metaFileExists(Lorg/apache/hadoop/hdfs/protocol/Block;)Z
+#getLength(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#getStoredBlock(J)Lorg/apache/hadoop/hdfs/protocol/Block;
+#getBlockInputStream(Lorg/apache/hadoop/hdfs/protocol/Block;)Ljava/io/InputStream;
+#getBlockInputStream(Lorg/apache/hadoop/hdfs/protocol/Block;J)Ljava/io/InputStream;
+#getTmpInputStreams(Lorg/apache/hadoop/hdfs/protocol/Block;JJ)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockInputStreams;
+#writeToBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Z)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;
+#updateBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#finalizeBlock(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#unfinalizeBlock(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#getBlockReport()[Lorg/apache/hadoop/hdfs/protocol/Block;
+#isValidBlock(Lorg/apache/hadoop/hdfs/protocol/Block;)Z
+#invalidate([Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#checkDataDir()V
+#toString()Ljava/lang/String;
+#shutdown()V
+#getChannelPosition(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;)J
+#setChannelPosition(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;JJ)V
+#validateBlockMetadata(Lorg/apache/hadoop/hdfs/protocol/Block;)V
@0.20.203.0
+#hasEnoughResource()Z
@0.20.205.0
+#getVisibleLength(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#setVisibleLength(Lorg/apache/hadoop/hdfs/protocol/Block;J)V
+#writeToBlock(Lorg/apache/hadoop/hdfs/protocol/Block;ZZ)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;
+#finalizeBlockIfNeeded(Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#getBlocksBeingWrittenReport()[Lorg/apache/hadoop/hdfs/protocol/Block;
+#startBlockRecovery(J)Lorg/apache/hadoop/hdfs/server/protocol/BlockRecoveryInfo;
-#writeToBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Z)Lorg/apache/hadoop/hdfs/server/datanode/FSDatasetInterface$BlockWriteStreams;
@1.0.0
+#getBlockLocalPathInfo(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/protocol/BlockLocalPathInfo;
@1.0.1
+#requestAsyncBlockReport()V
+#isAsyncBlockReportReady()Z
+#retrieveAsyncBlockReport()[Lorg/apache/hadoop/hdfs/protocol/Block;

+###org/apache/hadoop/hdfs/server/datanode/SecureDataNodeStarter$SecureResources
@0.20.203.0
+#<init>(Ljava/net/ServerSocket;Lorg/mortbay/jetty/nio/SelectChannelConnector;)V
+#getStreamingSocket()Ljava/net/ServerSocket;
+#getListener()Lorg/mortbay/jetty/nio/SelectChannelConnector;

+###org/apache/hadoop/hdfs/server/datanode/SecureDataNodeStarter
@0.20.203.0
+#<init>()V
+#init(Lorg/apache/commons/daemon/DaemonContext;)V
+#start()V
+#destroy()V
+#stop()V

+###org/apache/hadoop/hdfs/server/datanode/UpgradeObjectDatanode
@0.20.2
+#<init>()V
+#getType()Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType;
+#doUpgrade()V
+#run()V
+#completeUpgrade()Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;

+###org/apache/hadoop/hdfs/server/datanode/browseBlock_jsp
@0.20.2
+#<init>()V
+#generateFileDetails(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;)V
+#generateFileChunks(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.20.203.0
+#generateFileDetails(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;)V
+#generateFileChunks(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;)V
-#generateFileDetails(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;)V
-#generateFileChunks(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;)V

+###org/apache/hadoop/hdfs/server/datanode/browseDirectory_jsp
@0.20.2
+#<init>()V
+#generateDirectoryStructure(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.20.203.0
+#generateDirectoryStructure(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/hadoop/conf/Configuration;)V
-#generateDirectoryStructure(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeInstrumentation
@0.20.203.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#shutdown()V
+#resetAllMinMax()V
+#addHeartBeat(J)V
+#addBlockReport(J)V
+#incrBlocksReplicated(I)V
+#incrBlocksWritten()V
+#incrBlocksRemoved(I)V
+#incrBytesWritten(I)V
+#incrBlockVerificationFailures()V
+#incrBlocksVerified()V
+#addReadBlockOp(J)V
+#incrReadsFromLocalClient()V
+#incrReadsFromRemoteClient()V
+#addWriteBlockOp(J)V
+#incrWritesFromLocalClient()V
+#incrWritesFromRemoteClient()V
+#addReplaceBlockOp(J)V
+#addCopyBlockOp(J)V
+#addBlockChecksumOp(J)V
+#incrBytesRead(I)V
+#incrBlocksRead()V
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V
+#create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/server/datanode/metrics/DataNodeInstrumentation;
+#create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSystem;)Lorg/apache/hadoop/hdfs/server/datanode/metrics/DataNodeInstrumentation;
@1.0.0
+#incrBlocksGetLocalPathInfo()V

+###org/apache/hadoop/hdfs/server/datanode/metrics/FSDatasetMBean
@0.20.2
+#getDfsUsed()J
+#getCapacity()J
+#getRemaining()J
+#getStorageInfo()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/datanode/tail_jsp
@0.20.2
+#<init>()V
+#generateFileChunks(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.20.203.0
+#generateFileChunks(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;)V
-#generateFileChunks(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;)V

+###org/apache/hadoop/hdfs/server/datanode/web/resources/DatanodeWebHdfsMethods
@0.20.205.0
+#<init>()V
+#put(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;)Ljavax/ws/rs/core/Response;
+#post(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#get(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
@1.0.0
+#putRoot(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;)Ljavax/ws/rs/core/Response;
+#put(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;)Ljavax/ws/rs/core/Response;
+#postRoot(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#post(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#getRoot(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#get(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
-#put(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;)Ljavax/ws/rs/core/Response;
-#post(Ljava/io/InputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
-#get(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;

+###org/apache/hadoop/hdfs/server/namenode/CancelDelegationTokenServlet
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/hdfs/server/namenode/CheckpointSignature
@0.20.2
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/hadoop/hdfs/server/namenode/CheckpointSignature;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hdfs/server/namenode/ContentSummaryServlet
@0.20.203.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/CorruptReplicasMap
@0.20.2
+#<init>()V
+#addToCorruptReplicasMap(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;)V
+#numCorruptReplicas(Lorg/apache/hadoop/hdfs/protocol/Block;)I
+#size()I

+###org/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor$BlockTargetPair
@0.20.2

+###org/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;JJJI)V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Ljava/lang/String;Ljava/lang/String;JJJI)V
+#numBlocks()I
+#getBlocksScheduled()I
@0.20.205.0
+#getBalancerBandwidth()J
+#setBalancerBandwidth(J)V

+###org/apache/hadoop/hdfs/server/namenode/FSEditLog
@0.20.2
+#open()V
+#createEditLogFile(Ljava/io/File;)V
+#close()V
+#logSync()V
+#logOpenFile(Ljava/lang/String;Lorg/apache/hadoop/hdfs/server/namenode/INodeFileUnderConstruction;)V
+#logCloseFile(Ljava/lang/String;Lorg/apache/hadoop/hdfs/server/namenode/INodeFile;)V
+#logMkDir(Ljava/lang/String;Lorg/apache/hadoop/hdfs/server/namenode/INode;)V

+###org/apache/hadoop/hdfs/server/namenode/FSImage
@0.20.2
+#<init>(Lorg/apache/hadoop/hdfs/server/common/StorageInfo;)V
+#<init>(Ljava/io/File;)V
+#getEditLog()Lorg/apache/hadoop/hdfs/server/namenode/FSEditLog;
+#isConversionNeeded(Lorg/apache/hadoop/hdfs/server/common/Storage$StorageDirectory;)Z
+#saveFSImage()V
+#format()V
+#getFsEditName()Ljava/io/File;
@0.20.203.0
-#saveFSImage()V
@1.0.2
+#setEditLog(Lorg/apache/hadoop/hdfs/server/namenode/FSEditLog;)V
@1.2.0
+#readString(Ljava/io/DataInputStream;)Ljava/lang/String;
+#readBytes(Ljava/io/DataInputStream;)[B

+###org/apache/hadoop/hdfs/server/namenode/FSNamesystem
@0.20.2
+#getNamespaceDirs(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Collection;
+#getNamespaceEditsDirs(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Collection;
+#getFSNamesystem()Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;
+#close()V
+#setPermission(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#setOwner(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getBlockLocations(Ljava/lang/String;JJ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
+#getBlockLocations(Ljava/lang/String;JJZ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
+#setTimes(Ljava/lang/String;JJ)V
+#setReplication(Ljava/lang/String;S)Z
+#getAdditionalBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#abandonBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Ljava/lang/String;Ljava/lang/String;)Z
+#completeFile(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem$CompleteFileStatus;
+#markBlockAsCorrupt(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
+#invalidateBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
+#renameTo(Ljava/lang/String;Ljava/lang/String;)Z
+#delete(Ljava/lang/String;Z)Z
+#mkdirs(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/PermissionStatus;)Z
+#getListing(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
+#registerDatanode(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;)V
+#getRegistrationID()Ljava/lang/String;
+#computeDatanodeWork()I
+#setNodeReplicationLimit(I)V
+#removeDatanode(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#processReport(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/hdfs/protocol/BlockListAsLongs;)V
+#blockReceived(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/hdfs/protocol/Block;Ljava/lang/String;)V
+#getMissingBlocksCount()J
+#getCapacityTotal()J
+#getCapacityUsed()J
+#getCapacityUsedPercent()F
+#getCapacityUsedNonDFS()J
+#getCapacityRemaining()J
+#getCapacityRemainingPercent()F
+#getTotalLoad()I
+#datanodeReport(Lorg/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType;)[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#DFSNodesStatus(Ljava/util/ArrayList;Ljava/util/ArrayList;)V
+#stopDecommission(Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;)V
+#getDataNodeInfo(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#getDFSNameNodeAddress()Ljava/net/InetSocketAddress;[deprecated]
+#getStartTime()Ljava/util/Date;
+#refreshNodes(Lorg/apache/hadoop/conf/Configuration;)V
+#getDatanode(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#randomDataNode()Ljava/lang/String;[deprecated]
+#getRandomDatanode()Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#getBlocksTotal()J
+#getFilesTotal()J
+#getPendingReplicationBlocks()J
+#getUnderReplicatedBlocks()J
+#getCorruptReplicaBlocks()J
+#getScheduledReplicationBlocks()J
+#getPendingDeletionBlocks()J
+#getExcessBlocks()J
+#getBlockCapacity()I
+#getFSState()Ljava/lang/String;
+#getFSNamesystemMetrics()Lorg/apache/hadoop/hdfs/server/namenode/metrics/FSNamesystemMetrics;
+#shutdown()V
+#numLiveDataNodes()I
+#numDeadDataNodes()I
+#setGenerationStamp(J)V
+#getGenerationStamp()J
@0.20.203.0
+#getBlockLocations(Ljava/lang/String;JJZZ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
+#getListing(Ljava/lang/String;[B)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
+#getDecommissioningNodes()Ljava/util/ArrayList;
+#getDelegationTokenSecretManager()Lorg/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager;
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
+#logUpdateMasterKey(Lorg/apache/hadoop/security/token/delegation/DelegationKey;)V
+#getHostName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getUsed()J
+#getFree()J
+#getTotal()J
+#getSafemode()Ljava/lang/String;
+#isUpgradeFinalized()Z
+#getNonDfsUsedSpace()J
+#getPercentUsed()F
+#getPercentRemaining()F
+#getTotalBlocks()J
+#getTotalFiles()J
+#getThreads()I
+#getLiveNodes()Ljava/lang/String;
+#getDeadNodes()Ljava/lang/String;
+#getDecomNodes()Ljava/lang/String;
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V
-#getBlockLocations(Ljava/lang/String;JJZ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
-#getListing(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
-#getFSNamesystemMetrics()Lorg/apache/hadoop/hdfs/server/namenode/metrics/FSNamesystemMetrics;
@0.20.205.0
+#setBalancerBandwidth(J)V
+#getAdditionalBlock(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#commitBlockSynchronization(Lorg/apache/hadoop/hdfs/protocol/Block;JJZZ[Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#processBlocksBeingWrittenReport(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;Lorg/apache/hadoop/hdfs/protocol/BlockListAsLongs;)V
+#stallReplicationWork()V
+#restartReplicationWork()V
-#invalidateBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
@1.0.2
+#getNameDirStatuses()Ljava/lang/String;
@1.1.0
+#getBlockLocations(Ljava/lang/String;JJZZZ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
+#chooseDatanode(Ljava/lang/String;J)Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#getDatanodeListForReport(Lorg/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType;)Ljava/util/ArrayList;
+#toString()Ljava/lang/String;
-#getBlockLocations(Ljava/lang/String;JJZZ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
@1.1.1
+#getSafeModeTip()Ljava/lang/String;
@1.2.0
+#getAdditionalBlock(Ljava/lang/String;Ljava/lang/String;Ljava/util/HashMap;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#chooseDatanode(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#getNumStaleNodes()I
+#shouldAvoidStaleDataNodesForWrite()Z
-#getAdditionalBlock(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
-#chooseDatanode(Ljava/lang/String;J)Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;

+###org/apache/hadoop/hdfs/server/namenode/FileChecksumServlets$GetServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/FileChecksumServlets$RedirectServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/FileChecksumServlets
@0.20.2
+#<init>()V

+###org/apache/hadoop/hdfs/server/namenode/FileDataServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/FsckServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/GetDelegationTokenServlet
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/hdfs/server/namenode/GetImageServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/JspHelper
@0.20.2
+#<init>()V
+#randomNode()Lorg/apache/hadoop/hdfs/protocol/DatanodeID;
+#bestNode(Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;)Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#streamBlockInAscii(Ljava/net/InetSocketAddress;JJJJJLjavax/servlet/jsp/JspWriter;)V
+#DFSNodesStatus(Ljava/util/ArrayList;Ljava/util/ArrayList;)V
+#addTableHeader(Ljavax/servlet/jsp/JspWriter;)V
+#addTableRow(Ljavax/servlet/jsp/JspWriter;[Ljava/lang/String;)V
+#addTableRow(Ljavax/servlet/jsp/JspWriter;[Ljava/lang/String;I)V
+#addTableFooter(Ljavax/servlet/jsp/JspWriter;)V
+#getSafeModeText()Ljava/lang/String;
+#getWarningText(Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;)Ljava/lang/String;
+#getInodeLimitText()Ljava/lang/String;
+#getUpgradeStatusText()Ljava/lang/String;
+#sortNodeList(Ljava/util/ArrayList;Ljava/lang/String;Ljava/lang/String;)V
+#printPathWithLinks(Ljava/lang/String;Ljavax/servlet/jsp/JspWriter;I)V
+#printGotoForm(Ljavax/servlet/jsp/JspWriter;ILjava/lang/String;)V
+#createTitle(Ljavax/servlet/jsp/JspWriter;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
@0.20.203.0
+#streamBlockInAscii(Ljava/net/InetSocketAddress;JLorg/apache/hadoop/security/token/Token;JJJJLjavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/conf/Configuration;)V
+#printPathWithLinks(Ljava/lang/String;Ljavax/servlet/jsp/JspWriter;ILjava/lang/String;)V
+#printGotoForm(Ljavax/servlet/jsp/JspWriter;ILjava/lang/String;Ljava/lang/String;)V
+#getDefaultWebUser(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation;
+#getUGI(Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation;
+#getDFSClient(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/DFSClient;
+#getDelegationTokenUrlParam(Ljava/lang/String;)Ljava/lang/String;
+#string2ChunkSizeToView(Ljava/lang/String;I)I
+#getDefaultChunkSize(Lorg/apache/hadoop/conf/Configuration;)I
-#streamBlockInAscii(Ljava/net/InetSocketAddress;JJJJJLjavax/servlet/jsp/JspWriter;)V
-#printPathWithLinks(Ljava/lang/String;Ljavax/servlet/jsp/JspWriter;I)V
-#printGotoForm(Ljavax/servlet/jsp/JspWriter;ILjava/lang/String;)V
@0.20.205.0
+#getUGI(Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;Z)Lorg/apache/hadoop/security/UserGroupInformation;
@1.0.0
+#getUGI(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation;
+#getUGI(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;Z)Lorg/apache/hadoop/security/UserGroupInformation;
-#getUGI(Ljavax/servlet/http/HttpServletRequest;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;Z)Lorg/apache/hadoop/security/UserGroupInformation;
@1.2.0
+#getVersionTable()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/namenode/LeaseExpiredException
@0.20.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/server/namenode/LeaseManager
@0.20.2
+#getLeaseByPath(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/server/namenode/LeaseManager$Lease;
+#countLease()I
+#setLeasePeriod(JJ)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/namenode/ListPathsServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/MetaRecoveryContext
@1.1.0
+#<init>(I)V
+#ask(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#quit()V
+#editLogLoaderPrompt(Ljava/lang/String;Lorg/apache/hadoop/hdfs/server/namenode/MetaRecoveryContext;)V

+###org/apache/hadoop/hdfs/server/namenode/NameNode
@0.20.2
+#getProtocolVersion(Ljava/lang/String;J)J
+#format(Lorg/apache/hadoop/conf/Configuration;)V
+#getNamesystem()Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;
+#getNameNodeMetrics()Lorg/apache/hadoop/hdfs/server/namenode/metrics/NameNodeMetrics;
+#getAddress(Ljava/lang/String;)Ljava/net/InetSocketAddress;
+#getAddress(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/InetSocketAddress;
+#getUri(Ljava/net/InetSocketAddress;)Ljava/net/URI;
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#join()V
+#stop()V
+#getBlocks(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;J)Lorg/apache/hadoop/hdfs/server/protocol/BlocksWithLocations;
+#getBlockLocations(Ljava/lang/String;JJ)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
+#create(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;ZSJ)V
+#append(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#setReplication(Ljava/lang/String;S)Z
+#setPermission(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#setOwner(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#addBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#abandonBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Ljava/lang/String;Ljava/lang/String;)V
+#complete(Ljava/lang/String;Ljava/lang/String;)Z
+#reportBadBlocks([Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;)V
+#nextGenerationStamp(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#commitBlockSynchronization(Lorg/apache/hadoop/hdfs/protocol/Block;JJZZ[Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
+#getPreferredBlockSize(Ljava/lang/String;)J
+#rename(Ljava/lang/String;Ljava/lang/String;)Z
+#delete(Ljava/lang/String;)Z[deprecated]
+#delete(Ljava/lang/String;Z)Z
+#mkdirs(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#renewLease(Ljava/lang/String;)V
+#getListing(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
+#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/fs/FileStatus;
+#getStats()[J
+#getDatanodeReport(Lorg/apache/hadoop/hdfs/protocol/FSConstants$DatanodeReportType;)[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#setSafeMode(Lorg/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction;)Z
+#isInSafeMode()Z
+#saveNamespace()V
+#refreshNodes()V
+#getEditLogSize()J
+#rollEditLog()Lorg/apache/hadoop/hdfs/server/namenode/CheckpointSignature;
+#rollFsImage()V
+#finalizeUpgrade()V
+#distributedUpgradeProgress(Lorg/apache/hadoop/hdfs/protocol/FSConstants$UpgradeAction;)Lorg/apache/hadoop/hdfs/server/common/UpgradeStatusReport;
+#metaSave(Ljava/lang/String;)V
+#getContentSummary(Ljava/lang/String;)Lorg/apache/hadoop/fs/ContentSummary;
+#setQuota(Ljava/lang/String;JJ)V
+#fsync(Ljava/lang/String;Ljava/lang/String;)V
+#setTimes(Ljava/lang/String;JJ)V
+#register(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;)Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;
+#sendHeartbeat(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;JJJII)[Lorg/apache/hadoop/hdfs/server/protocol/DatanodeCommand;
+#blockReport(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;[J)Lorg/apache/hadoop/hdfs/server/protocol/DatanodeCommand;
+#blockReceived(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;[Lorg/apache/hadoop/hdfs/protocol/Block;[Ljava/lang/String;)V
+#errorReport(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;ILjava/lang/String;)V
+#versionRequest()Lorg/apache/hadoop/hdfs/server/protocol/NamespaceInfo;
+#processUpgradeCommand(Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;)Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;
+#verifyRequest(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;)V
+#verifyVersion(I)V
+#getFsImageName()Ljava/io/File;
+#getFSImage()Lorg/apache/hadoop/hdfs/server/namenode/FSImage;
+#getFsImageNameCheckpoint()[Ljava/io/File;
+#getNameNodeAddress()Ljava/net/InetSocketAddress;
+#getHttpAddress()Ljava/net/InetSocketAddress;
+#refreshServiceAcl()V
+#createNameNode([Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/namenode/NameNode;
+#main([Ljava/lang/String;)V
@0.20.203.0
+#getNameNodeMetrics()Lorg/apache/hadoop/hdfs/server/namenode/metrics/NameNodeInstrumentation;
+#setServiceAddress(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#getServiceAddress(Lorg/apache/hadoop/conf/Configuration;Z)Ljava/net/InetSocketAddress;
+#getInfoServer(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
+#getListing(Ljava/lang/String;[B)Lorg/apache/hadoop/hdfs/protocol/DirectoryListing;
+#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
+#getBlockKeys()Lorg/apache/hadoop/hdfs/security/token/block/ExportedBlockKeys;
+#refreshUserToGroupsMappings()V
+#refreshSuperUserGroupsConfiguration()V
-#getNameNodeMetrics()Lorg/apache/hadoop/hdfs/server/namenode/metrics/NameNodeMetrics;
-#getListing(Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
-#getFileInfo(Ljava/lang/String;)Lorg/apache/hadoop/fs/FileStatus;
@0.20.205.0
+#recoverLease(Ljava/lang/String;Ljava/lang/String;)Z
+#addBlock(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;
+#nextGenerationStamp(Lorg/apache/hadoop/hdfs/protocol/Block;Z)J
+#setBalancerBandwidth(J)V
+#blocksBeingWrittenReport(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;[J)V
-#nextGenerationStamp(Lorg/apache/hadoop/hdfs/protocol/Block;)J
@1.0.0
*#create(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;ZSJ)V[deprecated]
+#create(Ljava/lang/String;Lorg/apache/hadoop/fs/permission/FsPermission;Ljava/lang/String;ZZSJ)V
@1.1.0
+#getHttpUriScheme()Ljava/lang/String;
@1.2.0
+#setNamesystem(Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;)V
+#isFileClosed(Ljava/lang/String;)Z
+#concat(Ljava/lang/String;[Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/server/namenode/NameNodeMXBean
@0.20.203.0
+#getHostName()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getUsed()J
+#getFree()J
+#getTotal()J
+#getSafemode()Ljava/lang/String;
+#isUpgradeFinalized()Z
+#getNonDfsUsedSpace()J
+#getPercentUsed()F
+#getPercentRemaining()F
+#getTotalBlocks()J
+#getTotalFiles()J
+#getThreads()I
+#getLiveNodes()Ljava/lang/String;
+#getDeadNodes()Ljava/lang/String;
+#getDecomNodes()Ljava/lang/String;
@1.0.2
+#getNameDirStatuses()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/namenode/NamenodeFsck
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljava/util/Map;Ljavax/servlet/http/HttpServletResponse;)V
+#fsck()V
+#run([Ljava/lang/String;)I
@0.20.203.0
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljava/util/Map;Ljavax/servlet/http/HttpServletResponse;)V
-#run([Ljava/lang/String;)I

+###org/apache/hadoop/hdfs/server/namenode/NotReplicatedYetException
@0.20.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/server/namenode/RenewDelegationTokenServlet
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/hdfs/server/namenode/SafeModeException
@0.20.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem$SafeModeInfo;)V

+###org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#shutdown()V
+#run()V
+#main([Ljava/lang/String;)V
@0.20.203.0
+#getHttpAddress(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/InetSocketAddress;
+#doWork()V
@1.2.0
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/namenode/StreamFile
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/UpgradeObjectNamenode
@0.20.2
+#<init>()V
+#processUpgradeCommand(Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;)Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;
+#getType()Lorg/apache/hadoop/hdfs/server/common/HdfsConstants$NodeType;
+#startUpgrade()Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;
+#forceProceed()V

+###org/apache/hadoop/hdfs/server/namenode/dfshealth_jsp
@0.20.2
+#<init>()V
+#generateNodeData(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;Ljava/lang/String;ZI)V
+#generateConfReport(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;Ljavax/servlet/http/HttpServletRequest;)V
+#generateDFSHealthReport(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljavax/servlet/http/HttpServletRequest;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/dfsnodelist_jsp
@0.20.2
+#<init>()V
+#generateNodeData(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;Ljava/lang/String;ZI)V
+#generateDFSNodesList(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljavax/servlet/http/HttpServletRequest;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/server/namenode/metrics/FSNamesystemMBean
@0.20.2
+#getFSState()Ljava/lang/String;
+#getBlocksTotal()J
+#getCapacityTotal()J
+#getCapacityRemaining()J
+#getCapacityUsed()J
+#getFilesTotal()J
+#getPendingReplicationBlocks()J
+#getUnderReplicatedBlocks()J
+#getScheduledReplicationBlocks()J
+#getTotalLoad()I
+#numLiveDataNodes()I
+#numDeadDataNodes()I

+###org/apache/hadoop/hdfs/server/namenode/metrics/NameNodeInstrumentation
@0.20.203.0
+#create(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/server/namenode/metrics/NameNodeInstrumentation;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/metrics2/MetricsSystem;)Lorg/apache/hadoop/hdfs/server/namenode/metrics/NameNodeInstrumentation;
+#shutdown()V
+#incrNumGetBlockLocations()V
+#incrNumFilesCreated()V
+#incrNumCreateFileOps()V
+#incrNumFilesAppended()V
+#incrNumAddBlockOps()V
+#incrNumFilesRenamed()V
+#incrFilesDeleted(I)V
+#incrNumDeleteFileOps()V
+#incrNumGetListingOps()V
+#incrNumFilesInGetListingOps(I)V
+#incrNumFileInfoOps()V
+#addTransaction(J)V
+#incrTransactionsBatchedInSync()V
+#addSync(J)V
+#setFsImageLoadTime(J)V
+#addBlockReport(J)V
+#setSafeModeTime(J)V
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V

+###org/apache/hadoop/hdfs/server/namenode/nn_005fbrowsedfscontent_jsp
@0.20.2
+#<init>()V
+#redirectToRandomDataNode(Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljavax/servlet/http/HttpServletResponse;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.20.203.0
+#redirectToRandomDataNode(Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/hadoop/conf/Configuration;)V
-#redirectToRandomDataNode(Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljavax/servlet/http/HttpServletResponse;)V
@1.0.0
+#redirectToRandomDataNode(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
-#redirectToRandomDataNode(Lorg/apache/hadoop/hdfs/server/namenode/NameNode;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods
@0.20.205.0
+#<init>()V
+#getRemoteAddress()Ljava/lang/String;
+#put(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/DstPathParam;Lorg/apache/hadoop/hdfs/web/resources/OwnerParam;Lorg/apache/hadoop/hdfs/web/resources/GroupParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ModificationTimeParam;Lorg/apache/hadoop/hdfs/web/resources/AccessTimeParam;)Ljavax/ws/rs/core/Response;
+#post(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#root(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/RenewerParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#get(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/RenewerParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#delete(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/DeleteOpParam;Lorg/apache/hadoop/hdfs/web/resources/RecursiveParam;)Ljavax/ws/rs/core/Response;
@1.0.0
+#putRoot(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/DestinationParam;Lorg/apache/hadoop/hdfs/web/resources/OwnerParam;Lorg/apache/hadoop/hdfs/web/resources/GroupParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ModificationTimeParam;Lorg/apache/hadoop/hdfs/web/resources/AccessTimeParam;Lorg/apache/hadoop/hdfs/web/resources/TokenArgumentParam;)Ljavax/ws/rs/core/Response;
+#put(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/DestinationParam;Lorg/apache/hadoop/hdfs/web/resources/OwnerParam;Lorg/apache/hadoop/hdfs/web/resources/GroupParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ModificationTimeParam;Lorg/apache/hadoop/hdfs/web/resources/AccessTimeParam;Lorg/apache/hadoop/hdfs/web/resources/TokenArgumentParam;)Ljavax/ws/rs/core/Response;
+#postRoot(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#post(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#getRoot(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/RenewerParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#get(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/RenewerParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#deleteRoot(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/DeleteOpParam;Lorg/apache/hadoop/hdfs/web/resources/RecursiveParam;)Ljavax/ws/rs/core/Response;
+#delete(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/DeleteOpParam;Lorg/apache/hadoop/hdfs/web/resources/RecursiveParam;)Ljavax/ws/rs/core/Response;
-#put(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PutOpParam;Lorg/apache/hadoop/hdfs/web/resources/DstPathParam;Lorg/apache/hadoop/hdfs/web/resources/OwnerParam;Lorg/apache/hadoop/hdfs/web/resources/GroupParam;Lorg/apache/hadoop/hdfs/web/resources/PermissionParam;Lorg/apache/hadoop/hdfs/web/resources/OverwriteParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ReplicationParam;Lorg/apache/hadoop/hdfs/web/resources/BlockSizeParam;Lorg/apache/hadoop/hdfs/web/resources/ModificationTimeParam;Lorg/apache/hadoop/hdfs/web/resources/AccessTimeParam;)Ljavax/ws/rs/core/Response;
-#post(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
-#root(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/RenewerParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
-#get(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/GetOpParam;Lorg/apache/hadoop/hdfs/web/resources/OffsetParam;Lorg/apache/hadoop/hdfs/web/resources/LengthParam;Lorg/apache/hadoop/hdfs/web/resources/RenewerParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
-#delete(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/DeleteOpParam;Lorg/apache/hadoop/hdfs/web/resources/RecursiveParam;)Ljavax/ws/rs/core/Response;
@1.2.0
+#postRoot(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/ConcatSourcesParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
+#post(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/ConcatSourcesParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
-#postRoot(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;
-#post(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hdfs/web/resources/DelegationParam;Lorg/apache/hadoop/hdfs/web/resources/UserParam;Lorg/apache/hadoop/hdfs/web/resources/DoAsParam;Lorg/apache/hadoop/hdfs/web/resources/UriFsPathParam;Lorg/apache/hadoop/hdfs/web/resources/PostOpParam;Lorg/apache/hadoop/hdfs/web/resources/BufferSizeParam;)Ljavax/ws/rs/core/Response;

+###org/apache/hadoop/hdfs/server/protocol/BalancerBandwidthCommand
@0.20.205.0
+#<init>(J)V
+#getBalancerBandwidthVersion()I
+#getBalancerBandwidthValue()J
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/protocol/BlockCommand
@0.20.2
+#<init>()V
+#<init>(ILjava/util/List;)V
+#<init>(I[Lorg/apache/hadoop/hdfs/protocol/Block;)V
+#getBlocks()[Lorg/apache/hadoop/hdfs/protocol/Block;
+#getTargets()[[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/protocol/BlockMetaDataInfo
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;J)V
+#getLastScanTime()J
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/protocol/BlockRecoveryInfo
@0.20.205.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;Z)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#getBlock()Lorg/apache/hadoop/hdfs/protocol/Block;
+#wasRecoveredOnStartup()Z
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/protocol/BlocksWithLocations$BlockWithLocations
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hdfs/protocol/Block;[Ljava/lang/String;)V
+#getBlock()Lorg/apache/hadoop/hdfs/protocol/Block;
+#getDatanodes()[Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/hdfs/server/protocol/BlocksWithLocations
@0.20.2
+#<init>([Lorg/apache/hadoop/hdfs/server/protocol/BlocksWithLocations$BlockWithLocations;)V
+#getBlocks()[Lorg/apache/hadoop/hdfs/server/protocol/BlocksWithLocations$BlockWithLocations;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/protocol/DatanodeCommand
@0.20.2
+#<init>()V
+#getAction()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/protocol/DatanodeProtocol
@0.20.2
+#register(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;)Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;
+#sendHeartbeat(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;JJJII)[Lorg/apache/hadoop/hdfs/server/protocol/DatanodeCommand;
+#blockReport(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;[J)Lorg/apache/hadoop/hdfs/server/protocol/DatanodeCommand;
+#blockReceived(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;[Lorg/apache/hadoop/hdfs/protocol/Block;[Ljava/lang/String;)V
+#errorReport(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;ILjava/lang/String;)V
+#versionRequest()Lorg/apache/hadoop/hdfs/server/protocol/NamespaceInfo;
+#processUpgradeCommand(Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;)Lorg/apache/hadoop/hdfs/server/protocol/UpgradeCommand;
+#reportBadBlocks([Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;)V
+#nextGenerationStamp(Lorg/apache/hadoop/hdfs/protocol/Block;)J
+#commitBlockSynchronization(Lorg/apache/hadoop/hdfs/protocol/Block;JJZZ[Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V
@0.20.205.0
+#blocksBeingWrittenReport(Lorg/apache/hadoop/hdfs/server/protocol/DatanodeRegistration;[J)V
+#nextGenerationStamp(Lorg/apache/hadoop/hdfs/protocol/Block;Z)J
-#nextGenerationStamp(Lorg/apache/hadoop/hdfs/protocol/Block;)J

+###org/apache/hadoop/hdfs/server/protocol/DatanodeRegistration
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setInfoPort(I)V
+#setIpcPort(I)V
+#setStorageInfo(Lorg/apache/hadoop/hdfs/server/datanode/DataStorage;)V
+#setName(Ljava/lang/String;)V
+#getVersion()I
+#getRegistrationID()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/protocol/DisallowedDatanodeException
@0.20.2
+#<init>(Lorg/apache/hadoop/hdfs/protocol/DatanodeID;)V

+###org/apache/hadoop/hdfs/server/protocol/InterDatanodeProtocol
@0.20.2
+#getBlockMetaDataInfo(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/server/protocol/BlockMetaDataInfo;
+#updateBlock(Lorg/apache/hadoop/hdfs/protocol/Block;Lorg/apache/hadoop/hdfs/protocol/Block;Z)V
@0.20.205.0
+#startBlockRecovery(Lorg/apache/hadoop/hdfs/protocol/Block;)Lorg/apache/hadoop/hdfs/server/protocol/BlockRecoveryInfo;

+###org/apache/hadoop/hdfs/server/protocol/KeyUpdateCommand
@0.20.203.0
+#<init>(Lorg/apache/hadoop/hdfs/security/token/block/ExportedBlockKeys;)V
+#getExportedKeys()Lorg/apache/hadoop/hdfs/security/token/block/ExportedBlockKeys;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/server/protocol/NamenodeProtocol
@0.20.2
+#getBlocks(Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;J)Lorg/apache/hadoop/hdfs/server/protocol/BlocksWithLocations;
+#getEditLogSize()J
+#rollEditLog()Lorg/apache/hadoop/hdfs/server/namenode/CheckpointSignature;
+#rollFsImage()V
@0.20.203.0
+#getBlockKeys()Lorg/apache/hadoop/hdfs/security/token/block/ExportedBlockKeys;

+###org/apache/hadoop/hdfs/server/protocol/NamespaceInfo
@0.20.2
+#<init>()V
+#<init>(IJI)V
+#getBuildVersion()Ljava/lang/String;
+#getDistributedUpgradeVersion()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@1.1.0
+#getVersion()Ljava/lang/String;
+#getRevision()Ljava/lang/String;
-#getBuildVersion()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/protocol/UpgradeCommand
@0.20.2
+#<init>()V
+#<init>(IIS)V
+#getVersion()I
+#getCurrentStatus()S
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/hdfs/tools/DFSAdmin
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#report()V
+#setSafeMode([Ljava/lang/String;I)V
+#saveNamespace()I
+#refreshNodes()I
+#finalizeUpgrade()I
+#upgradeProgress([Ljava/lang/String;I)I
+#metaSave([Ljava/lang/String;I)I
+#refreshServiceAcl()I
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@0.20.203.0
+#refreshUserToGroupsMappings()I
+#refreshSuperUserGroupsConfiguration()I
@0.20.205.0
+#setBalancerBandwidth([Ljava/lang/String;I)I

+###org/apache/hadoop/hdfs/tools/DFSck
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/tools/DelegationTokenFetcher
@0.20.203.0
+#main([Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Ljava/io/DataOutputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;)V
+#go()V
+#getDTfromRemote(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/Credentials;
+#renewDelegationToken(Ljava/lang/String;Lorg/apache/hadoop/security/token/Token;)J
+#cancelDelegationToken(Ljava/lang/String;Lorg/apache/hadoop/security/token/Token;)V
@0.20.205.0
+#<init>()V
-#<init>(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Ljava/io/DataOutputStream;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;)V
-#go()V
@1.1.0
+#setupSsl(Lorg/apache/hadoop/conf/Configuration;)V
+#getDTfromRemote(Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/Credentials;
+#renewDelegationToken(Ljava/lang/String;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
+#cancelDelegationToken(Ljava/lang/String;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V
-#getDTfromRemote(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/Credentials;
-#renewDelegationToken(Ljava/lang/String;Lorg/apache/hadoop/security/token/Token;)J
-#cancelDelegationToken(Ljava/lang/String;Lorg/apache/hadoop/security/token/Token;)V

+###org/apache/hadoop/hdfs/util/AtomicFileOutputStream
@0.20.205.0
+#<init>(Ljava/io/File;)V
+#close()V

+###org/apache/hadoop/hdfs/util/ByteArray
@0.20.203.0
+#<init>([B)V
+#getBytes()[B
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/hadoop/hdfs/util/GSet
@0.20.203.0
+#size()I
+#contains(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
@1.2.0
+#clear()V

+###org/apache/hadoop/hdfs/util/GSetByHashMap
@0.20.203.0
+#<init>(IF)V
+#size()I
+#contains(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
@1.2.0
+#clear()V

+###org/apache/hadoop/hdfs/util/LightWeightGSet$LinkedElement
@0.20.203.0
+#setNext(Lorg/apache/hadoop/hdfs/util/LightWeightGSet$LinkedElement;)V
+#getNext()Lorg/apache/hadoop/hdfs/util/LightWeightGSet$LinkedElement;

+###org/apache/hadoop/hdfs/util/LightWeightGSet
@0.20.203.0
+#<init>(I)V
+#size()I
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
+#printDetails(Ljava/io/PrintStream;)V
@1.2.0
+#computeCapacity(DLjava/lang/String;)I
+#clear()V

+###org/apache/hadoop/hdfs/web/AuthFilter
@0.20.205.0
+#<init>()V
@1.0.0
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/apache/hadoop/hdfs/web/JsonUtil
@0.20.205.0
+#<init>()V
+#toJsonString(Lorg/apache/hadoop/security/token/Token;)Ljava/lang/String;
+#toToken(Ljava/util/Map;)Lorg/apache/hadoop/security/token/Token;
+#toDelegationToken(Ljava/util/Map;)Lorg/apache/hadoop/security/token/Token;
+#toJsonString(Ljava/lang/Exception;)Ljava/lang/String;
+#toRemoteException(Ljava/util/Map;)Lorg/apache/hadoop/ipc/RemoteException;
+#toJsonString(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
+#toJsonString(Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;Z)Ljava/lang/String;
+#toFileStatus(Ljava/util/Map;Z)Lorg/apache/hadoop/hdfs/protocol/HdfsFileStatus;
+#toJsonString(Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;)Ljava/lang/String;
+#toLocatedBlocks(Ljava/util/Map;)Lorg/apache/hadoop/hdfs/protocol/LocatedBlocks;
+#toJsonString(Lorg/apache/hadoop/fs/ContentSummary;)Ljava/lang/String;
+#toContentSummary(Ljava/util/Map;)Lorg/apache/hadoop/fs/ContentSummary;
+#toJsonString(Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;)Ljava/lang/String;
+#toMD5MD5CRC32FileChecksum(Ljava/util/Map;)Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;

+###org/apache/hadoop/hdfs/web/KerberosUgiAuthenticator
@0.20.205.0
+#<init>()V

+###org/apache/hadoop/hdfs/web/ParamFilter
@0.20.205.0
+#<init>()V
+#getRequestFilter()Lcom/sun/jersey/spi/container/ContainerRequestFilter;
+#getResponseFilter()Lcom/sun/jersey/spi/container/ContainerResponseFilter;

+###org/apache/hadoop/hdfs/web/WebHdfsFileSystem$DtRenewer
@0.20.205.0
+#<init>()V
+#handleKind(Lorg/apache/hadoop/io/Text;)Z
+#isManaged(Lorg/apache/hadoop/security/token/Token;)Z
+#renew(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
+#cancel(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hdfs/web/WebHdfsFileSystem
@0.20.205.0
+#<init>()V
+#initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V
+#getUri()Ljava/net/URI;
+#getHomeDirectory()Lorg/apache/hadoop/fs/Path;
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#setOwner(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setPermission(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#setReplication(Lorg/apache/hadoop/fs/Path;S)Z
+#setTimes(Lorg/apache/hadoop/fs/Path;JJ)V
+#create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#delete(Lorg/apache/hadoop/fs/Path;)Z
+#delete(Lorg/apache/hadoop/fs/Path;Z)Z
+#open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#getDelegationToken(Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
+#getRenewToken()Lorg/apache/hadoop/security/token/Token;
+#setDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
+#getFileBlockLocations(Lorg/apache/hadoop/fs/FileStatus;JJ)[Lorg/apache/hadoop/fs/BlockLocation;
+#getContentSummary(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/ContentSummary;
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/MD5MD5CRC32FileChecksum;
+#getFileChecksum(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileChecksum;
@1.0.0
+#isEnabled(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/commons/logging/Log;)Z
+#getHomeDirectoryString(Lorg/apache/hadoop/security/UserGroupInformation;)Ljava/lang/String;
+#getDefaultBlockSize()J
+#getDefaultReplication()S
@1.2.0
+#concat(Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/hdfs/web/resources/AccessTimeParam
@0.20.205.0
+#<init>(Ljava/lang/Long;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/BlockSizeParam
@0.20.205.0
+#<init>(Ljava/lang/Long;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValue(Lorg/apache/hadoop/conf/Configuration;)J
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/BufferSizeParam
@0.20.205.0
+#<init>(Ljava/lang/Integer;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getValue(Lorg/apache/hadoop/conf/Configuration;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/DelegationParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/DeleteOpParam$Op
@0.20.205.0
+#values()[Lorg/apache/hadoop/hdfs/web/resources/DeleteOpParam$Op;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/web/resources/DeleteOpParam$Op;
+#getType()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
+#getDoOutput()Z
+#getExpectedHttpResponseCode()I
+#toQueryString()Ljava/lang/String;
@1.1.0
+#getRedirect()Z

+###org/apache/hadoop/hdfs/web/resources/DeleteOpParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/DestinationParam
@1.0.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/DoAsParam
@1.0.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/ExceptionHandler
@0.20.205.0
+#<init>()V
+#toResponse(Ljava/lang/Exception;)Ljavax/ws/rs/core/Response;
+#toResponse(Ljava/lang/Throwable;)Ljavax/ws/rs/core/Response;

+###org/apache/hadoop/hdfs/web/resources/GetOpParam$Op
@0.20.205.0
+#values()[Lorg/apache/hadoop/hdfs/web/resources/GetOpParam$Op;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/web/resources/GetOpParam$Op;
+#getType()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
+#getDoOutput()Z
+#getExpectedHttpResponseCode()I
+#toQueryString()Ljava/lang/String;
@1.1.0
+#getRedirect()Z

+###org/apache/hadoop/hdfs/web/resources/GetOpParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/GroupParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/HttpOpParam$Op
@0.20.205.0
+#getType()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
+#getDoOutput()Z
+#getExpectedHttpResponseCode()I
+#toQueryString()Ljava/lang/String;
@1.1.0
+#getRedirect()Z

+###org/apache/hadoop/hdfs/web/resources/HttpOpParam$TemporaryRedirectOp
@1.0.0
+#valueOf(Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Op;)Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$TemporaryRedirectOp;
+#getType()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
+#getDoOutput()Z
+#getExpectedHttpResponseCode()I
+#toQueryString()Ljava/lang/String;
@1.1.0
+#getRedirect()Z

+###org/apache/hadoop/hdfs/web/resources/HttpOpParam$Type
@0.20.205.0
+#values()[Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;

+###org/apache/hadoop/hdfs/web/resources/HttpOpParam
@0.20.205.0

+###org/apache/hadoop/hdfs/web/resources/LengthParam
@0.20.205.0
+#<init>(Ljava/lang/Long;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/ModificationTimeParam
@0.20.205.0
+#<init>(Ljava/lang/Long;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/OffsetParam
@0.20.205.0
+#<init>(Ljava/lang/Long;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/OverwriteParam
@0.20.205.0
+#<init>(Ljava/lang/Boolean;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/OwnerParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/Param
@0.20.205.0
+#toSortedString(Ljava/lang/String;[Lorg/apache/hadoop/hdfs/web/resources/Param;)Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/PermissionParam
@0.20.205.0
+#<init>(Lorg/apache/hadoop/fs/permission/FsPermission;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getFsPermission()Lorg/apache/hadoop/fs/permission/FsPermission;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/PostOpParam$Op
@0.20.205.0
+#values()[Lorg/apache/hadoop/hdfs/web/resources/PostOpParam$Op;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/web/resources/PostOpParam$Op;
+#getType()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
+#getDoOutput()Z
+#getExpectedHttpResponseCode()I
+#toQueryString()Ljava/lang/String;
@1.1.0
+#getRedirect()Z

+###org/apache/hadoop/hdfs/web/resources/PostOpParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/PutOpParam$Op
@0.20.205.0
+#values()[Lorg/apache/hadoop/hdfs/web/resources/PutOpParam$Op;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/web/resources/PutOpParam$Op;
+#getType()Lorg/apache/hadoop/hdfs/web/resources/HttpOpParam$Type;
+#getDoOutput()Z
+#getExpectedHttpResponseCode()I
+#toQueryString()Ljava/lang/String;
@1.1.0
+#getRedirect()Z

+###org/apache/hadoop/hdfs/web/resources/PutOpParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/RecursiveParam
@0.20.205.0
+#<init>(Ljava/lang/Boolean;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/RenewerParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/ReplicationParam
@0.20.205.0
+#<init>(Ljava/lang/Short;)V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@1.0.0
+#getValue(Lorg/apache/hadoop/conf/Configuration;)S

+###org/apache/hadoop/hdfs/web/resources/TokenArgumentParam
@1.0.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/UriFsPathParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getAbsolutePath()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/UserParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/security/UserGroupInformation;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/web/resources/UserProvider
@0.20.205.0
+#<init>()V
+#getValue(Lcom/sun/jersey/api/core/HttpContext;)Lorg/apache/hadoop/security/UserGroupInformation;
+#getScope()Lcom/sun/jersey/core/spi/component/ComponentScope;
+#getInjectable(Lcom/sun/jersey/core/spi/component/ComponentContext;Ljavax/ws/rs/core/Context;Ljava/lang/reflect/Type;)Lcom/sun/jersey/spi/inject/Injectable;
+#getValue(Lcom/sun/jersey/api/core/HttpContext;)Ljava/lang/Object;
+#getInjectable(Lcom/sun/jersey/core/spi/component/ComponentContext;Ljava/lang/annotation/Annotation;Ljava/lang/Object;)Lcom/sun/jersey/spi/inject/Injectable;

+###org/apache/hadoop/http/AdminAuthorizedServlet
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/http/FilterContainer
@0.20.2
+#addFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#addGlobalFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V

+###org/apache/hadoop/http/FilterInitializer
@0.20.2
+#<init>()V
@0.20.203.0
+#initFilter(Lorg/apache/hadoop/http/FilterContainer;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/http/HtmlQuoting
@0.20.203.0
+#<init>()V
+#needsQuoting([BII)Z
+#needsQuoting(Ljava/lang/String;)Z
+#quoteHtmlChars(Ljava/io/OutputStream;[BII)V
+#quoteHtmlChars(Ljava/lang/String;)Ljava/lang/String;
+#quoteOutputStream(Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#unquoteHtmlChars(Ljava/lang/String;)Ljava/lang/String;
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/http/HttpServer$QuotingInputFilter$RequestQuoter
@0.20.203.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getParameterNames()Ljava/util/Enumeration;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#getRequestURL()Ljava/lang/StringBuffer;
+#getServerName()Ljava/lang/String;

+###org/apache/hadoop/http/HttpServer$QuotingInputFilter
@0.20.203.0
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/apache/hadoop/http/HttpServer$StackServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/http/HttpServer
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/String;IZ)V
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;)V
+#addContext(Lorg/mortbay/jetty/servlet/Context;Z)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#addServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V
+#addInternalServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V[deprecated]
+#addFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#addGlobalFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getPort()I
+#setThreads(II)V
+#addSslListener(Ljava/net/InetSocketAddress;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#addSslListener(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Z)V
+#start()V
+#stop()V
+#join()V
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/mortbay/jetty/Connector;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;Lorg/mortbay/jetty/Connector;)V
+#createBaseListener(Lorg/apache/hadoop/conf/Configuration;)Lorg/mortbay/jetty/Connector;
+#createDefaultChannelConnector()Lorg/mortbay/jetty/Connector;
+#setAttribute(Lorg/mortbay/jetty/servlet/Context;Ljava/lang/String;Ljava/lang/Object;)V
+#addInternalServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Z)V
+#addSslListener(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;ZZ)V
+#hasAdministratorAccess(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
@0.20.205.0
+#addJerseyResourcePackage(Ljava/lang/String;Ljava/lang/String;)V
@1.1.0
+#addInternalServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;ZZ)V
-#addInternalServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Z)V
@1.2.0
+#isInstrumentationAccessAllowed(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z

+###org/apache/hadoop/http/lib/StaticUserWebFilter$StaticUserFilter
@0.20.203.0
+#<init>()V
+#destroy()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#init(Ljavax/servlet/FilterConfig;)V

+###org/apache/hadoop/http/lib/StaticUserWebFilter
@0.20.203.0
+#<init>()V
+#initFilter(Lorg/apache/hadoop/http/FilterContainer;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/io/AbstractMapWritable
@0.20.2
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/io/ArrayFile$Reader
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#seek(J)V
+#next(Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
+#key()J
+#get(JLorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;

+###org/apache/hadoop/io/ArrayFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/util/Progressable;)V
+#append(Lorg/apache/hadoop/io/Writable;)V

+###org/apache/hadoop/io/ArrayFile
@0.20.2

+###org/apache/hadoop/io/ArrayWritable
@0.20.2
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;[Lorg/apache/hadoop/io/Writable;)V
+#<init>([Ljava/lang/String;)V
+#getValueClass()Ljava/lang/Class;
+#toStrings()[Ljava/lang/String;
+#toArray()Ljava/lang/Object;
+#set([Lorg/apache/hadoop/io/Writable;)V
+#get()[Lorg/apache/hadoop/io/Writable;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/io/BinaryComparable
@0.20.2
+#<init>()V
+#getLength()I
+#getBytes()[B
+#compareTo(Lorg/apache/hadoop/io/BinaryComparable;)I
+#compareTo([BII)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/io/BloomMapFile$Reader
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Lorg/apache/hadoop/conf/Configuration;Z)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Lorg/apache/hadoop/conf/Configuration;)V
+#probablyHasKey(Lorg/apache/hadoop/io/WritableComparable;)Z
+#get(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
+#getBloomFilter()Lorg/apache/hadoop/util/bloom/Filter;

+###org/apache/hadoop/io/BloomMapFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/util/Progressable;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/util/Progressable;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
+#append(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)V
+#close()V

+###org/apache/hadoop/io/BloomMapFile
@0.20.2
+#<init>()V
+#delete(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;)V

+###org/apache/hadoop/io/BooleanWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/BooleanWritable
@0.20.2
+#<init>()V
+#<init>(Z)V
+#set(Z)V
+#get()Z
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/ByteWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/ByteWritable
@0.20.2
+#<init>()V
+#<init>(B)V
+#set(B)V
+#get()B
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/BytesWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/BytesWritable
@0.20.2
+#<init>()V
+#<init>([B)V
+#getBytes()[B
+#get()[B[deprecated]
+#getLength()I
+#getSize()I[deprecated]
+#setSize(I)V
+#getCapacity()I
+#setCapacity(I)V
+#set(Lorg/apache/hadoop/io/BytesWritable;)V
+#set([BII)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/Closeable
@0.20.2

+###org/apache/hadoop/io/CompressedWritable
@0.20.2
+#<init>()V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/io/DataInputBuffer
@0.20.2
+#<init>()V
+#reset([BI)V
+#reset([BII)V
+#getData()[B
+#getPosition()I
+#getLength()I

+###org/apache/hadoop/io/DataOutputBuffer
@0.20.2
+#<init>()V
+#<init>(I)V
+#getData()[B
+#getLength()I
+#reset()Lorg/apache/hadoop/io/DataOutputBuffer;
+#write(Ljava/io/DataInput;I)V
+#writeTo(Ljava/io/OutputStream;)V

+###org/apache/hadoop/io/DefaultStringifier
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
+#fromString(Ljava/lang/String;)Ljava/lang/Object;
+#toString(Ljava/lang/Object;)Ljava/lang/String;
+#close()V
+#store(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/String;)V
+#load(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#storeArray(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/Object;Ljava/lang/String;)V
+#loadArray(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/Object;

+###org/apache/hadoop/io/DoubleWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/DoubleWritable
@0.20.2
+#<init>()V
+#<init>(D)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#set(D)V
+#get()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/FloatWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/FloatWritable
@0.20.2
+#<init>()V
+#<init>(F)V
+#set(F)V
+#get()F
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/GenericWritable
@0.20.2
+#<init>()V
+#set(Lorg/apache/hadoop/io/Writable;)V
+#get()Lorg/apache/hadoop/io/Writable;
+#toString()Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/io/IOUtils$NullOutputStream
@0.20.2
+#<init>()V
+#write([BII)V
+#write(I)V

+###org/apache/hadoop/io/IOUtils
@0.20.2
+#<init>()V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;IZ)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;Lorg/apache/hadoop/conf/Configuration;)V
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;Lorg/apache/hadoop/conf/Configuration;Z)V
+#readFully(Ljava/io/InputStream;[BII)V
+#skipFully(Ljava/io/InputStream;J)V
+#cleanup(Lorg/apache/commons/logging/Log;[Ljava/io/Closeable;)V
+#closeStream(Ljava/io/Closeable;)V
+#closeSocket(Ljava/net/Socket;)V
@0.20.203.0
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;I)V
@0.20.205.0
+#copyBytes(Ljava/io/InputStream;Ljava/io/OutputStream;JIZ)V
+#readFileChannelFully(Ljava/nio/channels/FileChannel;[BII)V
@1.2.0
+#wrappedReadForCompressedData(Ljava/io/InputStream;[BII)I

+###org/apache/hadoop/io/InputBuffer
@0.20.2
+#<init>()V
+#reset([BI)V
+#reset([BII)V
+#getPosition()I
+#getLength()I

+###org/apache/hadoop/io/IntWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/IntWritable
@0.20.2
+#<init>()V
+#<init>(I)V
+#set(I)V
+#get()I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/LongWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/LongWritable$DecreasingComparator
@0.20.2
+#<init>()V
+#compare(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
+#compare([BII[BII)I

+###org/apache/hadoop/io/LongWritable
@0.20.2
+#<init>()V
+#<init>(J)V
+#set(J)V
+#get()J
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/MD5Hash$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/MD5Hash
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>([B)V
+#readFields(Ljava/io/DataInput;)V
+#read(Ljava/io/DataInput;)Lorg/apache/hadoop/io/MD5Hash;
+#write(Ljava/io/DataOutput;)V
+#set(Lorg/apache/hadoop/io/MD5Hash;)V
+#getDigest()[B
+#digest([B)Lorg/apache/hadoop/io/MD5Hash;
+#digest(Ljava/io/InputStream;)Lorg/apache/hadoop/io/MD5Hash;
+#digest([BII)Lorg/apache/hadoop/io/MD5Hash;
+#digest(Ljava/lang/String;)Lorg/apache/hadoop/io/MD5Hash;
+#digest(Lorg/apache/hadoop/io/UTF8;)Lorg/apache/hadoop/io/MD5Hash;
+#halfDigest()J
+#quarterDigest()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/io/MD5Hash;)I
+#toString()Ljava/lang/String;
+#setDigest(Ljava/lang/String;)V
+#compareTo(Ljava/lang/Object;)I
@1.1.0
+#getDigester()Ljava/security/MessageDigest;

+###org/apache/hadoop/io/MapFile$Reader
@0.20.2
+#getKeyClass()Ljava/lang/Class;
+#getValueClass()Ljava/lang/Class;
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Lorg/apache/hadoop/conf/Configuration;)V
+#reset()V
+#midKey()Lorg/apache/hadoop/io/WritableComparable;
+#finalKey(Lorg/apache/hadoop/io/WritableComparable;)V
+#seek(Lorg/apache/hadoop/io/WritableComparable;)Z
+#next(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Z
+#get(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
+#getClosest(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/WritableComparable;
+#getClosest(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;Z)Lorg/apache/hadoop/io/WritableComparable;
+#close()V

+###org/apache/hadoop/io/MapFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/util/Progressable;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/util/Progressable;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)V
+#getIndexInterval()I
+#setIndexInterval(I)V
+#setIndexInterval(Lorg/apache/hadoop/conf/Configuration;I)V
+#close()V
+#append(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)V

+###org/apache/hadoop/io/MapFile
@0.20.2
+#rename(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/String;)V
+#delete(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;)V
+#fix(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;ZLorg/apache/hadoop/conf/Configuration;)J
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/io/MapWritable
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/MapWritable;)V
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Lorg/apache/hadoop/io/Writable;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#put(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Lorg/apache/hadoop/io/Writable;
+#size()I
+#values()Ljava/util/Collection;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/hadoop/io/MultipleIOException
@0.20.2
+#getExceptions()Ljava/util/List;
+#createIOException(Ljava/util/List;)Ljava/io/IOException;

+###org/apache/hadoop/io/NullWritable$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/NullWritable
@0.20.2
+#get()Lorg/apache/hadoop/io/NullWritable;
+#toString()Ljava/lang/String;
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/io/ObjectWritable
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Object;)V
+#get()Ljava/lang/Object;
+#getDeclaredClass()Ljava/lang/Class;
+#set(Ljava/lang/Object;)V
+#toString()Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#writeObject(Ljava/io/DataOutput;Ljava/lang/Object;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
+#readObject(Ljava/io/DataInput;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
+#readObject(Ljava/io/DataInput;Lorg/apache/hadoop/io/ObjectWritable;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/io/OutputBuffer
@0.20.2
+#<init>()V
+#getData()[B
+#getLength()I
+#reset()Lorg/apache/hadoop/io/OutputBuffer;
+#write(Ljava/io/InputStream;I)V

+###org/apache/hadoop/io/RawComparator
@0.20.2
+#compare([BII[BII)I

+###org/apache/hadoop/io/ReadaheadPool$ReadaheadRequest
@1.1.0
+#cancel()V
+#getOffset()J
+#getLength()J

+###org/apache/hadoop/io/ReadaheadPool
@1.1.0
+#getInstance()Lorg/apache/hadoop/io/ReadaheadPool;
+#readaheadStream(Ljava/lang/String;Ljava/io/FileDescriptor;JJJLorg/apache/hadoop/io/ReadaheadPool$ReadaheadRequest;)Lorg/apache/hadoop/io/ReadaheadPool$ReadaheadRequest;
+#submitReadahead(Ljava/lang/String;Ljava/io/FileDescriptor;JJ)Lorg/apache/hadoop/io/ReadaheadPool$ReadaheadRequest;

+###org/apache/hadoop/io/SecureIOUtils$AlreadyExistsException
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/io/SecureIOUtils
@0.20.203.0
+#<init>()V
+#openForRead(Ljava/io/File;Ljava/lang/String;)Ljava/io/FileInputStream;
+#createForWrite(Ljava/io/File;I)Ljava/io/FileOutputStream;

+###org/apache/hadoop/io/SequenceFile$CompressionType
@0.20.2
+#values()[Lorg/apache/hadoop/io/SequenceFile$CompressionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;

+###org/apache/hadoop/io/SequenceFile$Metadata
@0.20.2
+#<init>()V
+#<init>(Ljava/util/TreeMap;)V
+#get(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/io/Text;
+#set(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
+#getMetadata()Ljava/util/TreeMap;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#equals(Lorg/apache/hadoop/io/SequenceFile$Metadata;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/SequenceFile$Reader
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#getKeyClassName()Ljava/lang/String;
+#getKeyClass()Ljava/lang/Class;
+#getValueClassName()Ljava/lang/String;
+#getValueClass()Ljava/lang/Class;
+#isCompressed()Z
+#isBlockCompressed()Z
+#getCompressionCodec()Lorg/apache/hadoop/io/compress/CompressionCodec;
+#getMetadata()Lorg/apache/hadoop/io/SequenceFile$Metadata;
+#getCurrentValue(Lorg/apache/hadoop/io/Writable;)V
+#getCurrentValue(Ljava/lang/Object;)Ljava/lang/Object;
+#next(Lorg/apache/hadoop/io/Writable;)Z
+#next(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)Z
+#next(Lorg/apache/hadoop/io/DataOutputBuffer;)I
+#createValueBytes()Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
+#nextRaw(Lorg/apache/hadoop/io/DataOutputBuffer;Lorg/apache/hadoop/io/SequenceFile$ValueBytes;)I
+#nextRawKey(Lorg/apache/hadoop/io/DataOutputBuffer;)I
+#next(Ljava/lang/Object;)Ljava/lang/Object;
+#nextRawValue(Lorg/apache/hadoop/io/SequenceFile$ValueBytes;)I
+#seek(J)V
+#sync(J)V
+#syncSeen()Z
+#getPosition()J
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/SequenceFile$Sorter$RawKeyValueIterator
@0.20.2
+#getKey()Lorg/apache/hadoop/io/DataOutputBuffer;
+#getValue()Lorg/apache/hadoop/io/SequenceFile$ValueBytes;
+#next()Z
+#close()V
+#getProgress()Lorg/apache/hadoop/util/Progress;

+###org/apache/hadoop/io/SequenceFile$Sorter$SegmentDescriptor
@0.20.2
+#<init>(Lorg/apache/hadoop/io/SequenceFile$Sorter;JJLorg/apache/hadoop/fs/Path;)V
+#doSync()V
+#preserveInput(Z)V
+#shouldPreserveInput()Z
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#nextRawKey()Z
+#nextRawValue(Lorg/apache/hadoop/io/SequenceFile$ValueBytes;)I
+#getKey()Lorg/apache/hadoop/io/DataOutputBuffer;
+#cleanup()V

+###org/apache/hadoop/io/SequenceFile$Sorter
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/io/RawComparator;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
+#setFactor(I)V
+#getFactor()I
+#setMemory(I)V
+#getMemory()I
+#setProgressable(Lorg/apache/hadoop/util/Progressable;)V
+#sort([Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)V
+#sortAndIterate([Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/io/SequenceFile$Sorter$RawKeyValueIterator;
+#sort(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#merge(Ljava/util/List;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Sorter$RawKeyValueIterator;
+#merge([Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Sorter$RawKeyValueIterator;
+#merge([Lorg/apache/hadoop/fs/Path;ZILorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/SequenceFile$Sorter$RawKeyValueIterator;
+#merge([Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/io/SequenceFile$Sorter$RawKeyValueIterator;
+#cloneFileAttributes(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#writeFile(Lorg/apache/hadoop/io/SequenceFile$Sorter$RawKeyValueIterator;Lorg/apache/hadoop/io/SequenceFile$Writer;)V
+#merge([Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/io/SequenceFile$ValueBytes
@0.20.2
+#writeUncompressedBytes(Ljava/io/DataOutputStream;)V
+#writeCompressedBytes(Ljava/io/DataOutputStream;)V
+#getSize()I

+###org/apache/hadoop/io/SequenceFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/io/SequenceFile$Metadata;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;ISJLorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/io/SequenceFile$Metadata;)V
+#getKeyClass()Ljava/lang/Class;
+#getValueClass()Ljava/lang/Class;
+#getCompressionCodec()Lorg/apache/hadoop/io/compress/CompressionCodec;
+#sync()V
+#close()V
+#append(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)V
+#append(Ljava/lang/Object;Ljava/lang/Object;)V
+#appendRaw([BIILorg/apache/hadoop/io/SequenceFile$ValueBytes;)V
+#getLength()J
@0.20.205.0
+#syncFs()V

+###org/apache/hadoop/io/SequenceFile
@0.20.2
+#getCompressionType(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;[deprecated]
+#setCompressionType(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V[deprecated]
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;ISJLorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/SequenceFile$Writer;
@1.0.0
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;ISJZLorg/apache/hadoop/io/SequenceFile$CompressionType;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/io/SequenceFile$Metadata;)Lorg/apache/hadoop/io/SequenceFile$Writer;

+###org/apache/hadoop/io/SetFile$Reader
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Lorg/apache/hadoop/conf/Configuration;)V
+#seek(Lorg/apache/hadoop/io/WritableComparable;)Z
+#next(Lorg/apache/hadoop/io/WritableComparable;)Z
+#get(Lorg/apache/hadoop/io/WritableComparable;)Lorg/apache/hadoop/io/WritableComparable;

+###org/apache/hadoop/io/SetFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Lorg/apache/hadoop/io/WritableComparator;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V
+#append(Lorg/apache/hadoop/io/WritableComparable;)V

+###org/apache/hadoop/io/SetFile
@0.20.2

+###org/apache/hadoop/io/SortedMapWritable
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/SortedMapWritable;)V
+#comparator()Ljava/util/Comparator;
+#firstKey()Lorg/apache/hadoop/io/WritableComparable;
+#headMap(Lorg/apache/hadoop/io/WritableComparable;)Ljava/util/SortedMap;
+#lastKey()Lorg/apache/hadoop/io/WritableComparable;
+#subMap(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)Ljava/util/SortedMap;
+#tailMap(Lorg/apache/hadoop/io/WritableComparable;)Ljava/util/SortedMap;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Lorg/apache/hadoop/io/Writable;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#put(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Lorg/apache/hadoop/io/Writable;
+#size()I
+#values()Ljava/util/Collection;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#lastKey()Ljava/lang/Object;
+#firstKey()Ljava/lang/Object;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@1.2.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/io/Stringifier
@0.20.2
+#toString(Ljava/lang/Object;)Ljava/lang/String;
+#fromString(Ljava/lang/String;)Ljava/lang/Object;
+#close()V

+###org/apache/hadoop/io/Text$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/Text
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/io/Text;)V
+#<init>([B)V
+#getBytes()[B
+#getLength()I
+#charAt(I)I
+#find(Ljava/lang/String;)I
+#find(Ljava/lang/String;I)I
+#set(Ljava/lang/String;)V
+#set([B)V
+#set(Lorg/apache/hadoop/io/Text;)V
+#set([BII)V
+#append([BII)V
+#clear()V
+#toString()Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#skip(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#decode([B)Ljava/lang/String;
+#decode([BII)Ljava/lang/String;
+#decode([BIIZ)Ljava/lang/String;
+#encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#encode(Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
+#readString(Ljava/io/DataInput;)Ljava/lang/String;
+#writeString(Ljava/io/DataOutput;Ljava/lang/String;)I
+#validateUTF8([B)V
+#validateUTF8([BII)V
+#bytesToCodePoint(Ljava/nio/ByteBuffer;)I
+#utf8Length(Ljava/lang/String;)I

+###org/apache/hadoop/io/TwoDArrayWritable
@0.20.2
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;[[Lorg/apache/hadoop/io/Writable;)V
+#toArray()Ljava/lang/Object;
+#set([[Lorg/apache/hadoop/io/Writable;)V
+#get()[[Lorg/apache/hadoop/io/Writable;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/io/UTF8$Comparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/io/UTF8
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/io/UTF8;)V
+#getBytes()[B
+#getLength()I
+#set(Ljava/lang/String;)V
+#set(Lorg/apache/hadoop/io/UTF8;)V
+#readFields(Ljava/io/DataInput;)V
+#skip(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getBytes(Ljava/lang/String;)[B
+#readString(Ljava/io/DataInput;)Ljava/lang/String;
+#writeString(Ljava/io/DataOutput;Ljava/lang/String;)I
@1.2.0
+#compareTo(Lorg/apache/hadoop/io/UTF8;)I
+#toStringChecked()Ljava/lang/String;
+#fromBytes([B)Ljava/lang/String;

+###org/apache/hadoop/io/VIntWritable
@0.20.2
+#<init>()V
+#<init>(I)V
+#set(I)V
+#get()I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/VLongWritable
@0.20.2
+#<init>()V
+#<init>(J)V
+#set(J)V
+#get()J
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/VersionMismatchException
@0.20.2
+#<init>(BB)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/VersionedWritable
@0.20.2
+#<init>()V
+#getVersion()B
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/io/Writable
@0.20.2
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/io/WritableComparable
@0.20.2

+###org/apache/hadoop/io/WritableComparator
@0.20.2
+#get(Ljava/lang/Class;)Lorg/apache/hadoop/io/WritableComparator;
+#define(Ljava/lang/Class;Lorg/apache/hadoop/io/WritableComparator;)V
+#getKeyClass()Ljava/lang/Class;
+#newKey()Lorg/apache/hadoop/io/WritableComparable;
+#compare([BII[BII)I
+#compare(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/WritableComparable;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#compareBytes([BII[BII)I
+#hashBytes([BI)I
+#readUnsignedShort([BI)I
+#readInt([BI)I
+#readFloat([BI)F
+#readLong([BI)J
+#readDouble([BI)D
+#readVLong([BI)J
+#readVInt([BI)I
@1.0.1
+#hashBytes([BII)I

+###org/apache/hadoop/io/WritableFactories
@0.20.2
+#setFactory(Ljava/lang/Class;Lorg/apache/hadoop/io/WritableFactory;)V
+#getFactory(Ljava/lang/Class;)Lorg/apache/hadoop/io/WritableFactory;
+#newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/Writable;
+#newInstance(Ljava/lang/Class;)Lorg/apache/hadoop/io/Writable;

+###org/apache/hadoop/io/WritableFactory
@0.20.2
+#newInstance()Lorg/apache/hadoop/io/Writable;

+###org/apache/hadoop/io/WritableName
@0.20.2
+#setName(Ljava/lang/Class;Ljava/lang/String;)V
+#addName(Ljava/lang/Class;Ljava/lang/String;)V
+#getName(Ljava/lang/Class;)Ljava/lang/String;
+#getClass(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;

+###org/apache/hadoop/io/WritableUtils
@0.20.2
+#<init>()V
+#readCompressedByteArray(Ljava/io/DataInput;)[B
+#skipCompressedByteArray(Ljava/io/DataInput;)V
+#writeCompressedByteArray(Ljava/io/DataOutput;[B)I
+#readCompressedString(Ljava/io/DataInput;)Ljava/lang/String;
+#writeCompressedString(Ljava/io/DataOutput;Ljava/lang/String;)I
+#writeString(Ljava/io/DataOutput;Ljava/lang/String;)V
+#readString(Ljava/io/DataInput;)Ljava/lang/String;
+#writeStringArray(Ljava/io/DataOutput;[Ljava/lang/String;)V
+#writeCompressedStringArray(Ljava/io/DataOutput;[Ljava/lang/String;)V
+#readStringArray(Ljava/io/DataInput;)[Ljava/lang/String;
+#readCompressedStringArray(Ljava/io/DataInput;)[Ljava/lang/String;
+#displayByteArray([B)V
+#clone(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/Writable;
+#cloneInto(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)V[deprecated]
+#writeVInt(Ljava/io/DataOutput;I)V
+#writeVLong(Ljava/io/DataOutput;J)V
+#readVLong(Ljava/io/DataInput;)J
+#readVInt(Ljava/io/DataInput;)I
+#isNegativeVInt(B)Z
+#decodeVIntSize(B)I
+#getVIntSize(J)I
+#readEnum(Ljava/io/DataInput;Ljava/lang/Class;)Ljava/lang/Enum;
+#writeEnum(Ljava/io/DataOutput;Ljava/lang/Enum;)V
+#skipFully(Ljava/io/DataInput;I)V
+#toByteArray([Lorg/apache/hadoop/io/Writable;)[B

+###org/apache/hadoop/io/compress/BZip2Codec
@0.20.2
+#<init>()V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;
@1.1.0
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;JJLorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;)Lorg/apache/hadoop/io/compress/SplitCompressionInputStream;

+###org/apache/hadoop/io/compress/BlockCompressorStream
@0.20.2
+#<init>(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;II)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)V
+#write([BII)V
+#finish()V

+###org/apache/hadoop/io/compress/BlockDecompressorStream
@0.20.2
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)V
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)V
+#resetState()V

+###org/apache/hadoop/io/compress/CodecPool
@0.20.2
+#<init>()V
+#getCompressor(Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/compress/Compressor;
+#getDecompressor(Lorg/apache/hadoop/io/compress/CompressionCodec;)Lorg/apache/hadoop/io/compress/Decompressor;
+#returnCompressor(Lorg/apache/hadoop/io/compress/Compressor;)V
+#returnDecompressor(Lorg/apache/hadoop/io/compress/Decompressor;)V
@0.20.203.0
+#getCompressor(Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;

+###org/apache/hadoop/io/compress/CompressionCodec
@0.20.2
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/hadoop/io/compress/CompressionCodecFactory
@0.20.2
+#toString()Ljava/lang/String;
+#getCodecClasses(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
+#setCodecClasses(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getCodec(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/io/compress/CompressionCodec;
+#removeSuffix(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@1.2.0
+#getCodecByClassName(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/CompressionCodec;
+#getCodecByName(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/CompressionCodec;
+#getCodecClassByName(Ljava/lang/String;)Ljava/lang/Class;

+###org/apache/hadoop/io/compress/CompressionInputStream
@0.20.2
+#close()V
+#read([BII)I
+#resetState()V
@1.1.0
+#getPos()J
+#seek(J)V
+#seekToNewSource(J)Z

+###org/apache/hadoop/io/compress/CompressionOutputStream
@0.20.2
+#close()V
+#flush()V
+#write([BII)V
+#finish()V
+#resetState()V

+###org/apache/hadoop/io/compress/Compressor
@0.20.2
+#setInput([BII)V
+#needsInput()Z
+#setDictionary([BII)V
+#getBytesRead()J
+#getBytesWritten()J
+#finish()V
+#finished()Z
+#compress([BII)I
+#reset()V
+#end()V
@0.20.203.0
+#reinit(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/io/compress/CompressorStream
@0.20.2
+#<init>(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)V
+#<init>(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)V
+#write([BII)V
+#finish()V
+#resetState()V
+#close()V
+#write(I)V

+###org/apache/hadoop/io/compress/Decompressor
@0.20.2
+#setInput([BII)V
+#needsInput()Z
+#setDictionary([BII)V
+#needsDictionary()Z
+#finished()Z
+#decompress([BII)I
+#reset()V
+#end()V
@0.20.203.0
+#getRemaining()I

+###org/apache/hadoop/io/compress/DecompressorStream
@0.20.2
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)V
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)V
+#read()I
+#read([BII)I
+#resetState()V
+#skip(J)J
+#available()I
+#close()V
+#markSupported()Z
+#mark(I)V
+#reset()V

+###org/apache/hadoop/io/compress/DefaultCodec
@0.20.2
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/hadoop/io/compress/DoNotPool
@0.20.203.0

+###org/apache/hadoop/io/compress/GzipCodec$GzipOutputStream
@0.20.2
+#<init>(Ljava/io/OutputStream;)V
+#close()V
+#flush()V
+#write(I)V
+#write([BII)V
+#finish()V
+#resetState()V

+###org/apache/hadoop/io/compress/GzipCodec
@0.20.2
+#<init>()V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#getCompressorType()Ljava/lang/Class;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDecompressorType()Ljava/lang/Class;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/hadoop/io/compress/SnappyCodec
@1.0.2
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#isNativeSnappyLoaded(Lorg/apache/hadoop/conf/Configuration;)Z
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#createOutputStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressorType()Ljava/lang/Class;
+#createCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#createInputStream(Ljava/io/InputStream;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;)Lorg/apache/hadoop/io/compress/CompressionInputStream;
+#getDecompressorType()Ljava/lang/Class;
+#createDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#getDefaultExtension()Ljava/lang/String;

+###org/apache/hadoop/io/compress/SplitCompressionInputStream
@1.1.0
+#<init>(Ljava/io/InputStream;JJ)V
+#getAdjustedStart()J
+#getAdjustedEnd()J

+###org/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE
@1.1.0
+#values()[Lorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;

+###org/apache/hadoop/io/compress/SplittableCompressionCodec
@1.1.0
+#createInputStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;JJLorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;)Lorg/apache/hadoop/io/compress/SplitCompressionInputStream;

+###org/apache/hadoop/io/compress/bzip2/BZip2Constants
@0.20.2

+###org/apache/hadoop/io/compress/bzip2/BZip2DummyCompressor
@0.20.2
+#<init>()V
+#compress([BII)I
+#end()V
+#finish()V
+#finished()Z
+#getBytesRead()J
+#getBytesWritten()J
+#needsInput()Z
+#reset()V
+#setDictionary([BII)V
+#setInput([BII)V
@0.20.203.0
+#reinit(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/io/compress/bzip2/BZip2DummyDecompressor
@0.20.2
+#<init>()V
+#decompress([BII)I
+#end()V
+#finished()Z
+#needsDictionary()Z
+#needsInput()Z
+#reset()V
+#setDictionary([BII)V
+#setInput([BII)V
@0.20.203.0
+#getRemaining()I

+###org/apache/hadoop/io/compress/bzip2/CBZip2InputStream$STATE
@1.1.0
+#values()[Lorg/apache/hadoop/io/compress/bzip2/CBZip2InputStream$STATE;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/bzip2/CBZip2InputStream$STATE;

+###org/apache/hadoop/io/compress/bzip2/CBZip2InputStream
@0.20.2
+#<init>(Ljava/io/InputStream;)V
+#read()I
+#read([BII)I
+#close()V
@1.1.0
+#getProcessedByteCount()J
+#updateReportedByteCount(I)V
+#skipToNextMarker(JI)Z
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/SplittableCompressionCodec$READ_MODE;)V
+#numberOfBytesTillNextMarker(Ljava/io/InputStream;)J

+###org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream
@0.20.2
+#chooseBlockSize(J)I
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#write(I)V
+#finish()V
+#close()V
+#flush()V
+#getBlockSize()I
+#write([BII)V

+###org/apache/hadoop/io/compress/snappy/LoadSnappy
@1.0.2
+#<init>()V
+#isAvailable()Z
+#isLoaded()Z

+###org/apache/hadoop/io/compress/snappy/SnappyCompressor
@1.0.2
+#<init>(I)V
+#<init>()V
+#setInput([BII)V
+#setDictionary([BII)V
+#needsInput()Z
+#finish()V
+#finished()Z
+#compress([BII)I
+#reset()V
+#reinit(Lorg/apache/hadoop/conf/Configuration;)V
+#getBytesRead()J
+#getBytesWritten()J
+#end()V

+###org/apache/hadoop/io/compress/snappy/SnappyDecompressor
@1.0.2
+#<init>(I)V
+#<init>()V
+#setInput([BII)V
+#setDictionary([BII)V
+#needsInput()Z
+#needsDictionary()Z
+#finished()Z
+#decompress([BII)I
+#getRemaining()I
+#reset()V
+#end()V

+###org/apache/hadoop/io/compress/zlib/BuiltInGzipDecompressor
@0.20.203.0
+#<init>()V
+#needsInput()Z
+#setInput([BII)V
+#decompress([BII)I
+#getBytesRead()J
+#getRemaining()I
+#needsDictionary()Z
+#setDictionary([BII)V
+#finished()Z
+#reset()V
+#end()V

+###org/apache/hadoop/io/compress/zlib/BuiltInZlibDeflater
@0.20.2
+#<init>(IZ)V
+#<init>(I)V
+#<init>()V
+#compress([BII)I
@0.20.203.0
+#reinit(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/io/compress/zlib/BuiltInZlibInflater
@0.20.2
+#<init>(Z)V
+#<init>()V
+#decompress([BII)I

+###org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader
@0.20.2
+#values()[Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;
+#windowBits()I

+###org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel
@0.20.2
+#values()[Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;

+###org/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy
@0.20.2
+#values()[Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;

+###org/apache/hadoop/io/compress/zlib/ZlibCompressor
@0.20.2
+#<init>(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V
+#<init>()V
+#setInput([BII)V
+#setDictionary([BII)V
+#needsInput()Z
+#finish()V
+#finished()Z
+#compress([BII)I
+#getBytesWritten()J
+#getBytesRead()J
+#reset()V
+#end()V
@0.20.203.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#reinit(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader
@0.20.2
+#values()[Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;
+#windowBits()I

+###org/apache/hadoop/io/compress/zlib/ZlibDecompressor
@0.20.2
+#<init>(Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;I)V
+#<init>()V
+#setInput([BII)V
+#setDictionary([BII)V
+#needsInput()Z
+#needsDictionary()Z
+#finished()Z
+#decompress([BII)I
+#getBytesWritten()J
+#getBytesRead()J
+#reset()V
+#end()V
@0.20.203.0
+#getRemaining()I

+###org/apache/hadoop/io/compress/zlib/ZlibFactory
@0.20.2
+#<init>()V
+#isNativeZlibLoaded(Lorg/apache/hadoop/conf/Configuration;)Z
+#getZlibCompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
+#getZlibCompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;
+#getZlibDecompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
+#getZlibDecompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Decompressor;
@0.20.203.0
+#setCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;)V
+#getCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;
+#setCompressionLevel(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;)V
+#getCompressionLevel(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;

+###org/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader
@0.20.2
+#close()V
+#getCompressionName()Ljava/lang/String;
+#getRawSize()J
+#getCompressedSize()J
+#getStartPos()J

+###org/apache/hadoop/io/file/tfile/BCFile$Reader
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V
+#getDefaultCompressionName()Ljava/lang/String;
+#getBCFileVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;
+#getAPIVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;
+#close()V
+#getBlockCount()I
+#getMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;
+#getDataBlock(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;
+#getBlockIndexNear(J)I

+###org/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender
@0.20.2
+#getRawSize()J
+#getCompressedSize()J
+#flush()V
+#close()V

+###org/apache/hadoop/io/file/tfile/BCFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
+#prepareMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;
+#prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;

+###org/apache/hadoop/io/file/tfile/ByteArray
@0.20.2
+#<init>(Lorg/apache/hadoop/io/BytesWritable;)V
+#<init>([B)V
+#<init>([BII)V
+#buffer()[B
+#offset()I
+#size()I

+###org/apache/hadoop/io/file/tfile/Chunk$ChunkDecoder
@0.20.2
+#<init>()V
+#reset(Ljava/io/DataInputStream;)V
+#<init>(Ljava/io/DataInputStream;)V
+#isLastChunk()Z
+#getRemain()I
+#available()I
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#markSupported()Z
+#isClosed()Z
+#close()V

+###org/apache/hadoop/io/file/tfile/Chunk$ChunkEncoder
@0.20.2
+#<init>(Ljava/io/DataOutputStream;[B)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/hadoop/io/file/tfile/Chunk$SingleChunkEncoder
@0.20.2
+#<init>(Ljava/io/DataOutputStream;I)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator
@0.20.2
+#<init>(Lorg/apache/hadoop/io/RawComparator;)V
+#compare(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I
+#compare([BII[BII)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/io/file/tfile/CompareUtils$MemcmpRawComparator
@0.20.2
+#<init>()V
+#compare([BII[BII)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/io/file/tfile/CompareUtils$ScalarComparator
@0.20.2
+#<init>()V
+#compare(Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/io/file/tfile/MetaBlockAlreadyExists
@0.20.2

+###org/apache/hadoop/io/file/tfile/MetaBlockDoesNotExist
@0.20.2

+###org/apache/hadoop/io/file/tfile/RawComparable
@0.20.2
+#buffer()[B
+#offset()I
+#size()I

+###org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner$Entry
@0.20.2
+#<init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;)V
+#getKeyLength()I
+#get(Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/io/BytesWritable;)V
+#getKey(Lorg/apache/hadoop/io/BytesWritable;)I
+#getValue(Lorg/apache/hadoop/io/BytesWritable;)J
+#writeKey(Ljava/io/OutputStream;)I
+#writeValue(Ljava/io/OutputStream;)J
+#getKey([B)I
+#getKey([BI)I
+#getKeyStream()Ljava/io/DataInputStream;
+#getValueLength()I
+#getValue([B)I
+#getValue([BI)I
+#getValueStream()Ljava/io/DataInputStream;
+#isValueLengthKnown()Z
+#compareTo([B)I
+#compareTo([BII)I
+#compareTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/io/file/tfile/TFile$Reader$Scanner
@0.20.2
+#seekTo([B)Z
+#seekTo([BII)Z
+#rewind()V
+#seekToEnd()V
+#lowerBound([B)V
+#lowerBound([BII)V
+#upperBound([B)V
+#upperBound([BII)V
+#advance()Z
+#close()V
+#atEnd()Z
+#entry()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner$Entry;
+#getRecordNum()J

+###org/apache/hadoop/io/file/tfile/TFile$Reader
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#getComparatorName()Ljava/lang/String;
+#isSorted()Z
+#getEntryCount()J
+#getFirstKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;
+#getLastKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;
+#getEntryComparator()Ljava/util/Comparator;
+#getComparator()Ljava/util/Comparator;
+#getMetaBlock(Ljava/lang/String;)Ljava/io/DataInputStream;
+#getRecordNumNear(J)J
+#getKeyNear(J)Lorg/apache/hadoop/io/file/tfile/RawComparable;
+#createScanner()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
+#createScannerByByteRange(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
+#createScanner([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;[deprecated]
+#createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
+#createScanner(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;[deprecated]
+#createScannerByKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;
+#createScannerByRecordNum(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;

+###org/apache/hadoop/io/file/tfile/TFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#append([B[B)V
+#append([BII[BII)V
+#prepareAppendKey(I)Ljava/io/DataOutputStream;
+#prepareAppendValue(I)Ljava/io/DataOutputStream;
+#prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Ljava/io/DataOutputStream;
+#prepareMetaBlock(Ljava/lang/String;)Ljava/io/DataOutputStream;

+###org/apache/hadoop/io/file/tfile/TFile
@0.20.2
+#makeComparator(Ljava/lang/String;)Ljava/util/Comparator;
+#getSupportedCompressionAlgorithms()[Ljava/lang/String;
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/io/file/tfile/Utils$Version
@0.20.2
+#<init>(Ljava/io/DataInput;)V
+#<init>(SS)V
+#write(Ljava/io/DataOutput;)V
+#getMajor()I
+#getMinor()I
+#size()I
+#toString()Ljava/lang/String;
+#compatibleWith(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)Z
+#compareTo(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/io/file/tfile/Utils
@0.20.2
+#writeVInt(Ljava/io/DataOutput;I)V
+#writeVLong(Ljava/io/DataOutput;J)V
+#readVInt(Ljava/io/DataInput;)I
+#readVLong(Ljava/io/DataInput;)J
+#writeString(Ljava/io/DataOutput;Ljava/lang/String;)V
+#readString(Ljava/io/DataInput;)Ljava/lang/String;
+#lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I
+#upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I
+#lowerBound(Ljava/util/List;Ljava/lang/Object;)I
+#upperBound(Ljava/util/List;Ljava/lang/Object;)I

+###org/apache/hadoop/io/nativeio/Errno
@0.20.203.0
+#values()[Lorg/apache/hadoop/io/nativeio/Errno;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/io/nativeio/Errno;

+###org/apache/hadoop/io/nativeio/NativeIO$Stat
@0.20.203.0
+#toString()Ljava/lang/String;
+#getOwner()Ljava/lang/String;
+#getMode()I

+###org/apache/hadoop/io/nativeio/NativeIO
@0.20.203.0
+#<init>()V
+#isAvailable()Z
+#open(Ljava/lang/String;II)Ljava/io/FileDescriptor;
+#fstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$Stat;
+#getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;
@0.20.205.0
+#chmod(Ljava/lang/String;I)V
@1.1.0
+#posixFadviseIfPossible(Ljava/io/FileDescriptor;JJI)V
+#syncFileRangeIfPossible(Ljava/io/FileDescriptor;JJI)V

+###org/apache/hadoop/io/nativeio/NativeIOException
@0.20.203.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V
+#getErrno()Lorg/apache/hadoop/io/nativeio/Errno;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/retry/RetryPolicies$MultipleLinearRandomRetry$Pair
@1.1.0
+#<init>(II)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/io/retry/RetryPolicies$MultipleLinearRandomRetry
@1.1.0
+#<init>(Ljava/util/List;)V
+#shouldRetry(Ljava/lang/Exception;I)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#parseCommaSeparatedString(Ljava/lang/String;)Lorg/apache/hadoop/io/retry/RetryPolicies$MultipleLinearRandomRetry;

+###org/apache/hadoop/io/retry/RetryPolicies
@0.20.2
+#<init>()V
+#retryUpToMaximumCountWithFixedSleep(IJLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/io/retry/RetryPolicy;
+#retryUpToMaximumTimeWithFixedSleep(JJLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/io/retry/RetryPolicy;
+#retryUpToMaximumCountWithProportionalSleep(IJLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/io/retry/RetryPolicy;
+#exponentialBackoffRetry(IJLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/io/retry/RetryPolicy;
+#retryByException(Lorg/apache/hadoop/io/retry/RetryPolicy;Ljava/util/Map;)Lorg/apache/hadoop/io/retry/RetryPolicy;
+#retryByRemoteException(Lorg/apache/hadoop/io/retry/RetryPolicy;Ljava/util/Map;)Lorg/apache/hadoop/io/retry/RetryPolicy;

+###org/apache/hadoop/io/retry/RetryPolicy
@0.20.2
+#shouldRetry(Ljava/lang/Exception;I)Z

+###org/apache/hadoop/io/retry/RetryProxy
@0.20.2
+#<init>()V
+#create(Ljava/lang/Class;Ljava/lang/Object;Lorg/apache/hadoop/io/retry/RetryPolicy;)Ljava/lang/Object;
+#create(Ljava/lang/Class;Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
@1.1.0
+#create(Ljava/lang/Class;Ljava/lang/Object;Lorg/apache/hadoop/io/retry/RetryPolicy;Ljava/util/Map;)Ljava/lang/Object;

+###org/apache/hadoop/io/retry/RetryUtils
@1.1.0
+#<init>()V
+#getDefaultRetryPolicy(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/hadoop/io/retry/RetryPolicy;
+#getMultipleLinearRandomRetry(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/retry/RetryPolicy;
@1.2.0
+#getDefaultRetryPolicy(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Class;)Lorg/apache/hadoop/io/retry/RetryPolicy;
-#getDefaultRetryPolicy(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/hadoop/io/retry/RetryPolicy;

+###org/apache/hadoop/io/serializer/Deserializer
@0.20.2
+#open(Ljava/io/InputStream;)V
+#deserialize(Ljava/lang/Object;)Ljava/lang/Object;
+#close()V

+###org/apache/hadoop/io/serializer/DeserializerComparator
@0.20.2
+#compare([BII[BII)I

+###org/apache/hadoop/io/serializer/JavaSerialization
@0.20.2
+#<init>()V
+#accept(Ljava/lang/Class;)Z
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;

+###org/apache/hadoop/io/serializer/JavaSerializationComparator
@0.20.2
+#<init>()V
+#compare(Ljava/io/Serializable;Ljava/io/Serializable;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/io/serializer/Serialization
@0.20.2
+#accept(Ljava/lang/Class;)Z
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;

+###org/apache/hadoop/io/serializer/SerializationFactory
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
+#getSerialization(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serialization;

+###org/apache/hadoop/io/serializer/Serializer
@0.20.2
+#open(Ljava/io/OutputStream;)V
+#serialize(Ljava/lang/Object;)V
+#close()V

+###org/apache/hadoop/io/serializer/WritableSerialization
@0.20.2
+#<init>()V
+#accept(Ljava/lang/Class;)Z
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;

+###org/apache/hadoop/ipc/Client
@0.20.2
+#setPingInterval(Lorg/apache/hadoop/conf/Configuration;I)V
+#<init>(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;)V
+#<init>(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
+#stop()V
+#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/io/Writable;[deprecated]
+#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/io/Writable;[deprecated]
+#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/io/Writable;
+#call([Lorg/apache/hadoop/io/Writable;[Ljava/net/InetSocketAddress;)[Lorg/apache/hadoop/io/Writable;[deprecated]
+#call([Lorg/apache/hadoop/io/Writable;[Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;)[Lorg/apache/hadoop/io/Writable;
@0.20.203.0
*#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/io/Writable;[deprecated]
+#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/Writable;
+#call(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/ipc/Client$ConnectionId;)Lorg/apache/hadoop/io/Writable;
*#call([Lorg/apache/hadoop/io/Writable;[Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;)[Lorg/apache/hadoop/io/Writable;[deprecated]
+#call([Lorg/apache/hadoop/io/Writable;[Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/io/Writable;
@0.20.205.0
+#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;I)Lorg/apache/hadoop/io/Writable;[deprecated]
+#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;ILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/Writable;
-#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/io/Writable;[deprecated]
-#call(Lorg/apache/hadoop/io/Writable;Ljava/net/InetSocketAddress;Ljava/lang/Class;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/Writable;
@1.1.1
+#getTimeout(Lorg/apache/hadoop/conf/Configuration;)I

+###org/apache/hadoop/ipc/RPC$Server
@0.20.2
+#<init>(Ljava/lang/Object;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;I)V
+#<init>(Ljava/lang/Object;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;IIZ)V
+#call(Ljava/lang/Class;Lorg/apache/hadoop/io/Writable;J)Lorg/apache/hadoop/io/Writable;
+#authorize(Ljavax/security/auth/Subject;Lorg/apache/hadoop/ipc/ConnectionHeader;)V
@0.20.203.0
+#<init>(Ljava/lang/Object;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;IIZLorg/apache/hadoop/security/token/SecretManager;)V
-#<init>(Ljava/lang/Object;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;IIZ)V
-#authorize(Ljavax/security/auth/Subject;Lorg/apache/hadoop/ipc/ConnectionHeader;)V

+###org/apache/hadoop/ipc/RPC$VersionMismatch
@0.20.2
+#<init>(Ljava/lang/String;JJ)V
+#getInterfaceName()Ljava/lang/String;
+#getClientVersion()J
+#getServerVersion()J

+###org/apache/hadoop/ipc/RPC
@0.20.2
+#waitForProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/ipc/VersionedProtocol;
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;)Lorg/apache/hadoop/ipc/VersionedProtocol;
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;)Lorg/apache/hadoop/ipc/VersionedProtocol;
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/ipc/VersionedProtocol;
+#stopProxy(Lorg/apache/hadoop/ipc/VersionedProtocol;)V
+#call(Ljava/lang/reflect/Method;[[Ljava/lang/Object;[Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/Object;
+#call(Ljava/lang/reflect/Method;[[Ljava/lang/Object;[Ljava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/Object;
+#getServer(Ljava/lang/Object;Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/ipc/RPC$Server;
+#getServer(Ljava/lang/Object;Ljava/lang/String;IIZLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/ipc/RPC$Server;
@0.20.203.0
+#getServer(Ljava/lang/Object;Ljava/lang/String;IIZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/token/SecretManager;)Lorg/apache/hadoop/ipc/RPC$Server;
@0.20.205.0
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;I)Lorg/apache/hadoop/ipc/VersionedProtocol;
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;I)Lorg/apache/hadoop/ipc/VersionedProtocol;
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ipc/VersionedProtocol;
@1.1.0
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;ILorg/apache/hadoop/io/retry/RetryPolicy;)Lorg/apache/hadoop/ipc/VersionedProtocol;
@1.2.0
+#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;ILorg/apache/hadoop/io/retry/RetryPolicy;Z)Lorg/apache/hadoop/ipc/VersionedProtocol;
+#checkVersion(Ljava/lang/Class;JLorg/apache/hadoop/ipc/VersionedProtocol;)V
-#getProxy(Ljava/lang/Class;JLjava/net/InetSocketAddress;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/conf/Configuration;Ljavax/net/SocketFactory;ILorg/apache/hadoop/io/retry/RetryPolicy;)Lorg/apache/hadoop/ipc/VersionedProtocol;

+###org/apache/hadoop/ipc/RemoteException
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getClassName()Ljava/lang/String;
+#unwrapRemoteException([Ljava/lang/Class;)Ljava/io/IOException;
+#unwrapRemoteException()Ljava/io/IOException;
+#writeXml(Ljava/lang/String;Lorg/znerd/xmlenc/XMLOutputter;)V
+#valueOf(Lorg/xml/sax/Attributes;)Lorg/apache/hadoop/ipc/RemoteException;
@0.20.203.0
-#writeXml(Ljava/lang/String;Lorg/znerd/xmlenc/XMLOutputter;)V

+###org/apache/hadoop/ipc/Server$Connection
@0.20.203.0
+#<init>(Lorg/apache/hadoop/ipc/Server;Ljava/nio/channels/SelectionKey;Ljava/nio/channels/SocketChannel;J)V
+#toString()Ljava/lang/String;
+#getHostAddress()Ljava/lang/String;
+#getHostInetAddress()Ljava/net/InetAddress;
+#setLastContact(J)V
+#getLastContact()J
+#readAndProcess()I

+###org/apache/hadoop/ipc/Server
@0.20.2
+#get()Lorg/apache/hadoop/ipc/Server;
+#getRemoteIp()Ljava/net/InetAddress;
+#getRemoteAddress()Ljava/lang/String;
+#bind(Ljava/net/ServerSocket;Ljava/net/InetSocketAddress;I)V
+#setSocketSendBufSize(I)V
+#start()V
+#stop()V
+#join()V
+#getListenerAddress()Ljava/net/InetSocketAddress;
+#call(Lorg/apache/hadoop/io/Writable;J)Lorg/apache/hadoop/io/Writable;[deprecated]
+#call(Ljava/lang/Class;Lorg/apache/hadoop/io/Writable;J)Lorg/apache/hadoop/io/Writable;
+#authorize(Ljavax/security/auth/Subject;Lorg/apache/hadoop/ipc/ConnectionHeader;)V
+#getNumOpenConnections()I
+#getCallQueueLen()I
@0.20.203.0
+#getRpcMetrics()Lorg/apache/hadoop/ipc/metrics/RpcInstrumentation;
+#authorize(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/ipc/ConnectionHeader;Ljava/net/InetAddress;)V
-#authorize(Ljavax/security/auth/Subject;Lorg/apache/hadoop/ipc/ConnectionHeader;)V
@1.2.0
+#addTerseExceptions([Ljava/lang/Class;)V

+###org/apache/hadoop/ipc/VersionedProtocol
@0.20.2
+#getProtocolVersion(Ljava/lang/String;J)J

+###org/apache/hadoop/ipc/metrics/RpcInstrumentation$Detailed
@0.20.203.0
+#addRpcProcessingTime(Ljava/lang/String;I)V

+###org/apache/hadoop/ipc/metrics/RpcInstrumentation
@0.20.203.0
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V
+#create(Ljava/lang/String;I)Lorg/apache/hadoop/ipc/metrics/RpcInstrumentation;
+#create(Ljava/lang/String;ILorg/apache/hadoop/metrics2/MetricsSystem;)Lorg/apache/hadoop/ipc/metrics/RpcInstrumentation;
+#detailed()Lorg/apache/hadoop/metrics2/MetricsSource;
+#incrAuthenticationFailures()V
+#incrAuthenticationSuccesses()V
+#incrAuthorizationSuccesses()V
+#incrAuthorizationFailures()V
+#shutdown()V
+#incrSentBytes(I)V
+#incrReceivedBytes(I)V
+#addRpcQueueTime(I)V
+#addRpcProcessingTime(I)V
+#addRpcProcessingTime(Ljava/lang/String;I)V

+###org/apache/hadoop/jmx/JMXJsonServlet
@0.20.204.0
+#<init>()V
+#init()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/log/EventCounter
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/log/LogLevel$Servlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/log/LogLevel
@0.20.2
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/log/metrics/EventCounter
@0.20.203.0
+#<init>()V
+#getFatal()J
+#getError()J
+#getWarn()J
+#getInfo()J
+#append(Lorg/apache/log4j/spi/LoggingEvent;)V
+#close()V
+#requiresLayout()Z

+###org/apache/hadoop/mapred/AdminOperationsProtocol
@0.20.203.0
+#refreshQueues()V
+#refreshNodes()V
@1.1.0
+#setSafeMode(Lorg/apache/hadoop/mapred/JobTracker$SafeModeAction;)Z

+###org/apache/hadoop/mapred/ClusterStatus
@0.20.2
+#getTaskTrackers()I
+#getActiveTrackerNames()Ljava/util/Collection;
+#getBlacklistedTrackerNames()Ljava/util/Collection;
+#getBlacklistedTrackers()I
+#getTTExpiryInterval()J
+#getMapTasks()I
+#getReduceTasks()I
+#getMaxMapTasks()I
+#getMaxReduceTasks()I
+#getJobTrackerState()Lorg/apache/hadoop/mapred/JobTracker$State;
+#getUsedMemory()J
+#getMaxMemory()J
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.20.203.0
+#getGraylistedTrackerNames()Ljava/util/Collection;
+#getGraylistedTrackers()I
+#getNumExcludedNodes()I
@1.2.0
*#getUsedMemory()J[deprecated]
*#getMaxMemory()J[deprecated]

+###org/apache/hadoop/mapred/Counters$Counter
@0.20.2
+#setDisplayName(Ljava/lang/String;)V
+#makeEscapedCompactString()Ljava/lang/String;
+#getCounter()J

+###org/apache/hadoop/mapred/Counters$CountersExceededException
@0.20.203.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/mapred/Counters$Group
@0.20.2
+#getName()Ljava/lang/String;
+#getDisplayName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#makeEscapedCompactString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getCounter(Ljava/lang/String;)J
+#getCounter(ILjava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;[deprecated]
+#getCounterForName(Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;
+#size()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#iterator()Ljava/util/Iterator;

+###org/apache/hadoop/mapred/Counters
@0.20.2
+#<init>()V
+#getGroupNames()Ljava/util/Collection;
+#iterator()Ljava/util/Iterator;
+#getGroup(Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Group;
+#findCounter(Ljava/lang/Enum;)Lorg/apache/hadoop/mapred/Counters$Counter;
+#findCounter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;
+#findCounter(Ljava/lang/String;ILjava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;[deprecated]
+#incrCounter(Ljava/lang/Enum;J)V
+#incrCounter(Ljava/lang/String;Ljava/lang/String;J)V
+#getCounter(Ljava/lang/Enum;)J
+#incrAllCounters(Lorg/apache/hadoop/mapred/Counters;)V
+#sum(Lorg/apache/hadoop/mapred/Counters;Lorg/apache/hadoop/mapred/Counters;)Lorg/apache/hadoop/mapred/Counters;
+#size()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#log(Lorg/apache/commons/logging/Log;)V
+#toString()Ljava/lang/String;
+#makeCompactString()Ljava/lang/String;
+#makeEscapedCompactString()Ljava/lang/String;
+#fromEscapedCompactString(Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/DefaultJobHistoryParser
@0.20.2
+#<init>()V
+#parseJobTasks(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobHistory$JobInfo;Lorg/apache/hadoop/fs/FileSystem;)V

+###org/apache/hadoop/mapred/DefaultTaskController
@0.20.203.0
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#launchTask(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)I
+#initializeJob(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;Ljava/net/InetSocketAddress;)V
+#signalTask(Ljava/lang/String;ILorg/apache/hadoop/util/ProcessTree$Signal;)V
+#deleteAsUser(Ljava/lang/String;Ljava/lang/String;)V
+#deleteLogAsUser(Ljava/lang/String;Ljava/lang/String;)V
+#truncateLogsAsUser(Ljava/lang/String;Ljava/util/List;)V
+#setup(Lorg/apache/hadoop/fs/LocalDirAllocator;)V
@0.20.204.0
+#createLogDir(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)V
+#setup(Lorg/apache/hadoop/fs/LocalDirAllocator;Lorg/apache/hadoop/mapred/TaskTracker$LocalStorage;)V
-#setup(Lorg/apache/hadoop/fs/LocalDirAllocator;)V

+###org/apache/hadoop/mapred/FileAlreadyExistsException
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/mapred/FileInputFormat$Counter
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapred/FileInputFormat$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/FileInputFormat$Counter;

+###org/apache/hadoop/mapred/FileInputFormat
@0.20.2
+#<init>()V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;
+#setInputPathFilter(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)V
+#getInputPathFilter(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/fs/PathFilter;
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#setInputPaths(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)V
+#addInputPaths(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)V
+#setInputPaths(Lorg/apache/hadoop/mapred/JobConf;[Lorg/apache/hadoop/fs/Path;)V
+#addInputPath(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;)V
+#getInputPaths(Lorg/apache/hadoop/mapred/JobConf;)[Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/mapred/FileOutputCommitter
@0.20.2
+#<init>()V
+#setupJob(Lorg/apache/hadoop/mapred/JobContext;)V
+#cleanupJob(Lorg/apache/hadoop/mapred/JobContext;)V
+#setupTask(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
+#commitTask(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
+#abortTask(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
+#needsTaskCommit(Lorg/apache/hadoop/mapred/TaskAttemptContext;)Z
@0.20.203.0
+#commitJob(Lorg/apache/hadoop/mapred/JobContext;)V
*#cleanupJob(Lorg/apache/hadoop/mapred/JobContext;)V[deprecated]
+#abortJob(Lorg/apache/hadoop/mapred/JobContext;I)V

+###org/apache/hadoop/mapred/FileOutputFormat$Counter
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapred/FileOutputFormat$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/FileOutputFormat$Counter;

+###org/apache/hadoop/mapred/FileOutputFormat
@0.20.2
+#<init>()V
+#setCompressOutput(Lorg/apache/hadoop/mapred/JobConf;Z)V
+#getCompressOutput(Lorg/apache/hadoop/mapred/JobConf;)Z
+#setOutputCompressorClass(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)V
+#getOutputCompressorClass(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)Ljava/lang/Class;
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;)V
+#setOutputPath(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;)V
+#getOutputPath(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/fs/Path;
+#getWorkOutputPath(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/fs/Path;
+#getTaskOutputPath(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getUniqueName(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Ljava/lang/String;
+#getPathForCustomFile(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/mapred/FileSplit
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/Path;JJLorg/apache/hadoop/mapred/JobConf;)V[deprecated]
+#<init>(Lorg/apache/hadoop/fs/Path;JJ[Ljava/lang/String;)V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#getStart()J
+#getLength()J
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#getLocations()[Ljava/lang/String;

+###org/apache/hadoop/mapred/HDFSMonitorThread
@1.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/JobTracker;Lorg/apache/hadoop/fs/FileSystem;)V
+#run()V

+###org/apache/hadoop/mapred/ID
@0.20.2
+#<init>(I)V

+###org/apache/hadoop/mapred/IFile$InMemoryReader
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/RamManager;Lorg/apache/hadoop/mapred/TaskAttemptID;[BII)V
+#getPosition()J
+#getLength()J
+#next(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/DataInputBuffer;)Z
+#close()V

+###org/apache/hadoop/mapred/IFile$Reader
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/mapred/Counters$Counter;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/mapred/Counters$Counter;)V
+#getLength()J
+#getPosition()J
+#next(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/DataInputBuffer;)Z
+#close()V

+###org/apache/hadoop/mapred/IFile$Writer
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/mapred/Counters$Counter;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/io/compress/CompressionCodec;Lorg/apache/hadoop/mapred/Counters$Counter;)V
+#close()V
+#append(Ljava/lang/Object;Ljava/lang/Object;)V
+#append(Lorg/apache/hadoop/io/DataInputBuffer;Lorg/apache/hadoop/io/DataInputBuffer;)V
+#getRawLength()J
+#getCompressedLength()J

+###org/apache/hadoop/mapred/InputFormat
@0.20.2
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/InputSplit
@0.20.2
+#getLength()J
+#getLocations()[Ljava/lang/String;

+###org/apache/hadoop/mapred/InvalidFileTypeException
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/mapred/InvalidInputException
@0.20.2
+#<init>(Ljava/util/List;)V
+#getProblems()Ljava/util/List;
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/mapred/InvalidJobConfException
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/mapred/IsolationRunner
@0.20.2
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/mapred/JobClient$Renewer
@0.20.205.0
+#<init>()V
+#handleKind(Lorg/apache/hadoop/io/Text;)Z
+#renew(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
+#cancel(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V
+#isManaged(Lorg/apache/hadoop/security/token/Token;)Z

+###org/apache/hadoop/mapred/JobClient$TaskStatusFilter
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/JobClient$TaskStatusFilter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobClient$TaskStatusFilter;

+###org/apache/hadoop/mapred/JobClient
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
+#init(Lorg/apache/hadoop/mapred/JobConf;)V
+#<init>(Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#getFs()Lorg/apache/hadoop/fs/FileSystem;
+#submitJob(Ljava/lang/String;)Lorg/apache/hadoop/mapred/RunningJob;
+#submitJob(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/RunningJob;
+#submitJobInternal(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/RunningJob;
+#isJobDirValid(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)Z
+#getJob(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/RunningJob;
+#getJob(Ljava/lang/String;)Lorg/apache/hadoop/mapred/RunningJob;[deprecated]
+#getMapTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getMapTaskReports(Ljava/lang/String;)[Lorg/apache/hadoop/mapred/TaskReport;[deprecated]
+#getReduceTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getCleanupTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getSetupTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getReduceTaskReports(Ljava/lang/String;)[Lorg/apache/hadoop/mapred/TaskReport;[deprecated]
+#displayTasks(Lorg/apache/hadoop/mapred/JobID;Ljava/lang/String;Ljava/lang/String;)V
+#getClusterStatus()Lorg/apache/hadoop/mapred/ClusterStatus;
+#getClusterStatus(Z)Lorg/apache/hadoop/mapred/ClusterStatus;
+#jobsToComplete()[Lorg/apache/hadoop/mapred/JobStatus;
+#getAllJobs()[Lorg/apache/hadoop/mapred/JobStatus;
+#runJob(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/RunningJob;
+#monitorAndPrintJob(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/RunningJob;)Z
+#setTaskOutputFilter(Lorg/apache/hadoop/mapred/JobClient$TaskStatusFilter;)V[deprecated]
+#getTaskOutputFilter(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/JobClient$TaskStatusFilter;
+#setTaskOutputFilter(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/JobClient$TaskStatusFilter;)V
+#getTaskOutputFilter()Lorg/apache/hadoop/mapred/JobClient$TaskStatusFilter;[deprecated]
+#run([Ljava/lang/String;)I
+#getDefaultMaps()I
+#getDefaultReduces()I
+#getSystemDir()Lorg/apache/hadoop/fs/Path;
+#getQueues()[Lorg/apache/hadoop/mapred/JobQueueInfo;
+#getJobsFromQueue(Ljava/lang/String;)[Lorg/apache/hadoop/mapred/JobStatus;
+#getQueueInfo(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobQueueInfo;
+#main([Ljava/lang/String;)V
@0.20.203.0
+#getStagingAreaDir()Lorg/apache/hadoop/fs/Path;
+#getQueueAclsForCurrentUser()[Lorg/apache/hadoop/mapred/QueueAclsInfo;
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V

+###org/apache/hadoop/mapred/JobConf
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/fs/Path;)V
+#<init>(Z)V
+#getJar()Ljava/lang/String;
+#setJar(Ljava/lang/String;)V
+#setJarByClass(Ljava/lang/Class;)V
+#getLocalDirs()[Ljava/lang/String;
+#deleteLocalFiles()V
+#deleteLocalFiles(Ljava/lang/String;)V
+#getLocalPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getUser()Ljava/lang/String;
+#setUser(Ljava/lang/String;)V
+#setKeepFailedTaskFiles(Z)V
+#getKeepFailedTaskFiles()Z
+#setKeepTaskFilesPattern(Ljava/lang/String;)V
+#getKeepTaskFilesPattern()Ljava/lang/String;
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#setNumTasksToExecutePerJvm(I)V
+#getNumTasksToExecutePerJvm()I
+#getInputFormat()Lorg/apache/hadoop/mapred/InputFormat;
+#setInputFormat(Ljava/lang/Class;)V
+#getOutputFormat()Lorg/apache/hadoop/mapred/OutputFormat;
+#getOutputCommitter()Lorg/apache/hadoop/mapred/OutputCommitter;
+#setOutputCommitter(Ljava/lang/Class;)V
+#setOutputFormat(Ljava/lang/Class;)V
+#setCompressMapOutput(Z)V
+#getCompressMapOutput()Z
+#setMapOutputCompressorClass(Ljava/lang/Class;)V
+#getMapOutputCompressorClass(Ljava/lang/Class;)Ljava/lang/Class;
+#getMapOutputKeyClass()Ljava/lang/Class;
+#setMapOutputKeyClass(Ljava/lang/Class;)V
+#getMapOutputValueClass()Ljava/lang/Class;
+#setMapOutputValueClass(Ljava/lang/Class;)V
+#getOutputKeyClass()Ljava/lang/Class;
+#setOutputKeyClass(Ljava/lang/Class;)V
+#getOutputKeyComparator()Lorg/apache/hadoop/io/RawComparator;
+#setOutputKeyComparatorClass(Ljava/lang/Class;)V
+#setKeyFieldComparatorOptions(Ljava/lang/String;)V
+#getKeyFieldComparatorOption()Ljava/lang/String;
+#setKeyFieldPartitionerOptions(Ljava/lang/String;)V
+#getKeyFieldPartitionerOption()Ljava/lang/String;
+#getOutputValueGroupingComparator()Lorg/apache/hadoop/io/RawComparator;
+#setOutputValueGroupingComparator(Ljava/lang/Class;)V
+#getUseNewMapper()Z
+#setUseNewMapper(Z)V
+#getUseNewReducer()Z
+#setUseNewReducer(Z)V
+#getOutputValueClass()Ljava/lang/Class;
+#setOutputValueClass(Ljava/lang/Class;)V
+#getMapperClass()Ljava/lang/Class;
+#setMapperClass(Ljava/lang/Class;)V
+#getMapRunnerClass()Ljava/lang/Class;
+#setMapRunnerClass(Ljava/lang/Class;)V
+#getPartitionerClass()Ljava/lang/Class;
+#setPartitionerClass(Ljava/lang/Class;)V
+#getReducerClass()Ljava/lang/Class;
+#setReducerClass(Ljava/lang/Class;)V
+#getCombinerClass()Ljava/lang/Class;
+#setCombinerClass(Ljava/lang/Class;)V
+#getSpeculativeExecution()Z
+#setSpeculativeExecution(Z)V
+#getMapSpeculativeExecution()Z
+#setMapSpeculativeExecution(Z)V
+#getReduceSpeculativeExecution()Z
+#setReduceSpeculativeExecution(Z)V
+#getNumMapTasks()I
+#setNumMapTasks(I)V
+#getNumReduceTasks()I
+#setNumReduceTasks(I)V
+#getMaxMapAttempts()I
+#setMaxMapAttempts(I)V
+#getMaxReduceAttempts()I
+#setMaxReduceAttempts(I)V
+#getJobName()Ljava/lang/String;
+#setJobName(Ljava/lang/String;)V
+#getSessionId()Ljava/lang/String;
+#setSessionId(Ljava/lang/String;)V
+#setMaxTaskFailuresPerTracker(I)V
+#getMaxTaskFailuresPerTracker()I
+#getMaxMapTaskFailuresPercent()I
+#setMaxMapTaskFailuresPercent(I)V
+#getMaxReduceTaskFailuresPercent()I
+#setMaxReduceTaskFailuresPercent(I)V
+#setJobPriority(Lorg/apache/hadoop/mapred/JobPriority;)V
+#getJobPriority()Lorg/apache/hadoop/mapred/JobPriority;
+#getProfileEnabled()Z
+#setProfileEnabled(Z)V
+#getProfileParams()Ljava/lang/String;
+#setProfileParams(Ljava/lang/String;)V
+#getProfileTaskRange(Z)Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
+#setProfileTaskRange(ZLjava/lang/String;)V
+#setMapDebugScript(Ljava/lang/String;)V
+#getMapDebugScript()Ljava/lang/String;
+#setReduceDebugScript(Ljava/lang/String;)V
+#getReduceDebugScript()Ljava/lang/String;
+#getJobEndNotificationURI()Ljava/lang/String;
+#setJobEndNotificationURI(Ljava/lang/String;)V
+#getJobLocalDir()Ljava/lang/String;
+#getMemoryForMapTask()J
+#setMemoryForMapTask(J)V
+#getMemoryForReduceTask()J
+#setMemoryForReduceTask(J)V
+#getQueueName()Ljava/lang/String;
+#setQueueName(Ljava/lang/String;)V
+#normalizeMemoryConfigValue(J)J
+#getMaxVirtualMemoryForTask()J[deprecated]
+#setMaxVirtualMemoryForTask(J)V[deprecated]
+#getMaxPhysicalMemoryForTask()J[deprecated]
+#setMaxPhysicalMemoryForTask(J)V[deprecated]
@0.20.203.0
+#getCredentials()Lorg/apache/hadoop/security/Credentials;

+###org/apache/hadoop/mapred/JobConfigurable
@0.20.2
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/JobContext
@0.20.2
+#getJobConf()Lorg/apache/hadoop/mapred/JobConf;
+#getProgressible()Lorg/apache/hadoop/util/Progressable;

+###org/apache/hadoop/mapred/JobEndNotifier
@0.20.2
+#<init>()V
+#startNotifier()V
+#stopNotifier()V
+#registerNotification(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/JobStatus;)V
+#localRunnerNotification(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/JobStatus;)V

+###org/apache/hadoop/mapred/JobHistory$HistoryCleaner
@0.20.2
+#<init>()V
+#run()V
@1.2.0
+#clean(J)V

+###org/apache/hadoop/mapred/JobHistory$JobInfo
@0.20.2
+#<init>(Ljava/lang/String;)V
+#getAllTasks()Ljava/util/Map;
+#getLocalJobFilePath(Lorg/apache/hadoop/mapred/JobID;)Ljava/lang/String;
+#encodeJobHistoryFilePath(Ljava/lang/String;)Ljava/lang/String;
+#encodeJobHistoryFileName(Ljava/lang/String;)Ljava/lang/String;
+#decodeJobHistoryFileName(Ljava/lang/String;)Ljava/lang/String;
+#getUserName(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/String;
+#getJobHistoryLogLocation(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getJobHistoryLogLocationForUser(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/fs/Path;
+#getJobHistoryFileName(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/JobID;)Ljava/lang/String;
+#recoverJobHistoryFile(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#logSubmitted(Lorg/apache/hadoop/mapred/JobID;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;J)V[deprecated]
+#logSubmitted(Lorg/apache/hadoop/mapred/JobID;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;JZ)V
+#logInited(Lorg/apache/hadoop/mapred/JobID;JII)V
+#logStarted(Lorg/apache/hadoop/mapred/JobID;JII)V[deprecated]
+#logStarted(Lorg/apache/hadoop/mapred/JobID;)V
+#logFinished(Lorg/apache/hadoop/mapred/JobID;JIIIILorg/apache/hadoop/mapred/Counters;)V
+#logFailed(Lorg/apache/hadoop/mapred/JobID;JII)V
+#logKilled(Lorg/apache/hadoop/mapred/JobID;JII)V
+#logJobPriority(Lorg/apache/hadoop/mapred/JobID;Lorg/apache/hadoop/mapred/JobPriority;)V
+#logJobInfo(Lorg/apache/hadoop/mapred/JobID;JJI)V[deprecated]
+#logJobInfo(Lorg/apache/hadoop/mapred/JobID;JJ)V
+#getValues()Ljava/util/Map;
+#handle(Ljava/util/Map;)V
+#set(Ljava/util/Map;)V
+#set(Lorg/apache/hadoop/mapred/JobHistory$Keys;Ljava/lang/String;)V
+#getLong(Lorg/apache/hadoop/mapred/JobHistory$Keys;)J
+#getInt(Lorg/apache/hadoop/mapred/JobHistory$Keys;)I
+#get(Lorg/apache/hadoop/mapred/JobHistory$Keys;)Ljava/lang/String;
@0.20.203.0
+#getJobACLs()Ljava/util/Map;
+#logFinished(Lorg/apache/hadoop/mapred/JobID;JIIIILorg/apache/hadoop/mapred/Counters;Lorg/apache/hadoop/mapred/Counters;Lorg/apache/hadoop/mapred/Counters;)V
-#logFinished(Lorg/apache/hadoop/mapred/JobID;JIIIILorg/apache/hadoop/mapred/Counters;)V
@0.20.204.0
+#logFailed(Lorg/apache/hadoop/mapred/JobID;JIILjava/lang/String;)V
-#logFailed(Lorg/apache/hadoop/mapred/JobID;JII)V
@1.2.0
+#getWorkflowAdjacencies(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;

+###org/apache/hadoop/mapred/JobHistory$Keys
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/JobHistory$Keys;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobHistory$Keys;

+###org/apache/hadoop/mapred/JobHistory$Listener
@0.20.2
+#handle(Lorg/apache/hadoop/mapred/JobHistory$RecordTypes;Ljava/util/Map;)V

+###org/apache/hadoop/mapred/JobHistory$MapAttempt
@0.20.2
+#<init>()V
+#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;)V[deprecated]
+#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;ILjava/lang/String;)V
+#logFinished(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;)V[deprecated]
+#logFinished(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/Counters;)V
+#logFailed(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;)V[deprecated]
+#logFailed(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#logKilled(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;)V[deprecated]
+#logKilled(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.2.0
*#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;ILjava/lang/String;)V[deprecated]
+#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;ILjava/lang/String;Lorg/apache/hadoop/mapred/Locality;Lorg/apache/hadoop/mapred/Avataar;)V

+###org/apache/hadoop/mapred/JobHistory$RecordTypes
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/JobHistory$RecordTypes;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobHistory$RecordTypes;

+###org/apache/hadoop/mapred/JobHistory$ReduceAttempt
@0.20.2
+#<init>()V
+#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;)V[deprecated]
+#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;ILjava/lang/String;)V
+#logFinished(Lorg/apache/hadoop/mapred/TaskAttemptID;JJJLjava/lang/String;)V[deprecated]
+#logFinished(Lorg/apache/hadoop/mapred/TaskAttemptID;JJJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/Counters;)V
+#logFailed(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;)V[deprecated]
+#logFailed(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#logKilled(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;)V[deprecated]
+#logKilled(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@1.2.0
*#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;ILjava/lang/String;)V[deprecated]
+#logStarted(Lorg/apache/hadoop/mapred/TaskAttemptID;JLjava/lang/String;ILjava/lang/String;Lorg/apache/hadoop/mapred/Locality;Lorg/apache/hadoop/mapred/Avataar;)V

+###org/apache/hadoop/mapred/JobHistory$Task
@0.20.2
+#<init>()V
+#logStarted(Lorg/apache/hadoop/mapred/TaskID;Ljava/lang/String;JLjava/lang/String;)V
+#logFinished(Lorg/apache/hadoop/mapred/TaskID;Ljava/lang/String;JLorg/apache/hadoop/mapred/Counters;)V
+#logUpdates(Lorg/apache/hadoop/mapred/TaskID;J)V
+#logFailed(Lorg/apache/hadoop/mapred/TaskID;Ljava/lang/String;JLjava/lang/String;)V
+#logFailed(Lorg/apache/hadoop/mapred/TaskID;Ljava/lang/String;JLjava/lang/String;Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#getTaskAttempts()Ljava/util/Map;
+#getValues()Ljava/util/Map;
+#handle(Ljava/util/Map;)V
+#set(Ljava/util/Map;)V
+#set(Lorg/apache/hadoop/mapred/JobHistory$Keys;Ljava/lang/String;)V
+#getLong(Lorg/apache/hadoop/mapred/JobHistory$Keys;)J
+#getInt(Lorg/apache/hadoop/mapred/JobHistory$Keys;)I
+#get(Lorg/apache/hadoop/mapred/JobHistory$Keys;)Ljava/lang/String;

+###org/apache/hadoop/mapred/JobHistory$TaskAttempt
@0.20.2
+#<init>()V

+###org/apache/hadoop/mapred/JobHistory$Values
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/JobHistory$Values;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobHistory$Values;

+###org/apache/hadoop/mapred/JobHistory
@0.20.2
+#<init>()V
+#init(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;J)Z
+#parseHistoryFromFS(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobHistory$Listener;Lorg/apache/hadoop/fs/FileSystem;)V
+#isDisableHistory()Z
+#setDisableHistory(Z)V
+#getTaskLogsUrl(Lorg/apache/hadoop/mapred/JobHistory$TaskAttempt;)Ljava/lang/String;
@0.20.203.0
+#getHistoryFilePath(Lorg/apache/hadoop/mapred/JobID;)Ljava/lang/String;
+#init(Lorg/apache/hadoop/mapred/JobTracker;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;J)V
-#init(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;J)Z
-#isDisableHistory()Z
-#setDisableHistory(Z)V

+###org/apache/hadoop/mapred/JobHistoryServer
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
+#<init>(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/ACLsManager;Lorg/apache/hadoop/http/HttpServer;)V
+#start()V
+#join()V
+#shutdown()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/mapred/JobID
@0.20.2
+#<init>(Ljava/lang/String;I)V
+#<init>()V
+#downgrade(Lorg/apache/hadoop/mapreduce/JobID;)Lorg/apache/hadoop/mapred/JobID;
+#read(Ljava/io/DataInput;)Lorg/apache/hadoop/mapred/JobID;[deprecated]
+#forName(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobID;
+#getJobIDsPattern(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/String;[deprecated]

+###org/apache/hadoop/mapred/JobInProgress$Counter
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/JobInProgress$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobInProgress$Counter;

+###org/apache/hadoop/mapred/JobInProgress
@0.20.203.0
+#cleanUpMetrics()V
+#inited()Z
+#getUser()Ljava/lang/String;
+#initTasks()V
+#getProfile()Lorg/apache/hadoop/mapred/JobProfile;
+#getStatus()Lorg/apache/hadoop/mapred/JobStatus;
+#getLaunchTime()J
+#getStartTime()J
+#getFinishTime()J
+#desiredMaps()I
+#finishedMaps()I
+#desiredReduces()I
+#runningMaps()I
+#runningReduces()I
+#finishedReduces()I
+#pendingMaps()I
+#pendingReduces()I
+#desiredTasks()I
+#getNumSlotsPerTask(Lorg/apache/hadoop/mapreduce/TaskType;)I
+#getPriority()Lorg/apache/hadoop/mapred/JobPriority;
+#setPriority(Lorg/apache/hadoop/mapred/JobPriority;)V
+#reportTasksInProgress(ZZ)Ljava/util/Vector;
+#reportCleanupTIPs(Z)Ljava/util/Vector;
+#reportSetupTIPs(Z)Ljava/util/Vector;
+#updateTaskStatus(Lorg/apache/hadoop/mapred/TaskInProgress;Lorg/apache/hadoop/mapred/TaskStatus;)V
+#getJobCounters()Lorg/apache/hadoop/mapred/Counters;
+#getMapCounters(Lorg/apache/hadoop/mapred/Counters;)Z
+#getReduceCounters(Lorg/apache/hadoop/mapred/Counters;)Z
+#getCounters(Lorg/apache/hadoop/mapred/Counters;)Z
+#obtainNewMapTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;II)Lorg/apache/hadoop/mapred/Task;
+#obtainTaskCleanupTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;Z)Lorg/apache/hadoop/mapred/Task;
+#obtainNewLocalMapTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;II)Lorg/apache/hadoop/mapred/Task;
+#obtainNewNonLocalMapTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;II)Lorg/apache/hadoop/mapred/Task;
+#schedulingOpportunity()V
+#resetSchedulingOpportunities()V
+#getNumSchedulingOpportunities()J
+#overrideSchedulingOpportunities()V
+#scheduleOffSwitch(I)Z
+#obtainJobCleanupTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;IIZ)Lorg/apache/hadoop/mapred/Task;
+#obtainJobSetupTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;IIZ)Lorg/apache/hadoop/mapred/Task;
+#scheduleReduces()Z
+#obtainNewReduceTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;II)Lorg/apache/hadoop/mapred/Task;
+#reserveTaskTracker(Lorg/apache/hadoop/mapreduce/server/jobtracker/TaskTracker;Lorg/apache/hadoop/mapreduce/TaskType;I)V
+#unreserveTaskTracker(Lorg/apache/hadoop/mapreduce/server/jobtracker/TaskTracker;Lorg/apache/hadoop/mapreduce/TaskType;)V
+#getNumReservedTaskTrackersForMaps()I
+#getNumReservedTaskTrackersForReduces()I
+#completedTask(Lorg/apache/hadoop/mapred/TaskInProgress;Lorg/apache/hadoop/mapred/TaskStatus;)Z
+#kill()V
+#failedTask(Lorg/apache/hadoop/mapred/TaskInProgress;Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskStatus$Phase;Lorg/apache/hadoop/mapred/TaskStatus$State;Ljava/lang/String;)V
+#getTaskInProgress(Lorg/apache/hadoop/mapred/TaskID;)Lorg/apache/hadoop/mapred/TaskInProgress;
+#findFinishedMap(I)Lorg/apache/hadoop/mapred/TaskStatus;
+#getTaskCompletionEvents(II)[Lorg/apache/hadoop/mapred/TaskCompletionEvent;
+#getJobID()Lorg/apache/hadoop/mapred/JobID;
+#getJobSubmitHostName()Ljava/lang/String;
+#getJobSubmitHostAddress()Ljava/lang/String;
+#getSchedulingInfo()Ljava/lang/Object;
+#setSchedulingInfo(Ljava/lang/Object;)V
@0.20.204.0
+#getQueueMetrics()Lorg/apache/hadoop/mapred/QueueMetrics;
@0.20.205.0
+#obtainNewNodeLocalMapTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;II)Lorg/apache/hadoop/mapred/Task;
+#obtainNewNodeOrRackLocalMapTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;II)Lorg/apache/hadoop/mapred/Task;
-#obtainNewLocalMapTask(Lorg/apache/hadoop/mapred/TaskTrackerStatus;II)Lorg/apache/hadoop/mapred/Task;
@1.2.0
+#obtainNewMapTaskCommon(Lorg/apache/hadoop/mapred/TaskTrackerStatus;III)Lorg/apache/hadoop/mapred/Task;

+###org/apache/hadoop/mapred/JobLocalizer
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#createLocalDirs()V
+#createUserDirs()V
+#createJobDirs()V
+#initializeJobLogDir()V
+#downloadPrivateCache(Lorg/apache/hadoop/conf/Configuration;)[J
+#localizeJobFiles(Lorg/apache/hadoop/mapreduce/JobID;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
+#localizeJobFiles(Lorg/apache/hadoop/mapreduce/JobID;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
+#createWorkDir(Lorg/apache/hadoop/mapred/JobConf;)V
+#findCredentials()Lorg/apache/hadoop/fs/Path;
+#runSetup(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)I
+#main([Ljava/lang/String;)V
+#writeLocalJobFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/JobPriority
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/JobPriority;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobPriority;

+###org/apache/hadoop/mapred/JobProfile
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/JobID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/JobID;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#getUser()Ljava/lang/String;
+#getJobID()Lorg/apache/hadoop/mapred/JobID;
+#getJobId()Ljava/lang/String;[deprecated]
+#getJobFile()Ljava/lang/String;
+#getURL()Ljava/net/URL;
+#getJobName()Ljava/lang/String;
+#getQueueName()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/JobQueueInfo
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setQueueName(Ljava/lang/String;)V
+#getQueueName()Ljava/lang/String;
+#setSchedulingInfo(Ljava/lang/String;)V
+#getSchedulingInfo()Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
@0.20.203.0
+#setQueueState(Ljava/lang/String;)V
+#getQueueState()Ljava/lang/String;

+###org/apache/hadoop/mapred/JobStatus
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/mapred/JobID;FFFI)V
+#<init>(Lorg/apache/hadoop/mapred/JobID;FFI)V
+#<init>(Lorg/apache/hadoop/mapred/JobID;FFFILorg/apache/hadoop/mapred/JobPriority;)V
+#<init>(Lorg/apache/hadoop/mapred/JobID;FFFFILorg/apache/hadoop/mapred/JobPriority;)V
+#getJobId()Ljava/lang/String;[deprecated]
+#getJobID()Lorg/apache/hadoop/mapred/JobID;
+#mapProgress()F
+#cleanupProgress()F
+#setupProgress()F
+#reduceProgress()F
+#getRunState()I
+#setRunState(I)V
+#getStartTime()J
+#clone()Ljava/lang/Object;
+#getUsername()Ljava/lang/String;
+#getSchedulingInfo()Ljava/lang/String;
+#setSchedulingInfo(Ljava/lang/String;)V
+#getJobPriority()Lorg/apache/hadoop/mapred/JobPriority;
+#setJobPriority(Lorg/apache/hadoop/mapred/JobPriority;)V
+#isJobComplete()Z
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.20.203.0
+#getJobRunState(I)Ljava/lang/String;
+#getFailureInfo()Ljava/lang/String;
+#setFailureInfo(Ljava/lang/String;)V
+#getJobACLs()Ljava/util/Map;

+###org/apache/hadoop/mapred/JobTracker$IllegalStateException
@0.20.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/mapred/JobTracker$SafeModeAction
@1.1.0
+#values()[Lorg/apache/hadoop/mapred/JobTracker$SafeModeAction;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobTracker$SafeModeAction;

+###org/apache/hadoop/mapred/JobTracker$State
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/JobTracker$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobTracker$State;

+###org/apache/hadoop/mapred/JobTracker
@0.20.2
+#startTracker(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/JobTracker;
+#startTracker(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobTracker;
+#stopTracker()V
+#getProtocolVersion(Ljava/lang/String;J)J
+#hasRestarted()Z
+#hasRecovered()Z
+#getRecoveryDuration()J
+#getInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
+#setInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
+#getAddress(Lorg/apache/hadoop/conf/Configuration;)Ljava/net/InetSocketAddress;
+#offerService()V
+#getTotalSubmissions()I
+#getJobTrackerMachine()Ljava/lang/String;
+#getTrackerIdentifier()Ljava/lang/String;
+#getTrackerPort()I
+#getInfoPort()I
+#getStartTime()J
+#runningJobs()Ljava/util/Vector;
+#getRunningJobs()Ljava/util/List;
+#failedJobs()Ljava/util/Vector;
+#completedJobs()Ljava/util/Vector;
+#taskTrackers()Ljava/util/Collection;
+#activeTaskTrackers()Ljava/util/Collection;
+#taskTrackerNames()Ljava/util/List;
+#blacklistedTaskTrackers()Ljava/util/Collection;
+#isBlacklisted(Ljava/lang/String;)Z
+#getTaskTracker(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskTrackerStatus;
+#resolveAndAddToTopology(Ljava/lang/String;)Lorg/apache/hadoop/net/Node;
+#getNodesAtMaxLevel()Ljava/util/Collection;
+#getParentNode(Lorg/apache/hadoop/net/Node;I)Lorg/apache/hadoop/net/Node;
+#getNode(Ljava/lang/String;)Lorg/apache/hadoop/net/Node;
+#getNumTaskCacheLevels()I
+#getNumResolvedTaskTrackers()I
+#getNumberOfUniqueHosts()I
+#addJobInProgressListener(Lorg/apache/hadoop/mapred/JobInProgressListener;)V
+#removeJobInProgressListener(Lorg/apache/hadoop/mapred/JobInProgressListener;)V
+#getQueueManager()Lorg/apache/hadoop/mapred/QueueManager;
+#getBuildVersion()Ljava/lang/String;
+#heartbeat(Lorg/apache/hadoop/mapred/TaskTrackerStatus;ZZZS)Lorg/apache/hadoop/mapred/HeartbeatResponse;
+#getNextHeartbeatInterval()I
+#getFilesystemName()Ljava/lang/String;
+#reportTaskTrackerError(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getNewJobId()Lorg/apache/hadoop/mapred/JobID;
+#submitJob(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/JobStatus;
+#getClusterStatus()Lorg/apache/hadoop/mapred/ClusterStatus;[deprecated]
+#getClusterStatus(Z)Lorg/apache/hadoop/mapred/ClusterStatus;
+#killJob(Lorg/apache/hadoop/mapred/JobID;)V
+#initJob(Lorg/apache/hadoop/mapred/JobInProgress;)V
+#failJob(Lorg/apache/hadoop/mapred/JobInProgress;)V
+#setJobPriority(Lorg/apache/hadoop/mapred/JobID;Ljava/lang/String;)V
+#getJobProfile(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/JobProfile;
+#getJobStatus(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/JobStatus;
+#getJobCounters(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/Counters;
+#getMapTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getReduceTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getCleanupTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getSetupTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getTaskCompletionEvents(Lorg/apache/hadoop/mapred/JobID;II)[Lorg/apache/hadoop/mapred/TaskCompletionEvent;
+#getTaskDiagnostics(Lorg/apache/hadoop/mapred/TaskAttemptID;)[Ljava/lang/String;
+#getTip(Lorg/apache/hadoop/mapred/TaskID;)Lorg/apache/hadoop/mapred/TaskInProgress;
+#killTask(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Z
+#getAssignedTracker(Lorg/apache/hadoop/mapred/TaskAttemptID;)Ljava/lang/String;
+#jobsToComplete()[Lorg/apache/hadoop/mapred/JobStatus;
+#getAllJobs()[Lorg/apache/hadoop/mapred/JobStatus;
+#getSystemDir()Ljava/lang/String;
+#getJob(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/JobInProgress;
+#getLocalJobFilePath(Lorg/apache/hadoop/mapred/JobID;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
+#getQueues()[Lorg/apache/hadoop/mapred/JobQueueInfo;
+#getQueueInfo(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobQueueInfo;
+#getJobsFromQueue(Ljava/lang/String;)[Lorg/apache/hadoop/mapred/JobStatus;
+#refreshServiceAcl()V
@0.20.203.0
+#getClock()Lorg/apache/hadoop/mapred/Clock;
+#getDelegationTokenSecretManager()Lorg/apache/hadoop/mapreduce/security/token/delegation/DelegationTokenSecretManager;
+#graylistedTaskTrackers()Ljava/util/Collection;
+#isGraylisted(Ljava/lang/String;)Z
+#getTaskTrackerStatus(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskTrackerStatus;
+#getTaskTracker(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/server/jobtracker/TaskTracker;
+#getConf()Lorg/apache/hadoop/mapred/JobConf;
+#submitJob(Lorg/apache/hadoop/mapred/JobID;Ljava/lang/String;Lorg/apache/hadoop/security/Credentials;)Lorg/apache/hadoop/mapred/JobStatus;
+#getStagingAreaDir()Ljava/lang/String;
+#getClusterMetrics()Lorg/apache/hadoop/mapreduce/ClusterMetrics;
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J
+#getQueueAdmins(Ljava/lang/String;)Lorg/apache/hadoop/security/authorize/AccessControlList;
+#refreshNodes()V
+#getQueueAclsForCurrentUser()[Lorg/apache/hadoop/mapred/QueueAclsInfo;
+#refreshSuperUserGroupsConfiguration()V
+#refreshUserToGroupsMappings()V
+#refreshQueues()V
+#getReasonsForBlacklisting(Ljava/lang/String;)Ljava/lang/String;
+#getReasonsForGraylisting(Ljava/lang/String;)Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getConfigVersion()Ljava/lang/String;
+#getThreadCount()I
+#getSummaryJson()Ljava/lang/String;
+#getAliveNodesInfoJson()Ljava/lang/String;
+#getBlacklistedNodesInfoJson()Ljava/lang/String;
+#getGraylistedNodesInfoJson()Ljava/lang/String;
+#getQueueInfoJson()Ljava/lang/String;
-#getInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#setInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
-#getTaskTracker(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskTrackerStatus;
-#submitJob(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/JobStatus;
@1.1.0
+#startTracker(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Z)Lorg/apache/hadoop/mapred/JobTracker;
+#getVIVersion()Ljava/lang/String;
+#submitJob(Lorg/apache/hadoop/mapred/JobID;Ljava/lang/String;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/security/Credentials;Z)Lorg/apache/hadoop/mapred/JobStatus;
+#setSafeMode(Lorg/apache/hadoop/mapred/JobTracker$SafeModeAction;)Z
+#isInSafeMode()Z
@1.2.0
+#isNodeGroupAware()Z
-#submitJob(Lorg/apache/hadoop/mapred/JobID;Ljava/lang/String;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/security/Credentials;Z)Lorg/apache/hadoop/mapred/JobStatus;

+###org/apache/hadoop/mapred/JobTrackerMXBean
@0.20.203.0
+#getHostname()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getConfigVersion()Ljava/lang/String;
+#getThreadCount()I
+#getSummaryJson()Ljava/lang/String;
+#getAliveNodesInfoJson()Ljava/lang/String;
+#getBlacklistedNodesInfoJson()Ljava/lang/String;
+#getGraylistedNodesInfoJson()Ljava/lang/String;
+#getQueueInfoJson()Ljava/lang/String;

+###org/apache/hadoop/mapred/JvmTask
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapred/Task;Z)V
+#<init>()V
+#getTask()Lorg/apache/hadoop/mapred/Task;
+#shouldDie()Z
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/KeyValueLineRecordReader
@0.20.2
+#getKeyClass()Ljava/lang/Class;
+#createKey()Lorg/apache/hadoop/io/Text;
+#createValue()Lorg/apache/hadoop/io/Text;
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/FileSplit;)V
+#findSeparator([BIIB)I
+#next(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)Z
+#getProgress()F
+#getPos()J
+#close()V
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/KeyValueTextInputFormat
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/LineRecordReader$LineReader
@0.20.2
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/mapred/LineRecordReader
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/FileSplit;)V
+#<init>(Ljava/io/InputStream;JJI)V
+#<init>(Ljava/io/InputStream;JJLorg/apache/hadoop/conf/Configuration;)V
+#createKey()Lorg/apache/hadoop/io/LongWritable;
+#createValue()Lorg/apache/hadoop/io/Text;
+#next(Lorg/apache/hadoop/io/LongWritable;Lorg/apache/hadoop/io/Text;)Z
+#getProgress()F
+#getPos()J
+#close()V
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/MapFileOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#getReaders(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/io/MapFile$Reader;
+#getEntry([Lorg/apache/hadoop/io/MapFile$Reader;Lorg/apache/hadoop/mapred/Partitioner;Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Lorg/apache/hadoop/io/Writable;

+###org/apache/hadoop/mapred/MapReduceBase
@0.20.2
+#<init>()V
+#close()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/MapReducePolicyProvider
@0.20.2
+#<init>()V
+#getServices()[Lorg/apache/hadoop/security/authorize/Service;

+###org/apache/hadoop/mapred/MapRunnable
@0.20.2
+#run(Lorg/apache/hadoop/mapred/RecordReader;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/MapRunner
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#run(Lorg/apache/hadoop/mapred/RecordReader;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/MapTask$MapOutputBuffer$BlockingBuffer
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/MapTask$MapOutputBuffer;)V
+#markRecord()I

+###org/apache/hadoop/mapred/MapTask$MapOutputBuffer$Buffer
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/MapTask$MapOutputBuffer;)V
+#write(I)V
+#write([BII)V

+###org/apache/hadoop/mapred/MapTask$MapOutputBuffer$InMemValBytes
@0.20.2
+#reset([BII)V

+###org/apache/hadoop/mapred/MapTask$MapOutputBuffer$MRResultIterator
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/MapTask$MapOutputBuffer;II)V
+#next()Z
+#getKey()Lorg/apache/hadoop/io/DataInputBuffer;
+#getValue()Lorg/apache/hadoop/io/DataInputBuffer;
+#getProgress()Lorg/apache/hadoop/util/Progress;
+#close()V

+###org/apache/hadoop/mapred/MapTask$MapOutputBuffer$SpillThread
@0.20.2
+#run()V

+###org/apache/hadoop/mapred/MapTaskCompletionEventsUpdate
@0.20.203.0
+#<init>()V
+#<init>([Lorg/apache/hadoop/mapred/TaskCompletionEvent;Z)V
+#shouldReset()Z
+#getMapTaskCompletionEvents()[Lorg/apache/hadoop/mapred/TaskCompletionEvent;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/Mapper
@0.20.2
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/Merger$Segment
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/io/compress/CompressionCodec;Z)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJLorg/apache/hadoop/io/compress/CompressionCodec;Z)V
+#<init>(Lorg/apache/hadoop/mapred/IFile$Reader;Z)V
+#getPosition()J
@1.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/io/compress/CompressionCodec;ZJ)V
+#<init>(Lorg/apache/hadoop/mapred/IFile$Reader;ZJ)V

+###org/apache/hadoop/mapred/MultiFileInputFormat
@0.20.2
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/MultiFileSplit
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/JobConf;[Lorg/apache/hadoop/fs/Path;[J)V
+#getLocations()[Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/mapred/Operation
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapred/Operation;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/Operation;

+###org/apache/hadoop/mapred/OutputCollector
@0.20.2
+#collect(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/hadoop/mapred/OutputCommitter
@0.20.2
+#<init>()V
+#setupJob(Lorg/apache/hadoop/mapred/JobContext;)V
+#cleanupJob(Lorg/apache/hadoop/mapred/JobContext;)V
+#setupTask(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
+#needsTaskCommit(Lorg/apache/hadoop/mapred/TaskAttemptContext;)Z
+#commitTask(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
+#abortTask(Lorg/apache/hadoop/mapred/TaskAttemptContext;)V
+#setupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#cleanupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#setupTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#needsTaskCommit(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Z
+#commitTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#abortTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
@0.20.203.0
*#cleanupJob(Lorg/apache/hadoop/mapred/JobContext;)V[deprecated]
+#commitJob(Lorg/apache/hadoop/mapred/JobContext;)V
+#abortJob(Lorg/apache/hadoop/mapred/JobContext;I)V
*#cleanupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V[deprecated]
+#commitJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#abortJob(Lorg/apache/hadoop/mapreduce/JobContext;Lorg/apache/hadoop/mapreduce/JobStatus$State;)V

+###org/apache/hadoop/mapred/OutputFormat
@0.20.2
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/OutputLogFilter
@0.20.2
+#<init>()V
+#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/mapred/Partitioner
@0.20.2
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapred/QueueAclsInfo
@0.20.205.0
+#<init>()V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#getQueueName()Ljava/lang/String;
+#getOperations()[Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/mapred/RawHistoryFileServlet
@0.20.203.0
+#<init>()V
+#init(Ljavax/servlet/ServletConfig;)V

+###org/apache/hadoop/mapred/RawKeyValueIterator
@0.20.2
+#getKey()Lorg/apache/hadoop/io/DataInputBuffer;
+#getValue()Lorg/apache/hadoop/io/DataInputBuffer;
+#next()Z
+#close()V
+#getProgress()Lorg/apache/hadoop/util/Progress;

+###org/apache/hadoop/mapred/RecordReader
@0.20.2
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z
+#createKey()Ljava/lang/Object;
+#createValue()Ljava/lang/Object;
+#getPos()J
+#close()V
+#getProgress()F

+###org/apache/hadoop/mapred/RecordWriter
@0.20.2
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#close(Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/Reducer
@0.20.2
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/Reporter
@0.20.2
+#setStatus(Ljava/lang/String;)V
+#getCounter(Ljava/lang/Enum;)Lorg/apache/hadoop/mapred/Counters$Counter;
+#getCounter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;
+#incrCounter(Ljava/lang/Enum;J)V
+#incrCounter(Ljava/lang/String;Ljava/lang/String;J)V
+#getInputSplit()Lorg/apache/hadoop/mapred/InputSplit;
@1.1.0
+#getProgress()F

+###org/apache/hadoop/mapred/RunningJob
@0.20.2
+#getID()Lorg/apache/hadoop/mapred/JobID;
+#getJobID()Ljava/lang/String;[deprecated]
+#getJobName()Ljava/lang/String;
+#getJobFile()Ljava/lang/String;
+#getTrackingURL()Ljava/lang/String;
+#mapProgress()F
+#reduceProgress()F
+#cleanupProgress()F
+#setupProgress()F
+#isComplete()Z
+#isSuccessful()Z
+#waitForCompletion()V
+#getJobState()I
+#killJob()V
+#setJobPriority(Ljava/lang/String;)V
+#getTaskCompletionEvents(I)[Lorg/apache/hadoop/mapred/TaskCompletionEvent;
+#killTask(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)V
+#killTask(Ljava/lang/String;Z)V[deprecated]
+#getCounters()Lorg/apache/hadoop/mapred/Counters;
+#getTaskDiagnostics(Lorg/apache/hadoop/mapred/TaskAttemptID;)[Ljava/lang/String;
@0.20.203.0
+#getFailureInfo()Ljava/lang/String;
@1.2.0
+#getJobStatus()Lorg/apache/hadoop/mapred/JobStatus;

+###org/apache/hadoop/mapred/SafeModeException
@1.1.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/mapred/SequenceFileAsBinaryInputFormat$SequenceFileAsBinaryRecordReader
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/FileSplit;)V
+#createKey()Lorg/apache/hadoop/io/BytesWritable;
+#createValue()Lorg/apache/hadoop/io/BytesWritable;
+#getKeyClassName()Ljava/lang/String;
+#getValueClassName()Ljava/lang/String;
+#next(Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/io/BytesWritable;)Z
+#getPos()J
+#close()V
+#getProgress()F
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/SequenceFileAsBinaryInputFormat
@0.20.2
+#<init>()V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/SequenceFileAsBinaryOutputFormat$WritableValueBytes
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/BytesWritable;)V
+#reset(Lorg/apache/hadoop/io/BytesWritable;)V
+#writeUncompressedBytes(Ljava/io/DataOutputStream;)V
+#writeCompressedBytes(Ljava/io/DataOutputStream;)V
+#getSize()I

+###org/apache/hadoop/mapred/SequenceFileAsBinaryOutputFormat
@0.20.2
+#<init>()V
+#setSequenceFileOutputKeyClass(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)V
+#setSequenceFileOutputValueClass(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)V
+#getSequenceFileOutputKeyClass(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/Class;
+#getSequenceFileOutputValueClass(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/Class;
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/SequenceFileAsTextInputFormat
@0.20.2
+#<init>()V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/SequenceFileAsTextRecordReader
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/FileSplit;)V
+#createKey()Lorg/apache/hadoop/io/Text;
+#createValue()Lorg/apache/hadoop/io/Text;
+#next(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)Z
+#getProgress()F
+#getPos()J
+#close()V
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/SequenceFileInputFilter$Filter
@0.20.2
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/SequenceFileInputFilter$FilterBase
@0.20.2
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/mapred/SequenceFileInputFilter$MD5Filter
@0.20.2
+#setFrequency(Lorg/apache/hadoop/conf/Configuration;I)V
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/SequenceFileInputFilter$PercentFilter
@0.20.2
+#setFrequency(Lorg/apache/hadoop/conf/Configuration;I)V
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/SequenceFileInputFilter$RegexFilter
@0.20.2
+#setPattern(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/SequenceFileInputFilter
@0.20.2
+#<init>()V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;
+#setFilterClass(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V

+###org/apache/hadoop/mapred/SequenceFileInputFormat
@0.20.2
+#<init>()V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/SequenceFileOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#getReaders(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/io/SequenceFile$Reader;
+#getOutputCompressionType(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
+#setOutputCompressionType(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V

+###org/apache/hadoop/mapred/SequenceFileRecordReader
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/FileSplit;)V
+#getKeyClass()Ljava/lang/Class;
+#getValueClass()Ljava/lang/Class;
+#createKey()Ljava/lang/Object;
+#createValue()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z
+#getProgress()F
+#getPos()J
+#close()V

+###org/apache/hadoop/mapred/ShuffleExceptionTracker
@1.0.2
+#getNumRequests()I
+#getPercentExceptions()F
+#success()V
+#exception()V
+#checkException(Ljava/io/IOException;)Z

+###org/apache/hadoop/mapred/SkipBadRecords
@0.20.2
+#<init>()V
+#getAttemptsToStartSkipping(Lorg/apache/hadoop/conf/Configuration;)I
+#setAttemptsToStartSkipping(Lorg/apache/hadoop/conf/Configuration;I)V
+#getAutoIncrMapperProcCount(Lorg/apache/hadoop/conf/Configuration;)Z
+#setAutoIncrMapperProcCount(Lorg/apache/hadoop/conf/Configuration;Z)V
+#getAutoIncrReducerProcCount(Lorg/apache/hadoop/conf/Configuration;)Z
+#setAutoIncrReducerProcCount(Lorg/apache/hadoop/conf/Configuration;Z)V
+#getSkipOutputPath(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#setSkipOutputPath(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;)V
+#getMapperMaxSkipRecords(Lorg/apache/hadoop/conf/Configuration;)J
+#setMapperMaxSkipRecords(Lorg/apache/hadoop/conf/Configuration;J)V
+#getReducerMaxSkipGroups(Lorg/apache/hadoop/conf/Configuration;)J
+#setReducerMaxSkipGroups(Lorg/apache/hadoop/conf/Configuration;J)V

+###org/apache/hadoop/mapred/TIPStatus
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/TIPStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TIPStatus;

+###org/apache/hadoop/mapred/Task$CombineOutputCollector
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/Counters$Counter;)V
+#setWriter(Lorg/apache/hadoop/mapred/IFile$Writer;)V
+#collect(Ljava/lang/Object;Ljava/lang/Object;)V
@0.20.205.0
+#<init>(Lorg/apache/hadoop/mapred/Counters$Counter;Lorg/apache/hadoop/util/Progressable;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/mapred/Counters$Counter;)V

+###org/apache/hadoop/mapred/Task$CombineValuesIterator
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/RawKeyValueIterator;Lorg/apache/hadoop/io/RawComparator;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/Reporter;Lorg/apache/hadoop/mapred/Counters$Counter;)V
+#next()Ljava/lang/Object;

+###org/apache/hadoop/mapred/Task$CombinerRunner
@0.20.2

+###org/apache/hadoop/mapred/Task$Counter
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/Task$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/Task$Counter;

+###org/apache/hadoop/mapred/Task$NewCombinerRunner
@0.20.2

+###org/apache/hadoop/mapred/Task$OldCombinerRunner
@0.20.2

+###org/apache/hadoop/mapred/Task$TaskReporter
@0.20.2
+#setStatus(Ljava/lang/String;)V
+#setProgress(F)V
+#progress()V
+#getCounter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapred/Counters$Counter;
+#getCounter(Ljava/lang/Enum;)Lorg/apache/hadoop/mapred/Counters$Counter;
+#incrCounter(Ljava/lang/Enum;J)V
+#incrCounter(Ljava/lang/String;Ljava/lang/String;J)V
+#setInputSplit(Lorg/apache/hadoop/mapred/InputSplit;)V
+#getInputSplit()Lorg/apache/hadoop/mapred/InputSplit;
+#run()V
+#startCommunicationThread()V
+#stopCommunicationThread()V
+#getCounter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Counter;
+#getCounter(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
@1.1.0
+#getProgress()F

+###org/apache/hadoop/mapred/Task
@0.20.203.0
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskAttemptID;II)V
+#setJobFile(Ljava/lang/String;)V
+#getJobFile()Ljava/lang/String;
+#getTaskID()Lorg/apache/hadoop/mapred/TaskAttemptID;
+#getNumSlotsRequired()I
+#getJobID()Lorg/apache/hadoop/mapred/JobID;
+#setJobTokenSecret(Ljavax/crypto/SecretKey;)V
+#getJobTokenSecret()Ljavax/crypto/SecretKey;
+#getPartition()I
+#getPhase()Lorg/apache/hadoop/mapred/TaskStatus$Phase;
+#getSkipRanges()Lorg/apache/hadoop/mapred/SortedRanges;
+#setSkipRanges(Lorg/apache/hadoop/mapred/SortedRanges;)V
+#isSkipping()Z
+#setSkipping(Z)V
+#getUser()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#toString()Ljava/lang/String;
+#localizeConfiguration(Lorg/apache/hadoop/mapred/JobConf;)V
+#run(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;)V
+#createRunner(Lorg/apache/hadoop/mapred/TaskTracker;Lorg/apache/hadoop/mapred/TaskTracker$TaskInProgress;Lorg/apache/hadoop/mapred/TaskTracker$RunningJob;)Lorg/apache/hadoop/mapred/TaskRunner;
+#isMapTask()Z
+#getProgress()Lorg/apache/hadoop/util/Progress;
+#initialize(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/JobID;Lorg/apache/hadoop/mapred/Reporter;Z)V
+#done(Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;Lorg/apache/hadoop/mapred/Task$TaskReporter;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
@0.20.204.0
+#setJvmContext(Lorg/apache/hadoop/mapred/JvmContext;)V
+#getJvmContext()Lorg/apache/hadoop/mapred/JvmContext;

+###org/apache/hadoop/mapred/TaskAttemptContext
@0.20.2
+#getTaskAttemptID()Lorg/apache/hadoop/mapred/TaskAttemptID;
+#getProgressible()Lorg/apache/hadoop/util/Progressable;
+#getJobConf()Lorg/apache/hadoop/mapred/JobConf;
+#progress()V
+#getTaskAttemptID()Lorg/apache/hadoop/mapreduce/TaskAttemptID;

+###org/apache/hadoop/mapred/TaskAttemptID
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/TaskID;I)V
+#<init>(Ljava/lang/String;IZII)V
+#<init>()V
+#downgrade(Lorg/apache/hadoop/mapreduce/TaskAttemptID;)Lorg/apache/hadoop/mapred/TaskAttemptID;
+#getTaskID()Lorg/apache/hadoop/mapred/TaskID;
+#getJobID()Lorg/apache/hadoop/mapred/JobID;
+#read(Ljava/io/DataInput;)Lorg/apache/hadoop/mapred/TaskAttemptID;[deprecated]
+#forName(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskAttemptID;
+#getTaskAttemptIDsPattern(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/String;[deprecated]
+#getTaskID()Lorg/apache/hadoop/mapreduce/TaskID;
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;

+###org/apache/hadoop/mapred/TaskCompletionEvent$Status
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/TaskCompletionEvent$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskCompletionEvent$Status;

+###org/apache/hadoop/mapred/TaskCompletionEvent
@0.20.2
+#<init>()V
+#<init>(ILorg/apache/hadoop/mapred/TaskAttemptID;IZLorg/apache/hadoop/mapred/TaskCompletionEvent$Status;Ljava/lang/String;)V
+#getEventId()I
+#getTaskId()Ljava/lang/String;[deprecated]
+#getTaskAttemptId()Lorg/apache/hadoop/mapred/TaskAttemptID;
+#getTaskStatus()Lorg/apache/hadoop/mapred/TaskCompletionEvent$Status;
+#getTaskTrackerHttp()Ljava/lang/String;
+#getTaskRunTime()I
+#setTaskRunTime(I)V
+#setEventId(I)V
+#setTaskId(Ljava/lang/String;)V[deprecated]
+#setTaskID(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#setTaskStatus(Lorg/apache/hadoop/mapred/TaskCompletionEvent$Status;)V
+#setTaskTrackerHttp(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isMapTask()Z
+#idWithinJob()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/TaskController
@0.20.203.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#setup(Lorg/apache/hadoop/fs/LocalDirAllocator;)V
+#initializeJob(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapred/TaskUmbilicalProtocol;Ljava/net/InetSocketAddress;)V
+#launchTask(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)I
+#signalTask(Ljava/lang/String;ILorg/apache/hadoop/util/ProcessTree$Signal;)V
+#deleteAsUser(Ljava/lang/String;Ljava/lang/String;)V
+#deleteLogAsUser(Ljava/lang/String;Ljava/lang/String;)V
+#truncateLogsAsUser(Ljava/lang/String;Ljava/util/List;)V
+#getRunAsUser(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/String;
@0.20.204.0
+#getLocalStorage()Lorg/apache/hadoop/mapred/TaskTracker$LocalStorage;
+#setup(Lorg/apache/hadoop/fs/LocalDirAllocator;Lorg/apache/hadoop/mapred/TaskTracker$LocalStorage;)V
+#createLogDir(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)V
-#setup(Lorg/apache/hadoop/fs/LocalDirAllocator;)V
@0.20.205.0
+#getLocalDirs()[Ljava/lang/String;
-#getLocalStorage()Lorg/apache/hadoop/mapred/TaskTracker$LocalStorage;

+###org/apache/hadoop/mapred/TaskGraphServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/TaskID
@0.20.2
+#<init>(Lorg/apache/hadoop/mapreduce/JobID;ZI)V
+#<init>(Ljava/lang/String;IZI)V
+#<init>()V
+#downgrade(Lorg/apache/hadoop/mapreduce/TaskID;)Lorg/apache/hadoop/mapred/TaskID;
+#read(Ljava/io/DataInput;)Lorg/apache/hadoop/mapred/TaskID;[deprecated]
+#getJobID()Lorg/apache/hadoop/mapred/JobID;
+#getTaskIDsPattern(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;)Ljava/lang/String;[deprecated]
+#forName(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskID;
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;

+###org/apache/hadoop/mapred/TaskLog$LogName
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/TaskLog$LogName;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskLog$LogName;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/mapred/TaskLog
@0.20.2
+#<init>()V
+#getTaskLogFile(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskLog$LogName;)Ljava/io/File;
+#getRealTaskLogFileLocation(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskLog$LogName;)Ljava/io/File;
+#getIndexFile(Ljava/lang/String;)Ljava/io/File;
+#getIndexFile(Ljava/lang/String;Z)Ljava/io/File;
+#syncLogs(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#syncLogs(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskAttemptID;Z)V
+#cleanup(I)V
+#getTaskLogLength(Lorg/apache/hadoop/mapred/JobConf;)J
+#captureOutAndError(Ljava/util/List;Ljava/io/File;Ljava/io/File;J)Ljava/util/List;
+#captureOutAndError(Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/io/File;J)Ljava/util/List;
+#captureOutAndError(Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/io/File;JLjava/lang/String;)Ljava/util/List;
+#addCommand(Ljava/util/List;Z)Ljava/lang/String;
+#captureDebugOut(Ljava/util/List;Ljava/io/File;)Ljava/util/List;
@0.20.203.0
+#getTaskLogFile(Lorg/apache/hadoop/mapred/TaskAttemptID;ZLorg/apache/hadoop/mapred/TaskLog$LogName;)Ljava/io/File;
+#getBaseLogDir()Ljava/lang/String;
+#syncLogs(Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskAttemptID;ZZ)V
*#captureOutAndError(Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/io/File;JLjava/lang/String;)Ljava/util/List;[deprecated]
+#captureOutAndError(Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/io/File;JZLjava/lang/String;)Ljava/util/List;[deprecated]
+#captureOutAndError(Ljava/util/List;Ljava/util/List;Ljava/io/File;Ljava/io/File;JZ)Ljava/util/List;
+#getUserLogDir()Ljava/io/File;
+#getJobDir(Ljava/lang/String;)Ljava/io/File;
+#getJobDir(Lorg/apache/hadoop/mapreduce/JobID;)Ljava/io/File;
-#getTaskLogFile(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskLog$LogName;)Ljava/io/File;
-#getRealTaskLogFileLocation(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskLog$LogName;)Ljava/io/File;
-#getIndexFile(Ljava/lang/String;)Ljava/io/File;
-#getIndexFile(Ljava/lang/String;Z)Ljava/io/File;
-#syncLogs(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskAttemptID;)V
-#syncLogs(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskAttemptID;Z)V
-#cleanup(I)V
@0.20.204.0
+#createTaskAttemptLogDir(Lorg/apache/hadoop/mapred/TaskAttemptID;Z[Ljava/lang/String;)V
+#getTaskAttemptLogDir(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;

+###org/apache/hadoop/mapred/TaskLogAppender
@0.20.2
+#<init>()V
+#activateOptions()V
+#append(Lorg/apache/log4j/spi/LoggingEvent;)V
+#flush()V
+#close()V
+#getTaskId()Ljava/lang/String;
+#setTaskId(Ljava/lang/String;)V
+#getTotalLogFileSize()J
+#setTotalLogFileSize(J)V
@0.20.203.0
+#setIsCleanup(Z)V
+#getIsCleanup()Z

+###org/apache/hadoop/mapred/TaskLogServlet
@0.20.2
+#<init>()V
+#getTaskLogUrl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/TaskLogsTruncater
@0.20.203.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#shouldTruncateLogs(Lorg/apache/hadoop/mapreduce/server/tasktracker/JVMInfo;)Z
+#truncateLogs(Lorg/apache/hadoop/mapreduce/server/tasktracker/JVMInfo;)V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/mapred/TaskReport
@0.20.2
+#<init>()V
+#getTaskId()Ljava/lang/String;[deprecated]
+#getTaskID()Lorg/apache/hadoop/mapred/TaskID;
+#getProgress()F
+#getState()Ljava/lang/String;
+#getDiagnostics()[Ljava/lang/String;
+#getCounters()Lorg/apache/hadoop/mapred/Counters;
+#getCurrentStatus()Lorg/apache/hadoop/mapred/TIPStatus;
+#getFinishTime()J
+#getStartTime()J
+#setSuccessfulAttempt(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#getSuccessfulTaskAttempt()Lorg/apache/hadoop/mapred/TaskAttemptID;
+#setRunningTaskAttempts(Ljava/util/Collection;)V
+#getRunningTaskAttempts()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/TaskStatus$Phase
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/TaskStatus$Phase;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskStatus$Phase;

+###org/apache/hadoop/mapred/TaskStatus$State
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/TaskStatus$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskStatus$State;

+###org/apache/hadoop/mapred/TaskStatus
@0.20.203.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/mapred/TaskAttemptID;FILorg/apache/hadoop/mapred/TaskStatus$State;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/TaskStatus$Phase;Lorg/apache/hadoop/mapred/Counters;)V
+#getTaskID()Lorg/apache/hadoop/mapred/TaskAttemptID;
+#getIsMap()Z
+#getNumSlots()I
+#getProgress()F
+#setProgress(F)V
+#getRunState()Lorg/apache/hadoop/mapred/TaskStatus$State;
+#getTaskTracker()Ljava/lang/String;
+#setTaskTracker(Ljava/lang/String;)V
+#setRunState(Lorg/apache/hadoop/mapred/TaskStatus$State;)V
+#getDiagnosticInfo()Ljava/lang/String;
+#setDiagnosticInfo(Ljava/lang/String;)V
+#getStateString()Ljava/lang/String;
+#setStateString(Ljava/lang/String;)V
+#getNextRecordRange()Lorg/apache/hadoop/mapred/SortedRanges$Range;
+#setNextRecordRange(Lorg/apache/hadoop/mapred/SortedRanges$Range;)V
+#getFinishTime()J
+#getShuffleFinishTime()J
+#getSortFinishTime()J
+#getStartTime()J
+#getPhase()Lorg/apache/hadoop/mapred/TaskStatus$Phase;
+#getIncludeCounters()Z
+#setIncludeCounters(Z)V
+#getCounters()Lorg/apache/hadoop/mapred/Counters;
+#setCounters(Lorg/apache/hadoop/mapred/Counters;)V
+#getOutputSize()J
+#getFetchFailedMaps()Ljava/util/List;
+#clone()Ljava/lang/Object;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/TaskTracker$MapOutputServlet
@0.20.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/TaskTracker
@0.20.2
+#getTaskTrackerInstrumentation()Lorg/apache/hadoop/mapred/TaskTrackerInstrumentation;
+#getProtocolVersion(Ljava/lang/String;J)J
+#getInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
+#setInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
+#cleanupStorage()V
+#shutdown()V
+#close()V
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
+#getJobClient()Lorg/apache/hadoop/mapred/InterTrackerProtocol;
+#getTaskTrackerReportAddress()Ljava/net/InetSocketAddress;
+#getJvmManagerInstance()Lorg/apache/hadoop/mapred/JvmManager;
+#run()V
+#getTask(Lorg/apache/hadoop/mapred/JVMId;)Lorg/apache/hadoop/mapred/JvmTask;
+#statusUpdate(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)Z
+#reportDiagnosticInfo(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#reportNextRecordRange(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/SortedRanges$Range;)V
+#ping(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
+#commitPending(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)V
+#canCommit(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
+#done(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#shuffleError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#fsError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#fatalError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#getMapCompletionEvents(Lorg/apache/hadoop/mapred/JobID;IILorg/apache/hadoop/mapred/TaskAttemptID;)Lorg/apache/hadoop/mapred/MapTaskCompletionEventsUpdate;
+#mapOutputLost(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#isIdle()Z
+#main([Ljava/lang/String;)V
+#isTaskMemoryManagerEnabled()Z
+#getTaskMemoryManager()Lorg/apache/hadoop/mapred/TaskMemoryManagerThread;
@0.20.203.0
+#getTaskController()Lorg/apache/hadoop/mapred/TaskController;
+#getUserDir(Ljava/lang/String;)Ljava/lang/String;
+#getPrivateDistributedCacheDir(Ljava/lang/String;)Ljava/lang/String;
+#getPublicDistributedCacheDir()Ljava/lang/String;
+#getJobCacheSubdir(Ljava/lang/String;)Ljava/lang/String;
+#getLocalJobDir(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getJobJarFile(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getLocalTaskDir(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getLocalTaskDir(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#getTask(Lorg/apache/hadoop/mapred/JvmContext;)Lorg/apache/hadoop/mapred/JvmTask;
+#getHostname()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getConfigVersion()Ljava/lang/String;
+#getJobTrackerUrl()Ljava/lang/String;
+#getRpcPort()I
+#getHttpPort()I
+#isHealthy()Z
+#getTasksInfoJson()Ljava/lang/String;
+#updatePrivateDistributedCacheSizes(Lorg/apache/hadoop/mapreduce/JobID;[J)V
-#getInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#setInstrumentationClass(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
-#getTask(Lorg/apache/hadoop/mapred/JVMId;)Lorg/apache/hadoop/mapred/JvmTask;
@0.20.204.0
+#statusUpdate(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;Lorg/apache/hadoop/mapred/JvmContext;)Z
+#reportDiagnosticInfo(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#reportNextRecordRange(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/SortedRanges$Range;Lorg/apache/hadoop/mapred/JvmContext;)V
+#ping(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)Z
+#commitPending(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;Lorg/apache/hadoop/mapred/JvmContext;)V
+#canCommit(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)Z
+#done(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)V
+#shuffleError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#fsError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#fatalError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#getMapCompletionEvents(Lorg/apache/hadoop/mapred/JobID;IILorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)Lorg/apache/hadoop/mapred/MapTaskCompletionEventsUpdate;
-#statusUpdate(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)Z
-#reportDiagnosticInfo(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#reportNextRecordRange(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/SortedRanges$Range;)V
-#ping(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
-#commitPending(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)V
-#canCommit(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
-#done(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
-#shuffleError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#fsError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#fatalError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#getMapCompletionEvents(Lorg/apache/hadoop/mapred/JobID;IILorg/apache/hadoop/mapred/TaskAttemptID;)Lorg/apache/hadoop/mapred/MapTaskCompletionEventsUpdate;
@1.1.0
+#isIdleAndClean()Z

+###org/apache/hadoop/mapred/TaskTrackerAction$ActionType
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/TaskTrackerAction$ActionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/TaskTrackerAction$ActionType;

+###org/apache/hadoop/mapred/TaskTrackerMXBean
@0.20.203.0
+#getHostname()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getConfigVersion()Ljava/lang/String;
+#getJobTrackerUrl()Ljava/lang/String;
+#getRpcPort()I
+#getHttpPort()I
+#isHealthy()Z
+#getTasksInfoJson()Ljava/lang/String;

+###org/apache/hadoop/mapred/TaskTrackerMetricsSource
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapred/TaskTracker;)V
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V
+#completeTask(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#timedoutTask(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#taskFailedPing(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#reportTaskEnd(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#reportTaskLaunch(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/io/File;Ljava/io/File;)V

+###org/apache/hadoop/mapred/TaskTrackerStatus
@0.20.203.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/util/List;III)V
+#getTrackerName()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getHttpPort()I
+#getFailures()I
+#getTaskReports()Ljava/util/List;
+#countMapTasks()I
+#countOccupiedMapSlots()I
+#getAvailableMapSlots()I
+#countReduceTasks()I
+#countOccupiedReduceSlots()I
+#getAvailableReduceSlots()I
+#getLastSeen()J
+#setLastSeen(J)V
+#getMaxMapSlots()I
+#getMaxReduceSlots()I
+#getHealthStatus()Lorg/apache/hadoop/mapred/TaskTrackerStatus$TaskTrackerHealthStatus;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@1.1.0
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/util/List;IIII)V
+#getTaskFailures()I
+#getDirFailures()I
-#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/util/List;III)V
-#getFailures()I

+###org/apache/hadoop/mapred/TaskUmbilicalProtocol
@0.20.203.0
+#getTask(Lorg/apache/hadoop/mapred/JvmContext;)Lorg/apache/hadoop/mapred/JvmTask;
+#statusUpdate(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)Z
+#reportDiagnosticInfo(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#reportNextRecordRange(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/SortedRanges$Range;)V
+#ping(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
+#done(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
+#commitPending(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)V
+#canCommit(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
+#shuffleError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#fsError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#fatalError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
+#getMapCompletionEvents(Lorg/apache/hadoop/mapred/JobID;IILorg/apache/hadoop/mapred/TaskAttemptID;)Lorg/apache/hadoop/mapred/MapTaskCompletionEventsUpdate;
+#updatePrivateDistributedCacheSizes(Lorg/apache/hadoop/mapreduce/JobID;[J)V
@0.20.204.0
+#statusUpdate(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;Lorg/apache/hadoop/mapred/JvmContext;)Z
+#reportDiagnosticInfo(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#reportNextRecordRange(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/SortedRanges$Range;Lorg/apache/hadoop/mapred/JvmContext;)V
+#ping(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)Z
+#done(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)V
+#commitPending(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;Lorg/apache/hadoop/mapred/JvmContext;)V
+#canCommit(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)Z
+#shuffleError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#fsError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#fatalError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;Lorg/apache/hadoop/mapred/JvmContext;)V
+#getMapCompletionEvents(Lorg/apache/hadoop/mapred/JobID;IILorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/JvmContext;)Lorg/apache/hadoop/mapred/MapTaskCompletionEventsUpdate;
-#statusUpdate(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)Z
-#reportDiagnosticInfo(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#reportNextRecordRange(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/SortedRanges$Range;)V
-#ping(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
-#done(Lorg/apache/hadoop/mapred/TaskAttemptID;)V
-#commitPending(Lorg/apache/hadoop/mapred/TaskAttemptID;Lorg/apache/hadoop/mapred/TaskStatus;)V
-#canCommit(Lorg/apache/hadoop/mapred/TaskAttemptID;)Z
-#shuffleError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#fsError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#fatalError(Lorg/apache/hadoop/mapred/TaskAttemptID;Ljava/lang/String;)V
-#getMapCompletionEvents(Lorg/apache/hadoop/mapred/JobID;IILorg/apache/hadoop/mapred/TaskAttemptID;)Lorg/apache/hadoop/mapred/MapTaskCompletionEventsUpdate;

+###org/apache/hadoop/mapred/TextInputFormat
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/TextOutputFormat$LineRecordWriter
@0.20.2
+#<init>(Ljava/io/DataOutputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/DataOutputStream;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#close(Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/TextOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;

+###org/apache/hadoop/mapred/UserLogCleaner
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogManager;Lorg/apache/hadoop/conf/Configuration;)V
+#run()V
+#deleteJobLogs(Lorg/apache/hadoop/mapreduce/JobID;)V
+#clearOldUserLogs(Lorg/apache/hadoop/conf/Configuration;)V
+#markJobLogsForDeletion(JILorg/apache/hadoop/mapreduce/JobID;)V
+#unmarkJobFromLogDeletion(Lorg/apache/hadoop/mapreduce/JobID;)V
@0.20.204.0
+#addOldUserLogsForDeletion(Ljava/io/File;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/mapred/Utils$OutputFileUtils$OutputFilesFilter
@0.20.203.0
+#<init>()V
+#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/mapred/Utils$OutputFileUtils$OutputLogFilter
@0.20.203.0
+#<init>()V
+#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/mapred/Utils$OutputFileUtils
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/mapred/Utils
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/mapred/analysejobhistory_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/gethistory_jsp
@0.20.203.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/job_005fauthorization_005ferror_jsp
@0.20.203.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobblacklistedtrackers_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobconf_005fhistory_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobconf_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobcontrol/Job
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/JobConf;Ljava/util/ArrayList;)V
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
+#toString()Ljava/lang/String;
+#getJobName()Ljava/lang/String;
+#setJobName(Ljava/lang/String;)V
+#getJobID()Ljava/lang/String;
+#setJobID(Ljava/lang/String;)V
+#getMapredJobID()Ljava/lang/String;[deprecated]
+#setMapredJobID(Ljava/lang/String;)V[deprecated]
+#getAssignedJobID()Lorg/apache/hadoop/mapred/JobID;
+#setAssignedJobID(Lorg/apache/hadoop/mapred/JobID;)V
+#getJobConf()Lorg/apache/hadoop/mapred/JobConf;
+#setJobConf(Lorg/apache/hadoop/mapred/JobConf;)V
+#getState()I
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)V
+#getJobClient()Lorg/apache/hadoop/mapred/JobClient;
+#getDependingJobs()Ljava/util/ArrayList;
+#addDependingJob(Lorg/apache/hadoop/mapred/jobcontrol/Job;)Z
+#isCompleted()Z
+#isReady()Z

+###org/apache/hadoop/mapred/jobcontrol/JobControl
@0.20.2
+#<init>(Ljava/lang/String;)V
+#getWaitingJobs()Ljava/util/ArrayList;
+#getRunningJobs()Ljava/util/ArrayList;
+#getReadyJobs()Ljava/util/ArrayList;
+#getSuccessfulJobs()Ljava/util/ArrayList;
+#getFailedJobs()Ljava/util/ArrayList;
+#addJob(Lorg/apache/hadoop/mapred/jobcontrol/Job;)Ljava/lang/String;
+#addJobs(Ljava/util/Collection;)V
+#getState()I
+#stop()V
+#suspend()V
+#resume()V
+#allFinished()Z
+#run()V

+###org/apache/hadoop/mapred/jobdetails_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobdetailshistory_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobfailures_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobhistory_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobhistoryhome_jsp
@0.20.203.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobqueue_005fdetails_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobtasks_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobtaskshistory_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/jobtracker_jsp
@0.20.2
+#<init>()V
+#generateSummaryTable(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/mapred/ClusterStatus;Lorg/apache/hadoop/mapred/JobTracker;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.20.203.0
+#generateSummaryTable(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/mapreduce/ClusterMetrics;Lorg/apache/hadoop/mapred/JobTracker;)V
-#generateSummaryTable(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/mapred/ClusterStatus;Lorg/apache/hadoop/mapred/JobTracker;)V

+###org/apache/hadoop/mapred/join/ArrayListBackedIterator
@0.20.2
+#<init>()V
+#<init>(Ljava/util/ArrayList;)V
+#hasNext()Z
+#next(Lorg/apache/hadoop/io/Writable;)Z
+#replay(Lorg/apache/hadoop/io/Writable;)Z
+#reset()V
+#add(Lorg/apache/hadoop/io/Writable;)V
+#close()V
+#clear()V

+###org/apache/hadoop/mapred/join/ComposableInputFormat
@0.20.2
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/join/ComposableRecordReader;

+###org/apache/hadoop/mapred/join/ComposableRecordReader
@0.20.2
+#id()I
+#key()Lorg/apache/hadoop/io/WritableComparable;
+#key(Lorg/apache/hadoop/io/WritableComparable;)V
+#hasNext()Z
+#skip(Lorg/apache/hadoop/io/WritableComparable;)V
+#accept(Lorg/apache/hadoop/mapred/join/CompositeRecordReader$JoinCollector;Lorg/apache/hadoop/io/WritableComparable;)V

+###org/apache/hadoop/mapred/join/CompositeInputFormat
@0.20.2
+#<init>()V
+#setFormat(Lorg/apache/hadoop/mapred/JobConf;)V
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/join/ComposableRecordReader;
+#compose(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;
+#compose(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/String;)Ljava/lang/String;
+#compose(Ljava/lang/String;Ljava/lang/Class;[Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/join/CompositeInputSplit
@0.20.2
+#<init>()V
+#<init>(I)V
+#add(Lorg/apache/hadoop/mapred/InputSplit;)V
+#get(I)Lorg/apache/hadoop/mapred/InputSplit;
+#getLength()J
+#getLength(I)J
+#getLocations()[Ljava/lang/String;
+#getLocation(I)[Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/join/CompositeRecordReader
@0.20.2
+#<init>(IILjava/lang/Class;)V
+#id()I
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#add(Lorg/apache/hadoop/mapred/join/ComposableRecordReader;)V
+#key()Lorg/apache/hadoop/io/WritableComparable;
+#key(Lorg/apache/hadoop/io/WritableComparable;)V
+#hasNext()Z
+#skip(Lorg/apache/hadoop/io/WritableComparable;)V
+#accept(Lorg/apache/hadoop/mapred/join/CompositeRecordReader$JoinCollector;Lorg/apache/hadoop/io/WritableComparable;)V
+#compareTo(Lorg/apache/hadoop/mapred/join/ComposableRecordReader;)I
+#createKey()Lorg/apache/hadoop/io/WritableComparable;
+#getPos()J
+#close()V
+#getProgress()F

+###org/apache/hadoop/mapred/join/InnerJoinRecordReader
@0.20.2

+###org/apache/hadoop/mapred/join/JoinRecordReader$JoinDelegationIterator
@0.20.2
+#hasNext()Z
+#next(Lorg/apache/hadoop/mapred/join/TupleWritable;)Z
+#replay(Lorg/apache/hadoop/mapred/join/TupleWritable;)Z
+#reset()V
+#add(Lorg/apache/hadoop/mapred/join/TupleWritable;)V
+#close()V
+#clear()V
+#add(Lorg/apache/hadoop/io/Writable;)V
+#replay(Lorg/apache/hadoop/io/Writable;)Z
+#next(Lorg/apache/hadoop/io/Writable;)Z

+###org/apache/hadoop/mapred/join/JoinRecordReader
@0.20.2
+#<init>(ILorg/apache/hadoop/mapred/JobConf;ILjava/lang/Class;)V
+#next(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/mapred/join/TupleWritable;)Z
+#createValue()Lorg/apache/hadoop/mapred/join/TupleWritable;
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/mapred/join/MultiFilterRecordReader$MultiFilterDelegationIterator
@0.20.2
+#hasNext()Z
+#next(Lorg/apache/hadoop/io/Writable;)Z
+#replay(Lorg/apache/hadoop/io/Writable;)Z
+#reset()V
+#add(Lorg/apache/hadoop/io/Writable;)V
+#close()V
+#clear()V

+###org/apache/hadoop/mapred/join/MultiFilterRecordReader
@0.20.2
+#<init>(ILorg/apache/hadoop/mapred/JobConf;ILjava/lang/Class;)V
+#next(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Z
+#createValue()Lorg/apache/hadoop/io/Writable;
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/mapred/join/OuterJoinRecordReader
@0.20.2

+###org/apache/hadoop/mapred/join/OverrideRecordReader
@0.20.2

+###org/apache/hadoop/mapred/join/Parser$Node
@0.20.2

+###org/apache/hadoop/mapred/join/Parser$NodeToken
@0.20.2
+#getNode()Lorg/apache/hadoop/mapred/join/Parser$Node;

+###org/apache/hadoop/mapred/join/Parser$NumToken
@0.20.2
+#<init>(D)V
+#getNum()D

+###org/apache/hadoop/mapred/join/Parser$StrToken
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/join/Parser$TType;Ljava/lang/String;)V
+#getStr()Ljava/lang/String;

+###org/apache/hadoop/mapred/join/Parser$TType
@0.20.2
+#values()[Lorg/apache/hadoop/mapred/join/Parser$TType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapred/join/Parser$TType;

+###org/apache/hadoop/mapred/join/Parser$Token
@0.20.2
+#getType()Lorg/apache/hadoop/mapred/join/Parser$TType;
+#getNode()Lorg/apache/hadoop/mapred/join/Parser$Node;
+#getNum()D
+#getStr()Ljava/lang/String;

+###org/apache/hadoop/mapred/join/Parser
@0.20.2
+#<init>()V

+###org/apache/hadoop/mapred/join/ResetableIterator$EMPTY
@0.20.2
+#<init>()V
+#hasNext()Z
+#reset()V
+#close()V
+#clear()V
+#next(Lorg/apache/hadoop/io/Writable;)Z
+#replay(Lorg/apache/hadoop/io/Writable;)Z
+#add(Lorg/apache/hadoop/io/Writable;)V

+###org/apache/hadoop/mapred/join/ResetableIterator
@0.20.2
+#hasNext()Z
+#next(Lorg/apache/hadoop/io/Writable;)Z
+#replay(Lorg/apache/hadoop/io/Writable;)Z
+#reset()V
+#add(Lorg/apache/hadoop/io/Writable;)V
+#close()V
+#clear()V

+###org/apache/hadoop/mapred/join/StreamBackedIterator
@0.20.2
+#<init>()V
+#hasNext()Z
+#next(Lorg/apache/hadoop/io/Writable;)Z
+#replay(Lorg/apache/hadoop/io/Writable;)Z
+#reset()V
+#add(Lorg/apache/hadoop/io/Writable;)V
+#close()V
+#clear()V

+###org/apache/hadoop/mapred/join/TupleWritable
@0.20.2
+#<init>()V
+#<init>([Lorg/apache/hadoop/io/Writable;)V
+#has(I)Z
+#get(I)Lorg/apache/hadoop/io/Writable;
+#size()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/mapred/join/WrappedRecordReader
@0.20.2
+#id()I
+#key()Lorg/apache/hadoop/io/WritableComparable;
+#key(Lorg/apache/hadoop/io/WritableComparable;)V
+#hasNext()Z
+#skip(Lorg/apache/hadoop/io/WritableComparable;)V
+#accept(Lorg/apache/hadoop/mapred/join/CompositeRecordReader$JoinCollector;Lorg/apache/hadoop/io/WritableComparable;)V
+#next(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;)Z
+#createKey()Lorg/apache/hadoop/io/WritableComparable;
+#createValue()Lorg/apache/hadoop/io/Writable;
+#getProgress()F
+#getPos()J
+#close()V
+#compareTo(Lorg/apache/hadoop/mapred/join/ComposableRecordReader;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/mapred/legacyjobhistory_jsp
@0.20.203.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/lib/BinaryPartitioner
@1.0.3
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/lib/ChainMapper
@0.20.2
+#addMapper(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ZLorg/apache/hadoop/mapred/JobConf;)V
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#close()V

+###org/apache/hadoop/mapred/lib/ChainReducer
@0.20.2
+#setReducer(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ZLorg/apache/hadoop/mapred/JobConf;)V
+#addMapper(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ZLorg/apache/hadoop/mapred/JobConf;)V
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#close()V

+###org/apache/hadoop/mapred/lib/CombineFileInputFormat
@0.20.2
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/lib/CombineFileRecordReader
@0.20.2
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z
+#createKey()Ljava/lang/Object;
+#createValue()Ljava/lang/Object;
+#getPos()J
+#close()V
+#getProgress()F
+#<init>(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/lib/CombineFileSplit;Lorg/apache/hadoop/mapred/Reporter;Ljava/lang/Class;)V

+###org/apache/hadoop/mapred/lib/CombineFileSplit
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/mapred/JobConf;[Lorg/apache/hadoop/fs/Path;[J[J[Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/mapred/JobConf;[Lorg/apache/hadoop/fs/Path;[J)V
+#<init>(Lorg/apache/hadoop/mapred/lib/CombineFileSplit;)V
+#getJob()Lorg/apache/hadoop/mapred/JobConf;
+#getLength()J
+#getStartOffsets()[J
+#getLengths()[J
+#getOffset(I)J
+#getLength(I)J
+#getNumPaths()I
+#getPath(I)Lorg/apache/hadoop/fs/Path;
+#getPaths()[Lorg/apache/hadoop/fs/Path;
+#getLocations()[Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/mapred/lib/DelegatingInputFormat
@0.20.2
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;

+###org/apache/hadoop/mapred/lib/DelegatingMapper
@0.20.2
+#<init>()V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#close()V

+###org/apache/hadoop/mapred/lib/FieldSelectionMapReduce
@0.20.2
+#<init>()V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#close()V
+#reduce(Lorg/apache/hadoop/io/Text;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/HashPartitioner
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapred/lib/IdentityMapper
@0.20.2
+#<init>()V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/IdentityReducer
@0.20.2
+#<init>()V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/InputSampler$IntervalSampler
@0.20.2
+#<init>(D)V
+#<init>(DI)V
+#getSample(Lorg/apache/hadoop/mapred/InputFormat;Lorg/apache/hadoop/mapred/JobConf;)[Ljava/lang/Object;

+###org/apache/hadoop/mapred/lib/InputSampler$RandomSampler
@0.20.2
+#<init>(DI)V
+#<init>(DII)V
+#getSample(Lorg/apache/hadoop/mapred/InputFormat;Lorg/apache/hadoop/mapred/JobConf;)[Ljava/lang/Object;

+###org/apache/hadoop/mapred/lib/InputSampler$Sampler
@0.20.2
+#getSample(Lorg/apache/hadoop/mapred/InputFormat;Lorg/apache/hadoop/mapred/JobConf;)[Ljava/lang/Object;

+###org/apache/hadoop/mapred/lib/InputSampler$SplitSampler
@0.20.2
+#<init>(I)V
+#<init>(II)V
+#getSample(Lorg/apache/hadoop/mapred/InputFormat;Lorg/apache/hadoop/mapred/JobConf;)[Ljava/lang/Object;

+###org/apache/hadoop/mapred/lib/InputSampler
@0.20.2
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#writePartitionFile(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/lib/InputSampler$Sampler;)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/mapred/lib/InverseMapper
@0.20.2
+#<init>()V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/KeyFieldBasedComparator
@0.20.2
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/mapred/lib/KeyFieldBasedPartitioner
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapred/lib/KeyFieldHelper$KeyDescription
@0.20.2
+#toString()Ljava/lang/String;

+###org/apache/hadoop/mapred/lib/LongSumReducer
@0.20.2
+#<init>()V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/MultipleInputs
@0.20.2
+#<init>()V
+#addInputPath(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;)V
+#addInputPath(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;)V

+###org/apache/hadoop/mapred/lib/MultipleOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;

+###org/apache/hadoop/mapred/lib/MultipleOutputs
@0.20.2
+#getNamedOutputsList(Lorg/apache/hadoop/mapred/JobConf;)Ljava/util/List;
+#isMultiNamedOutput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Z
+#getNamedOutputFormatClass(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Ljava/lang/Class;
+#getNamedOutputKeyClass(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Ljava/lang/Class;
+#getNamedOutputValueClass(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)Ljava/lang/Class;
+#addNamedOutput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V
+#addMultiNamedOutput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V
+#setCountersEnabled(Lorg/apache/hadoop/mapred/JobConf;Z)V
+#getCountersEnabled(Lorg/apache/hadoop/mapred/JobConf;)Z
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
+#getNamedOutputs()Ljava/util/Iterator;
+#getCollector(Ljava/lang/String;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/OutputCollector;
+#getCollector(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/OutputCollector;
+#close()V

+###org/apache/hadoop/mapred/lib/MultipleSequenceFileOutputFormat
@0.20.2
+#<init>()V

+###org/apache/hadoop/mapred/lib/MultipleTextOutputFormat
@0.20.2
+#<init>()V

+###org/apache/hadoop/mapred/lib/MultithreadedMapRunner
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#run(Lorg/apache/hadoop/mapred/RecordReader;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/NLineInputFormat
@0.20.2
+#<init>()V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/lib/NullOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/lib/RegexMapper
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#map(Ljava/lang/Object;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/TokenCountMapper
@0.20.2
+#<init>()V
+#map(Ljava/lang/Object;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/TotalOrderPartitioner
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#getPartition(Lorg/apache/hadoop/io/WritableComparable;Ljava/lang/Object;I)I
+#setPartitionFile(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/fs/Path;)V
+#getPartitionFile(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/String;
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapred/lib/aggregate/DoubleValueSum
@0.20.2
+#<init>()V
+#addNextValue(Ljava/lang/Object;)V
+#addNextValue(D)V
+#getReport()Ljava/lang/String;
+#getSum()D
+#reset()V
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/LongValueMax
@0.20.2
+#<init>()V
+#addNextValue(Ljava/lang/Object;)V
+#addNextValue(J)V
+#getVal()J
+#getReport()Ljava/lang/String;
+#reset()V
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/LongValueMin
@0.20.2
+#<init>()V
+#addNextValue(Ljava/lang/Object;)V
+#addNextValue(J)V
+#getVal()J
+#getReport()Ljava/lang/String;
+#reset()V
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/LongValueSum
@0.20.2
+#<init>()V
+#addNextValue(Ljava/lang/Object;)V
+#addNextValue(J)V
+#getSum()J
+#getReport()Ljava/lang/String;
+#reset()V
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/StringValueMax
@0.20.2
+#<init>()V
+#addNextValue(Ljava/lang/Object;)V
+#getVal()Ljava/lang/String;
+#getReport()Ljava/lang/String;
+#reset()V
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/StringValueMin
@0.20.2
+#<init>()V
+#addNextValue(Ljava/lang/Object;)V
+#getVal()Ljava/lang/String;
+#getReport()Ljava/lang/String;
+#reset()V
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/UniqValueCount
@0.20.2
+#<init>()V
+#<init>(J)V
+#setMaxItems(J)J
+#addNextValue(Ljava/lang/Object;)V
+#getReport()Ljava/lang/String;
+#getUniqueItems()Ljava/util/Set;
+#reset()V
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/UserDefinedValueAggregatorDescriptor
@0.20.2
+#createInstance(Ljava/lang/String;)Ljava/lang/Object;
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobConf;)V
+#generateKeyValPairs(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/ArrayList;
+#toString()Ljava/lang/String;
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregator
@0.20.2
+#addNextValue(Ljava/lang/Object;)V
+#reset()V
+#getReport()Ljava/lang/String;
+#getCombinerOutput()Ljava/util/ArrayList;

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorBaseDescriptor
@0.20.2
+#<init>()V
+#generateEntry(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/io/Text;)Ljava/util/Map$Entry;
+#generateValueAggregator(Ljava/lang/String;)Lorg/apache/hadoop/mapred/lib/aggregate/ValueAggregator;
+#generateKeyValPairs(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/ArrayList;
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorCombiner
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#reduce(Lorg/apache/hadoop/io/Text;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#close()V
+#map(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorDescriptor
@0.20.2
+#generateKeyValPairs(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/ArrayList;
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorJob
@0.20.2
+#<init>()V
+#createValueAggregatorJobs([Ljava/lang/String;[Ljava/lang/Class;)Lorg/apache/hadoop/mapred/jobcontrol/JobControl;
+#createValueAggregatorJobs([Ljava/lang/String;)Lorg/apache/hadoop/mapred/jobcontrol/JobControl;
+#createValueAggregatorJob([Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobConf;
+#createValueAggregatorJob([Ljava/lang/String;[Ljava/lang/Class;)Lorg/apache/hadoop/mapred/JobConf;
+#setAggregatorDescriptors(Lorg/apache/hadoop/mapred/JobConf;[Ljava/lang/Class;)V
+#main([Ljava/lang/String;)V
@1.2.0
+#createValueAggregatorJob([Ljava/lang/String;Ljava/lang/Class;)Lorg/apache/hadoop/mapred/JobConf;
+#createValueAggregatorJob([Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/hadoop/mapred/JobConf;

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorJobBase
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#close()V

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorMapper
@0.20.2
+#<init>()V
+#map(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#reduce(Lorg/apache/hadoop/io/Text;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/aggregate/ValueAggregatorReducer
@0.20.2
+#<init>()V
+#reduce(Lorg/apache/hadoop/io/Text;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Lorg/apache/hadoop/io/WritableComparable;Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V

+###org/apache/hadoop/mapred/lib/aggregate/ValueHistogram
@0.20.2
+#<init>()V
+#addNextValue(Ljava/lang/Object;)V
+#getReport()Ljava/lang/String;
+#getReportDetails()Ljava/lang/String;
+#getCombinerOutput()Ljava/util/ArrayList;
+#getReportItems()Ljava/util/TreeMap;
+#reset()V

+###org/apache/hadoop/mapred/lib/db/DBConfiguration
@0.20.2
+#configureDB(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#configureDB(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapred/lib/db/DBInputFormat$DBInputSplit
@0.20.2
+#<init>()V
+#<init>(JJ)V
+#getLocations()[Ljava/lang/String;
+#getStart()J
+#getEnd()J
+#getLength()J
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/mapred/lib/db/DBInputFormat$DBRecordReader
@0.20.2
+#close()V
+#createKey()Lorg/apache/hadoop/io/LongWritable;
+#createValue()Lorg/apache/hadoop/mapred/lib/db/DBWritable;
+#getPos()J
+#getProgress()F
+#next(Lorg/apache/hadoop/io/LongWritable;Lorg/apache/hadoop/mapred/lib/db/DBWritable;)Z
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/mapred/lib/db/DBInputFormat$NullDBWritable
@0.20.2
+#<init>()V
+#readFields(Ljava/io/DataInput;)V
+#readFields(Ljava/sql/ResultSet;)V
+#write(Ljava/io/DataOutput;)V
+#write(Ljava/sql/PreparedStatement;)V

+###org/apache/hadoop/mapred/lib/db/DBInputFormat
@0.20.2
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#setInput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#setInput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapred/lib/db/DBOutputFormat$DBRecordWriter
@0.20.2
+#close(Lorg/apache/hadoop/mapred/Reporter;)V
+#write(Lorg/apache/hadoop/mapred/lib/db/DBWritable;Ljava/lang/Object;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/hadoop/mapred/lib/db/DBOutputFormat
@0.20.2
+#<init>()V
+#checkOutputSpecs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;)V
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#setOutput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;[Ljava/lang/String;)V

+###org/apache/hadoop/mapred/lib/db/DBWritable
@0.20.2
+#write(Ljava/sql/PreparedStatement;)V
+#readFields(Ljava/sql/ResultSet;)V

+###org/apache/hadoop/mapred/loadhistory_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/machines_jsp
@0.20.2
+#<init>()V
+#generateTaskTrackerTable(Ljavax/servlet/jsp/JspWriter;Ljava/lang/String;Lorg/apache/hadoop/mapred/JobTracker;)V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.20.203.0
+#generateTableForExcludedNodes(Ljavax/servlet/jsp/JspWriter;Lorg/apache/hadoop/mapred/JobTracker;)V

+###org/apache/hadoop/mapred/pipes/Submitter
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getExecutable(Lorg/apache/hadoop/mapred/JobConf;)Ljava/lang/String;
+#setExecutable(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;)V
+#setIsJavaRecordReader(Lorg/apache/hadoop/mapred/JobConf;Z)V
+#getIsJavaRecordReader(Lorg/apache/hadoop/mapred/JobConf;)Z
+#setIsJavaMapper(Lorg/apache/hadoop/mapred/JobConf;Z)V
+#getIsJavaMapper(Lorg/apache/hadoop/mapred/JobConf;)Z
+#setIsJavaReducer(Lorg/apache/hadoop/mapred/JobConf;Z)V
+#getIsJavaReducer(Lorg/apache/hadoop/mapred/JobConf;)Z
+#setIsJavaRecordWriter(Lorg/apache/hadoop/mapred/JobConf;Z)V
+#getIsJavaRecordWriter(Lorg/apache/hadoop/mapred/JobConf;)Z
+#getKeepCommandFile(Lorg/apache/hadoop/mapred/JobConf;)Z
+#setKeepCommandFile(Lorg/apache/hadoop/mapred/JobConf;Z)V
+#submitJob(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/RunningJob;[deprecated]
+#runJob(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/RunningJob;
+#jobSubmit(Lorg/apache/hadoop/mapred/JobConf;)Lorg/apache/hadoop/mapred/RunningJob;
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/mapred/taskdetails_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/taskdetailshistory_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/taskstats_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/taskstatshistory_jsp
@0.20.203.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/tasktracker_jsp
@0.20.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapred/tools/MRAdmin
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@0.20.203.0
+#refreshSuperUserGroupsConfiguration()I

+###org/apache/hadoop/mapreduce/ClusterMetrics
@0.20.203.0
+#<init>()V
+#<init>(IIIIIIIIIIIII)V
+#getRunningMaps()I
+#getRunningReduces()I
+#getOccupiedMapSlots()I
+#getOccupiedReduceSlots()I
+#getReservedMapSlots()I
+#getReservedReduceSlots()I
+#getMapSlotCapacity()I
+#getReduceSlotCapacity()I
+#getTotalJobSubmissions()I
+#getTaskTrackerCount()I
+#getBlackListedTaskTrackerCount()I
+#getGrayListedTaskTrackerCount()I
+#getDecommissionedTaskTrackerCount()I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/mapreduce/Counter
@0.20.2
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#getName()Ljava/lang/String;
+#getDisplayName()Ljava/lang/String;
+#getValue()J
+#increment(J)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.20.205.0
+#setValue(J)V

+###org/apache/hadoop/mapreduce/CounterGroup
@0.20.2
+#getName()Ljava/lang/String;
+#getDisplayName()Ljava/lang/String;
+#findCounter(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Counter;
+#iterator()Ljava/util/Iterator;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#size()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#incrAllCounters(Lorg/apache/hadoop/mapreduce/CounterGroup;)V
@1.2.0
+#getResourceBundle(Ljava/lang/String;)Ljava/util/ResourceBundle;

+###org/apache/hadoop/mapreduce/Counters
@0.20.2
+#<init>()V
+#findCounter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Counter;
+#findCounter(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
+#getGroupNames()Ljava/util/Collection;
+#iterator()Ljava/util/Iterator;
+#getGroup(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/CounterGroup;
+#countCounters()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#toString()Ljava/lang/String;
+#incrAllCounters(Lorg/apache/hadoop/mapreduce/Counters;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapred/Counters;)V

+###org/apache/hadoop/mapreduce/ID
@0.20.2
+#<init>(I)V
+#getId()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/apache/hadoop/mapreduce/ID;)I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/mapreduce/InputFormat
@0.20.2
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/InputSplit
@0.20.2
+#<init>()V
+#getLength()J
+#getLocations()[Ljava/lang/String;

+###org/apache/hadoop/mapreduce/Job$JobState
@0.20.2
+#values()[Lorg/apache/hadoop/mapreduce/Job$JobState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job$JobState;

+###org/apache/hadoop/mapreduce/Job
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#setNumReduceTasks(I)V
+#setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V
+#setInputFormatClass(Ljava/lang/Class;)V
+#setOutputFormatClass(Ljava/lang/Class;)V
+#setMapperClass(Ljava/lang/Class;)V
+#setJarByClass(Ljava/lang/Class;)V
+#getJar()Ljava/lang/String;
+#setCombinerClass(Ljava/lang/Class;)V
+#setReducerClass(Ljava/lang/Class;)V
+#setPartitionerClass(Ljava/lang/Class;)V
+#setMapOutputKeyClass(Ljava/lang/Class;)V
+#setMapOutputValueClass(Ljava/lang/Class;)V
+#setOutputKeyClass(Ljava/lang/Class;)V
+#setOutputValueClass(Ljava/lang/Class;)V
+#setSortComparatorClass(Ljava/lang/Class;)V
+#setGroupingComparatorClass(Ljava/lang/Class;)V
+#setJobName(Ljava/lang/String;)V
+#getTrackingURL()Ljava/lang/String;
+#mapProgress()F
+#reduceProgress()F
+#isComplete()Z
+#isSuccessful()Z
+#killJob()V
+#getTaskCompletionEvents(I)[Lorg/apache/hadoop/mapred/TaskCompletionEvent;
+#killTask(Lorg/apache/hadoop/mapreduce/TaskAttemptID;)V
+#failTask(Lorg/apache/hadoop/mapreduce/TaskAttemptID;)V
+#getCounters()Lorg/apache/hadoop/mapreduce/Counters;
+#submit()V
+#waitForCompletion(Z)Z
@0.20.203.0
+#setupProgress()F
+#setCancelDelegationTokenUponJobCompletion(Z)V
@1.0.1
+#setSpeculativeExecution(Z)V
+#setMapSpeculativeExecution(Z)V
+#setReduceSpeculativeExecution(Z)V
@1.2.0
+#getInstance()Lorg/apache/hadoop/mapreduce/Job;
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/mapreduce/Job;
+#getInstance(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;

+###org/apache/hadoop/mapreduce/JobACL
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapreduce/JobACL;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/JobACL;
+#getAclName()Ljava/lang/String;

+###org/apache/hadoop/mapreduce/JobContext
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/JobID;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;
+#getNumReduceTasks()I
+#getWorkingDirectory()Lorg/apache/hadoop/fs/Path;
+#getOutputKeyClass()Ljava/lang/Class;
+#getOutputValueClass()Ljava/lang/Class;
+#getMapOutputKeyClass()Ljava/lang/Class;
+#getMapOutputValueClass()Ljava/lang/Class;
+#getJobName()Ljava/lang/String;
+#getInputFormatClass()Ljava/lang/Class;
+#getMapperClass()Ljava/lang/Class;
+#getCombinerClass()Ljava/lang/Class;
+#getReducerClass()Ljava/lang/Class;
+#getOutputFormatClass()Ljava/lang/Class;
+#getPartitionerClass()Ljava/lang/Class;
+#getSortComparator()Lorg/apache/hadoop/io/RawComparator;
+#getJar()Ljava/lang/String;
+#getGroupingComparator()Lorg/apache/hadoop/io/RawComparator;
@0.20.203.0
+#getCredentials()Lorg/apache/hadoop/security/Credentials;

+###org/apache/hadoop/mapreduce/JobID
@0.20.2
+#<init>(Ljava/lang/String;I)V
+#<init>()V
+#getJtIdentifier()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/apache/hadoop/mapreduce/ID;)I
+#appendTo(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
+#hashCode()I
+#toString()Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#forName(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/JobID;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/mapreduce/JobStatus$State
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapreduce/JobStatus$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/JobStatus$State;
+#getValue()I

+###org/apache/hadoop/mapreduce/JobStatus
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/mapreduce/JobSubmissionFiles
@0.20.203.0
+#<init>()V
+#getJobSplitFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getJobSplitMetaFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getJobConfPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getJobJar(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getJobDistCacheFiles(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getJobDistCacheArchives(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getJobDistCacheLibjars(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getStagingDir(Lorg/apache/hadoop/mapred/JobClient;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/mapreduce/MapContext
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;Lorg/apache/hadoop/mapreduce/RecordReader;Lorg/apache/hadoop/mapreduce/RecordWriter;Lorg/apache/hadoop/mapreduce/OutputCommitter;Lorg/apache/hadoop/mapreduce/StatusReporter;Lorg/apache/hadoop/mapreduce/InputSplit;)V
+#getInputSplit()Lorg/apache/hadoop/mapreduce/InputSplit;
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentValue()Ljava/lang/Object;
+#nextKeyValue()Z

+###org/apache/hadoop/mapreduce/Mapper$Context
@0.20.2
+#<init>(Lorg/apache/hadoop/mapreduce/Mapper;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;Lorg/apache/hadoop/mapreduce/RecordReader;Lorg/apache/hadoop/mapreduce/RecordWriter;Lorg/apache/hadoop/mapreduce/OutputCommitter;Lorg/apache/hadoop/mapreduce/StatusReporter;Lorg/apache/hadoop/mapreduce/InputSplit;)V

+###org/apache/hadoop/mapreduce/Mapper
@0.20.2
+#<init>()V
+#run(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V

+###org/apache/hadoop/mapreduce/OutputCommitter
@0.20.2
+#<init>()V
+#setupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#cleanupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#setupTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#needsTaskCommit(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Z
+#commitTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#abortTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
@0.20.203.0
+#commitJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
*#cleanupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V[deprecated]
+#abortJob(Lorg/apache/hadoop/mapreduce/JobContext;Lorg/apache/hadoop/mapreduce/JobStatus$State;)V

+###org/apache/hadoop/mapreduce/OutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;

+###org/apache/hadoop/mapreduce/Partitioner
@0.20.2
+#<init>()V
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapreduce/RecordReader
@0.20.2
+#<init>()V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#nextKeyValue()Z
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentValue()Ljava/lang/Object;
+#getProgress()F
+#close()V

+###org/apache/hadoop/mapreduce/RecordWriter
@0.20.2
+#<init>()V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#close(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V

+###org/apache/hadoop/mapreduce/ReduceContext$ValueIterable
@0.20.2
+#iterator()Ljava/util/Iterator;

+###org/apache/hadoop/mapreduce/ReduceContext$ValueIterator
@0.20.2
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/hadoop/mapreduce/ReduceContext
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;Lorg/apache/hadoop/mapred/RawKeyValueIterator;Lorg/apache/hadoop/mapreduce/Counter;Lorg/apache/hadoop/mapreduce/Counter;Lorg/apache/hadoop/mapreduce/RecordWriter;Lorg/apache/hadoop/mapreduce/OutputCommitter;Lorg/apache/hadoop/mapreduce/StatusReporter;Lorg/apache/hadoop/io/RawComparator;Ljava/lang/Class;Ljava/lang/Class;)V
+#nextKey()Z
+#nextKeyValue()Z
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentValue()Ljava/lang/Object;
+#getValues()Ljava/lang/Iterable;

+###org/apache/hadoop/mapreduce/Reducer$Context
@0.20.2
+#<init>(Lorg/apache/hadoop/mapreduce/Reducer;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;Lorg/apache/hadoop/mapred/RawKeyValueIterator;Lorg/apache/hadoop/mapreduce/Counter;Lorg/apache/hadoop/mapreduce/Counter;Lorg/apache/hadoop/mapreduce/RecordWriter;Lorg/apache/hadoop/mapreduce/OutputCommitter;Lorg/apache/hadoop/mapreduce/StatusReporter;Lorg/apache/hadoop/io/RawComparator;Ljava/lang/Class;Ljava/lang/Class;)V

+###org/apache/hadoop/mapreduce/Reducer
@0.20.2
+#<init>()V
+#run(Lorg/apache/hadoop/mapreduce/Reducer$Context;)V

+###org/apache/hadoop/mapreduce/StatusReporter
@0.20.2
+#<init>()V
+#getCounter(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
+#getCounter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Counter;
+#progress()V
+#setStatus(Ljava/lang/String;)V
@1.1.0
+#getProgress()F

+###org/apache/hadoop/mapreduce/TaskAttemptContext
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;)V
+#getTaskAttemptID()Lorg/apache/hadoop/mapreduce/TaskAttemptID;
+#setStatus(Ljava/lang/String;)V
+#getStatus()Ljava/lang/String;
+#progress()V

+###org/apache/hadoop/mapreduce/TaskAttemptID
@0.20.2
+#<init>(Lorg/apache/hadoop/mapreduce/TaskID;I)V
+#<init>(Ljava/lang/String;IZII)V
+#<init>()V
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;
+#getTaskID()Lorg/apache/hadoop/mapreduce/TaskID;
+#isMap()Z
+#equals(Ljava/lang/Object;)Z
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/mapreduce/ID;)I
+#toString()Ljava/lang/String;
+#forName(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/TaskAttemptID;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/mapreduce/TaskID
@0.20.2
+#<init>(Lorg/apache/hadoop/mapreduce/JobID;ZI)V
+#<init>(Ljava/lang/String;IZI)V
+#<init>()V
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;
+#isMap()Z
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/apache/hadoop/mapreduce/ID;)I
+#toString()Ljava/lang/String;
+#hashCode()I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#forName(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/TaskID;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/mapreduce/TaskInputOutputContext
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/TaskAttemptID;Lorg/apache/hadoop/mapreduce/RecordWriter;Lorg/apache/hadoop/mapreduce/OutputCommitter;Lorg/apache/hadoop/mapreduce/StatusReporter;)V
+#nextKeyValue()Z
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentValue()Ljava/lang/Object;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#getCounter(Ljava/lang/Enum;)Lorg/apache/hadoop/mapreduce/Counter;
+#getCounter(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Counter;
+#progress()V
+#setStatus(Ljava/lang/String;)V
+#getOutputCommitter()Lorg/apache/hadoop/mapreduce/OutputCommitter;
@1.1.0
+#getProgress()F

+###org/apache/hadoop/mapreduce/TaskType
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapreduce/TaskType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/TaskType;

+###org/apache/hadoop/mapreduce/lib/db/BigDecimalSplitter
@1.0.1
+#<init>()V
+#split(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/mapreduce/lib/db/BooleanSplitter
@1.0.1
+#<init>()V
+#split(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/mapreduce/lib/db/DBConfiguration
@1.0.1
+#configureDB(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#configureDB(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getConnection()Ljava/sql/Connection;
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getInputTableName()Ljava/lang/String;
+#setInputTableName(Ljava/lang/String;)V
+#getInputFieldNames()[Ljava/lang/String;
+#setInputFieldNames([Ljava/lang/String;)V
+#getInputConditions()Ljava/lang/String;
+#setInputConditions(Ljava/lang/String;)V
+#getInputOrderBy()Ljava/lang/String;
+#setInputOrderBy(Ljava/lang/String;)V
+#getInputQuery()Ljava/lang/String;
+#setInputQuery(Ljava/lang/String;)V
+#getInputCountQuery()Ljava/lang/String;
+#setInputCountQuery(Ljava/lang/String;)V
+#setInputBoundingQuery(Ljava/lang/String;)V
+#getInputBoundingQuery()Ljava/lang/String;
+#getInputClass()Ljava/lang/Class;
+#setInputClass(Ljava/lang/Class;)V
+#getOutputTableName()Ljava/lang/String;
+#setOutputTableName(Ljava/lang/String;)V
+#getOutputFieldNames()[Ljava/lang/String;
+#setOutputFieldNames([Ljava/lang/String;)V
+#setOutputFieldCount(I)V
+#getOutputFieldCount()I

+###org/apache/hadoop/mapreduce/lib/db/DBInputFormat$DBInputSplit
@1.0.1
+#<init>()V
+#<init>(JJ)V
+#getLocations()[Ljava/lang/String;
+#getStart()J
+#getEnd()J
+#getLength()J
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/mapreduce/lib/db/DBInputFormat$NullDBWritable
@1.0.1
+#<init>()V
+#readFields(Ljava/io/DataInput;)V
+#readFields(Ljava/sql/ResultSet;)V
+#write(Ljava/io/DataOutput;)V
+#write(Ljava/sql/PreparedStatement;)V

+###org/apache/hadoop/mapreduce/lib/db/DBInputFormat
@1.0.1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getDBConf()Lorg/apache/hadoop/mapreduce/lib/db/DBConfiguration;
+#getConnection()Ljava/sql/Connection;
+#getDBProductName()Ljava/lang/String;
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#setInput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#setInput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/db/DBOutputFormat$DBRecordWriter
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBOutputFormat;)V
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBOutputFormat;Ljava/sql/Connection;Ljava/sql/PreparedStatement;)V
+#getConnection()Ljava/sql/Connection;
+#getStatement()Ljava/sql/PreparedStatement;
+#close(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#write(Lorg/apache/hadoop/mapreduce/lib/db/DBWritable;Ljava/lang/Object;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/apache/hadoop/mapreduce/lib/db/DBOutputFormat
@1.0.1
+#<init>()V
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;
+#constructQuery(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#setOutput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;[Ljava/lang/String;)V
+#setOutput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;I)V

+###org/apache/hadoop/mapreduce/lib/db/DBRecordReader
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBInputFormat$DBInputSplit;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/sql/Connection;Lorg/apache/hadoop/mapreduce/lib/db/DBConfiguration;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V
+#close()V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#getCurrentKey()Lorg/apache/hadoop/io/LongWritable;
+#getCurrentValue()Lorg/apache/hadoop/mapreduce/lib/db/DBWritable;
+#createValue()Lorg/apache/hadoop/mapreduce/lib/db/DBWritable;[deprecated]
+#getPos()J[deprecated]
+#next(Lorg/apache/hadoop/io/LongWritable;Lorg/apache/hadoop/mapreduce/lib/db/DBWritable;)Z[deprecated]
+#getProgress()F
+#nextKeyValue()Z
+#getCurrentValue()Ljava/lang/Object;
+#getCurrentKey()Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/db/DBSplitter
@1.0.1
+#split(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/mapreduce/lib/db/DBWritable
@1.0.1
+#write(Ljava/sql/PreparedStatement;)V
+#readFields(Ljava/sql/ResultSet;)V

+###org/apache/hadoop/mapreduce/lib/db/DataDrivenDBInputFormat$DataDrivenDBInputSplit
@1.0.1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getLength()J
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#getLowerClause()Ljava/lang/String;
+#getUpperClause()Ljava/lang/String;

+###org/apache/hadoop/mapreduce/lib/db/DataDrivenDBInputFormat
@1.0.1
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#setBoundingQuery(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#setInput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
+#setInput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/db/DataDrivenDBRecordReader
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBInputFormat$DBInputSplit;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/sql/Connection;Lorg/apache/hadoop/mapreduce/lib/db/DBConfiguration;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/db/DateSplitter
@1.0.1
+#<init>()V
+#split(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/mapreduce/lib/db/FloatSplitter
@1.0.1
+#<init>()V
+#split(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/mapreduce/lib/db/IntegerSplitter
@1.0.1
+#<init>()V
+#split(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/mapreduce/lib/db/MySQLDBRecordReader
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBInputFormat$DBInputSplit;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/sql/Connection;Lorg/apache/hadoop/mapreduce/lib/db/DBConfiguration;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/db/MySQLDataDrivenDBRecordReader
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBInputFormat$DBInputSplit;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/sql/Connection;Lorg/apache/hadoop/mapreduce/lib/db/DBConfiguration;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/db/OracleDBRecordReader
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBInputFormat$DBInputSplit;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/sql/Connection;Lorg/apache/hadoop/mapreduce/lib/db/DBConfiguration;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V
+#setSessionTimeZone(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/Connection;)V

+###org/apache/hadoop/mapreduce/lib/db/OracleDataDrivenDBInputFormat
@1.0.1
+#<init>()V

+###org/apache/hadoop/mapreduce/lib/db/OracleDataDrivenDBRecordReader
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/lib/db/DBInputFormat$DBInputSplit;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/sql/Connection;Lorg/apache/hadoop/mapreduce/lib/db/DBConfiguration;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/db/OracleDateSplitter
@1.0.1
+#<init>()V

+###org/apache/hadoop/mapreduce/lib/db/TextSplitter
@1.0.1
+#<init>()V
+#split(Lorg/apache/hadoop/conf/Configuration;Ljava/sql/ResultSet;Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper
@1.0.1
+#parseOutputKeyValueSpec(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)I
+#specToString(Ljava/lang/String;Ljava/lang/String;ILjava/util/List;Ljava/util/List;)Ljava/lang/String;
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
+#getKey()Lorg/apache/hadoop/io/Text;
+#getValue()Lorg/apache/hadoop/io/Text;
+#extractOutputKeyValue(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IZZ)V

+###org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionMapper
@1.0.1
+#<init>()V
+#setup(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V

+###org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionReducer
@1.0.1
+#<init>()V
+#setup(Lorg/apache/hadoop/mapreduce/Reducer$Context;)V
+#reduce(Lorg/apache/hadoop/io/Text;Ljava/lang/Iterable;Lorg/apache/hadoop/mapreduce/Reducer$Context;)V
+#reduce(Ljava/lang/Object;Ljava/lang/Iterable;Lorg/apache/hadoop/mapreduce/Reducer$Context;)V

+###org/apache/hadoop/mapreduce/lib/input/CombineFileInputFormat
@1.0.1
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/lib/input/CombineFileRecordReader
@1.0.1
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#nextKeyValue()Z
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentValue()Ljava/lang/Object;
+#close()V
+#getProgress()F
+#<init>(Lorg/apache/hadoop/mapreduce/lib/input/CombineFileSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/Class;)V

+###org/apache/hadoop/mapreduce/lib/input/CombineFileSplit
@1.0.1
+#<init>()V
+#<init>([Lorg/apache/hadoop/fs/Path;[J[J[Ljava/lang/String;)V
+#<init>([Lorg/apache/hadoop/fs/Path;[J)V
+#<init>(Lorg/apache/hadoop/mapreduce/lib/input/CombineFileSplit;)V
+#getLength()J
+#getStartOffsets()[J
+#getLengths()[J
+#getOffset(I)J
+#getLength(I)J
+#getNumPaths()I
+#getPath(I)Lorg/apache/hadoop/fs/Path;
+#getPaths()[Lorg/apache/hadoop/fs/Path;
+#getLocations()[Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/mapreduce/lib/input/DelegatingInputFormat
@1.0.1
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/lib/input/DelegatingMapper
@1.0.1
+#<init>()V
+#run(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V

+###org/apache/hadoop/mapreduce/lib/input/DelegatingRecordReader
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#close()V
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentValue()Ljava/lang/Object;
+#getProgress()F
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#nextKeyValue()Z

+###org/apache/hadoop/mapreduce/lib/input/FileInputFormat$Counter
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapreduce/lib/input/FileInputFormat$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/lib/input/FileInputFormat$Counter;

+###org/apache/hadoop/mapreduce/lib/input/FileInputFormat
@0.20.2
+#<init>()V
+#setInputPathFilter(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#setMinInputSplitSize(Lorg/apache/hadoop/mapreduce/Job;J)V
+#getMinSplitSize(Lorg/apache/hadoop/mapreduce/JobContext;)J
+#setMaxInputSplitSize(Lorg/apache/hadoop/mapreduce/Job;J)V
+#getMaxSplitSize(Lorg/apache/hadoop/mapreduce/JobContext;)J
+#getInputPathFilter(Lorg/apache/hadoop/mapreduce/JobContext;)Lorg/apache/hadoop/fs/PathFilter;
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#setInputPaths(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;)V
+#addInputPaths(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;)V
+#setInputPaths(Lorg/apache/hadoop/mapreduce/Job;[Lorg/apache/hadoop/fs/Path;)V
+#addInputPath(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/fs/Path;)V
+#getInputPaths(Lorg/apache/hadoop/mapreduce/JobContext;)[Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/mapreduce/lib/input/FileSplit
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/Path;JJ[Ljava/lang/String;)V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#getStart()J
+#getLength()J
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#getLocations()[Ljava/lang/String;

+###org/apache/hadoop/mapreduce/lib/input/InvalidInputException
@0.20.2
+#<init>(Ljava/util/List;)V
+#getProblems()Ljava/util/List;
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/mapreduce/lib/input/KeyValueLineRecordReader
@1.0.1
+#getKeyClass()Ljava/lang/Class;
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#findSeparator([BIIB)I
+#setKeyValue(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;[BII)V
+#nextKeyValue()Z
+#getCurrentKey()Lorg/apache/hadoop/io/Text;
+#getCurrentValue()Lorg/apache/hadoop/io/Text;
+#getProgress()F
+#close()V
+#getCurrentValue()Ljava/lang/Object;
+#getCurrentKey()Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/input/KeyValueTextInputFormat
@1.0.1
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/lib/input/LineRecordReader
@0.20.2
+#<init>()V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#nextKeyValue()Z
+#getCurrentKey()Lorg/apache/hadoop/io/LongWritable;
+#getCurrentValue()Lorg/apache/hadoop/io/Text;
+#getProgress()F
+#close()V
+#getCurrentValue()Ljava/lang/Object;
+#getCurrentKey()Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/input/MultipleInputs
@1.0.1
+#<init>()V
+#addInputPath(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;)V
+#addInputPath(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/fs/Path;Ljava/lang/Class;Ljava/lang/Class;)V

+###org/apache/hadoop/mapreduce/lib/input/NLineInputFormat
@1.0.1
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#getSplitsForFile(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/conf/Configuration;I)Ljava/util/List;
+#setNumLinesPerSplit(Lorg/apache/hadoop/mapreduce/Job;I)V
+#getNumLinesPerSplit(Lorg/apache/hadoop/mapreduce/JobContext;)I

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileAsBinaryInputFormat$SequenceFileAsBinaryRecordReader
@1.0.1
+#<init>()V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#getCurrentKey()Lorg/apache/hadoop/io/BytesWritable;
+#getCurrentValue()Lorg/apache/hadoop/io/BytesWritable;
+#getKeyClassName()Ljava/lang/String;
+#getValueClassName()Ljava/lang/String;
+#nextKeyValue()Z
+#close()V
+#getProgress()F
+#getCurrentValue()Ljava/lang/Object;
+#getCurrentKey()Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileAsBinaryInputFormat
@1.0.1
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileAsTextInputFormat
@1.0.1
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileAsTextRecordReader
@1.0.1
+#<init>()V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#getCurrentKey()Lorg/apache/hadoop/io/Text;
+#getCurrentValue()Lorg/apache/hadoop/io/Text;
+#nextKeyValue()Z
+#getProgress()F
+#close()V
+#getCurrentValue()Ljava/lang/Object;
+#getCurrentKey()Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFilter$Filter
@1.0.1
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFilter$FilterBase
@1.0.1
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFilter$MD5Filter
@1.0.1
+#setFrequency(Lorg/apache/hadoop/conf/Configuration;I)V
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFilter$PercentFilter
@1.0.1
+#setFrequency(Lorg/apache/hadoop/conf/Configuration;I)V
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFilter$RegexFilter
@1.0.1
+#setPattern(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#accept(Ljava/lang/Object;)Z

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFilter
@1.0.1
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
+#setFilterClass(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFormat
@0.20.2
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/lib/input/SequenceFileRecordReader
@0.20.2
+#<init>()V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#nextKeyValue()Z
+#getCurrentKey()Ljava/lang/Object;
+#getCurrentValue()Ljava/lang/Object;
+#getProgress()F
+#close()V

+###org/apache/hadoop/mapreduce/lib/input/TextInputFormat
@0.20.2
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;

+###org/apache/hadoop/mapreduce/lib/jobcontrol/ControlledJob$State
@1.0.1
+#values()[Lorg/apache/hadoop/mapreduce/lib/jobcontrol/ControlledJob$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/lib/jobcontrol/ControlledJob$State;

+###org/apache/hadoop/mapreduce/lib/jobcontrol/ControlledJob
@1.0.1
+#<init>(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#toString()Ljava/lang/String;
+#getJobName()Ljava/lang/String;
+#setJobName(Ljava/lang/String;)V
+#getJobID()Ljava/lang/String;
+#setJobID(Ljava/lang/String;)V
+#getMapredJobID()Lorg/apache/hadoop/mapreduce/JobID;
+#getJob()Lorg/apache/hadoop/mapreduce/Job;
+#setJob(Lorg/apache/hadoop/mapreduce/Job;)V
+#getJobState()Lorg/apache/hadoop/mapreduce/lib/jobcontrol/ControlledJob$State;
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)V
+#getDependentJobs()Ljava/util/List;
+#addDependingJob(Lorg/apache/hadoop/mapreduce/lib/jobcontrol/ControlledJob;)Z
+#isCompleted()Z
+#isReady()Z
+#killJob()V
+#failJob(Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/jobcontrol/JobControl$ThreadState
@1.0.1
+#values()[Lorg/apache/hadoop/mapreduce/lib/jobcontrol/JobControl$ThreadState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/lib/jobcontrol/JobControl$ThreadState;

+###org/apache/hadoop/mapreduce/lib/jobcontrol/JobControl
@1.0.1
+#<init>(Ljava/lang/String;)V
+#getWaitingJobList()Ljava/util/List;
+#getRunningJobList()Ljava/util/List;
+#getReadyJobsList()Ljava/util/List;
+#getSuccessfulJobList()Ljava/util/List;
+#getFailedJobList()Ljava/util/List;
+#addJob(Lorg/apache/hadoop/mapreduce/lib/jobcontrol/ControlledJob;)Ljava/lang/String;
+#addJobCollection(Ljava/util/Collection;)V
+#getThreadState()Lorg/apache/hadoop/mapreduce/lib/jobcontrol/JobControl$ThreadState;
+#stop()V
+#suspend()V
+#resume()V
+#allFinished()Z
+#run()V

+###org/apache/hadoop/mapreduce/lib/map/InverseMapper
@0.20.2
+#<init>()V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V

+###org/apache/hadoop/mapreduce/lib/map/MultithreadedMapper
@0.20.2
+#<init>()V
+#getNumberOfThreads(Lorg/apache/hadoop/mapreduce/JobContext;)I
+#setNumberOfThreads(Lorg/apache/hadoop/mapreduce/Job;I)V
+#getMapperClass(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/Class;
+#setMapperClass(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#run(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V

+###org/apache/hadoop/mapreduce/lib/map/TokenCounterMapper
@0.20.2
+#<init>()V
+#map(Ljava/lang/Object;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V

+###org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter
@0.20.2
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#setupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#cleanupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#setupTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#commitTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#abortTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#needsTaskCommit(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Z
+#getWorkPath()Lorg/apache/hadoop/fs/Path;
@0.20.203.0
+#commitJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
*#cleanupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V[deprecated]
+#abortJob(Lorg/apache/hadoop/mapreduce/JobContext;Lorg/apache/hadoop/mapreduce/JobStatus$State;)V

+###org/apache/hadoop/mapreduce/lib/output/FileOutputFormat$Counter
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapreduce/lib/output/FileOutputFormat$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/lib/output/FileOutputFormat$Counter;

+###org/apache/hadoop/mapreduce/lib/output/FileOutputFormat
@0.20.2
+#<init>()V
+#setCompressOutput(Lorg/apache/hadoop/mapreduce/Job;Z)V
+#getCompressOutput(Lorg/apache/hadoop/mapreduce/JobContext;)Z
+#setOutputCompressorClass(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#getOutputCompressorClass(Lorg/apache/hadoop/mapreduce/JobContext;Ljava/lang/Class;)Ljava/lang/Class;
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#setOutputPath(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/fs/Path;)V
+#getOutputPath(Lorg/apache/hadoop/mapreduce/JobContext;)Lorg/apache/hadoop/fs/Path;
+#getWorkOutputPath(Lorg/apache/hadoop/mapreduce/TaskInputOutputContext;)Lorg/apache/hadoop/fs/Path;
+#getPathForWorkFile(Lorg/apache/hadoop/mapreduce/TaskInputOutputContext;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getUniqueFile(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getDefaultWorkFile(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;

+###org/apache/hadoop/mapreduce/lib/output/FilterOutputFormat$FilterRecordWriter
@1.0.1
+#<init>()V
+#<init>(Lorg/apache/hadoop/mapreduce/RecordWriter;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#close(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V

+###org/apache/hadoop/mapreduce/lib/output/FilterOutputFormat
@1.0.1
+#<init>()V
+#<init>(Lorg/apache/hadoop/mapreduce/OutputFormat;)V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;

+###org/apache/hadoop/mapreduce/lib/output/LazyOutputFormat
@1.0.1
+#<init>()V
+#setOutputFormatClass(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;

+###org/apache/hadoop/mapreduce/lib/output/MultipleOutputs
@1.0.1
+#addNamedOutput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V
+#setCountersEnabled(Lorg/apache/hadoop/mapreduce/Job;Z)V
+#getCountersEnabled(Lorg/apache/hadoop/mapreduce/JobContext;)Z
+#<init>(Lorg/apache/hadoop/mapreduce/TaskInputOutputContext;)V
+#write(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#write(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V
+#close()V

+###org/apache/hadoop/mapreduce/lib/output/NullOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;

+###org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat$WritableValueBytes
@1.0.1
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/BytesWritable;)V
+#reset(Lorg/apache/hadoop/io/BytesWritable;)V
+#writeUncompressedBytes(Ljava/io/DataOutputStream;)V
+#writeCompressedBytes(Ljava/io/DataOutputStream;)V
+#getSize()I

+###org/apache/hadoop/mapreduce/lib/output/SequenceFileAsBinaryOutputFormat
@1.0.1
+#<init>()V
+#setSequenceFileOutputKeyClass(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#setSequenceFileOutputValueClass(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#getSequenceFileOutputKeyClass(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/Class;
+#getSequenceFileOutputValueClass(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/Class;
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V

+###org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#getOutputCompressionType(Lorg/apache/hadoop/mapreduce/JobContext;)Lorg/apache/hadoop/io/SequenceFile$CompressionType;
+#setOutputCompressionType(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/io/SequenceFile$CompressionType;)V

+###org/apache/hadoop/mapreduce/lib/output/TextOutputFormat$LineRecordWriter
@0.20.2
+#<init>(Ljava/io/DataOutputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/DataOutputStream;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#close(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V

+###org/apache/hadoop/mapreduce/lib/output/TextOutputFormat
@0.20.2
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;

+###org/apache/hadoop/mapreduce/lib/partition/BinaryPartitioner
@1.0.1
+#<init>()V
+#setOffsets(Lorg/apache/hadoop/conf/Configuration;II)V
+#setLeftOffset(Lorg/apache/hadoop/conf/Configuration;I)V
+#setRightOffset(Lorg/apache/hadoop/conf/Configuration;I)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getPartition(Lorg/apache/hadoop/io/BinaryComparable;Ljava/lang/Object;I)I
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapreduce/lib/partition/HashPartitioner
@0.20.2
+#<init>()V
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapreduce/lib/partition/InputSampler$IntervalSampler
@1.0.1
+#<init>(D)V
+#<init>(DI)V
+#getSample(Lorg/apache/hadoop/mapreduce/InputFormat;Lorg/apache/hadoop/mapreduce/Job;)[Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/partition/InputSampler$RandomSampler
@1.0.1
+#<init>(DI)V
+#<init>(DII)V
+#getSample(Lorg/apache/hadoop/mapreduce/InputFormat;Lorg/apache/hadoop/mapreduce/Job;)[Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/partition/InputSampler$Sampler
@1.0.1
+#getSample(Lorg/apache/hadoop/mapreduce/InputFormat;Lorg/apache/hadoop/mapreduce/Job;)[Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/partition/InputSampler$SplitSampler
@1.0.1
+#<init>(I)V
+#<init>(II)V
+#getSample(Lorg/apache/hadoop/mapreduce/InputFormat;Lorg/apache/hadoop/mapreduce/Job;)[Ljava/lang/Object;

+###org/apache/hadoop/mapreduce/lib/partition/InputSampler
@1.0.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#writePartitionFile(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/mapreduce/lib/partition/InputSampler$Sampler;)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedComparator
@1.0.1
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#<init>()V
+#compare([BII[BII)I
+#setKeyFieldComparatorOptions(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;)V
+#getKeyFieldComparatorOption(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/String;

+###org/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedPartitioner
@1.0.1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I
+#setKeyFieldPartitionerOptions(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;)V
+#getKeyFieldPartitionerOption(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/String;

+###org/apache/hadoop/mapreduce/lib/partition/KeyFieldHelper$KeyDescription
@1.0.1
+#toString()Ljava/lang/String;

+###org/apache/hadoop/mapreduce/lib/partition/TotalOrderPartitioner
@1.0.1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getPartition(Lorg/apache/hadoop/io/WritableComparable;Ljava/lang/Object;I)I
+#setPartitionFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#getPartitionFile(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I

+###org/apache/hadoop/mapreduce/lib/reduce/IntSumReducer
@0.20.2
+#<init>()V
+#reduce(Ljava/lang/Object;Ljava/lang/Iterable;Lorg/apache/hadoop/mapreduce/Reducer$Context;)V

+###org/apache/hadoop/mapreduce/lib/reduce/LongSumReducer
@0.20.2
+#<init>()V
+#reduce(Ljava/lang/Object;Ljava/lang/Iterable;Lorg/apache/hadoop/mapreduce/Reducer$Context;)V

+###org/apache/hadoop/mapreduce/security/SecureShuffleUtils
@0.20.203.0
+#<init>()V
+#generateHash([BLjavax/crypto/SecretKey;)Ljava/lang/String;
+#hashFromString(Ljava/lang/String;Ljavax/crypto/SecretKey;)Ljava/lang/String;
+#verifyReply(Ljava/lang/String;Ljava/lang/String;Ljavax/crypto/SecretKey;)V
+#buildMsgFrom(Ljava/net/URL;)Ljava/lang/String;
+#buildMsgFrom(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
+#toHex([B)Ljava/lang/String;

+###org/apache/hadoop/mapreduce/security/TokenCache
@0.20.203.0
+#<init>()V
+#getSecretKey(Lorg/apache/hadoop/security/Credentials;Lorg/apache/hadoop/io/Text;)[B
+#obtainTokensForNamenodes(Lorg/apache/hadoop/security/Credentials;[Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#getDelegationToken(Lorg/apache/hadoop/security/Credentials;Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
+#loadTokens(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/Credentials;
+#setJobToken(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/security/Credentials;)V
+#getJobToken(Lorg/apache/hadoop/security/Credentials;)Lorg/apache/hadoop/security/token/Token;
@1.2.0
+#cleanUpTokenReferral(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/mapreduce/security/token/DelegationTokenRenewal
@0.20.203.0
+#<init>()V
+#registerDelegationTokensForRenewal(Lorg/apache/hadoop/mapreduce/JobID;Lorg/apache/hadoop/security/Credentials;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#removeDelegationTokenRenewalForJob(Lorg/apache/hadoop/mapreduce/JobID;)V

+###org/apache/hadoop/mapreduce/security/token/JobTokenIdentifier$Renewer
@0.20.205.0
+#<init>()V

+###org/apache/hadoop/mapreduce/security/token/JobTokenIdentifier
@0.20.203.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/Text;)V
+#getKind()Lorg/apache/hadoop/io/Text;
+#getUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#getJobId()Lorg/apache/hadoop/io/Text;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/mapreduce/security/token/JobTokenSecretManager
@0.20.203.0
+#createSecretKey([B)Ljavax/crypto/SecretKey;
+#computeHash([BLjavax/crypto/SecretKey;)[B
+#<init>()V
+#createPassword(Lorg/apache/hadoop/mapreduce/security/token/JobTokenIdentifier;)[B
+#addTokenForJob(Ljava/lang/String;Lorg/apache/hadoop/security/token/Token;)V
+#removeTokenForJob(Ljava/lang/String;)V
+#retrieveTokenSecret(Ljava/lang/String;)Ljavax/crypto/SecretKey;
+#retrievePassword(Lorg/apache/hadoop/mapreduce/security/token/JobTokenIdentifier;)[B
+#createIdentifier()Lorg/apache/hadoop/mapreduce/security/token/JobTokenIdentifier;
+#createIdentifier()Lorg/apache/hadoop/security/token/TokenIdentifier;
+#retrievePassword(Lorg/apache/hadoop/security/token/TokenIdentifier;)[B
+#createPassword(Lorg/apache/hadoop/security/token/TokenIdentifier;)[B

+###org/apache/hadoop/mapreduce/security/token/JobTokenSelector
@0.20.203.0
+#<init>()V
+#selectToken(Lorg/apache/hadoop/io/Text;Ljava/util/Collection;)Lorg/apache/hadoop/security/token/Token;

+###org/apache/hadoop/mapreduce/security/token/delegation/DelegationTokenIdentifier
@0.20.203.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
+#getKind()Lorg/apache/hadoop/io/Text;

+###org/apache/hadoop/mapreduce/security/token/delegation/DelegationTokenSecretManager
@0.20.203.0
+#<init>(JJJJ)V
+#createIdentifier()Lorg/apache/hadoop/mapreduce/security/token/delegation/DelegationTokenIdentifier;
+#createIdentifier()Lorg/apache/hadoop/security/token/TokenIdentifier;

+###org/apache/hadoop/mapreduce/security/token/delegation/DelegationTokenSelector
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/mapreduce/server/jobtracker/TaskTracker
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#getTrackerName()Ljava/lang/String;
+#getStatus()Lorg/apache/hadoop/mapred/TaskTrackerStatus;
+#setStatus(Lorg/apache/hadoop/mapred/TaskTrackerStatus;)V
+#getAvailableSlots(Lorg/apache/hadoop/mapreduce/TaskType;)I
+#getJobForFallowSlot(Lorg/apache/hadoop/mapreduce/TaskType;)Lorg/apache/hadoop/mapred/JobInProgress;
+#reserveSlots(Lorg/apache/hadoop/mapreduce/TaskType;Lorg/apache/hadoop/mapred/JobInProgress;I)V
+#unreserveSlots(Lorg/apache/hadoop/mapreduce/TaskType;Lorg/apache/hadoop/mapred/JobInProgress;)V
+#cancelAllReservations()V

+###org/apache/hadoop/mapreduce/server/tasktracker/JVMInfo
@0.20.203.0
+#<init>(Ljava/io/File;Ljava/util/List;)V
+#getLogLocation()Ljava/io/File;
+#getAllAttempts()Ljava/util/List;

+###org/apache/hadoop/mapreduce/server/tasktracker/Localizer
@0.20.203.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;[Ljava/lang/String;)V
+#initializeUserDirs(Ljava/lang/String;)V
+#initializeJobDirs(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/JobID;)V
+#initializeAttemptDirs(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#initializeJobLogDir(Lorg/apache/hadoop/mapreduce/JobID;)V
@0.20.204.0
-#initializeJobDirs(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/JobID;)V
-#initializeJobLogDir(Lorg/apache/hadoop/mapreduce/JobID;)V

+###org/apache/hadoop/mapreduce/server/tasktracker/userlogs/DeleteJobEvent
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapreduce/JobID;)V
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;

+###org/apache/hadoop/mapreduce/server/tasktracker/userlogs/JobCompletedEvent
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapreduce/JobID;JI)V
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;
+#getJobCompletionTime()J
+#getRetainHours()I

+###org/apache/hadoop/mapreduce/server/tasktracker/userlogs/JobStartedEvent
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapreduce/JobID;)V
+#getJobID()Lorg/apache/hadoop/mapreduce/JobID;

+###org/apache/hadoop/mapreduce/server/tasktracker/userlogs/JvmFinishedEvent
@0.20.203.0
+#<init>(Lorg/apache/hadoop/mapreduce/server/tasktracker/JVMInfo;)V
+#getJvmInfo()Lorg/apache/hadoop/mapreduce/server/tasktracker/JVMInfo;

+###org/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogEvent$EventType
@0.20.203.0
+#values()[Lorg/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogEvent$EventType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogEvent$EventType;

+###org/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogEvent
@0.20.203.0
+#getEventType()Lorg/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogEvent$EventType;

+###org/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogManager
@0.20.203.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapred/TaskController;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getTaskController()Lorg/apache/hadoop/mapred/TaskController;
+#start()V
+#clearOldUserLogs(Lorg/apache/hadoop/conf/Configuration;)V
+#addLogEvent(Lorg/apache/hadoop/mapreduce/server/tasktracker/userlogs/UserLogEvent;)V
+#getUserLogCleaner()Lorg/apache/hadoop/mapred/UserLogCleaner;

+###org/apache/hadoop/mapreduce/split/JobSplit$SplitMetaInfo
@0.20.203.0
+#<init>()V
+#<init>([Ljava/lang/String;JJ)V
+#<init>(Lorg/apache/hadoop/mapreduce/InputSplit;J)V
+#getLocations()[Ljava/lang/String;
+#getStartOffset()J
+#getInputDataLength()J
+#setInputDataLocations([Ljava/lang/String;)V
+#setInputDataLength(J)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/mapreduce/split/JobSplit$TaskSplitIndex
@0.20.203.0
+#<init>()V
+#<init>(Ljava/lang/String;J)V
+#getStartOffset()J
+#getSplitLocation()Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/mapreduce/split/JobSplit$TaskSplitMetaInfo
@0.20.203.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/mapreduce/split/JobSplit$TaskSplitIndex;[Ljava/lang/String;J)V
+#<init>(Lorg/apache/hadoop/mapreduce/InputSplit;J)V
+#<init>([Ljava/lang/String;JJ)V
+#getSplitIndex()Lorg/apache/hadoop/mapreduce/split/JobSplit$TaskSplitIndex;
+#getSplitLocation()Ljava/lang/String;
+#getInputDataLength()J
+#getLocations()[Ljava/lang/String;
+#getStartOffset()J

+###org/apache/hadoop/mapreduce/split/JobSplit
@0.20.203.0
+#<init>()V

+###org/apache/hadoop/mapreduce/split/JobSplitWriter
@0.20.203.0
+#<init>()V
+#createSplitFiles(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
+#createSplitFiles(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;[Lorg/apache/hadoop/mapreduce/InputSplit;)V
+#createSplitFiles(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;[Lorg/apache/hadoop/mapred/InputSplit;)V

+###org/apache/hadoop/mapreduce/split/SplitMetaInfoReader
@0.20.203.0
+#<init>()V
+#readSplitMetaInfo(Lorg/apache/hadoop/mapreduce/JobID;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/mapreduce/split/JobSplit$TaskSplitMetaInfo;

+###org/apache/hadoop/metrics/ContextFactory
@0.20.2
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributeNames()[Ljava/lang/String;
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#removeAttribute(Ljava/lang/String;)V
+#getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsContext;
+#getContext(Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsContext;
+#getNullContext(Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsContext;
+#getFactory()Lorg/apache/hadoop/metrics/ContextFactory;
@0.20.203.0
+#getAllContexts()Ljava/util/Collection;

+###org/apache/hadoop/metrics/MetricsContext
@0.20.2
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V
+#getContextName()Ljava/lang/String;
+#startMonitoring()V
+#stopMonitoring()V
+#isMonitoring()Z
+#close()V
+#createRecord(Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsRecord;
+#registerUpdater(Lorg/apache/hadoop/metrics/Updater;)V
+#unregisterUpdater(Lorg/apache/hadoop/metrics/Updater;)V
+#getPeriod()I
@0.20.203.0
+#getAllRecords()Ljava/util/Map;

+###org/apache/hadoop/metrics/MetricsException
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/metrics/MetricsRecord
@0.20.2
+#getRecordName()Ljava/lang/String;
+#setTag(Ljava/lang/String;Ljava/lang/String;)V
+#setTag(Ljava/lang/String;I)V
+#setTag(Ljava/lang/String;J)V
+#setTag(Ljava/lang/String;S)V
+#setTag(Ljava/lang/String;B)V
+#removeTag(Ljava/lang/String;)V
+#setMetric(Ljava/lang/String;I)V
+#setMetric(Ljava/lang/String;J)V
+#setMetric(Ljava/lang/String;S)V
+#setMetric(Ljava/lang/String;B)V
+#setMetric(Ljava/lang/String;F)V
+#incrMetric(Ljava/lang/String;I)V
+#incrMetric(Ljava/lang/String;J)V
+#incrMetric(Ljava/lang/String;S)V
+#incrMetric(Ljava/lang/String;B)V
+#incrMetric(Ljava/lang/String;F)V
+#update()V
+#remove()V

+###org/apache/hadoop/metrics/MetricsServlet
@0.20.203.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/metrics/MetricsUtil
@0.20.2
+#getContext(Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsContext;
+#getContext(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsContext;
+#createRecord(Lorg/apache/hadoop/metrics/MetricsContext;Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsRecord;

+###org/apache/hadoop/metrics/Updater
@0.20.2
+#doUpdates(Lorg/apache/hadoop/metrics/MetricsContext;)V

+###org/apache/hadoop/metrics/file/FileContext
@0.20.2
+#<init>()V
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V
+#getFileName()Ljava/lang/String;
+#startMonitoring()V
+#stopMonitoring()V
+#emitRecord(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics/spi/OutputRecord;)V
+#flush()V

+###org/apache/hadoop/metrics/ganglia/GangliaContext
@0.20.2
+#<init>()V
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V
+#emitRecord(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics/spi/OutputRecord;)V

+###org/apache/hadoop/metrics/ganglia/GangliaContext31
@0.20.203.0
+#<init>()V
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V

+###org/apache/hadoop/metrics/jvm/EventCounter
@0.20.2
+#<init>()V
+#getFatal()J
+#getError()J
+#getWarn()J
+#getInfo()J
+#append(Lorg/apache/log4j/spi/LoggingEvent;)V
+#close()V
+#requiresLayout()Z
@0.20.203.0
-#getFatal()J
-#getError()J
-#getWarn()J
-#getInfo()J
-#append(Lorg/apache/log4j/spi/LoggingEvent;)V
-#close()V
-#requiresLayout()Z

+###org/apache/hadoop/metrics/jvm/JvmMetrics
@0.20.2
+#init(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics/jvm/JvmMetrics;
+#init(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics/jvm/JvmMetrics;
+#doUpdates(Lorg/apache/hadoop/metrics/MetricsContext;)V

+###org/apache/hadoop/metrics/spi/AbstractMetricsContext$MetricMap
@0.20.203.0

+###org/apache/hadoop/metrics/spi/AbstractMetricsContext$TagMap
@0.20.203.0
+#containsAll(Lorg/apache/hadoop/metrics/spi/AbstractMetricsContext$TagMap;)Z

+###org/apache/hadoop/metrics/spi/AbstractMetricsContext
@0.20.2
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V
+#getContextName()Ljava/lang/String;
+#getContextFactory()Lorg/apache/hadoop/metrics/ContextFactory;
+#startMonitoring()V
+#stopMonitoring()V
+#isMonitoring()Z
+#close()V
+#createRecord(Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsRecord;
+#registerUpdater(Lorg/apache/hadoop/metrics/Updater;)V
+#unregisterUpdater(Lorg/apache/hadoop/metrics/Updater;)V
+#getPeriod()I
@0.20.203.0
+#getAllRecords()Ljava/util/Map;

+###org/apache/hadoop/metrics/spi/CompositeContext
@0.20.2
+#<init>()V
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V
+#newRecord(Ljava/lang/String;)Lorg/apache/hadoop/metrics/MetricsRecord;
+#startMonitoring()V
+#stopMonitoring()V
+#isMonitoring()Z
+#close()V
+#registerUpdater(Lorg/apache/hadoop/metrics/Updater;)V
+#unregisterUpdater(Lorg/apache/hadoop/metrics/Updater;)V

+###org/apache/hadoop/metrics/spi/MetricValue
@0.20.2
+#<init>(Ljava/lang/Number;Z)V
+#isIncrement()Z
+#isAbsolute()Z
+#getNumber()Ljava/lang/Number;

+###org/apache/hadoop/metrics/spi/MetricsRecordImpl
@0.20.2
+#getRecordName()Ljava/lang/String;
+#setTag(Ljava/lang/String;Ljava/lang/String;)V
+#setTag(Ljava/lang/String;I)V
+#setTag(Ljava/lang/String;J)V
+#setTag(Ljava/lang/String;S)V
+#setTag(Ljava/lang/String;B)V
+#removeTag(Ljava/lang/String;)V
+#setMetric(Ljava/lang/String;I)V
+#setMetric(Ljava/lang/String;J)V
+#setMetric(Ljava/lang/String;S)V
+#setMetric(Ljava/lang/String;B)V
+#setMetric(Ljava/lang/String;F)V
+#incrMetric(Ljava/lang/String;I)V
+#incrMetric(Ljava/lang/String;J)V
+#incrMetric(Ljava/lang/String;S)V
+#incrMetric(Ljava/lang/String;B)V
+#incrMetric(Ljava/lang/String;F)V
+#update()V
+#remove()V

+###org/apache/hadoop/metrics/spi/NoEmitMetricsContext
@0.20.203.0
+#<init>()V
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V

+###org/apache/hadoop/metrics/spi/NullContext
@0.20.2
+#<init>()V
+#startMonitoring()V

+###org/apache/hadoop/metrics/spi/NullContextWithUpdateThread
@0.20.2
+#<init>()V
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V

+###org/apache/hadoop/metrics/spi/OutputRecord
@0.20.2
+#getTagNames()Ljava/util/Set;
+#getTag(Ljava/lang/String;)Ljava/lang/Object;
+#getMetricNames()Ljava/util/Set;
+#getMetric(Ljava/lang/String;)Ljava/lang/Number;
@0.20.203.0
+#getTagsCopy()Lorg/apache/hadoop/metrics/spi/AbstractMetricsContext$TagMap;
+#getMetricsCopy()Lorg/apache/hadoop/metrics/spi/AbstractMetricsContext$MetricMap;

+###org/apache/hadoop/metrics/spi/Util
@0.20.2
+#parse(Ljava/lang/String;I)Ljava/util/List;

+###org/apache/hadoop/metrics/util/MBeanUtil
@0.20.2
+#<init>()V
+#registerMBean(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljavax/management/ObjectName;
+#unregisterMBean(Ljavax/management/ObjectName;)V

+###org/apache/hadoop/metrics/util/MetricsBase
@0.20.2
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
+#getName()Ljava/lang/String;
+#getDescription()Ljava/lang/String;

+###org/apache/hadoop/metrics/util/MetricsDynamicMBeanBase
@0.20.2
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getAttributes([Ljava/lang/String;)Ljavax/management/AttributeList;
+#getMBeanInfo()Ljavax/management/MBeanInfo;
+#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;
+#setAttribute(Ljavax/management/Attribute;)V
+#setAttributes(Ljavax/management/AttributeList;)Ljavax/management/AttributeList;

+###org/apache/hadoop/metrics/util/MetricsIntValue
@0.20.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#set(I)V
+#get()I
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V

+###org/apache/hadoop/metrics/util/MetricsLongValue
@0.20.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#set(J)V
+#get()J
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V

+###org/apache/hadoop/metrics/util/MetricsRegistry
@0.20.2
+#<init>()V
+#size()I
+#add(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsBase;)V
+#get(Ljava/lang/String;)Lorg/apache/hadoop/metrics/util/MetricsBase;
+#getKeyList()Ljava/util/Collection;
+#getMetricsList()Ljava/util/Collection;

+###org/apache/hadoop/metrics/util/MetricsTimeVaryingInt
@0.20.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#inc(I)V
+#inc()V
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
+#getPreviousIntervalValue()I
+#getCurrentIntervalValue()I

+###org/apache/hadoop/metrics/util/MetricsTimeVaryingLong
@0.20.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#inc(J)V
+#inc()V
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
+#getPreviousIntervalValue()J
+#getCurrentIntervalValue()J

+###org/apache/hadoop/metrics/util/MetricsTimeVaryingRate
@0.20.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#inc(IJ)V
+#inc(J)V
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
+#getPreviousIntervalNumOps()I
+#getPreviousIntervalAverageTime()J
+#getMinTime()J
+#getMaxTime()J
+#resetMinMax()V

+###org/apache/hadoop/metrics2/Metric
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#name()Ljava/lang/String;
+#description()Ljava/lang/String;
+#value()Ljava/lang/Number;
+#visit(Lorg/apache/hadoop/metrics2/MetricsVisitor;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/metrics2/MetricCounter
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#value()Ljava/lang/Number;

+###org/apache/hadoop/metrics2/MetricGauge
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#value()Ljava/lang/Number;

+###org/apache/hadoop/metrics2/MetricsBuilder
@0.20.203.0
+#addRecord(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;

+###org/apache/hadoop/metrics2/MetricsException
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/metrics2/MetricsFilter
@0.20.203.0
+#<init>()V
+#init(Lorg/apache/commons/configuration/SubsetConfiguration;)V
+#accepts(Ljava/lang/String;)Z
+#accepts(Lorg/apache/hadoop/metrics2/MetricsTag;)Z
+#accepts(Ljava/lang/Iterable;)Z
+#accepts(Lorg/apache/hadoop/metrics2/MetricsRecord;)Z

+###org/apache/hadoop/metrics2/MetricsPlugin
@0.20.203.0
+#init(Lorg/apache/commons/configuration/SubsetConfiguration;)V

+###org/apache/hadoop/metrics2/MetricsRecord
@0.20.203.0
+#timestamp()J
+#name()Ljava/lang/String;
+#context()Ljava/lang/String;
+#tags()Ljava/lang/Iterable;
+#metrics()Ljava/lang/Iterable;

+###org/apache/hadoop/metrics2/MetricsRecordBuilder
@0.20.203.0
+#<init>()V
+#tag(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#add(Lorg/apache/hadoop/metrics2/MetricsTag;)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#setContext(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#addCounter(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#addCounter(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#addGauge(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#addGauge(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#addGauge(Ljava/lang/String;Ljava/lang/String;F)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#addGauge(Ljava/lang/String;Ljava/lang/String;D)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;
+#add(Lorg/apache/hadoop/metrics2/Metric;)Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;

+###org/apache/hadoop/metrics2/MetricsSink
@0.20.203.0
+#putMetrics(Lorg/apache/hadoop/metrics2/MetricsRecord;)V
+#flush()V

+###org/apache/hadoop/metrics2/MetricsSource
@0.20.203.0
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V

+###org/apache/hadoop/metrics2/MetricsSystem$AbstractCallback
@0.20.203.0
+#<init>()V
+#preStart()V
+#postStart()V
+#preStop()V
+#postStop()V

+###org/apache/hadoop/metrics2/MetricsSystem$Callback
@0.20.203.0
+#preStart()V
+#postStart()V
+#preStop()V
+#postStop()V

+###org/apache/hadoop/metrics2/MetricsSystem
@0.20.203.0
+#register(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSource;)Lorg/apache/hadoop/metrics2/MetricsSource;
+#register(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSink;)Lorg/apache/hadoop/metrics2/MetricsSink;
+#register(Lorg/apache/hadoop/metrics2/MetricsSystem$Callback;)V
+#shutdown()V
@1.2.0
+#publishMetricsNow()V

+###org/apache/hadoop/metrics2/MetricsSystemMXBean
@0.20.203.0
+#start()V
+#stop()V
+#refreshMBeans()V
+#currentConfig()Ljava/lang/String;

+###org/apache/hadoop/metrics2/MetricsTag
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#name()Ljava/lang/String;
+#description()Ljava/lang/String;
+#value()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/metrics2/MetricsVisitor
@0.20.203.0
+#gauge(Lorg/apache/hadoop/metrics2/MetricGauge;I)V
+#gauge(Lorg/apache/hadoop/metrics2/MetricGauge;J)V
+#gauge(Lorg/apache/hadoop/metrics2/MetricGauge;F)V
+#gauge(Lorg/apache/hadoop/metrics2/MetricGauge;D)V
+#counter(Lorg/apache/hadoop/metrics2/MetricCounter;I)V
+#counter(Lorg/apache/hadoop/metrics2/MetricCounter;J)V

+###org/apache/hadoop/metrics2/filter/GlobFilter
@0.20.203.0
+#<init>()V
+#accepts(Ljava/lang/String;)Z
+#accepts(Ljava/lang/Iterable;)Z
+#accepts(Lorg/apache/hadoop/metrics2/MetricsTag;)Z
+#init(Lorg/apache/commons/configuration/SubsetConfiguration;)V

+###org/apache/hadoop/metrics2/filter/RegexFilter
@0.20.203.0
+#<init>()V
+#accepts(Ljava/lang/String;)Z
+#accepts(Ljava/lang/Iterable;)Z
+#accepts(Lorg/apache/hadoop/metrics2/MetricsTag;)Z
+#init(Lorg/apache/commons/configuration/SubsetConfiguration;)V

+###org/apache/hadoop/metrics2/impl/MetricsConfigException
@0.20.203.0

+###org/apache/hadoop/metrics2/impl/MetricsRecordImpl
@0.20.203.0
+#<init>(Ljava/lang/String;JLjava/lang/Iterable;Ljava/lang/Iterable;)V
+#timestamp()J
+#name()Ljava/lang/String;
+#context()Ljava/lang/String;
+#tags()Ljava/lang/Iterable;
+#metrics()Ljava/lang/Iterable;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/metrics2/impl/MetricsSystemImpl
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#init(Ljava/lang/String;)V
+#start()V
+#stop()V
+#register(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSource;)Lorg/apache/hadoop/metrics2/MetricsSource;
+#register(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSink;)Lorg/apache/hadoop/metrics2/MetricsSink;
+#register(Lorg/apache/hadoop/metrics2/MetricsSystem$Callback;)V
+#refreshMBeans()V
+#currentConfig()Ljava/lang/String;
+#shutdown()V
@1.2.0
+#publishMetricsNow()V

+###org/apache/hadoop/metrics2/lib/AbstractMetricsSource
@0.20.203.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics2/lib/MetricMutableFactory;)V
+#<init>(Ljava/lang/String;)V
+#registry()Lorg/apache/hadoop/metrics2/lib/MetricsRegistry;
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V

+###org/apache/hadoop/metrics2/lib/DefaultMetricsSystem
@0.20.203.0
+#values()[Lorg/apache/hadoop/metrics2/lib/DefaultMetricsSystem;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/DefaultMetricsSystem;
+#initialize(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/MetricsSystem;
+#register(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSource;)Lorg/apache/hadoop/metrics2/MetricsSource;
+#registerSource(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSource;)Lorg/apache/hadoop/metrics2/MetricsSource;
+#register(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSink;)Lorg/apache/hadoop/metrics2/MetricsSink;
+#register(Lorg/apache/hadoop/metrics2/MetricsSystem$Callback;)V
+#start()V
+#stop()V
+#refreshMBeans()V
+#currentConfig()Ljava/lang/String;
+#shutdown()V
@1.2.0
+#publishMetricsNow()V

+###org/apache/hadoop/metrics2/lib/MetricMutable
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;)V
+#changed()Z

+###org/apache/hadoop/metrics2/lib/MetricMutableCounter
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#incr()V

+###org/apache/hadoop/metrics2/lib/MetricMutableCounterInt
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;I)V
+#incr()V
+#incr(I)V
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V

+###org/apache/hadoop/metrics2/lib/MetricMutableCounterLong
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;J)V
+#incr()V
+#incr(J)V
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V

+###org/apache/hadoop/metrics2/lib/MetricMutableFactory
@0.20.203.0
+#<init>()V
+#newMetric(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutable;
+#newCounter(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/hadoop/metrics2/lib/MetricMutableCounterInt;
+#newCounterInt(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutableCounterInt;
+#newCounter(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MetricMutableCounterLong;
+#newCounterLong(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutableCounterLong;
+#newGauge(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/hadoop/metrics2/lib/MetricMutableGaugeInt;
+#newGaugeInt(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutableGaugeInt;
+#newGauge(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MetricMutableGaugeLong;
+#newGaugeLong(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutableGaugeLong;
+#newStat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/hadoop/metrics2/lib/MetricMutableStat;
+#newStat(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutableStat;

+###org/apache/hadoop/metrics2/lib/MetricMutableGauge
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#incr()V
+#decr()V

+###org/apache/hadoop/metrics2/lib/MetricMutableGaugeInt
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;I)V
+#incr()V
+#incr(I)V
+#decr()V
+#decr(I)V
+#set(I)V
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V

+###org/apache/hadoop/metrics2/lib/MetricMutableGaugeLong
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;J)V
+#incr()V
+#incr(J)V
+#decr()V
+#decr(J)V
+#set(J)V
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V

+###org/apache/hadoop/metrics2/lib/MetricMutableStat
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#add(JJ)V
+#add(J)V
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V
+#resetMinMax()V

+###org/apache/hadoop/metrics2/lib/MetricsRegistry
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics2/lib/MetricMutableFactory;)V
+#name()Ljava/lang/String;
+#get(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutable;
+#newCounter(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/hadoop/metrics2/lib/MetricMutableCounterInt;
+#newCounter(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MetricMutableCounterLong;
+#newGauge(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/hadoop/metrics2/lib/MetricMutableGaugeInt;
+#newGauge(Ljava/lang/String;Ljava/lang/String;J)Lorg/apache/hadoop/metrics2/lib/MetricMutableGaugeLong;
+#newStat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/hadoop/metrics2/lib/MetricMutableStat;
+#newStat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutableStat;
+#newStat(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricMutableStat;
+#incr(Ljava/lang/String;)V
+#incr(Ljava/lang/String;Lorg/apache/hadoop/metrics2/lib/MetricMutableFactory;)V
+#decr(Ljava/lang/String;)V
+#decr(Ljava/lang/String;Lorg/apache/hadoop/metrics2/lib/MetricMutableFactory;)V
+#add(Ljava/lang/String;J)V
+#add(Ljava/lang/String;JLorg/apache/hadoop/metrics2/lib/MetricMutableFactory;)V
+#setContext(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricsRegistry;
+#tag(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/lib/MetricsRegistry;
+#tag(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/hadoop/metrics2/lib/MetricsRegistry;
+#tags()Ljava/util/Set;
+#metrics()Ljava/util/Set;
+#snapshot(Lorg/apache/hadoop/metrics2/MetricsRecordBuilder;Z)V

+###org/apache/hadoop/metrics2/sink/FileSink
@0.20.203.0
+#<init>()V
+#init(Lorg/apache/commons/configuration/SubsetConfiguration;)V
+#putMetrics(Lorg/apache/hadoop/metrics2/MetricsRecord;)V
+#flush()V

+###org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink$GangliaConfType
@0.20.204.0
+#values()[Lorg/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink$GangliaConfType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink$GangliaConfType;

+###org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink$GangliaSlope
@0.20.204.0
+#values()[Lorg/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink$GangliaSlope;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink$GangliaSlope;

+###org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink
@0.20.204.0
+#<init>()V
+#init(Lorg/apache/commons/configuration/SubsetConfiguration;)V
+#flush()V

+###org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30
@0.20.204.0
+#<init>()V
+#putMetrics(Lorg/apache/hadoop/metrics2/MetricsRecord;)V

+###org/apache/hadoop/metrics2/sink/ganglia/GangliaSink31
@0.20.204.0
+#<init>()V

+###org/apache/hadoop/metrics2/source/JvmMetricsSource
@0.20.203.0
+#create(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics2/MetricsSystem;)Lorg/apache/hadoop/metrics2/source/JvmMetricsSource;
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/metrics2/source/JvmMetricsSource;
+#getMetrics(Lorg/apache/hadoop/metrics2/MetricsBuilder;Z)V

+###org/apache/hadoop/metrics2/util/Contracts
@0.20.203.0
+#checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#checkState(ZLjava/lang/Object;)V
+#checkArg(Ljava/lang/Object;ZLjava/lang/Object;)Ljava/lang/Object;
+#checkArg(IZLjava/lang/Object;)I
+#checkArg(JZLjava/lang/Object;)J
+#checkArg(FZLjava/lang/Object;)F
+#checkArg(DZLjava/lang/Object;)D

+###org/apache/hadoop/metrics2/util/MBeans
@0.20.203.0
+#<init>()V
+#register(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljavax/management/ObjectName;
+#unregister(Ljavax/management/ObjectName;)V

+###org/apache/hadoop/metrics2/util/MetricsCache$Record
@0.20.203.0
+#<init>()V
+#getTag(Ljava/lang/String;)Ljava/lang/String;
+#getMetric(Ljava/lang/String;)Ljava/lang/Number;
+#metrics()Ljava/util/Set;
@0.20.204.0
+#getMetricInstance(Ljava/lang/String;)Lorg/apache/hadoop/metrics2/Metric;
+#metricsEntrySet()Ljava/util/Set;

+###org/apache/hadoop/metrics2/util/MetricsCache
@0.20.203.0
+#<init>()V
+#update(Lorg/apache/hadoop/metrics2/MetricsRecord;Z)Lorg/apache/hadoop/metrics2/util/MetricsCache$Record;
+#update(Lorg/apache/hadoop/metrics2/MetricsRecord;)Lorg/apache/hadoop/metrics2/util/MetricsCache$Record;
+#get(Ljava/lang/String;Ljava/util/Collection;)Lorg/apache/hadoop/metrics2/util/MetricsCache$Record;

+###org/apache/hadoop/metrics2/util/SampleStat$MinMax
@0.20.203.0
+#<init>()V
+#add(D)V
+#min()D
+#max()D
+#reset()V
+#reset(Lorg/apache/hadoop/metrics2/util/SampleStat$MinMax;)V

+###org/apache/hadoop/metrics2/util/SampleStat
@0.20.203.0
+#<init>()V
+#reset()V
+#copyTo(Lorg/apache/hadoop/metrics2/util/SampleStat;)V
+#add(D)Lorg/apache/hadoop/metrics2/util/SampleStat;
+#add(JD)Lorg/apache/hadoop/metrics2/util/SampleStat;
+#numSamples()J
+#mean()D
+#variance()D
+#stddev()D
+#min()D
+#max()D

+###org/apache/hadoop/metrics2/util/Servers
@0.20.203.0
+#parse(Ljava/lang/String;I)Ljava/util/List;

+###org/apache/hadoop/metrics2/util/TryIterator
@0.20.203.0
+#<init>()V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#current()Ljava/lang/Object;
+#remove()V

+###org/apache/hadoop/net/CachedDNSToSwitchMapping
@0.20.2
+#<init>(Lorg/apache/hadoop/net/DNSToSwitchMapping;)V
+#resolve(Ljava/util/List;)Ljava/util/List;

+###org/apache/hadoop/net/DNS
@0.20.2
+#<init>()V
+#reverseDns(Ljava/net/InetAddress;Ljava/lang/String;)Ljava/lang/String;
+#getIPs(Ljava/lang/String;)[Ljava/lang/String;
+#getDefaultIP(Ljava/lang/String;)Ljava/lang/String;
+#getHosts(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
+#getHosts(Ljava/lang/String;)[Ljava/lang/String;
+#getDefaultHost(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getDefaultHost(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
+#getIPs(Ljava/lang/String;Z)[Ljava/lang/String;

+###org/apache/hadoop/net/DNSToSwitchMapping
@0.20.2
+#resolve(Ljava/util/List;)Ljava/util/List;

+###org/apache/hadoop/net/NetUtils
@0.20.2
+#<init>()V
+#getSocketFactory(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)Ljavax/net/SocketFactory;
+#getDefaultSocketFactory(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/SocketFactory;
+#getSocketFactoryFromProperty(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljavax/net/SocketFactory;
+#createSocketAddr(Ljava/lang/String;)Ljava/net/InetSocketAddress;
+#createSocketAddr(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
+#getServerAddress(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#addStaticResolution(Ljava/lang/String;Ljava/lang/String;)V
+#getStaticResolution(Ljava/lang/String;)Ljava/lang/String;
+#getAllStaticResolutions()Ljava/util/List;
+#getConnectAddress(Lorg/apache/hadoop/ipc/Server;)Ljava/net/InetSocketAddress;
+#getInputStream(Ljava/net/Socket;)Ljava/io/InputStream;
+#getInputStream(Ljava/net/Socket;J)Ljava/io/InputStream;
+#getOutputStream(Ljava/net/Socket;)Ljava/io/OutputStream;
+#getOutputStream(Ljava/net/Socket;J)Ljava/io/OutputStream;
+#connect(Ljava/net/Socket;Ljava/net/SocketAddress;I)V
+#normalizeHostName(Ljava/lang/String;)Ljava/lang/String;
+#normalizeHostNames(Ljava/util/Collection;)Ljava/util/List;
@0.20.203.0
+#getLocalInetAddress(Ljava/lang/String;)Ljava/net/InetAddress;
@0.20.205.0
+#setUseQualifiedHostResolver(Z)V
+#makeSocketAddr(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
+#verifyHostnames([Ljava/lang/String;)V
@1.0.0
+#getCanonicalUri(Ljava/net/URI;I)Ljava/net/URI;
@1.0.1
-#setUseQualifiedHostResolver(Z)V
@1.1.0
+#connect(Ljava/net/Socket;Ljava/net/SocketAddress;Ljava/net/SocketAddress;I)V
+#isValidSubnet(Ljava/lang/String;)Z
+#getIPs(Ljava/lang/String;Z)Ljava/util/List;

+###org/apache/hadoop/net/NetworkTopology$InvalidTopologyException
@1.1.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/net/NetworkTopology
@0.20.2
+#<init>()V
+#add(Lorg/apache/hadoop/net/Node;)V
+#remove(Lorg/apache/hadoop/net/Node;)V
+#contains(Lorg/apache/hadoop/net/Node;)Z
+#getNode(Ljava/lang/String;)Lorg/apache/hadoop/net/Node;
+#getNumOfRacks()I
+#getNumOfLeaves()I
+#getDistance(Lorg/apache/hadoop/net/Node;Lorg/apache/hadoop/net/Node;)I
+#isOnSameRack(Lorg/apache/hadoop/net/Node;Lorg/apache/hadoop/net/Node;)Z
+#chooseRandom(Ljava/lang/String;)Lorg/apache/hadoop/net/Node;
+#countNumOfAvailableNodes(Ljava/lang/String;Ljava/util/List;)I
+#toString()Ljava/lang/String;
+#pseudoSortByDistance(Lorg/apache/hadoop/net/Node;[Lorg/apache/hadoop/net/Node;)V
@1.2.0
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/net/NetworkTopology;
+#getRack(Ljava/lang/String;)Ljava/lang/String;
+#isNodeGroupAware()Z
+#isOnSameNodeGroup(Lorg/apache/hadoop/net/Node;Lorg/apache/hadoop/net/Node;)Z
+#getLeaves(Ljava/lang/String;)Ljava/util/List;
+#countNumOfAvailableNodes(Ljava/lang/String;Ljava/util/Collection;)I
+#getFirstHalf(Ljava/lang/String;)Ljava/lang/String;
+#getLastHalf(Ljava/lang/String;)Ljava/lang/String;
-#countNumOfAvailableNodes(Ljava/lang/String;Ljava/util/List;)I

+###org/apache/hadoop/net/Node
@0.20.2
+#getNetworkLocation()Ljava/lang/String;
+#setNetworkLocation(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getParent()Lorg/apache/hadoop/net/Node;
+#setParent(Lorg/apache/hadoop/net/Node;)V
+#getLevel()I
+#setLevel(I)V

+###org/apache/hadoop/net/NodeBase
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/net/Node;I)V
+#getName()Ljava/lang/String;
+#getNetworkLocation()Ljava/lang/String;
+#setNetworkLocation(Ljava/lang/String;)V
+#getPath(Lorg/apache/hadoop/net/Node;)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#normalize(Ljava/lang/String;)Ljava/lang/String;
+#getParent()Lorg/apache/hadoop/net/Node;
+#setParent(Lorg/apache/hadoop/net/Node;)V
+#getLevel()I
+#setLevel(I)V

+###org/apache/hadoop/net/ScriptBasedMapping
@0.20.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/net/SocketInputStream
@0.20.2
+#<init>(Ljava/nio/channels/ReadableByteChannel;J)V
+#<init>(Ljava/net/Socket;J)V
+#<init>(Ljava/net/Socket;)V
+#read()I
+#read([BII)I
+#close()V
+#getChannel()Ljava/nio/channels/ReadableByteChannel;
+#isOpen()Z
+#read(Ljava/nio/ByteBuffer;)I
+#waitForReadable()V

+###org/apache/hadoop/net/SocketOutputStream
@0.20.2
+#<init>(Ljava/nio/channels/WritableByteChannel;J)V
+#<init>(Ljava/net/Socket;J)V
+#write(I)V
+#write([BII)V
+#close()V
+#getChannel()Ljava/nio/channels/WritableByteChannel;
+#isOpen()Z
+#write(Ljava/nio/ByteBuffer;)I
+#waitForWritable()V
+#transferToFully(Ljava/nio/channels/FileChannel;JI)V

+###org/apache/hadoop/net/SocksSocketFactory
@0.20.2
+#<init>()V
+#<init>(Ljava/net/Proxy;)V
+#createSocket()Ljava/net/Socket;
+#createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;
+#createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;
+#createSocket(Ljava/lang/String;I)Ljava/net/Socket;
+#createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/net/StandardSocketFactory
@0.20.2
+#<init>()V
+#createSocket()Ljava/net/Socket;
+#createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;
+#createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;
+#createSocket(Ljava/lang/String;I)Ljava/net/Socket;
+#createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/record/BinaryRecordInput
@0.20.2
+#get(Ljava/io/DataInput;)Lorg/apache/hadoop/record/BinaryRecordInput;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/DataInput;)V
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)Lorg/apache/hadoop/record/Buffer;
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endMap(Ljava/lang/String;)V

+###org/apache/hadoop/record/BinaryRecordOutput
@0.20.2
+#get(Ljava/io/DataOutput;)Lorg/apache/hadoop/record/BinaryRecordOutput;
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/DataOutput;)V
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer(Lorg/apache/hadoop/record/Buffer;Ljava/lang/String;)V
+#startRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#endVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V

+###org/apache/hadoop/record/Buffer
@0.20.2
+#<init>()V
+#<init>([B)V
+#<init>([BII)V
+#set([B)V
+#copy([BII)V
+#get()[B
+#getCount()I
+#getCapacity()I
+#setCapacity(I)V
+#reset()V
+#truncate()V
+#append([BII)V
+#append([B)V
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toString(Ljava/lang/String;)Ljava/lang/String;
+#clone()Ljava/lang/Object;

+###org/apache/hadoop/record/CsvRecordInput
@0.20.2
+#<init>(Ljava/io/InputStream;)V
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)Lorg/apache/hadoop/record/Buffer;
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endMap(Ljava/lang/String;)V

+###org/apache/hadoop/record/CsvRecordOutput
@0.20.2
+#<init>(Ljava/io/OutputStream;)V
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer(Lorg/apache/hadoop/record/Buffer;Ljava/lang/String;)V
+#startRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#endVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V

+###org/apache/hadoop/record/Index
@0.20.2
+#done()Z
+#incr()V

+###org/apache/hadoop/record/Record
@0.20.2
+#<init>()V
+#serialize(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V
+#deserialize(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V
+#compareTo(Ljava/lang/Object;)I
+#serialize(Lorg/apache/hadoop/record/RecordOutput;)V
+#deserialize(Lorg/apache/hadoop/record/RecordInput;)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/record/RecordComparator
@0.20.2
+#compare([BII[BII)I
+#define(Ljava/lang/Class;Lorg/apache/hadoop/record/RecordComparator;)V

+###org/apache/hadoop/record/RecordInput
@0.20.2
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)Lorg/apache/hadoop/record/Buffer;
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endMap(Ljava/lang/String;)V

+###org/apache/hadoop/record/RecordOutput
@0.20.2
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer(Lorg/apache/hadoop/record/Buffer;Ljava/lang/String;)V
+#startRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#endVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V

+###org/apache/hadoop/record/Utils
@0.20.2
+#readFloat([BI)F
+#readDouble([BI)D
+#readVLong([BI)J
+#readVInt([BI)I
+#readVLong(Ljava/io/DataInput;)J
+#readVInt(Ljava/io/DataInput;)I
+#getVIntSize(J)I
+#writeVLong(Ljava/io/DataOutput;J)V
+#writeVInt(Ljava/io/DataOutput;I)V
+#compareBytes([BII[BII)I

+###org/apache/hadoop/record/XmlRecordInput
@0.20.2
+#<init>(Ljava/io/InputStream;)V
+#readByte(Ljava/lang/String;)B
+#readBool(Ljava/lang/String;)Z
+#readInt(Ljava/lang/String;)I
+#readLong(Ljava/lang/String;)J
+#readFloat(Ljava/lang/String;)F
+#readDouble(Ljava/lang/String;)D
+#readString(Ljava/lang/String;)Ljava/lang/String;
+#readBuffer(Ljava/lang/String;)Lorg/apache/hadoop/record/Buffer;
+#startRecord(Ljava/lang/String;)V
+#endRecord(Ljava/lang/String;)V
+#startVector(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endVector(Ljava/lang/String;)V
+#startMap(Ljava/lang/String;)Lorg/apache/hadoop/record/Index;
+#endMap(Ljava/lang/String;)V

+###org/apache/hadoop/record/XmlRecordOutput
@0.20.2
+#<init>(Ljava/io/OutputStream;)V
+#writeByte(BLjava/lang/String;)V
+#writeBool(ZLjava/lang/String;)V
+#writeInt(ILjava/lang/String;)V
+#writeLong(JLjava/lang/String;)V
+#writeFloat(FLjava/lang/String;)V
+#writeDouble(DLjava/lang/String;)V
+#writeString(Ljava/lang/String;Ljava/lang/String;)V
+#writeBuffer(Lorg/apache/hadoop/record/Buffer;Ljava/lang/String;)V
+#startRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#endRecord(Lorg/apache/hadoop/record/Record;Ljava/lang/String;)V
+#startVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#endVector(Ljava/util/ArrayList;Ljava/lang/String;)V
+#startMap(Ljava/util/TreeMap;Ljava/lang/String;)V
+#endMap(Ljava/util/TreeMap;Ljava/lang/String;)V

+###org/apache/hadoop/record/compiler/CodeBuffer
@0.20.2
+#toString()Ljava/lang/String;

+###org/apache/hadoop/record/compiler/Consts
@0.20.2

+###org/apache/hadoop/record/compiler/JBoolean
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JBuffer
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JByte
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JDouble
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JField
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V

+###org/apache/hadoop/record/compiler/JFile
@0.20.2
+#<init>(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;)V
+#genCode(Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)I

+###org/apache/hadoop/record/compiler/JFloat
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JInt
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JLong
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JMap
@0.20.2
+#<init>(Lorg/apache/hadoop/record/compiler/JType;Lorg/apache/hadoop/record/compiler/JType;)V

+###org/apache/hadoop/record/compiler/JRecord
@0.20.2
+#<init>(Ljava/lang/String;Ljava/util/ArrayList;)V

+###org/apache/hadoop/record/compiler/JString
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JType
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/compiler/JVector
@0.20.2
+#<init>(Lorg/apache/hadoop/record/compiler/JType;)V

+###org/apache/hadoop/record/compiler/ant/RccTask
@0.20.2
+#<init>()V
+#setLanguage(Ljava/lang/String;)V
+#setFile(Ljava/io/File;)V
+#setFailonerror(Z)V
+#setDestdir(Ljava/io/File;)V
+#addFileset(Lorg/apache/tools/ant/types/FileSet;)V
+#execute()V

+###org/apache/hadoop/record/compiler/generated/ParseException
@0.20.2
+#<init>(Lorg/apache/hadoop/record/compiler/generated/Token;[[I[Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/record/compiler/generated/Rcc
@0.20.2
+#main([Ljava/lang/String;)V
+#usage()V
+#driver([Ljava/lang/String;)I
+#Input()Lorg/apache/hadoop/record/compiler/JFile;
+#Include()Lorg/apache/hadoop/record/compiler/JFile;
+#Module()Ljava/util/ArrayList;
+#ModuleName()Ljava/lang/String;
+#RecordList()Ljava/util/ArrayList;
+#Record()Lorg/apache/hadoop/record/compiler/JRecord;
+#Field()Lorg/apache/hadoop/record/compiler/JField;
+#Type()Lorg/apache/hadoop/record/compiler/JType;
+#Map()Lorg/apache/hadoop/record/compiler/JMap;
+#Vector()Lorg/apache/hadoop/record/compiler/JVector;
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#ReInit(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Lorg/apache/hadoop/record/compiler/generated/RccTokenManager;)V
+#ReInit(Lorg/apache/hadoop/record/compiler/generated/RccTokenManager;)V
+#getNextToken()Lorg/apache/hadoop/record/compiler/generated/Token;
+#getToken(I)Lorg/apache/hadoop/record/compiler/generated/Token;
+#generateParseException()Lorg/apache/hadoop/record/compiler/generated/ParseException;
+#enable_tracing()V
+#disable_tracing()V

+###org/apache/hadoop/record/compiler/generated/RccConstants
@0.20.2

+###org/apache/hadoop/record/compiler/generated/RccTokenManager
@0.20.2
+#setDebugStream(Ljava/io/PrintStream;)V
+#<init>(Lorg/apache/hadoop/record/compiler/generated/SimpleCharStream;)V
+#<init>(Lorg/apache/hadoop/record/compiler/generated/SimpleCharStream;I)V
+#ReInit(Lorg/apache/hadoop/record/compiler/generated/SimpleCharStream;)V
+#ReInit(Lorg/apache/hadoop/record/compiler/generated/SimpleCharStream;I)V
+#SwitchTo(I)V
+#getNextToken()Lorg/apache/hadoop/record/compiler/generated/Token;

+###org/apache/hadoop/record/compiler/generated/SimpleCharStream
@0.20.2
+#BeginToken()C
+#readChar()C
+#getEndColumn()I
+#getEndLine()I
+#getBeginColumn()I
+#getBeginLine()I
+#backup(I)V
+#<init>(Ljava/io/Reader;III)V
+#<init>(Ljava/io/Reader;II)V
+#<init>(Ljava/io/Reader;)V
+#ReInit(Ljava/io/Reader;III)V
+#ReInit(Ljava/io/Reader;II)V
+#ReInit(Ljava/io/Reader;)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;III)V
+#<init>(Ljava/io/InputStream;III)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;II)V
+#<init>(Ljava/io/InputStream;II)V
+#<init>(Ljava/io/InputStream;Ljava/lang/String;)V
+#<init>(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;III)V
+#ReInit(Ljava/io/InputStream;III)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;)V
+#ReInit(Ljava/io/InputStream;)V
+#ReInit(Ljava/io/InputStream;Ljava/lang/String;II)V
+#ReInit(Ljava/io/InputStream;II)V
+#GetImage()Ljava/lang/String;
+#GetSuffix(I)[C
+#Done()V
+#adjustBeginLineColumn(II)V

+###org/apache/hadoop/record/compiler/generated/Token
@0.20.2
+#<init>()V
+#toString()Ljava/lang/String;
+#newToken(I)Lorg/apache/hadoop/record/compiler/generated/Token;

+###org/apache/hadoop/record/compiler/generated/TokenMgrError
@0.20.2
+#getMessage()Ljava/lang/String;
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(ZIIILjava/lang/String;CI)V

+###org/apache/hadoop/record/meta/FieldTypeInfo
@0.20.2
+#getTypeID()Lorg/apache/hadoop/record/meta/TypeID;
+#getFieldID()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#equals(Lorg/apache/hadoop/record/meta/FieldTypeInfo;)Z

+###org/apache/hadoop/record/meta/MapTypeID
@0.20.2
+#<init>(Lorg/apache/hadoop/record/meta/TypeID;Lorg/apache/hadoop/record/meta/TypeID;)V
+#getKeyTypeID()Lorg/apache/hadoop/record/meta/TypeID;
+#getValueTypeID()Lorg/apache/hadoop/record/meta/TypeID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/record/meta/RecordTypeInfo
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#addField(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V
+#getFieldTypeInfos()Ljava/util/Collection;
+#getNestedStructTypeInfo(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/RecordTypeInfo;
+#serialize(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V
+#deserialize(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/record/meta/StructTypeID
@0.20.2
+#<init>(Lorg/apache/hadoop/record/meta/RecordTypeInfo;)V
+#getFieldTypeInfos()Ljava/util/Collection;

+###org/apache/hadoop/record/meta/TypeID$RIOType
@0.20.2
+#<init>()V

+###org/apache/hadoop/record/meta/TypeID
@0.20.2
+#getTypeVal()B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/record/meta/Utils
@0.20.2
+#skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V

+###org/apache/hadoop/record/meta/VectorTypeID
@0.20.2
+#<init>(Lorg/apache/hadoop/record/meta/TypeID;)V
+#getElementTypeID()Lorg/apache/hadoop/record/meta/TypeID;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/security/AccessControlException
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/security/AuthenticationFilterInitializer
@0.20.205.0
+#<init>()V
+#initFilter(Lorg/apache/hadoop/http/FilterContainer;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/security/Credentials
@0.20.203.0
+#<init>()V
+#getSecretKey(Lorg/apache/hadoop/io/Text;)[B
+#getToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#addToken(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/security/token/Token;)V
+#getAllTokens()Ljava/util/Collection;
+#numberOfTokens()I
+#numberOfSecretKeys()I
+#addSecretKey(Lorg/apache/hadoop/io/Text;[B)V
+#readTokenStorageFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/Credentials;
+#readTokenStorageStream(Ljava/io/DataInputStream;)V
+#writeTokenStorageToStream(Ljava/io/DataOutputStream;)V
+#writeTokenStorageFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#addAll(Lorg/apache/hadoop/security/Credentials;)V

+###org/apache/hadoop/security/Groups
@0.20.203.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#refresh()V
+#cacheGroupsAdd(Ljava/util/List;)V
+#getUserToGroupsMappingService()Lorg/apache/hadoop/security/Groups;
+#getUserToGroupsMappingService(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/Groups;

+###org/apache/hadoop/security/JniBasedUnixGroupsMapping
@0.20.203.0
+#<init>()V
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#cacheGroupsRefresh()V
+#cacheGroupsAdd(Ljava/util/List;)V

+###org/apache/hadoop/security/JniBasedUnixGroupsNetgroupMapping
@0.20.203.0
+#<init>()V
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#cacheGroupsRefresh()V
+#cacheGroupsAdd(Ljava/util/List;)V

+###org/apache/hadoop/security/KerberosInfo
@0.20.203.0
+#serverPrincipal()Ljava/lang/String;
+#clientPrincipal()Ljava/lang/String;

+###org/apache/hadoop/security/KerberosName$BadFormatString
@0.20.203.0

+###org/apache/hadoop/security/KerberosName$NoMatchingRule
@0.20.203.0

+###org/apache/hadoop/security/KerberosName
@0.20.203.0
+#<init>(Ljava/lang/String;)V
+#getDefaultRealm()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#getServiceName()Ljava/lang/String;
+#getHostName()Ljava/lang/String;
+#getRealm()Ljava/lang/String;
+#setConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
+#getShortName()Ljava/lang/String;
+#main([Ljava/lang/String;)V
@0.20.205.0
+#setRules(Ljava/lang/String;)V
+#printRules()V

+###org/apache/hadoop/security/Krb5AndCertsSslSocketConnector$Krb5SslFilter
@0.20.203.0
+#<init>()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V

+###org/apache/hadoop/security/Krb5AndCertsSslSocketConnector$MODE
@0.20.203.0
+#values()[Lorg/apache/hadoop/security/Krb5AndCertsSslSocketConnector$MODE;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/security/Krb5AndCertsSslSocketConnector$MODE;

+###org/apache/hadoop/security/Krb5AndCertsSslSocketConnector
@0.20.203.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/security/Krb5AndCertsSslSocketConnector$MODE;)V
+#customize(Lorg/mortbay/io/EndPoint;Lorg/mortbay/jetty/Request;)V

+###org/apache/hadoop/security/NetgroupCache
@0.20.203.0
+#<init>()V
+#getNetgroups(Ljava/lang/String;Ljava/util/List;)V
+#getNetgroupNames()Ljava/util/List;
+#isCached(Ljava/lang/String;)Z
+#clear()V
+#add(Ljava/lang/String;Ljava/util/List;)V

+###org/apache/hadoop/security/RefreshUserMappingsProtocol
@0.20.203.0
+#refreshUserToGroupsMappings()V
+#refreshSuperUserGroupsConfiguration()V

+###org/apache/hadoop/security/SaslInputStream
@0.20.203.0
+#<init>(Ljava/io/InputStream;Ljavax/security/sasl/SaslServer;)V
+#<init>(Ljava/io/InputStream;Ljavax/security/sasl/SaslClient;)V
+#read()I
+#read([B)I
+#read([BII)I
+#skip(J)J
+#available()I
+#close()V
+#markSupported()Z

+###org/apache/hadoop/security/SaslOutputStream
@0.20.203.0
+#<init>(Ljava/io/OutputStream;Ljavax/security/sasl/SaslServer;)V
+#<init>(Ljava/io/OutputStream;Ljavax/security/sasl/SaslClient;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#flush()V
+#close()V

+###org/apache/hadoop/security/SaslRpcClient
@0.20.203.0
+#<init>(Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;)V
+#saslConnect(Ljava/io/InputStream;Ljava/io/OutputStream;)Z
+#getInputStream(Ljava/io/InputStream;)Ljava/io/InputStream;
+#getOutputStream(Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#dispose()V
@1.2.1
+#<init>(Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;)V

+###org/apache/hadoop/security/SaslRpcServer$AuthMethod
@0.20.203.0
+#values()[Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
+#getMechanismName()Ljava/lang/String;
+#read(Ljava/io/DataInput;)Lorg/apache/hadoop/security/SaslRpcServer$AuthMethod;
+#write(Ljava/io/DataOutput;)V

+###org/apache/hadoop/security/SaslRpcServer$QualityOfProtection
@0.20.203.0
+#values()[Lorg/apache/hadoop/security/SaslRpcServer$QualityOfProtection;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/security/SaslRpcServer$QualityOfProtection;
+#getSaslQop()Ljava/lang/String;

+###org/apache/hadoop/security/SaslRpcServer$SaslDigestCallbackHandler
@0.20.203.0
+#<init>(Lorg/apache/hadoop/security/token/SecretManager;Lorg/apache/hadoop/ipc/Server$Connection;)V
+#handle([Ljavax/security/auth/callback/Callback;)V

+###org/apache/hadoop/security/SaslRpcServer$SaslGssCallbackHandler
@0.20.203.0
+#<init>()V
+#handle([Ljavax/security/auth/callback/Callback;)V

+###org/apache/hadoop/security/SaslRpcServer$SaslStatus
@0.20.203.0
+#values()[Lorg/apache/hadoop/security/SaslRpcServer$SaslStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/security/SaslRpcServer$SaslStatus;

+###org/apache/hadoop/security/SaslRpcServer
@0.20.203.0
+#<init>()V
+#init(Lorg/apache/hadoop/conf/Configuration;)V
+#getIdentifier(Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;)Lorg/apache/hadoop/security/token/TokenIdentifier;
+#splitKerberosName(Ljava/lang/String;)[Ljava/lang/String;

+###org/apache/hadoop/security/SecurityUtil$QualifiedHostResolver
@1.0.1
+#getByName(Ljava/lang/String;)Ljava/net/InetAddress;

+###org/apache/hadoop/security/SecurityUtil
@0.20.2
+#<init>()V
+#setPolicy(Ljava/security/Policy;)V
+#getPolicy()Ljava/security/Policy;
+#getSubject(Lorg/apache/hadoop/security/UserGroupInformation;)Ljavax/security/auth/Subject;
@0.20.203.0
+#fetchServiceTicket(Ljava/net/URL;)V
+#getServerPrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getServerPrincipal(Ljava/lang/String;Ljava/net/InetAddress;)Ljava/lang/String;
+#login(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#login(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#buildDTServiceName(Ljava/net/URI;I)Ljava/lang/String;
+#getAdminAcls(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/security/authorize/AccessControlList;
+#getHostFromPrincipal(Ljava/lang/String;)Ljava/lang/String;
-#setPolicy(Ljava/security/Policy;)V
-#getPolicy()Ljava/security/Policy;
-#getSubject(Lorg/apache/hadoop/security/UserGroupInformation;)Ljavax/security/auth/Subject;
@0.20.205.0
+#getTokenServiceUseIp()Z
+#getTokenServiceAddr(Lorg/apache/hadoop/security/token/Token;)Ljava/net/InetSocketAddress;
+#setTokenService(Lorg/apache/hadoop/security/token/Token;Ljava/net/InetSocketAddress;)V
+#buildTokenService(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/io/Text;
@1.0.1
+#getByName(Ljava/lang/String;)Ljava/net/InetAddress;
-#getTokenServiceUseIp()Z
@1.1.0
+#useKsslAuth()Z
+#openSecureHttpConnection(Ljava/net/URL;)Ljava/net/URLConnection;
@1.1.1
+#getLocalHostName()Ljava/lang/String;

+###org/apache/hadoop/security/ShellBasedUnixGroupsMapping
@0.20.203.0
+#<init>()V
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#cacheGroupsRefresh()V
+#cacheGroupsAdd(Ljava/util/List;)V

+###org/apache/hadoop/security/ShellBasedUnixGroupsNetgroupMapping
@0.20.203.0
+#<init>()V
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#cacheGroupsRefresh()V
+#cacheGroupsAdd(Ljava/util/List;)V

+###org/apache/hadoop/security/UserGroupInformation$AuthenticationMethod
@0.20.203.0
+#values()[Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;

+###org/apache/hadoop/security/UserGroupInformation$HadoopLoginModule
@0.20.203.0
+#<init>()V
+#abort()Z
+#commit()Z
+#initialize(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V
+#login()Z
+#logout()Z

+###org/apache/hadoop/security/UserGroupInformation
@0.20.2
+#<init>()V
+#getCurrentUGI()Lorg/apache/hadoop/security/UserGroupInformation;
+#setCurrentUGI(Lorg/apache/hadoop/security/UserGroupInformation;)V[deprecated]
+#setCurrentUser(Lorg/apache/hadoop/security/UserGroupInformation;)V
+#getUserName()Ljava/lang/String;
+#getGroupNames()[Ljava/lang/String;
+#login(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation;
+#readFrom(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation;
@0.20.203.0
+#setConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
+#isSecurityEnabled()Z
+#hasKerberosCredentials()Z
+#getCurrentUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#getLoginUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#isFromKeytab()Z
+#loginUserFromKeytab(Ljava/lang/String;Ljava/lang/String;)V
+#reloginFromTicketCache()V
+#loginUserFromKeytabAndReturnUGI(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
+#checkTGTAndReloginFromKeytab()V
+#reloginFromKeytab()V
+#isLoginKeytabBased()Z
+#createRemoteUser(Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
+#createProxyUser(Ljava/lang/String;Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/security/UserGroupInformation;
+#getRealUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#createUserForTesting(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
+#createProxyUserForTesting(Ljava/lang/String;Lorg/apache/hadoop/security/UserGroupInformation;[Ljava/lang/String;)Lorg/apache/hadoop/security/UserGroupInformation;
+#getShortUserName()Ljava/lang/String;
+#addTokenIdentifier(Lorg/apache/hadoop/security/token/TokenIdentifier;)Z
+#getTokenIdentifiers()Ljava/util/Set;
+#addToken(Lorg/apache/hadoop/security/token/Token;)Z
+#getTokens()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#setAuthenticationMethod(Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;)V
+#getAuthenticationMethod()Lorg/apache/hadoop/security/UserGroupInformation$AuthenticationMethod;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#doAs(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
+#doAs(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
+#main([Ljava/lang/String;)V
-#<init>()V
-#getCurrentUGI()Lorg/apache/hadoop/security/UserGroupInformation;
-#setCurrentUGI(Lorg/apache/hadoop/security/UserGroupInformation;)V[deprecated]
-#setCurrentUser(Lorg/apache/hadoop/security/UserGroupInformation;)V
-#login(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation;
-#readFrom(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UserGroupInformation;

+###org/apache/hadoop/security/authentication/client/AuthenticatedURL$Token
@0.20.205.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#isSet()Z
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/apache/hadoop/security/authentication/client/AuthenticatedURL
@0.20.205.0
+#setDefaultAuthenticator(Ljava/lang/Class;)V
+#getDefaultAuthenticator()Ljava/lang/Class;
+#<init>()V
+#<init>(Lorg/apache/hadoop/security/authentication/client/Authenticator;)V
+#openConnection(Ljava/net/URL;Lorg/apache/hadoop/security/authentication/client/AuthenticatedURL$Token;)Ljava/net/HttpURLConnection;
+#injectToken(Ljava/net/HttpURLConnection;Lorg/apache/hadoop/security/authentication/client/AuthenticatedURL$Token;)V
+#extractToken(Ljava/net/HttpURLConnection;Lorg/apache/hadoop/security/authentication/client/AuthenticatedURL$Token;)V

+###org/apache/hadoop/security/authentication/client/AuthenticationException
@0.20.205.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/security/authentication/client/Authenticator
@0.20.205.0
+#authenticate(Ljava/net/URL;Lorg/apache/hadoop/security/authentication/client/AuthenticatedURL$Token;)V

+###org/apache/hadoop/security/authentication/client/KerberosAuthenticator
@0.20.205.0
+#<init>()V
+#authenticate(Ljava/net/URL;Lorg/apache/hadoop/security/authentication/client/AuthenticatedURL$Token;)V

+###org/apache/hadoop/security/authentication/client/PseudoAuthenticator
@0.20.205.0
+#<init>()V
+#authenticate(Ljava/net/URL;Lorg/apache/hadoop/security/authentication/client/AuthenticatedURL$Token;)V

+###org/apache/hadoop/security/authentication/server/AuthenticationFilter
@0.20.205.0
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/apache/hadoop/security/authentication/server/AuthenticationHandler
@0.20.205.0
+#getType()Ljava/lang/String;
+#init(Ljava/util/Properties;)V
+#destroy()V
+#authenticate(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/apache/hadoop/security/authentication/server/AuthenticationToken;

+###org/apache/hadoop/security/authentication/server/AuthenticationToken
@0.20.205.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#setExpires(J)V
+#getUserName()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getExpires()J
+#isExpired()Z
+#toString()Ljava/lang/String;
+#parse(Ljava/lang/String;)Lorg/apache/hadoop/security/authentication/server/AuthenticationToken;

+###org/apache/hadoop/security/authentication/server/KerberosAuthenticationHandler
@0.20.205.0
+#<init>()V
+#init(Ljava/util/Properties;)V
+#destroy()V
+#getType()Ljava/lang/String;
+#authenticate(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/apache/hadoop/security/authentication/server/AuthenticationToken;

+###org/apache/hadoop/security/authentication/server/PseudoAuthenticationHandler
@0.20.205.0
+#<init>()V
+#init(Ljava/util/Properties;)V
+#destroy()V
+#getType()Ljava/lang/String;
+#authenticate(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/apache/hadoop/security/authentication/server/AuthenticationToken;

+###org/apache/hadoop/security/authentication/util/KerberosUtil
@1.0.3
+#<init>()V
+#getKrb5LoginModuleName()Ljava/lang/String;
+#getOidInstance(Ljava/lang/String;)Lorg/ietf/jgss/Oid;
+#getDefaultRealm()Ljava/lang/String;
@1.1.1
+#getServicePrincipal(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/hadoop/security/authentication/util/Signer
@0.20.205.0
+#<init>([B)V
+#sign(Ljava/lang/String;)Ljava/lang/String;
+#verifyAndExtract(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/hadoop/security/authentication/util/SignerException
@0.20.205.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/security/authorize/AccessControlList
@0.20.203.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#isAllAllowed()Z
+#addUser(Ljava/lang/String;)V
+#isUserAllowed(Lorg/apache/hadoop/security/UserGroupInformation;)Z
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#getACLString()Ljava/lang/String;

+###org/apache/hadoop/security/authorize/AuthorizationException
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#getStackTrace()[Ljava/lang/StackTraceElement;
+#printStackTrace()V
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V

+###org/apache/hadoop/security/authorize/PolicyProvider
@0.20.2
+#<init>()V
+#getServices()[Lorg/apache/hadoop/security/authorize/Service;

+###org/apache/hadoop/security/authorize/ProxyUsers
@0.20.203.0
+#<init>()V
+#refreshSuperUserGroupsConfiguration()V
+#refreshSuperUserGroupsConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
+#getProxySuperuserGroupConfKey(Ljava/lang/String;)Ljava/lang/String;
+#getProxySuperuserIpConfKey(Ljava/lang/String;)Ljava/lang/String;
+#authorize(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/security/authorize/RefreshAuthorizationPolicyProtocol
@0.20.2
+#refreshServiceAcl()V

+###org/apache/hadoop/security/authorize/Service
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
+#getServiceKey()Ljava/lang/String;
+#getPermission()Ljava/security/Permission;
@0.20.203.0
+#getProtocol()Ljava/lang/Class;
-#getPermission()Ljava/security/Permission;

+###org/apache/hadoop/security/authorize/ServiceAuthorizationManager
@0.20.2
+#<init>()V
+#authorize(Ljavax/security/auth/Subject;Ljava/lang/Class;)V
@0.20.203.0
+#authorize(Lorg/apache/hadoop/security/UserGroupInformation;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetAddress;)V
+#refresh(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#authorize(Ljavax/security/auth/Subject;Ljava/lang/Class;)V

+###org/apache/hadoop/security/token/SecretManager$InvalidToken
@0.20.203.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/security/token/SecretManager
@0.20.203.0
+#<init>()V
+#retrievePassword(Lorg/apache/hadoop/security/token/TokenIdentifier;)[B
+#createIdentifier()Lorg/apache/hadoop/security/token/TokenIdentifier;

+###org/apache/hadoop/security/token/Token$TrivialRenewer
@0.20.205.0
+#<init>()V
+#handleKind(Lorg/apache/hadoop/io/Text;)Z
+#isManaged(Lorg/apache/hadoop/security/token/Token;)Z
+#renew(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
+#cancel(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/security/token/Token
@0.20.203.0
+#<init>(Lorg/apache/hadoop/security/token/TokenIdentifier;Lorg/apache/hadoop/security/token/SecretManager;)V
+#<init>([B[BLorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
+#<init>()V
+#getIdentifier()[B
+#getPassword()[B
+#getKind()Lorg/apache/hadoop/io/Text;
+#getService()Lorg/apache/hadoop/io/Text;
+#setService(Lorg/apache/hadoop/io/Text;)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#encodeToUrlString()Ljava/lang/String;
+#decodeFromUrlString(Ljava/lang/String;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@0.20.205.0
+#<init>(Lorg/apache/hadoop/security/token/Token;)V
+#setKind(Lorg/apache/hadoop/io/Text;)V
+#isManaged()Z
+#renew(Lorg/apache/hadoop/conf/Configuration;)J
+#cancel(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/security/token/TokenIdentifier
@0.20.203.0
+#<init>()V
+#getKind()Lorg/apache/hadoop/io/Text;
+#getUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#getBytes()[B

+###org/apache/hadoop/security/token/TokenInfo
@0.20.203.0
+#value()Ljava/lang/Class;

+###org/apache/hadoop/security/token/TokenRenewer
@0.20.205.0
+#<init>()V
+#handleKind(Lorg/apache/hadoop/io/Text;)Z
+#isManaged(Lorg/apache/hadoop/security/token/Token;)Z
+#renew(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)J
+#cancel(Lorg/apache/hadoop/security/token/Token;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/security/token/TokenSelector
@0.20.203.0
+#selectToken(Lorg/apache/hadoop/io/Text;Ljava/util/Collection;)Lorg/apache/hadoop/security/token/Token;

+###org/apache/hadoop/security/token/delegation/AbstractDelegationTokenIdentifier
@0.20.203.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/io/Text;)V
+#getKind()Lorg/apache/hadoop/io/Text;
+#getUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#getRenewer()Lorg/apache/hadoop/io/Text;
+#setIssueDate(J)V
+#getIssueDate()J
+#setMaxDate(J)V
+#getMaxDate()J
+#setSequenceNumber(I)V
+#getSequenceNumber()I
+#setMasterKeyId(I)V
+#getMasterKeyId()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager$DelegationTokenInformation
@0.20.203.0
+#<init>(J[B)V
+#getRenewDate()J

+###org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager
@0.20.203.0
+#<init>(JJJJ)V
+#startThreads()V
+#isRunning()Z
+#addKey(Lorg/apache/hadoop/security/token/delegation/DelegationKey;)V
+#getAllKeys()[Lorg/apache/hadoop/security/token/delegation/DelegationKey;
+#retrievePassword(Lorg/apache/hadoop/security/token/delegation/AbstractDelegationTokenIdentifier;)[B
+#renewToken(Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;)J
+#cancelToken(Lorg/apache/hadoop/security/token/Token;Ljava/lang/String;)Lorg/apache/hadoop/security/token/delegation/AbstractDelegationTokenIdentifier;
+#createSecretKey([B)Ljavax/crypto/SecretKey;
+#stopThreads()V
+#retrievePassword(Lorg/apache/hadoop/security/token/TokenIdentifier;)[B
@1.0.0
+#verifyToken(Lorg/apache/hadoop/security/token/delegation/AbstractDelegationTokenIdentifier;[B)V

+###org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSelector
@0.20.203.0
+#selectToken(Lorg/apache/hadoop/io/Text;Ljava/util/Collection;)Lorg/apache/hadoop/security/token/Token;

+###org/apache/hadoop/security/token/delegation/DelegationKey
@0.20.203.0
+#<init>()V
+#<init>(IJLjavax/crypto/SecretKey;)V
+#getKeyId()I
+#getExpiryDate()J
+#getKey()Ljavax/crypto/SecretKey;
+#setExpiryDate(J)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/util/ChecksumUtil
@0.20.205.0
+#<init>()V
+#updateChunkChecksum([BIIILorg/apache/hadoop/util/DataChecksum;)V

+###org/apache/hadoop/util/CyclicIteration
@0.20.2
+#<init>(Ljava/util/NavigableMap;Ljava/lang/Object;)V
+#iterator()Ljava/util/Iterator;

+###org/apache/hadoop/util/Daemon
@0.20.2
+#<init>()V
+#<init>(Ljava/lang/Runnable;)V
+#<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V
+#getRunnable()Ljava/lang/Runnable;

+###org/apache/hadoop/util/DataChecksum
@0.20.2
+#newDataChecksum(II)Lorg/apache/hadoop/util/DataChecksum;
+#newDataChecksum([BI)Lorg/apache/hadoop/util/DataChecksum;
+#newDataChecksum(Ljava/io/DataInputStream;)Lorg/apache/hadoop/util/DataChecksum;
+#writeHeader(Ljava/io/DataOutputStream;)V
+#getHeader()[B
+#writeValue(Ljava/io/DataOutputStream;Z)I
+#writeValue([BIZ)I
+#compare([BI)Z
+#getChecksumType()I
+#getChecksumSize()I
+#getBytesPerChecksum()I
+#getNumBytesInSum()I
+#getChecksumHeaderSize()I
+#getValue()J
+#reset()V
+#update([BII)V
+#update(I)V

+###org/apache/hadoop/util/DiskChecker$DiskErrorException
@0.20.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/util/DiskChecker$DiskOutOfSpaceException
@0.20.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/util/DiskChecker
@0.20.2
+#<init>()V
+#mkdirsWithExistsCheck(Ljava/io/File;)Z
+#checkDir(Ljava/io/File;)V
@0.20.203.0
+#mkdirsWithExistsAndPermissionCheck(Lorg/apache/hadoop/fs/LocalFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z
+#checkDir(Lorg/apache/hadoop/fs/LocalFileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)V

+###org/apache/hadoop/util/GenericOptionsParser
@0.20.2
+#<init>(Lorg/apache/commons/cli/Options;[Ljava/lang/String;)V
+#<init>([Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)V
+#getRemainingArgs()[Ljava/lang/String;
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getCommandLine()Lorg/apache/commons/cli/CommandLine;
+#getLibJars(Lorg/apache/hadoop/conf/Configuration;)[Ljava/net/URL;
+#printGenericCommandUsage(Ljava/io/PrintStream;)V

+###org/apache/hadoop/util/GenericsUtil
@0.20.2
+#<init>()V
+#getClass(Ljava/lang/Object;)Ljava/lang/Class;
+#toArray(Ljava/lang/Class;Ljava/util/List;)[Ljava/lang/Object;
+#toArray(Ljava/util/List;)[Ljava/lang/Object;

+###org/apache/hadoop/util/HeapSort
@0.20.2
+#<init>()V
+#sort(Lorg/apache/hadoop/util/IndexedSortable;II)V
+#sort(Lorg/apache/hadoop/util/IndexedSortable;IILorg/apache/hadoop/util/Progressable;)V

+###org/apache/hadoop/util/HostsFileReader
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#refresh()V
+#getHosts()Ljava/util/Set;
+#getExcludedHosts()Ljava/util/Set;
+#setIncludesFile(Ljava/lang/String;)V
+#setExcludesFile(Ljava/lang/String;)V
+#updateFileNames(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/util/IndexedSortable
@0.20.2
+#compare(II)I
+#swap(II)V

+###org/apache/hadoop/util/IndexedSorter
@0.20.2
+#sort(Lorg/apache/hadoop/util/IndexedSortable;II)V
+#sort(Lorg/apache/hadoop/util/IndexedSortable;IILorg/apache/hadoop/util/Progressable;)V

+###org/apache/hadoop/util/LineReader
@0.20.2
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#readLine(Lorg/apache/hadoop/io/Text;II)I
+#readLine(Lorg/apache/hadoop/io/Text;I)I
+#readLine(Lorg/apache/hadoop/io/Text;)I
@1.2.0
+#<init>(Ljava/io/InputStream;[B)V
+#<init>(Ljava/io/InputStream;I[B)V
+#<init>(Ljava/io/InputStream;Lorg/apache/hadoop/conf/Configuration;[B)V

+###org/apache/hadoop/util/LinuxMemoryCalculatorPlugin
@0.20.2
+#<init>()V
+#getPhysicalMemorySize()J
+#getVirtualMemorySize()J
+#main([Ljava/lang/String;)V
@0.20.205.0
-#main([Ljava/lang/String;)V

+###org/apache/hadoop/util/LinuxResourceCalculatorPlugin
@0.20.205.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
+#getPhysicalMemorySize()J
+#getVirtualMemorySize()J
+#getAvailablePhysicalMemorySize()J
+#getAvailableVirtualMemorySize()J
+#getNumProcessors()I
+#getCpuFrequency()J
+#getCumulativeCpuTime()J
+#getCpuUsage()F
+#main([Ljava/lang/String;)V
+#getProcResourceValues()Lorg/apache/hadoop/util/ResourceCalculatorPlugin$ProcResourceValues;

+###org/apache/hadoop/util/MemoryCalculatorPlugin
@0.20.2
+#<init>()V
+#getVirtualMemorySize()J
+#getPhysicalMemorySize()J
+#getMemoryCalculatorPlugin(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/util/MemoryCalculatorPlugin;

+###org/apache/hadoop/util/MergeSort
@0.20.2
+#<init>(Ljava/util/Comparator;)V
+#mergeSort([I[III)V

+###org/apache/hadoop/util/NativeCodeLoader
@0.20.2
+#<init>()V
+#isNativeCodeLoaded()Z
+#getLoadNativeLibraries(Lorg/apache/hadoop/conf/Configuration;)Z
+#setLoadNativeLibraries(Lorg/apache/hadoop/conf/Configuration;Z)V

+###org/apache/hadoop/util/PlatformName
@0.20.2
+#<init>()V
+#getPlatformName()Ljava/lang/String;
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/util/PrintJarMainClass
@0.20.2
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/util/PriorityQueue
@0.20.2
+#<init>()V
+#put(Ljava/lang/Object;)V
+#insert(Ljava/lang/Object;)Z
+#top()Ljava/lang/Object;
+#pop()Ljava/lang/Object;
+#adjustTop()V
+#size()I
+#clear()V

+###org/apache/hadoop/util/ProcessTree$Signal
@0.20.203.0
+#values()[Lorg/apache/hadoop/util/ProcessTree$Signal;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/util/ProcessTree$Signal;
+#getValue()I

+###org/apache/hadoop/util/ProcessTree
@0.20.203.0
+#<init>()V
+#killProcess(Ljava/lang/String;Lorg/apache/hadoop/util/ProcessTree$Signal;)V
+#killProcessGroup(Ljava/lang/String;Lorg/apache/hadoop/util/ProcessTree$Signal;)V
+#isAlive(Ljava/lang/String;)Z
+#isProcessGroupAlive(Ljava/lang/String;)Z

+###org/apache/hadoop/util/ProcfsBasedProcessTree
@0.20.2
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setSigKillInterval(J)V
+#isAvailable()Z
+#getProcessTree()Lorg/apache/hadoop/util/ProcfsBasedProcessTree;
+#isAlive()Z
+#destroy()V
+#getCumulativeVmem()J
+#getCumulativeVmem(I)J
+#getPidFromPidFile(Ljava/lang/String;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.20.203.0
+#<init>(Ljava/lang/String;Z)V
+#isAnyProcessInTreeAlive()Z
+#getProcessTreeDump()Ljava/lang/String;
-#setSigKillInterval(J)V
-#destroy()V
-#getPidFromPidFile(Ljava/lang/String;)Ljava/lang/String;
@0.20.205.0
+#getCumulativeRssmem()J
+#getCumulativeRssmem(I)J
+#getCumulativeCpuTime()J

+###org/apache/hadoop/util/ProgramDriver
@0.20.2
+#<init>()V
+#addClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V
+#driver([Ljava/lang/String;)V

+###org/apache/hadoop/util/Progress
@0.20.2
+#<init>()V
+#addPhase(Ljava/lang/String;)Lorg/apache/hadoop/util/Progress;
+#addPhase()Lorg/apache/hadoop/util/Progress;
+#startNextPhase()V
+#phase()Lorg/apache/hadoop/util/Progress;
+#complete()V
+#set(F)V
+#get()F
+#setStatus(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@1.1.0
+#getProgress()F

+###org/apache/hadoop/util/Progressable
@0.20.2
+#progress()V

+###org/apache/hadoop/util/PureJavaCrc32
@1.1.0
+#<init>()V
+#getValue()J
+#reset()V
+#update([BII)V
+#update(I)V

+###org/apache/hadoop/util/QueueProcessingStatistics$State
@0.20.203.0
+#values()[Lorg/apache/hadoop/util/QueueProcessingStatistics$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/util/QueueProcessingStatistics$State;

+###org/apache/hadoop/util/QueueProcessingStatistics
@0.20.203.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/logging/Log;)V
+#startCycle(I)V
+#endCycle(I)V
+#checkRestart()V
+#preCheckIsLastCycle(I)Z
+#postCheckIsLastCycle(I)Z

+###org/apache/hadoop/util/QuickSort
@0.20.2
+#<init>()V
+#sort(Lorg/apache/hadoop/util/IndexedSortable;II)V
+#sort(Lorg/apache/hadoop/util/IndexedSortable;IILorg/apache/hadoop/util/Progressable;)V

+###org/apache/hadoop/util/ReflectionUtils
@0.20.2
+#<init>()V
+#setConf(Ljava/lang/Object;Lorg/apache/hadoop/conf/Configuration;)V
+#newInstance(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Object;
+#setContentionTracing(Z)V
+#printThreadInfo(Ljava/io/PrintWriter;Ljava/lang/String;)V
+#logThreadInfo(Lorg/apache/commons/logging/Log;Ljava/lang/String;J)V
+#getClass(Ljava/lang/Object;)Ljava/lang/Class;
+#copy(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#cloneWritableInto(Lorg/apache/hadoop/io/Writable;Lorg/apache/hadoop/io/Writable;)V[deprecated]

+###org/apache/hadoop/util/ResourceCalculatorPlugin$ProcResourceValues
@0.20.205.0
+#<init>(JJJ)V
+#getPhysicalMemorySize()J
+#getVirtualMemorySize()J
+#getCumulativeCpuTime()J

+###org/apache/hadoop/util/ResourceCalculatorPlugin
@0.20.205.0
+#<init>()V
+#getVirtualMemorySize()J
+#getPhysicalMemorySize()J
+#getAvailableVirtualMemorySize()J
+#getAvailablePhysicalMemorySize()J
+#getNumProcessors()I
+#getCpuFrequency()J
+#getCumulativeCpuTime()J
+#getCpuUsage()F
+#getProcResourceValues()Lorg/apache/hadoop/util/ResourceCalculatorPlugin$ProcResourceValues;
+#getResourceCalculatorPlugin(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/util/ResourceCalculatorPlugin;

+###org/apache/hadoop/util/RunJar
@0.20.2
+#<init>()V
+#unJar(Ljava/io/File;Ljava/io/File;)V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/util/ServletUtil
@0.20.2
+#<init>()V
+#initHTML(Ljavax/servlet/ServletResponse;Ljava/lang/String;)Ljava/io/PrintWriter;
+#getParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;
+#htmlFooter()Ljava/lang/String;
+#percentageGraph(II)Ljava/lang/String;
+#percentageGraph(FI)Ljava/lang/String;

+###org/apache/hadoop/util/Shell$ExitCodeException
@0.20.2
+#<init>(ILjava/lang/String;)V
+#getExitCode()I

+###org/apache/hadoop/util/Shell$ShellCommandExecutor
@0.20.2
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;Ljava/io/File;)V
+#<init>([Ljava/lang/String;Ljava/io/File;Ljava/util/Map;)V
+#execute()V
+#getOutput()Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.20.203.0
+#<init>([Ljava/lang/String;Ljava/io/File;Ljava/util/Map;J)V

+###org/apache/hadoop/util/Shell
@0.20.2
+#getGROUPS_COMMAND()[Ljava/lang/String;
+#getGET_PERMISSION_COMMAND()[Ljava/lang/String;
+#getUlimitMemoryCommand(Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/String;
+#<init>()V
+#<init>(J)V
+#getProcess()Ljava/lang/Process;
+#getExitCode()I
+#execCommand([Ljava/lang/String;)Ljava/lang/String;
+#execCommand(Ljava/util/Map;[Ljava/lang/String;)Ljava/lang/String;
@0.20.203.0
+#getGroupsCommand()[Ljava/lang/String;
+#getGroupsForUserCommand(Ljava/lang/String;)[Ljava/lang/String;
+#getUsersForNetgroupCommand(Ljava/lang/String;)[Ljava/lang/String;
+#getUlimitMemoryCommand(I)[Ljava/lang/String;
*#getUlimitMemoryCommand(Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/String;[deprecated]
+#isTimedOut()Z
+#execCommand(Ljava/util/Map;[Ljava/lang/String;J)Ljava/lang/String;
-#getGROUPS_COMMAND()[Ljava/lang/String;

+###org/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix
@0.20.2
+#values()[Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
+#valueOf(C)Lorg/apache/hadoop/util/StringUtils$TraditionalBinaryPrefix;
+#string2long(Ljava/lang/String;)J

+###org/apache/hadoop/util/StringUtils
@0.20.2
+#<init>()V
+#stringifyException(Ljava/lang/Throwable;)Ljava/lang/String;
+#simpleHostname(Ljava/lang/String;)Ljava/lang/String;
+#humanReadableInt(J)Ljava/lang/String;
+#formatPercent(DI)Ljava/lang/String;
+#arrayToString([Ljava/lang/String;)Ljava/lang/String;
+#byteToHexString([BII)Ljava/lang/String;
+#byteToHexString([B)Ljava/lang/String;
+#hexStringToByte(Ljava/lang/String;)[B
+#uriToString([Ljava/net/URI;)Ljava/lang/String;
+#stringToURI([Ljava/lang/String;)[Ljava/net/URI;
+#stringToPath([Ljava/lang/String;)[Lorg/apache/hadoop/fs/Path;
+#formatTimeDiff(JJ)Ljava/lang/String;
+#formatTime(J)Ljava/lang/String;
+#getFormattedTimeWithDiff(Ljava/text/DateFormat;JJ)Ljava/lang/String;
+#getStrings(Ljava/lang/String;)[Ljava/lang/String;
+#getStringCollection(Ljava/lang/String;)Ljava/util/Collection;
+#split(Ljava/lang/String;)[Ljava/lang/String;
+#split(Ljava/lang/String;CC)[Ljava/lang/String;
+#findNext(Ljava/lang/String;CCILjava/lang/StringBuilder;)I
+#escapeString(Ljava/lang/String;)Ljava/lang/String;
+#escapeString(Ljava/lang/String;CC)Ljava/lang/String;
+#escapeString(Ljava/lang/String;C[C)Ljava/lang/String;
+#unEscapeString(Ljava/lang/String;)Ljava/lang/String;
+#unEscapeString(Ljava/lang/String;CC)Ljava/lang/String;
+#unEscapeString(Ljava/lang/String;C[C)Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#startupShutdownMessage(Ljava/lang/Class;[Ljava/lang/String;Lorg/apache/commons/logging/Log;)V
+#escapeHTML(Ljava/lang/String;)Ljava/lang/String;
+#byteDesc(J)Ljava/lang/String;
+#limitDecimalTo2(D)Ljava/lang/String;
@0.20.203.0
+#join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
+#join(Ljava/lang/CharSequence;[Ljava/lang/String;)Ljava/lang/String;
+#capitalize(Ljava/lang/String;)Ljava/lang/String;
+#camelize(Ljava/lang/String;)Ljava/lang/String;
@1.1.0
+#join(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;

+###org/apache/hadoop/util/Tool
@0.20.2
+#run([Ljava/lang/String;)I

+###org/apache/hadoop/util/ToolRunner
@0.20.2
+#<init>()V
+#run(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/util/Tool;[Ljava/lang/String;)I
+#run(Lorg/apache/hadoop/util/Tool;[Ljava/lang/String;)I
+#printGenericCommandUsage(Ljava/io/PrintStream;)V

+###org/apache/hadoop/util/UTF8ByteArrayUtils
@0.20.2
+#<init>()V
+#findByte([BIIB)I
+#findBytes([BII[B)I
+#findNthByte([BIIBI)I
+#findNthByte([BBI)I

+###org/apache/hadoop/util/VersionInfo
@0.20.2
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getRevision()Ljava/lang/String;
+#getDate()Ljava/lang/String;
+#getUser()Ljava/lang/String;
+#getUrl()Ljava/lang/String;
+#getBuildVersion()Ljava/lang/String;
+#main([Ljava/lang/String;)V
@1.0.1
+#getSrcChecksum()Ljava/lang/String;

+###org/apache/hadoop/util/XMLUtils
@0.20.2
+#<init>()V
+#transform(Ljava/io/InputStream;Ljava/io/InputStream;Ljava/io/Writer;)V

+###org/apache/hadoop/util/bloom/BloomFilter
@0.20.2
+#<init>()V
+#<init>(III)V
+#add(Lorg/apache/hadoop/util/bloom/Key;)V
+#and(Lorg/apache/hadoop/util/bloom/Filter;)V
+#membershipTest(Lorg/apache/hadoop/util/bloom/Key;)Z
+#not()V
+#or(Lorg/apache/hadoop/util/bloom/Filter;)V
+#xor(Lorg/apache/hadoop/util/bloom/Filter;)V
+#toString()Ljava/lang/String;
+#getVectorSize()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/util/bloom/CountingBloomFilter
@0.20.2
+#<init>()V
+#<init>(III)V
+#add(Lorg/apache/hadoop/util/bloom/Key;)V
+#delete(Lorg/apache/hadoop/util/bloom/Key;)V
+#and(Lorg/apache/hadoop/util/bloom/Filter;)V
+#membershipTest(Lorg/apache/hadoop/util/bloom/Key;)Z
+#approximateCount(Lorg/apache/hadoop/util/bloom/Key;)I
+#not()V
+#or(Lorg/apache/hadoop/util/bloom/Filter;)V
+#xor(Lorg/apache/hadoop/util/bloom/Filter;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/util/bloom/DynamicBloomFilter
@0.20.2
+#<init>()V
+#<init>(IIII)V
+#add(Lorg/apache/hadoop/util/bloom/Key;)V
+#and(Lorg/apache/hadoop/util/bloom/Filter;)V
+#membershipTest(Lorg/apache/hadoop/util/bloom/Key;)Z
+#not()V
+#or(Lorg/apache/hadoop/util/bloom/Filter;)V
+#xor(Lorg/apache/hadoop/util/bloom/Filter;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/util/bloom/Filter
@0.20.2
+#add(Lorg/apache/hadoop/util/bloom/Key;)V
+#membershipTest(Lorg/apache/hadoop/util/bloom/Key;)Z
+#and(Lorg/apache/hadoop/util/bloom/Filter;)V
+#or(Lorg/apache/hadoop/util/bloom/Filter;)V
+#xor(Lorg/apache/hadoop/util/bloom/Filter;)V
+#not()V
+#add(Ljava/util/List;)V
+#add(Ljava/util/Collection;)V
+#add([Lorg/apache/hadoop/util/bloom/Key;)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/util/bloom/HashFunction
@0.20.2
+#<init>(III)V
+#clear()V
+#hash(Lorg/apache/hadoop/util/bloom/Key;)[I

+###org/apache/hadoop/util/bloom/Key
@0.20.2
+#<init>()V
+#<init>([B)V
+#<init>([BD)V
+#set([BD)V
+#getBytes()[B
+#getWeight()D
+#incrementWeight(D)V
+#incrementWeight()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Lorg/apache/hadoop/util/bloom/Key;)I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/util/bloom/RemoveScheme
@0.20.2

+###org/apache/hadoop/util/bloom/RetouchedBloomFilter
@0.20.2
+#<init>()V
+#<init>(III)V
+#add(Lorg/apache/hadoop/util/bloom/Key;)V
+#addFalsePositive(Lorg/apache/hadoop/util/bloom/Key;)V
+#addFalsePositive(Ljava/util/Collection;)V
+#addFalsePositive(Ljava/util/List;)V
+#addFalsePositive([Lorg/apache/hadoop/util/bloom/Key;)V
+#selectiveClearing(Lorg/apache/hadoop/util/bloom/Key;S)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V

+###org/apache/hadoop/util/hash/Hash
@0.20.2
+#<init>()V
+#parseHashType(Ljava/lang/String;)I
+#getHashType(Lorg/apache/hadoop/conf/Configuration;)I
+#getInstance(I)Lorg/apache/hadoop/util/hash/Hash;
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/util/hash/Hash;
+#hash([B)I
+#hash([BI)I
+#hash([BII)I

+###org/apache/hadoop/util/hash/JenkinsHash
@0.20.2
+#<init>()V
+#getInstance()Lorg/apache/hadoop/util/hash/Hash;
+#hash([BII)I
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/util/hash/MurmurHash
@0.20.2
+#<init>()V
+#getInstance()Lorg/apache/hadoop/util/hash/Hash;
+#hash([BII)I

+###org/apache/hadoop/fs/FileUtil$HardLink
@0.20.2
+#<init>()V
+#createHardLink(Ljava/io/File;Ljava/io/File;)V
+#getLinkCount(Ljava/io/File;)I
@0.20.203.0
-###org/apache/hadoop/fs/FileUtil$HardLink

+###org/apache/hadoop/hdfs/DFSClient$BlockReader
@0.20.2
+#read([BII)I
+#skip(J)J
+#read()I
+#seekToNewSource(J)Z
+#seek(J)V
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JJJJI)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JJJJIZ)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JJJJIZLjava/lang/String;)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
+#close()V
+#readAll([BII)I
@0.20.203.0
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JLorg/apache/hadoop/security/token/Token;JJJI)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JLorg/apache/hadoop/security/token/Token;JJJIZ)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
+#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JLorg/apache/hadoop/security/token/Token;JJJIZLjava/lang/String;)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
-#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JJJJI)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
-#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JJJJIZ)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
-#newBlockReader(Ljava/net/Socket;Ljava/lang/String;JJJJIZLjava/lang/String;)Lorg/apache/hadoop/hdfs/DFSClient$BlockReader;
@1.1.0
-###org/apache/hadoop/hdfs/DFSClient$BlockReader

+###org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeActivityMBean
@0.20.2
+#<init>(Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#shutdown()V
@0.20.203.0
-###org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeActivityMBean

+###org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#shutdown()V
+#doUpdates(Lorg/apache/hadoop/metrics/MetricsContext;)V
+#resetAllMinMax()V
@0.20.203.0
-###org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics

+###org/apache/hadoop/hdfs/server/namenode/NamenodeFsck$FsckResult
@0.20.2
+#<init>()V
+#isHealthy()Z
+#addMissing(Ljava/lang/String;J)V
+#getMissingIds()Ljava/util/ArrayList;
+#getMissingSize()J
+#setMissingSize(J)V
+#getExcessiveReplicas()J
+#setExcessiveReplicas(J)V
+#getReplicationFactor()F
+#getMissingReplicas()J
+#setMissingReplicas(J)V
+#getTotalDirs()J
+#setTotalDirs(J)V
+#getTotalFiles()J
+#setTotalFiles(J)V
+#getTotalOpenFiles()J
+#setTotalOpenFiles(J)V
+#getTotalSize()J
+#setTotalSize(J)V
+#getTotalOpenFilesSize()J
+#setTotalOpenFilesSize(J)V
+#getReplication()I
+#setReplication(I)V
+#getTotalBlocks()J
+#setTotalBlocks(J)V
+#getTotalOpenFilesBlocks()J
+#setTotalOpenFilesBlocks(J)V
+#toString()Ljava/lang/String;
+#getCorruptFiles()J
+#setCorruptFiles(J)V
@0.20.203.0
-###org/apache/hadoop/hdfs/server/namenode/NamenodeFsck$FsckResult

+###org/apache/hadoop/hdfs/server/namenode/metrics/FSNamesystemMetrics
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#doUpdates(Lorg/apache/hadoop/metrics/MetricsContext;)V
@0.20.203.0
-###org/apache/hadoop/hdfs/server/namenode/metrics/FSNamesystemMetrics

+###org/apache/hadoop/hdfs/server/namenode/metrics/NameNodeActivtyMBean
@0.20.2
+#shutdown()V
@0.20.203.0
-###org/apache/hadoop/hdfs/server/namenode/metrics/NameNodeActivtyMBean

+###org/apache/hadoop/hdfs/server/namenode/metrics/NameNodeMetrics
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/namenode/NameNode;)V
+#shutdown()V
+#doUpdates(Lorg/apache/hadoop/metrics/MetricsContext;)V
+#resetAllMinMax()V
@0.20.203.0
-###org/apache/hadoop/hdfs/server/namenode/metrics/NameNodeMetrics

+###org/apache/hadoop/io/compress/GzipCodec$GzipInputStream
@0.20.2
+#<init>(Ljava/io/InputStream;)V
+#available()I
+#close()V
+#read()I
+#read([BII)I
+#skip(J)J
+#resetState()V
@0.20.203.0
-###org/apache/hadoop/io/compress/GzipCodec$GzipInputStream

+###org/apache/hadoop/ipc/metrics/RpcActivityMBean
@0.20.2
+#<init>(Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;Ljava/lang/String;)V
+#shutdown()V
@0.20.203.0
-###org/apache/hadoop/ipc/metrics/RpcActivityMBean

+###org/apache/hadoop/ipc/metrics/RpcMetrics
@0.20.2
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/ipc/Server;)V
+#doUpdates(Lorg/apache/hadoop/metrics/MetricsContext;)V
+#shutdown()V
@0.20.203.0
-###org/apache/hadoop/ipc/metrics/RpcMetrics

+###org/apache/hadoop/ipc/metrics/RpcMgtMBean
@0.20.2
+#getRpcOpsNumber()I
+#getRpcOpsAvgProcessingTime()J
+#getRpcOpsAvgProcessingTimeMin()J
+#getRpcOpsAvgProcessingTimeMax()J
+#getRpcOpsAvgQueueTime()J
+#getRpcOpsAvgQueueTimeMin()J
+#getRpcOpsAvgQueueTimeMax()J
+#resetAllMinMax()V
+#getNumOpenConnections()I
+#getCallQueueLen()I
@0.20.203.0
-###org/apache/hadoop/ipc/metrics/RpcMgtMBean

+###org/apache/hadoop/security/Group
@0.20.2
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.20.203.0
-###org/apache/hadoop/security/Group

+###org/apache/hadoop/security/SecurityUtil$AccessControlList
@0.20.2
+#<init>(Ljava/lang/String;)V
+#allAllowed()Z
+#getUsers()Ljava/util/Set;
+#getGroups()Ljava/util/Set;
@0.20.203.0
-###org/apache/hadoop/security/SecurityUtil$AccessControlList

+###org/apache/hadoop/security/UnixUserGroupInformation
@0.20.2
+#createImmutable([Ljava/lang/String;)Lorg/apache/hadoop/security/UnixUserGroupInformation;
+#<init>()V
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#<init>([Ljava/lang/String;)V
+#getGroupNames()[Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#saveToConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/security/UnixUserGroupInformation;)V
+#readFromConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/security/UnixUserGroupInformation;
+#login()Lorg/apache/hadoop/security/UnixUserGroupInformation;
+#login(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/UnixUserGroupInformation;
+#login(Lorg/apache/hadoop/conf/Configuration;Z)Lorg/apache/hadoop/security/UnixUserGroupInformation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getName()Ljava/lang/String;
@0.20.203.0
-###org/apache/hadoop/security/UnixUserGroupInformation

+###org/apache/hadoop/security/User
@0.20.2
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@0.20.203.0
-###org/apache/hadoop/security/User

+###org/apache/hadoop/security/authorize/ConfiguredPolicy
@0.20.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#implies(Ljava/security/ProtectionDomain;Ljava/security/Permission;)Z
+#getPermissions(Ljava/security/ProtectionDomain;)Ljava/security/PermissionCollection;
+#refresh()V
@0.20.203.0
-###org/apache/hadoop/security/authorize/ConfiguredPolicy

+###org/apache/hadoop/security/authorize/ConnectionPermission
@0.20.2
+#<init>(Ljava/lang/Class;)V
+#equals(Ljava/lang/Object;)Z
+#getActions()Ljava/lang/String;
+#hashCode()I
+#implies(Ljava/security/Permission;)Z
+#toString()Ljava/lang/String;
@0.20.203.0
-###org/apache/hadoop/security/authorize/ConnectionPermission

+###org/apache/hadoop/hdfs/server/namenode/corrupt_005ffiles_jsp
@1.1.1
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/web/resources/DstPathParam
@0.20.205.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@1.0.0
-###org/apache/hadoop/hdfs/web/resources/DstPathParam

+###org/apache/hadoop/net/NetUtils$HostResolver
@0.20.205.0
+#getByName(Ljava/lang/String;)Ljava/net/InetAddress;
@1.0.1
-###org/apache/hadoop/net/NetUtils$HostResolver

+###org/apache/hadoop/net/NetUtils$QualifiedHostResolver
@0.20.205.0
+#getByName(Ljava/lang/String;)Ljava/net/InetAddress;
@1.0.1
-###org/apache/hadoop/net/NetUtils$QualifiedHostResolver

+###org/apache/hadoop/net/NetUtils$StandardHostResolver
@0.20.205.0
+#getByName(Ljava/lang/String;)Ljava/net/InetAddress;
@1.0.1
-###org/apache/hadoop/net/NetUtils$StandardHostResolver

+###org/apache/hadoop/conf/ConfServlet$BadFormatException
@1.1.2
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/conf/ConfServlet
@1.1.2
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/mapreduce/server/tasktracker/Localizer$PermissionsHandler$PermissionsInfo
@0.20.203.0
+#<init>(ZZZZZZ)V
@0.20.205.0
-###org/apache/hadoop/mapreduce/server/tasktracker/Localizer$PermissionsHandler$PermissionsInfo

+###org/apache/hadoop/mapreduce/server/tasktracker/Localizer$PermissionsHandler
@0.20.203.0
+#<init>()V
+#setPermissions(Ljava/io/File;Lorg/apache/hadoop/mapreduce/server/tasktracker/Localizer$PermissionsHandler$PermissionsInfo;)Z
@0.20.204.0
-#setPermissions(Ljava/io/File;Lorg/apache/hadoop/mapreduce/server/tasktracker/Localizer$PermissionsHandler$PermissionsInfo;)Z
@0.20.205.0
-###org/apache/hadoop/mapreduce/server/tasktracker/Localizer$PermissionsHandler

+###org/apache/hadoop/mapred/TaskTracker$LocalStorage
@0.20.204.0
+#<init>([Ljava/lang/String;)V
@0.20.205.0
-###org/apache/hadoop/mapred/TaskTracker$LocalStorage

+###org/apache/hadoop/fs/HasFileDescriptor
@1.2.0
+#getFileDescriptor()Ljava/io/FileDescriptor;

+###org/apache/hadoop/hdfs/protocol/LayoutVersion$Feature
@1.2.0
+#values()[Lorg/apache/hadoop/hdfs/protocol/LayoutVersion$Feature;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/protocol/LayoutVersion$Feature;
+#getLayoutVersion()I
+#getAncestorLayoutVersion()I
+#getDescription()Ljava/lang/String;
+#isReservedForOldRelease()Z

+###org/apache/hadoop/hdfs/protocol/LayoutVersion
@1.2.0
+#<init>()V
+#getString()Ljava/lang/String;
+#supports(Lorg/apache/hadoop/hdfs/protocol/LayoutVersion$Feature;I)Z
+#getCurrentLayoutVersion()I

+###org/apache/hadoop/hdfs/server/datanode/web/resources/OpenEntity$Writer
@1.2.0
+#<init>()V
+#isWriteable(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)Z
+#getSize(Lorg/apache/hadoop/hdfs/server/datanode/web/resources/OpenEntity;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J
+#writeTo(Lorg/apache/hadoop/hdfs/server/datanode/web/resources/OpenEntity;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V
+#writeTo(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V
+#getSize(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J

+###org/apache/hadoop/hdfs/server/datanode/web/resources/OpenEntity
@1.2.0

+###org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicy$NotEnoughReplicasException
@1.2.0

+###org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicy
@1.2.0
+#<init>()V
+#chooseTarget(Ljava/lang/String;ILorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;Ljava/util/List;Ljava/util/HashMap;J)[Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#verifyBlockPlacement(Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;I)I
+#chooseReplicaToDelete(Lorg/apache/hadoop/hdfs/server/namenode/FSInodeInfo;Lorg/apache/hadoop/hdfs/protocol/Block;SLjava/util/Collection;Ljava/util/Collection;)Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#getInstance(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/namenode/FSClusterStats;Lorg/apache/hadoop/net/NetworkTopology;)Lorg/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicy;
+#chooseTarget(Ljava/lang/String;ILorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;Ljava/util/HashMap;J)[Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#adjustSetsWithChosenReplica(Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;)V
+#splitNodesWithRack(Ljava/util/Collection;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V

+###org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault
@1.2.0
+#initialize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/namenode/FSClusterStats;Lorg/apache/hadoop/net/NetworkTopology;)V
+#chooseTarget(Ljava/lang/String;ILorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;Ljava/util/List;J)[Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#chooseTarget(Ljava/lang/String;ILorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;Ljava/util/List;Ljava/util/HashMap;J)[Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#chooseTarget(Lorg/apache/hadoop/hdfs/server/namenode/FSInodeInfo;ILorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;Ljava/util/List;J)[Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;
+#verifyBlockPlacement(Ljava/lang/String;Lorg/apache/hadoop/hdfs/protocol/LocatedBlock;I)I
+#chooseReplicaToDelete(Lorg/apache/hadoop/hdfs/server/namenode/FSInodeInfo;Lorg/apache/hadoop/hdfs/protocol/Block;SLjava/util/Collection;Ljava/util/Collection;)Lorg/apache/hadoop/hdfs/server/namenode/DatanodeDescriptor;

+###org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyWithNodeGroup
@1.2.0
+#initialize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hdfs/server/namenode/FSClusterStats;Lorg/apache/hadoop/net/NetworkTopology;)V
+#pickupReplicaSet(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Iterator;

+###org/apache/hadoop/hdfs/server/namenode/FSClusterStats
@1.2.0
+#getTotalLoad()I
+#shouldAvoidStaleDataNodesForWrite()Z

+###org/apache/hadoop/hdfs/server/namenode/FSInodeInfo
@1.2.0
+#getFullPathName()Ljava/lang/String;

+###org/apache/hadoop/hdfs/server/namenode/UnsupportedActionException
@1.2.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/server/namenode/status_jsp
@1.2.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hdfs/tools/HDFSConcat
@1.2.0
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/tools/offlineImageViewer/DepthCounter
@1.2.0
+#<init>()V
+#incLevel()V
+#decLevel()V
+#getLevel()I

+###org/apache/hadoop/hdfs/tools/offlineImageViewer/ImageLoader$LoaderFactory
@1.2.0
+#<init>()V
+#getLoader(I)Lorg/apache/hadoop/hdfs/tools/offlineImageViewer/ImageLoader;

+###org/apache/hadoop/hdfs/tools/offlineImageViewer/ImageVisitor$ImageElement
@1.2.0
+#values()[Lorg/apache/hadoop/hdfs/tools/offlineImageViewer/ImageVisitor$ImageElement;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hdfs/tools/offlineImageViewer/ImageVisitor$ImageElement;

+###org/apache/hadoop/hdfs/tools/offlineImageViewer/NameDistributionVisitor
@1.2.0
+#<init>(Ljava/lang/String;Z)V

+###org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewer
@1.2.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hdfs/tools/offlineImageViewer/ImageVisitor;Z)V
+#go()V
+#buildOptions()Lorg/apache/commons/cli/Options;
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hdfs/util/DataTransferThrottler
@1.2.0
+#<init>(J)V
+#<init>(JJ)V
+#getBandwidth()J
+#setBandwidth(J)V
+#throttle(J)V

+###org/apache/hadoop/hdfs/web/resources/ConcatSourcesParam
@1.2.0
+#<init>(Ljava/lang/String;)V
+#<init>([Lorg/apache/hadoop/fs/Path;)V
+#getName()Ljava/lang/String;
+#getAbsolutePaths()[Ljava/lang/String;

+###org/apache/hadoop/mapred/CleanupQueue
@1.2.0
+#getInstance()Lorg/apache/hadoop/mapred/CleanupQueue;
+#addToQueue([Lorg/apache/hadoop/mapred/CleanupQueue$PathDeletionContext;)V

+###org/apache/hadoop/mapred/JobTrackerNotYetInitializedException
@1.2.0
+#<init>()V

+###org/apache/hadoop/mapred/LocalJobRunner$Job$MapTaskRunnable
@1.2.0
+#<init>(Lorg/apache/hadoop/mapred/LocalJobRunner$Job;Lorg/apache/hadoop/mapreduce/split/JobSplit$TaskSplitMetaInfo;ILorg/apache/hadoop/mapred/JobID;Ljava/util/Map;)V
+#run()V

+###org/apache/hadoop/mapred/LocalJobRunner
@1.2.0
+#getProtocolVersion(Ljava/lang/String;J)J
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
+#getNewJobId()Lorg/apache/hadoop/mapred/JobID;
+#submitJob(Lorg/apache/hadoop/mapred/JobID;Ljava/lang/String;Lorg/apache/hadoop/security/Credentials;)Lorg/apache/hadoop/mapred/JobStatus;
+#killJob(Lorg/apache/hadoop/mapred/JobID;)V
+#setJobPriority(Lorg/apache/hadoop/mapred/JobID;Ljava/lang/String;)V
+#killTask(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Z
+#getJobProfile(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/JobProfile;
+#getMapTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getReduceTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getCleanupTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getSetupTaskReports(Lorg/apache/hadoop/mapred/JobID;)[Lorg/apache/hadoop/mapred/TaskReport;
+#getJobStatus(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/JobStatus;
+#getJobCounters(Lorg/apache/hadoop/mapred/JobID;)Lorg/apache/hadoop/mapred/Counters;
+#getFilesystemName()Ljava/lang/String;
+#getClusterStatus(Z)Lorg/apache/hadoop/mapred/ClusterStatus;
+#jobsToComplete()[Lorg/apache/hadoop/mapred/JobStatus;
+#getTaskCompletionEvents(Lorg/apache/hadoop/mapred/JobID;II)[Lorg/apache/hadoop/mapred/TaskCompletionEvent;
+#getAllJobs()[Lorg/apache/hadoop/mapred/JobStatus;
+#getTaskDiagnostics(Lorg/apache/hadoop/mapred/TaskAttemptID;)[Ljava/lang/String;
+#getSystemDir()Ljava/lang/String;
+#getQueueAdmins(Ljava/lang/String;)Lorg/apache/hadoop/security/authorize/AccessControlList;
+#getStagingAreaDir()Ljava/lang/String;
+#getJobsFromQueue(Ljava/lang/String;)[Lorg/apache/hadoop/mapred/JobStatus;
+#getQueues()[Lorg/apache/hadoop/mapred/JobQueueInfo;
+#getQueueInfo(Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobQueueInfo;
+#getQueueAclsForCurrentUser()[Lorg/apache/hadoop/mapred/QueueAclsInfo;
+#setLocalMaxRunningMaps(Lorg/apache/hadoop/mapreduce/JobContext;I)V
+#getLocalMaxRunningMaps(Lorg/apache/hadoop/mapreduce/JobContext;)I
+#cancelDelegationToken(Lorg/apache/hadoop/security/token/Token;)V
+#getDelegationToken(Lorg/apache/hadoop/io/Text;)Lorg/apache/hadoop/security/token/Token;
+#renewDelegationToken(Lorg/apache/hadoop/security/token/Token;)J

+###org/apache/hadoop/mapred/jobdetails_jsp$ErrorResponse
@1.2.0
+#getErrorCode()J
+#getErrorDescription()Ljava/lang/String;

+###org/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobCounterGroupInfo$JobCounterInfo
@1.2.0
+#getName()Ljava/lang/String;
+#getMapValue()J
+#getReduceValue()J
+#getTotalValue()J

+###org/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobCounterGroupInfo
@1.2.0
+#getGroupName()Ljava/lang/String;
+#getJobCountersInfo()Ljava/util/Collection;

+###org/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobMetaInfo$EventTimingInfo
@1.2.0
+#getTimestamp()Ljava/lang/String;
+#getDurationSecs()J

+###org/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobMetaInfo
@1.2.0
+#getJobTrackerName()Ljava/lang/String;
+#getJobName()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#getJobFileLocation()Ljava/lang/String;
+#getJobSubmissionHostName()Ljava/lang/String;
+#getJobSubmissionHostAddress()Ljava/lang/String;
+#getJobSetupStatus()Ljava/lang/String;
+#getJobCleanupStatus()Ljava/lang/String;
+#getJobStatus()Ljava/lang/String;
+#getJobStatusInfo()Ljava/lang/String;
+#getJobStartTimingInfo()Lorg/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobMetaInfo$EventTimingInfo;
+#getJobFinishTimingInfo()Lorg/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobMetaInfo$EventTimingInfo;
+#getNumFlakyTaskTrackers()I
+#getJobSchedulingInfo()Ljava/lang/String;

+###org/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobTaskStats
@1.2.0
+#getNumTotalTasks()I
+#getNumPendingTasks()I
+#getNumRunningTasks()I
+#getNumFinishedTasks()I
+#getNumKilledTasks()I
+#getNumFailedTaskAttempts()I
+#getNumKilledTaskAttempts()I

+###org/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobTaskSummary
@1.2.0
+#getProgressPercentage()F
+#getTaskStats()Lorg/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobTaskStats;

+###org/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse
@1.2.0
+#getJobId()Ljava/lang/String;
+#getMetaInfo()Lorg/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobMetaInfo;
+#getMapTaskSummary()Lorg/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobTaskSummary;
+#getReduceTaskSummary()Lorg/apache/hadoop/mapred/jobdetails_jsp$JobDetailsResponse$JobTaskSummary;
+#getJobCounterGroupsInfo()Ljava/util/Collection;

+###org/apache/hadoop/mapred/jobtasks_jsp$ErrorResponse
@1.2.0
+#getErrorCode()J
+#getErrorDescription()Ljava/lang/String;

+###org/apache/hadoop/mapred/jobtasks_jsp$JobTasksResponse$JobTaskInfo
@1.2.0
+#getTaskId()Ljava/lang/String;
+#getCompletionPercent()F
+#getStatus()Ljava/lang/String;
+#getStartTime()Ljava/lang/String;
+#getFinishTime()Ljava/lang/String;
+#getDurationSecs()J

+###org/apache/hadoop/mapred/jobtasks_jsp$JobTasksResponse
@1.2.0
+#getJobId()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#getState()Ljava/lang/String;
+#getPageNum()I
+#getStartIndex()I
+#getEndIndex()I
+#getTasksInfo()Ljava/util/Collection;

+###org/apache/hadoop/mapred/jobtracker_jsp$ErrorResponse
@1.2.0
+#getErrorCode()J
+#getErrorDescription()Ljava/lang/String;

+###org/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobSummaryInfo$JobTaskStats
@1.2.0
+#getNumCompleted()I
+#getNumTotal()I
+#getCompletionPercentage()F

+###org/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobSummaryInfo
@1.2.0
+#getJobId()Ljava/lang/String;
+#getJobName()Ljava/lang/String;
+#getUserName()Ljava/lang/String;
+#getJobPriority()Ljava/lang/String;
+#getMapStats()Lorg/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobSummaryInfo$JobTaskStats;
+#getReduceStats()Lorg/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobSummaryInfo$JobTaskStats;
+#getJobSchedulingInfo()Ljava/lang/String;

+###org/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobTrackerClusterSummary
@1.2.0
+#getUsedHeapMemoryBytes()J
+#getTotalHeapMemoryBytes()J
+#getNumTotalTaskTrackers()J
+#getNumBlackListedTaskTrackers()J
+#getNumGrayListedTaskTrackers()J
+#getNumDecommissionedTaskTrackers()J
+#getRunningMapTasks()J
+#getRunningReduceTasks()J
+#getTotalJobSubmissions()J
+#getOccupiedMapSlots()J
+#getOccupiedReduceSlots()J
+#getReservedMapSlots()J
+#getReservedReduceSlots()J
+#getMapTaskCapacity()J
+#getReduceTaskCapacity()J
+#getAvgTasksPerTaskTracker()F

+###org/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobTrackerMetaInfo
@1.2.0
+#getJobTrackerName()Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#getStartTimestamp()Ljava/lang/String;
+#getVersion()Ljava/lang/String;
+#getCompilationInfo()Ljava/lang/String;
+#getIdentifier()Ljava/lang/String;
+#getSafeModeStatus()Ljava/lang/String;
+#getHasRestarted()Z
+#getHasRecovered()Z
+#getRecoveryDurationSecs()J

+###org/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse
@1.2.0
+#getMetaInfo()Lorg/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobTrackerMetaInfo;
+#getClusterSummary()Lorg/apache/hadoop/mapred/jobtracker_jsp$JobTrackerResponse$JobTrackerClusterSummary;
+#getRunningJobsSummaryInfo()Ljava/util/Collection;
+#getCompletedJobsSummaryInfo()Ljava/util/Collection;
+#getFailedJobsSummaryInfo()Ljava/util/Collection;

+###org/apache/hadoop/mapred/taskdetails_jsp$ErrorResponse
@1.2.0
+#getErrorCode()J
+#getErrorDescription()Ljava/lang/String;

+###org/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$EventTimingInfo
@1.2.0
+#getTimestamp()Ljava/lang/String;
+#getDurationSecs()J

+###org/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$TaskAttemptTrackerInfo
@1.2.0
+#getName()Ljava/lang/String;
+#getHost()Ljava/lang/String;
+#getHttpPort()I
+#getUrl()Ljava/lang/String;
+#getNode()Ljava/lang/String;

+###org/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo
@1.2.0
+#getAttemptId()Ljava/lang/String;
+#getTaskAttemptTrackerInfo()Lorg/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$TaskAttemptTrackerInfo;
+#getCleanupAttemptTrackerInfo()Lorg/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$TaskAttemptTrackerInfo;
+#getStatus()Ljava/lang/String;
+#getProgressPercentage()F
+#getStartTimingInfo()Lorg/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$EventTimingInfo;
+#getFinishTimingInfo()Lorg/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$EventTimingInfo;
+#getShuffleTimingInfo()Lorg/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$EventTimingInfo;
+#getSortTimingInfo()Lorg/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse$TaskAttemptInfo$EventTimingInfo;
+#getTaskAttemptLogUrl()Ljava/lang/String;
+#getCleanupAttemptLogUrl()Ljava/lang/String;

+###org/apache/hadoop/mapred/taskdetails_jsp$TaskDetailsResponse
@1.2.0
+#getJobId()Ljava/lang/String;
+#getTaskId()Ljava/lang/String;
+#getTaskAttemptsInfo()Ljava/util/Collection;
+#getInputSplitLocationsInfo()Ljava/util/Collection;

+###org/apache/hadoop/mapred/taskstats_jsp$ErrorResponse
@1.2.0
+#getErrorCode()J
+#getErrorDescription()Ljava/lang/String;

+###org/apache/hadoop/mapred/taskstats_jsp$TaskStatsResponse$TaskCounterGroupInfo$TaskCounterInfo
@1.2.0
+#getName()Ljava/lang/String;
+#getValue()J

+###org/apache/hadoop/mapred/taskstats_jsp$TaskStatsResponse$TaskCounterGroupInfo
@1.2.0
+#getGroupName()Ljava/lang/String;
+#getTaskCountersInfo()Ljava/util/Collection;

+###org/apache/hadoop/mapred/taskstats_jsp$TaskStatsResponse
@1.2.0
+#getTaskId()Ljava/lang/String;
+#getTaskCounterGroupsInfo()Ljava/util/Collection;

+###org/apache/hadoop/net/NetworkTopologyWithNodeGroup
@1.2.0
+#<init>()V
+#getRack(Ljava/lang/String;)Ljava/lang/String;
+#getNodeGroup(Ljava/lang/String;)Ljava/lang/String;
+#isOnSameRack(Lorg/apache/hadoop/net/Node;Lorg/apache/hadoop/net/Node;)Z
+#isOnSameNodeGroup(Lorg/apache/hadoop/net/Node;Lorg/apache/hadoop/net/Node;)Z
+#isNodeGroupAware()Z
+#add(Lorg/apache/hadoop/net/Node;)V
+#remove(Lorg/apache/hadoop/net/Node;)V
+#pseudoSortByDistance(Lorg/apache/hadoop/net/Node;[Lorg/apache/hadoop/net/Node;)V

+###org/apache/hadoop/security/JniBasedUnixGroupsMappingWithFallback
@1.2.0
+#<init>()V
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#cacheGroupsRefresh()V
+#cacheGroupsAdd(Ljava/util/List;)V

+###org/apache/hadoop/security/JniBasedUnixGroupsNetgroupMappingWithFallback
@1.2.0
+#<init>()V
+#getGroups(Ljava/lang/String;)Ljava/util/List;
+#cacheGroupsRefresh()V
+#cacheGroupsAdd(Ljava/util/List;)V

+###org/apache/hadoop/util/ClassUtil
@1.2.0
+#<init>()V
+#findContainingJar(Ljava/lang/Class;)Ljava/lang/String;

+###org/apache/hadoop/util/ServicePlugin
@1.2.0
+#start(Ljava/lang/Object;)V
+#stop()V
