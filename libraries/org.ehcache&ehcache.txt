
+###org/ehcache/Cache
@3.0.0.Alpha
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#clear()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#getStatistics()Lorg/ehcache/statistics/CacheStatistics;
@3.0.0.m2
-#getStatistics()Lorg/ehcache/statistics/CacheStatistics;
@3.7.1
+#iterator()Ljava/util/Iterator;

+###org/ehcache/Status
@3.0.0.Alpha
+#values()[Lorg/ehcache/Status;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/Status;

+###org/ehcache/PersistentCacheManager
@3.0.0.Alpha
+#toMaintenance()Lorg/ehcache/Maintainable;
+#destroyCache(Ljava/lang/String;)V
@3.0.0.rc3
+#destroy()V
-#toMaintenance()Lorg/ehcache/Maintainable;

+###org/ehcache/CacheManager
@3.0.0.Alpha
+#createCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/Cache;
+#getCache(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/Cache;
+#removeCache(Ljava/lang/String;)V
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;
@3.0.0.m3
+#getRuntimeConfiguration()Lorg/ehcache/config/RuntimeConfiguration;
@3.0.0
+#createCache(Ljava/lang/String;Lorg/ehcache/config/Builder;)Lorg/ehcache/Cache;
+#getRuntimeConfiguration()Lorg/ehcache/config/Configuration;
-#getRuntimeConfiguration()Lorg/ehcache/config/RuntimeConfiguration;

+###org/ehcache/Cache$Entry
@3.0.0.Alpha
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#getCreationTime(Ljava/util/concurrent/TimeUnit;)J
+#getLastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#getHitRate(Ljava/util/concurrent/TimeUnit;)F
@3.0.0.m5
-#getCreationTime(Ljava/util/concurrent/TimeUnit;)J
-#getLastAccessTime(Ljava/util/concurrent/TimeUnit;)J
-#getHitRate(Ljava/util/concurrent/TimeUnit;)F

+###org/ehcache/StandaloneCache
@3.0.0.Alpha
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;
@3.0.0.m2
-###org/ehcache/StandaloneCache

+###org/ehcache/Maintainable
@3.0.0.Alpha
+#create()V
+#destroy()V
@3.0.0.m1
+#close()V
@3.0.0.rc3
-###org/ehcache/Maintainable

+###org/ehcache/PersistentStandaloneCache
@3.0.0.Alpha
+#toMaintenance()Lorg/ehcache/Maintainable;
@3.0.0.m2
-###org/ehcache/PersistentStandaloneCache

+###org/ehcache/event/EventType
@3.0.0.Alpha
+#values()[Lorg/ehcache/event/EventType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/event/EventType;

+###org/ehcache/event/CacheEventListenerConfiguration
@3.0.0.Alpha
+#firingMode()Lorg/ehcache/event/EventFiring;
+#orderingMode()Lorg/ehcache/event/EventOrdering;
+#fireOn()Ljava/util/EnumSet;
@3.0.0
-###org/ehcache/event/CacheEventListenerConfiguration

+###org/ehcache/event/CacheEventListenerFactory
@3.0.0.Alpha
+#createEventListener(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/event/CacheEventListener;
+#releaseEventListener(Lorg/ehcache/event/CacheEventListener;)V
@3.0.0.m2
-###org/ehcache/event/CacheEventListenerFactory

+###org/ehcache/event/EventFiring
@3.0.0.Alpha
+#values()[Lorg/ehcache/event/EventFiring;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/event/EventFiring;

+###org/ehcache/event/EventOrdering
@3.0.0.Alpha
+#values()[Lorg/ehcache/event/EventOrdering;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/event/EventOrdering;
@3.0.0.m5
+#isOrdered()Z

+###org/ehcache/event/CacheEvent
@3.0.0.Alpha
+#getType()Lorg/ehcache/event/EventType;
+#getEntry()Lorg/ehcache/Cache$Entry;
+#getPreviousValue()Ljava/lang/Object;
+#getSource()Lorg/ehcache/Cache;[deprecated]
@3.0.0.m2
+#getKey()Ljava/lang/Object;
+#getNewValue()Ljava/lang/Object;
+#getOldValue()Ljava/lang/Object;
-#getEntry()Lorg/ehcache/Cache$Entry;
-#getPreviousValue()Ljava/lang/Object;

+###org/ehcache/event/CacheEventListener
@3.0.0.Alpha
+#onEvent(Lorg/ehcache/event/CacheEvent;)V

+###org/ehcache/resilience/ResilienceStrategy
@3.0.0.Alpha
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoaderException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
+#clearFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoaderException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)Ljava/util/Map;
@3.0.0.m1
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoaderException;)Ljava/lang/Object;
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoaderException;)Ljava/util/Map;
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)V
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)Ljava/util/Map;
@3.0.0.m4
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)Lorg/ehcache/Cache$Entry;
-#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
@3.0.0.rc1
-###org/ehcache/resilience/ResilienceStrategy

+###org/ehcache/statistics/BulkOps
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/BulkOps;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/BulkOps;
@3.0.0.rc2
-###org/ehcache/statistics/BulkOps

+###org/ehcache/statistics/CacheStatistics
@3.0.0.Alpha
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getAverageGetTime()F
+#getAveragePutTime()F
+#getAverageRemoveTime()F
+#getBulkMethodEntries()Ljava/util/concurrent/ConcurrentMap;
@3.0.0.m2
-###org/ehcache/statistics/CacheStatistics

+###org/ehcache/function/Predicate
@3.0.0.Alpha
+#test(Ljava/lang/Object;)Z
@3.0.0.m5
-###org/ehcache/function/Predicate

+###org/ehcache/function/NullaryFunction
@3.0.0.Alpha
+#apply()Ljava/lang/Object;
@3.0.0.rc1
-###org/ehcache/function/NullaryFunction

+###org/ehcache/function/Predicates
@3.0.0.Alpha
+#all()Lorg/ehcache/function/Predicate;
+#none()Lorg/ehcache/function/Predicate;
@3.0.0.m5
-###org/ehcache/function/Predicates

+###org/ehcache/function/Function
@3.0.0.Alpha
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.rc1
-###org/ehcache/function/Function

+###org/ehcache/function/BiFunction
@3.0.0.Alpha
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.rc1
-###org/ehcache/function/BiFunction

+###org/ehcache/exceptions/SerializerException
@3.0.0.Alpha
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0
-###org/ehcache/exceptions/SerializerException

+###org/ehcache/exceptions/BulkCacheLoadingException
@3.0.0.m1
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
+#getFailures()Ljava/util/Map;
+#getSuccesses()Ljava/util/Map;
@3.0.0
-###org/ehcache/exceptions/BulkCacheLoadingException

+###org/ehcache/exceptions/StateTransitionException
@3.0.0.Alpha
+#<init>(Ljava/lang/Exception;)V
@3.0.0.m2
+#<init>(Ljava/lang/Throwable;)V
-#<init>(Ljava/lang/Exception;)V
@3.0.0
-###org/ehcache/exceptions/StateTransitionException

+###org/ehcache/exceptions/BulkCacheWritingException
@3.0.0.m1
+#<init>(Ljava/util/Map;Ljava/util/Set;)V
+#getFailures()Ljava/util/Map;
+#getSuccesses()Ljava/util/Set;
@3.0.0
-###org/ehcache/exceptions/BulkCacheWritingException

+###org/ehcache/exceptions/CacheWritingException
@3.0.0.m1
@3.0.0.m2
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0
-###org/ehcache/exceptions/CacheWritingException

+###org/ehcache/exceptions/CacheLoadingException
@3.0.0.m1
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0
-###org/ehcache/exceptions/CacheLoadingException

+###org/ehcache/exceptions/CacheAccessException
@3.0.0.Alpha
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
@3.0.0.rc2
-###org/ehcache/exceptions/CacheAccessException

+###org/ehcache/spi/ServiceProvider
@3.0.0.m1
+#findServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
+#findService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
+#getService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
-#findServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#findService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
@3.0.0.rc2
+#getServicesOfType(Ljava/lang/Class;)Ljava/util/Collection;
@3.0.0
-###org/ehcache/spi/ServiceProvider

+###org/ehcache/spi/serialization/SerializationProvider
@3.0.0.Alpha
+#createSerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
@3.0.0.m2
+#createKeySerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
+#createValueSerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
-#createSerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
@3.0.0.m4
+#releaseSerializer(Lorg/ehcache/spi/serialization/Serializer;)V

+###org/ehcache/spi/serialization/Serializer
@3.0.0.Alpha
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z

+###org/ehcache/spi/loaderwriter/CacheLoaderWriter
@3.0.0.m1
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/lang/Iterable;)V

+###org/ehcache/spi/loaderwriter/CacheLoaderWriterFactory
@3.0.0.m1
+#createCacheLoaderWriter(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#releaseCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m2
-###org/ehcache/spi/loaderwriter/CacheLoaderWriterFactory

+###org/ehcache/spi/service/Service
@3.0.0.Alpha
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
@3.0.0.m1
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.0.0.m2
+#start(Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/spi/service/ServiceConfiguration
@3.0.0.Alpha
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Ljava/lang/Object;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#compatibleWith(Lorg/ehcache/spi/service/ServiceConfiguration;)Z

+###org/ehcache/config/ResourcePool
@3.0.0.m1
+#getType()Lorg/ehcache/config/ResourceType;
+#getSize()J
+#getUnit()Lorg/ehcache/config/ResourceUnit;
@3.0.0.m2
+#isPersistent()Z
@3.0.0.rc3
+#validateUpdate(Lorg/ehcache/config/ResourcePool;)V
-#getSize()J
-#getUnit()Lorg/ehcache/config/ResourceUnit;

+###org/ehcache/config/CacheConfiguration$PersistenceMode
@3.0.0.m1
+#values()[Lorg/ehcache/config/CacheConfiguration$PersistenceMode;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/CacheConfiguration$PersistenceMode;
@3.0.0.m2
-###org/ehcache/config/CacheConfiguration$PersistenceMode

+###org/ehcache/config/Eviction
@3.0.0.Alpha
+#<init>()V
+#all()Lorg/ehcache/config/EvictionVeto;
+#none()Lorg/ehcache/config/EvictionVeto;
@3.0.0.m4
-#all()Lorg/ehcache/config/EvictionVeto;
@3.0.0
+#noAdvice()Lorg/ehcache/config/EvictionAdvisor;
-#none()Lorg/ehcache/config/EvictionVeto;

+###org/ehcache/config/CacheRuntimeConfiguration
@3.0.0.Alpha
+#setCapacityConstraint(Ljava/lang/Comparable;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/Set;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#releaseAllEventListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
@3.0.0.m1
+#releaseAllEventListeners()V
-#releaseAllEventListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
@3.0.0.m2
+#updateResourcePools(Lorg/ehcache/config/ResourcePools;)V
-#setCapacityConstraint(Ljava/lang/Comparable;)V
-#releaseAllEventListeners()V
@3.0.0.m5
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Lorg/ehcache/event/EventType;[Lorg/ehcache/event/EventType;)V

+###org/ehcache/config/ResourceUnit
@3.0.0.m1
@3.0.0.m2
+#compareTo(JJLorg/ehcache/config/ResourceUnit;)I

+###org/ehcache/config/Eviction$Prioritizer
@3.0.0.Alpha
+#values()[Lorg/ehcache/config/Eviction$Prioritizer;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/Eviction$Prioritizer;
@3.0.0.m5
-###org/ehcache/config/Eviction$Prioritizer

+###org/ehcache/config/EvictionPrioritizer
@3.0.0.Alpha
@3.0.0.m5
-###org/ehcache/config/EvictionPrioritizer

+###org/ehcache/config/CacheConfiguration
@3.0.0.Alpha
+#getServiceConfigurations()Ljava/util/Collection;
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getCapacityConstraint()Ljava/lang/Comparable;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getEvictionPrioritizer()Lorg/ehcache/config/EvictionPrioritizer;
+#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
@3.0.0.m1
+#getPersistenceMode()Lorg/ehcache/config/CacheConfiguration$PersistenceMode;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
-#getCapacityConstraint()Ljava/lang/Comparable;
-#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
@3.0.0.m2
-#getPersistenceMode()Lorg/ehcache/config/CacheConfiguration$PersistenceMode;
@3.0.0.m5
-#getEvictionPrioritizer()Lorg/ehcache/config/EvictionPrioritizer;
@3.0.0
+#getEvictionAdvisor()Lorg/ehcache/config/EvictionAdvisor;
-#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
@3.5.0
*#getExpiry()Lorg/ehcache/expiry/Expiry;[deprecated]
+#getExpiryPolicy()Lorg/ehcache/expiry/ExpiryPolicy;
@3.8.0
+#derive()Lorg/ehcache/config/FluentCacheConfigurationBuilder;

+###org/ehcache/config/ResourceType
@3.0.0.m1
@3.0.0.m2
+#isPersistable()Z
@3.0.0.rc1
+#requiresSerialization()Z
@3.0.0.rc3
+#getResourcePoolClass()Ljava/lang/Class;
@3.1.0
+#getTierHeight()I

+###org/ehcache/config/ResourceType$Core
@3.0.0.m1
+#values()[Lorg/ehcache/config/ResourceType$Core;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/ResourceType$Core;
@3.0.0.m2
+#isPersistable()Z
+#toString()Ljava/lang/String;
@3.0.0.rc1
+#requiresSerialization()Z
@3.0.0.rc3
+#getResourcePoolClass()Ljava/lang/Class;
@3.1.0
+#getTierHeight()I

+###org/ehcache/config/EvictionVeto
@3.0.0.Alpha
@3.0.0.m5
+#vetoes(Ljava/lang/Object;Ljava/lang/Object;)Z
@3.0.0
-###org/ehcache/config/EvictionVeto

+###org/ehcache/config/ResourcePools
@3.0.0.m1
+#getPoolForResource(Lorg/ehcache/config/ResourceType;)Lorg/ehcache/config/ResourcePool;
@3.0.0.m2
+#getResourceTypeSet()Ljava/util/Set;
@3.0.0.m5
+#validateAndMerge(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/ResourcePools;

+###org/ehcache/config/units/MemoryUnit
@3.0.0.m1
+#values()[Lorg/ehcache/config/units/MemoryUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/units/MemoryUnit;
+#toBytes(J)J
@3.0.0.m2
+#convert(JLorg/ehcache/config/units/MemoryUnit;)J
+#toString()Ljava/lang/String;
+#compareTo(JJLorg/ehcache/config/ResourceUnit;)I

+###org/ehcache/config/units/EntryUnit
@3.0.0.m1
+#values()[Lorg/ehcache/config/units/EntryUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/units/EntryUnit;

+###org/ehcache/expiry/Expirations
@3.0.0.Alpha
+#noExpiration()Lorg/ehcache/expiry/Expiry;
+#timeToLiveExpiration(Lorg/ehcache/expiry/Duration;)Lorg/ehcache/expiry/Expiry;
+#timeToIdleExpiration(Lorg/ehcache/expiry/Duration;)Lorg/ehcache/expiry/Expiry;
@3.3.1
+#builder()Lorg/ehcache/expiry/Expirations$ExpiryBuilder;
@3.5.0
*#noExpiration()Lorg/ehcache/expiry/Expiry;[deprecated]
*#timeToLiveExpiration(Lorg/ehcache/expiry/Duration;)Lorg/ehcache/expiry/Expiry;[deprecated]
*#timeToIdleExpiration(Lorg/ehcache/expiry/Duration;)Lorg/ehcache/expiry/Expiry;[deprecated]
*#builder()Lorg/ehcache/expiry/Expirations$ExpiryBuilder;[deprecated]

+###org/ehcache/expiry/Duration
@3.0.0.Alpha
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#getAmount()J
+#getTimeUnit()Ljava/util/concurrent/TimeUnit;
+#isForever()Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@3.0.0
+#getLength()J
+#isInfinite()Z
-#getAmount()J
-#isForever()Z
@3.0.1
+#of(JLjava/util/concurrent/TimeUnit;)Lorg/ehcache/expiry/Duration;

+###org/ehcache/expiry/Expiry
@3.0.0.Alpha
+#getExpiryForCreation(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/expiry/Duration;
+#getExpiryForAccess(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/expiry/Duration;
+#getExpiryForUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/expiry/Duration;
@3.0.0.rc2
+#getExpiryForAccess(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;)Lorg/ehcache/expiry/Duration;
+#getExpiryForUpdate(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;Ljava/lang/Object;)Lorg/ehcache/expiry/Duration;
-#getExpiryForAccess(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/expiry/Duration;
-#getExpiryForUpdate(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/expiry/Duration;

+###org/ehcache/CacheManagerBuilder
@3.0.0.Alpha
+#<init>()V
+#build()Lorg/ehcache/CacheManager;
+#newCacheManager(Lorg/ehcache/config/Configuration;)Lorg/ehcache/CacheManager;
+#withCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/CacheManagerBuilder;
+#with(Lorg/ehcache/config/CacheManagerConfiguration;)Lorg/ehcache/CacheManagerBuilder;
+#using(Lorg/ehcache/spi/service/Service;)Lorg/ehcache/CacheManagerBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/CacheManagerBuilder;
+#newCacheManagerBuilder()Lorg/ehcache/CacheManagerBuilder;
@3.0.0.m1
+#using(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/CacheManagerBuilder;
+#persistence(Ljava/lang/String;)Lorg/ehcache/config/persistence/PersistenceConfiguration;
@3.0.0.m2
+#build(Z)Lorg/ehcache/CacheManager;
-#<init>()V
-#build()Lorg/ehcache/CacheManager;
@3.0.0.m3
+#using(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/CacheManagerBuilder;
-#using(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/CacheManagerBuilder;
@3.0.0.m5
-###org/ehcache/CacheManagerBuilder

+###org/ehcache/EhcacheManager
@3.0.0.Alpha
+#<init>(Lorg/ehcache/config/Configuration;)V
+#<init>(Lorg/ehcache/config/Configuration;Lorg/ehcache/spi/ServiceLocator;)V
+#getCache(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/Cache;
+#removeCache(Ljava/lang/String;)V
+#createCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/Cache;
+#registerListener(Lorg/ehcache/events/CacheManagerListener;)V
+#deregisterListener(Lorg/ehcache/events/CacheManagerListener;)V
+#init()V
+#getStatus()Lorg/ehcache/Status;
+#close()V
+#toMaintenance()Lorg/ehcache/Maintainable;
+#destroyCache(Ljava/lang/String;)V
@3.0.0.m1
+#<init>(Lorg/ehcache/config/Configuration;Lorg/ehcache/spi/ServiceLocator;Z)V
@3.0.0.m2
+#getStatisticsManager()Lorg/terracotta/statistics/StatisticsManager;
@3.0.0.m3
+#<init>(Lorg/ehcache/config/Configuration;Ljava/util/Collection;)V
+#<init>(Lorg/ehcache/config/Configuration;Ljava/util/Collection;Z)V
+#getRuntimeConfiguration()Lorg/ehcache/config/RuntimeConfiguration;
-#<init>(Lorg/ehcache/config/Configuration;Lorg/ehcache/spi/ServiceLocator;)V
-#<init>(Lorg/ehcache/config/Configuration;Lorg/ehcache/spi/ServiceLocator;Z)V
@3.0.0.m4
-#getStatisticsManager()Lorg/terracotta/statistics/StatisticsManager;
@3.0.0.m5
-###org/ehcache/EhcacheManager

+###org/ehcache/Ehcache
@3.0.0.Alpha
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;Lorg/ehcache/spi/writer/CacheWriter;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;Lorg/ehcache/spi/writer/CacheWriter;Ljava/util/concurrent/ScheduledExecutorService;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;Lorg/ehcache/spi/writer/CacheWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/util/concurrent/ScheduledExecutorService;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#clear()V
+#iterator()Ljava/util/Iterator;
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#init()V
+#close()V
+#toMaintenance()Lorg/ehcache/Maintainable;
+#getStatistics()Lorg/ehcache/statistics/CacheStatistics;
+#getStatus()Lorg/ehcache/Status;
@3.0.0.m1
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Ljava/util/concurrent/ScheduledExecutorService;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;Lorg/ehcache/spi/writer/CacheWriter;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;Lorg/ehcache/spi/writer/CacheWriter;Ljava/util/concurrent/ScheduledExecutorService;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loader/CacheLoader;Lorg/ehcache/spi/writer/CacheWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/util/concurrent/ScheduledExecutorService;)V
@3.0.0.m2
+#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Ljava/util/concurrent/ScheduledExecutorService;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/util/concurrent/ScheduledExecutorService;Lorg/slf4j/Logger;)V
-#toMaintenance()Lorg/ehcache/Maintainable;
-#getStatistics()Lorg/ehcache/statistics/CacheStatistics;
@3.0.0.m3
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Lorg/slf4j/Logger;)V
@3.0.0.m4
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Lorg/slf4j/Logger;)V
@3.0.0.m5
-###org/ehcache/Ehcache

+###org/ehcache/InternalStatus
@3.0.0.Alpha
+#values()[Lorg/ehcache/InternalStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/InternalStatus;
+#init()Lorg/ehcache/InternalStatus$Transition;
+#close()Lorg/ehcache/InternalStatus$Transition;
+#maintenance()Lorg/ehcache/InternalStatus$Transition;
+#toPublicStatus()Lorg/ehcache/Status;
+#initial()Lorg/ehcache/InternalStatus$Transition;
@3.0.0.m5
-###org/ehcache/InternalStatus

+###org/ehcache/Jsr107Cache
@3.0.0.Alpha
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#getAndRemove(Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#removeAll()V
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;Lorg/ehcache/function/NullaryFunction;Lorg/ehcache/function/NullaryFunction;)Ljava/lang/Object;
+#loadAll(Ljava/util/Set;ZLorg/ehcache/function/Function;)V
@3.0.0.m5
-###org/ehcache/Jsr107Cache

+###org/ehcache/StandaloneCacheBuilder
@3.0.0.Alpha
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#build()Lorg/ehcache/StandaloneCache;
+#with(Lorg/ehcache/config/StandaloneCacheConfiguration;)Lorg/ehcache/StandaloneCacheBuilder;
+#withCapacity(Ljava/lang/Comparable;)Lorg/ehcache/StandaloneCacheBuilder;
+#vetoEviction(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/StandaloneCacheBuilder;
+#prioritizeEviction(Lorg/ehcache/config/EvictionPrioritizer;)Lorg/ehcache/StandaloneCacheBuilder;
+#loadingWith(Lorg/ehcache/spi/loader/CacheLoader;)Lorg/ehcache/StandaloneCacheBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/StandaloneCacheBuilder;
+#withExpiry(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/StandaloneCacheBuilder;
+#writingWith(Lorg/ehcache/spi/writer/CacheWriter;)Lorg/ehcache/StandaloneCacheBuilder;
+#withSerializationProvider(Lorg/ehcache/spi/serialization/SerializationProvider;)Lorg/ehcache/StandaloneCacheBuilder;
+#withStatisticsExecutor(Ljava/util/concurrent/ScheduledExecutorService;)Lorg/ehcache/StandaloneCacheBuilder;
+#withCacheEvents(Lorg/ehcache/events/CacheEventNotificationService;)Lorg/ehcache/StandaloneCacheBuilder;
+#newCacheBuilder(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/StandaloneCacheBuilder;
@3.0.0.m1
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/slf4j/Logger;)V
+#loadingAndWritingWith(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/StandaloneCacheBuilder;
+#persistenceMode(Lorg/ehcache/config/CacheConfiguration$PersistenceMode;)Lorg/ehcache/StandaloneCacheBuilder;
+#withStatistics(Ljava/util/concurrent/ScheduledExecutorService;)Lorg/ehcache/StandaloneCacheBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/StandaloneCacheBuilder;
+#newCacheBuilder(Ljava/lang/Class;Ljava/lang/Class;Lorg/slf4j/Logger;)Lorg/ehcache/StandaloneCacheBuilder;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
-#withCapacity(Ljava/lang/Comparable;)Lorg/ehcache/StandaloneCacheBuilder;
-#loadingWith(Lorg/ehcache/spi/loader/CacheLoader;)Lorg/ehcache/StandaloneCacheBuilder;
-#writingWith(Lorg/ehcache/spi/writer/CacheWriter;)Lorg/ehcache/StandaloneCacheBuilder;
-#withSerializationProvider(Lorg/ehcache/spi/serialization/SerializationProvider;)Lorg/ehcache/StandaloneCacheBuilder;
-#withStatisticsExecutor(Ljava/util/concurrent/ScheduledExecutorService;)Lorg/ehcache/StandaloneCacheBuilder;
-#newCacheBuilder(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/StandaloneCacheBuilder;
@3.0.0.m2
-###org/ehcache/StandaloneCacheBuilder

+###org/ehcache/InternalStatus$Transition
@3.0.0.Alpha
+#get()Lorg/ehcache/InternalStatus;
+#succeeded()V
+#failed()V
+#from()Lorg/ehcache/InternalStatus;
+#to()Lorg/ehcache/InternalStatus;
+#done()Z
@3.0.0.m5
-###org/ehcache/InternalStatus$Transition

+###org/ehcache/resilience/RecoveryCache
@3.0.0.Alpha
+#obliterate()V
+#obliterate(Ljava/lang/Object;)V
+#obliterate(Ljava/lang/Iterable;)V
@3.0.0.m5
-###org/ehcache/resilience/RecoveryCache

+###org/ehcache/resilience/LoggingRobustResilienceStrategy
@3.0.0.Alpha
+#<init>(Lorg/ehcache/resilience/RecoveryCache;)V
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
@3.0.0.m4
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)Lorg/ehcache/Cache$Entry;
-#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
@3.0.0.m5
-###org/ehcache/resilience/LoggingRobustResilienceStrategy

+###org/ehcache/resilience/RobustResilienceStrategy
@3.0.0.Alpha
+#<init>(Lorg/ehcache/resilience/RecoveryCache;)V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoaderException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
+#clearFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoaderException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)Ljava/util/Map;
@3.0.0.m1
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoaderException;)Ljava/lang/Object;
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)V
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWriterException;)Z
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoaderException;)Ljava/util/Map;
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)V
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWriterException;)Ljava/util/Map;
@3.0.0.m4
-#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
@3.0.0.m5
-###org/ehcache/resilience/RobustResilienceStrategy

+###org/ehcache/statistics/CacheOperationOutcomes$ReplaceOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$ReplaceOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$ReplaceOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$ReplaceOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$RemoveOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$RemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$RemoveOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$RemoveOutcome

+###org/ehcache/statistics/CacheOperationOutcomes$GetOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$GetOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$GetOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$GetOutcome

+###org/ehcache/statistics/DisabledStatistics
@3.0.0.Alpha
+#<init>()V
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getAverageGetTime()F
+#getAveragePutTime()F
+#getAverageRemoveTime()F
+#getBulkMethodEntries()Ljava/util/concurrent/ConcurrentMap;
@3.0.0.m2
-###org/ehcache/statistics/DisabledStatistics

+###org/ehcache/statistics/CacheOperationOutcomes$RemoveOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$RemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$RemoveOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$RemoveOutcome

+###org/ehcache/statistics/CacheOperationOutcomes$EvictionOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$EvictionOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$EvictionOutcome;
@3.0.0.m2
-###org/ehcache/statistics/CacheOperationOutcomes$EvictionOutcome

+###org/ehcache/statistics/StoreOperationOutcomes
@3.0.0.Alpha
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes

+###org/ehcache/statistics/CoreStatistics
@3.0.0.Alpha
+#get()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#put()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#remove()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#condtionalRemove()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#putIfAbsent()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#replace()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#cacheEviction()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#allGetLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#putLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#removeLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#getWithLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#getNoLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#cacheLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
@3.0.0.m1
+#getWithLoadingLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#getNoLoadingLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#cacheLoadingLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
-#getWithLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
-#getNoLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
-#cacheLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
@3.0.0.m2
-###org/ehcache/statistics/CoreStatistics

+###org/ehcache/statistics/CacheOperationOutcomes$ConditionalRemoveOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$ConditionalRemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$ConditionalRemoveOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$ConditionalRemoveOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$GetOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$GetOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$GetOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$GetOutcome

+###org/ehcache/statistics/CoreStatistics$CountOperation
@3.0.0.Alpha
+#value(Ljava/lang/Object;)J
+#value([Ljava/lang/Object;)J
@3.0.0.m2
-###org/ehcache/statistics/CoreStatistics$CountOperation

+###org/ehcache/statistics/CoreStatisticsImpl
@3.0.0.Alpha
+#<init>(Lorg/ehcache/statistics/extended/ExtendedStatistics;)V
+#get()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#put()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#remove()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#condtionalRemove()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#cacheEviction()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#putIfAbsent()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#replace()Lorg/ehcache/statistics/CoreStatistics$CountOperation;
+#allGetLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#putLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#removeLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#getWithLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#getNoLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#cacheLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
@3.0.0.m1
+#getWithLoadingLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#getNoLoadingLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
+#cacheLoadingLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
-#getWithLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
-#getNoLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
-#cacheLoaderLatency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
@3.0.0.m2
-###org/ehcache/statistics/CoreStatisticsImpl

+###org/ehcache/statistics/CacheOperationOutcomes$CacheLoadingOutcome
@3.0.0.m1
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$CacheLoadingOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$CacheLoadingOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$CacheLoadingOutcome

+###org/ehcache/statistics/StatisticsGateway
@3.0.0.Alpha
+#<init>(Lorg/ehcache/Ehcache;Ljava/util/concurrent/ScheduledExecutorService;Ljava/util/concurrent/ConcurrentMap;)V
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getAverageGetTime()F
+#getAveragePutTime()F
+#getAverageRemoveTime()F
+#getBulkMethodEntries()Ljava/util/concurrent/ConcurrentMap;
@3.0.0.m2
-###org/ehcache/statistics/StatisticsGateway

+###org/ehcache/statistics/CacheOperationOutcomes$PutIfAbsentOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$PutIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$PutIfAbsentOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$PutIfAbsentOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$PutOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$PutOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$PutOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$PutOutcome

+###org/ehcache/statistics/CacheOperationOutcomes
@3.0.0.Alpha
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes

+###org/ehcache/statistics/CacheOperationOutcomes$PutOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$PutOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$PutOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$PutOutcome

+###org/ehcache/statistics/extended/ExtendedStatistics$Latency
@3.0.0.Alpha
+#minimum()Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
+#maximum()Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
+#average()Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
@3.0.0.m2
-###org/ehcache/statistics/extended/ExtendedStatistics$Latency

+###org/ehcache/statistics/extended/SemiExpiringStatistic
@3.0.0.Alpha
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJ)V
+#history()Ljava/util/List;
+#active()Z
+#value()Ljava/lang/Number;
@3.0.0.m2
-###org/ehcache/statistics/extended/SemiExpiringStatistic

+###org/ehcache/statistics/extended/RateImpl
@3.0.0.Alpha
+#<init>(Lorg/terracotta/statistics/SourceStatistic;Ljava/util/Set;JLjava/util/concurrent/ScheduledExecutorService;IJ)V
+#active()Z
+#value()Ljava/lang/Double;
+#history()Ljava/util/List;
+#value()Ljava/lang/Number;
@3.0.0.m1
+#<init>(Lorg/terracotta/statistics/OperationStatistic;Ljava/util/Set;JLjava/util/concurrent/ScheduledExecutorService;IJ)V
-#<init>(Lorg/terracotta/statistics/SourceStatistic;Ljava/util/Set;JLjava/util/concurrent/ScheduledExecutorService;IJ)V
@3.0.0.m2
-###org/ehcache/statistics/extended/RateImpl

+###org/ehcache/statistics/extended/ExtendedStatistics$Statistic
@3.0.0.Alpha
+#active()Z
+#value()Ljava/lang/Number;
+#history()Ljava/util/List;
@3.0.0.m2
-###org/ehcache/statistics/extended/ExtendedStatistics$Statistic

+###org/ehcache/statistics/extended/ExtendedStatistics$Operation
@3.0.0.Alpha
+#type()Ljava/lang/Class;
+#component(Ljava/lang/Enum;)Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#compound(Ljava/util/Set;)Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
+#setAlwaysOn(Z)V
+#isAlwaysOn()Z
+#setWindow(JLjava/util/concurrent/TimeUnit;)V
+#setHistory(IJLjava/util/concurrent/TimeUnit;)V
+#getWindowSize(Ljava/util/concurrent/TimeUnit;)J
+#getHistorySampleSize()I
+#getHistorySampleTime(Ljava/util/concurrent/TimeUnit;)J
@3.0.0.m2
-###org/ehcache/statistics/extended/ExtendedStatistics$Operation

+###org/ehcache/statistics/extended/ExtendedStatisticsImpl
@3.0.0.Alpha
+#<init>(Lorg/terracotta/statistics/StatisticsManager;Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;IJJ)V
+#setTimeToDisable(JLjava/util/concurrent/TimeUnit;)V
+#setAlwaysOn(Z)V
+#get()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#put()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#putIfAbsent()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#replace()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#remove()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#conditionalRemove()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#eviction()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#cacheHitRatio()Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
+#allGet()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#allMiss()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#allPut()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#allRemove()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#getWithLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#getNoLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#cacheLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#operations(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Set;
@3.0.0.m1
+#getWithLoading()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#getNoLoading()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#cacheLoading()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
-#getWithLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
-#getNoLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
-#cacheLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
@3.0.0.m2
-###org/ehcache/statistics/extended/ExtendedStatisticsImpl

+###org/ehcache/statistics/extended/ExtendedStatistics
@3.0.0.Alpha
+#setTimeToDisable(JLjava/util/concurrent/TimeUnit;)V
+#setAlwaysOn(Z)V
+#get()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#put()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#remove()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#conditionalRemove()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#eviction()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#putIfAbsent()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#replace()Lorg/ehcache/statistics/extended/ExtendedStatistics$Operation;
+#allGet()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#allMiss()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#allPut()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#allRemove()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#getWithLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#getNoLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#cacheLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#cacheHitRatio()Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
+#operations(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Set;
@3.0.0.m1
+#getWithLoading()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#getNoLoading()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
+#cacheLoading()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
-#getWithLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
-#getNoLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
-#cacheLoader()Lorg/ehcache/statistics/extended/ExtendedStatistics$Result;
@3.0.0.m2
-###org/ehcache/statistics/extended/ExtendedStatistics

+###org/ehcache/statistics/extended/ExtendedStatistics$Result
@3.0.0.Alpha
+#count()Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
+#rate()Lorg/ehcache/statistics/extended/ExtendedStatistics$Statistic;
+#latency()Lorg/ehcache/statistics/extended/ExtendedStatistics$Latency;
@3.0.0.m2
-###org/ehcache/statistics/extended/ExtendedStatistics$Result

+###org/ehcache/exceptions/ExceptionFactory
@3.0.0.Alpha
+#newCacheWriterException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheWriterException;
+#newCacheLoaderException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheLoaderException;
@3.0.0.m1
+#newCacheWritingException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheWritingException;
+#newCacheLoadingException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheLoadingException;
-#newCacheWriterException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheWriterException;
-#newCacheLoaderException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheLoaderException;
@3.0.0.m5
-###org/ehcache/exceptions/ExceptionFactory

+###org/ehcache/spi/ServiceLocator
@3.0.0.Alpha
+#<init>([Lorg/ehcache/spi/service/Service;)V
+#discoverService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#discoverService(Ljava/lang/Class;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
+#discoverService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
+#addService(Lorg/ehcache/spi/service/Service;)V
+#findService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#findService(Ljava/lang/Class;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
+#findAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;
+#findSingletonAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#startAllServices(Ljava/util/Map;)V
+#stopAllServices()V
@3.0.0.m1
+#findServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
+#getOrCreateServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
+#getService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#startAllServices()V
+#loadDependenciesOf(Ljava/lang/Class;)V
-#discoverService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
-#discoverService(Ljava/lang/Class;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#discoverService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#findServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#findService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
-#findService(Ljava/lang/Class;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#startAllServices(Ljava/util/Map;)V
@3.0.0.m3
+#getOrCreateServiceFor(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
+#knowsServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Z
-#getOrCreateServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/spi/ServiceLocator

+###org/ehcache/spi/cache/CacheProvider
@3.0.0.Alpha
+#createCache(Ljava/lang/Class;Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/Ehcache;
+#releaseCache(Lorg/ehcache/Ehcache;)V
@3.0.0.m5
-###org/ehcache/spi/cache/CacheProvider

+###org/ehcache/spi/cache/Store$Configuration
@3.0.0.Alpha
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getCapacityConstraint()Ljava/lang/Comparable;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getEvictionPrioritizer()Lorg/ehcache/config/EvictionPrioritizer;
+#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
@3.0.0.m1
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
-#getCapacityConstraint()Ljava/lang/Comparable;
-#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
@3.0.0.m3
+#getKeySerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getValueSerializer()Lorg/ehcache/spi/serialization/Serializer;
@3.0.0.m5
-###org/ehcache/spi/cache/Store$Configuration

+###org/ehcache/spi/cache/Store$Iterator
@3.0.0.Alpha
+#hasNext()Z
+#next()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/spi/cache/Store$Iterator

+###org/ehcache/spi/cache/Store$ValueHolder
@3.0.0.Alpha
+#value()Ljava/lang/Object;
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#hitRate(Ljava/util/concurrent/TimeUnit;)F
@3.0.0.m2
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
-#hitRate(Ljava/util/concurrent/TimeUnit;)F
@3.0.0.m5
-###org/ehcache/spi/cache/Store$ValueHolder

+###org/ehcache/spi/cache/Store$Provider
@3.0.0.Alpha
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
@3.0.0.m2
+#initStore(Lorg/ehcache/spi/cache/Store;)V
@3.0.0.m5
-###org/ehcache/spi/cache/Store$Provider

+###org/ehcache/spi/cache/Store$PersistentStoreConfiguration
@3.0.0.m1
+#getIdentifier()Ljava/lang/Object;
@3.0.0.m2
+#isPersistent()Z
@3.0.0.m3
-###org/ehcache/spi/cache/Store$PersistentStoreConfiguration

+###org/ehcache/spi/cache/Store
@3.0.0.Alpha
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#create()V
+#close()V
+#init()V
+#maintenance()V
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
@3.0.0.m2
-#destroy()V
-#create()V
-#close()V
-#init()V
-#maintenance()V
@3.0.0.m5
-###org/ehcache/spi/cache/Store

+###org/ehcache/spi/cache/tiering/CachingTier$Provider
@3.0.0.Alpha
+#createCachingTier(Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/spi/cache/tiering/CachingTier;)V
@3.0.0.m1
+#createCachingTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/CachingTier;
-#createCachingTier(Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/CachingTier;
@3.0.0.m2
+#initCachingTier(Lorg/ehcache/spi/cache/tiering/CachingTier;)V
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/CachingTier$Provider

+###org/ehcache/spi/cache/tiering/CachingTier
@3.0.0.Alpha
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)V
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getMaxCacheSize()J
@3.0.0.m1
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#clear()V
+#isExpired(Lorg/ehcache/spi/cache/Store$ValueHolder;)Z
+#getExpireTimeMillis(Lorg/ehcache/spi/cache/Store$ValueHolder;)J
+#setInvalidationListener(Lorg/ehcache/spi/cache/tiering/CachingTier$InvalidationListener;)V
+#destroy()V
+#create()V
+#close()V
+#init()V
+#maintenance()V
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)V
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#getMaxCacheSize()J
@3.0.0.m2
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
-#remove(Ljava/lang/Object;)V
-#isExpired(Lorg/ehcache/spi/cache/Store$ValueHolder;)Z
-#getExpireTimeMillis(Lorg/ehcache/spi/cache/Store$ValueHolder;)J
-#destroy()V
-#create()V
-#close()V
-#init()V
-#maintenance()V
@3.0.0.m4
-#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/CachingTier

+###org/ehcache/spi/cache/tiering/AuthoritativeTier
@3.0.0.m1
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;Lorg/ehcache/spi/cache/tiering/CachingTier;)Z
@3.0.0.m2
+#flush(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;)Z
-#flush(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;Lorg/ehcache/spi/cache/tiering/CachingTier;)Z
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/AuthoritativeTier

+###org/ehcache/spi/cache/tiering/AuthoritativeTier$Provider
@3.0.0.m1
+#createAuthoritativeTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
@3.0.0.m2
+#initAuthoritativeTier(Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/AuthoritativeTier$Provider

+###org/ehcache/spi/cache/tiering/CachingTier$InvalidationListener
@3.0.0.m1
+#onInvalidation(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;)V
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/CachingTier$InvalidationListener

+###org/ehcache/spi/service/ServiceFactory
@3.0.0.Alpha
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m2
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/spi/service/ServiceFactory

+###org/ehcache/spi/service/LocalPersistenceService
@3.0.0.m1
+#persistenceContext(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Ljava/lang/Object;
+#getDataFile(Ljava/lang/Object;)Ljava/io/File;[deprecated]
+#getIndexFile(Ljava/lang/Object;)Ljava/io/File;[deprecated]
@3.0.0.m2
+#createPersistenceContext(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$PersistentStoreConfiguration;)Lorg/ehcache/spi/service/FileBasedPersistenceContext;
+#destroyPersistenceContext(Ljava/lang/Object;)V
+#destroyAllPersistenceContext()V
-#persistenceContext(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Ljava/lang/Object;
-#getDataFile(Ljava/lang/Object;)Ljava/io/File;[deprecated]
-#getIndexFile(Ljava/lang/Object;)Ljava/io/File;[deprecated]
@3.0.0.m3
+#getOrCreatePersistenceSpace(Ljava/lang/String;)Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;
+#destroyPersistenceSpace(Ljava/lang/String;)V
+#createPersistenceContextWithin(Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/spi/service/FileBasedPersistenceContext;
+#destroyAllPersistenceSpaces()V
-#createPersistenceContext(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$PersistentStoreConfiguration;)Lorg/ehcache/spi/service/FileBasedPersistenceContext;
-#destroyPersistenceContext(Ljava/lang/Object;)V
-#destroyAllPersistenceContext()V
@3.0.0.m5
-###org/ehcache/spi/service/LocalPersistenceService

+###org/ehcache/spi/service/ThreadPoolsService
@3.0.0.Alpha
+#getStatisticsExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#getEventsOrderedDeliveryExecutor()Ljava/util/concurrent/ExecutorService;
+#getEventsUnorderedDeliveryExecutor()Ljava/util/concurrent/ExecutorService;
@3.0.0.m4
-###org/ehcache/spi/service/ThreadPoolsService

+###org/ehcache/spi/service/ThreadPoolsServiceFactory
@3.0.0.Alpha
@3.0.0.m4
-###org/ehcache/spi/service/ThreadPoolsServiceFactory

+###org/ehcache/events/CacheEventNotificationService
@3.0.0.Alpha
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#hasListeners()Z
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#releaseAllListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
@3.0.0.m1
+#releaseAllListeners()V
-#releaseAllListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
@3.0.0.m2
+#setStoreListenerSource(Lorg/ehcache/Cache;)V
@3.0.0.m4
-###org/ehcache/events/CacheEventNotificationService

+###org/ehcache/events/StoreEventListener
@3.0.0.Alpha
+#onEviction(Lorg/ehcache/Cache$Entry;)V
+#onExpiration(Lorg/ehcache/Cache$Entry;)V
@3.0.0.m2
+#onEviction(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;)V
+#onExpiration(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;)V
-#onEviction(Lorg/ehcache/Cache$Entry;)V
-#onExpiration(Lorg/ehcache/Cache$Entry;)V
@3.0.0.m5
-###org/ehcache/events/StoreEventListener

+###org/ehcache/events/CacheEvents
@3.0.0.Alpha
+#expiry(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#eviction(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#creation(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#removal(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#update(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#nullStoreEventListener()Lorg/ehcache/events/StoreEventListener;
@3.0.0.m2
+#expiry(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#eviction(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#creation(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#removal(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
-#expiry(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
-#eviction(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
-#creation(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
-#removal(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
-#update(Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache$Entry;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
@3.0.0.m5
-###org/ehcache/events/CacheEvents

+###org/ehcache/events/CacheManagerListener
@3.0.0.Alpha
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V
@3.0.0.m5
-###org/ehcache/events/CacheManagerListener

+###org/ehcache/events/DisabledCacheEventNotificationService
@3.0.0.Alpha
+#<init>()V
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#hasListeners()Z
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#releaseAllListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
@3.0.0.m1
+#releaseAllListeners()V
-#releaseAllListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
@3.0.0.m2
+#setStoreListenerSource(Lorg/ehcache/Cache;)V
@3.0.0.m5
-###org/ehcache/events/DisabledCacheEventNotificationService

+###org/ehcache/events/StateChangeListener
@3.0.0.Alpha
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V
@3.0.0.m5
-###org/ehcache/events/StateChangeListener

+###org/ehcache/events/CacheEventNotificationServiceImpl
@3.0.0.Alpha
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#releaseAllListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#hasListeners()Z
@3.0.0.m1
+#releaseAllListeners()V
-#releaseAllListeners(Lorg/ehcache/event/CacheEventListenerFactory;)V
@3.0.0.m2
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/internal/TimeSource;)V
+#setStoreListenerSource(Lorg/ehcache/Cache;)V
-#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;)V
@3.0.0.m4
-###org/ehcache/events/CacheEventNotificationServiceImpl

+###org/ehcache/config/CacheManagerConfiguration
@3.0.0.Alpha
+#builder(Lorg/ehcache/CacheManagerBuilder;)Lorg/ehcache/CacheManagerBuilder;
@3.0.0.m5
-###org/ehcache/config/CacheManagerConfiguration

+###org/ehcache/config/CacheConfigurationBuilder
@3.0.0.Alpha
+#newCacheConfigurationBuilder()Lorg/ehcache/config/CacheConfigurationBuilder;
+#addServiceConfig(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#maxEntriesInCache(J)Lorg/ehcache/config/CacheConfigurationBuilder;
+#usingEvictionPrioritizer(Lorg/ehcache/config/EvictionPrioritizer;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#evitionVeto(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#removeServiceConfig(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#clearAllServiceConfig()Lorg/ehcache/config/CacheConfigurationBuilder;
+#getExistingServiceConfiguration(Ljava/lang/Class;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#buildConfig(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/CacheConfiguration;
+#buildConfig(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;)Lorg/ehcache/config/CacheConfiguration;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#withExpiry(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#withSerializationProvider(Lorg/ehcache/spi/serialization/SerializationProvider;)Lorg/ehcache/config/CacheConfigurationBuilder;
@3.0.0.m1
+#withResourcePools(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#persistenceMode(Lorg/ehcache/config/CacheConfiguration$PersistenceMode;)Lorg/ehcache/config/CacheConfigurationBuilder;
-#maxEntriesInCache(J)Lorg/ehcache/config/CacheConfigurationBuilder;
-#withSerializationProvider(Lorg/ehcache/spi/serialization/SerializationProvider;)Lorg/ehcache/config/CacheConfigurationBuilder;
@3.0.0.m2
+#add(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#add(Lorg/ehcache/config/Builder;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#evictionVeto(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#remove(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePoolsBuilder;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#hasDefaultExpiry()Z
-#addServiceConfig(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/CacheConfigurationBuilder;
-#evitionVeto(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/config/CacheConfigurationBuilder;
-#removeServiceConfig(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/CacheConfigurationBuilder;
-#persistenceMode(Lorg/ehcache/config/CacheConfiguration$PersistenceMode;)Lorg/ehcache/config/CacheConfigurationBuilder;
@3.0.0.m5
-###org/ehcache/config/CacheConfigurationBuilder

+###org/ehcache/config/ResourcePoolsBuilder
@3.0.0.m1
+#newResourcePoolsBuilder()Lorg/ehcache/config/ResourcePoolsBuilder;
+#with(Lorg/ehcache/config/ResourceType;JLorg/ehcache/config/ResourceUnit;)Lorg/ehcache/config/ResourcePoolsBuilder;
+#heap(JLorg/ehcache/config/ResourceUnit;)Lorg/ehcache/config/ResourcePoolsBuilder;
+#offheap(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/ResourcePoolsBuilder;
+#disk(JLorg/ehcache/config/ResourceUnit;)Lorg/ehcache/config/ResourcePoolsBuilder;
+#build()Lorg/ehcache/config/ResourcePools;
@3.0.0.m2
+#newResourcePoolsBuilder(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/ResourcePoolsBuilder;
+#with(Lorg/ehcache/config/ResourceType;JLorg/ehcache/config/ResourceUnit;Z)Lorg/ehcache/config/ResourcePoolsBuilder;
+#disk(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/ResourcePoolsBuilder;
+#disk(JLorg/ehcache/config/units/MemoryUnit;Z)Lorg/ehcache/config/ResourcePoolsBuilder;
-#with(Lorg/ehcache/config/ResourceType;JLorg/ehcache/config/ResourceUnit;)Lorg/ehcache/config/ResourcePoolsBuilder;
-#disk(JLorg/ehcache/config/ResourceUnit;)Lorg/ehcache/config/ResourcePoolsBuilder;
@3.0.0.m5
-###org/ehcache/config/ResourcePoolsBuilder

+###org/ehcache/config/ConfigurationBuilder
@3.0.0.Alpha
+#newConfigurationBuilder()Lorg/ehcache/config/ConfigurationBuilder;
+#<init>()V
+#build()Lorg/ehcache/config/Configuration;
+#addCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/config/ConfigurationBuilder;
+#removeCache(Ljava/lang/String;)Lorg/ehcache/config/ConfigurationBuilder;
+#addService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/ConfigurationBuilder;
+#removeService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/ConfigurationBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/ConfigurationBuilder;
@3.0.0.m2
-#<init>()V
@3.0.0.m3
+#addService(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/ConfigurationBuilder;
+#removeService(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/ConfigurationBuilder;
-#addService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/ConfigurationBuilder;
-#removeService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/ConfigurationBuilder;
@3.0.0.m5
-###org/ehcache/config/ConfigurationBuilder

+###org/ehcache/config/Configuration
@3.0.0.Alpha
+#getCacheConfigurations()Ljava/util/Map;
+#getServiceConfigurations()Ljava/util/Collection;
+#getClassLoader()Ljava/lang/ClassLoader;
@3.0.0.m3
+#getServiceCreationConfigurations()Ljava/util/Collection;
-#getServiceConfigurations()Ljava/util/Collection;
@3.8.0
+#derive()Lorg/ehcache/config/FluentConfigurationBuilder;

+###org/ehcache/config/DefaultConfiguration
@3.0.0.Alpha
+#<init>(Ljava/util/Map;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getCacheConfigurations()Ljava/util/Map;
+#getServiceConfigurations()Ljava/util/Collection;
+#getClassLoader()Ljava/lang/ClassLoader;
@3.0.0.m1
+#<init>()V
@3.0.0.m2
+#<init>(Ljava/lang/ClassLoader;)V
-#<init>()V
@3.0.0.m3
+#<init>(Lorg/ehcache/config/Configuration;)V
+#<init>(Ljava/util/Map;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceCreationConfiguration;)V
+#getServiceCreationConfigurations()Ljava/util/Collection;
-#<init>(Ljava/util/Map;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
-#getServiceConfigurations()Ljava/util/Collection;
@3.0.0.m4
+#addCacheConfiguration(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)V
+#removeCacheConfiguration(Ljava/lang/String;)V
+#replaceCacheConfiguration(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/config/CacheRuntimeConfiguration;)V
@3.0.0.m5
-###org/ehcache/config/DefaultConfiguration

+###org/ehcache/config/StoreConfigurationImpl
@3.0.0.Alpha
+#<init>(Lorg/ehcache/config/CacheConfiguration;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Comparable;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/spi/serialization/SerializationProvider;)V
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getCapacityConstraint()Ljava/lang/Comparable;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getEvictionPrioritizer()Lorg/ehcache/config/EvictionPrioritizer;
+#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
@3.0.0.m1
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;)V
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Comparable;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/spi/serialization/SerializationProvider;)V
-#getCapacityConstraint()Ljava/lang/Comparable;
-#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
@3.0.0.m3
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#getKeySerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getValueSerializer()Lorg/ehcache/spi/serialization/Serializer;
-#<init>(Lorg/ehcache/config/CacheConfiguration;)V
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;)V
@3.0.0.m5
-###org/ehcache/config/StoreConfigurationImpl

+###org/ehcache/config/BaseCacheConfiguration
@3.0.0.Alpha
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Comparable;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/spi/serialization/SerializationProvider;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getServiceConfigurations()Ljava/util/Collection;
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getCapacityConstraint()Ljava/lang/Comparable;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getEvictionPrioritizer()Lorg/ehcache/config/EvictionPrioritizer;
+#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
@3.0.0.m1
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/CacheConfiguration$PersistenceMode;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getPersistenceMode()Lorg/ehcache/config/CacheConfiguration$PersistenceMode;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Comparable;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/spi/serialization/SerializationProvider;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
-#getCapacityConstraint()Ljava/lang/Comparable;
-#getSerializationProvider()Lorg/ehcache/spi/serialization/SerializationProvider;
@3.0.0.m2
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/config/EvictionPrioritizer;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/CacheConfiguration$PersistenceMode;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
-#getPersistenceMode()Lorg/ehcache/config/CacheConfiguration$PersistenceMode;
@3.0.0.m5
-###org/ehcache/config/BaseCacheConfiguration

+###org/ehcache/config/StandaloneCacheConfiguration
@3.0.0.Alpha
+#builder(Lorg/ehcache/StandaloneCacheBuilder;)Lorg/ehcache/StandaloneCacheBuilder;
@3.0.0.m2
-###org/ehcache/config/StandaloneCacheConfiguration

+###org/ehcache/config/persistence/PersistentStoreConfigurationImpl
@3.0.0.m1
+#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Ljava/lang/String;)V
+#getIdentifier()Ljava/lang/String;
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getEvictionPrioritizer()Lorg/ehcache/config/EvictionPrioritizer;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#getIdentifier()Ljava/lang/Object;
@3.0.0.m2
+#isPersistent()Z
@3.0.0.m3
-###org/ehcache/config/persistence/PersistentStoreConfigurationImpl

+###org/ehcache/config/persistence/PersistenceConfiguration
@3.0.0.m1
+#<init>(Ljava/io/File;)V
+#getRootDirectory()Ljava/io/File;
+#getServiceType()Ljava/lang/Class;
+#builder(Lorg/ehcache/CacheManagerBuilder;)Lorg/ehcache/CacheManagerBuilder;
@3.0.0.m2
-#<init>(Ljava/io/File;)V
-#getServiceType()Ljava/lang/Class;
-#builder(Lorg/ehcache/CacheManagerBuilder;)Lorg/ehcache/CacheManagerBuilder;
@3.0.0.m5
-###org/ehcache/config/persistence/PersistenceConfiguration

+###org/ehcache/util/ThreadPoolUtil
@3.0.0.Alpha
+#<init>()V
+#createStatisticsExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#createEventsOrderedDeliveryExecutor()Ljava/util/concurrent/ExecutorService;
+#createEventsUnorderedDeliveryExecutor()Ljava/util/concurrent/ExecutorService;
@3.0.0.m4
-###org/ehcache/util/ThreadPoolUtil

+###org/ehcache/util/ClassLoading
@3.0.0.Alpha
+#<init>()V
+#getDefaultClassLoader()Ljava/lang/ClassLoader;
+#libraryServiceLoaderFor(Ljava/lang/Class;)Ljava/util/ServiceLoader;
@3.0.0.m5
-###org/ehcache/util/ClassLoading

+###org/ehcache/util/KeysIterable
@3.0.0.Alpha
+#keysOf(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#iterator()Ljava/util/Iterator;
@3.0.0.m5
-###org/ehcache/util/KeysIterable

+###org/ehcache/internal/TimeSource
@3.0.0.Alpha
+#getTimeMillis()J
@3.0.0.m5
-###org/ehcache/internal/TimeSource

+###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterFactory
@3.0.0.m1
+#<init>()V
+#createCacheLoaderWriter(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#releaseCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m2
-###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterFactory

+###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterFactoryProvider
@3.0.0.m1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterFactory;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
-###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterFactoryProvider

+###org/ehcache/config/serializer/DefaultSerializationProviderConfiguration
@3.0.0.m1
+#<init>()V
+#getServiceType()Ljava/lang/Class;
+#addSerializer(Ljava/lang/String;Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration$TypeSerializerConfig;)Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration;
+#contains(Ljava/lang/String;)Z
+#getTypeSerializerConfig(Ljava/lang/String;)Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration$TypeSerializerConfig;
@3.0.0.m2
+#addSerializerFor(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration;
-#addSerializer(Ljava/lang/String;Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration$TypeSerializerConfig;)Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration;
-#contains(Ljava/lang/String;)Z
-#getTypeSerializerConfig(Ljava/lang/String;)Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration$TypeSerializerConfig;
@3.0.0.m3
+#getTransientSerializers()Ljava/util/Map;
+#getPersistentSerializers()Ljava/util/Map;
@3.0.0.m5
-###org/ehcache/config/serializer/DefaultSerializationProviderConfiguration

+###org/ehcache/config/serializer/DefaultSerializationProviderConfiguration$TypeSerializerConfig
@3.0.0.m1
+#<init>()V
+#getSerializer()Ljava/lang/String;
+#setSerializer(Ljava/lang/String;)V
+#getCacheTypeSerializerMapping()Ljava/util/Map;
+#addTypeSerializerMapping(Ljava/lang/String;Ljava/lang/String;)V
@3.0.0.m2
-###org/ehcache/config/serializer/DefaultSerializationProviderConfiguration$TypeSerializerConfig

+###org/ehcache/config/loaderwriter/DefaultCacheLoaderWriterConfiguration
@3.0.0.m1
+#<init>(Ljava/lang/Class;)V
+#getServiceType()Ljava/lang/Class;
@3.0.0.m3
+#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/Class;)V
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m5
-###org/ehcache/config/loaderwriter/DefaultCacheLoaderWriterConfiguration

+###org/ehcache/config/loaderwriter/DefaultCacheLoaderWriterFactoryConfiguration
@3.0.0.m1
+#<init>()V
+#getServiceType()Ljava/lang/Class;
+#addLoaderFor(Ljava/lang/String;Ljava/lang/Class;)Lorg/ehcache/config/loaderwriter/DefaultCacheLoaderWriterFactoryConfiguration;
@3.0.0.m2
-###org/ehcache/config/loaderwriter/DefaultCacheLoaderWriterFactoryConfiguration

+###org/ehcache/internal/SystemTimeSource
@3.0.0.Alpha
+#getTimeMillis()J
@3.0.0.m5
-###org/ehcache/internal/SystemTimeSource

+###org/ehcache/internal/TimeSourceConfiguration
@3.0.0.Alpha
+#<init>(Lorg/ehcache/internal/TimeSource;)V
+#getServiceType()Ljava/lang/Class;
+#getTimeSource()Lorg/ehcache/internal/TimeSource;
@3.0.0.m5
-###org/ehcache/internal/TimeSourceConfiguration

+###org/ehcache/internal/EhcacheProvider
@3.0.0.Alpha
+#<init>(Lorg/ehcache/spi/ServiceLocator;)V
+#createCache(Ljava/lang/Class;Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/Ehcache;
+#releaseCache(Lorg/ehcache/Ehcache;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
@3.0.0.m1
+#<init>()V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#<init>(Lorg/ehcache/spi/ServiceLocator;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.0.0.m2
-###org/ehcache/internal/EhcacheProvider

+###org/ehcache/internal/HeapResourceCacheConfiguration
@3.0.0.Alpha
+#<init>(J)V
+#getMaxOnHeapEntryCount()J
+#getServiceType()Ljava/lang/Class;
@3.0.0.m2
-###org/ehcache/internal/HeapResourceCacheConfiguration

+###org/ehcache/internal/HeapCache
@3.0.0.Alpha
+#<init>()V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
@3.0.0.m1
+#<init>(Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/slf4j/Logger;)V
-#<init>()V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;)V
@3.0.0.m2
-###org/ehcache/internal/HeapCache

+###org/ehcache/internal/HeapResourceFactory
@3.0.0.Alpha
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/EhcacheProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
-###org/ehcache/internal/HeapResourceFactory

+###org/ehcache/internal/serialization/JavaSerializationProvider
@3.0.0.Alpha
+#<init>()V
+#createSerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
@3.0.0.m1
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.0.0.m2
-###org/ehcache/internal/serialization/JavaSerializationProvider

+###org/ehcache/internal/serialization/JavaSerializer
@3.0.0.Alpha
+#<init>(Ljava/lang/ClassLoader;)V
+#serialize(Ljava/io/Serializable;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/io/Serializable;
+#equals(Ljava/io/Serializable;Ljava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.0.0.m1
-#serialize(Ljava/io/Serializable;)Ljava/nio/ByteBuffer;
-#read(Ljava/nio/ByteBuffer;)Ljava/io/Serializable;
-#equals(Ljava/io/Serializable;Ljava/nio/ByteBuffer;)Z
@3.0.0.m3
-###org/ehcache/internal/serialization/JavaSerializer

+###org/ehcache/internal/serialization/JavaSerializationProviderFactory
@3.0.0.Alpha
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/serialization/SerializationProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
-###org/ehcache/internal/serialization/JavaSerializationProviderFactory

+###org/ehcache/internal/executor/DefaultThreadPoolsServiceFactory
@3.0.0.Alpha
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/ThreadPoolsService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/ThreadPoolsService;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/ThreadPoolsService;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/ThreadPoolsService;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/ThreadPoolsService;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m4
-###org/ehcache/internal/executor/DefaultThreadPoolsServiceFactory

+###org/ehcache/internal/executor/DefaultThreadPoolsService
@3.0.0.Alpha
+#<init>()V
+#getStatisticsExecutor()Ljava/util/concurrent/ScheduledExecutorService;
+#getEventsOrderedDeliveryExecutor()Ljava/util/concurrent/ExecutorService;
+#getEventsUnorderedDeliveryExecutor()Ljava/util/concurrent/ExecutorService;
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
@3.0.0.m1
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.0.0.m2
+#start(Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0.m4
-###org/ehcache/internal/executor/DefaultThreadPoolsService

+###org/ehcache/internal/concurrent/JSR166Helper$DoubleBinaryOperator
@3.0.0.Alpha
+#applyAsDouble(DD)J
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$DoubleBinaryOperator

+###org/ehcache/internal/concurrent/JSR166Helper$Spliterator$OfInt
@3.0.0.Alpha
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$Spliterator$OfInt

+###org/ehcache/internal/concurrent/JSR166Helper$ToLongFunction
@3.0.0.Alpha
+#applyAsLong(Ljava/lang/Object;)J
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$ToLongFunction

+###org/ehcache/internal/concurrent/ConcurrentHashMap
@3.0.0.Alpha
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Map;)V
+#<init>(IF)V
+#<init>(IFI)V
+#size()I
+#isEmpty()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#keySet()Lorg/ehcache/internal/concurrent/ConcurrentHashMap$KeySetView;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#forEach(Lorg/ehcache/internal/concurrent/JSR166Helper$BiConsumer;)V
+#replaceAll(Lorg/ehcache/function/BiFunction;)V
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z[deprecated]
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
+#mappingCount()J
+#newKeySet()Lorg/ehcache/internal/concurrent/ConcurrentHashMap$KeySetView;
+#newKeySet(I)Lorg/ehcache/internal/concurrent/ConcurrentHashMap$KeySetView;
+#keySet(Ljava/lang/Object;)Lorg/ehcache/internal/concurrent/ConcurrentHashMap$KeySetView;
+#forEach(JLorg/ehcache/internal/concurrent/JSR166Helper$BiConsumer;)V
+#forEach(JLorg/ehcache/function/BiFunction;Lorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#search(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduce(JLorg/ehcache/function/BiFunction;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceToDouble(JLorg/ehcache/internal/concurrent/JSR166Helper$ToDoubleBiFunction;DLorg/ehcache/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceToLong(JLorg/ehcache/internal/concurrent/JSR166Helper$ToLongBiFunction;JLorg/ehcache/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceToInt(JLorg/ehcache/internal/concurrent/JSR166Helper$ToIntBiFunction;ILorg/ehcache/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#forEachKey(JLorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#forEachKey(JLorg/ehcache/function/Function;Lorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#searchKeys(JLorg/ehcache/function/Function;)Ljava/lang/Object;
+#reduceKeys(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceKeys(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceKeysToDouble(JLorg/ehcache/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceKeysToLong(JLorg/ehcache/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceKeysToInt(JLorg/ehcache/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#forEachValue(JLorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#forEachValue(JLorg/ehcache/function/Function;Lorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#searchValues(JLorg/ehcache/function/Function;)Ljava/lang/Object;
+#reduceValues(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceValues(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceValuesToDouble(JLorg/ehcache/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceValuesToLong(JLorg/ehcache/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceValuesToInt(JLorg/ehcache/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#forEachEntry(JLorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#forEachEntry(JLorg/ehcache/function/Function;Lorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#searchEntries(JLorg/ehcache/function/Function;)Ljava/lang/Object;
+#reduceEntries(JLorg/ehcache/function/BiFunction;)Ljava/util/Map$Entry;
+#reduceEntries(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceEntriesToDouble(JLorg/ehcache/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceEntriesToLong(JLorg/ehcache/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceEntriesToInt(JLorg/ehcache/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#getRandomValues(Ljava/util/Random;ILorg/ehcache/function/Predicate;)Ljava/util/Set;
+#keySet()Ljava/util/Set;
@3.0.0.m5
-###org/ehcache/internal/concurrent/ConcurrentHashMap

+###org/ehcache/internal/concurrent/JSR166Helper$ToLongBiFunction
@3.0.0.Alpha
+#applyAsLong(Ljava/lang/Object;Ljava/lang/Object;)J
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$ToLongBiFunction

+###org/ehcache/internal/concurrent/JSR166Helper$ToIntFunction
@3.0.0.Alpha
+#applyAsInt(Ljava/lang/Object;)I
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$ToIntFunction

+###org/ehcache/internal/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory
@3.0.0.Alpha
+#newThread(Lorg/ehcache/internal/concurrent/ForkJoinPool;)Lorg/ehcache/internal/concurrent/ForkJoinWorkerThread;
@3.0.0.m5
-###org/ehcache/internal/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory

+###org/ehcache/internal/concurrent/JSR166Helper$Spliterator
@3.0.0.Alpha
+#trySplit()Lorg/ehcache/internal/concurrent/JSR166Helper$Spliterator;
+#estimateSize()J
+#forEachRemaining(Lorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#tryAdvance(Lorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)Z
+#characteristics()I
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$Spliterator

+###org/ehcache/internal/concurrent/JSR166Helper$IntBinaryOperator
@3.0.0.Alpha
+#applyAsInt(II)I
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$IntBinaryOperator

+###org/ehcache/internal/concurrent/JSR166Helper$Spliterator$OfDouble
@3.0.0.Alpha
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$Spliterator$OfDouble

+###org/ehcache/internal/concurrent/ForkJoinPool$ManagedBlocker
@3.0.0.Alpha
+#block()Z
+#isReleasable()Z
@3.0.0.m5
-###org/ehcache/internal/concurrent/ForkJoinPool$ManagedBlocker

+###org/ehcache/internal/concurrent/JSR166Helper$ToDoubleFunction
@3.0.0.Alpha
+#applyAsDouble(Ljava/lang/Object;)D
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$ToDoubleFunction

+###org/ehcache/internal/concurrent/JSR166Helper$ToDoubleBiFunction
@3.0.0.Alpha
+#applyAsDouble(Ljava/lang/Object;Ljava/lang/Object;)D
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$ToDoubleBiFunction

+###org/ehcache/internal/concurrent/JSR166Helper
@3.0.0.Alpha
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper

+###org/ehcache/internal/concurrent/JSR166Helper$LongBinaryOperator
@3.0.0.Alpha
+#applyAsLong(JJ)J
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$LongBinaryOperator

+###org/ehcache/internal/concurrent/JSR166Helper$ToIntBiFunction
@3.0.0.Alpha
+#applyAsInt(Ljava/lang/Object;Ljava/lang/Object;)I
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$ToIntBiFunction

+###org/ehcache/internal/concurrent/JSR166Helper$Consumer
@3.0.0.Alpha
+#accept(Ljava/lang/Object;)V
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$Consumer

+###org/ehcache/internal/concurrent/JSR166Helper$BiConsumer
@3.0.0.Alpha
+#accept(Ljava/lang/Object;Ljava/lang/Object;)V
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$BiConsumer

+###org/ehcache/internal/concurrent/ConcurrentHashMap$KeySetView
@3.0.0.Alpha
+#getMappedValue()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#_spliterator()Lorg/ehcache/internal/concurrent/JSR166Helper$Spliterator;
+#forEach(Lorg/ehcache/internal/concurrent/JSR166Helper$Consumer;)V
+#getMap()Lorg/ehcache/internal/concurrent/ConcurrentHashMap;
@3.0.0.m5
-###org/ehcache/internal/concurrent/ConcurrentHashMap$KeySetView

+###org/ehcache/internal/concurrent/JSR166Helper$Spliterator$OfLong
@3.0.0.Alpha
@3.0.0.m5
-###org/ehcache/internal/concurrent/JSR166Helper$Spliterator$OfLong

+###org/ehcache/internal/persistence/DefaultLocalPersistenceServiceFactory
@3.0.0.m1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/persistence/DefaultLocalPersistenceService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/persistence/DefaultLocalPersistenceService;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/persistence/DefaultLocalPersistenceService;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/persistence/DefaultLocalPersistenceService;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/persistence/DefaultLocalPersistenceService;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/persistence/DefaultLocalPersistenceServiceFactory

+###org/ehcache/internal/persistence/DefaultLocalPersistenceService
@3.0.0.m1
+#<init>(Lorg/ehcache/config/persistence/PersistenceConfiguration;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#persistenceContext(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Ljava/lang/Object;
+#getDataFile(Ljava/lang/Object;)Ljava/io/File;
+#getIndexFile(Ljava/lang/Object;)Ljava/io/File;
@3.0.0.m2
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#createPersistenceContext(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$PersistentStoreConfiguration;)Lorg/ehcache/spi/service/FileBasedPersistenceContext;
+#destroyPersistenceContext(Ljava/lang/Object;)V
+#destroyAllPersistenceContext()V
+#getDirectoryFor(Ljava/lang/String;)Ljava/io/File;
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#persistenceContext(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Ljava/lang/Object;
-#getDataFile(Ljava/lang/Object;)Ljava/io/File;
-#getIndexFile(Ljava/lang/Object;)Ljava/io/File;
@3.0.0.m3
+#getOrCreatePersistenceSpace(Ljava/lang/String;)Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;
+#destroyPersistenceSpace(Ljava/lang/String;)V
+#destroyAllPersistenceSpaces()V
+#createPersistenceContextWithin(Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/spi/service/FileBasedPersistenceContext;
-#createPersistenceContext(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$PersistentStoreConfiguration;)Lorg/ehcache/spi/service/FileBasedPersistenceContext;
-#destroyPersistenceContext(Ljava/lang/Object;)V
-#destroyAllPersistenceContext()V
@3.0.0.m5
-###org/ehcache/internal/persistence/DefaultLocalPersistenceService

+###org/ehcache/internal/store/DefaultStoreProvider
@3.0.0.m1
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m2
+#initStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0.m5
-###org/ehcache/internal/store/DefaultStoreProvider

+###org/ehcache/internal/store/DefaultStoreProviderFactory
@3.0.0.m1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/DefaultStoreProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/DefaultStoreProvider;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/DefaultStoreProvider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/store/DefaultStoreProvider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/DefaultStoreProvider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/store/DefaultStoreProviderFactory

+###org/ehcache/internal/store/heap/OnHeapStoreProviderFactory
@3.0.0.m1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/heap/OnHeapStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/heap/OnHeapStore$Provider;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/heap/OnHeapStore$Provider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/store/heap/OnHeapStore$Provider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/heap/OnHeapStore$Provider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/store/heap/OnHeapStoreProviderFactory

+###org/ehcache/internal/store/heap/OnHeapStore$Provider
@3.0.0.m1
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/heap/OnHeapStore;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createCachingTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/spi/cache/tiering/CachingTier;)V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
@3.0.0.m2
+#initStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#initCachingTier(Lorg/ehcache/spi/cache/tiering/CachingTier;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0.m4
+#createHigherCachingTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/HigherCachingTier;
+#releaseHigherCachingTier(Lorg/ehcache/spi/cache/tiering/HigherCachingTier;)V
+#initHigherCachingTier(Lorg/ehcache/spi/cache/tiering/HigherCachingTier;)V
@3.0.0.m5
-###org/ehcache/internal/store/heap/OnHeapStore$Provider

+###org/ehcache/internal/store/heap/OnHeapStore
@3.0.0.m1
+#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;ZLorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#create()V
+#close()V
+#init()V
+#maintenance()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#setInvalidationListener(Lorg/ehcache/spi/cache/tiering/CachingTier$InvalidationListener;)V
+#isExpired(Lorg/ehcache/spi/cache/Store$ValueHolder;)Z
+#getExpireTimeMillis(Lorg/ehcache/spi/cache/Store$ValueHolder;)J
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
@3.0.0.m2
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
+#getConfigurationChangeListeners()Ljava/util/List;
-#destroy()V
-#create()V
-#close()V
-#init()V
-#maintenance()V
-#isExpired(Lorg/ehcache/spi/cache/Store$ValueHolder;)Z
-#getExpireTimeMillis(Lorg/ehcache/spi/cache/Store$ValueHolder;)J
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;)V
-#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;ZLorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
@3.0.0.m4
+#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/function/Function;)V
-#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
@3.0.0.m5
-###org/ehcache/internal/store/heap/OnHeapStore

+###org/ehcache/internal/store/heap/service/OnHeapStoreServiceConfig
@3.0.0.m1
+#<init>()V
+#storeByValue()Z
+#storeByValue(Z)Lorg/ehcache/internal/store/heap/service/OnHeapStoreServiceConfig;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m2
-###org/ehcache/internal/store/heap/service/OnHeapStoreServiceConfig

+###org/ehcache/internal/store/tiering/CacheStore$Provider
@3.0.0.m1
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m2
+#initStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CacheStore$Provider

+###org/ehcache/internal/store/tiering/CacheStore
@3.0.0.m1
+#<init>(Lorg/ehcache/spi/cache/tiering/CachingTier;Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#create()V
+#close()V
+#init()V
+#maintenance()V
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
@3.0.0.m2
+#getConfigurationChangeListeners()Ljava/util/List;
-#destroy()V
-#create()V
-#close()V
-#init()V
-#maintenance()V
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CacheStore

+###org/ehcache/internal/store/tiering/CacheStoreProviderFactory
@3.0.0.m1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/tiering/CacheStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/tiering/CacheStore$Provider;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/tiering/CacheStore$Provider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/store/tiering/CacheStore$Provider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/tiering/CacheStore$Provider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CacheStoreProviderFactory

+###org/ehcache/internal/store/tiering/CacheStoreServiceConfig
@3.0.0.m1
+#<init>()V
+#cachingTierProvider(Ljava/lang/Class;)Lorg/ehcache/internal/store/tiering/CacheStoreServiceConfig;
+#authoritativeTierProvider(Ljava/lang/Class;)Lorg/ehcache/internal/store/tiering/CacheStoreServiceConfig;
+#cachingTierProvider()Ljava/lang/Class;
+#authoritativeTierProvider()Ljava/lang/Class;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m2
-###org/ehcache/internal/store/tiering/CacheStoreServiceConfig

+###org/ehcache/internal/store/tiering/NullInvalidationListener
@3.0.0.m1
+#<init>()V
+#instance()Lorg/ehcache/spi/cache/tiering/CachingTier$InvalidationListener;
+#onInvalidation(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;)V
@3.0.0.m2
-###org/ehcache/internal/store/tiering/NullInvalidationListener

+###org/ehcache/internal/store/offheap/OffHeapStore$Provider
@3.0.0.m1
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/offheap/OffHeapStore;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createAuthoritativeTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
@3.0.0.m2
+#initStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#initAuthoritativeTier(Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
+#createCachingTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/LowerCachingTier;
+#releaseCachingTier(Lorg/ehcache/spi/cache/tiering/LowerCachingTier;)V
+#initCachingTier(Lorg/ehcache/spi/cache/tiering/LowerCachingTier;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0.m5
-###org/ehcache/internal/store/offheap/OffHeapStore$Provider

+###org/ehcache/internal/store/offheap/OffHeapStore
@3.0.0.m1
+#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/internal/TimeSource;J)V
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#create()V
+#close()V
+#init()V
+#maintenance()V
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;Lorg/ehcache/spi/cache/tiering/CachingTier;)Z
+#registerEmergencyValve(Ljava/util/concurrent/Callable;)V
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;)V
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Ljava/util/concurrent/atomic/AtomicBoolean;)V
@3.0.0.m2
+#getConfigurationChangeListeners()Ljava/util/List;
-#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#containsKey(Ljava/lang/Object;)Z
-#put(Ljava/lang/Object;Ljava/lang/Object;)V
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#remove(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#clear()V
-#destroy()V
-#create()V
-#close()V
-#init()V
-#maintenance()V
-#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
-#disableStoreEventNotifications()V
-#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#getAndFault(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#flush(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;Lorg/ehcache/spi/cache/tiering/CachingTier;)Z
-#registerEmergencyValve(Ljava/util/concurrent/Callable;)V
-#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;)V
-#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Ljava/util/concurrent/atomic/AtomicBoolean;)V
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;J)V
-#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/internal/TimeSource;J)V
@3.0.0.m5
-###org/ehcache/internal/store/offheap/OffHeapStore

+###org/ehcache/internal/store/offheap/HeuristicConfiguration
@3.0.0.m1
+#<init>(J)V
+#getMaximumSize()J
+#getMinimumChunkSize()I
+#getMaximumChunkSize()I
+#getConcurrency()I
+#getInitialSegmentTableSize()I
+#getSegmentDataPageSize()I
+#toString()Ljava/lang/String;
@3.0.0.m5
-###org/ehcache/internal/store/offheap/HeuristicConfiguration

+###org/ehcache/internal/store/offheap/OffHeapValueHolder
@3.0.0.m1
+#<init>(Ljava/lang/Object;JJ)V
+#<init>(Ljava/lang/Object;JJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
+#value()Ljava/lang/Object;
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#expireTime(Ljava/util/concurrent/TimeUnit;)J
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#hitRate(Ljava/util/concurrent/TimeUnit;)F
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isExpired(J)Z
@3.0.0.m2
+#<init>(JLjava/lang/Object;JJ)V
+#<init>(JLjava/lang/Object;JJJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
+#writeBack()V
+#updateMetadata(Lorg/ehcache/spi/cache/Store$ValueHolder;)V
-#<init>(Ljava/lang/Object;JJ)V
-#<init>(Ljava/lang/Object;JJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
-#creationTime(Ljava/util/concurrent/TimeUnit;)J
-#expireTime(Ljava/util/concurrent/TimeUnit;)J
-#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
-#hitRate(Ljava/util/concurrent/TimeUnit;)F
-#isExpired(J)Z
@3.0.0.m5
-###org/ehcache/internal/store/offheap/OffHeapValueHolder

+###org/ehcache/internal/store/offheap/EhcacheConcurrentOffHeapClockCache
@3.0.0.m1
+#remove(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
@3.0.0.m2
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#nextIdFor(Ljava/lang/Object;)J
-#remove(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
@3.0.0.m5
-###org/ehcache/internal/store/offheap/EhcacheConcurrentOffHeapClockCache

+###org/ehcache/internal/store/offheap/MemorySizeParser
@3.0.0.m1
+#<init>()V
+#parse(Ljava/lang/String;)J
@3.0.0.m5
-###org/ehcache/internal/store/offheap/MemorySizeParser

+###org/ehcache/internal/store/offheap/OffHeapStoreUtils
@3.0.0.m1
+#<init>()V
+#getBufferSource()Lorg/terracotta/offheapstore/buffersource/BufferSource;
+#getAdvancedMemorySizeConfigProperty(Ljava/lang/String;J)J
+#getAdvancedLongConfigProperty(Ljava/lang/String;J)J
+#getAdvancedBooleanConfigProperty(Ljava/lang/String;Z)Z
@3.0.0.m5
-###org/ehcache/internal/store/offheap/OffHeapStoreUtils

+###org/ehcache/internal/store/offheap/portability/OffHeapValueHolderPortability
@3.0.0.m1
+#<init>(Lorg/ehcache/spi/serialization/Serializer;)V
+#encode(Lorg/ehcache/internal/store/offheap/OffHeapValueHolder;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Lorg/ehcache/internal/store/offheap/OffHeapValueHolder;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/storage/portability/WriteContext;)Lorg/ehcache/internal/store/offheap/OffHeapValueHolder;
+#decode(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/storage/portability/WriteContext;)Ljava/lang/Object;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.0.0.m5
-###org/ehcache/internal/store/offheap/portability/OffHeapValueHolderPortability

+###org/ehcache/internal/store/offheap/portability/SerializerPortability
@3.0.0.m1
+#<init>(Lorg/ehcache/spi/serialization/Serializer;)V
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
@3.0.0.m5
-###org/ehcache/internal/store/offheap/portability/SerializerPortability

+###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator
@3.0.0.m1
+#equals(Ljava/lang/Object;Ljava/lang/Object;)Z
@3.0.0.m2
-###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator

+###org/ehcache/internal/store/offheap/factories/OffHeapStoreProviderFactory
@3.0.0.m1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/offheap/OffHeapStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
-###org/ehcache/internal/store/offheap/factories/OffHeapStoreProviderFactory

+###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener
@3.0.0.m1
+#onEviction(Ljava/lang/Object;Ljava/lang/Object;)V
@3.0.0.m5
-###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener

+###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment
@3.0.0.m1
+#remove(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#evict(IZ)Z
@3.0.0.m2
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
-#remove(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$ValueComparator;)Z
@3.0.0.m5
-###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment

+###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory
@3.0.0.m1
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/function/Predicate;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
+#newInstance()Lorg/terracotta/offheapstore/pinning/PinnableSegment;
+#newInstance()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory

+###org/ehcache/internal/store/disk/DiskStoreProviderFactory
@3.0.0.m1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/disk/DiskStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStoreProviderFactory

+###org/ehcache/internal/store/disk/DiskStorageFactory$Element
@3.0.0.m1
+#isExpired(J)Z
+#getKey()Ljava/lang/Object;
+#getValueHolder()Lorg/ehcache/internal/store/disk/DiskValueHolder;
+#setFaulted(Z)V
+#isFaulted()Z
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStorageFactory$Element

+###org/ehcache/internal/store/disk/ElementSubstituteFilter
@3.0.0.m1
+#allows(Ljava/lang/Object;)Z
@3.0.0.m2
-###org/ehcache/internal/store/disk/ElementSubstituteFilter

+###org/ehcache/internal/store/disk/DiskStoreServiceConfig
@3.0.0.m1
+#<init>()V
+#getServiceType()Ljava/lang/Class;
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStoreServiceConfig

+###org/ehcache/internal/store/disk/DiskStorageFactory$DiskSubstitute
@3.0.0.m1
+#<init>()V
+#getFactory()Lorg/ehcache/internal/store/disk/DiskStorageFactory;
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStorageFactory$DiskSubstitute

+###org/ehcache/internal/store/disk/DiskStore
@3.0.0.m1
+#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Ljava/io/File;Ljava/io/File;Lorg/ehcache/internal/TimeSource;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#create()V
+#close()V
+#init()V
+#maintenance()V
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;Lorg/ehcache/spi/cache/tiering/CachingTier;)Z
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#flushToDisk()V
+#getRandomSample(Lorg/ehcache/internal/store/disk/ElementSubstituteFilter;ILjava/lang/Object;)Ljava/util/List;
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStore

+###org/ehcache/internal/store/disk/DiskStorePathManager
@3.0.0.m1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#resolveAndLockIfExists(Ljava/lang/String;)Z
+#isAutoCreated()Z
+#isDefault()Z
+#releaseLock()V
+#getFile(Ljava/lang/Object;Ljava/lang/String;)Ljava/io/File;
+#getFile(Ljava/lang/String;)Ljava/io/File;
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStorePathManager

+###org/ehcache/internal/store/disk/DiskStorageFactory$DiskMarker
@3.0.0.m1
+#getSize()I
+#installed()V
+#getExpirationTime()J
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStorageFactory$DiskMarker

+###org/ehcache/internal/store/disk/Segment
@3.0.0.m1
+#<init>(IFLorg/ehcache/internal/store/disk/DiskStorageFactory;Lorg/ehcache/internal/TimeSource;Lorg/ehcache/internal/store/disk/DiskStore;)V
+#<init>(Lorg/ehcache/internal/store/disk/DiskStorageFactory;Lorg/ehcache/internal/TimeSource;Lorg/ehcache/internal/store/disk/DiskStore;)V
+#toString()Ljava/lang/String;
+#isFaulted(ILjava/lang/Object;)Z
+#compute(Ljava/lang/Object;ILorg/ehcache/function/BiFunction;Lorg/ehcache/internal/store/disk/Segment$Compute;ZZ)Lorg/ehcache/internal/store/disk/DiskStorageFactory$Element;
@3.0.0.m2
-###org/ehcache/internal/store/disk/Segment

+###org/ehcache/internal/store/disk/DiskStorageFactory
@3.0.0.m1
+#<init>(JLorg/ehcache/function/Predicate;Ljava/util/Comparator;Lorg/ehcache/internal/TimeSource;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Ljava/io/File;Ljava/io/File;IJI)V
+#getOnDiskSizeInBytes()J
+#bind(Lorg/ehcache/internal/store/disk/DiskStore;)V
+#free(Ljava/util/concurrent/locks/Lock;Lorg/ehcache/internal/store/disk/DiskStorageFactory$DiskSubstitute;)V
+#free(Ljava/util/concurrent/locks/Lock;Lorg/ehcache/internal/store/disk/DiskStorageFactory$DiskSubstitute;Z)V
+#bufferFull()Z
+#expireElements()V
+#create(Lorg/ehcache/internal/store/disk/DiskStorageFactory$Element;)Lorg/ehcache/internal/store/disk/DiskStorageFactory$DiskSubstitute;
+#retrieve(Lorg/ehcache/internal/store/disk/DiskStorageFactory$DiskSubstitute;)Lorg/ehcache/internal/store/disk/DiskStorageFactory$Element;
+#retrieve(Lorg/ehcache/internal/store/disk/DiskStorageFactory$DiskSubstitute;Lorg/ehcache/internal/store/disk/Segment;)Lorg/ehcache/internal/store/disk/DiskStorageFactory$Element;
+#created(Ljava/lang/Object;)Z
+#unbind()V
+#flush()Ljava/util/concurrent/Future;
+#getOnDiskSize()I
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStorageFactory

+###org/ehcache/internal/store/disk/DiskStore$Provider
@3.0.0.m1
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/disk/DiskStore;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createAuthoritativeTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
@3.0.0.m2
-###org/ehcache/internal/store/disk/DiskStore$Provider

+###org/ehcache/internal/store/disk/ods/Region
@3.0.0.m1
+#<init>(J)V
+#<init>(JJ)V
+#<init>(Lorg/ehcache/internal/store/disk/ods/Region;)V
+#contiguous()J
+#setLeft(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#setRight(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#toString()Ljava/lang/String;
+#size()J
+#compareTo(Ljava/lang/Comparable;)I
+#swapPayload(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#getPayload()Lorg/ehcache/internal/store/disk/ods/Region;
+#start()J
+#end()J
+#getPayload()Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I
@3.0.0.m2
-###org/ehcache/internal/store/disk/ods/Region

+###org/ehcache/internal/store/disk/ods/AATreeSet$Node
@3.0.0.m1
+#compareTo(Ljava/lang/Object;)I
+#setLeft(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#setRight(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#getLeft()Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;
+#getRight()Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
+#swapPayload(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#getPayload()Ljava/lang/Object;
@3.0.0.m2
-###org/ehcache/internal/store/disk/ods/AATreeSet$Node

+###org/ehcache/internal/store/disk/ods/FileAllocationTree
@3.0.0.m1
+#<init>(JLjava/io/RandomAccessFile;)V
+#alloc(J)Lorg/ehcache/internal/store/disk/ods/Region;
+#mark(Lorg/ehcache/internal/store/disk/ods/Region;)V
+#free(Lorg/ehcache/internal/store/disk/ods/Region;)V
+#clear()V
+#getFileSize()J
+#find(J)Lorg/ehcache/internal/store/disk/ods/Region;
+#find(Ljava/lang/Object;)Lorg/ehcache/internal/store/disk/ods/Region;
+#removeAndReturn(Ljava/lang/Object;)Lorg/ehcache/internal/store/disk/ods/Region;
@3.0.0.m2
-###org/ehcache/internal/store/disk/ods/FileAllocationTree

+###org/ehcache/internal/store/disk/ods/AATreeSet$AbstractTreeNode
@3.0.0.m1
+#<init>()V
+#setLeft(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#setRight(Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;)V
+#getLeft()Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;
+#getRight()Lorg/ehcache/internal/store/disk/ods/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
@3.0.0.m2
-###org/ehcache/internal/store/disk/ods/AATreeSet$AbstractTreeNode

+###org/ehcache/internal/store/disk/ods/AATreeSet
@3.0.0.m1
+#<init>()V
+#add(Ljava/lang/Comparable;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;
+#clear()V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isEmpty()Z
+#comparator()Ljava/util/Comparator;
+#subSet(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#first()Ljava/lang/Comparable;
+#last()Ljava/lang/Comparable;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#add(Ljava/lang/Object;)Z
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
@3.0.0.m2
-###org/ehcache/internal/store/disk/ods/AATreeSet

+###org/ehcache/internal/store/disk/utils/ConcurrencyUtil
@3.0.0.m1
+#hash(Ljava/lang/Object;)I
+#selectLock(Ljava/lang/Object;I)I
+#shutdownAndWaitForTermination(Ljava/util/concurrent/ExecutorService;I)V
@3.0.0.m2
-###org/ehcache/internal/store/disk/utils/ConcurrencyUtil

+###org/ehcache/internal/util/ServiceUtil
@3.0.0.Alpha
+#completeFuture()Ljava/util/concurrent/Future;
@3.0.0.m5
-###org/ehcache/internal/util/ServiceUtil

+###org/ehcache/internal/util/ByteBufferInputStream
@3.0.0.Alpha
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
@3.0.0.m5
-###org/ehcache/internal/util/ByteBufferInputStream

+###org/ehcache/internal/classes/ClassInstanceProviderFactoryConfig
@3.0.0.Alpha
+#<init>()V
+#getDefaults()Ljava/util/Map;
@3.0.0.m2
-###org/ehcache/internal/classes/ClassInstanceProviderFactoryConfig

+###org/ehcache/internal/classes/ClassInstanceProvider
@3.0.0.Alpha
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
@3.0.0.m1
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.0.0.m2
+#start(Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0.m5
-###org/ehcache/internal/classes/ClassInstanceProvider

+###org/ehcache/internal/classes/ClassInstanceProviderConfig
@3.0.0.Alpha
+#<init>(Ljava/lang/Class;)V
+#getClazz()Ljava/lang/Class;
@3.0.0.m2
-###org/ehcache/internal/classes/ClassInstanceProviderConfig

+###org/ehcache/management/CacheStatisticsMXBeanImpl
@3.0.0.Alpha
+#<init>(Lorg/ehcache/Cache;)V
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getAverageGetTime()F
+#getAveragePutTime()F
+#getAverageRemoveTime()F
@3.0.0.m2
-###org/ehcache/management/CacheStatisticsMXBeanImpl

+###org/ehcache/management/CacheStatisticsMXBean
@3.0.0.Alpha
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getAverageGetTime()F
+#getAveragePutTime()F
+#getAverageRemoveTime()F
@3.0.0.m2
-###org/ehcache/management/CacheStatisticsMXBean

+###org/ehcache/EhcacheHackAccessor
@3.0.0.Alpha
+#getCacheLoader(Lorg/ehcache/Ehcache;)Lorg/ehcache/spi/loader/CacheLoader;
+#getCacheWriter(Lorg/ehcache/Ehcache;)Lorg/ehcache/spi/writer/CacheWriter;
+#getJsr107Cache(Lorg/ehcache/Ehcache;)Lorg/ehcache/Jsr107Cache;
@3.0.0.m1
+#getCacheLoaderWriter(Lorg/ehcache/Ehcache;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
-#getCacheLoader(Lorg/ehcache/Ehcache;)Lorg/ehcache/spi/loader/CacheLoader;
-#getCacheWriter(Lorg/ehcache/Ehcache;)Lorg/ehcache/spi/writer/CacheWriter;
@3.0.0.m2
+#getBulkMethodEntries(Lorg/ehcache/Ehcache;)Ljava/util/concurrent/ConcurrentMap;
@3.0.0.m3
+#getBulkMethodEntries(Lorg/ehcache/Ehcache;)Ljava/util/Map;
-#getBulkMethodEntries(Lorg/ehcache/Ehcache;)Ljava/util/concurrent/ConcurrentMap;
@3.0.0.m5
-###org/ehcache/EhcacheHackAccessor

+###org/ehcache/config/Jsr107Configuration
@3.0.0.Alpha
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getDefaultTemplate()Ljava/lang/String;
+#getTemplates()Ljava/util/Map;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m1
+#<init>(Ljava/lang/String;Ljava/util/Map;Z)V
+#isJsr107CompliantAtomics()Z
-#<init>(Ljava/lang/String;Ljava/util/Map;)V
@3.0.0.m5
-###org/ehcache/config/Jsr107Configuration

+###org/ehcache/jsr107/MultiCacheException
@3.0.0.Alpha
+#<init>()V
+#<init>(Ljava/lang/Throwable;)V
+#addThrowable(Ljava/lang/Throwable;)V
+#getThrowables()Ljava/util/List;
+#getMessage()Ljava/lang/String;
+#initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#getCause()Ljava/lang/Throwable;
+#printStackTrace()V
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V
+#throwIfNotEmpty()V
@3.0.0.rc2
-###org/ehcache/jsr107/MultiCacheException

+###org/ehcache/jsr107/Jsr107Service
@3.0.0.Alpha
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
+#getDefaultTemplate()Ljava/lang/String;
+#getTemplateNameForCache(Ljava/lang/String;)Ljava/lang/String;
@3.0.0.m1
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#jsr107CompliantAtomics()Z
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.0.0.m2
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#stop()V
-#getDefaultTemplate()Ljava/lang/String;
@3.0.0.m5
-###org/ehcache/jsr107/Jsr107Service

+###org/ehcache/jsr107/Eh107MBeanServerBuilder
@3.0.0.Alpha
+#<init>()V
+#newMBeanServer(Ljava/lang/String;Ljavax/management/MBeanServer;Ljavax/management/MBeanServerDelegate;)Ljavax/management/MBeanServer;
@3.0.0.m4
-###org/ehcache/jsr107/Eh107MBeanServerBuilder

+###org/ehcache/jsr107/EhcacheCachingProvider
@3.0.0.Alpha
+#<init>()V
+#getCacheManager(Ljava/net/URI;Ljava/lang/ClassLoader;Ljava/util/Properties;)Ljavax/cache/CacheManager;
+#getDefaultClassLoader()Ljava/lang/ClassLoader;
+#getDefaultURI()Ljava/net/URI;
+#getDefaultProperties()Ljava/util/Properties;
+#getCacheManager(Ljava/net/URI;Ljava/lang/ClassLoader;)Ljavax/cache/CacheManager;
+#getCacheManager()Ljavax/cache/CacheManager;
+#close()V
+#close(Ljava/lang/ClassLoader;)V
+#close(Ljava/net/URI;Ljava/lang/ClassLoader;)V
+#isSupported(Ljavax/cache/configuration/OptionalFeature;)Z
@3.0.0.rc2
+#getCacheManager(Ljava/net/URI;Lorg/ehcache/config/Configuration;)Lorg/ehcache/jsr107/Eh107CacheManager;
+#getCacheManager(Ljava/net/URI;Lorg/ehcache/config/Configuration;Ljava/util/Properties;)Lorg/ehcache/jsr107/Eh107CacheManager;
@3.1.4
+#getCacheManager(Ljava/net/URI;Lorg/ehcache/config/Configuration;)Ljavax/cache/CacheManager;
+#getCacheManager(Ljava/net/URI;Lorg/ehcache/config/Configuration;Ljava/util/Properties;)Ljavax/cache/CacheManager;
-#getCacheManager(Ljava/net/URI;Lorg/ehcache/config/Configuration;)Lorg/ehcache/jsr107/Eh107CacheManager;
-#getCacheManager(Ljava/net/URI;Lorg/ehcache/config/Configuration;Ljava/util/Properties;)Lorg/ehcache/jsr107/Eh107CacheManager;

+###org/ehcache/jsr107/ServiceConfigParser
@3.0.0.Alpha
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parse(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.0.0.m2
-###org/ehcache/jsr107/ServiceConfigParser

+###org/ehcache/jsr107/Eh107MBeanServerBuilder$Eh107MBeanServerDelegate
@3.0.0.Alpha
+#<init>(Ljavax/management/MBeanServerDelegate;)V
+#getSpecificationName()Ljava/lang/String;
+#getSpecificationVersion()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationName()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
+#addNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#removeNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#removeNotificationListener(Ljavax/management/NotificationListener;)V
+#sendNotification(Ljavax/management/Notification;)V
+#getMBeanServerId()Ljava/lang/String;
@3.0.0.m4
-###org/ehcache/jsr107/Eh107MBeanServerBuilder$Eh107MBeanServerDelegate

+###org/ehcache/jsr107/DefaultConfigResolver
@3.0.0.m1
@3.0.0.m2
-###org/ehcache/jsr107/DefaultConfigResolver

+###org/ehcache/jsr107/DefaultJsr107Service
@3.0.0.Alpha
+#<init>()V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getDefaultTemplate()Ljava/lang/String;
+#getTemplateNameForCache(Ljava/lang/String;)Ljava/lang/String;
+#stop()V
@3.0.0.m1
+#<init>(Lorg/ehcache/config/Jsr107Configuration;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
+#jsr107CompliantAtomics()Z
-#<init>()V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.0.0.m2
+#start(Lorg/ehcache/spi/ServiceProvider;)V
-#start(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceProvider;)V
-#getDefaultTemplate()Ljava/lang/String;
@3.0.0.m5
+#<init>(Lorg/ehcache/jsr107/config/Jsr107Configuration;)V
-#<init>(Lorg/ehcache/config/Jsr107Configuration;)V
@3.0.0.rc2
-###org/ehcache/jsr107/DefaultJsr107Service

+###org/ehcache/config/xml/XmlConfigurationParser
@3.0.0.Alpha
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parse(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.0.0.m3
-###org/ehcache/config/xml/XmlConfigurationParser

+###org/ehcache/config/xml/XmlConfiguration
@3.0.0.Alpha
+#<init>(Ljava/net/URL;)V
+#<init>(Ljava/net/URL;Ljava/lang/ClassLoader;)V
+#<init>(Ljava/net/URL;Ljava/lang/ClassLoader;Ljava/util/Map;)V
+#getURL()Ljava/net/URL;
+#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/CacheConfigurationBuilder;
+#getCacheConfigurations()Ljava/util/Map;
+#getServiceConfigurations()Ljava/util/Collection;
+#getClassLoader()Ljava/lang/ClassLoader;
@3.0.0.m3
+#getServiceCreationConfigurations()Ljava/util/Collection;
-#getServiceConfigurations()Ljava/util/Collection;
@3.0.0.m5
-###org/ehcache/config/xml/XmlConfiguration

+###org/ehcache/config/xml/model/SerializerType
@3.0.0.m1
+#<init>()V
+#getClazz()Ljava/util/List;
@3.0.0.m2
+#getSerializer()Ljava/util/List;
-#getClazz()Ljava/util/List;
@3.0.0.m5
-###org/ehcache/config/xml/model/SerializerType

+###org/ehcache/config/xml/model/ServiceType
@3.0.0.Alpha
+#<init>()V
+#getAny()Ljava/lang/Object;
+#setAny(Ljava/lang/Object;)V
@3.0.0.m1
+#getSerializerDefault()Lorg/ehcache/config/xml/model/SerializerType;
+#setSerializerDefault(Lorg/ehcache/config/xml/model/SerializerType;)V
+#getPersistence()Lorg/ehcache/config/xml/model/PersistenceType;
+#setPersistence(Lorg/ehcache/config/xml/model/PersistenceType;)V
@3.0.0.m2
+#getDefaultSerializers()Lorg/ehcache/config/xml/model/SerializerType;
+#setDefaultSerializers(Lorg/ehcache/config/xml/model/SerializerType;)V
-#getSerializerDefault()Lorg/ehcache/config/xml/model/SerializerType;
-#setSerializerDefault(Lorg/ehcache/config/xml/model/SerializerType;)V
@3.0.0.m3
+#getDefaultCopiers()Lorg/ehcache/config/xml/model/CopierType;
+#setDefaultCopiers(Lorg/ehcache/config/xml/model/CopierType;)V
@3.0.0.m4
-#getDefaultSerializers()Lorg/ehcache/config/xml/model/SerializerType;
-#setDefaultSerializers(Lorg/ehcache/config/xml/model/SerializerType;)V
-#getDefaultCopiers()Lorg/ehcache/config/xml/model/CopierType;
-#setDefaultCopiers(Lorg/ehcache/config/xml/model/CopierType;)V
-#getPersistence()Lorg/ehcache/config/xml/model/PersistenceType;
-#setPersistence(Lorg/ehcache/config/xml/model/PersistenceType;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ServiceType

+###org/ehcache/config/xml/model/ExpiryType
@3.0.0.Alpha
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getTti()Lorg/ehcache/config/xml/model/TimeType;
+#setTti(Lorg/ehcache/config/xml/model/TimeType;)V
+#getTtl()Lorg/ehcache/config/xml/model/TimeType;
+#setTtl(Lorg/ehcache/config/xml/model/TimeType;)V
+#getNone()Lorg/ehcache/config/xml/model/ExpiryType$None;
+#setNone(Lorg/ehcache/config/xml/model/ExpiryType$None;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ExpiryType

+###org/ehcache/config/xml/model/ResourcesType
@3.0.0.m1
+#<init>()V
+#getHeap()Lorg/ehcache/config/xml/model/ResourceType;
+#setHeap(Lorg/ehcache/config/xml/model/ResourceType;)V
+#getOffheap()Lorg/ehcache/config/xml/model/ResourceType;
+#setOffheap(Lorg/ehcache/config/xml/model/ResourceType;)V
+#getDisk()Lorg/ehcache/config/xml/model/ResourceType;
+#setDisk(Lorg/ehcache/config/xml/model/ResourceType;)V
+#getAny()Ljava/lang/Object;
+#setAny(Ljava/lang/Object;)V
@3.0.0.m2
+#getDisk()Lorg/ehcache/config/xml/model/PersistableResourceType;
+#setDisk(Lorg/ehcache/config/xml/model/PersistableResourceType;)V
-#getDisk()Lorg/ehcache/config/xml/model/ResourceType;
-#setDisk(Lorg/ehcache/config/xml/model/ResourceType;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ResourcesType

+###org/ehcache/config/xml/model/ConfigType
@3.0.0.Alpha
+#<init>()V
+#getService()Ljava/util/List;
+#getCacheOrCacheTemplate()Ljava/util/List;
@3.0.0.m4
+#getDefaultSerializers()Lorg/ehcache/config/xml/model/SerializerType;
+#setDefaultSerializers(Lorg/ehcache/config/xml/model/SerializerType;)V
+#getDefaultCopiers()Lorg/ehcache/config/xml/model/CopierType;
+#setDefaultCopiers(Lorg/ehcache/config/xml/model/CopierType;)V
+#getPersistence()Lorg/ehcache/config/xml/model/PersistenceType;
+#setPersistence(Lorg/ehcache/config/xml/model/PersistenceType;)V
+#getThreadPools()Lorg/ehcache/config/xml/model/ThreadPoolsType;
+#setThreadPools(Lorg/ehcache/config/xml/model/ThreadPoolsType;)V
+#getEventDispatch()Lorg/ehcache/config/xml/model/ThreadPoolReferenceType;
+#setEventDispatch(Lorg/ehcache/config/xml/model/ThreadPoolReferenceType;)V
+#getWriteBehind()Lorg/ehcache/config/xml/model/ThreadPoolReferenceType;
+#setWriteBehind(Lorg/ehcache/config/xml/model/ThreadPoolReferenceType;)V
+#getDiskStore()Lorg/ehcache/config/xml/model/ThreadPoolReferenceType;
+#setDiskStore(Lorg/ehcache/config/xml/model/ThreadPoolReferenceType;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ConfigType

+###org/ehcache/config/xml/model/ExpiryType$None
@3.0.0.Alpha
+#<init>()V
@3.0.0.m5
-###org/ehcache/config/xml/model/ExpiryType$None

+###org/ehcache/config/xml/model/CacheIntegration
@3.0.0.Alpha
+#<init>()V
+#getLoader()Lorg/ehcache/config/xml/model/CacheIntegration$Loader;
+#setLoader(Lorg/ehcache/config/xml/model/CacheIntegration$Loader;)V
+#getWriter()Lorg/ehcache/config/xml/model/CacheIntegration$Writer;
+#setWriter(Lorg/ehcache/config/xml/model/CacheIntegration$Writer;)V
@3.0.0.m1
+#getLoaderwriter()Lorg/ehcache/config/xml/model/CacheIntegration$Loaderwriter;
+#setLoaderwriter(Lorg/ehcache/config/xml/model/CacheIntegration$Loaderwriter;)V
-#getLoader()Lorg/ehcache/config/xml/model/CacheIntegration$Loader;
-#setLoader(Lorg/ehcache/config/xml/model/CacheIntegration$Loader;)V
-#getWriter()Lorg/ehcache/config/xml/model/CacheIntegration$Writer;
-#setWriter(Lorg/ehcache/config/xml/model/CacheIntegration$Writer;)V
@3.0.0.m2
+#getWritebehind()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind;
+#setWritebehind(Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind;)V
+#getListener()Ljava/util/List;
@3.0.0.m4
-###org/ehcache/config/xml/model/CacheIntegration

+###org/ehcache/config/xml/model/PersistenceType
@3.0.0.m1
+#<init>()V
+#getDirectory()Ljava/lang/String;
+#setDirectory(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/PersistenceType

+###org/ehcache/config/xml/model/CacheIntegration$Loaderwriter
@3.0.0.m1
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getAny()Ljava/util/List;
@3.0.0.m4
-###org/ehcache/config/xml/model/CacheIntegration$Loaderwriter

+###org/ehcache/config/xml/model/CacheType
@3.0.0.Alpha
+#<init>()V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#getUsesTemplate()Ljava/lang/Object;
+#setUsesTemplate(Ljava/lang/Object;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/CacheType

+###org/ehcache/config/xml/model/BaseCacheType
@3.0.0.Alpha
+#<init>()V
+#getKeyType()Ljava/lang/String;
+#setKeyType(Ljava/lang/String;)V
+#getValueType()Ljava/lang/String;
+#setValueType(Ljava/lang/String;)V
+#getCapacity()Ljava/math/BigInteger;
+#setCapacity(Ljava/math/BigInteger;)V
+#getExpiry()Lorg/ehcache/config/xml/model/ExpiryType;
+#setExpiry(Lorg/ehcache/config/xml/model/ExpiryType;)V
+#getEvictionVeto()Ljava/lang/String;
+#setEvictionVeto(Ljava/lang/String;)V
+#getEvictionPrioritizer()Ljava/lang/String;
+#setEvictionPrioritizer(Ljava/lang/String;)V
+#getIntegration()Lorg/ehcache/config/xml/model/CacheIntegration;
+#setIntegration(Lorg/ehcache/config/xml/model/CacheIntegration;)V
+#getAny()Ljava/util/List;
+#isStoreByValueOnHeap()Ljava/lang/Boolean;
+#setStoreByValueOnHeap(Ljava/lang/Boolean;)V
@3.0.0.m1
+#getHeap()Lorg/ehcache/config/xml/model/ResourceType;
+#setHeap(Lorg/ehcache/config/xml/model/ResourceType;)V
+#getResources()Lorg/ehcache/config/xml/model/ResourcesType;
+#setResources(Lorg/ehcache/config/xml/model/ResourcesType;)V
-#getCapacity()Ljava/math/BigInteger;
-#setCapacity(Ljava/math/BigInteger;)V
@3.0.0.m2
+#getKeyType()Lorg/ehcache/config/xml/model/CacheEntryType;
+#setKeyType(Lorg/ehcache/config/xml/model/CacheEntryType;)V
+#getValueType()Lorg/ehcache/config/xml/model/CacheEntryType;
+#setValueType(Lorg/ehcache/config/xml/model/CacheEntryType;)V
-#getKeyType()Ljava/lang/String;
-#setKeyType(Ljava/lang/String;)V
-#getValueType()Ljava/lang/String;
-#setValueType(Ljava/lang/String;)V
@3.0.0.m3
-#isStoreByValueOnHeap()Ljava/lang/Boolean;
-#setStoreByValueOnHeap(Ljava/lang/Boolean;)V
@3.0.0.m4
+#getIntegration()Lorg/ehcache/config/xml/model/CacheIntegrationType;
+#setIntegration(Lorg/ehcache/config/xml/model/CacheIntegrationType;)V
+#getListeners()Lorg/ehcache/config/xml/model/ListenersType;
+#setListeners(Lorg/ehcache/config/xml/model/ListenersType;)V
+#getDiskStoreSettings()Lorg/ehcache/config/xml/model/DiskStoreSettingsType;
+#setDiskStoreSettings(Lorg/ehcache/config/xml/model/DiskStoreSettingsType;)V
-#getIntegration()Lorg/ehcache/config/xml/model/CacheIntegration;
-#setIntegration(Lorg/ehcache/config/xml/model/CacheIntegration;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/BaseCacheType

+###org/ehcache/config/xml/model/SerializerType$Class
@3.0.0.m1
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getCache()Ljava/lang/String;
+#setCache(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
@3.0.0.m2
-###org/ehcache/config/xml/model/SerializerType$Class

+###org/ehcache/config/xml/model/ResourceUnit
@3.0.0.m1
+#values()[Lorg/ehcache/config/xml/model/ResourceUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/xml/model/ResourceUnit;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/config/xml/model/ResourceUnit;
@3.0.0.m5
-###org/ehcache/config/xml/model/ResourceUnit

+###org/ehcache/config/xml/model/TimeUnit
@3.0.0.Alpha
+#values()[Lorg/ehcache/config/xml/model/TimeUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/xml/model/TimeUnit;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/config/xml/model/TimeUnit;
@3.0.0.m5
-###org/ehcache/config/xml/model/TimeUnit

+###org/ehcache/config/xml/model/TimeType
@3.0.0.Alpha
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getUnit()Lorg/ehcache/config/xml/model/TimeUnit;
+#setUnit(Lorg/ehcache/config/xml/model/TimeUnit;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/TimeType

+###org/ehcache/config/xml/model/ResourceType
@3.0.0.m1
+#<init>()V
+#getUnit()Lorg/ehcache/config/xml/model/ResourceUnit;
+#setUnit(Lorg/ehcache/config/xml/model/ResourceUnit;)V
+#getSize()Ljava/math/BigInteger;
+#setSize(Ljava/math/BigInteger;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ResourceType

+###org/ehcache/config/xml/model/ObjectFactory
@3.0.0.Alpha
+#<init>()V
+#createCacheIntegration()Lorg/ehcache/config/xml/model/CacheIntegration;
+#createExpiryType()Lorg/ehcache/config/xml/model/ExpiryType;
+#createConfigType()Lorg/ehcache/config/xml/model/ConfigType;
+#createTimeType()Lorg/ehcache/config/xml/model/TimeType;
+#createCacheTemplateType()Lorg/ehcache/config/xml/model/CacheTemplateType;
+#createServiceType()Lorg/ehcache/config/xml/model/ServiceType;
+#createCacheType()Lorg/ehcache/config/xml/model/CacheType;
+#createCacheIntegrationLoader()Lorg/ehcache/config/xml/model/CacheIntegration$Loader;
+#createCacheIntegrationWriter()Lorg/ehcache/config/xml/model/CacheIntegration$Writer;
+#createExpiryTypeNone()Lorg/ehcache/config/xml/model/ExpiryType$None;
+#createConfig(Lorg/ehcache/config/xml/model/ConfigType;)Ljavax/xml/bind/JAXBElement;
@3.0.0.m1
+#createSerializerType()Lorg/ehcache/config/xml/model/SerializerType;
+#createResourceType()Lorg/ehcache/config/xml/model/ResourceType;
+#createResourcesType()Lorg/ehcache/config/xml/model/ResourcesType;
+#createPersistenceType()Lorg/ehcache/config/xml/model/PersistenceType;
+#createCacheIntegrationLoaderwriter()Lorg/ehcache/config/xml/model/CacheIntegration$Loaderwriter;
+#createSerializerTypeClass()Lorg/ehcache/config/xml/model/SerializerType$Class;
-#createCacheIntegrationLoader()Lorg/ehcache/config/xml/model/CacheIntegration$Loader;
-#createCacheIntegrationWriter()Lorg/ehcache/config/xml/model/CacheIntegration$Writer;
@3.0.0.m2
+#createCacheIntegrationWritebehind()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind;
+#createPersistableResourceType()Lorg/ehcache/config/xml/model/PersistableResourceType;
+#createCacheEntryType()Lorg/ehcache/config/xml/model/CacheEntryType;
+#createCacheIntegrationListener()Lorg/ehcache/config/xml/model/CacheIntegration$Listener;
+#createCacheIntegrationWritebehindWritedelay()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay;
+#createCacheIntegrationWritebehindRetryAttempts()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts;
+#createSerializerTypeSerializer()Lorg/ehcache/config/xml/model/SerializerType$Serializer;
-#createSerializerTypeClass()Lorg/ehcache/config/xml/model/SerializerType$Class;
@3.0.0.m3
+#createCopierType()Lorg/ehcache/config/xml/model/CopierType;
+#createCacheIntegrationWritebehindRetry()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Retry;
+#createCopierTypeCopier()Lorg/ehcache/config/xml/model/CopierType$Copier;
-#createCacheIntegrationWritebehindWritedelay()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay;
-#createCacheIntegrationWritebehindRetryAttempts()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts;
@3.0.0.m4
+#createCacheIntegrationType()Lorg/ehcache/config/xml/model/CacheIntegrationType;
+#createCacheIntegrationTypeWriteBehind()Lorg/ehcache/config/xml/model/CacheIntegrationType$WriteBehind;
+#createThreadPoolsType()Lorg/ehcache/config/xml/model/ThreadPoolsType;
+#createListenersType()Lorg/ehcache/config/xml/model/ListenersType;
+#createThreadPoolReferenceType()Lorg/ehcache/config/xml/model/ThreadPoolReferenceType;
+#createDiskStoreSettingsType()Lorg/ehcache/config/xml/model/DiskStoreSettingsType;
+#createCacheIntegrationTypeLoaderWriter()Lorg/ehcache/config/xml/model/CacheIntegrationType$LoaderWriter;
+#createCacheIntegrationTypeWriteBehindBatching()Lorg/ehcache/config/xml/model/CacheIntegrationType$WriteBehind$Batching;
+#createThreadPoolsTypeThreadPool()Lorg/ehcache/config/xml/model/ThreadPoolsType$ThreadPool;
+#createListenersTypeListener()Lorg/ehcache/config/xml/model/ListenersType$Listener;
-#createCacheIntegration()Lorg/ehcache/config/xml/model/CacheIntegration;
-#createCacheIntegrationWritebehind()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind;
-#createCacheIntegrationLoaderwriter()Lorg/ehcache/config/xml/model/CacheIntegration$Loaderwriter;
-#createCacheIntegrationListener()Lorg/ehcache/config/xml/model/CacheIntegration$Listener;
-#createCacheIntegrationWritebehindRetry()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Retry;
@3.0.0.m5
-###org/ehcache/config/xml/model/ObjectFactory

+###org/ehcache/config/xml/model/CacheTemplateType
@3.0.0.Alpha
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/CacheTemplateType

+###org/terracotta/context/TreeNode
@3.0.0.Alpha
+#getChildren()Ljava/util/Set;
+#getPath()Ljava/util/List;
+#getPaths()Ljava/util/Collection;
+#getContext()Lorg/terracotta/context/ContextElement;
+#toTreeString()Ljava/lang/String;
@3.8.0
-###org/terracotta/context/TreeNode

+###org/terracotta/context/ContextManager
@3.0.0.Alpha
+#<init>()V
+#associate(Ljava/lang/Object;)Lorg/terracotta/context/ContextManager$Association;
+#dissociate(Ljava/lang/Object;)Lorg/terracotta/context/ContextManager$Dissociation;
+#nodeFor(Ljava/lang/Object;)Lorg/terracotta/context/TreeNode;
+#registerContextCreationListener(Lorg/terracotta/context/ContextCreationListener;)V
+#deregisterContextCreationListener(Lorg/terracotta/context/ContextCreationListener;)V
+#root(Ljava/lang/Object;)V
+#uproot(Ljava/lang/Object;)V
+#query(Lorg/terracotta/context/query/Query;)Ljava/util/Set;
+#queryForSingleton(Lorg/terracotta/context/query/Query;)Lorg/terracotta/context/TreeNode;
+#registerContextListener(Lorg/terracotta/context/ContextListener;)V
+#deregisterContextListener(Lorg/terracotta/context/ContextListener;)V
@3.8.0
-###org/terracotta/context/ContextManager

+###org/terracotta/context/ContextManager$Association
@3.0.0.Alpha
+#withChild(Ljava/lang/Object;)Lorg/terracotta/context/ContextManager$Association;
+#withParent(Ljava/lang/Object;)Lorg/terracotta/context/ContextManager$Association;
@3.8.0
-###org/terracotta/context/ContextManager$Association

+###org/terracotta/context/annotations/ContextAttribute
@3.0.0.Alpha
+#value()Ljava/lang/String;
@3.8.0
-###org/terracotta/context/annotations/ContextAttribute

+###org/terracotta/context/annotations/ContextChild
@3.0.0.Alpha
@3.8.0
-###org/terracotta/context/annotations/ContextChild

+###org/terracotta/context/annotations/ContextParent
@3.0.0.Alpha
@3.8.0
-###org/terracotta/context/annotations/ContextParent

+###org/terracotta/context/ContextElement
@3.0.0.Alpha
+#identifier()Ljava/lang/Class;
+#attributes()Ljava/util/Map;
@3.8.0
-###org/terracotta/context/ContextElement

+###org/terracotta/context/ContextListener
@3.0.0.Alpha
+#graphAdded(Lorg/terracotta/context/TreeNode;Lorg/terracotta/context/TreeNode;)V
+#graphRemoved(Lorg/terracotta/context/TreeNode;Lorg/terracotta/context/TreeNode;)V
@3.8.0
-###org/terracotta/context/ContextListener

+###org/terracotta/context/ContextManager$Dissociation
@3.0.0.Alpha
+#fromChild(Ljava/lang/Object;)Lorg/terracotta/context/ContextManager$Dissociation;
+#fromParent(Ljava/lang/Object;)Lorg/terracotta/context/ContextManager$Dissociation;
@3.8.0
-###org/terracotta/context/ContextManager$Dissociation

+###org/terracotta/context/extractor/ObjectContextExtractor
@3.0.0.Alpha
+#extract(Ljava/lang/Object;)Lorg/terracotta/context/ContextElement;
@3.8.0
-###org/terracotta/context/extractor/ObjectContextExtractor

+###org/terracotta/context/extractor/WeakFieldAttributeGetter
@3.0.0.Alpha
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V
+#get()Ljava/lang/Object;
@3.8.0
-###org/terracotta/context/extractor/WeakFieldAttributeGetter

+###org/terracotta/context/query/Query
@3.0.0.Alpha
+#execute(Ljava/util/Set;)Ljava/util/Set;
@3.8.0
-###org/terracotta/context/query/Query

+###org/terracotta/context/query/Matchers
@3.0.0.Alpha
+#context(Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/Matcher;
+#attributes(Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/Matcher;
+#identifier(Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/Matcher;
+#subclassOf(Ljava/lang/Class;)Lorg/terracotta/context/query/Matcher;
+#hasAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/terracotta/context/query/Matcher;
+#hasAttribute(Ljava/lang/String;Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/Matcher;
+#anyOf([Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/Matcher;
+#allOf([Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/Matcher;
+#not(Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/Matcher;
@3.8.0
-###org/terracotta/context/query/Matchers

+###org/terracotta/context/query/QueryBuilder
@3.0.0.Alpha
+#queryBuilder()Lorg/terracotta/context/query/QueryBuilder;
+#filter(Lorg/terracotta/context/query/Matcher;)Lorg/terracotta/context/query/QueryBuilder;
+#children()Lorg/terracotta/context/query/QueryBuilder;
+#descendants()Lorg/terracotta/context/query/QueryBuilder;
+#chain(Lorg/terracotta/context/query/Query;)Lorg/terracotta/context/query/QueryBuilder;
+#ensureUnique()Lorg/terracotta/context/query/QueryBuilder;
+#empty()Lorg/terracotta/context/query/QueryBuilder;
+#build()Lorg/terracotta/context/query/Query;
@3.0.0.m2
+#parent()Lorg/terracotta/context/query/QueryBuilder;
@3.8.0
-###org/terracotta/context/query/QueryBuilder

+###org/terracotta/context/query/Matcher
@3.0.0.Alpha
+#<init>()V
+#matches(Ljava/lang/Object;)Z
@3.8.0
-###org/terracotta/context/query/Matcher

+###org/terracotta/context/WeakIdentityHashMap
@3.0.0.Alpha
+#<init>()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.2.1
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
@3.8.0
-###org/terracotta/context/WeakIdentityHashMap

+###org/terracotta/context/WeakIdentityHashMap$Cleanable
@3.0.0.Alpha
+#clean()V
@3.8.0
-###org/terracotta/context/WeakIdentityHashMap$Cleanable

+###org/terracotta/context/ContextCreationListener
@3.0.0.Alpha
+#contextCreated(Ljava/lang/Object;)V
@3.8.0
-###org/terracotta/context/ContextCreationListener

+###org/terracotta/statistics/StatisticsManager
@3.0.0.Alpha
+#<init>()V
+#createOperationStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/lang/Class;)Lorg/terracotta/statistics/observer/OperationObserver;
+#createOperationStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Ljava/lang/Class;)Lorg/terracotta/statistics/observer/OperationObserver;
+#getOperationStatisticFor(Lorg/terracotta/statistics/observer/OperationObserver;)Lorg/terracotta/statistics/OperationStatistic;
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/concurrent/Callable;)V
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Ljava/util/concurrent/Callable;)V
@3.2.1
+#removePassThroughStatistics(Ljava/lang/Object;)V
@3.5.0
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Lorg/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Lorg/terracotta/statistics/ValueStatistic;)V
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/statistics/ValueStatistic;)V
+#tags([Ljava/lang/String;)Ljava/util/Set;
+#properties([Ljava/lang/String;)Ljava/util/Map;
-#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/concurrent/Callable;)V
-#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Ljava/util/concurrent/Callable;)V
@3.8.0
-###org/terracotta/statistics/StatisticsManager

+###org/terracotta/statistics/Statistic
@3.0.0.Alpha
+#name()Ljava/lang/String;
+#tags()[Ljava/lang/String;
@3.5.0
+#type()Lorg/terracotta/statistics/StatisticType;
@3.8.0
-###org/terracotta/statistics/Statistic

+###org/terracotta/statistics/OperationStatistic
@3.0.0.Alpha
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
@3.8.0
-###org/terracotta/statistics/OperationStatistic

+###org/terracotta/statistics/observer/ChainedOperationObserver
@3.0.0.Alpha
+#begin(J)V
+#end(JLjava/lang/Enum;)V
+#end(JLjava/lang/Enum;[J)V
@3.5.0
+#end(JJLjava/lang/Enum;)V
-#end(JLjava/lang/Enum;)V
-#end(JLjava/lang/Enum;[J)V
@3.8.0
-###org/terracotta/statistics/observer/ChainedOperationObserver

+###org/terracotta/statistics/observer/OperationObserver
@3.0.0.Alpha
+#begin()V
+#end(Ljava/lang/Enum;)V
+#end(Ljava/lang/Enum;[J)V
@3.5.0
-#end(Ljava/lang/Enum;[J)V
@3.8.0
-###org/terracotta/statistics/observer/OperationObserver

+###org/terracotta/statistics/observer/ChainedEventObserver
@3.0.0.Alpha
+#event(J[J)V
@3.5.0
+#event(JJ)V
-#event(J[J)V
@3.8.0
-###org/terracotta/statistics/observer/ChainedEventObserver

+###org/terracotta/statistics/observer/ChainedObserver
@3.0.0.Alpha
@3.8.0
-###org/terracotta/statistics/observer/ChainedObserver

+###org/terracotta/statistics/SourceStatistic
@3.0.0.Alpha
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
@3.6.1
+#getDerivedStatistics()Ljava/util/Collection;
@3.8.0
-###org/terracotta/statistics/SourceStatistic

+###org/terracotta/statistics/archive/StatisticArchive
@3.0.0.Alpha
+#<init>(I)V
+#<init>(ILorg/terracotta/statistics/archive/SampleSink;)V
+#setCapacity(I)V
+#accept(Lorg/terracotta/statistics/archive/Timestamped;)V
+#clear()V
+#getArchive()Ljava/util/List;
+#accept(Ljava/lang/Object;)V
@3.1.4
+#getArchive(J)Ljava/util/List;
@3.2.0.beta1
-#getArchive(J)Ljava/util/List;
@3.2.0
+#getArchive(J)Ljava/util/List;
@3.5.0
+#<init>(ILjava/util/function/Consumer;)V
+#add(Lorg/terracotta/statistics/Sample;)V
-#<init>(ILorg/terracotta/statistics/archive/SampleSink;)V
-#accept(Lorg/terracotta/statistics/archive/Timestamped;)V
-#accept(Ljava/lang/Object;)V
@3.8.0
-###org/terracotta/statistics/archive/StatisticArchive

+###org/terracotta/statistics/archive/Timestamped
@3.0.0.Alpha
+#getSample()Ljava/lang/Object;
+#getTimestamp()J
@3.5.0
-###org/terracotta/statistics/archive/Timestamped

+###org/terracotta/statistics/archive/DevNull
@3.0.0.Alpha
+#accept(Ljava/lang/Object;)V
@3.5.0
-###org/terracotta/statistics/archive/DevNull

+###org/terracotta/statistics/archive/SampleSink
@3.0.0.Alpha
+#accept(Ljava/lang/Object;)V
@3.5.0
-###org/terracotta/statistics/archive/SampleSink

+###org/terracotta/statistics/archive/StatisticSampler
@3.0.0.Alpha
+#<init>(JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;Lorg/terracotta/statistics/archive/SampleSink;)V
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;Lorg/terracotta/statistics/archive/SampleSink;)V
+#setPeriod(JLjava/util/concurrent/TimeUnit;)V
+#start()V
+#stop()V
+#shutdown()V
@3.5.0
+#<init>(JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;Ljava/util/function/Consumer;Ljava/util/function/LongSupplier;)V
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;Ljava/util/function/Consumer;Ljava/util/function/LongSupplier;)V
-#<init>(JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;Lorg/terracotta/statistics/archive/SampleSink;)V
-#<init>(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;Lorg/terracotta/statistics/archive/SampleSink;)V
@3.8.0
-###org/terracotta/statistics/archive/StatisticSampler

+###org/terracotta/statistics/archive/CircularBuffer
@3.0.0.Alpha
+#<init>(I)V
+#capacity()I
+#insert(Ljava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/lang/Class;)[Ljava/lang/Object;
@3.8.0
-###org/terracotta/statistics/archive/CircularBuffer

+###org/terracotta/statistics/Time$TimeSource
@3.0.0.Alpha
+#time()J
+#absoluteTime()J
@3.8.0
-###org/terracotta/statistics/Time$TimeSource

+###org/terracotta/statistics/StatisticsBuilder
@3.0.0.Alpha
+#operation(Ljava/lang/Class;)Lorg/terracotta/statistics/StatisticsBuilder$OperationStatisticBuilder;
@3.0.0.m2
-###org/terracotta/statistics/StatisticsBuilder

+###org/terracotta/statistics/derived/EventParameterSimpleMovingAverage
@3.0.0.Alpha
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#setWindow(JLjava/util/concurrent/TimeUnit;)V
+#value()Ljava/lang/Double;
+#averageStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#minimumStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#maximumStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#average()D
+#maximum()Ljava/lang/Long;
+#minimum()Ljava/lang/Long;
+#event(J[J)V
@3.5.0
-###org/terracotta/statistics/derived/EventParameterSimpleMovingAverage

+###org/terracotta/statistics/derived/OperationResultFilter
@3.0.0.Alpha
+#<init>(Ljava/util/Set;[Lorg/terracotta/statistics/observer/ChainedEventObserver;)V
+#begin(J)V
+#end(JLjava/lang/Enum;)V
+#end(JLjava/lang/Enum;[J)V
@3.5.0
+#end(JJLjava/lang/Enum;)V
-#end(JLjava/lang/Enum;)V
-#end(JLjava/lang/Enum;[J)V
@3.6.1
+#getTargets()Ljava/util/Set;
@3.8.0
-###org/terracotta/statistics/derived/OperationResultFilter

+###org/terracotta/statistics/derived/LatencySampling
@3.0.0.Alpha
+#<init>(Ljava/util/Set;D)V
+#begin(J)V
+#end(JLjava/lang/Enum;)V
+#end(JLjava/lang/Enum;[J)V
@3.5.0
-###org/terracotta/statistics/derived/LatencySampling

+###org/terracotta/statistics/derived/EventRateSimpleMovingAverage
@3.0.0.Alpha
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#setWindow(JLjava/util/concurrent/TimeUnit;)V
+#value()Ljava/lang/Double;
+#rateUsingSeconds()Ljava/lang/Double;
+#rate(Ljava/util/concurrent/TimeUnit;)Ljava/lang/Double;
+#event(J[J)V
+#value()Ljava/lang/Number;
@3.5.0
+#type()Lorg/terracotta/statistics/StatisticType;
+#event(JJ)V
+#value()Ljava/io/Serializable;
-#event(J[J)V
-#value()Ljava/lang/Number;
@3.8.0
-###org/terracotta/statistics/derived/EventRateSimpleMovingAverage

+###org/terracotta/statistics/derived/MinMaxAverage
@3.0.0.Alpha
+#<init>()V
+#<init>(Ljava/util/concurrent/Executor;)V
+#event(J[J)V
+#min()Ljava/lang/Long;
+#minStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#mean()Ljava/lang/Double;
+#meanStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#max()Ljava/lang/Long;
+#maxStatistic()Lorg/terracotta/statistics/ValueStatistic;
@3.5.0
-###org/terracotta/statistics/derived/MinMaxAverage

+###org/terracotta/statistics/jsr166e/LongAdder
@3.0.0.Alpha
+#<init>()V
+#add(J)V
+#increment()V
+#decrement()V
+#sum()J
+#reset()V
+#sumThenReset()J
+#toString()Ljava/lang/String;
+#longValue()J
+#intValue()I
+#floatValue()F
+#doubleValue()D
@3.5.0
-###org/terracotta/statistics/jsr166e/LongAdder

+###org/terracotta/statistics/jsr166e/ThreadLocalRandom
@3.0.0.Alpha
+#current()Lorg/terracotta/statistics/jsr166e/ThreadLocalRandom;
+#setSeed(J)V
+#nextInt(II)I
+#nextLong(J)J
+#nextLong(JJ)J
+#nextDouble(D)D
+#nextDouble(DD)D
@3.5.0
-###org/terracotta/statistics/jsr166e/ThreadLocalRandom

+###org/terracotta/statistics/jsr166e/LongMaxUpdater
@3.0.0.Alpha
+#<init>()V
+#update(J)V
+#max()J
+#reset()V
+#maxThenReset()J
+#toString()Ljava/lang/String;
+#longValue()J
+#intValue()I
+#floatValue()F
+#doubleValue()D
@3.5.0
-###org/terracotta/statistics/jsr166e/LongMaxUpdater

+###org/terracotta/statistics/util/VicariousThreadLocal
@3.0.0.Alpha
+#<init>()V
+#get()Ljava/lang/Object;
+#set(Ljava/lang/Object;)V
+#remove()V
+#poll()V
@3.5.0
-###org/terracotta/statistics/util/VicariousThreadLocal

+###org/terracotta/statistics/util/InThreadExecutor
@3.0.0.Alpha
+#execute(Ljava/lang/Runnable;)V
@3.5.0
-###org/terracotta/statistics/util/InThreadExecutor

+###org/terracotta/statistics/Time
@3.0.0.Alpha
+#time()J
+#absoluteTime()J
@3.8.0
-###org/terracotta/statistics/Time

+###org/terracotta/statistics/ValueStatistic
@3.0.0.Alpha
+#value()Ljava/lang/Number;
@3.5.0
+#type()Lorg/terracotta/statistics/StatisticType;
+#value()Ljava/io/Serializable;
-#value()Ljava/lang/Number;
@3.8.0
-###org/terracotta/statistics/ValueStatistic

+###org/terracotta/statistics/AbstractSourceStatistic
@3.0.0.Alpha
+#<init>()V
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
@3.6.1
+#getDerivedStatistics()Ljava/util/Collection;
@3.8.0
-###org/terracotta/statistics/AbstractSourceStatistic

+###org/terracotta/statistics/ConstantValueStatistic
@3.0.0.Alpha
+#instance(Ljava/lang/Number;)Lorg/terracotta/statistics/ValueStatistic;
+#value()Ljava/lang/Number;
@3.5.0
+#<init>(Lorg/terracotta/statistics/StatisticType;Ljava/io/Serializable;)V
+#value()Ljava/io/Serializable;
+#type()Lorg/terracotta/statistics/StatisticType;
-#instance(Ljava/lang/Number;)Lorg/terracotta/statistics/ValueStatistic;
-#value()Ljava/lang/Number;
@3.8.0
-###org/terracotta/statistics/ConstantValueStatistic

+###org/terracotta/statistics/StatisticsBuilder$OperationStatisticBuilder
@3.0.0.Alpha
+#<init>(Ljava/lang/Class;)V
+#build()Lorg/terracotta/statistics/observer/OperationObserver;
@3.0.0.m2
-###org/terracotta/statistics/StatisticsBuilder$OperationStatisticBuilder

+###org/terracotta/statistics/AbstractOperationStatistic
@3.0.0.Alpha
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/terracotta/statistics/ValueStatistic;
+#sum()J
+#begin()V
@3.5.0
+#end(Ljava/lang/Enum;)V
-#statistic(Ljava/lang/Enum;)Lorg/terracotta/statistics/ValueStatistic;
-#statistic(Ljava/util/Set;)Lorg/terracotta/statistics/ValueStatistic;
@3.8.0
-###org/terracotta/statistics/AbstractOperationStatistic

+###org/ehcache/CacheIterationException
@3.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/ehcache/CachePersistenceException
@3.0.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/ehcache/PersistentUserManagedCache
@3.0.0.m2
+#toMaintenance()Lorg/ehcache/Maintainable;
@3.0.0.rc3
+#destroy()V
-#toMaintenance()Lorg/ehcache/Maintainable;

+###org/ehcache/StateTransitionException
@3.0.0
+#<init>(Ljava/lang/Throwable;)V

+###org/ehcache/UserManagedCache
@3.0.0.m2
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;

+###org/ehcache/ValueSupplier
@3.0.0.rc2
+#value()Ljava/lang/Object;

+###org/ehcache/config/Builder
@3.0.0.m2
+#build()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/config/Builder

+###org/ehcache/config/EvictionAdvisor
@3.0.0
+#adviseAgainstEviction(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/ehcache/config/FluentCacheConfigurationBuilder
@3.8.0
+#build()Lorg/ehcache/config/CacheConfiguration;
+#getService(Ljava/lang/Class;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#getServices(Ljava/lang/Class;)Ljava/util/Collection;
+#withService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withService(Lorg/ehcache/config/Builder;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;Ljava/util/function/Predicate;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#updateServices(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withEvictionAdvisor(Lorg/ehcache/config/EvictionAdvisor;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withDefaultClassLoader()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withResourcePools(Lorg/ehcache/config/Builder;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#updateResourcePools(Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withExpiry(Lorg/ehcache/expiry/ExpiryPolicy;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withLoaderWriter(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutLoaderWriter()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withResilienceStrategy(Lorg/ehcache/spi/resilience/ResilienceStrategy;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withResilienceStrategy(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withDefaultResilienceStrategy()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeySerializingCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueSerializingCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeyCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeyCopier(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutKeyCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueCopier(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutValueCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeySerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeySerializer(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withDefaultKeySerializer()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueSerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueSerializer(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withDefaultValueSerializer()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#build()Ljava/lang/Object;

+###org/ehcache/config/FluentConfigurationBuilder
@3.8.0
+#getCache(Ljava/lang/String;)Lorg/ehcache/config/CacheConfiguration;
+#withCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withCache(Ljava/lang/String;Lorg/ehcache/config/Builder;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withoutCache(Ljava/lang/String;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#updateCache(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#updateCaches(Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#getService(Ljava/lang/Class;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#getServices(Ljava/lang/Class;)Ljava/util/Collection;
+#withService(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withService(Lorg/ehcache/config/Builder;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;Ljava/util/function/Predicate;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#updateServices(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#getClassLoader()Ljava/lang/ClassLoader;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withDefaultClassLoader()Lorg/ehcache/config/FluentConfigurationBuilder;

+###org/ehcache/config/SizedResourcePool
@3.0.0.rc3
+#getSize()J
+#getUnit()Lorg/ehcache/config/ResourceUnit;

+###org/ehcache/config/builders/CacheConfigurationBuilder
@3.0.0.m5
+#newCacheConfigurationBuilder(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#add(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#add(Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withEvictionVeto(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#remove(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#clearAllServiceConfig()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#getExistingServiceConfiguration(Ljava/lang/Class;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#getExistingServiceConfigurations(Ljava/lang/Class;)Ljava/util/List;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withResourcePools(Lorg/ehcache/config/builders/ResourcePoolsBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withExpiry(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#hasDefaultExpiry()Z
+#withLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withLoaderWriter(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withKeySerializingCopier()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withValueSerializingCopier()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withKeyCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withKeyCopier(Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withValueCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withValueCopier(Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withKeySerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withKeySerializer(Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withValueSerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withValueSerializer(Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withOrderedEventParallelism(I)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withEventListenersThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDiskStoreThreadPool(Ljava/lang/String;I)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withSizeOfMaxObjectGraph(J)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withSizeOfMaxObjectSize(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#build()Lorg/ehcache/config/CacheConfiguration;
+#build()Ljava/lang/Object;
@3.0.0.rc1
+#hasConfiguredExpiry()Z
-#hasDefaultExpiry()Z
@3.0.0.rc3
+#newCacheConfigurationBuilder(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#newCacheConfigurationBuilder(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#newCacheConfigurationBuilder(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.0.0
+#newCacheConfigurationBuilder(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#add(Lorg/ehcache/config/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withEvictionAdvisor(Lorg/ehcache/config/EvictionAdvisor;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDispatcherConcurrency(I)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#newCacheConfigurationBuilder(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#add(Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#withEvictionVeto(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#withOrderedEventParallelism(I)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.1.3
+#newCacheConfigurationBuilder(Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.5.0
*#withExpiry(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]
+#withExpiry(Lorg/ehcache/expiry/ExpiryPolicy;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withResilienceStrategy(Lorg/ehcache/spi/resilience/ResilienceStrategy;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withResilienceStrategy(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.8.0
*#add(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]
*#add(Lorg/ehcache/config/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]
+#getServices(Ljava/lang/Class;)Ljava/util/Collection;
+#withService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;Ljava/util/function/Predicate;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#updateServices(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
*#remove(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]
*#clearAllServiceConfig()Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]
*#getExistingServiceConfiguration(Ljava/lang/Class;)Lorg/ehcache/spi/service/ServiceConfiguration;[deprecated]
*#getExistingServiceConfigurations(Ljava/lang/Class;)Ljava/util/List;[deprecated]
+#withDefaultClassLoader()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#updateResourcePools(Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withoutLoaderWriter()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultResilienceStrategy()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withoutKeyCopier()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withoutValueCopier()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultKeySerializer()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultValueSerializer()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultDispatcherConcurrency()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultEventListenersThreadPool()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultDiskStoreThreadPool()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultSizeOfSettings()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#withDefaultValueSerializer()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueSerializer(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueSerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withDefaultKeySerializer()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeySerializer(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeySerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutValueCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueCopier(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutKeyCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeyCopier(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeyCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withValueSerializingCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withKeySerializingCopier()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withDefaultResilienceStrategy()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withResilienceStrategy(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withResilienceStrategy(Lorg/ehcache/spi/resilience/ResilienceStrategy;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutLoaderWriter()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withLoaderWriter(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withExpiry(Lorg/ehcache/expiry/ExpiryPolicy;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#updateResourcePools(Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withDefaultClassLoader()Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withEvictionAdvisor(Lorg/ehcache/config/EvictionAdvisor;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#updateServices(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;Ljava/util/function/Predicate;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
+#withService(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/config/FluentCacheConfigurationBuilder;
-#withResourcePools(Lorg/ehcache/config/builders/ResourcePoolsBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.10.1
*#withSizeOfMaxObjectGraph(J)Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]
*#withSizeOfMaxObjectSize(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]
*#withDefaultSizeOfSettings()Lorg/ehcache/config/builders/CacheConfigurationBuilder;[deprecated]

+###org/ehcache/config/builders/CacheEventListenerConfigurationBuilder
@3.0.0.m5
+#newEventListenerConfiguration(Ljava/lang/Class;Lorg/ehcache/event/EventType;[Lorg/ehcache/event/EventType;)Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#newEventListenerConfiguration(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventType;[Lorg/ehcache/event/EventType;)Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#newEventListenerConfiguration(Ljava/lang/Class;Ljava/util/Set;)Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#newEventListenerConfiguration(Lorg/ehcache/event/CacheEventListener;Ljava/util/Set;)Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#constructedWith([Ljava/lang/Object;)Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#eventOrdering(Lorg/ehcache/event/EventOrdering;)Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#ordered()Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#unordered()Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#firingMode(Lorg/ehcache/event/EventFiring;)Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#synchronous()Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#asynchronous()Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;
+#build()Lorg/ehcache/impl/config/event/DefaultCacheEventListenerConfiguration;
+#build()Ljava/lang/Object;

+###org/ehcache/config/builders/CacheManagerBuilder
@3.0.0.m5
+#build(Z)Lorg/ehcache/CacheManager;
+#build()Lorg/ehcache/CacheManager;
+#newCacheManager(Lorg/ehcache/config/Configuration;)Lorg/ehcache/CacheManager;
+#withCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withCache(Ljava/lang/String;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#with(Lorg/ehcache/config/builders/CacheManagerConfiguration;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#using(Lorg/ehcache/spi/service/Service;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withCopier(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withSerializer(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withDefaultSizeOfMaxObjectGraph(J)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withDefaultSizeOfMaxObjectSize(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withDefaultWriteBehindThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withDefaultDiskStoreThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withDefaultEventListenersThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#using(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#replacing(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#newCacheManagerBuilder()Lorg/ehcache/config/builders/CacheManagerBuilder;
+#persistence(Ljava/lang/String;)Lorg/ehcache/core/config/persistence/PersistenceConfiguration;
+#build()Ljava/lang/Object;
@3.0.0.rc1
+#persistence(Ljava/lang/String;)Lorg/ehcache/config/builders/CacheManagerConfiguration;
-#persistence(Ljava/lang/String;)Lorg/ehcache/core/config/persistence/PersistenceConfiguration;
@3.0.0.rc2
+#withCache(Ljava/lang/String;Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#with(Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
-#withCache(Ljava/lang/String;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
@3.0.0
+#withCache(Ljava/lang/String;Lorg/ehcache/config/Builder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
+#with(Lorg/ehcache/config/Builder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
-#withCache(Ljava/lang/String;Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
-#with(Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
@3.3.1
+#persistence(Ljava/io/File;)Lorg/ehcache/config/builders/CacheManagerConfiguration;
@3.8.0
*#replacing(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/builders/CacheManagerBuilder;[deprecated]
@3.10.1
*#withDefaultSizeOfMaxObjectGraph(J)Lorg/ehcache/config/builders/CacheManagerBuilder;[deprecated]
*#withDefaultSizeOfMaxObjectSize(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/CacheManagerBuilder;[deprecated]

+###org/ehcache/config/builders/CacheManagerConfiguration
@3.0.0.m5
+#builder(Lorg/ehcache/config/builders/CacheManagerBuilder;)Lorg/ehcache/config/builders/CacheManagerBuilder;

+###org/ehcache/config/builders/ConfigurationBuilder
@3.0.0.m5
+#newConfigurationBuilder()Lorg/ehcache/config/builders/ConfigurationBuilder;
+#build()Lorg/ehcache/config/Configuration;
+#addCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/config/builders/ConfigurationBuilder;
+#removeCache(Ljava/lang/String;)Lorg/ehcache/config/builders/ConfigurationBuilder;
+#addService(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/builders/ConfigurationBuilder;
+#findServiceByClass(Ljava/lang/Class;)Ljava/lang/Object;
+#removeService(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/builders/ConfigurationBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/builders/ConfigurationBuilder;
+#build()Ljava/lang/Object;
@3.0.0.rc1
-###org/ehcache/config/builders/ConfigurationBuilder

+###org/ehcache/config/builders/ExpiryPolicyBuilder$TriFunction
@3.7.0
+#apply(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/config/builders/ExpiryPolicyBuilder
@3.5.0
+#noExpiration()Lorg/ehcache/expiry/ExpiryPolicy;
+#timeToLiveExpiration(Ljava/time/Duration;)Lorg/ehcache/expiry/ExpiryPolicy;
+#timeToIdleExpiration(Ljava/time/Duration;)Lorg/ehcache/expiry/ExpiryPolicy;
+#expiry()Lorg/ehcache/config/builders/ExpiryPolicyBuilder;
+#create(Ljava/time/Duration;)Lorg/ehcache/config/builders/ExpiryPolicyBuilder;
+#access(Ljava/time/Duration;)Lorg/ehcache/config/builders/ExpiryPolicyBuilder;
+#update(Ljava/time/Duration;)Lorg/ehcache/config/builders/ExpiryPolicyBuilder;
+#build()Lorg/ehcache/expiry/ExpiryPolicy;
+#build()Ljava/lang/Object;
@3.7.0
+#create(Ljava/util/function/BiFunction;)Lorg/ehcache/config/builders/ExpiryPolicyBuilder;
+#access(Ljava/util/function/BiFunction;)Lorg/ehcache/config/builders/ExpiryPolicyBuilder;
+#update(Lorg/ehcache/config/builders/ExpiryPolicyBuilder$TriFunction;)Lorg/ehcache/config/builders/ExpiryPolicyBuilder;

+###org/ehcache/config/builders/PooledExecutionServiceConfigurationBuilder
@3.0.0.m5
+#newPooledExecutionServiceConfigurationBuilder()Lorg/ehcache/config/builders/PooledExecutionServiceConfigurationBuilder;
+#defaultPool(Ljava/lang/String;II)Lorg/ehcache/config/builders/PooledExecutionServiceConfigurationBuilder;
+#pool(Ljava/lang/String;II)Lorg/ehcache/config/builders/PooledExecutionServiceConfigurationBuilder;
+#build()Lorg/ehcache/impl/config/executor/PooledExecutionServiceConfiguration;
+#build()Ljava/lang/Object;
@3.8.0
+#newPooledExecutionServiceConfigurationBuilder(Lorg/ehcache/impl/config/executor/PooledExecutionServiceConfiguration;)Lorg/ehcache/config/builders/PooledExecutionServiceConfigurationBuilder;

+###org/ehcache/config/builders/ResourcePoolsBuilder
@3.0.0.m5
+#newResourcePoolsBuilder()Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#newResourcePoolsBuilder(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#with(Lorg/ehcache/config/ResourceType;JLorg/ehcache/config/ResourceUnit;Z)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#heap(JLorg/ehcache/config/ResourceUnit;)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#offheap(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#disk(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#disk(JLorg/ehcache/config/units/MemoryUnit;Z)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#build()Lorg/ehcache/config/ResourcePools;
+#build()Ljava/lang/Object;
@3.0.0.rc3
+#heap(J)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#with(Lorg/ehcache/config/ResourcePool;)Lorg/ehcache/config/builders/ResourcePoolsBuilder;
+#withReplacing(Lorg/ehcache/config/ResourcePool;)Lorg/ehcache/config/builders/ResourcePoolsBuilder;

+###org/ehcache/config/builders/UserManagedCacheBuilder
@3.0.0.m5
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#build(Z)Lorg/ehcache/UserManagedCache;
+#build()Lorg/ehcache/UserManagedCache;
+#with(Lorg/ehcache/config/builders/UserManagedCacheConfiguration;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#identifier(Ljava/lang/String;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withExpiry(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withEventDispatcher(Lorg/ehcache/core/events/CacheEventDispatcher;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withEventExecutors(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withEventListeners(Lorg/ehcache/config/builders/CacheEventListenerConfigurationBuilder;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withEventListeners([Lorg/ehcache/event/CacheEventListenerConfiguration;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withResourcePools(Lorg/ehcache/config/builders/ResourcePoolsBuilder;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withOrderedEventParallelism(I)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withEvictionVeto(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withKeySerializingCopier()Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withValueSerializingCopier()Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withKeyCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withValueCopier(Lorg/ehcache/spi/copy/Copier;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withKeySerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withValueSerializer(Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withSizeOfMaxObjectGraph(J)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withSizeOfMaxObjectSize(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#newUserManagedCacheBuilder(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#using(Lorg/ehcache/spi/service/Service;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#using(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#build()Ljava/lang/Object;
@3.0.0.rc1
-#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
@3.0.0
+#withEventListeners([Lorg/ehcache/core/events/CacheEventListenerConfiguration;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withDispatcherConcurrency(I)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
+#withEvictionAdvisor(Lorg/ehcache/config/EvictionAdvisor;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
-#withEventListeners([Lorg/ehcache/event/CacheEventListenerConfiguration;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
-#withOrderedEventParallelism(I)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
-#withEvictionVeto(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
@3.5.0
*#withExpiry(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;[deprecated]
+#withExpiry(Lorg/ehcache/expiry/ExpiryPolicy;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;
@3.10.1
*#withSizeOfMaxObjectGraph(J)Lorg/ehcache/config/builders/UserManagedCacheBuilder;[deprecated]
*#withSizeOfMaxObjectSize(JLorg/ehcache/config/units/MemoryUnit;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;[deprecated]

+###org/ehcache/config/builders/UserManagedCacheConfiguration
@3.0.0.m5
+#builder(Lorg/ehcache/config/builders/UserManagedCacheBuilder;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;

+###org/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder
@3.0.0.m5
+#enableCoalescing()Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#disableCoalescing()Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#batchSize(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#maxWriteDelay(JLjava/util/concurrent/TimeUnit;)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#queueSize(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#build()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#queueSize(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#build()Ljava/lang/Object;

+###org/ehcache/config/builders/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder
@3.0.0.m5
+#build()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
+#queueSize(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#queueSize(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#build()Ljava/lang/Object;

+###org/ehcache/config/builders/WriteBehindConfigurationBuilder
@3.0.0.m5
+#newBatchedWriteBehindConfiguration(JLjava/util/concurrent/TimeUnit;I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#newUnBatchedWriteBehindConfiguration()Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#buildWith(Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
+#queueSize(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/builders/WriteBehindConfigurationBuilder;
@3.0.0.rc1
-#buildWith(Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;

+###org/ehcache/core/CacheConfigurationChangeEvent
@3.0.0.m5
+#<init>(Lorg/ehcache/core/CacheConfigurationProperty;Ljava/lang/Object;Ljava/lang/Object;)V
+#getProperty()Lorg/ehcache/core/CacheConfigurationProperty;
+#getNewValue()Ljava/lang/Object;
+#getOldValue()Ljava/lang/Object;

+###org/ehcache/core/CacheConfigurationChangeListener
@3.0.0.m5
+#cacheConfigurationChange(Lorg/ehcache/core/CacheConfigurationChangeEvent;)V

+###org/ehcache/core/CacheConfigurationProperty
@3.0.0.m5
+#values()[Lorg/ehcache/core/CacheConfigurationProperty;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/CacheConfigurationProperty;

+###org/ehcache/core/Ehcache$GetAllFunction
@3.1.0
+#<init>()V
+#apply(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/core/Ehcache$PutAllFunction
@3.1.0
+#<init>(Lorg/slf4j/Logger;Ljava/util/Map;Lorg/ehcache/expiry/Expiry;)V
+#apply(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#getEntriesToRemap()Ljava/util/Map;
+#getActualPutCount()Ljava/util/concurrent/atomic/AtomicInteger;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@3.3.0
+#getActualUpdateCount()Ljava/util/concurrent/atomic/AtomicInteger;
@3.5.0
+#<init>(Lorg/slf4j/Logger;Ljava/util/Map;Lorg/ehcache/expiry/ExpiryPolicy;)V
-#<init>(Lorg/slf4j/Logger;Ljava/util/Map;Lorg/ehcache/expiry/Expiry;)V

+###org/ehcache/core/Ehcache$RemoveAllFunction
@3.1.0
+#<init>()V
+#apply(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#getActualRemoveCount()Ljava/util/concurrent/atomic/AtomicInteger;
+#apply(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/core/Ehcache
@3.0.0.m5
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
+#getBulkMethodEntries()Ljava/util/Map;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#clear()V
+#iterator()Ljava/util/Iterator;
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;
+#addHook(Lorg/ehcache/spi/LifeCycled;)V
+#getJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
+#getCacheLoaderWriter()Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
@3.0.0.rc1
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
@3.0.0.rc2
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
@3.0.0
+#addHook(Lorg/ehcache/core/spi/LifeCycled;)V
-#addHook(Lorg/ehcache/spi/LifeCycled;)V
@3.5.0
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
+#doPutAll(Ljava/util/Map;)V
+#doPutIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#createJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
-#getBulkMethodEntries()Ljava/util/Map;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#put(Ljava/lang/Object;Ljava/lang/Object;)V
-#containsKey(Ljava/lang/Object;)Z
-#remove(Ljava/lang/Object;)V
-#clear()V
-#iterator()Ljava/util/Iterator;
-#getAll(Ljava/util/Set;)Ljava/util/Map;
-#putAll(Ljava/util/Map;)V
-#removeAll(Ljava/util/Set;)V
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
-#init()V
-#close()V
-#getStatus()Lorg/ehcache/Status;
-#addHook(Lorg/ehcache/core/spi/LifeCycled;)V
-#getJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
@3.7.0
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.10.1
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/core/events/CacheEventDispatcher;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V

+###org/ehcache/core/EhcacheBase$Jsr107CacheBase
@3.5.0
+#loadAll(Ljava/util/Set;ZLjava/util/function/Function;)V
+#specIterator()Ljava/util/Iterator;
+#getNoLoader(Ljava/lang/Object;)Ljava/lang/Object;
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#remove(Ljava/lang/Object;)Z
+#removeAll()V

+###org/ehcache/core/EhcacheBase
@3.5.0
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#clear()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#iterator()Ljava/util/Iterator;
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;
+#addHook(Lorg/ehcache/core/spi/LifeCycled;)V
+#getBulkMethodEntries()Ljava/util/Map;

+###org/ehcache/core/EhcacheManager
@3.0.0.m5
+#<init>(Lorg/ehcache/config/Configuration;)V
+#<init>(Lorg/ehcache/config/Configuration;Ljava/util/Collection;)V
+#<init>(Lorg/ehcache/config/Configuration;Ljava/util/Collection;Z)V
+#getCache(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/Cache;
+#removeCache(Ljava/lang/String;)V
+#createCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/Cache;
+#registerListener(Lorg/ehcache/core/events/CacheManagerListener;)V
+#deregisterListener(Lorg/ehcache/core/events/CacheManagerListener;)V
+#init()V
+#getStatus()Lorg/ehcache/Status;
+#close()V
+#getRuntimeConfiguration()Lorg/ehcache/config/RuntimeConfiguration;
+#toMaintenance()Lorg/ehcache/Maintainable;
+#destroyCache(Ljava/lang/String;)V
@3.0.0.rc3
+#destroy()V
-#toMaintenance()Lorg/ehcache/Maintainable;
@3.0.0
+#createCache(Ljava/lang/String;Lorg/ehcache/config/Builder;)Lorg/ehcache/Cache;
+#getRuntimeConfiguration()Lorg/ehcache/config/Configuration;
-#getRuntimeConfiguration()Lorg/ehcache/config/RuntimeConfiguration;
@3.7.0
+#<init>(Lorg/ehcache/config/Configuration;Ljava/util/function/UnaryOperator;Z)V

+###org/ehcache/core/HumanReadable
@3.1.2
+#readableString()Ljava/lang/String;

+###org/ehcache/core/InternalCache
@3.0.0.rc1
+#getBulkMethodEntries()Ljava/util/Map;
+#getJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
+#getCacheLoaderWriter()Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#addHook(Lorg/ehcache/spi/LifeCycled;)V
@3.0.0
+#addHook(Lorg/ehcache/core/spi/LifeCycled;)V
-#addHook(Lorg/ehcache/spi/LifeCycled;)V
@3.5.0
+#createJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
-#getJsr107Cache()Lorg/ehcache/core/Jsr107Cache;

+###org/ehcache/core/InternalStatus$Transition
@3.0.0.m5
+#get()Lorg/ehcache/core/InternalStatus;
+#succeeded()V
+#failed()V
+#from()Lorg/ehcache/core/InternalStatus;
+#to()Lorg/ehcache/core/InternalStatus;
+#done()Z

+###org/ehcache/core/Jsr107Cache
@3.0.0.m5
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#getAndRemove(Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#removeAll()V
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;Lorg/ehcache/function/NullaryFunction;Lorg/ehcache/function/NullaryFunction;)Ljava/lang/Object;
+#loadAll(Ljava/util/Set;ZLorg/ehcache/function/Function;)V
@3.0.0.rc1
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/lang/Object;
+#loadAll(Ljava/util/Set;ZLorg/ehcache/core/spi/function/Function;)V
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;Lorg/ehcache/function/NullaryFunction;Lorg/ehcache/function/NullaryFunction;)Ljava/lang/Object;
-#loadAll(Ljava/util/Set;ZLorg/ehcache/function/Function;)V
@3.0.0.rc2
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)V
+#specIterator()Ljava/util/Iterator;
+#getNoLoader(Ljava/lang/Object;)Ljava/lang/Object;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/lang/Object;
@3.5.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
+#loadAll(Ljava/util/Set;ZLjava/util/function/Function;)V
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)V
-#loadAll(Ljava/util/Set;ZLorg/ehcache/core/spi/function/Function;)V

+###org/ehcache/core/PersistentUserManagedEhcache
@3.0.0.m5
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
+#toMaintenance()Lorg/ehcache/Maintainable;
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#clear()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#iterator()Ljava/util/Iterator;
+#addHook(Lorg/ehcache/spi/LifeCycled;)V
@3.0.0.rc1
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/core/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
@3.0.0.rc2
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/core/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/core/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
@3.0.0.rc3
+#destroy()V
-#toMaintenance()Lorg/ehcache/Maintainable;
@3.0.0
+#addHook(Lorg/ehcache/core/spi/LifeCycled;)V
-#addHook(Lorg/ehcache/spi/LifeCycled;)V
@3.2.0.beta1
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/core/spi/service/DiskResourceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/core/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
@3.5.0
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/core/spi/service/DiskResourceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/core/spi/service/DiskResourceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Ljava/lang/String;)V

+###org/ehcache/core/collections/ConcurrentWeakIdentityHashMap
@3.2.2
+#<init>()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
@3.3.0
-###org/ehcache/core/collections/ConcurrentWeakIdentityHashMap

+###org/ehcache/core/config/CoreConfigurationBuilder
@3.8.0
+#build()Lorg/ehcache/config/Configuration;
+#getCache(Ljava/lang/String;)Lorg/ehcache/config/CacheConfiguration;
+#withCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#withoutCache(Ljava/lang/String;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#updateCache(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#updateCaches(Ljava/util/function/UnaryOperator;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#getServices(Ljava/lang/Class;)Ljava/util/Collection;
+#withService(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;Ljava/util/function/Predicate;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#updateServices(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#getClassLoader()Ljava/lang/ClassLoader;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#withDefaultClassLoader()Lorg/ehcache/core/config/CoreConfigurationBuilder;
+#withDefaultClassLoader()Lorg/ehcache/config/FluentConfigurationBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#updateServices(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withoutServices(Ljava/lang/Class;Ljava/util/function/Predicate;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withService(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#updateCaches(Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#updateCache(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withoutCache(Ljava/lang/String;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#withCache(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#build()Ljava/lang/Object;

+###org/ehcache/core/config/DefaultConfiguration
@3.0.0.m5
+#<init>(Lorg/ehcache/config/Configuration;)V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/util/Map;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceCreationConfiguration;)V
+#getCacheConfigurations()Ljava/util/Map;
+#getServiceCreationConfigurations()Ljava/util/Collection;
+#getClassLoader()Ljava/lang/ClassLoader;
+#addCacheConfiguration(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)V
+#removeCacheConfiguration(Ljava/lang/String;)V
+#replaceCacheConfiguration(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/config/CacheRuntimeConfiguration;)V
@3.0.0.rc2
+#<init>(Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceCreationConfiguration;)V
-#<init>(Ljava/lang/ClassLoader;)V
@3.1.2
+#readableString()Ljava/lang/String;
@3.8.0
+#derive()Lorg/ehcache/config/FluentConfigurationBuilder;

+###org/ehcache/core/config/ExpiryUtils
@3.5.0
+#<init>()V
+#isExpiryDurationInfinite(Ljava/time/Duration;)Z
+#convertToExpiry(Lorg/ehcache/expiry/ExpiryPolicy;)Lorg/ehcache/expiry/Expiry;
+#convertToExpiryPolicy(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/expiry/ExpiryPolicy;
+#jucTimeUnitToTemporalUnit(Ljava/util/concurrent/TimeUnit;)Ljava/time/temporal/TemporalUnit;
+#getExpirationMillis(JLjava/time/Duration;)J
+#getExpiryForCreation(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/expiry/ExpiryPolicy;)Ljava/time/Duration;

+###org/ehcache/core/config/store/StoreEventSourceConfiguration
@3.0.0.rc1
+#getOrderedEventParallelism()I
@3.0.0
+#getDispatcherConcurrency()I
-#getOrderedEventParallelism()I

+###org/ehcache/core/config/store/StoreStatisticsConfiguration
@3.6.0
+#<init>(Z)V
+#isOperationStatisticsEnabled()Z
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Ljava/lang/Boolean;
+#build(Ljava/lang/Boolean;)Lorg/ehcache/core/config/store/StoreStatisticsConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/core/events/CacheEventDispatcher
@3.0.0.m5
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#shutdown()V
+#setListenerSource(Lorg/ehcache/Cache;)V
+#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V
@3.0.0.rc2
+#setStoreEventSource(Lorg/ehcache/core/spi/store/events/StoreEventSource;)V
-#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V

+###org/ehcache/core/events/CacheEventDispatcherFactory
@3.0.0.m5
+#createCacheEventDispatcher(Lorg/ehcache/core/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/events/CacheEventDispatcher;
+#releaseCacheEventDispatcher(Lorg/ehcache/core/events/CacheEventDispatcher;)V
@3.0.0.rc2
+#createCacheEventDispatcher(Lorg/ehcache/core/spi/store/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/events/CacheEventDispatcher;
-#createCacheEventDispatcher(Lorg/ehcache/core/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/events/CacheEventDispatcher;

+###org/ehcache/core/events/CacheEventListenerConfiguration
@3.0.0
+#firingMode()Lorg/ehcache/event/EventFiring;
+#orderingMode()Lorg/ehcache/event/EventOrdering;
+#fireOn()Ljava/util/EnumSet;

+###org/ehcache/core/events/CacheEventListenerProvider
@3.0.0
+#createEventListener(Ljava/lang/String;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/event/CacheEventListener;
+#releaseEventListener(Lorg/ehcache/event/CacheEventListener;)V

+###org/ehcache/core/events/CacheEvents
@3.0.0.m5
+#expiry(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#eviction(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#creation(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#removal(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;
+#update(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/Cache;)Lorg/ehcache/event/CacheEvent;

+###org/ehcache/core/events/CacheManagerListener
@3.0.0.m5
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V

+###org/ehcache/core/events/EventListenerWrapper
@3.0.0.m5
+#<init>(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventFiring;Lorg/ehcache/event/EventOrdering;Ljava/util/EnumSet;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
@3.0.0.rc1
-###org/ehcache/core/events/EventListenerWrapper

+###org/ehcache/core/events/NullStoreEventDispatcher
@3.2.2
+#<init>()V
+#nullStoreEventDispatcher()Lorg/ehcache/core/events/StoreEventDispatcher;
+#eventSink()Lorg/ehcache/core/events/StoreEventSink;
+#releaseEventSink(Lorg/ehcache/core/events/StoreEventSink;)V
+#releaseEventSinkAfterFailure(Lorg/ehcache/core/events/StoreEventSink;Ljava/lang/Throwable;)V
+#reset(Lorg/ehcache/core/events/StoreEventSink;)V
+#addEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#removeEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#addEventFilter(Lorg/ehcache/core/spi/store/events/StoreEventFilter;)V
+#setEventOrdering(Z)V
+#isEventOrdering()Z
@3.3.0
-###org/ehcache/core/events/NullStoreEventDispatcher

+###org/ehcache/core/events/StateChangeListener
@3.0.0.m5
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V

+###org/ehcache/core/events/StoreEventDispatcher
@3.0.0.m5
+#eventSink()Lorg/ehcache/core/events/StoreEventSink;
+#releaseEventSink(Lorg/ehcache/core/events/StoreEventSink;)V
+#releaseEventSinkAfterFailure(Lorg/ehcache/core/events/StoreEventSink;Ljava/lang/Throwable;)V
@3.0.0.rc3
+#reset(Lorg/ehcache/core/events/StoreEventSink;)V

+###org/ehcache/core/events/StoreEventSink
@3.0.0.m5
+#removed(Ljava/lang/Object;Ljava/lang/Object;)V
+#updated(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#expired(Ljava/lang/Object;Ljava/lang/Object;)V
+#created(Ljava/lang/Object;Ljava/lang/Object;)V
+#evicted(Ljava/lang/Object;Ljava/lang/Object;)V
@3.0.0.rc2
+#removed(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;)V
+#updated(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;Ljava/lang/Object;)V
+#expired(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;)V
+#evicted(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;)V
-#removed(Ljava/lang/Object;Ljava/lang/Object;)V
-#updated(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#expired(Ljava/lang/Object;Ljava/lang/Object;)V
-#evicted(Ljava/lang/Object;Ljava/lang/Object;)V
@3.5.0
+#removed(Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#updated(Ljava/lang/Object;Ljava/util/function/Supplier;Ljava/lang/Object;)V
+#expired(Ljava/lang/Object;Ljava/util/function/Supplier;)V
+#evicted(Ljava/lang/Object;Ljava/util/function/Supplier;)V
-#removed(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;)V
-#updated(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;Ljava/lang/Object;)V
-#expired(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;)V
-#evicted(Ljava/lang/Object;Lorg/ehcache/ValueSupplier;)V

+###org/ehcache/core/exceptions/ExceptionFactory
@3.0.0.m5
+#newCacheWritingException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheWritingException;
+#newCacheLoadingException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheLoadingException;
@3.0.0
+#newCacheWritingException(Ljava/lang/Exception;)Lorg/ehcache/spi/loaderwriter/CacheWritingException;
+#newCacheLoadingException(Ljava/lang/Exception;)Lorg/ehcache/spi/loaderwriter/CacheLoadingException;
-#newCacheWritingException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheWritingException;
-#newCacheLoadingException(Ljava/lang/Exception;)Lorg/ehcache/exceptions/CacheLoadingException;
@3.5.0
+#newCacheWritingException(Ljava/lang/Exception;Ljava/lang/Exception;)Lorg/ehcache/spi/loaderwriter/CacheWritingException;
+#newCacheLoadingException(Ljava/lang/Exception;Ljava/lang/Exception;)Lorg/ehcache/spi/loaderwriter/CacheLoadingException;

+###org/ehcache/core/exceptions/StorePassThroughException
@3.0.0.rc2
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#handleRuntimeException(Ljava/lang/RuntimeException;)V
@3.5.0
+#fillInStackTrace()Ljava/lang/Throwable;
+#handleException(Ljava/lang/Exception;)Lorg/ehcache/spi/resilience/StoreAccessException;
-#handleRuntimeException(Ljava/lang/RuntimeException;)V

+###org/ehcache/core/internal/resilience/ThrowingResilienceStrategy
@3.7.0
+#<init>()V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#clearFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#iteratorFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)Lorg/ehcache/Cache$Entry;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)V

+###org/ehcache/core/internal/statistics/DefaultCacheStatistics
@3.9.1
+#<init>(Lorg/ehcache/core/InternalCache;)V
+#registerDerivedStatistic(Ljava/lang/Class;Ljava/lang/String;Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#getKnownStatistics()Ljava/util/Map;
+#getTierStatistics()Ljava/util/Map;
+#clear()V
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getCacheExpirations()J

+###org/ehcache/core/internal/statistics/DefaultStatisticsService
@3.9.1
+#<init>()V
+#getCacheStatistics(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheStatistics;
+#registerWithParent(Ljava/lang/Object;Ljava/lang/Object;)V
+#registerStoreStatistics(Lorg/ehcache/core/spi/store/Store;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;Ljava/lang/String;)Lorg/ehcache/core/statistics/OperationStatistic;
+#deRegisterFromParent(Ljava/lang/Object;Ljava/lang/Object;)V
+#cleanForNode(Ljava/lang/Object;)V
+#registerStatistic(Ljava/lang/Object;Ljava/lang/String;Lorg/ehcache/core/statistics/StatisticType;Ljava/util/Set;Ljava/util/function/Supplier;)V
+#createOperationStatistics(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Lorg/ehcache/core/statistics/OperationObserver;
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V

+###org/ehcache/core/internal/statistics/DefaultStatisticsServiceFactory
@3.9.1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/service/StatisticsService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/core/internal/statistics/DefaultTierStatistics
@3.9.1
+#<init>(Lorg/ehcache/Cache;Ljava/lang/String;)V
+#getKnownStatistics()Ljava/util/Map;
+#clear()V
+#getHits()J
+#getMisses()J
+#getPuts()J
+#getRemovals()J
+#getEvictions()J
+#getExpirations()J
+#getMappings()J
+#getAllocatedByteSize()J
+#getOccupiedByteSize()J

+###org/ehcache/core/internal/statistics/DelegatedMappedOperationStatistics
@3.9.1
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/MappedOperationStatistic;)V
+#type()Ljava/lang/Class;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#begin()V
+#end(Ljava/lang/Enum;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V

+###org/ehcache/core/internal/statistics/DelegatingOperationObserver
@3.9.1
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/observer/OperationObserver;)V
+#begin()V
+#end(Ljava/lang/Enum;)V

+###org/ehcache/core/internal/statistics/DelegatingOperationStatistic
@3.9.1
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/OperationStatistic;)V
+#type()Ljava/lang/Class;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#begin()V
+#end(Ljava/lang/Enum;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V

+###org/ehcache/core/internal/statistics/StatsUtils
@3.9.1
+#hasTag(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#hasProperty(Ljava/lang/String;Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#findStatisticOnDescendants(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#findStatisticOnDescendants(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#findOperationStatisticOnChildren(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/statistics/OperationStatistic;
+#findTiers(Lorg/ehcache/Cache;)[Ljava/lang/String;
+#findLowestTier([Ljava/lang/String;)Ljava/lang/String;
+#hasOperationStat(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Z
+#registerClearNotification(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/util/function/Consumer;)V

+###org/ehcache/core/internal/util/ValueSuppliers
@3.0.0.rc2
+#supplierOf(Ljava/lang/Object;)Lorg/ehcache/ValueSupplier;

+###org/ehcache/core/osgi/EhcacheActivator
@3.7.0
+#<init>()V
+#start(Lorg/osgi/framework/BundleContext;)V
+#stop(Lorg/osgi/framework/BundleContext;)V
+#getCoreBundle()Lorg/osgi/framework/BundleContext;

+###org/ehcache/core/osgi/OsgiServiceLoader
@3.7.0
+#<init>()V
+#load(Ljava/lang/Class;)Ljava/lang/Iterable;

+###org/ehcache/core/osgi/SafeOsgi
@3.7.0
+#useOSGiServiceLoading()Z

+###org/ehcache/core/resilience/DefaultRecoveryStore
@3.5.0
+#<init>(Lorg/ehcache/core/spi/store/Store;)V
+#obliterate()V
+#obliterate(Ljava/lang/Object;)V

+###org/ehcache/core/spi/LifeCycled
@3.0.0
+#init()V
+#close()V

+###org/ehcache/core/spi/LifeCycledAdapter
@3.0.0.m5
+#<init>()V
+#init()V
+#close()V

+###org/ehcache/core/spi/ServiceLocator$DependencySet
@3.7.0
+#<init>()V
+#with(Lorg/ehcache/spi/service/Service;)Lorg/ehcache/core/spi/ServiceLocator$DependencySet;
+#with(Ljava/lang/Iterable;)Lorg/ehcache/core/spi/ServiceLocator$DependencySet;
+#with(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/ServiceLocator$DependencySet;
+#with(Ljava/lang/Class;)Lorg/ehcache/core/spi/ServiceLocator$DependencySet;
+#withoutMandatoryServices()Lorg/ehcache/core/spi/ServiceLocator$DependencySet;
+#contains(Ljava/lang/Class;)Z
+#providerOf(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#providersOf(Ljava/lang/Class;)Ljava/util/Collection;
+#build()Lorg/ehcache/core/spi/ServiceLocator;
+#build()Ljava/lang/Object;

+###org/ehcache/core/spi/ServiceLocator
@3.0.0.m5
+#<init>([Lorg/ehcache/spi/service/Service;)V
+#addService(Lorg/ehcache/spi/service/Service;)V
+#getOrCreateServiceFor(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
+#getService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#findAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#findAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;
+#findSingletonAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;
+#findSingletonAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#startAllServices()V
+#stopAllServices()V
+#loadDependenciesOf(Ljava/lang/Class;)V
+#knowsServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Z
@3.0.0.rc1
+#getServicesOfType(Ljava/lang/Class;)Ljava/util/Collection;
@3.0.0.rc2
-###org/ehcache/core/spi/ServiceLocator

+###org/ehcache/core/spi/service/CacheManagerProviderService
@3.0.0.m5
+#getCacheManager()Lorg/ehcache/core/EhcacheManager;
@3.0.0.rc1
+#getCacheManager()Lorg/ehcache/core/spi/cache/InternalCacheManager;
-#getCacheManager()Lorg/ehcache/core/EhcacheManager;
@3.0.0.rc2
+#getCacheManager()Lorg/ehcache/core/spi/store/InternalCacheManager;
-#getCacheManager()Lorg/ehcache/core/spi/cache/InternalCacheManager;

+###org/ehcache/core/spi/service/DiskResourceService
@3.2.0.beta1
+#createPersistenceContextWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;

+###org/ehcache/core/spi/service/ExecutionService
@3.0.0.m5
+#getScheduledExecutor(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#getOrderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#getUnorderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;

+###org/ehcache/core/spi/service/FileBasedPersistenceContext
@3.0.0.m5
+#getDirectory()Ljava/io/File;

+###org/ehcache/core/spi/service/LocalPersistenceService$SafeSpaceIdentifier
@3.2.0.beta1
+#getRoot()Ljava/io/File;

+###org/ehcache/core/spi/service/LocalPersistenceService
@3.0.0.m5
+#getOrCreatePersistenceSpace(Ljava/lang/String;)Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;
+#destroyPersistenceSpace(Ljava/lang/String;)V
+#createPersistenceContextWithin(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;
+#destroyAllPersistenceSpaces()V
@3.0.0.rc1
+#destroyAll()V
-#destroyPersistenceSpace(Ljava/lang/String;)V
-#destroyAllPersistenceSpaces()V
@3.1.0
+#createPersistenceContextWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;
-#getOrCreatePersistenceSpace(Ljava/lang/String;)Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;
-#createPersistenceContextWithin(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;
-#destroyAll()V
@3.2.0.beta1
+#createSafeSpaceIdentifier(Ljava/lang/String;Ljava/lang/String;)Lorg/ehcache/core/spi/service/LocalPersistenceService$SafeSpaceIdentifier;
+#createSafeSpace(Lorg/ehcache/core/spi/service/LocalPersistenceService$SafeSpaceIdentifier;)V
+#destroySafeSpace(Lorg/ehcache/core/spi/service/LocalPersistenceService$SafeSpaceIdentifier;Z)V
+#destroyAll(Ljava/lang/String;)V
-#createPersistenceContextWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;

+###org/ehcache/core/spi/service/ServiceFactory$RequiresConfiguration
@3.2.0.beta1

+###org/ehcache/core/spi/service/ServiceFactory
@3.0.0.m5
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
+#getServiceType()Ljava/lang/Class;
@3.6.1
+#isMandatory()Z
+#rank()I

+###org/ehcache/core/spi/service/ServiceUtils
@3.2.2
+#findAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#findAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;
+#findSingletonAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;
+#findSingletonAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
@3.3.0
-###org/ehcache/core/spi/service/ServiceUtils

+###org/ehcache/core/spi/service/StatisticsService
@3.3.0
+#getCacheStatistics(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheStatistics;
@3.5.0
+#getConfiguration()Lorg/ehcache/core/spi/service/StatisticsServiceConfiguration;
@3.6.1
-#getConfiguration()Lorg/ehcache/core/spi/service/StatisticsServiceConfiguration;
@3.8.0
+#createCacheRegistry(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/util/function/LongSupplier;)V
+#registerCacheStatistics(Ljava/lang/String;)V
+#getCacheDescriptors(Ljava/lang/String;)Ljava/util/Collection;
+#registerDerivedStatistics(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/lang/String;Ljava/lang/Enum;Ljava/lang/String;Lorg/ehcache/core/statistics/LatencyHistogramConfiguration;)V
+#collectStatistics(Ljava/lang/String;Ljava/util/Collection;J)Ljava/util/Map;
+#registerWithParent(Ljava/lang/Object;Ljava/lang/Object;)V
+#registerStoreStatistics(Lorg/ehcache/core/spi/store/Store;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;Ljava/lang/String;)Lorg/ehcache/core/statistics/OperationStatistic;
+#deRegisterFromParent(Ljava/lang/Object;Ljava/lang/Object;)V
+#cleanForNode(Ljava/lang/Object;)V
+#registerStatistic(Ljava/lang/Object;Ljava/lang/String;Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/Set;Ljava/util/function/Supplier;)V
+#createOperationStatistics(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Lorg/ehcache/core/statistics/OperationObserver;
@3.9.1
+#registerStatistic(Ljava/lang/Object;Ljava/lang/String;Lorg/ehcache/core/statistics/StatisticType;Ljava/util/Set;Ljava/util/function/Supplier;)V
-#createCacheRegistry(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/util/function/LongSupplier;)V
-#registerCacheStatistics(Ljava/lang/String;)V
-#getCacheDescriptors(Ljava/lang/String;)Ljava/util/Collection;
-#registerDerivedStatistics(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/lang/String;Ljava/lang/Enum;Ljava/lang/String;Lorg/ehcache/core/statistics/LatencyHistogramConfiguration;)V
-#collectStatistics(Ljava/lang/String;Ljava/util/Collection;J)Ljava/util/Map;
-#registerStatistic(Ljava/lang/Object;Ljava/lang/String;Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/Set;Ljava/util/function/Supplier;)V

+###org/ehcache/core/spi/store/AbstractValueHolder
@3.2.2
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#setExpirationTime(JLjava/util/concurrent/TimeUnit;)V
+#accessed(JLorg/ehcache/expiry/Duration;)V
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#setLastAccessTime(JLjava/util/concurrent/TimeUnit;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
+#toString()Ljava/lang/String;
@3.3.0
-###org/ehcache/core/spi/store/AbstractValueHolder

+###org/ehcache/core/spi/store/AbstractWrapperStoreProvider
@3.7.0
+#<init>()V
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V

+###org/ehcache/core/spi/store/ConfigurationChangeSupport
@3.0.0.rc2
+#getConfigurationChangeListeners()Ljava/util/List;

+###org/ehcache/core/spi/store/InternalCacheManager
@3.0.0.rc2
+#registerListener(Lorg/ehcache/core/events/CacheManagerListener;)V
+#deregisterListener(Lorg/ehcache/core/events/CacheManagerListener;)V

+###org/ehcache/core/spi/store/Store$Configuration
@3.0.0.rc2
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#getKeySerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getValueSerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getOrderedEventParallelism()I
@3.0.0
+#getEvictionAdvisor()Lorg/ehcache/config/EvictionAdvisor;
+#getDispatcherConcurrency()I
-#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
-#getOrderedEventParallelism()I
@3.5.0
+#getExpiry()Lorg/ehcache/expiry/ExpiryPolicy;
-#getExpiry()Lorg/ehcache/expiry/Expiry;
@3.6.0
+#isOperationStatisticsEnabled()Z
@3.7.0
+#getCacheLoaderWriter()Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#useLoaderInAtomics()Z

+###org/ehcache/core/spi/store/Store$Iterator
@3.0.0.rc2
+#hasNext()Z
+#next()Ljava/lang/Object;

+###org/ehcache/core/spi/store/Store$Provider
@3.0.0.rc2
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
+#rank(Ljava/util/Set;Ljava/util/Collection;)I

+###org/ehcache/core/spi/store/Store$PutStatus
@3.0.0.rc2
+#values()[Lorg/ehcache/core/spi/store/Store$PutStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/spi/store/Store$PutStatus;

+###org/ehcache/core/spi/store/Store$RemoveStatus
@3.0.0.rc2
+#values()[Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;

+###org/ehcache/core/spi/store/Store$ReplaceStatus
@3.0.0.rc2
+#values()[Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;

+###org/ehcache/core/spi/store/Store$ValueHolder
@3.0.0.rc2
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
@3.6.2
-#hitRate(JLjava/util/concurrent/TimeUnit;)F
-#hits()J
@3.7.0
+#creationTime()J
+#expirationTime()J
+#isExpired(J)Z
+#lastAccessTime()J
+#get()Ljava/lang/Object;
-#creationTime(Ljava/util/concurrent/TimeUnit;)J
-#expirationTime(Ljava/util/concurrent/TimeUnit;)J
-#isExpired(JLjava/util/concurrent/TimeUnit;)Z
-#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J

+###org/ehcache/core/spi/store/Store
@3.0.0.rc2
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
@3.5.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
@3.7.0
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndCompute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeAndGet(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.8.2
+#getAndPut(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;

+###org/ehcache/core/spi/store/WrapperStore$Provider
@3.7.0
+#wrapperStoreRank(Ljava/util/Collection;)I

+###org/ehcache/core/spi/store/WrapperStore
@3.7.0

+###org/ehcache/core/spi/store/events/StoreEvent
@3.0.0.rc2
+#getType()Lorg/ehcache/event/EventType;
+#getKey()Ljava/lang/Object;
+#getNewValue()Ljava/lang/Object;
+#getOldValue()Ljava/lang/Object;

+###org/ehcache/core/spi/store/events/StoreEventFilter
@3.0.0.rc2
+#acceptEvent(Lorg/ehcache/event/EventType;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/ehcache/core/spi/store/events/StoreEventListener
@3.0.0.rc2
+#onEvent(Lorg/ehcache/core/spi/store/events/StoreEvent;)V

+###org/ehcache/core/spi/store/events/StoreEventSource
@3.0.0.rc2
+#addEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#removeEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#addEventFilter(Lorg/ehcache/core/spi/store/events/StoreEventFilter;)V
+#setEventOrdering(Z)V
+#isEventOrdering()Z
@3.9.0
+#setSynchronous(Z)V

+###org/ehcache/core/spi/store/heap/LimitExceededException
@3.0.0.rc2
+#<init>(Ljava/lang/String;)V

+###org/ehcache/core/spi/store/heap/SizeOfEngine
@3.0.0.rc2
+#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)J

+###org/ehcache/core/spi/store/heap/SizeOfEngineProvider
@3.0.0.rc2
+#createSizeOfEngine(Lorg/ehcache/config/ResourceUnit;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/heap/SizeOfEngine;

+###org/ehcache/core/spi/store/tiering/AuthoritativeTier$InvalidationValve
@3.1.0
+#invalidateAll()V
+#invalidateAllWithHash(J)V

+###org/ehcache/core/spi/store/tiering/AuthoritativeTier$Provider
@3.0.0.rc2
+#createAuthoritativeTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
+#initAuthoritativeTier(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
@3.1.0
+#rankAuthority(Lorg/ehcache/config/ResourceType;Ljava/util/Collection;)I

+###org/ehcache/core/spi/store/tiering/AuthoritativeTier
@3.0.0.rc2
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)Z
@3.1.0
+#setInvalidationValve(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier$InvalidationValve;)V
@3.5.0
+#computeIfAbsentAndFault(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;

+###org/ehcache/core/spi/store/tiering/CachingTier$InvalidationListener
@3.0.0.rc2
+#onInvalidation(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)V

+###org/ehcache/core/spi/store/tiering/CachingTier$Provider
@3.0.0.rc2
+#createCachingTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/store/tiering/CachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/store/tiering/CachingTier;)V
@3.1.0
+#rankCachingTier(Ljava/util/Set;Ljava/util/Collection;)I

+###org/ehcache/core/spi/store/tiering/CachingTier
@3.0.0.rc2
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#clear()V
+#setInvalidationListener(Lorg/ehcache/core/spi/store/tiering/CachingTier$InvalidationListener;)V
@3.1.0
+#invalidateAll()V
+#invalidateAllWithHash(J)V
@3.5.0
+#getOrComputeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.7.1
+#getOrDefault(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;

+###org/ehcache/core/spi/store/tiering/HigherCachingTier$Provider
@3.0.0.rc2
+#createHigherCachingTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/HigherCachingTier;
+#releaseHigherCachingTier(Lorg/ehcache/core/spi/store/tiering/HigherCachingTier;)V
+#initHigherCachingTier(Lorg/ehcache/core/spi/store/tiering/HigherCachingTier;)V

+###org/ehcache/core/spi/store/tiering/HigherCachingTier
@3.0.0.rc2
+#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)V
@3.1.0
+#silentInvalidateAll(Lorg/ehcache/core/spi/function/BiFunction;)V
+#silentInvalidateAllWithHash(JLorg/ehcache/core/spi/function/BiFunction;)V
@3.5.0
+#silentInvalidate(Ljava/lang/Object;Ljava/util/function/Function;)V
+#silentInvalidateAll(Ljava/util/function/BiFunction;)V
+#silentInvalidateAllWithHash(JLjava/util/function/BiFunction;)V
-#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)V
-#silentInvalidateAll(Lorg/ehcache/core/spi/function/BiFunction;)V
-#silentInvalidateAllWithHash(JLorg/ehcache/core/spi/function/BiFunction;)V

+###org/ehcache/core/spi/store/tiering/LowerCachingTier$Provider
@3.0.0.rc2
+#createCachingTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/LowerCachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/store/tiering/LowerCachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/store/tiering/LowerCachingTier;)V

+###org/ehcache/core/spi/store/tiering/LowerCachingTier
@3.0.0.rc2
+#installMapping(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/NullaryFunction;)V
+#clear()V
+#setInvalidationListener(Lorg/ehcache/core/spi/store/tiering/CachingTier$InvalidationListener;)V
@3.1.0
+#invalidateAll()V
+#invalidateAllWithHash(J)V
-#invalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/NullaryFunction;)V
@3.5.0
+#installMapping(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#installMapping(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.7.1
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;

+###org/ehcache/core/spi/time/SystemTimeSource
@3.0.0.m5
+#getTimeMillis()J

+###org/ehcache/core/spi/time/TickingTimeSource
@3.6.0
+#<init>(JJ)V
+#getTimeMillis()J
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V

+###org/ehcache/core/spi/time/TimeSource
@3.0.0.m5
+#getTimeMillis()J

+###org/ehcache/core/spi/time/TimeSourceService
@3.0.0.m5
+#getTimeSource()Lorg/ehcache/core/spi/time/TimeSource;

+###org/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$ComputeIfAbsentAndFaultOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$ComputeIfAbsentAndFaultOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$ComputeIfAbsentAndFaultOutcome;

+###org/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$FlushOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$FlushOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$FlushOutcome;

+###org/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$GetAndFaultOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$GetAndFaultOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/AuthoritativeTierOperationOutcomes$GetAndFaultOutcome;

+###org/ehcache/core/statistics/AuthoritativeTierOperationOutcomes
@3.0.0.m5

+###org/ehcache/core/statistics/BulkOps
@3.0.0.rc2
+#values()[Lorg/ehcache/core/statistics/BulkOps;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/BulkOps;

+###org/ehcache/core/statistics/CacheOperationOutcomes$ClearOutcome
@3.2.0.beta1
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$ClearOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$ClearOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$ConditionalRemoveOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$ConditionalRemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$ConditionalRemoveOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$GetAllOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$GetAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$GetAllOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$GetOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$GetOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$GetOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$PutAllOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$PutAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$PutAllOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$PutIfAbsentOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$PutIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$PutIfAbsentOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$PutOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$PutOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$PutOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$RemoveAllOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$RemoveAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$RemoveAllOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$RemoveOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$RemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$RemoveOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes$ReplaceOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$ReplaceOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$ReplaceOutcome;

+###org/ehcache/core/statistics/CacheOperationOutcomes
@3.0.0.m5

+###org/ehcache/core/statistics/CacheStatistics
@3.3.0
+#getKnownStatistics()Ljava/util/Map;
+#getTierStatistics()Ljava/util/Map;
+#clear()V
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheUpdates()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getCacheExpirations()J
+#getCacheAverageGetTime()F
+#getCacheAveragePutTime()F
+#getCacheAverageRemoveTime()F
@3.5.0
+#getCacheGetLatencyHistory()Lorg/terracotta/statistics/SampledStatistic;
-#getCacheUpdates()J
@3.6.0
+#getCacheGetHitLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
+#getCacheGetMissLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
+#getCachePutLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
+#getCacheRemoveLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
-#getCacheGetLatencyHistory()Lorg/terracotta/statistics/SampledStatistic;
@3.6.1
+#registerDerivedStatistic(Ljava/lang/Class;Ljava/lang/String;Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
-#getCacheAverageGetTime()F
-#getCacheAveragePutTime()F
-#getCacheAverageRemoveTime()F
-#getCacheGetHitLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
-#getCacheGetMissLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
-#getCachePutLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
-#getCacheRemoveLatencies()Lorg/terracotta/statistics/derived/latency/LatencyHistogramStatistic;
@3.8.0
+#registerDerivedStatistic(Ljava/lang/Class;Ljava/lang/String;Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
-#getKnownStatistics()Ljava/util/Map;
-#registerDerivedStatistic(Ljava/lang/Class;Ljava/lang/String;Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V

+###org/ehcache/core/statistics/CachingTierOperationOutcomes$GetOrComputeIfAbsentOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$GetOrComputeIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$GetOrComputeIfAbsentOutcome;

+###org/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateAllOutcome
@3.1.0
+#values()[Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateAllOutcome;

+###org/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateAllWithHashOutcome
@3.1.0
+#values()[Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateAllWithHashOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateAllWithHashOutcome;

+###org/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CachingTierOperationOutcomes$InvalidateOutcome;

+###org/ehcache/core/statistics/CachingTierOperationOutcomes
@3.0.0.m5

+###org/ehcache/core/statistics/ChainedObserver
@3.8.0

+###org/ehcache/core/statistics/ChainedOperationObserver
@3.8.0
+#begin(J)V
+#end(JJLjava/lang/Enum;)V

+###org/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateAllOutcome
@3.1.0
+#values()[Lorg/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateAllOutcome;

+###org/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateAllWithHashOutcome
@3.1.0
+#values()[Lorg/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateAllWithHashOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateAllWithHashOutcome;

+###org/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateOutcome;

+###org/ehcache/core/statistics/HigherCachingTierOperationOutcomes
@3.0.0.m5

+###org/ehcache/core/statistics/LowerCachingTierOperationsOutcome$GetAndRemoveOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$GetAndRemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$GetAndRemoveOutcome;

+###org/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InstallMappingOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InstallMappingOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InstallMappingOutcome;

+###org/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateAllOutcome
@3.1.0
+#values()[Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateAllOutcome;

+###org/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateAllWithHashOutcome
@3.1.0
+#values()[Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateAllWithHashOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateAllWithHashOutcome;

+###org/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/LowerCachingTierOperationsOutcome$InvalidateOutcome;

+###org/ehcache/core/statistics/LowerCachingTierOperationsOutcome
@3.0.0.m5

+###org/ehcache/core/statistics/OperationObserver
@3.8.0
+#begin()V
+#end(Ljava/lang/Enum;)V

+###org/ehcache/core/statistics/OperationStatistic
@3.8.0
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/ehcache/core/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/ehcache/core/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J

+###org/ehcache/core/statistics/SourceStatistic
@3.8.0
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;

+###org/ehcache/core/statistics/StatisticType
@3.9.1
+#values()[Lorg/ehcache/core/statistics/StatisticType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StatisticType;

+###org/ehcache/core/statistics/StoreOperationOutcomes$ComputeIfAbsentOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$ComputeIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$ComputeIfAbsentOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$ComputeOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$ComputeOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$ComputeOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$ConditionalRemoveOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$ConditionalRemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$ConditionalRemoveOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$ConditionalReplaceOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$ConditionalReplaceOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$ConditionalReplaceOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$EvictionOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$EvictionOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$EvictionOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$ExpirationOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$ExpirationOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$ExpirationOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$GetOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$GetOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$GetOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$PutIfAbsentOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$PutIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$PutIfAbsentOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$PutOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$PutOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$PutOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$RemoveOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$RemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$RemoveOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes$ReplaceOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$ReplaceOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$ReplaceOutcome;

+###org/ehcache/core/statistics/StoreOperationOutcomes
@3.0.0.m5

+###org/ehcache/core/statistics/SuppliedValueStatistic
@3.8.0
+#<init>(Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/function/Supplier;)V
+#value()Ljava/io/Serializable;
+#type()Lorg/terracotta/management/model/stats/StatisticType;
+#counter(Ljava/util/function/Supplier;)Lorg/ehcache/core/statistics/ValueStatistic;
+#supply(Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/function/Supplier;)Lorg/ehcache/core/statistics/ValueStatistic;
@3.9.1
+#<init>(Lorg/ehcache/core/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#type()Lorg/ehcache/core/statistics/StatisticType;
+#gauge(Ljava/util/function/Supplier;)Lorg/ehcache/core/statistics/ValueStatistic;
+#supply(Lorg/ehcache/core/statistics/StatisticType;Ljava/util/function/Supplier;)Lorg/ehcache/core/statistics/ValueStatistic;
-#<init>(Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/function/Supplier;)V
-#type()Lorg/terracotta/management/model/stats/StatisticType;
-#supply(Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/function/Supplier;)Lorg/ehcache/core/statistics/ValueStatistic;

+###org/ehcache/core/statistics/TierOperationOutcomes$EvictionOutcome
@3.2.0
+#values()[Lorg/ehcache/core/statistics/TierOperationOutcomes$EvictionOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/TierOperationOutcomes$EvictionOutcome;

+###org/ehcache/core/statistics/TierOperationOutcomes$GetOutcome
@3.2.0
+#values()[Lorg/ehcache/core/statistics/TierOperationOutcomes$GetOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/TierOperationOutcomes$GetOutcome;

+###org/ehcache/core/statistics/TierOperationOutcomes
@3.2.0
+#<init>()V

+###org/ehcache/core/statistics/TierStatistics
@3.3.0
+#getKnownStatistics()Ljava/util/Map;
+#clear()V
+#getHits()J
+#getMisses()J
+#getPuts()J
+#getUpdates()J
+#getRemovals()J
+#getEvictions()J
+#getExpirations()J
+#getMappings()J
+#getMaxMappings()J
+#getAllocatedByteSize()J
+#getOccupiedByteSize()J
@3.5.0
-#getUpdates()J
-#getMaxMappings()J
@3.9.1
-#getKnownStatistics()Ljava/util/Map;

+###org/ehcache/core/statistics/ValueStatistic
@3.8.0
+#type()Lorg/terracotta/management/model/stats/StatisticType;
+#value()Ljava/io/Serializable;
@3.9.1
+#type()Lorg/ehcache/core/statistics/StatisticType;
-#type()Lorg/terracotta/management/model/stats/StatisticType;

+###org/ehcache/core/statistics/ZeroOperationStatistic
@3.8.0
+#<init>()V
+#get()Lorg/ehcache/core/statistics/OperationStatistic;
+#type()Ljava/lang/Class;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#begin()V
+#end(Ljava/lang/Enum;)V
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V

+###org/ehcache/core/store/StoreConfigurationImpl
@3.7.0
+#<init>(Lorg/ehcache/config/CacheConfiguration;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Lorg/ehcache/config/CacheConfiguration;IZLorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Z)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/config/ResourcePools;IZLorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Z)V
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionAdvisor()Lorg/ehcache/config/EvictionAdvisor;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/ExpiryPolicy;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#getKeySerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getValueSerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getDispatcherConcurrency()I
+#isOperationStatisticsEnabled()Z
+#getCacheLoaderWriter()Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#useLoaderInAtomics()Z

+###org/ehcache/core/store/StoreSupport
@3.7.0
+#selectWrapperStoreProvider(Lorg/ehcache/spi/service/ServiceProvider;Ljava/util/Collection;)Lorg/ehcache/core/spi/store/Store$Provider;
+#selectStoreProvider(Lorg/ehcache/spi/service/ServiceProvider;Ljava/util/Set;Ljava/util/Collection;)Lorg/ehcache/core/spi/store/Store$Provider;

+###org/ehcache/core/util/ByteBufferInputStream
@3.7.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I

+###org/ehcache/core/util/ClassLoading
@3.0.0.m5
+#<init>()V
+#getDefaultClassLoader()Ljava/lang/ClassLoader;
+#libraryServiceLoaderFor(Ljava/lang/Class;)Ljava/util/ServiceLoader;
@3.0.0.rc1
-###org/ehcache/core/util/ClassLoading

+###org/ehcache/core/util/CollectionUtil
@3.7.0
+#findBestCollectionSize(Ljava/lang/Iterable;I)I
+#copyMapButFailOnNull(Ljava/util/Map;)Ljava/util/Map;

+###org/ehcache/expiry/Expirations$ExpiryBuilder
@3.3.1
+#setCreate(Lorg/ehcache/expiry/Duration;)Lorg/ehcache/expiry/Expirations$ExpiryBuilder;
+#setAccess(Lorg/ehcache/expiry/Duration;)Lorg/ehcache/expiry/Expirations$ExpiryBuilder;
+#setUpdate(Lorg/ehcache/expiry/Duration;)Lorg/ehcache/expiry/Expirations$ExpiryBuilder;
+#build()Lorg/ehcache/expiry/Expiry;

+###org/ehcache/expiry/ExpiryPolicy
@3.5.0
+#getExpiryForCreation(Ljava/lang/Object;Ljava/lang/Object;)Ljava/time/Duration;
+#getExpiryForAccess(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/time/Duration;
+#getExpiryForUpdate(Ljava/lang/Object;Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/time/Duration;

+###org/ehcache/impl/config/AbstractResourcePool
@3.8.0
+#getType()Lorg/ehcache/config/ResourceType;
+#isPersistent()Z
+#validateUpdate(Lorg/ehcache/config/ResourcePool;)V

+###org/ehcache/impl/config/BaseCacheConfiguration
@3.8.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getServiceConfigurations()Ljava/util/Collection;
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionAdvisor()Lorg/ehcache/config/EvictionAdvisor;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getExpiryPolicy()Lorg/ehcache/expiry/ExpiryPolicy;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#derive()Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#derive()Lorg/ehcache/config/FluentCacheConfigurationBuilder;

+###org/ehcache/impl/config/ResourcePoolsImpl
@3.8.0
+#<init>(Ljava/util/Map;)V
+#getPoolForResource(Lorg/ehcache/config/ResourceType;)Lorg/ehcache/config/ResourcePool;
+#getResourceTypeSet()Ljava/util/Set;
+#validateAndMerge(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/ResourcePools;
+#validateResourcePools(Ljava/util/Collection;)V
+#readableString()Ljava/lang/String;

+###org/ehcache/impl/config/SizedResourcePoolImpl
@3.8.0
+#<init>(Lorg/ehcache/config/ResourceType;JLorg/ehcache/config/ResourceUnit;Z)V
+#getSize()J
+#getUnit()Lorg/ehcache/config/ResourceUnit;
+#validateUpdate(Lorg/ehcache/config/ResourcePool;)V
+#toString()Ljava/lang/String;
+#readableString()Ljava/lang/String;

+###org/ehcache/impl/config/copy/DefaultCopierConfiguration$Type
@3.0.0.rc1
+#values()[Lorg/ehcache/impl/config/copy/DefaultCopierConfiguration$Type;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/impl/config/copy/DefaultCopierConfiguration$Type;

+###org/ehcache/impl/config/copy/DefaultCopierConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/Class;Lorg/ehcache/core/config/copy/CopierConfiguration$Type;)V
+#<init>(Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/config/copy/CopierConfiguration$Type;)V
+#getServiceType()Ljava/lang/Class;
+#getType()Lorg/ehcache/core/config/copy/CopierConfiguration$Type;
@3.0.0.rc1
+#<init>(Ljava/lang/Class;Lorg/ehcache/impl/config/copy/DefaultCopierConfiguration$Type;)V
+#<init>(Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/impl/config/copy/DefaultCopierConfiguration$Type;)V
+#getType()Lorg/ehcache/impl/config/copy/DefaultCopierConfiguration$Type;
-#<init>(Ljava/lang/Class;Lorg/ehcache/core/config/copy/CopierConfiguration$Type;)V
-#<init>(Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/config/copy/CopierConfiguration$Type;)V
-#getType()Lorg/ehcache/core/config/copy/CopierConfiguration$Type;
@3.8.0
+#compatibleWith(Lorg/ehcache/spi/service/ServiceConfiguration;)Z

+###org/ehcache/impl/config/copy/DefaultCopyProviderConfiguration
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/impl/config/copy/DefaultCopyProviderConfiguration;)V
+#getServiceType()Ljava/lang/Class;
+#addCopierFor(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/impl/config/copy/DefaultCopyProviderConfiguration;
+#addCopierFor(Ljava/lang/Class;Ljava/lang/Class;Z)Lorg/ehcache/impl/config/copy/DefaultCopyProviderConfiguration;
@3.8.0
+#derive()Lorg/ehcache/impl/config/copy/DefaultCopyProviderConfiguration;
+#build(Lorg/ehcache/impl/config/copy/DefaultCopyProviderConfiguration;)Lorg/ehcache/impl/config/copy/DefaultCopyProviderConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/event/CacheEventDispatcherFactoryConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/String;)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Ljava/lang/String;
+#build(Ljava/lang/String;)Lorg/ehcache/impl/config/event/CacheEventDispatcherFactoryConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/event/DefaultCacheEventDispatcherConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/String;)V
+#getServiceType()Ljava/lang/Class;
+#getThreadPoolAlias()Ljava/lang/String;
@3.8.0
+#derive()Ljava/lang/String;
+#build(Ljava/lang/String;)Lorg/ehcache/impl/config/event/DefaultCacheEventDispatcherConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/event/DefaultCacheEventListenerConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Lorg/ehcache/event/CacheEventListener;)V
+#getServiceType()Ljava/lang/Class;
+#setEventFiringMode(Lorg/ehcache/event/EventFiring;)V
+#setEventOrderingMode(Lorg/ehcache/event/EventOrdering;)V
+#setEventsToFireOn(Ljava/util/EnumSet;)V
+#firingMode()Lorg/ehcache/event/EventFiring;
+#orderingMode()Lorg/ehcache/event/EventOrdering;
+#fireOn()Ljava/util/EnumSet;
@3.0.0.rc1
+#<init>(Ljava/util/Set;Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/util/Set;Lorg/ehcache/event/CacheEventListener;)V
-#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Lorg/ehcache/event/CacheEventListener;)V
-#setEventsToFireOn(Ljava/util/EnumSet;)V
@3.8.0
+#compatibleWith(Lorg/ehcache/spi/service/ServiceConfiguration;)Z

+###org/ehcache/impl/config/event/DefaultEventSourceConfiguration
@3.0.0.m5
+#<init>(I)V
+#getOrderedEventParallelism()I
+#getServiceType()Ljava/lang/Class;
@3.0.0
+#getDispatcherConcurrency()I
-#getOrderedEventParallelism()I
@3.8.0
+#derive()Ljava/lang/Integer;
+#build(Ljava/lang/Integer;)Lorg/ehcache/impl/config/event/DefaultEventSourceConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/executor/PooledExecutionServiceConfiguration$PoolConfiguration
@3.0.0.m5
+#minSize()I
+#maxSize()I

+###org/ehcache/impl/config/executor/PooledExecutionServiceConfiguration
@3.0.0.m5
+#<init>()V
+#addDefaultPool(Ljava/lang/String;II)V
+#addPool(Ljava/lang/String;II)V
+#getPoolConfigurations()Ljava/util/Map;
+#getDefaultPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#addDefaultPool(Ljava/lang/String;II)Lorg/ehcache/impl/config/executor/PooledExecutionServiceConfiguration;
+#addPool(Ljava/lang/String;II)Lorg/ehcache/impl/config/executor/PooledExecutionServiceConfiguration;
+#derive()Lorg/ehcache/config/builders/PooledExecutionServiceConfigurationBuilder;
+#build(Lorg/ehcache/config/builders/PooledExecutionServiceConfigurationBuilder;)Lorg/ehcache/impl/config/executor/PooledExecutionServiceConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;
-#addDefaultPool(Ljava/lang/String;II)V
-#addPool(Ljava/lang/String;II)V

+###org/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#getServiceType()Ljava/lang/Class;
@3.7.0
-#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterConfiguration;
+#build(Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterConfiguration;)Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration
@3.0.0.m5
+#<init>()V
+#getServiceType()Ljava/lang/Class;
+#addLoaderFor(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;
@3.8.0
+#<init>(Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;)V
+#derive()Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;
+#build(Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;)Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/loaderwriter/writebehind/DefaultBatchingConfiguration
@3.0.0.rc1
+#<init>(JLjava/util/concurrent/TimeUnit;IZ)V
+#getMaxDelay()J
+#getMaxDelayUnit()Ljava/util/concurrent/TimeUnit;
+#isCoalescing()Z
+#getBatchSize()I

+###org/ehcache/impl/config/loaderwriter/writebehind/DefaultWriteBehindConfiguration
@3.0.0.rc1
+#<init>(Ljava/lang/String;IILorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;)V
+#getConcurrency()I
+#getMaxQueueSize()I
+#getThreadPoolAlias()Ljava/lang/String;
+#getBatchingConfiguration()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;
+#getServiceType()Ljava/lang/Class;

+###org/ehcache/impl/config/loaderwriter/writebehind/WriteBehindProviderConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/String;)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Ljava/lang/String;
+#build(Ljava/lang/String;)Lorg/ehcache/impl/config/loaderwriter/writebehind/WriteBehindProviderConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/persistence/CacheManagerPersistenceConfiguration
@3.0.0.m5
+#<init>(Ljava/io/File;)V
+#getRootDirectory()Ljava/io/File;
+#getServiceType()Ljava/lang/Class;
+#builder(Lorg/ehcache/config/builders/CacheManagerBuilder;)Lorg/ehcache/config/builders/CacheManagerBuilder;
@3.0.0.rc2
-#getRootDirectory()Ljava/io/File;
-#getServiceType()Ljava/lang/Class;
@3.1.2
+#readableString()Ljava/lang/String;

+###org/ehcache/impl/config/persistence/DefaultPersistenceConfiguration
@3.0.0.rc1
+#<init>(Ljava/io/File;)V
+#getRootDirectory()Ljava/io/File;
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Ljava/io/File;
+#build(Ljava/io/File;)Lorg/ehcache/impl/config/persistence/DefaultPersistenceConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/persistence/UserManagedPersistenceContext
@3.0.0.m5
+#<init>(Ljava/lang/String;Lorg/ehcache/core/spi/service/LocalPersistenceService;)V
+#builder(Lorg/ehcache/config/builders/UserManagedCacheBuilder;)Lorg/ehcache/config/builders/UserManagedCacheBuilder;

+###org/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration
@3.5.0
+#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Lorg/ehcache/spi/resilience/ResilienceStrategy;)V
+#getServiceType()Ljava/lang/Class;
+#bind(Lorg/ehcache/spi/resilience/RecoveryStore;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration;
+#bind(Lorg/ehcache/spi/resilience/RecoveryStore;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration;
@3.8.0
+#derive()Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration;
+#build(Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration
@3.5.0
+#<init>()V
+#getDefaultConfiguration()Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration;
+#getDefaultLoaderWriterConfiguration()Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyConfiguration;
+#getServiceType()Ljava/lang/Class;
+#setDefaultResilienceStrategy(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
+#setDefaultResilienceStrategy(Lorg/ehcache/spi/resilience/ResilienceStrategy;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
+#setDefaultLoaderWriterResilienceStrategy(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
+#setDefaultLoaderWriterResilienceStrategy(Lorg/ehcache/spi/resilience/ResilienceStrategy;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
+#addResilienceStrategyFor(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
+#addResilienceStrategyFor(Ljava/lang/String;Lorg/ehcache/spi/resilience/ResilienceStrategy;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
@3.8.0
+#derive()Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
+#build(Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;)Lorg/ehcache/impl/config/resilience/DefaultResilienceStrategyProviderConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration;)V
+#getServiceType()Ljava/lang/Class;
+#addSerializerFor(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration;
+#addSerializerFor(Ljava/lang/Class;Ljava/lang/Class;Z)Lorg/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration;
+#getTransientSerializers()Ljava/util/Map;
+#getPersistentSerializers()Ljava/util/Map;
@3.2.0.beta1
+#getDefaultSerializers()Ljava/util/Map;
-#getTransientSerializers()Ljava/util/Map;
-#getPersistentSerializers()Ljava/util/Map;
@3.8.0
+#derive()Lorg/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration;
+#build(Lorg/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration;)Lorg/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/serializer/DefaultSerializerConfiguration$Type
@3.0.0.rc1
+#values()[Lorg/ehcache/impl/config/serializer/DefaultSerializerConfiguration$Type;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/impl/config/serializer/DefaultSerializerConfiguration$Type;

+###org/ehcache/impl/config/serializer/DefaultSerializerConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/Class;Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;)V
+#<init>(Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;)V
+#getServiceType()Ljava/lang/Class;
+#getType()Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;
@3.0.0.rc1
+#<init>(Ljava/lang/Class;Lorg/ehcache/impl/config/serializer/DefaultSerializerConfiguration$Type;)V
+#<init>(Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/impl/config/serializer/DefaultSerializerConfiguration$Type;)V
+#getType()Lorg/ehcache/impl/config/serializer/DefaultSerializerConfiguration$Type;
-#<init>(Ljava/lang/Class;Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;)V
-#<init>(Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;)V
-#getType()Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;
@3.8.0
+#compatibleWith(Lorg/ehcache/spi/service/ServiceConfiguration;)Z

+###org/ehcache/impl/config/store/disk/OffHeapDiskStoreConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/String;I)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getWriterConcurrency()I
+#getServiceType()Ljava/lang/Class;
@3.4.0
+#<init>(I)V
+#<init>(Ljava/lang/String;II)V
+#getDiskSegments()I
@3.8.0
+#derive()Lorg/ehcache/impl/config/store/disk/OffHeapDiskStoreConfiguration;
+#build(Lorg/ehcache/impl/config/store/disk/OffHeapDiskStoreConfiguration;)Lorg/ehcache/impl/config/store/disk/OffHeapDiskStoreConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/store/disk/OffHeapDiskStoreProviderConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/String;)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Ljava/lang/String;
+#build(Ljava/lang/String;)Lorg/ehcache/impl/config/store/disk/OffHeapDiskStoreProviderConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/store/heap/DefaultSizeOfEngineConfiguration
@3.0.0.rc2
+#<init>(JLorg/ehcache/config/units/MemoryUnit;J)V
+#getServiceType()Ljava/lang/Class;
+#getMaxObjectGraphSize()J
+#getMaxObjectSize()J
+#getUnit()Lorg/ehcache/config/units/MemoryUnit;
@3.8.0
+#derive()Lorg/ehcache/impl/config/store/heap/DefaultSizeOfEngineConfiguration;
+#build(Lorg/ehcache/impl/config/store/heap/DefaultSizeOfEngineConfiguration;)Lorg/ehcache/impl/config/store/heap/DefaultSizeOfEngineConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/config/store/heap/DefaultSizeOfEngineProviderConfiguration
@3.0.0.rc2
+#<init>(JLorg/ehcache/config/units/MemoryUnit;J)V
+#getServiceType()Ljava/lang/Class;
+#getMaxObjectGraphSize()J
+#getMaxObjectSize()J
+#getUnit()Lorg/ehcache/config/units/MemoryUnit;
@3.8.0
+#derive()Lorg/ehcache/impl/config/store/heap/DefaultSizeOfEngineProviderConfiguration;
+#build(Lorg/ehcache/impl/config/store/heap/DefaultSizeOfEngineProviderConfiguration;)Lorg/ehcache/impl/config/store/heap/DefaultSizeOfEngineProviderConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/copy/IdentityCopier
@3.0.0.m5
+#<init>()V
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@3.6.0
+#identityCopier()Lorg/ehcache/spi/copy/Copier;

+###org/ehcache/impl/copy/ReadWriteCopier
@3.0.0.m5
+#<init>()V
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/impl/copy/SerializingCopier
@3.0.0.m5
+#<init>(Lorg/ehcache/spi/serialization/Serializer;)V
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#getSerializer()Lorg/ehcache/spi/serialization/Serializer;
@3.2.0.beta1
+#asCopierClass()Ljava/lang/Class;

+###org/ehcache/impl/events/CacheEventAdapter
@3.0.0.m5
+#<init>()V
+#onEvent(Lorg/ehcache/event/CacheEvent;)V

+###org/ehcache/impl/events/CacheEventDispatcherImpl
@3.0.0.rc1
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#shutdown()V
+#setListenerSource(Lorg/ehcache/Cache;)V
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#getConfigurationChangeListeners()Ljava/util/List;
+#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V
@3.0.0.rc2
+#setStoreEventSource(Lorg/ehcache/core/spi/store/events/StoreEventSource;)V
-#onEvent(Lorg/ehcache/event/CacheEvent;)V
-#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V

+###org/ehcache/impl/internal/DefaultTimeSourceService
@3.0.0.m5
+#<init>(Lorg/ehcache/impl/internal/TimeSourceConfiguration;)V
+#getTimeSource()Lorg/ehcache/core/spi/time/TimeSource;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/impl/internal/TimeSourceConfiguration
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/time/TimeSource;)V
+#getServiceType()Ljava/lang/Class;
+#getTimeSource()Lorg/ehcache/core/spi/time/TimeSource;
@3.8.0
+#derive()Lorg/ehcache/core/spi/time/TimeSource;
+#build(Lorg/ehcache/core/spi/time/TimeSource;)Lorg/ehcache/impl/internal/TimeSourceConfiguration;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#derive()Ljava/lang/Object;

+###org/ehcache/impl/internal/TimeSourceServiceFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/time/TimeSourceService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/classes/ClassInstanceConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;)V
+#getClazz()Ljava/lang/Class;
+#getArguments()[Ljava/lang/Object;
+#getInstance()Ljava/lang/Object;

+###org/ehcache/impl/internal/classes/ClassInstanceProvider
@3.0.0.m5
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/impl/internal/classes/ClassInstanceProviderConfiguration
@3.0.0.m5
+#<init>()V
+#getDefaults()Ljava/util/Map;
@3.8.0
+#<init>(Lorg/ehcache/impl/internal/classes/ClassInstanceProviderConfiguration;)V

+###org/ehcache/impl/internal/classes/commonslang/ArrayUtils
@3.0.0.m5
+#<init>()V
+#nullToEmpty([Ljava/lang/Object;)[Ljava/lang/Object;
+#nullToEmpty([Ljava/lang/Class;)[Ljava/lang/Class;
+#isSameLength([Ljava/lang/Object;[Ljava/lang/Object;)Z
+#getLength(Ljava/lang/Object;)I
+#isEmpty([Ljava/lang/Object;)Z
@3.5.3
+#toPrimitive([Ljava/lang/Long;)[J
+#toPrimitive([Ljava/lang/Integer;)[I
+#toPrimitive([Ljava/lang/Short;)[S
+#toPrimitive([Ljava/lang/Double;)[D
+#toPrimitive([Ljava/lang/Float;)[F
+#toPrimitive(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/impl/internal/classes/commonslang/ClassUtils
@3.0.0.m5
+#<init>()V
+#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;Z)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Z)Z
+#primitiveToWrapper(Ljava/lang/Class;)Ljava/lang/Class;
+#wrapperToPrimitive(Ljava/lang/Class;)Ljava/lang/Class;
+#toClass([Ljava/lang/Object;)[Ljava/lang/Class;
@3.5.0
+#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;)Z
-#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;Z)Z
-#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Z)Z
@3.5.3
+#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;Z)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Z)Z
-#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;)Z

+###org/ehcache/impl/internal/classes/commonslang/reflect/ConstructorUtils
@3.0.0.m5
+#<init>()V
+#invokeConstructor(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeConstructor(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#getAccessibleConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;
+#getMatchingAccessibleConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;

+###org/ehcache/impl/internal/classes/commonslang/reflect/MethodUtils
@3.5.3
+#<init>()V

+###org/ehcache/impl/internal/concurrent/ConcurrentHashMap$KeySetView
@3.0.0.m5
+#getMappedValue()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#add(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#_spliterator()Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator;
+#forEach(Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#getMap()Lorg/ehcache/impl/internal/concurrent/ConcurrentHashMap;
@3.5.0
+#_spliterator()Ljava/util/Spliterator;
+#forEach(Ljava/util/function/Consumer;)V
-#_spliterator()Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator;
-#forEach(Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
@3.6.0
+#spliterator()Ljava/util/Spliterator;
+#removeAll(Ljava/util/Collection;)Z
-#_spliterator()Ljava/util/Spliterator;

+###org/ehcache/impl/internal/concurrent/ConcurrentHashMap
@3.0.0.m5
+#<init>()V
+#<init>(I)V
+#<init>(Ljava/util/Map;)V
+#<init>(IF)V
+#<init>(IFI)V
+#size()I
+#isEmpty()Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#keySet()Lorg/ehcache/impl/internal/concurrent/ConcurrentHashMap$KeySetView;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#hashCode()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#forEach(Lorg/ehcache/impl/internal/concurrent/JSR166Helper$BiConsumer;)V
+#replaceAll(Lorg/ehcache/function/BiFunction;)V
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z[deprecated]
+#keys()Ljava/util/Enumeration;
+#elements()Ljava/util/Enumeration;
+#mappingCount()J
+#newKeySet()Lorg/ehcache/impl/internal/concurrent/ConcurrentHashMap$KeySetView;
+#newKeySet(I)Lorg/ehcache/impl/internal/concurrent/ConcurrentHashMap$KeySetView;
+#keySet(Ljava/lang/Object;)Lorg/ehcache/impl/internal/concurrent/ConcurrentHashMap$KeySetView;
+#forEach(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$BiConsumer;)V
+#forEach(JLorg/ehcache/function/BiFunction;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#search(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduce(JLorg/ehcache/function/BiFunction;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleBiFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongBiFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntBiFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#forEachKey(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#forEachKey(JLorg/ehcache/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#searchKeys(JLorg/ehcache/function/Function;)Ljava/lang/Object;
+#reduceKeys(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceKeys(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceKeysToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceKeysToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceKeysToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#forEachValue(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#forEachValue(JLorg/ehcache/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#searchValues(JLorg/ehcache/function/Function;)Ljava/lang/Object;
+#reduceValues(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceValues(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceValuesToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceValuesToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceValuesToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#forEachEntry(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#forEachEntry(JLorg/ehcache/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#searchEntries(JLorg/ehcache/function/Function;)Ljava/lang/Object;
+#reduceEntries(JLorg/ehcache/function/BiFunction;)Ljava/util/Map$Entry;
+#reduceEntries(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#reduceEntriesToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
+#reduceEntriesToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
+#reduceEntriesToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
+#getEvictionCandidate(Ljava/util/Random;ILjava/util/Comparator;Lorg/ehcache/config/EvictionVeto;)Ljava/util/Map$Entry;
+#keySet()Ljava/util/Set;
@3.0.0.rc1
+#replaceAll(Lorg/ehcache/core/spi/function/BiFunction;)V
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#forEach(JLorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#search(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#reduce(JLorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#forEachKey(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#searchKeys(JLorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
+#reduceKeys(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#reduceKeys(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#forEachValue(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#searchValues(JLorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
+#reduceValues(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#reduceValues(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#forEachEntry(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#searchEntries(JLorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
+#reduceEntries(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/util/Map$Entry;
+#reduceEntries(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#replaceAll(Lorg/ehcache/function/BiFunction;)V
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#merge(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#forEach(JLorg/ehcache/function/BiFunction;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#search(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#reduce(JLorg/ehcache/function/BiFunction;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#forEachKey(JLorg/ehcache/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#searchKeys(JLorg/ehcache/function/Function;)Ljava/lang/Object;
-#reduceKeys(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#reduceKeys(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#forEachValue(JLorg/ehcache/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#searchValues(JLorg/ehcache/function/Function;)Ljava/lang/Object;
-#reduceValues(JLorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#reduceValues(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#forEachEntry(JLorg/ehcache/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#searchEntries(JLorg/ehcache/function/Function;)Ljava/lang/Object;
-#reduceEntries(JLorg/ehcache/function/BiFunction;)Ljava/util/Map$Entry;
-#reduceEntries(JLorg/ehcache/function/Function;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
@3.0.0
+#getEvictionCandidate(Ljava/util/Random;ILjava/util/Comparator;Lorg/ehcache/config/EvictionAdvisor;)Ljava/util/Map$Entry;
-#getEvictionCandidate(Ljava/util/Random;ILjava/util/Comparator;Lorg/ehcache/config/EvictionVeto;)Ljava/util/Map$Entry;
@3.1.0
+#removeAllWithHash(I)Ljava/util/Map;
@3.5.0
+#removeAllWithHash(I)Ljava/util/Collection;
+#forEach(Ljava/util/function/BiConsumer;)V
+#replaceAll(Ljava/util/function/BiFunction;)V
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#forEach(JLjava/util/function/BiConsumer;)V
+#forEach(JLjava/util/function/BiFunction;Ljava/util/function/Consumer;)V
+#search(JLjava/util/function/BiFunction;)Ljava/lang/Object;
+#reduce(JLjava/util/function/BiFunction;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#reduceToDouble(JLjava/util/function/ToDoubleBiFunction;DLjava/util/function/DoubleBinaryOperator;)D
+#reduceToLong(JLjava/util/function/ToLongBiFunction;JLjava/util/function/LongBinaryOperator;)J
+#reduceToInt(JLjava/util/function/ToIntBiFunction;ILjava/util/function/IntBinaryOperator;)I
+#forEachKey(JLjava/util/function/Consumer;)V
+#forEachKey(JLjava/util/function/Function;Ljava/util/function/Consumer;)V
+#searchKeys(JLjava/util/function/Function;)Ljava/lang/Object;
+#reduceKeys(JLjava/util/function/BiFunction;)Ljava/lang/Object;
+#reduceKeys(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#reduceKeysToDouble(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D
+#reduceKeysToLong(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J
+#reduceKeysToInt(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I
+#forEachValue(JLjava/util/function/Consumer;)V
+#forEachValue(JLjava/util/function/Function;Ljava/util/function/Consumer;)V
+#searchValues(JLjava/util/function/Function;)Ljava/lang/Object;
+#reduceValues(JLjava/util/function/BiFunction;)Ljava/lang/Object;
+#reduceValues(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#reduceValuesToDouble(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D
+#reduceValuesToLong(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J
+#reduceValuesToInt(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I
+#forEachEntry(JLjava/util/function/Consumer;)V
+#forEachEntry(JLjava/util/function/Function;Ljava/util/function/Consumer;)V
+#searchEntries(JLjava/util/function/Function;)Ljava/lang/Object;
+#reduceEntries(JLjava/util/function/BiFunction;)Ljava/util/Map$Entry;
+#reduceEntries(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#reduceEntriesToDouble(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D
+#reduceEntriesToLong(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J
+#reduceEntriesToInt(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I
-#removeAllWithHash(I)Ljava/util/Map;
-#forEach(Lorg/ehcache/impl/internal/concurrent/JSR166Helper$BiConsumer;)V
-#replaceAll(Lorg/ehcache/core/spi/function/BiFunction;)V
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#merge(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#forEach(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$BiConsumer;)V
-#forEach(JLorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#search(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#reduce(JLorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#reduceToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleBiFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
-#reduceToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongBiFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
-#reduceToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntBiFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
-#forEachKey(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#forEachKey(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#searchKeys(JLorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
-#reduceKeys(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#reduceKeys(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#reduceKeysToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
-#reduceKeysToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
-#reduceKeysToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
-#forEachValue(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#forEachValue(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#searchValues(JLorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
-#reduceValues(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#reduceValues(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#reduceValuesToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
-#reduceValuesToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
-#reduceValuesToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I
-#forEachEntry(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#forEachEntry(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
-#searchEntries(JLorg/ehcache/core/spi/function/Function;)Ljava/lang/Object;
-#reduceEntries(JLorg/ehcache/core/spi/function/BiFunction;)Ljava/util/Map$Entry;
-#reduceEntries(JLorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#reduceEntriesToDouble(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction;DLorg/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator;)D
-#reduceEntriesToLong(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction;JLorg/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator;)J
-#reduceEntriesToInt(JLorg/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction;ILorg/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator;)I

+###org/ehcache/impl/internal/concurrent/EvictingConcurrentMap
@3.6.0
+#getEvictionCandidate(Ljava/util/Random;ILjava/util/Comparator;Lorg/ehcache/config/EvictionAdvisor;)Ljava/util/Map$Entry;
+#mappingCount()J
+#removeAllWithHash(I)Ljava/util/Collection;

+###org/ehcache/impl/internal/events/AbstractStoreEventDispatcher
@3.8.0
+#addEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#removeEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#addEventFilter(Lorg/ehcache/core/spi/store/events/StoreEventFilter;)V
+#setEventOrdering(Z)V
+#isEventOrdering()Z
+#releaseEventSink(Lorg/ehcache/core/events/StoreEventSink;)V
+#releaseEventSinkAfterFailure(Lorg/ehcache/core/events/StoreEventSink;Ljava/lang/Throwable;)V
+#reset(Lorg/ehcache/core/events/StoreEventSink;)V
+#eventSink()Lorg/ehcache/core/events/StoreEventSink;
@3.9.0
+#setSynchronous(Z)V

+###org/ehcache/impl/internal/events/CacheEventDispatcherFactoryImpl
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/impl/config/event/CacheEventDispatcherFactoryConfiguration;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createCacheEventDispatcher(Lorg/ehcache/core/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/events/CacheEventDispatcher;
+#releaseCacheEventDispatcher(Lorg/ehcache/core/events/CacheEventDispatcher;)V
@3.0.0.rc2
+#createCacheEventDispatcher(Lorg/ehcache/core/spi/store/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/events/CacheEventDispatcher;
-#createCacheEventDispatcher(Lorg/ehcache/core/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/events/CacheEventDispatcher;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/impl/internal/events/CacheEventNotificationListenerServiceProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/events/CacheEventDispatcherFactory;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/events/DisabledCacheEventNotificationService
@3.0.0.rc1
+#<init>()V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#shutdown()V
+#setListenerSource(Lorg/ehcache/Cache;)V
+#getConfigurationChangeListeners()Ljava/util/List;
+#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V
@3.0.0.rc2
+#setStoreEventSource(Lorg/ehcache/core/spi/store/events/StoreEventSource;)V
-#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V

+###org/ehcache/impl/internal/events/StoreEventImpl
@3.0.0.m5
+#<init>(Lorg/ehcache/event/EventType;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getType()Lorg/ehcache/event/EventType;
+#getKey()Ljava/lang/Object;
+#getNewValue()Ljava/lang/Object;
+#getOldValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/ehcache/impl/internal/events/StoreEvents
@3.0.0.m5
+#<init>()V
+#createEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
+#updateEvent(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
+#removeEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
+#expireEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
+#evictEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
@3.0.0.rc2
+#createEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/events/StoreEvent;
+#updateEvent(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/events/StoreEvent;
+#removeEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/events/StoreEvent;
+#expireEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/events/StoreEvent;
+#evictEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/events/StoreEvent;
-#createEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
-#updateEvent(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
-#removeEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
-#expireEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;
-#evictEvent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/events/StoreEvent;

+###org/ehcache/impl/internal/events/ThreadLocalStoreEventDispatcher
@3.0.0.m5
+#<init>(I)V
+#eventSink()Lorg/ehcache/core/events/StoreEventSink;
+#releaseEventSink(Lorg/ehcache/core/events/StoreEventSink;)V
+#releaseEventSinkAfterFailure(Lorg/ehcache/core/events/StoreEventSink;Ljava/lang/Throwable;)V
+#isEventOrdering()Z
+#setEventOrdering(Z)V
+#addEventFilter(Lorg/ehcache/core/spi/cache/events/StoreEventFilter;)V
+#removeEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
+#addEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
@3.0.0.rc2
+#addEventFilter(Lorg/ehcache/core/spi/store/events/StoreEventFilter;)V
+#removeEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#addEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
-#addEventFilter(Lorg/ehcache/core/spi/cache/events/StoreEventFilter;)V
-#removeEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
-#addEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
@3.0.0.rc3
+#reset(Lorg/ehcache/core/events/StoreEventSink;)V
@3.8.0
-#reset(Lorg/ehcache/core/events/StoreEventSink;)V
-#isEventOrdering()Z
-#setEventOrdering(Z)V
-#addEventFilter(Lorg/ehcache/core/spi/store/events/StoreEventFilter;)V
-#removeEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
-#addEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V

+###org/ehcache/impl/internal/executor/DefaultExecutionServiceFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/service/ExecutionService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/executor/ExecutorUtil
@3.0.0.m5
+#<init>()V
+#shutdown(Ljava/util/concurrent/ExecutorService;)V
+#shutdownNow(Ljava/util/concurrent/ExecutorService;)V
+#waitFor(Ljava/util/concurrent/Future;)Ljava/lang/Object;

+###org/ehcache/impl/internal/executor/OnDemandExecutionService
@3.0.0.m5
+#<init>()V
+#getScheduledExecutor(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#getOrderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#getUnorderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/impl/internal/executor/PooledExecutionService
@3.0.0.m5
+#getScheduledExecutor(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#getOrderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#getUnorderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.4.0
+#isStopping()Z
+#isStopped()Z

+###org/ehcache/impl/internal/loaderwriter/writebehind/BatchingLocalHeapWriteBehindQueue
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#stop()V
+#getQueueSize()J
+#deleteAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#load(Ljava/lang/Object;)Ljava/lang/Object;
@3.5.0
-#deleteAll(Ljava/lang/Iterable;)V
-#writeAll(Ljava/lang/Iterable;)V
-#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;

+###org/ehcache/impl/internal/loaderwriter/writebehind/NonBatchingLocalHeapWriteBehindQueue
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#stop()V
+#getQueueSize()J
+#deleteAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#load(Ljava/lang/Object;)Ljava/lang/Object;
@3.5.0
-#deleteAll(Ljava/lang/Iterable;)V
-#writeAll(Ljava/lang/Iterable;)V
-#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;

+###org/ehcache/impl/internal/loaderwriter/writebehind/StripedWriteBehind
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/lang/Iterable;)V
+#stop()V
+#getQueueSize()J
@3.5.0
-#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
-#writeAll(Ljava/lang/Iterable;)V
-#deleteAll(Ljava/lang/Iterable;)V

+###org/ehcache/impl/internal/loaderwriter/writebehind/WriteBehind
@3.0.0.m5
+#start()V
+#stop()V
+#getQueueSize()J

+###org/ehcache/impl/internal/loaderwriter/writebehind/WriteBehindProviderFactory$Provider
@3.0.0.m5
+#stop()V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#createWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;)Lorg/ehcache/impl/internal/loaderwriter/writebehind/WriteBehind;
+#releaseWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/impl/internal/loaderwriter/writebehind/WriteBehindProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/loaderwriter/writebehind/operations/BatchOperation
@3.0.0.m5
+#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.2.0.beta1
+#performOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V

+###org/ehcache/impl/internal/loaderwriter/writebehind/operations/DeleteAllOperation
@3.0.0.m5
+#<init>(Ljava/lang/Iterable;)V
+#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.2.0.beta1
+#performOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V

+###org/ehcache/impl/internal/loaderwriter/writebehind/operations/DeleteOperation
@3.0.0.m5
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;J)V
+#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createBatchOperation(Ljava/util/List;)Lorg/ehcache/impl/internal/loaderwriter/writebehind/operations/BatchOperation;
+#getKey()Ljava/lang/Object;
+#getCreationTime()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.2.0.beta1
+#performOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#createBatchOperation(Ljava/util/List;)Lorg/ehcache/impl/internal/loaderwriter/writebehind/operations/BatchOperation;

+###org/ehcache/impl/internal/loaderwriter/writebehind/operations/KeyBasedOperation
@3.0.0.m5
+#getKey()Ljava/lang/Object;
+#getCreationTime()J

+###org/ehcache/impl/internal/loaderwriter/writebehind/operations/SingleOperation
@3.0.0.m5
+#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createBatchOperation(Ljava/util/List;)Lorg/ehcache/impl/internal/loaderwriter/writebehind/operations/BatchOperation;
@3.2.0.beta1
+#performOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#createBatchOperation(Ljava/util/List;)Lorg/ehcache/impl/internal/loaderwriter/writebehind/operations/BatchOperation;

+###org/ehcache/impl/internal/loaderwriter/writebehind/operations/WriteAllOperation
@3.0.0.m5
+#<init>(Ljava/lang/Iterable;)V
+#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.2.0.beta1
+#performOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V

+###org/ehcache/impl/internal/loaderwriter/writebehind/operations/WriteOperation
@3.0.0.m5
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;J)V
+#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createBatchOperation(Ljava/util/List;)Lorg/ehcache/impl/internal/loaderwriter/writebehind/operations/BatchOperation;
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#getCreationTime()J
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.2.0.beta1
+#performOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
-#createBatchOperation(Ljava/util/List;)Lorg/ehcache/impl/internal/loaderwriter/writebehind/operations/BatchOperation;

+###org/ehcache/impl/internal/persistence/DefaultDiskResourceServiceFactory
@3.2.0.beta1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/persistence/DefaultDiskResourceService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/persistence/DefaultLocalPersistenceServiceFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/persistence/DefaultLocalPersistenceService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/resilience/AbstractResilienceStrategy
@3.7.0
+#iteratorFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)Lorg/ehcache/Cache$Entry;

+###org/ehcache/impl/internal/resilience/RobustLoaderWriterResilienceStrategy
@3.7.0
+#<init>(Lorg/ehcache/spi/resilience/RecoveryStore;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#clearFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)V

+###org/ehcache/impl/internal/resilience/RobustResilienceStrategy
@3.7.0
+#<init>(Lorg/ehcache/spi/resilience/RecoveryStore;)V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#clearFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)V

+###org/ehcache/impl/internal/sizeof/DefaultSizeOfEngine
@3.0.0.m5
+#<init>(JJ)V
+#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)J
@3.0.0.rc2
+#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)J
-#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)J

+###org/ehcache/impl/internal/sizeof/DefaultSizeOfEngineProvider
@3.0.0.m5
+#<init>(JJ)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createSizeOfEngine(Lorg/ehcache/config/ResourceUnit;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/sizeof/SizeOfEngine;
@3.0.0.rc2
+#createSizeOfEngine(Lorg/ehcache/config/ResourceUnit;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/heap/SizeOfEngine;
-#createSizeOfEngine(Lorg/ehcache/config/ResourceUnit;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/sizeof/SizeOfEngine;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/impl/internal/sizeof/DefaultSizeOfEngineProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/sizeof/SizeOfEngineProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.rc2
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/store/heap/SizeOfEngineProvider;
-#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/sizeof/SizeOfEngineProvider;

+###org/ehcache/impl/internal/sizeof/NoopSizeOfEngine
@3.0.0.m5
+#<init>()V
+#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)J
@3.0.0.rc2
+#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)J
-#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)J

+###org/ehcache/impl/internal/sizeof/listeners/EhcacheVisitorListener
@3.0.0.m5
+#<init>(JJ)V
+#visited(Ljava/lang/Object;J)V

+###org/ehcache/impl/internal/sizeof/listeners/exceptions/VisitorListenerException
@3.0.0.m5
+#<init>(Ljava/lang/String;)V

+###org/ehcache/impl/internal/spi/copy/DefaultCopyProvider
@3.0.0.m5
+#<init>(Lorg/ehcache/impl/config/copy/DefaultCopyProviderConfiguration;)V
+#createKeyCopier(Ljava/lang/Class;Lorg/ehcache/spi/serialization/Serializer;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/copy/Copier;
+#createValueCopier(Ljava/lang/Class;Lorg/ehcache/spi/serialization/Serializer;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/copy/Copier;
@3.0.0.rc3
+#releaseCopier(Lorg/ehcache/spi/copy/Copier;)V

+###org/ehcache/impl/internal/spi/copy/DefaultCopyProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/copy/CopyProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/spi/event/DefaultCacheEventListenerProvider
@3.0.0.m5
+#<init>()V
+#createEventListener(Ljava/lang/String;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/event/CacheEventListener;
+#releaseEventListener(Lorg/ehcache/event/CacheEventListener;)V

+###org/ehcache/impl/internal/spi/event/DefaultCacheEventListenerProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/spi/event/DefaultCacheEventListenerProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.9.1
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/events/CacheEventListenerProvider;
-#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/spi/event/DefaultCacheEventListenerProvider;

+###org/ehcache/impl/internal/spi/loaderwriter/DefaultCacheLoaderWriterProvider
@3.0.0.m5
+#<init>(Lorg/ehcache/impl/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;)V
+#createCacheLoaderWriter(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#releaseCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.7.0
+#releaseCacheLoaderWriter(Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#getPreConfiguredCacheLoaderWriterConfig(Ljava/lang/String;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriterConfiguration;
+#isLoaderJsrProvided(Ljava/lang/String;)Z
-#releaseCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V

+###org/ehcache/impl/internal/spi/loaderwriter/DefaultCacheLoaderWriterProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/spi/loaderwriter/DefaultCacheLoaderWriterProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.9.1
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriterProvider;
-#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/spi/loaderwriter/DefaultCacheLoaderWriterProvider;

+###org/ehcache/impl/internal/spi/resilience/DefaultResilienceStrategyProvider
@3.5.0
+#createResilienceStrategy(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/resilience/RecoveryStore;)Lorg/ehcache/spi/resilience/ResilienceStrategy;
+#createResilienceStrategy(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/resilience/RecoveryStore;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/spi/resilience/ResilienceStrategy;
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V

+###org/ehcache/impl/internal/spi/resilience/DefaultResilienceStrategyProviderFactory
@3.5.0
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/resilience/ResilienceStrategyProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/spi/serialization/DefaultSerializationProvider
@3.0.0.m5
+#<init>(Lorg/ehcache/impl/config/serializer/DefaultSerializationProviderConfiguration;)V
+#createKeySerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
+#createValueSerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
+#releaseSerializer(Lorg/ehcache/spi/serialization/Serializer;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V

+###org/ehcache/impl/internal/spi/serialization/DefaultSerializationProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/spi/serialization/DefaultSerializationProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/store/BinaryValueHolder
@3.0.0.rc2
+#getBinaryValue()Ljava/nio/ByteBuffer;
+#isBinaryValueAvailable()Z

+###org/ehcache/impl/internal/store/basic/NopStore
@3.1.4
+#<init>()V
+#getConfigurationChangeListeners()Ljava/util/List;
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)Z
+#setInvalidationValve(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier$InvalidationValve;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
@3.5.0
+#computeIfAbsentAndFault(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
-#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
@3.7.0
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndCompute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeAndGet(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;

+###org/ehcache/impl/internal/store/disk/DiskWriteThreadPool
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;I)V
+#newInstance()Ljava/util/concurrent/ExecutorService;
+#newInstance()Ljava/lang/Object;

+###org/ehcache/impl/internal/store/disk/EhcachePersistentConcurrentOffHeapClockCache
@3.0.0.m5
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;)V
+#<init>(Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;I)V
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#nextIdFor(Ljava/lang/Object;)J
@3.0.0.rc1
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;)V
+#<init>(Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;I)V
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#computeIfPresentAndPin(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/Function;)Z
-#<init>(Ljava/io/ObjectInput;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;)V
-#<init>(Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;I)V
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
@3.0.0.rc2
+#allocatedMemory()J
+#occupiedMemory()J
+#dataAllocatedMemory()J
+#dataOccupiedMemory()J
+#dataSize()J
+#longSize()J
+#tableCapacity()J
+#usedSlotCount()J
+#removedSlotCount()J
+#reprobeLength()J
+#vitalMemory()J
+#dataVitalMemory()J
@3.0.0
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/config/EvictionAdvisor;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;)V
+#<init>(Lorg/ehcache/config/EvictionAdvisor;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;I)V
-#<init>(Ljava/io/ObjectInput;Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;)V
-#<init>(Lorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory;I)V
@3.5.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#computeIfPresentAndPin(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Z
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#computeIfPresentAndPin(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/Function;)Z

+###org/ehcache/impl/internal/store/disk/OffHeapDiskStore$Provider
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/disk/OffHeapDiskStore;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createAuthoritativeTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
+#initAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
@3.0.0.rc2
+#rank(Ljava/util/Set;Ljava/util/Collection;)I
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/disk/OffHeapDiskStore;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
+#createAuthoritativeTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
+#initAuthoritativeTier(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/disk/OffHeapDiskStore;
-#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
-#initStore(Lorg/ehcache/core/spi/cache/Store;)V
-#createAuthoritativeTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;
-#releaseAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
-#initAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
+#rankAuthority(Lorg/ehcache/config/ResourceType;Ljava/util/Collection;)I

+###org/ehcache/impl/internal/store/disk/OffHeapDiskStore
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;ILorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
+#getConfigurationChangeListeners()Ljava/util/List;
+#persistent(Lorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/disk/persistent/PersistentPortability;
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;ILorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
-#<init>(Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;ILorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
@3.4.0
+#<init>(Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;IILorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
-#<init>(Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;ILorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
@3.8.0
+#<init>(Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;IILorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;JLorg/ehcache/core/spi/service/StatisticsService;)V
+#persistent(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentPortability;
-#<init>(Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;Lorg/ehcache/core/spi/service/ExecutionService;Ljava/lang/String;IILorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
-#persistent(Lorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/disk/persistent/PersistentPortability;

+###org/ehcache/impl/internal/store/disk/OffHeapDiskStoreProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/disk/OffHeapDiskStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory$EhcachePersistentSegment
@3.0.0.m5
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#evict(IZ)Z
@3.0.0.rc1
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z

+###org/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V
+#newInstance()Lorg/ehcache/impl/internal/store/disk/factories/EhcachePersistentSegmentFactory$EhcachePersistentSegment;
+#newInstance()Ljava/lang/Object;
@3.0.0
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V
-#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V
@3.1.0
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/impl/internal/store/offheap/SwitchableEvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V
-#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;ILorg/ehcache/impl/internal/store/offheap/SwitchableEvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V
-#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/impl/internal/store/offheap/SwitchableEvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V

+###org/ehcache/impl/internal/store/heap/OnHeapStore$Provider
@3.0.0.m5
+#<init>()V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/heap/OnHeapStore;
+#createStoreInternal(Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/events/StoreEventDispatcher;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/heap/OnHeapStore;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
+#createHigherCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;
+#releaseHigherCachingTier(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;)V
+#initHigherCachingTier(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;)V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
@3.0.0.rc2
+#rank(Ljava/util/Set;Ljava/util/Collection;)I
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/heap/OnHeapStore;
+#createStoreInternal(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/events/StoreEventDispatcher;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/heap/OnHeapStore;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
+#createCachingTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/store/tiering/CachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/store/tiering/CachingTier;)V
+#createHigherCachingTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/HigherCachingTier;
+#releaseHigherCachingTier(Lorg/ehcache/core/spi/store/tiering/HigherCachingTier;)V
+#initHigherCachingTier(Lorg/ehcache/core/spi/store/tiering/HigherCachingTier;)V
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/heap/OnHeapStore;
-#createStoreInternal(Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/events/StoreEventDispatcher;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/heap/OnHeapStore;
-#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
-#initStore(Lorg/ehcache/core/spi/cache/Store;)V
-#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/CachingTier;
-#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
-#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
-#createHigherCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;
-#releaseHigherCachingTier(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;)V
-#initHigherCachingTier(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;)V
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
+#rankCachingTier(Ljava/util/Set;Ljava/util/Collection;)I

+###org/ehcache/impl/internal/store/heap/OnHeapStore
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/sizeof/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/function/Function;)V
+#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#getConfigurationChangeListeners()Ljava/util/List;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
@3.0.0.rc1
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)V
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
-#put(Ljava/lang/Object;Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/function/Function;)V
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#setInvalidationListener(Lorg/ehcache/core/spi/store/tiering/CachingTier$InvalidationListener;)V
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
-#<init>(Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/sizeof/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;)V
-#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
-#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
@3.0.2
+#invalidate()V
@3.1.0
+#invalidateAll()V
+#silentInvalidateAll(Lorg/ehcache/core/spi/function/BiFunction;)V
+#silentInvalidateAllWithHash(JLorg/ehcache/core/spi/function/BiFunction;)V
+#invalidateAllWithHash(J)V
-#invalidate()V
@3.5.0
+#getOrComputeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#silentInvalidate(Ljava/lang/Object;Ljava/util/function/Function;)V
+#silentInvalidateAll(Ljava/util/function/BiFunction;)V
+#silentInvalidateAllWithHash(JLjava/util/function/BiFunction;)V
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkComputeIfAbsent(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Map;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)V
-#silentInvalidateAll(Lorg/ehcache/core/spi/function/BiFunction;)V
-#silentInvalidateAllWithHash(JLorg/ehcache/core/spi/function/BiFunction;)V
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
@3.6.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;Ljava/util/function/Supplier;)V
@3.7.0
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndCompute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeAndGet(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.7.1
+#getOrDefault(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.8.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;Lorg/ehcache/core/spi/service/StatisticsService;)V
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;Ljava/util/function/Supplier;Lorg/ehcache/core/spi/service/StatisticsService;)V
-#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;)V
-#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;Ljava/util/function/Supplier;)V
@3.9.11
-#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;Ljava/util/function/Supplier;Lorg/ehcache/core/spi/service/StatisticsService;)V
@3.10.0-alpha0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;Ljava/util/function/Supplier;Lorg/ehcache/core/spi/service/StatisticsService;)V
@3.10.5
-#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/core/spi/store/heap/SizeOfEngine;Lorg/ehcache/core/events/StoreEventDispatcher;Ljava/util/function/Supplier;Lorg/ehcache/core/spi/service/StatisticsService;)V

+###org/ehcache/impl/internal/store/heap/OnHeapStoreProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/heap/OnHeapStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/store/heap/OnHeapStrategy$AllStrategy
@3.7.0
+#<init>(Lorg/ehcache/impl/internal/store/heap/OnHeapStore;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/core/spi/time/TimeSource;)V
+#isExpired(Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;)Z
+#setAccessAndExpiryTimeWhenCallerOutsideLock(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;J)V
+#getAccessDuration(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)Ljava/time/Duration;
+#getUpdateDuration(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;Ljava/lang/Object;)Ljava/time/Duration;
+#setAccessAndExpiryWhenCallerlUnderLock(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;JLorg/ehcache/core/events/StoreEventSink;)Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;

+###org/ehcache/impl/internal/store/heap/OnHeapStrategy$NoExpirationStrategy
@3.7.0
+#<init>()V
+#isExpired(Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;)Z
+#setAccessAndExpiryTimeWhenCallerOutsideLock(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;J)V
+#setAccessAndExpiryWhenCallerlUnderLock(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;JLorg/ehcache/core/events/StoreEventSink;)Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;
+#getAccessDuration(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)Ljava/time/Duration;
+#getUpdateDuration(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;Ljava/lang/Object;)Ljava/time/Duration;

+###org/ehcache/impl/internal/store/heap/OnHeapStrategy$TTLStrategy
@3.7.0
+#<init>(Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/core/spi/time/TimeSource;)V
+#isExpired(Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;)Z
+#setAccessAndExpiryTimeWhenCallerOutsideLock(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;J)V
+#setAccessAndExpiryWhenCallerlUnderLock(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;JLorg/ehcache/core/events/StoreEventSink;)Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;
+#getAccessDuration(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)Ljava/time/Duration;
+#getUpdateDuration(Ljava/lang/Object;Lorg/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder;Ljava/lang/Object;)Ljava/time/Duration;

+###org/ehcache/impl/internal/store/heap/holders/CopiedOnHeapKey
@3.0.0.m5
+#<init>(Ljava/lang/Object;Lorg/ehcache/spi/copy/Copier;)V
+#getActualKeyObject()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/ehcache/impl/internal/store/heap/holders/CopiedOnHeapValueHolder
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/copy/Copier;JLorg/ehcache/expiry/Duration;)V
+#<init>(Ljava/lang/Object;JZLorg/ehcache/spi/copy/Copier;)V
+#<init>(Ljava/lang/Object;JJZLorg/ehcache/spi/copy/Copier;)V
+#value()Ljava/lang/Object;
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/copy/Copier;JLorg/ehcache/expiry/Duration;)V
-#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/copy/Copier;JLorg/ehcache/expiry/Duration;)V
@3.5.0
+#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/copy/Copier;JLjava/time/Duration;)V
+#get()Ljava/lang/Object;
-#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/copy/Copier;JLorg/ehcache/expiry/Duration;)V
-#value()Ljava/lang/Object;

+###org/ehcache/impl/internal/store/heap/holders/LookupOnlyOnHeapKey
@3.0.0.m5
+#<init>(Ljava/lang/Object;)V
+#getActualKeyObject()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/ehcache/impl/internal/store/heap/holders/OnHeapKey
@3.0.0.m5
+#getActualKeyObject()Ljava/lang/Object;

+###org/ehcache/impl/internal/store/heap/holders/OnHeapValueHolder
@3.0.0.m5
+#veto()Z
+#size()J
+#setSize(J)V
+#equals(Ljava/lang/Object;)Z
@3.0.0
+#evictionAdvice()Z
-#veto()Z

+###org/ehcache/impl/internal/store/heap/holders/SerializedOnHeapValueHolder
@3.0.0.m5
+#<init>(Ljava/lang/Object;JZLorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Ljava/lang/Object;JJZLorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
+#value()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc1
+#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/nio/ByteBuffer;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
+#getBinaryValue()Ljava/nio/ByteBuffer;
+#isBinaryValueAvailable()Z
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
+#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/nio/ByteBuffer;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
-#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
-#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/nio/ByteBuffer;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
@3.5.0
+#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/serialization/Serializer;JLjava/time/Duration;)V
+#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/nio/ByteBuffer;ZLorg/ehcache/spi/serialization/Serializer;JLjava/time/Duration;)V
+#get()Ljava/lang/Object;
-#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/lang/Object;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
-#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/nio/ByteBuffer;ZLorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
-#value()Ljava/lang/Object;

+###org/ehcache/impl/internal/store/loaderwriter/LoaderWriterStoreProvider
@3.7.0
+#<init>()V
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V
+#rank(Ljava/util/Set;Ljava/util/Collection;)I
+#wrapperStoreRank(Ljava/util/Collection;)I

+###org/ehcache/impl/internal/store/loaderwriter/LoaderWriterStoreProviderFactory
@3.7.0
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/loaderwriter/LoaderWriterStoreProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/store/loaderwriter/LoaderWriterValueHolder
@3.7.0
+#<init>(Ljava/lang/Object;)V
+#get()Ljava/lang/Object;

+###org/ehcache/impl/internal/store/loaderwriter/LocalLoaderWriterStore
@3.7.0
+#<init>(Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;ZLorg/ehcache/expiry/ExpiryPolicy;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#getAndCompute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeAndGet(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#getConfigurationChangeListeners()Ljava/util/List;

+###org/ehcache/impl/internal/store/loaderwriter/LocalWriteBehindLoaderWriterStore
@3.7.0
+#<init>(Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;ZLorg/ehcache/expiry/ExpiryPolicy;)V
+#getCacheLoaderWriter()Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;

+###org/ehcache/impl/internal/store/offheap/AbstractOffHeapStore
@3.0.0.m5
+#<init>(Ljava/lang/String;Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)Z
+#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#installMapping(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#registerEmergencyValve(Ljava/util/concurrent/Callable;)V
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;)V
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Ljava/util/concurrent/atomic/AtomicBoolean;)V
@3.0.0.rc1
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/NullaryFunction;)V
+#installMapping(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#put(Ljava/lang/Object;Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
-#installMapping(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
@3.0.0.rc2
+#<init>(Ljava/lang/String;Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/core/spi/store/Store$ValueHolder;)Z
+#setInvalidationListener(Lorg/ehcache/core/spi/store/tiering/CachingTier$InvalidationListener;)V
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#installMapping(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#<init>(Ljava/lang/String;Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;)V
-#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
-#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
-#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#getAndFault(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#flush(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)Z
-#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
-#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#installMapping(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
@3.0.0.rc3
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Lorg/ehcache/core/events/StoreEventSink;)V
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/ehcache/core/events/StoreEventSink;)V
-#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;)V
-#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Ljava/util/concurrent/atomic/AtomicBoolean;)V
@3.0.2
-#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Lorg/ehcache/core/events/StoreEventSink;)V
-#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/ehcache/core/events/StoreEventSink;)V
@3.1.0
+#setInvalidationValve(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier$InvalidationValve;)V
+#invalidateAll()V
+#invalidateAllWithHash(J)V
-#invalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/NullaryFunction;)V
-#registerEmergencyValve(Ljava/util/concurrent/Callable;)V
@3.5.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#computeIfAbsentAndFault(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#installMapping(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#installMapping(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.6.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;)V
-#<init>(Ljava/lang/String;Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;)V
@3.7.0
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndCompute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeAndGet(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.8.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;Lorg/ehcache/core/spi/service/StatisticsService;)V
-#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;)V

+###org/ehcache/impl/internal/store/offheap/BasicOffHeapValueHolder
@3.0.0.rc1
+#<init>(JLjava/lang/Object;JJ)V
+#<init>(JLjava/lang/Object;JJJJ)V
+#value()Ljava/lang/Object;
@3.5.0
+#get()Ljava/lang/Object;
-#value()Ljava/lang/Object;
@3.6.2
+#<init>(JLjava/lang/Object;JJJ)V
-#<init>(JLjava/lang/Object;JJJJ)V

+###org/ehcache/impl/internal/store/offheap/EhcacheConcurrentOffHeapClockCache
@3.0.0.m5
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#nextIdFor(Ljava/lang/Object;)J
@3.0.0.rc1
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#computeIfPresentAndPin(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/Function;)Z
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
@3.0.0.rc2
+#allocatedMemory()J
+#occupiedMemory()J
+#dataAllocatedMemory()J
+#dataOccupiedMemory()J
+#dataSize()J
+#longSize()J
+#tableCapacity()J
+#usedSlotCount()J
+#removedSlotCount()J
+#reprobeLength()J
+#vitalMemory()J
+#dataVitalMemory()J
@3.2.0.beta1
+#<init>(Lorg/ehcache/config/EvictionAdvisor;Lorg/terracotta/offheapstore/util/Factory;I)V
@3.5.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#computeIfPresentAndPin(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Z
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#computeIfPresentAndPin(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/Function;)Z
@3.8.0
+#<init>(Lorg/ehcache/config/EvictionAdvisor;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
-#<init>(Lorg/ehcache/config/EvictionAdvisor;Lorg/terracotta/offheapstore/util/Factory;I)V

+###org/ehcache/impl/internal/store/offheap/EhcacheOffHeapBackingMap
@3.0.0.m5
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#nextIdFor(Ljava/lang/Object;)J
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getSegments()Ljava/util/List;
+#shrinkOthers(I)Z
@3.0.0.rc1
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/Function;)Z
+#computeIfPresentAndPin(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
@3.1.0
+#removeAllWithHash(I)Ljava/util/Map;
@3.5.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Z
+#computeIfPresentAndPin(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/Function;)Z
-#computeIfPresentAndPin(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Ljava/lang/Object;

+###org/ehcache/impl/internal/store/offheap/HeuristicConfiguration
@3.0.0.m5
+#<init>(J)V
+#getMaximumSize()J
+#getMinimumChunkSize()I
+#getMaximumChunkSize()I
+#getConcurrency()I
+#getInitialSegmentTableSize()I
+#getSegmentDataPageSize()I
+#toString()Ljava/lang/String;

+###org/ehcache/impl/internal/store/offheap/LazyOffHeapValueHolder
@3.0.0.rc1
+#<init>(JLjava/nio/ByteBuffer;Lorg/ehcache/spi/serialization/Serializer;JJJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
+#value()Ljava/lang/Object;
+#getBinaryValue()Ljava/nio/ByteBuffer;
+#isBinaryValueAvailable()Z
@3.5.0
+#get()Ljava/lang/Object;
-#value()Ljava/lang/Object;
@3.6.2
+#<init>(JLjava/nio/ByteBuffer;Lorg/ehcache/spi/serialization/Serializer;JJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
-#<init>(JLjava/nio/ByteBuffer;Lorg/ehcache/spi/serialization/Serializer;JJJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
@3.8.0
+#<init>(JLjava/nio/ByteBuffer;Lorg/ehcache/spi/serialization/Serializer;JJJLorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/WriteContext;)V
-#<init>(JLjava/nio/ByteBuffer;Lorg/ehcache/spi/serialization/Serializer;JJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V

+###org/ehcache/impl/internal/store/offheap/MemorySizeParser
@3.0.0.m5
+#<init>()V
+#parse(Ljava/lang/String;)J

+###org/ehcache/impl/internal/store/offheap/OffHeapMapStatistics
@3.0.0.rc2
+#allocatedMemory()J
+#occupiedMemory()J
+#dataAllocatedMemory()J
+#dataOccupiedMemory()J
+#dataSize()J
+#longSize()J
+#tableCapacity()J
+#usedSlotCount()J
+#removedSlotCount()J
+#reprobeLength()J
+#vitalMemory()J
+#dataVitalMemory()J

+###org/ehcache/impl/internal/store/offheap/OffHeapStore$Provider
@3.0.0.m5
+#<init>()V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/offheap/OffHeapStore;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createAuthoritativeTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
+#initAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
+#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
@3.0.0.rc2
+#rank(Ljava/util/Set;Ljava/util/Collection;)I
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/offheap/OffHeapStore;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
+#createAuthoritativeTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
+#initAuthoritativeTier(Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
+#createCachingTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/LowerCachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/store/tiering/LowerCachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/store/tiering/LowerCachingTier;)V
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/impl/internal/store/offheap/OffHeapStore;
-#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
-#initStore(Lorg/ehcache/core/spi/cache/Store;)V
-#createAuthoritativeTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;
-#releaseAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
-#initAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
-#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;
-#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
-#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
+#rankAuthority(Lorg/ehcache/config/ResourceType;Ljava/util/Collection;)I

+###org/ehcache/impl/internal/store/offheap/OffHeapStore
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
-#<init>(Lorg/ehcache/core/spi/cache/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V
@3.8.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;JLorg/ehcache/core/spi/service/StatisticsService;)V
-#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/core/events/StoreEventDispatcher;J)V

+###org/ehcache/impl/internal/store/offheap/OffHeapStoreProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/offheap/OffHeapStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/store/offheap/OffHeapStoreUtils
@3.0.0.m5
+#<init>()V
+#getBufferSource()Lorg/terracotta/offheapstore/buffersource/BufferSource;
+#getAdvancedMemorySizeConfigProperty(Ljava/lang/String;J)J
+#getAdvancedLongConfigProperty(Ljava/lang/String;J)J
+#getAdvancedBooleanConfigProperty(Ljava/lang/String;Z)Z
@3.5.0
-#<init>()V
@3.8.0
+#getBufferSource()Lorg/ehcache/shadow/org/terracotta/offheapstore/buffersource/BufferSource;
-#getBufferSource()Lorg/terracotta/offheapstore/buffersource/BufferSource;

+###org/ehcache/impl/internal/store/offheap/OffHeapValueHolder
@3.0.0.m5
+#<init>(JLjava/lang/Object;JJ)V
+#<init>(JLjava/lang/Object;JJJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
+#value()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#writeBack()V
+#updateMetadata(Lorg/ehcache/core/spi/cache/Store$ValueHolder;)V
@3.0.0.rc1
+#<init>(JJJ)V
-#<init>(JLjava/lang/Object;JJ)V
-#<init>(JLjava/lang/Object;JJJJLorg/terracotta/offheapstore/storage/portability/WriteContext;)V
-#value()Ljava/lang/Object;
-#writeBack()V
-#updateMetadata(Lorg/ehcache/core/spi/cache/Store$ValueHolder;)V

+###org/ehcache/impl/internal/store/offheap/SwitchableEvictionAdvisor
@3.1.0
+#isSwitchedOn()Z
+#setSwitchedOn(Z)V

+###org/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener
@3.0.0.m5
+#onEviction(Ljava/lang/Object;Ljava/lang/Object;)V

+###org/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment
@3.0.0.m5
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#evict(IZ)Z
@3.0.0.rc1
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
-#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z

+###org/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
+#newInstance()Lorg/terracotta/offheapstore/pinning/PinnableSegment;
+#newInstance()Ljava/lang/Object;
@3.0.0
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
-#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionVeto;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
@3.1.0
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/impl/internal/store/offheap/SwitchableEvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
-#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/config/EvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;ILorg/ehcache/impl/internal/store/offheap/SwitchableEvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
+#newInstance()Lorg/ehcache/shadow/org/terracotta/offheapstore/pinning/PinnableSegment;
-#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/impl/internal/store/offheap/SwitchableEvictionAdvisor;Lorg/ehcache/impl/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;)V
-#newInstance()Lorg/terracotta/offheapstore/pinning/PinnableSegment;

+###org/ehcache/impl/internal/store/offheap/portability/OffHeapValueHolderPortability
@3.0.0.m5
+#<init>(Lorg/ehcache/spi/serialization/Serializer;)V
+#encode(Lorg/ehcache/impl/internal/store/offheap/OffHeapValueHolder;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Lorg/ehcache/impl/internal/store/offheap/OffHeapValueHolder;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/storage/portability/WriteContext;)Lorg/ehcache/impl/internal/store/offheap/OffHeapValueHolder;
+#decode(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/storage/portability/WriteContext;)Ljava/lang/Object;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.8.0
+#decode(Ljava/nio/ByteBuffer;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/WriteContext;)Lorg/ehcache/impl/internal/store/offheap/OffHeapValueHolder;
+#decode(Ljava/nio/ByteBuffer;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/WriteContext;)Ljava/lang/Object;
-#decode(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/storage/portability/WriteContext;)Lorg/ehcache/impl/internal/store/offheap/OffHeapValueHolder;
-#decode(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/storage/portability/WriteContext;)Ljava/lang/Object;

+###org/ehcache/impl/internal/store/offheap/portability/SerializerPortability
@3.0.0.m5
+#<init>(Lorg/ehcache/spi/serialization/Serializer;)V
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z

+###org/ehcache/impl/internal/store/tiering/CompoundCachingTier$Provider
@3.0.0.m5
+#<init>()V
+#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.rc2
+#createCachingTier(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/store/tiering/CachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/store/tiering/CachingTier;)V
-#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/CachingTier;
-#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
-#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
+#rankCachingTier(Ljava/util/Set;Ljava/util/Collection;)I

+###org/ehcache/impl/internal/store/tiering/CompoundCachingTier
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#clear()V
+#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.rc1
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/tiering/HigherCachingTier;Lorg/ehcache/core/spi/store/tiering/LowerCachingTier;)V
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#setInvalidationListener(Lorg/ehcache/core/spi/store/tiering/CachingTier$InvalidationListener;)V
-#<init>(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
@3.0.2
+#invalidate()V
@3.1.0
+#invalidateAll()V
+#invalidateAllWithHash(J)V
-#invalidate()V
@3.5.0
+#getOrComputeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.7.1
+#getOrDefault(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;

+###org/ehcache/impl/internal/store/tiering/CompoundCachingTierProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/tiering/CompoundCachingTier$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/store/tiering/TieredStore$Provider
@3.0.0
+#<init>()V
+#rank(Ljava/util/Set;Ljava/util/Collection;)I
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V

+###org/ehcache/impl/internal/store/tiering/TieredStore
@3.0.0
+#<init>(Lorg/ehcache/core/spi/store/tiering/CachingTier;Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#getConfigurationChangeListeners()Ljava/util/List;
@3.5.0
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Ljava/util/function/Function;)Ljava/util/Map;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
@3.7.0
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndCompute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeAndGet(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#compute(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
@3.8.2
+#getAndPut(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;

+###org/ehcache/impl/internal/store/tiering/TieredStoreProviderFactory
@3.0.0
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/tiering/TieredStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;

+###org/ehcache/impl/internal/util/Pacer
@3.7.0
+#<init>(Lorg/ehcache/core/spi/time/TimeSource;J)V
+#pacedCall(Ljava/lang/Runnable;Ljava/lang/Runnable;)V

+###org/ehcache/impl/internal/util/ServiceUtil
@3.0.0.m5
+#completeFuture()Ljava/util/concurrent/Future;

+###org/ehcache/impl/internal/util/ThreadFactoryUtil
@3.0.0.m5
+#<init>()V
+#threadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
@3.4.0
+#getCreatedThreads()Ljava/util/Map;
-#<init>()V

+###org/ehcache/impl/persistence/DefaultDiskResourceService
@3.2.0.beta1
+#<init>()V
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#startForMaintenance(Lorg/ehcache/spi/service/ServiceProvider;Lorg/ehcache/spi/service/MaintainableService$MaintenanceScope;)V
+#stop()V
+#handlesResourceType(Lorg/ehcache/config/ResourceType;)Z
+#getPersistenceSpaceIdentifier(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;
+#releasePersistenceSpaceIdentifier(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;)V
+#destroy(Ljava/lang/String;)V
+#destroyAll()V
+#getStateRepositoryWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/spi/persistence/StateRepository;
+#createPersistenceContextWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;

+###org/ehcache/impl/persistence/DefaultLocalPersistenceService
@3.0.0.m5
+#<init>(Lorg/ehcache/core/config/persistence/PersistenceConfiguration;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#getOrCreatePersistenceSpace(Ljava/lang/String;)Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;
+#destroyPersistenceSpace(Ljava/lang/String;)V
+#destroyAllPersistenceSpaces()V
+#createPersistenceContextWithin(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;
+#getDirectoryFor(Ljava/lang/String;)Ljava/io/File;
@3.0.0.rc1
+#<init>(Lorg/ehcache/impl/config/persistence/PersistenceConfiguration;)V
+#startForMaintenance(Lorg/ehcache/spi/ServiceProvider;)V
+#handlesResourceType(Lorg/ehcache/config/ResourceType;)Z
+#additionalConfigurationsForPool(Ljava/lang/String;Lorg/ehcache/config/ResourcePool;)Ljava/util/Collection;
+#destroy(Ljava/lang/String;)V
+#destroyAll()V
+#create()V
-#<init>(Lorg/ehcache/core/config/persistence/PersistenceConfiguration;)V
-#destroyPersistenceSpace(Ljava/lang/String;)V
-#destroyAllPersistenceSpaces()V
@3.0.0.rc2
+#<init>(Lorg/ehcache/impl/config/persistence/DefaultPersistenceConfiguration;)V
-#<init>(Lorg/ehcache/impl/config/persistence/PersistenceConfiguration;)V
-#getDirectoryFor(Ljava/lang/String;)Ljava/io/File;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#startForMaintenance(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
-#startForMaintenance(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
+#getPersistenceSpaceIdentifier(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;
+#releasePersistenceSpaceIdentifier(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;)V
+#getStateRepositoryWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/spi/persistence/StateRepository;
+#createPersistenceContextWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;
-#additionalConfigurationsForPool(Ljava/lang/String;Lorg/ehcache/config/ResourcePool;)Ljava/util/Collection;
-#getOrCreatePersistenceSpace(Ljava/lang/String;)Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;
-#createPersistenceContextWithin(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;
-#create()V
@3.1.2
+#isStarted()Z
@3.2.0.beta1
+#startForMaintenance(Lorg/ehcache/spi/service/ServiceProvider;Lorg/ehcache/spi/service/MaintainableService$MaintenanceScope;)V
+#createSafeSpaceIdentifier(Ljava/lang/String;Ljava/lang/String;)Lorg/ehcache/core/spi/service/LocalPersistenceService$SafeSpaceIdentifier;
+#createSafeSpace(Lorg/ehcache/core/spi/service/LocalPersistenceService$SafeSpaceIdentifier;)V
+#destroySafeSpace(Lorg/ehcache/core/spi/service/LocalPersistenceService$SafeSpaceIdentifier;Z)V
+#destroyAll(Ljava/lang/String;)V
-#isStarted()Z
-#startForMaintenance(Lorg/ehcache/spi/service/ServiceProvider;)V
-#handlesResourceType(Lorg/ehcache/config/ResourceType;)Z
-#getPersistenceSpaceIdentifier(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;
-#releasePersistenceSpaceIdentifier(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;)V
-#destroy(Ljava/lang/String;)V
-#destroyAll()V
-#getStateRepositoryWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/spi/persistence/StateRepository;
-#createPersistenceContextWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;

+###org/ehcache/impl/serialization/ByteArraySerializer
@3.0.0.rc3
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#serialize([B)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)[B
+#equals([BLjava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/CharSerializer
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#serialize(Ljava/lang/Character;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Character;
+#equals(Ljava/lang/Character;Ljava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/CompactJavaSerializer
@3.0.0.m5
+#<init>(Ljava/lang/ClassLoader;)V
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#getObjectOutputStream(Ljava/io/OutputStream;)Ljava/io/ObjectOutputStream;
+#getObjectInputStream(Ljava/io/InputStream;)Ljava/io/ObjectInputStream;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#close()V
@3.0.0.rc2
-#getObjectOutputStream(Ljava/io/OutputStream;)Ljava/io/ObjectOutputStream;
-#getObjectInputStream(Ljava/io/InputStream;)Ljava/io/ObjectInputStream;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#close()V
@3.2.0.beta1
+#asTypedSerializer()Ljava/lang/Class;
+#init(Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/DoubleSerializer
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#serialize(Ljava/lang/Double;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Double;
+#equals(Ljava/lang/Double;Ljava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/FloatSerializer
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#serialize(Ljava/lang/Float;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Float;
+#equals(Ljava/lang/Float;Ljava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/IntegerSerializer
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#serialize(Ljava/lang/Integer;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Integer;
+#equals(Ljava/lang/Integer;Ljava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/LongSerializer
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#serialize(Ljava/lang/Long;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Long;
+#equals(Ljava/lang/Long;Ljava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/PlainJavaSerializer
@3.1.0
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/StringSerializer
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#serialize(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/String;
+#equals(Ljava/lang/String;Ljava/nio/ByteBuffer;)Z
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.1.0
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
@3.2.0.beta1
-#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/impl/serialization/TransientStateHolder
@3.2.0.beta1
+#<init>()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/ehcache/impl/serialization/TransientStateRepository
@3.2.0.beta1
+#<init>()V
+#getPersistentStateHolder(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/spi/persistence/StateHolder;
@3.5.0
+#getPersistentStateHolder(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Predicate;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/persistence/StateHolder;
-#getPersistentStateHolder(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/spi/persistence/StateHolder;

+###org/ehcache/impl/store/BaseStore$BaseStoreProvider
@3.7.0
@3.8.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V

+###org/ehcache/impl/store/BaseStore
@3.7.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Z)V
@3.8.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;Lorg/ehcache/core/spi/service/StatisticsService;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;ZLorg/ehcache/core/spi/service/StatisticsService;)V
-#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;)V
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Z)V

+###org/ehcache/impl/store/DefaultStoreEventDispatcher
@3.8.0
+#<init>(I)V
+#eventSink()Lorg/ehcache/core/events/StoreEventSink;

+###org/ehcache/impl/store/HashUtils
@3.3.1
+#<init>()V
+#intHashToLong(I)J
+#longHashToInt(J)I

+###org/ehcache/javadoc/PrivateApi
@3.10.0-alpha1

+###org/ehcache/javadoc/PublicApi
@3.10.0-alpha1

+###org/ehcache/jsr107/CloseUtil
@3.6.0
+#<init>()V
+#closeAllAfter(Ljava/lang/Throwable;[Ljava/lang/Object;)Ljava/lang/Throwable;
+#chain(Ljava/util/stream/Stream;)V

+###org/ehcache/jsr107/Eh107Configuration
@3.0.0.m2
+#<init>()V
+#fromEhcacheCacheConfiguration(Lorg/ehcache/config/CacheConfiguration;)Ljavax/cache/configuration/Configuration;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@3.0.0
+#fromEhcacheCacheConfiguration(Lorg/ehcache/config/Builder;)Ljavax/cache/configuration/Configuration;

+###org/ehcache/jsr107/config/ConfigurationElementState
@3.0.1
+#values()[Lorg/ehcache/jsr107/config/ConfigurationElementState;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/jsr107/config/ConfigurationElementState;
+#asBoolean()Z

+###org/ehcache/jsr107/config/Jsr107CacheConfiguration
@3.0.1
+#<init>(Lorg/ehcache/jsr107/config/ConfigurationElementState;Lorg/ehcache/jsr107/config/ConfigurationElementState;)V
+#getServiceType()Ljava/lang/Class;
+#isManagementEnabled()Lorg/ehcache/jsr107/config/ConfigurationElementState;
+#isStatisticsEnabled()Lorg/ehcache/jsr107/config/ConfigurationElementState;

+###org/ehcache/jsr107/config/Jsr107Configuration
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/Map;Z)V
+#getDefaultTemplate()Ljava/lang/String;
+#getTemplates()Ljava/util/Map;
+#isJsr107CompliantAtomics()Z
+#getServiceType()Ljava/lang/Class;
@3.0.1
+#<init>(Ljava/lang/String;Ljava/util/Map;ZLorg/ehcache/jsr107/config/ConfigurationElementState;Lorg/ehcache/jsr107/config/ConfigurationElementState;)V
+#isEnableManagementAll()Lorg/ehcache/jsr107/config/ConfigurationElementState;
+#isEnableStatisticsAll()Lorg/ehcache/jsr107/config/ConfigurationElementState;
-#<init>(Ljava/lang/String;Ljava/util/Map;Z)V

+###org/ehcache/jsr107/internal/DefaultJsr107Service
@3.0.0.rc2
+#<init>(Lorg/ehcache/jsr107/config/Jsr107Configuration;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#getTemplateNameForCache(Ljava/lang/String;)Ljava/lang/String;
+#stop()V
+#jsr107CompliantAtomics()Z
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.0.1
+#isManagementEnabledOnAllCaches()Lorg/ehcache/jsr107/config/ConfigurationElementState;
+#isStatisticsEnabledOnAllCaches()Lorg/ehcache/jsr107/config/ConfigurationElementState;
@3.6.0
+#getStatistics()Lorg/ehcache/core/spi/service/StatisticsService;

+###org/ehcache/jsr107/internal/Jsr107CacheConfigurationParser
@3.0.1
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.6.0
+#getServiceType()Ljava/lang/Class;
+#unparseServiceConfiguration(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/w3c/dom/Element;
@3.7.0
+#parseServiceConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceConfiguration;
-#parseServiceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.10.0-alpha1
+#parse(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/jsr107/config/Jsr107CacheConfiguration;
+#safeUnparse(Lorg/w3c/dom/Document;Lorg/ehcache/jsr107/config/Jsr107CacheConfiguration;)Lorg/w3c/dom/Element;
+#safeUnparse(Lorg/w3c/dom/Document;Ljava/lang/Object;)Lorg/w3c/dom/Element;
+#parse(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Ljava/lang/Object;
-#getXmlSchema()Ljavax/xml/transform/Source;
-#getNamespace()Ljava/net/URI;
-#parseServiceConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceConfiguration;
-#unparseServiceConfiguration(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/w3c/dom/Element;

+###org/ehcache/jsr107/internal/Jsr107CacheLoaderWriter
@3.0.3
+#loadAllAlways(Ljava/lang/Iterable;)Ljava/util/Map;
@3.1.0
-###org/ehcache/jsr107/internal/Jsr107CacheLoaderWriter

+###org/ehcache/jsr107/internal/Jsr107LatencyMonitor
@3.9.1
+#<init>(Ljava/lang/Class;)V
+#average()D
+#clear()V
+#begin(J)V
+#end(JJLjava/lang/Enum;)V

+###org/ehcache/jsr107/internal/Jsr107Parser
@3.10.0-alpha1
+#<init>()V

+###org/ehcache/jsr107/internal/Jsr107ServiceConfigurationParser
@3.0.0.rc2
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.6.0
+#getServiceType()Ljava/lang/Class;
+#unparseServiceCreationConfiguration(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/w3c/dom/Element;
@3.7.0
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
-#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.10.0-alpha1
+#parse(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/jsr107/config/Jsr107Configuration;
+#safeUnparse(Lorg/w3c/dom/Document;Lorg/ehcache/jsr107/config/Jsr107Configuration;)Lorg/w3c/dom/Element;
+#safeUnparse(Lorg/w3c/dom/Document;Ljava/lang/Object;)Lorg/w3c/dom/Element;
+#parse(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Ljava/lang/Object;
-#getXmlSchema()Ljavax/xml/transform/Source;
-#getNamespace()Ljava/net/URI;
-#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
-#unparseServiceCreationConfiguration(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/w3c/dom/Element;

+###org/ehcache/jsr107/internal/WrappedCacheLoaderWriter
@3.0.3
+#<init>(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#loadAllAlways(Ljava/lang/Iterable;)Ljava/util/Map;
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/lang/Iterable;)V
@3.1.0
-###org/ehcache/jsr107/internal/WrappedCacheLoaderWriter

+###org/ehcache/jsr107/internal/tck/Eh107MBeanServerBuilder$Eh107MBeanServerDelegate
@3.0.0.rc2
+#<init>(Ljavax/management/MBeanServerDelegate;)V
+#getSpecificationName()Ljava/lang/String;
+#getSpecificationVersion()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationName()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
+#addNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#removeNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#removeNotificationListener(Ljavax/management/NotificationListener;)V
+#sendNotification(Ljavax/management/Notification;)V
+#getMBeanServerId()Ljava/lang/String;

+###org/ehcache/jsr107/internal/tck/Eh107MBeanServerBuilder
@3.0.0.rc2
+#<init>()V
+#newMBeanServer(Ljava/lang/String;Ljavax/management/MBeanServer;Ljavax/management/MBeanServerDelegate;)Ljavax/management/MBeanServer;

+###org/ehcache/shadow/org/terracotta/context/ContextCreationListener
@3.8.0
+#contextCreated(Ljava/lang/Object;)V

+###org/ehcache/shadow/org/terracotta/context/ContextElement
@3.8.0
+#identifier()Ljava/lang/Class;
+#attributes()Ljava/util/Map;

+###org/ehcache/shadow/org/terracotta/context/ContextListener
@3.8.0
+#graphAdded(Lorg/ehcache/shadow/org/terracotta/context/TreeNode;Lorg/ehcache/shadow/org/terracotta/context/TreeNode;)V
+#graphRemoved(Lorg/ehcache/shadow/org/terracotta/context/TreeNode;Lorg/ehcache/shadow/org/terracotta/context/TreeNode;)V

+###org/ehcache/shadow/org/terracotta/context/ContextManager$Association
@3.8.0
+#withChild(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/ContextManager$Association;
+#withParent(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/ContextManager$Association;

+###org/ehcache/shadow/org/terracotta/context/ContextManager$Dissociation
@3.8.0
+#fromChild(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/ContextManager$Dissociation;
+#fromParent(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/ContextManager$Dissociation;

+###org/ehcache/shadow/org/terracotta/context/ContextManager
@3.8.0
+#<init>()V
+#associate(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/ContextManager$Association;
+#dissociate(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/ContextManager$Dissociation;
+#nodeFor(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/TreeNode;
+#registerContextCreationListener(Lorg/ehcache/shadow/org/terracotta/context/ContextCreationListener;)V
+#deregisterContextCreationListener(Lorg/ehcache/shadow/org/terracotta/context/ContextCreationListener;)V
+#root(Ljava/lang/Object;)V
+#uproot(Ljava/lang/Object;)V
+#query(Lorg/ehcache/shadow/org/terracotta/context/query/Query;)Ljava/util/Set;
+#queryForSingleton(Lorg/ehcache/shadow/org/terracotta/context/query/Query;)Lorg/ehcache/shadow/org/terracotta/context/TreeNode;
+#registerContextListener(Lorg/ehcache/shadow/org/terracotta/context/ContextListener;)V
+#deregisterContextListener(Lorg/ehcache/shadow/org/terracotta/context/ContextListener;)V

+###org/ehcache/shadow/org/terracotta/context/TreeNode
@3.8.0
+#getChildren()Ljava/util/Set;
+#getPath()Ljava/util/List;
+#getPaths()Ljava/util/Collection;
+#getContext()Lorg/ehcache/shadow/org/terracotta/context/ContextElement;
+#toTreeString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/context/WeakIdentityHashMap$Cleanable
@3.8.0
+#clean()V

+###org/ehcache/shadow/org/terracotta/context/WeakIdentityHashMap
@3.8.0
+#<init>()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/context/annotations/ContextAttribute
@3.8.0
+#value()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/context/annotations/ContextChild
@3.8.0

+###org/ehcache/shadow/org/terracotta/context/annotations/ContextParent
@3.8.0

+###org/ehcache/shadow/org/terracotta/context/extractor/ObjectContextExtractor
@3.8.0
+#extract(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/ContextElement;

+###org/ehcache/shadow/org/terracotta/context/extractor/WeakFieldAttributeGetter
@3.8.0
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V
+#get()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/context/query/Matcher
@3.8.0
+#<init>()V
+#matches(Ljava/lang/Object;)Z

+###org/ehcache/shadow/org/terracotta/context/query/Matchers
@3.8.0
+#context(Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#attributes(Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#identifier(Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#subclassOf(Ljava/lang/Class;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#hasAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#hasAttribute(Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#anyOf([Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#allOf([Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#not(Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;

+###org/ehcache/shadow/org/terracotta/context/query/Queries
@3.8.0
+#self()Lorg/ehcache/shadow/org/terracotta/context/query/Query;
+#children()Lorg/ehcache/shadow/org/terracotta/context/query/Query;
+#descendants()Lorg/ehcache/shadow/org/terracotta/context/query/Query;

+###org/ehcache/shadow/org/terracotta/context/query/Query
@3.8.0
+#execute(Ljava/util/Set;)Ljava/util/Set;

+###org/ehcache/shadow/org/terracotta/context/query/QueryBuilder
@3.8.0
+#queryBuilder()Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#filter(Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;)Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#children()Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#parent()Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#descendants()Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#chain(Lorg/ehcache/shadow/org/terracotta/context/query/Query;)Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#ensureUnique()Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#empty()Lorg/ehcache/shadow/org/terracotta/context/query/QueryBuilder;
+#build()Lorg/ehcache/shadow/org/terracotta/context/query/Query;

+###org/ehcache/shadow/org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedEntryIterator
@3.8.0
+#next()Ljava/util/Map$Entry;
+#remove()V
+#next()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedEntrySet
@3.8.0
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V

+###org/ehcache/shadow/org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedKeyIterator
@3.8.0
+#next()Ljava/lang/Object;
+#remove()V

+###org/ehcache/shadow/org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedKeySet
@3.8.0
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V

+###org/ehcache/shadow/org/terracotta/offheapstore/AbstractLockedOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;IZ)V
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getEncodingForHashAndBinary(ILjava/nio/ByteBuffer;)Ljava/lang/Long;
+#installMappingForHashAndEncoding(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)J
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#removeNoReturn(Ljava/lang/Object;)Z
+#clear()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#evict(IZ)Z
+#destroy()V
+#shrink()Z
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#removeAllWithHash(I)Ljava/util/Map;

+###org/ehcache/shadow/org/terracotta/offheapstore/AbstractOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;IZ)V
+#getEvictionIndex()I
+#evict(IZ)Z
+#isPinned(Ljava/lang/Object;)Z
+#setPinning(Ljava/lang/Object;Z)V
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/HashingMap
@3.8.0
+#removeAllWithHash(I)Ljava/util/Map;

+###org/ehcache/shadow/org/terracotta/offheapstore/MapInternals
@3.8.0
+#getSize()J
+#getTableCapacity()J
+#getUsedSlotCount()J
+#getRemovedSlotCount()J
+#getReprobeLength()I
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataAllocatedMemory()J
+#getDataOccupiedMemory()J
+#getDataVitalMemory()J
+#getDataSize()J

+###org/ehcache/shadow/org/terracotta/offheapstore/Metadata
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple
@3.8.0
+#value()Ljava/lang/Object;
+#metadata()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#metadataTuple(Ljava/lang/Object;I)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap$EncodingIterator
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap$EncodingSet
@3.8.0
+#iterator()Ljava/util/Iterator;
+#size()I
+#contains(Ljava/lang/Object;)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap$EntryIterator
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap$EntrySet
@3.8.0
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap$HashIterator
@3.8.0
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap$KeyIterator
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap$KeySet
@3.8.0
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V

+###org/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getEncodingForHashAndBinary(ILjava/nio/ByteBuffer;)Ljava/lang/Long;
+#installMappingForHashAndEncoding(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)J
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#removeAllWithHash(I)Ljava/util/Map;
+#removeNoReturn(Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#entrySet()Ljava/util/Set;
+#encodingSet()Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#evict(IZ)Z
+#getSlotForHashAndEncoding(IJJ)Ljava/lang/Integer;
+#updateEncoding(IJJJ)Z
+#getSize()J
+#getTableCapacity()J
+#getUsedSlotCount()J
+#getRemovedSlotCount()J
+#getReprobeLength()I
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataAllocatedMemory()J
+#getDataOccupiedMemory()J
+#getDataVitalMemory()J
+#getDataSize()J
+#isThiefForTableAllocations()Z
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getStorageEngine()Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#encodingSet()Ljava/lang/Iterable;

+###org/ehcache/shadow/org/terracotta/offheapstore/ReadWriteLockedOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;

+###org/ehcache/shadow/org/terracotta/offheapstore/ReadWriteLockedOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;

+###org/ehcache/shadow/org/terracotta/offheapstore/Segment
@3.8.0
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#removeNoReturn(Ljava/lang/Object;)Z
+#destroy()V
+#shrink()Z
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;

+###org/ehcache/shadow/org/terracotta/offheapstore/WriteLockedOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;

+###org/ehcache/shadow/org/terracotta/offheapstore/WriteLockedOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;

+###org/ehcache/shadow/org/terracotta/offheapstore/buffersource/BufferSource
@3.8.0
+#allocateBuffer(I)Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/buffersource/HeapBufferSource
@3.8.0
+#<init>()V
+#allocateBuffer(I)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/offheapstore/buffersource/OffHeapBufferSource
@3.8.0
+#<init>()V
+#allocateBuffer(I)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/offheapstore/buffersource/TimingBufferSource
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/buffersource/BufferSource;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;Z)V
+#allocateBuffer(I)Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isPinned(Ljava/lang/Object;)Z
+#setPinning(Ljava/lang/Object;Z)V
+#shrink()Z
+#shrinkOthers(I)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap$AggregateIterator
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#getIndexFor(I)I
+#getSegments()Ljava/util/List;
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#removeNoReturn(Ljava/lang/Object;)Z
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#clear()V
+#destroy()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#writeLockAll()V
+#writeUnlockAll()V
+#getSegmentInternals()Ljava/util/List;
+#getSize()J
+#getTableCapacity()J
+#getUsedSlotCount()J
+#getRemovedSlotCount()J
+#getReprobeLength()I
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataAllocatedMemory()J
+#getDataOccupiedMemory()J
+#getDataVitalMemory()J
+#getDataSize()J
+#handleOversizeMappingException(I)Z
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/ehcache/shadow/org/terracotta/offheapstore/MetadataTuple;
+#removeAllWithHash(I)Ljava/util/Map;

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/ConcurrentMapInternals
@3.8.0
+#getSegmentInternals()Ljava/util/List;

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/ConcurrentOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;JI)V

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/ConcurrentOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/ConcurrentWriteLockedOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;JI)V

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/ConcurrentWriteLockedOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/ReadWriteLockedOffHeapClockCacheFactory
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;I)V
+#newInstance()Lorg/ehcache/shadow/org/terracotta/offheapstore/ReadWriteLockedOffHeapClockCache;
+#newInstance()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/ReadWriteLockedOffHeapHashMapFactory
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#newInstance()Lorg/ehcache/shadow/org/terracotta/offheapstore/ReadWriteLockedOffHeapHashMap;
+#newInstance()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/WriteLockedOffHeapClockCacheFactory
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;I)V
+#newInstance()Lorg/ehcache/shadow/org/terracotta/offheapstore/WriteLockedOffHeapClockCache;
+#newInstance()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/concurrent/WriteLockedOffHeapHashMapFactory
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#newInstance()Lorg/ehcache/shadow/org/terracotta/offheapstore/WriteLockedOffHeapHashMap;
+#newInstance()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPage
@3.8.0
+#<init>(Ljava/nio/MappedByteBuffer;)V
+#asByteBuffer()Ljava/nio/MappedByteBuffer;
+#asByteBuffer()Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource
@3.8.0
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;J)V
+#<init>(Ljava/io/File;Z)V
+#<init>(Ljava/io/File;ZJ)V
+#allocateRegion(J)Ljava/lang/Long;
+#freeRegion(J)V
+#claimRegion(JJ)J
+#getReadableChannel()Ljava/nio/channels/FileChannel;
+#getWritableChannel()Ljava/nio/channels/FileChannel;
+#getFile()Ljava/io/File;
+#allocate(IZZLorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPage;
+#free(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;)V
+#claimPage(JJ)Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPage;
+#getAddress(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;)J
+#flush()V
+#close()V
+#allocate(IZZLorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/paging/PowerOfTwoFileAllocator
@3.8.0
+#<init>()V
+#<init>(J)V
+#allocate(J)Ljava/lang/Long;
+#free(JJ)V
+#mark(JJ)V
+#occupied()J
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/AbstractPersistentConcurrentOffHeapCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#flush()V
+#persist(Ljava/io/ObjectOutput;)V
+#close()V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/AbstractPersistentConcurrentOffHeapMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#flush()V
+#persist(Ljava/io/ObjectOutput;)V
+#close()V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/AbstractPersistentLockedOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/AbstractPersistentOffHeapCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/Persistent
@3.8.0
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentConcurrentOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentConcurrentOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;JI)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentHalfStorageEngine
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentPortability
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCacheFactory
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;IZ)V
+#newInstance()Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCache;
+#newInstance()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMap
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMapFactory
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;IZ)V
+#newInstance()Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMap;
+#newInstance()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/storage/AATreeFileAllocator
@3.8.0
+#<init>(J)V
+#<init>(JLjava/io/DataInput;)V
+#allocate(J)J
+#free(JJ)V
+#removeAndReturn(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/storage/Region;
+#find(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/storage/Region;
+#occupied()J
+#capacity()J
+#toString()Ljava/lang/String;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/storage/FileBackedStorageEngine
@3.8.0
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Z)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Z)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Z)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;Z)V
+#destroy()V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#shrink()Z
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#readKeyHash(J)I

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/storage/PersistentIntegerStorageEngine
@3.8.0
+#<init>()V
+#createPersistentFactory()Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/storage/PersistentSplitStorageEngine
@3.8.0
+#createPersistentFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentHalfStorageEngine;Lorg/ehcache/shadow/org/terracotta/offheapstore/disk/persistent/PersistentHalfStorageEngine;)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/storage/portability/PersistentByteArrayPortability
@3.8.0
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/disk/storage/portability/PersistentSerializablePortability
@3.8.0
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener
@3.8.0
+#evicting(Ljava/util/concurrent/Callable;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListeningReadWriteLockedOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#evict(IZ)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListeningWriteLockedOffHeapClockCache
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/eviction/EvictionListener;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#evict(IZ)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/exceptions/OversizeMappingException
@3.8.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea$Owner
@3.8.0
+#evictAtAddress(JZ)Z
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#isThief()Z
+#moved(JJ)Z
+#sizeOf(J)I
@3.8.2
+#evictAtAddress(JZ)Ljava/util/Collection;
-#evictAtAddress(JZ)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IZZ)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IZZF)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IIZZ)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IIZZF)V
+#clear()V
+#readByte(J)B
+#readShort(J)S
+#readInt(J)I
+#readLong(J)J
+#readBuffer(JI)Ljava/nio/ByteBuffer;
+#readBuffers(JI)[Ljava/nio/ByteBuffer;
+#writeByte(JB)V
+#writeShort(JS)V
+#writeInt(JI)V
+#writeLong(JJ)V
+#writeBuffer(JLjava/nio/ByteBuffer;)V
+#writeBuffers(J[Ljava/nio/ByteBuffer;)V
+#free(J)V
+#destroy()V
+#allocate(J)J
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#toString()Ljava/lang/String;
+#validateStorageArea()V
+#release(J)V
+#release(Ljava/util/Collection;)Ljava/util/Collection;
+#shrink()Z

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/Page
@3.8.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#<init>(Ljava/nio/ByteBuffer;IILorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#asByteBuffer()Ljava/nio/ByteBuffer;
+#asIntBuffer()Ljava/nio/IntBuffer;
+#size()I
+#index()I
+#address()I
+#binding()Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource
@3.8.0
+#allocate(IZZLorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;
+#free(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/PhantomReferenceLimitedPageSource
@3.8.0
+#<init>(J)V
+#allocate(IZZLorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;
+#free(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;)V
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/UnlimitedPageSource
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/buffersource/BufferSource;)V
+#allocate(IZZLorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;
+#free(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection
@3.8.0
+#values()[Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;

+###org/ehcache/shadow/org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/buffersource/BufferSource;JI)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/buffersource/BufferSource;JII)V
+#getCapacity()J
+#allocate(IZZLorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;
+#free(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/Page;)V
+#getAllocatedSize()J
+#getAllocatedSizeUnSync()J
+#toString()Ljava/lang/String;
+#addAllocationThreshold(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;JLjava/lang/Runnable;)Ljava/lang/Runnable;
+#removeAllocationThreshold(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;J)Ljava/lang/Runnable;

+###org/ehcache/shadow/org/terracotta/offheapstore/pinning/PinnableCache
@3.8.0
+#isPinned(Ljava/lang/Object;)Z
+#setPinning(Ljava/lang/Object;Z)V
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/pinning/PinnableSegment
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/set/OffHeapHashSet
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ZLorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/OffHeapHashMap;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#clear()V
+#getStorageEngine()Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/BinaryStorageEngine
@3.8.0
+#readKeyHash(J)I
+#readBinaryKey(J)Ljava/nio/ByteBuffer;
+#readBinaryValue(J)Ljava/nio/ByteBuffer;
+#equalsBinaryKey(Ljava/nio/ByteBuffer;J)Z
+#writeBinaryMapping(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;II)Ljava/lang/Long;
+#writeBinaryMapping([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljava/lang/Long;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/BooleanHalfStorageEngine
@3.8.0
+#write(Ljava/lang/Boolean;I)Ljava/lang/Integer;
+#free(I)V
+#read(I)Ljava/lang/Boolean;
+#equals(Ljava/lang/Object;I)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z
+#read(I)Ljava/lang/Object;
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/HalfStorageEngine
@3.8.0
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;
+#free(I)V
+#read(I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;I)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/IntegerStorageEngine
@3.8.0
+#<init>()V
+#instance()Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/IntegerStorageEngine;
+#createFactory()Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#read(I)Ljava/lang/Integer;
+#write(Ljava/lang/Integer;I)Ljava/lang/Integer;
+#free(I)V
+#equals(Ljava/lang/Object;I)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z
+#read(I)Ljava/lang/Object;
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/LongStorageEngine
@3.8.0
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/HalfStorageEngine;)V
+#writeMapping(Ljava/lang/Long;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Long;
+#equalsKey(Ljava/lang/Object;J)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#invalidateCache()V
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#destroy()V
+#shrink()Z
+#readKey(JI)Ljava/lang/Object;
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/OffHeapBufferHalfStorageEngine
@3.8.0
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#clear()V
+#free(I)V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z
+#evictAtAddress(JZ)Z
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#isThief()Z
+#moved(JJ)Z
+#sizeOf(J)I
@3.8.2
+#evictAtAddress(JZ)Ljava/util/Collection;
-#evictAtAddress(JZ)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/OffHeapBufferStorageEngine
@3.8.0
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZF)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZF)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;F)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;F)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZF)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;IILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;ZZF)V
+#readKeyBuffer(J)Ljava/nio/ByteBuffer;
+#readValueBuffer(J)Ljava/nio/ByteBuffer;
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#destroy()V
+#shrink()Z
+#evictAtAddress(JZ)Z
+#isThief()Z
+#readKeyHash(J)I
+#moved(JJ)Z
+#sizeOf(J)I
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#writeLock()Ljava/util/concurrent/locks/Lock;
@3.8.2
+#evictAtAddress(JZ)Ljava/util/Collection;
-#evictAtAddress(JZ)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize
@3.8.0
+#values()[Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;
+#bitSize()I
+#byteSize()I

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/PortabilityBasedHalfStorageEngine
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)V
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;
+#free(I)V
+#read(I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;I)Z
+#invalidateCache()V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/PortabilityBasedStorageEngine
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)V
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#clear()V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Object;
+#equalsKey(Ljava/lang/Object;J)Z
+#readBinaryKey(J)Ljava/nio/ByteBuffer;
+#readBinaryValue(J)Ljava/nio/ByteBuffer;
+#equalsBinaryKey(Ljava/nio/ByteBuffer;J)Z
+#writeBinaryMapping([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljava/lang/Long;
+#writeBinaryMapping(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;II)Ljava/lang/Long;
+#invalidateCache()V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/SerializableStorageEngine
@3.8.0
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;I)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;I)V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/SplitStorageEngine
@3.8.0
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/HalfStorageEngine;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/HalfStorageEngine;)V
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Object;
+#equalsKey(Ljava/lang/Object;J)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#invalidateCache()V
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#destroy()V
+#shrink()Z
+#valueEncoding(J)I
+#keyEncoding(J)I
+#encoding(II)J

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner
@3.8.0
+#getEncodingForHashAndBinary(ILjava/nio/ByteBuffer;)Ljava/lang/Long;
+#getSize()J
+#installMappingForHashAndEncoding(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)J
+#encodingSet()Ljava/lang/Iterable;
+#updateEncoding(IJJJ)Z
+#getSlotForHashAndEncoding(IJJ)Ljava/lang/Integer;
+#evict(IZ)Z
+#isThiefForTableAllocations()Z

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine
@3.8.0
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Object;
+#equalsKey(Ljava/lang/Object;J)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#destroy()V
+#shrink()Z

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/StringStorageEngine
@3.8.0
+#createFactory(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;I)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/PointerSize;Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/PageSource;I)V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/Allocator
@3.8.0
+#allocate(J)J
+#free(J)V
+#clear()V
+#expand(J)V
+#occupied()J
+#validateAllocator()V
+#getLastUsedAddress()J
+#getLastUsedPointer()J
+#getMinimalSize()I
+#getMaximumAddress()J

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/IntegerBestFitAllocator
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#clear()V
+#expand(J)V
+#allocate(J)J
+#free(J)V
+#occupied()J
+#toString()Ljava/lang/String;
+#validateAllocator()V
+#validateMallocedPointer(I)I
+#getLastUsedPointer()J
+#getLastUsedAddress()J
+#getMinimalSize()I
+#getMaximumAddress()J
+#iterator()Ljava/util/Iterator;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/LongBestFitAllocator
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#clear()V
+#expand(J)V
+#allocate(J)J
+#free(J)V
+#occupied()J
+#toString()Ljava/lang/String;
+#validateAllocator()V
+#validateMallocedPointer(J)J
+#getLastUsedPointer()J
+#getLastUsedAddress()J
+#getMinimalSize()I
+#getMaximumAddress()J
+#iterator()Ljava/util/Iterator;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing
@3.8.0
+#values()[Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator
@3.8.0
+#<init>(I)V
+#allocate(ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;)I
+#free(II)V
+#tryFree(II)V
+#find(ILorg/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;)I
+#claim(II)V
+#occupied()I
+#removeAndReturn(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/Region;
+#find(Ljava/lang/Object;)Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/allocator/Region;
+#toString()Ljava/lang/String;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/listener/AbstractListenableStorageEngine
@3.8.0
+#<init>()V
+#registerListener(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/listener/StorageEngineListener;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/listener/ListenableStorageEngine
@3.8.0
+#registerListener(Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/listener/StorageEngineListener;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/listener/RecoveryStorageEngineListener
@3.8.0
+#recovered(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;IIJ)V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/listener/RuntimeStorageEngineListener
@3.8.0
+#written(Ljava/lang/Object;Ljava/lang/Object;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;IIJ)V
+#freed(JILjava/nio/ByteBuffer;Z)V
+#cleared()V
+#copied(IJJI)V

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/listener/StorageEngineListener
@3.8.0

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/BooleanPortability
@3.8.0
+#encode(Ljava/lang/Boolean;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Boolean;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/ByteArrayPortability
@3.8.0
+#encode([B)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)[B
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/Portability
@3.8.0
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/SerializablePortability$SerializableDataKey
@3.8.0
+#<init>(Ljava/io/ObjectStreamClass;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#forClass()Ljava/lang/Class;
+#setClass(Ljava/lang/Class;)V
+#getObjectStreamClass()Ljava/io/ObjectStreamClass;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/SerializablePortability
@3.8.0
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#encode(Ljava/io/Serializable;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/io/Serializable;
+#getObjectOutputStream(Ljava/io/OutputStream;)Ljava/io/ObjectOutputStream;
+#getObjectInputStream(Ljava/io/InputStream;)Ljava/io/ObjectInputStream;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/StringPortability
@3.8.0
+#encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/String;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/WriteBackPortability
@3.8.0
+#decode(Ljava/nio/ByteBuffer;Lorg/ehcache/shadow/org/terracotta/offheapstore/storage/portability/WriteContext;)Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/storage/portability/WriteContext
@3.8.0
+#setLong(IJ)V
+#flush()V

+###org/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$AbstractTreeNode
@3.8.0
+#<init>()V
+#setLeft(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;)V
+#setRight(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;)V
+#getLeft()Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;
+#getRight()Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I

+###org/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node
@3.8.0
+#setLeft(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;)V
+#setRight(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;)V
+#getLeft()Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;
+#getRight()Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
+#swapPayload(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet$Node;)V
+#getPayload()Ljava/lang/Comparable;

+###org/ehcache/shadow/org/terracotta/offheapstore/util/AATreeSet
@3.8.0
+#<init>()V
+#add(Ljava/lang/Comparable;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;
+#clear()V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isEmpty()Z
+#comparator()Ljava/util/Comparator;
+#subSet(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#first()Ljava/lang/Comparable;
+#last()Ljava/lang/Comparable;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#add(Ljava/lang/Object;)Z
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;

+###org/ehcache/shadow/org/terracotta/offheapstore/util/ByteBufferInputStream
@3.8.0
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#mark(I)V
+#reset()V
+#markSupported()Z

+###org/ehcache/shadow/org/terracotta/offheapstore/util/ByteBufferUtils
@3.8.0
+#totalLength([Ljava/nio/ByteBuffer;)I
+#aggregate([Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;

+###org/ehcache/shadow/org/terracotta/offheapstore/util/DebuggingUtils
@3.8.0
+#toBase2SuffixedString(J)Ljava/lang/String;
+#toBase10SuffixedString(J)Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/offheapstore/util/Factory
@3.8.0
+#newInstance()Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/offheapstore/util/FindbugsSuppressWarnings
@3.8.0
+#value()[Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit
@3.8.0
+#values()[Lorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;
+#convert(JLorg/ehcache/shadow/org/terracotta/offheapstore/util/MemoryUnit;)J
+#toBits(J)J
+#toBits(I)I
+#toBytes(J)J
+#toBytes(I)I

+###org/ehcache/shadow/org/terracotta/offheapstore/util/NoOpLock
@3.8.0
+#lock()V
+#lockInterruptibly()V
+#tryLock()Z
+#tryLock(JLjava/util/concurrent/TimeUnit;)Z
+#unlock()V
+#newCondition()Ljava/util/concurrent/locks/Condition;

+###org/ehcache/shadow/org/terracotta/offheapstore/util/PhysicalMemory
@3.8.0
+#<init>()V
+#totalPhysicalMemory()Ljava/lang/Long;
+#freePhysicalMemory()Ljava/lang/Long;
+#totalSwapSpace()Ljava/lang/Long;
+#freeSwapSpace()Ljava/lang/Long;
+#ourCommittedVirtualMemory()Ljava/lang/Long;
+#main([Ljava/lang/String;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/util/ReopeningInterruptibleChannel$IoOperation
@3.8.2
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@3.9.0
-###org/ehcache/shadow/org/terracotta/offheapstore/util/ReopeningInterruptibleChannel$IoOperation

+###org/ehcache/shadow/org/terracotta/offheapstore/util/ReopeningInterruptibleChannel
@3.8.2
+#create(Ljava/util/function/Supplier;)Lorg/ehcache/shadow/org/terracotta/offheapstore/util/ReopeningInterruptibleChannel;
+#execute(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/ReopeningInterruptibleChannel$IoOperation;)Ljava/lang/Object;
+#isOpen()Z
+#close()V
@3.9.0
-###org/ehcache/shadow/org/terracotta/offheapstore/util/ReopeningInterruptibleChannel

+###org/ehcache/shadow/org/terracotta/offheapstore/util/Retryer
@3.8.0
+#<init>(JJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V
+#completeAsynchronously(Ljava/lang/Runnable;)V
+#shutdownNow()V

+###org/ehcache/shadow/org/terracotta/offheapstore/util/Validation
@3.8.0
+#<init>()V
+#shouldValidate(Ljava/lang/Class;)Z
+#validate(Z)V

+###org/ehcache/shadow/org/terracotta/offheapstore/util/WeakIdentityHashMap$ReaperTask
@3.8.0
+#reap(Ljava/lang/Object;)V

+###org/ehcache/shadow/org/terracotta/offheapstore/util/WeakIdentityHashMap
@3.8.0
+#<init>()V
+#<init>(Lorg/ehcache/shadow/org/terracotta/offheapstore/util/WeakIdentityHashMap$ReaperTask;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#entries()Ljava/util/Iterator;
+#values()Ljava/util/Iterator;
+#reap()V

+###org/ehcache/shadow/org/terracotta/statistics/AbstractOperationStatistic
@3.8.0
+#type()Ljava/lang/Class;
+#sum()J
+#begin()V
+#end(Ljava/lang/Enum;)V

+###org/ehcache/shadow/org/terracotta/statistics/AbstractSourceStatistic
@3.8.0
+#<init>()V
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;

+###org/ehcache/shadow/org/terracotta/statistics/ConstantValueStatistic
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/io/Serializable;)V
+#value()Ljava/io/Serializable;
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;

+###org/ehcache/shadow/org/terracotta/statistics/MappedOperationStatistic
@3.8.0
+#<init>(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#begin()V
+#end(Ljava/lang/Enum;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V

+###org/ehcache/shadow/org/terracotta/statistics/MemoizingValueStatistic
@3.8.0
+#<init>(JLjava/util/concurrent/TimeUnit;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;)V
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#value()Ljava/io/Serializable;

+###org/ehcache/shadow/org/terracotta/statistics/OperationStatistic
@3.8.0
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J

+###org/ehcache/shadow/org/terracotta/statistics/Sample
@3.8.0
+#<init>(JLjava/io/Serializable;)V
+#getSample()Ljava/io/Serializable;
+#getTimestamp()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/statistics/SampledStatistic
@3.8.0
+#history()Ljava/util/List;
+#history(J)Ljava/util/List;

+###org/ehcache/shadow/org/terracotta/statistics/SampledStatisticAdapter
@3.8.0
+#value()Ljava/io/Serializable;
+#history()Ljava/util/List;
+#history(J)Ljava/util/List;
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#sample(Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;Ljava/util/function/LongSupplier;)Lorg/ehcache/shadow/org/terracotta/statistics/SampledStatistic;

+###org/ehcache/shadow/org/terracotta/statistics/SourceStatistic
@3.8.0
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;

+###org/ehcache/shadow/org/terracotta/statistics/Statistic
@3.8.0
+#name()Ljava/lang/String;
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#tags()[Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/statistics/StatisticBuilder$OperationStatisticBuilder
@3.8.0
+#<init>(Ljava/lang/Class;)V
+#build()Lorg/ehcache/shadow/org/terracotta/statistics/observer/OperationObserver;

+###org/ehcache/shadow/org/terracotta/statistics/StatisticBuilder
@3.8.0
+#operation(Ljava/lang/Class;)Lorg/ehcache/shadow/org/terracotta/statistics/StatisticBuilder$OperationStatisticBuilder;

+###org/ehcache/shadow/org/terracotta/statistics/StatisticMapper
@3.8.0
+#<init>(Ljava/util/Map;Lorg/ehcache/shadow/org/terracotta/statistics/OperationStatistic;)V
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#begin()V
+#end(Ljava/lang/Enum;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V

+###org/ehcache/shadow/org/terracotta/statistics/StatisticType
@3.8.0
+#values()[Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;

+###org/ehcache/shadow/org/terracotta/statistics/StatisticsManager
@3.8.0
+#<init>()V
+#createOperationStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/lang/Class;)Lorg/ehcache/shadow/org/terracotta/statistics/observer/OperationObserver;
+#createOperationStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Ljava/lang/Class;)Lorg/ehcache/shadow/org/terracotta/statistics/observer/OperationObserver;
+#getOperationStatisticFor(Lorg/ehcache/shadow/org/terracotta/statistics/observer/OperationObserver;)Lorg/ehcache/shadow/org/terracotta/statistics/OperationStatistic;
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;)V
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#createPassThroughStatistic(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;)V
+#removePassThroughStatistics(Ljava/lang/Object;)V
+#tags([Ljava/lang/String;)Ljava/util/Set;
+#properties([Ljava/lang/String;)Ljava/util/Map;

+###org/ehcache/shadow/org/terracotta/statistics/SuppliedValueStatistic
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#value()Ljava/io/Serializable;
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;

+###org/ehcache/shadow/org/terracotta/statistics/Table$Builder
@3.8.0
+#setStatistic(Ljava/lang/String;Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/io/Serializable;)Lorg/ehcache/shadow/org/terracotta/statistics/Table$Builder;
+#withRow(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/ehcache/shadow/org/terracotta/statistics/Table$Builder;
+#withRows(Ljava/util/Collection;Ljava/util/function/BiConsumer;)Lorg/ehcache/shadow/org/terracotta/statistics/Table$Builder;
+#build()Lorg/ehcache/shadow/org/terracotta/statistics/Table;

+###org/ehcache/shadow/org/terracotta/statistics/Table$RowBuilder
@3.8.0
+#setStatistic(Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/io/Serializable;)Lorg/ehcache/shadow/org/terracotta/statistics/Table$RowBuilder;

+###org/ehcache/shadow/org/terracotta/statistics/Table
@3.8.0
+#newBuilder([Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/statistics/Table$Builder;

+###org/ehcache/shadow/org/terracotta/statistics/TableSkeleton
@3.8.0
+#isEmpty()Z
+#getRowCount()I
+#getRowLabels()Ljava/util/Collection;
+#getStatisticNames()[Ljava/lang/String;
+#getStatisticCount()I
+#getStatistics(Ljava/lang/String;)[Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#getStatistics()Ljava/util/Map;
+#getStatistic(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/statistics/TableValueStatistic$Builder
@3.8.0
+#registerStatistic(Ljava/lang/String;Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;)Lorg/ehcache/shadow/org/terracotta/statistics/TableValueStatistic$Builder;
+#withRow(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/ehcache/shadow/org/terracotta/statistics/TableValueStatistic$Builder;
+#withRows(Ljava/util/Collection;Ljava/util/function/BiConsumer;)Lorg/ehcache/shadow/org/terracotta/statistics/TableValueStatistic$Builder;
+#build()Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;

+###org/ehcache/shadow/org/terracotta/statistics/TableValueStatistic$RowBuilder
@3.8.0
+#registerStatistic(Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;)Lorg/ehcache/shadow/org/terracotta/statistics/TableValueStatistic$RowBuilder;

+###org/ehcache/shadow/org/terracotta/statistics/TableValueStatistic
@3.8.0
+#newBuilder([Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/statistics/TableValueStatistic$Builder;
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#value()Lorg/ehcache/shadow/org/terracotta/statistics/Table;
+#value()Ljava/io/Serializable;

+###org/ehcache/shadow/org/terracotta/statistics/Time$TimeSource
@3.8.0
+#time()J
+#absoluteTime()J

+###org/ehcache/shadow/org/terracotta/statistics/Time
@3.8.0
+#time()J
+#absoluteTime()J

+###org/ehcache/shadow/org/terracotta/statistics/ValueStatistic
@3.8.0
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#value()Ljava/io/Serializable;

+###org/ehcache/shadow/org/terracotta/statistics/ValueStatistics
@3.8.0
+#<init>()V
+#nullValue(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;)Lorg/ehcache/shadow/org/terracotta/statistics/ConstantValueStatistic;
+#constant(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/io/Serializable;)Lorg/ehcache/shadow/org/terracotta/statistics/ConstantValueStatistic;
+#supply(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#gauge(Ljava/util/function/Supplier;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#counter(Ljava/util/function/Supplier;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#rate(Ljava/util/function/Supplier;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#ratio(Ljava/util/function/Supplier;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#table(Ljava/util/function/Supplier;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#memoize(JLjava/util/concurrent/TimeUnit;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;

+###org/ehcache/shadow/org/terracotta/statistics/ZeroOperationStatistic
@3.8.0
+#<init>()V
+#get()Lorg/ehcache/shadow/org/terracotta/statistics/OperationStatistic;
+#type()Ljava/lang/Class;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#begin()V
+#end(Ljava/lang/Enum;)V
+#removeDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver;)V

+###org/ehcache/shadow/org/terracotta/statistics/archive/CircularBuffer
@3.8.0
+#<init>(I)V
+#capacity()I
+#insert(Ljava/lang/Object;)Ljava/lang/Object;
+#toArray(Ljava/lang/Class;)[Ljava/lang/Object;

+###org/ehcache/shadow/org/terracotta/statistics/archive/StatisticArchive
@3.8.0
+#<init>(I)V
+#<init>(ILjava/util/function/Consumer;)V
+#setCapacity(I)V
+#add(Lorg/ehcache/shadow/org/terracotta/statistics/Sample;)V
+#clear()V
+#getArchive()Ljava/util/List;
+#getArchive(J)Ljava/util/List;

+###org/ehcache/shadow/org/terracotta/statistics/archive/StatisticSampler
@3.8.0
+#<init>(JLjava/util/concurrent/TimeUnit;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;Ljava/util/function/Consumer;Ljava/util/function/LongSupplier;)V
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;Ljava/util/function/Consumer;Ljava/util/function/LongSupplier;)V
+#setPeriod(JLjava/util/concurrent/TimeUnit;)V
+#start()V
+#stop()V
+#shutdown()V

+###org/ehcache/shadow/org/terracotta/statistics/derived/EventRateSimpleMovingAverage
@3.8.0
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#setWindow(JLjava/util/concurrent/TimeUnit;)V
+#value()Ljava/lang/Double;
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#rateUsingSeconds()Ljava/lang/Double;
+#rate(Ljava/util/concurrent/TimeUnit;)Ljava/lang/Double;
+#event(JJ)V
+#value()Ljava/io/Serializable;

+###org/ehcache/shadow/org/terracotta/statistics/derived/OperationResultFilter
@3.8.0
+#<init>(Ljava/util/Set;[Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedEventObserver;)V
+#begin(J)V
+#end(JJLjava/lang/Enum;)V
+#getTargets()Ljava/util/Set;

+###org/ehcache/shadow/org/terracotta/statistics/derived/OperationResultSampler
@3.8.0
+#<init>(Ljava/util/Set;D[Lorg/ehcache/shadow/org/terracotta/statistics/observer/ChainedEventObserver;)V
+#end(JJLjava/lang/Enum;)V
+#getCeiling()I

+###org/ehcache/shadow/org/terracotta/statistics/derived/histogram/BarSplittingBiasedHistogram
@3.8.0
+#<init>(DDIIDJ)V
+#<init>(IJ)V
+#<init>(DIJ)V
+#event(DJ)V
+#expire(J)V
+#toString()Ljava/lang/String;
+#getBuckets()Ljava/util/List;
+#getMinimum()D
+#getMaximum()D
+#getQuantileBounds(D)[D
+#size()J
@3.8.2
+#getSizeBounds()[D
@3.9.0
-#getSizeBounds()[D
@3.9.10
+#getSizeBounds()[D
@3.10.0-alpha0
-#getSizeBounds()[D
@3.10.1
+#getSizeBounds()[D

+###org/ehcache/shadow/org/terracotta/statistics/derived/histogram/ExponentialHistogram
@3.8.0
+#<init>(DJ)V
+#merge(Lorg/ehcache/shadow/org/terracotta/statistics/derived/histogram/ExponentialHistogram;)V
+#insert(JJ)V
+#insert(J)V
+#expire(J)J
+#count()J
+#split(D)Lorg/ehcache/shadow/org/terracotta/statistics/derived/histogram/ExponentialHistogram;
+#toString()Ljava/lang/String;
+#epsilon()D

+###org/ehcache/shadow/org/terracotta/statistics/derived/histogram/Histogram$Bucket
@3.8.0
+#minimum()D
+#maximum()D
+#count()D

+###org/ehcache/shadow/org/terracotta/statistics/derived/histogram/Histogram
@3.8.0
+#getBuckets()Ljava/util/List;
+#getMinimum()D
+#getMaximum()D
+#getQuantileBounds(D)[D
+#size()J
+#event(DJ)V
+#expire(J)V
@3.8.2
+#getSizeBounds()[D
@3.9.0
-#getSizeBounds()[D
@3.9.10
+#getSizeBounds()[D
@3.10.0-alpha0
-#getSizeBounds()[D
@3.10.1
+#getSizeBounds()[D

+###org/ehcache/shadow/org/terracotta/statistics/derived/histogram/Striped
@3.8.0
+#<init>(Ljava/util/function/Supplier;)V
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/statistics/derived/histogram/StripedHistogram
@3.8.0
+#<init>(DDIIDJ)V
+#<init>(IJ)V
+#<init>(DIJ)V
+#getBuckets()Ljava/util/List;
+#getQuantileBounds(D)[D
+#size()J
+#event(DJ)V
+#expire(J)V
@3.8.2
+#getSizeBounds()[D
@3.9.0
-#getSizeBounds()[D
@3.9.10
+#getSizeBounds()[D
@3.10.0-alpha0
-#getSizeBounds()[D
@3.10.1
+#getSizeBounds()[D

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/DefaultLatencyHistogramStatistic
@3.8.0
+#<init>(DILjava/time/Duration;Ljava/util/function/LongSupplier;)V
+#<init>(DILjava/time/Duration;)V
+#buckets()Ljava/util/List;
+#count()J
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#percentile(D)Ljava/lang/Long;
+#percentileBounds(D)[J
+#event(JJ)V
+#query(Ljava/util/function/Function;)Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/Jsr107LatencyMonitor
@3.8.0
+#<init>(Ljava/util/Set;D)V
+#begin(J)V
+#end(JJLjava/lang/Enum;)V
+#average()D
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#clear()V

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyAccumulator
@3.8.0
+#accumulate(J)V
+#accumulate(Lorg/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyAccumulator;)V
+#count()J
+#total()J
+#isEmpty()Z
+#event(JJ)V
+#maximum()Ljava/lang/Long;
+#minimum()Ljava/lang/Long;
+#average()D
+#toString()Ljava/lang/String;
+#accumulator([J)Lorg/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyAccumulator;
+#empty()Lorg/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyAccumulator;

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyHistogramQuery
@3.8.0
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#median()Ljava/lang/Long;
+#count()J
+#percentile(D)Ljava/lang/Long;
+#percentileBounds(D)[J
+#buckets()Ljava/util/List;

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyHistogramStatistic
@3.8.0
+#query(Ljava/util/function/Function;)Ljava/lang/Object;
+#percentileStatistic(D)Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#minimumStatistic()Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#maximumStatistic()Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#medianStatistic()Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyPeriodAccumulator
@3.8.0
+#isBefore(J)Z
+#isAfter(J)Z
+#start()J
+#end()J
+#accumulator()Lorg/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyAccumulator;
+#tryAccumulate(JJ)Z
+#event(JJ)V
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#average()D
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencySimpleMovingAverage
@3.8.0
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#<init>(JLjava/util/concurrent/TimeUnit;I)V
+#average()D
+#maximum()Ljava/lang/Long;
+#minimum()Ljava/lang/Long;
+#event(JJ)V

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/LatencyStatistic
@3.8.0
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#average()D
+#averageStatistic()Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#minimumStatistic()Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;
+#maximumStatistic()Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;

+###org/ehcache/shadow/org/terracotta/statistics/derived/latency/MaximumLatencyHistory
@3.8.0
+#<init>(IJLjava/util/concurrent/TimeUnit;Ljava/util/function/LongSupplier;)V
+#<init>(IJLjava/util/concurrent/TimeUnit;Ljava/util/function/LongSupplier;Ljava/util/function/Consumer;)V
+#event(JJ)V
+#value()Ljava/lang/Long;
+#type()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#history()Ljava/util/List;
+#history(J)Ljava/util/List;
+#value()Ljava/io/Serializable;

+###org/ehcache/shadow/org/terracotta/statistics/observer/ChainedEventObserver
@3.8.0
+#event(JJ)V

+###org/ehcache/shadow/org/terracotta/statistics/observer/ChainedObserver
@3.8.0

+###org/ehcache/shadow/org/terracotta/statistics/observer/ChainedOperationObserver
@3.8.0
+#begin(J)V
+#end(JJLjava/lang/Enum;)V

+###org/ehcache/shadow/org/terracotta/statistics/observer/OperationObserver
@3.8.0
+#begin()V
+#end(Ljava/lang/Enum;)V

+###org/ehcache/shadow/org/terracotta/statistics/registry/OperationStatisticDescriptor
@3.8.0
+#getObserverName()Ljava/lang/String;
+#getTags()Ljava/util/Set;
+#getType()Ljava/lang/Class;
+#descriptor(Ljava/lang/String;Ljava/util/Set;Ljava/lang/Class;)Lorg/ehcache/shadow/org/terracotta/statistics/registry/OperationStatisticDescriptor;
+#descriptor(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/statistics/registry/OperationStatisticDescriptor;

+###org/ehcache/shadow/org/terracotta/statistics/registry/Statistic
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Lorg/ehcache/shadow/org/terracotta/statistics/Sample;)V
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/util/List;)V
+#getType()Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
+#isEmpty()Z
+#getSamples()Ljava/util/List;
+#getLatestSampleValue()Ljava/util/Optional;
+#getLatestSample()Ljava/util/Optional;
+#toString()Ljava/lang/String;

+###org/ehcache/shadow/org/terracotta/statistics/registry/StatisticRegistry
@3.8.0
+#<init>(Ljava/lang/Object;Ljava/util/function/LongSupplier;)V
+#queryStatistic(Ljava/lang/String;)Ljava/util/Optional;
+#queryStatistic(Ljava/lang/String;J)Ljava/util/Optional;
+#queryStatistics()Ljava/util/Map;
+#queryStatistics(J)Ljava/util/Map;
+#registerStatistic(Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#registerStatistic(Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/ValueStatistic;)V
+#registerTable(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#registerGauge(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#registerCounter(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#registerStatistic(Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/registry/ValueStatisticDescriptor;)Z
+#registerStatistic(Ljava/lang/String;Lorg/ehcache/shadow/org/terracotta/statistics/registry/OperationStatisticDescriptor;Ljava/util/EnumSet;)Z

+###org/ehcache/shadow/org/terracotta/statistics/registry/ValueStatisticDescriptor
@3.8.0
+#getObserverName()Ljava/lang/String;
+#getTags()Ljava/util/Set;
+#descriptor(Ljava/lang/String;Ljava/util/Set;)Lorg/ehcache/shadow/org/terracotta/statistics/registry/ValueStatisticDescriptor;
+#descriptor(Ljava/lang/String;[Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/statistics/registry/ValueStatisticDescriptor;

+###org/ehcache/shadow/org/terracotta/utilities/exec/Shell$Encoding
@3.10.0-alpha0
+#<init>()V

+###org/ehcache/shadow/org/terracotta/utilities/exec/Shell$Result
@3.10.0-alpha0
+#exitCode()I
+#lines()Ljava/util/List;
+#iterator()Ljava/util/Iterator;

+###org/ehcache/shadow/org/terracotta/utilities/exec/Shell
@3.10.0-alpha0
+#execute(Ljava/nio/charset/Charset;[Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/utilities/exec/Shell$Result;

+###org/ehcache/shadow/org/terracotta/utilities/io/CapturedPrintStream
@3.10.0-alpha0
+#getInstance()Lorg/ehcache/shadow/org/terracotta/utilities/io/CapturedPrintStream;
+#getReader()Ljava/io/BufferedReader;
+#reset()V
+#toByteArray()[B

+###org/ehcache/shadow/org/terracotta/utilities/io/Files$ExtendedOption
@3.10.0-alpha0
+#values()[Lorg/ehcache/shadow/org/terracotta/utilities/io/Files$ExtendedOption;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/utilities/io/Files$ExtendedOption;

+###org/ehcache/shadow/org/terracotta/utilities/io/Files$FileStoreConstraintException
@3.10.0-alpha0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/ehcache/shadow/org/terracotta/utilities/io/Files
@3.10.0-alpha0
+#rename(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;
+#rename(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/time/Duration;)Ljava/nio/file/Path;
+#rename(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/time/Duration;Ljava/lang/Runnable;)Ljava/nio/file/Path;
+#deleteTree(Ljava/nio/file/Path;)V
+#deleteTree(Ljava/nio/file/Path;Ljava/time/Duration;)V
+#deleteTree(Ljava/nio/file/Path;Ljava/time/Duration;Ljava/lang/Runnable;)V
+#delete(Ljava/nio/file/Path;)V
+#delete(Ljava/nio/file/Path;Ljava/time/Duration;)V
+#delete(Ljava/nio/file/Path;Ljava/time/Duration;Ljava/lang/Runnable;)V
+#deleteIfExists(Ljava/nio/file/Path;)Z
+#copy(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
+#relocate(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
@3.10.1
+#createFile(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
+#createFile(Ljava/nio/file/Path;Ljava/time/Duration;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
+#copy(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J

+###org/ehcache/shadow/org/terracotta/utilities/io/NullOutputStream
@3.10.0-alpha0
+#<init>()V
+#write(I)V
+#write([BII)V
+#close()V

+###org/ehcache/shadow/org/terracotta/utilities/io/buffer/DumpUtility$FieldInaccessibleException
@3.10.0-alpha0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/ehcache/shadow/org/terracotta/utilities/io/buffer/DumpUtility
@3.10.0-alpha0
+#<init>(Ljava/io/PrintStream;)V
+#<init>(Ljava/io/PrintStream;Ljava/lang/CharSequence;)V
+#dumpBuffer(Ljava/nio/IntBuffer;Ljava/io/PrintStream;)V
+#dumpBuffer(Ljava/nio/LongBuffer;Ljava/io/PrintStream;)V
+#dumpBuffer(Ljava/nio/ByteBuffer;Ljava/io/PrintStream;)V
+#dumpBuffer(Ljava/nio/IntBuffer;)V
+#dumpBuffer(Ljava/nio/LongBuffer;)V
+#dumpBuffer(Ljava/nio/ByteBuffer;)V
+#dump([B)V

+###org/ehcache/shadow/org/terracotta/utilities/logging/LoggerBridge
@3.10.0-alpha0
+#getInstance(Lorg/slf4j/Logger;Lorg/slf4j/event/Level;)Lorg/ehcache/shadow/org/terracotta/utilities/logging/LoggerBridge;
+#isLevelEnabled()Z
+#log(Ljava/lang/String;[Ljava/lang/Object;)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/ehcache/shadow/org/terracotta/utilities/logging/LoggingOutputStream
@3.10.0-alpha0
+#<init>(Lorg/slf4j/Logger;Lorg/slf4j/event/Level;)V
+#write(I)V
+#flush()V
+#close()V

+###org/ehcache/sizeof/Configuration$Builder
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/sizeof/Configuration;)V
+#maxDepth(I)Lorg/ehcache/sizeof/Configuration$Builder;
+#silent(Z)Lorg/ehcache/sizeof/Configuration$Builder;
+#abort(Z)Lorg/ehcache/sizeof/Configuration$Builder;
+#addFilter(Lorg/ehcache/sizeof/filters/SizeOfFilter;)Lorg/ehcache/sizeof/Configuration$Builder;
+#addFilters([Lorg/ehcache/sizeof/filters/SizeOfFilter;)Lorg/ehcache/sizeof/Configuration$Builder;
+#removeFilter(Lorg/ehcache/sizeof/filters/SizeOfFilter;)Lorg/ehcache/sizeof/Configuration$Builder;
+#removeFilters([Lorg/ehcache/sizeof/filters/SizeOfFilter;)Lorg/ehcache/sizeof/Configuration$Builder;
+#clearlFilters()Lorg/ehcache/sizeof/Configuration$Builder;
+#build()Lorg/ehcache/sizeof/Configuration;

+###org/ehcache/sizeof/Configuration
@3.0.0.m5
+#<init>(IZZ[Lorg/ehcache/sizeof/filters/SizeOfFilter;)V
+#getMaxDepth()I
+#isAbort()Z
+#isSilent()Z
+#getFilters()[Lorg/ehcache/sizeof/filters/SizeOfFilter;

+###org/ehcache/sizeof/Filter
@3.0.0.m5
+#ignoreInstancesOf(Ljava/lang/Class;Z)V
+#ignoreField(Ljava/lang/reflect/Field;)V

+###org/ehcache/sizeof/FilterConfigurator
@3.0.0.m5
+#configure(Lorg/ehcache/sizeof/Filter;)V

+###org/ehcache/sizeof/SizeOf
@3.0.0.m5
+#<init>(Lorg/ehcache/sizeof/filters/SizeOfFilter;ZZ)V
+#sizeOf(Ljava/lang/Object;)J
+#deepSizeOf(Lorg/ehcache/sizeof/VisitorListener;[Ljava/lang/Object;)J
+#deepSizeOf([Ljava/lang/Object;)J
+#newInstance([Lorg/ehcache/sizeof/filters/SizeOfFilter;)Lorg/ehcache/sizeof/SizeOf;
+#newInstance(ZZ[Lorg/ehcache/sizeof/filters/SizeOfFilter;)Lorg/ehcache/sizeof/SizeOf;

+###org/ehcache/sizeof/SizeOfFilterSource
@3.0.0.m5
+#<init>(Z)V
+#getFilters()[Lorg/ehcache/sizeof/filters/SizeOfFilter;
+#ignoreInstancesOf(Ljava/lang/Class;Z)V
+#ignoreField(Ljava/lang/reflect/Field;)V

+###org/ehcache/sizeof/VisitorListener
@3.0.0.m5
+#visited(Ljava/lang/Object;J)V

+###org/ehcache/sizeof/annotations/AnnotationProxyFactory
@3.0.0.m5
+#getAnnotationProxy(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;

+###org/ehcache/sizeof/annotations/IgnoreSizeOf
@3.0.0.m5
+#inherited()Z

+###org/ehcache/sizeof/filters/AnnotationSizeOfFilter
@3.0.0.m5
+#<init>()V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###org/ehcache/sizeof/filters/CombinationSizeOfFilter
@3.0.0.m5
+#<init>([Lorg/ehcache/sizeof/filters/SizeOfFilter;)V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###org/ehcache/sizeof/filters/SizeOfFilter
@3.0.0.m5
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###org/ehcache/sizeof/filters/TypeFilter
@3.0.0.m5
+#<init>()V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z
+#addClass(Ljava/lang/Class;Z)V
+#addField(Ljava/lang/reflect/Field;)V

+###org/ehcache/sizeof/impl/AgentSizeOf
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/sizeof/filters/SizeOfFilter;)V
+#<init>(Lorg/ehcache/sizeof/filters/SizeOfFilter;ZZ)V
+#sizeOf(Ljava/lang/Object;)J

+###org/ehcache/sizeof/impl/JvmInformation
@3.0.0.m5
+#values()[Lorg/ehcache/sizeof/impl/JvmInformation;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/sizeof/impl/JvmInformation;
+#getPointerSize()I
+#getJavaPointerSize()I
+#getMinimumObjectSize()I
+#getObjectAlignment()I
+#getObjectHeaderSize()I
+#getFieldOffsetAdjustment()I
+#getAgentSizeOfAdjustment()I
+#supportsAgentSizeOf()Z
+#supportsUnsafeSizeOf()Z
+#supportsReflectionSizeOf()Z
+#getJvmDescription()Ljava/lang/String;
+#isJRockit()Z
+#isOSX()Z
+#isHotspot()Z
+#isOpenJDK()Z
+#isIBM()Z

+###org/ehcache/sizeof/impl/PassThroughFilter
@3.0.0.m5
+#<init>()V
+#filterFields(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#filterClass(Ljava/lang/Class;)Z

+###org/ehcache/sizeof/impl/ReflectionSizeOf
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/sizeof/filters/SizeOfFilter;)V
+#<init>(Lorg/ehcache/sizeof/filters/SizeOfFilter;ZZ)V
+#sizeOf(Ljava/lang/Object;)J

+###org/ehcache/sizeof/impl/UnsafeSizeOf
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/sizeof/filters/SizeOfFilter;)V
+#<init>(Lorg/ehcache/sizeof/filters/SizeOfFilter;ZZ)V
+#sizeOf(Ljava/lang/Object;)J

+###org/ehcache/sizeof/util/WeakIdentityConcurrentMap$CleanUpTask
@3.0.0.m5
+#cleanUp(Ljava/lang/Object;)V

+###org/ehcache/sizeof/util/WeakIdentityConcurrentMap
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/sizeof/util/WeakIdentityConcurrentMap$CleanUpTask;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#cleanUp()V
+#keySet()Ljava/util/Set;
+#containsKey(Ljava/lang/Object;)Z

+###org/ehcache/spi/copy/Copier
@3.0.0.m3
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/spi/copy/CopyProvider
@3.0.0.m3
+#createKeyCopier(Ljava/lang/Class;Lorg/ehcache/spi/serialization/Serializer;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/copy/Copier;
+#createValueCopier(Ljava/lang/Class;Lorg/ehcache/spi/serialization/Serializer;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/copy/Copier;
@3.0.0.rc3
+#releaseCopier(Lorg/ehcache/spi/copy/Copier;)V

+###org/ehcache/spi/loaderwriter/BulkCacheLoadingException
@3.0.0
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
+#getFailures()Ljava/util/Map;
+#getSuccesses()Ljava/util/Map;

+###org/ehcache/spi/loaderwriter/BulkCacheWritingException
@3.0.0
+#<init>(Ljava/util/Map;Ljava/util/Set;)V
+#getFailures()Ljava/util/Map;
+#getSuccesses()Ljava/util/Set;
@3.0.1
+#getMessage()Ljava/lang/String;

+###org/ehcache/spi/loaderwriter/CacheLoaderWriterConfiguration
@3.7.0
+#getServiceType()Ljava/lang/Class;

+###org/ehcache/spi/loaderwriter/CacheLoaderWriterProvider
@3.0.0.m2
+#createCacheLoaderWriter(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#releaseCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.7.0
+#releaseCacheLoaderWriter(Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#getPreConfiguredCacheLoaderWriterConfig(Ljava/lang/String;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriterConfiguration;
+#isLoaderJsrProvided(Ljava/lang/String;)Z
-#releaseCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V

+###org/ehcache/spi/loaderwriter/CacheLoadingException
@3.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/ehcache/spi/loaderwriter/CacheWritingException
@3.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration
@3.0.0.m4
+#getBatchSize()I
+#getMaxDelay()J
+#getMaxDelayUnit()Ljava/util/concurrent/TimeUnit;
+#isCoalescing()Z

+###org/ehcache/spi/loaderwriter/WriteBehindConfiguration
@3.0.0.m2
+#getMinWriteDelay()I
+#getMaxWriteDelay()I
+#getRateLimitPerSecond()I
+#isWriteBatching()Z
+#isWriteCoalescing()Z
+#getWriteBatchSize()I
+#getRetryAttempts()I
+#getRetryAttemptDelaySeconds()I
+#getWriteBehindConcurrency()I
+#getWriteBehindMaxQueueSize()I
@3.0.0.m3
-#isWriteBatching()Z
@3.0.0.m4
+#getConcurrency()I
+#getMaxQueueSize()I
+#getBatchingConfiguration()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;
+#getThreadPoolAlias()Ljava/lang/String;
-#getMinWriteDelay()I
-#getMaxWriteDelay()I
-#getRateLimitPerSecond()I
-#isWriteCoalescing()Z
-#getWriteBatchSize()I
-#getRetryAttempts()I
-#getRetryAttemptDelaySeconds()I
-#getWriteBehindConcurrency()I
-#getWriteBehindMaxQueueSize()I

+###org/ehcache/spi/loaderwriter/WriteBehindProvider
@3.0.0.m4
+#createWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#releaseWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V

+###org/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier
@3.1.0

+###org/ehcache/spi/persistence/PersistableResourceService
@3.1.0
+#handlesResourceType(Lorg/ehcache/config/ResourceType;)Z
+#getPersistenceSpaceIdentifier(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;
+#releasePersistenceSpaceIdentifier(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;)V
+#getStateRepositoryWithin(Lorg/ehcache/spi/persistence/PersistableResourceService$PersistenceSpaceIdentifier;Ljava/lang/String;)Lorg/ehcache/spi/persistence/StateRepository;
+#destroy(Ljava/lang/String;)V
+#destroyAll()V

+###org/ehcache/spi/persistence/StateHolder
@3.2.0.beta1
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#entrySet()Ljava/util/Set;

+###org/ehcache/spi/persistence/StateRepository
@3.1.0
+#getPersistentConcurrentMap(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentMap;
@3.2.0.beta1
+#getPersistentStateHolder(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/spi/persistence/StateHolder;
-#getPersistentConcurrentMap(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentMap;
@3.5.0
*#getPersistentStateHolder(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/spi/persistence/StateHolder;[deprecated]
+#getPersistentStateHolder(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Predicate;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/persistence/StateHolder;

+###org/ehcache/spi/resilience/RecoveryStore
@3.5.0
+#obliterate()V
+#obliterate(Ljava/lang/Object;)V
+#obliterate(Ljava/lang/Iterable;)V

+###org/ehcache/spi/resilience/ResilienceStrategy
@3.5.0
+#getFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#clearFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#iteratorFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)Lorg/ehcache/Cache$Entry;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)V

+###org/ehcache/spi/resilience/ResilienceStrategyProvider
@3.5.0
+#createResilienceStrategy(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/resilience/RecoveryStore;)Lorg/ehcache/spi/resilience/ResilienceStrategy;
+#createResilienceStrategy(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/resilience/RecoveryStore;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/spi/resilience/ResilienceStrategy;

+###org/ehcache/spi/resilience/StoreAccessException
@3.5.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/ehcache/spi/serialization/SerializerException
@3.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/ehcache/spi/serialization/StatefulSerializer
@3.2.0.beta1
+#init(Lorg/ehcache/spi/persistence/StateRepository;)V

+###org/ehcache/spi/serialization/UnsupportedTypeException
@3.0.0.m3
+#<init>(Ljava/lang/String;)V

+###org/ehcache/spi/service/MaintainableService$MaintenanceScope
@3.2.0.beta1
+#values()[Lorg/ehcache/spi/service/MaintainableService$MaintenanceScope;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/spi/service/MaintainableService$MaintenanceScope;

+###org/ehcache/spi/service/MaintainableService
@3.0.0.rc1
+#startForMaintenance(Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0
+#startForMaintenance(Lorg/ehcache/spi/service/ServiceProvider;)V
-#startForMaintenance(Lorg/ehcache/spi/ServiceProvider;)V
@3.2.0.beta1
+#startForMaintenance(Lorg/ehcache/spi/service/ServiceProvider;Lorg/ehcache/spi/service/MaintainableService$MaintenanceScope;)V
-#startForMaintenance(Lorg/ehcache/spi/service/ServiceProvider;)V

+###org/ehcache/spi/service/OptionalServiceDependencies
@3.6.0
+#value()[Ljava/lang/String;

+###org/ehcache/spi/service/PluralService
@3.0.0.rc2

+###org/ehcache/spi/service/ServiceCreationConfiguration
@3.0.0.m3
+#getServiceType()Ljava/lang/Class;
@3.8.0
+#derive()Ljava/lang/Object;
+#build(Ljava/lang/Object;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
+#compatibleWith(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Z

+###org/ehcache/spi/service/ServiceDependencies
@3.0.0.m2
+#value()[Ljava/lang/Class;

+###org/ehcache/spi/service/ServiceProvider
@3.0.0
+#getService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#getServicesOfType(Ljava/lang/Class;)Ljava/util/Collection;

+###org/ehcache/xml/BaseConfigParser
@3.6.0
+#<init>()V
+#<init>(Ljava/lang/Class;)V
@3.10.0-alpha1
+#<init>(Ljava/util/Map;)V
+#getSchema()Ljava/util/Map;
+#unparse(Lorg/w3c/dom/Document;Ljava/lang/Object;)Lorg/w3c/dom/Element;
-#<init>()V
-#<init>(Ljava/lang/Class;)V

+###org/ehcache/xml/CacheManagerServiceConfigurationParser
@3.0.0.m5
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.6.0
+#getServiceType()Ljava/lang/Class;
+#unparseServiceCreationConfiguration(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/w3c/dom/Element;
@3.7.0
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
-#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.10.0-alpha1
-#getXmlSchema()Ljavax/xml/transform/Source;
-#getNamespace()Ljava/net/URI;
-#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
-#unparseServiceCreationConfiguration(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/w3c/dom/Element;

+###org/ehcache/xml/CacheResourceConfigurationParser
@3.0.0.rc3
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseResourceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/config/ResourcePool;
@3.6.0
+#unparseResourcePool(Lorg/ehcache/config/ResourcePool;)Lorg/w3c/dom/Element;
+#getResourceTypes()Ljava/util/Set;
@3.10.0-alpha1
-#getXmlSchema()Ljavax/xml/transform/Source;
-#getNamespace()Ljava/net/URI;
-#parseResourceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/config/ResourcePool;
-#unparseResourcePool(Lorg/ehcache/config/ResourcePool;)Lorg/w3c/dom/Element;

+###org/ehcache/xml/CacheServiceConfigurationParser
@3.0.0.m5
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.6.0
+#getServiceType()Ljava/lang/Class;
+#unparseServiceConfiguration(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/w3c/dom/Element;
@3.7.0
+#parseServiceConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceConfiguration;
-#parseServiceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.10.0-alpha1
-#getXmlSchema()Ljavax/xml/transform/Source;
-#getNamespace()Ljava/net/URI;
-#parseServiceConfiguration(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Lorg/ehcache/spi/service/ServiceConfiguration;
-#unparseServiceConfiguration(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/w3c/dom/Element;

+###org/ehcache/xml/ConfigurationParser$XmlConfigurationWrapper
@3.6.0
+#<init>(Lorg/ehcache/config/Configuration;Ljava/util/Map;)V
+#getConfiguration()Lorg/ehcache/config/Configuration;
+#getTemplates()Ljava/util/Map;

+###org/ehcache/xml/ConfigurationParser
@3.6.0
+#<init>()V
+#parseConfiguration(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Map;)Lorg/ehcache/xml/ConfigurationParser$XmlConfigurationWrapper;
+#parseXml(Ljava/lang/String;)Lorg/ehcache/xml/model/ConfigType;
+#getCacheElements(Lorg/ehcache/xml/model/ConfigType;)Ljava/lang/Iterable;
+#getTemplates(Lorg/ehcache/xml/model/ConfigType;)Ljava/util/Map;
+#unparseConfiguration(Lorg/ehcache/config/Configuration;)Ljava/lang/String;
@3.7.0
+#uriToDocument(Ljava/net/URI;)Lorg/w3c/dom/Document;
+#documentToConfig(Lorg/w3c/dom/Document;Ljava/lang/ClassLoader;Ljava/util/Map;)Lorg/ehcache/xml/ConfigurationParser$XmlConfigurationWrapper;
+#configToDocument(Lorg/ehcache/config/Configuration;)Lorg/w3c/dom/Document;
+#documentToText(Lorg/w3c/dom/Document;)Ljava/lang/String;
+#urlToText(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;
+#documentBuilder(Ljavax/xml/validation/Schema;)Ljavax/xml/parsers/DocumentBuilder;
+#discoverSchema([Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;
-#<init>()V
-#parseConfiguration(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/Map;)Lorg/ehcache/xml/ConfigurationParser$XmlConfigurationWrapper;
-#parseXml(Ljava/lang/String;)Lorg/ehcache/xml/model/ConfigType;
-#getCacheElements(Lorg/ehcache/xml/model/ConfigType;)Ljava/lang/Iterable;
-#getTemplates(Lorg/ehcache/xml/model/ConfigType;)Ljava/util/Map;
-#unparseConfiguration(Lorg/ehcache/config/Configuration;)Ljava/lang/String;
@3.9.5
+#newSchema([Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;
@3.10.0-alpha0
-#newSchema([Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;

+###org/ehcache/xml/CoreCacheConfigurationParser
@3.6.0
+#<init>()V
+#parseConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#unparseConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha1
+#parse(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#unparse(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
-#parseConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#unparseConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/CoreServiceConfigurationParser
@3.6.0
+#parseServiceConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
+#parseServiceConfiguration(Ljava/lang/Object;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Ljava/lang/Object;)Ljava/lang/Object;
-#parseServiceConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/CoreServiceCreationConfigurationParser
@3.6.0
+#parseServiceCreationConfiguration(Lorg/ehcache/xml/model/ConfigType;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/ConfigurationBuilder;)Lorg/ehcache/config/builders/ConfigurationBuilder;
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.8.0
+#parseServiceCreationConfiguration(Lorg/ehcache/xml/model/ConfigType;Ljava/lang/ClassLoader;Lorg/ehcache/config/FluentConfigurationBuilder;)Lorg/ehcache/config/FluentConfigurationBuilder;
-#parseServiceCreationConfiguration(Lorg/ehcache/xml/model/ConfigType;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/ConfigurationBuilder;)Lorg/ehcache/config/builders/ConfigurationBuilder;
@3.10.0-alpha0
+#parseServiceCreationConfiguration(Ljava/lang/Object;Ljava/lang/ClassLoader;Lorg/ehcache/config/FluentConfigurationBuilder;)Lorg/ehcache/config/FluentConfigurationBuilder;
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Ljava/lang/Object;)Ljava/lang/Object;
-#parseServiceCreationConfiguration(Lorg/ehcache/xml/model/ConfigType;Ljava/lang/ClassLoader;Lorg/ehcache/config/FluentConfigurationBuilder;)Lorg/ehcache/config/FluentConfigurationBuilder;
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/JaxbHelper
@3.6.0
+#<init>()V
+#findDefaultValue(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;

+###org/ehcache/xml/Parser
@3.10.0-alpha1
+#getSchema()Ljava/util/Map;
+#getTargetNamespaces()Ljava/util/Set;
+#parse(Lorg/w3c/dom/Element;Ljava/lang/ClassLoader;)Ljava/lang/Object;
+#unparse(Lorg/w3c/dom/Document;Ljava/lang/Object;)Lorg/w3c/dom/Element;

+###org/ehcache/xml/ParsingUtil
@3.10.0-alpha1
+#<init>()V
+#parsePropertyOrString(Ljava/lang/String;)Ljava/lang/String;
+#parsePropertyOrInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#parsePropertyOrPositiveInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#parsePropertyOrNonNegativeInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#parseStringWithProperties(Ljava/lang/String;)Ljava/lang/String;

+###org/ehcache/xml/ResourceConfigurationParser
@3.6.0
+#<init>(Ljavax/xml/validation/Schema;Ljava/util/Set;)V
+#parseResourceConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Lorg/ehcache/config/builders/ResourcePoolsBuilder;)Lorg/ehcache/config/ResourcePools;
+#unparseResourceConfiguration(Lorg/ehcache/config/ResourcePools;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.7.0
+#<init>(Ljava/util/Set;)V
-#<init>(Ljavax/xml/validation/Schema;Ljava/util/Set;)V
@3.10.0-alpha1
+#parse(Lorg/ehcache/xml/model/CacheTemplate;Lorg/ehcache/config/builders/ResourcePoolsBuilder;Ljava/lang/ClassLoader;)Lorg/ehcache/config/ResourcePools;
+#unparse(Lorg/w3c/dom/Document;Lorg/ehcache/config/ResourcePools;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
-#parseResourceConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Lorg/ehcache/config/builders/ResourcePoolsBuilder;)Lorg/ehcache/config/ResourcePools;
-#unparseResourceConfiguration(Lorg/ehcache/config/ResourcePools;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/ServiceConfigurationParser
@3.6.0
+#<init>(Ljava/util/Map;)V
+#parseConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.10.0-alpha1
+#parse(Lorg/w3c/dom/Document;Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#parseConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;

+###org/ehcache/xml/ServiceCreationConfigurationParser
@3.6.0
+#<init>(Ljava/util/Map;)V

+###org/ehcache/xml/XmlConfiguration$PrettyClassFormat$Builder
@3.7.1
+#then(Lorg/ehcache/xml/XmlConfiguration$Lookup;)Lorg/ehcache/xml/XmlConfiguration$PrettyClassFormat;

+###org/ehcache/xml/XmlConfiguration$Template
@3.7.0
+#builderFor(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;

+###org/ehcache/xml/XmlConfiguration
@3.0.0.m5
+#<init>(Ljava/net/URL;)V
+#<init>(Ljava/net/URL;Ljava/lang/ClassLoader;)V
+#<init>(Ljava/net/URL;Ljava/lang/ClassLoader;Ljava/util/Map;)V
+#getURL()Ljava/net/URL;
+#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#getCacheConfigurations()Ljava/util/Map;
+#getServiceCreationConfigurations()Ljava/util/Collection;
+#getClassLoader()Ljava/lang/ClassLoader;
@3.0.0.rc3
+#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.0.0
+#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
-#newCacheConfigurationBuilderFromTemplate(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/builders/Builder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
@3.6.0
+#<init>(Lorg/ehcache/config/Configuration;)V
+#toString()Ljava/lang/String;
+#getClassForName(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
@3.7.0
+#<init>(Lorg/w3c/dom/Document;)V
+#<init>(Lorg/w3c/dom/Document;Ljava/lang/ClassLoader;)V
+#<init>(Lorg/w3c/dom/Document;Ljava/lang/ClassLoader;Ljava/util/Map;)V
+#asDocument()Lorg/w3c/dom/Document;
+#asRenderedDocument()Ljava/lang/String;
@3.8.0
+#derive()Lorg/ehcache/config/FluentConfigurationBuilder;

+###org/ehcache/xml/XmlModel
@3.1.1
+#<init>()V
+#convertToJavaTimeUnit(Lorg/ehcache/xml/model/TimeUnit;)Ljava/util/concurrent/TimeUnit;
@3.5.0
+#convertToJavaTimeUnit(Lorg/ehcache/xml/model/TimeUnit;)Ljava/time/temporal/TemporalUnit;
+#convertToJUCTimeUnit(Lorg/ehcache/xml/model/TimeUnit;)Ljava/util/concurrent/TimeUnit;
+#convertToJavaTemporalUnit(Lorg/ehcache/xml/model/TimeUnit;)Ljava/time/temporal/TemporalUnit;
-#convertToJavaTimeUnit(Lorg/ehcache/xml/model/TimeUnit;)Ljava/util/concurrent/TimeUnit;
@3.6.0
+#convertToXmlTimeUnit(Ljava/util/concurrent/TimeUnit;)Lorg/ehcache/xml/model/TimeUnit;

+###org/ehcache/xml/XmlUtil$FatalErrorHandler
@3.10.0-alpha0
+#<init>()V
+#warning(Lorg/xml/sax/SAXParseException;)V
+#error(Lorg/xml/sax/SAXParseException;)V
+#fatalError(Lorg/xml/sax/SAXParseException;)V

+###org/ehcache/xml/XmlUtil
@3.10.0-alpha0
+#<init>()V
+#createAndGetDocumentBuilder(Ljava/util/Collection;)Ljavax/xml/parsers/DocumentBuilder;
+#createAndGetDocumentBuilder(Ljavax/xml/transform/Source;)Ljavax/xml/parsers/DocumentBuilder;
+#createAndGetDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;
+#createDocumentRoot(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Document;
+#newSchema([Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;
@3.10.0-alpha1
+#mergePartialOrderings(Ljava/util/Collection;)Ljava/util/List;
+#namespaceUniqueParsersOfType(Ljava/lang/Class;)Ljava/lang/Iterable;
+#stampExternalConfigurations(Lorg/w3c/dom/Document;)Lorg/w3c/dom/Document;
+#findMatchingNodeInDocument(Lorg/w3c/dom/Document;Lorg/w3c/dom/Element;)Lorg/w3c/dom/Element;
-#createAndGetDocumentBuilder(Ljava/util/Collection;)Ljavax/xml/parsers/DocumentBuilder;
-#createAndGetDocumentBuilder(Ljavax/xml/transform/Source;)Ljavax/xml/parsers/DocumentBuilder;
-#createAndGetDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;
-#createDocumentRoot(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Document;

+###org/ehcache/xml/exceptions/XmlConfigurationException
@3.0.0.rc1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.0.0.rc3
+#<init>(Ljava/lang/Throwable;)V

+###org/ehcache/xml/model/Adapter1
@3.9.1
+#<init>()V
+#unmarshal(Ljava/lang/String;)Ljava/lang/String;
+#marshal(Ljava/lang/String;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/xml/model/Adapter2
@3.9.1
+#<init>()V
+#unmarshal(Ljava/lang/String;)Ljava/math/BigInteger;
+#marshal(Ljava/math/BigInteger;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/xml/model/Adapter3
@3.9.1
+#<init>()V
+#unmarshal(Ljava/lang/String;)Ljava/math/BigInteger;
+#marshal(Ljava/math/BigInteger;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/xml/model/Adapter4
@3.9.1
+#<init>()V
+#unmarshal(Ljava/lang/String;)Ljava/lang/String;
+#marshal(Ljava/lang/String;)Ljava/lang/String;
+#marshal(Ljava/lang/Object;)Ljava/lang/Object;
+#unmarshal(Ljava/lang/Object;)Ljava/lang/Object;

+###org/ehcache/xml/model/BaseCacheType
@3.0.0.m5
+#<init>()V
+#getKeyType()Lorg/ehcache/xml/model/CacheEntryType;
+#setKeyType(Lorg/ehcache/xml/model/CacheEntryType;)V
+#getValueType()Lorg/ehcache/xml/model/CacheEntryType;
+#setValueType(Lorg/ehcache/xml/model/CacheEntryType;)V
+#getExpiry()Lorg/ehcache/xml/model/ExpiryType;
+#setExpiry(Lorg/ehcache/xml/model/ExpiryType;)V
+#getEvictionVeto()Ljava/lang/String;
+#setEvictionVeto(Ljava/lang/String;)V
+#getLoaderWriter()Lorg/ehcache/xml/model/CacheLoaderWriterType;
+#setLoaderWriter(Lorg/ehcache/xml/model/CacheLoaderWriterType;)V
+#getListeners()Lorg/ehcache/xml/model/ListenersType;
+#setListeners(Lorg/ehcache/xml/model/ListenersType;)V
+#getHeap()Lorg/ehcache/xml/model/ResourceType;
+#setHeap(Lorg/ehcache/xml/model/ResourceType;)V
+#getResources()Lorg/ehcache/xml/model/ResourcesType;
+#setResources(Lorg/ehcache/xml/model/ResourcesType;)V
+#getHeapStoreSettings()Lorg/ehcache/xml/model/SizeofType;
+#setHeapStoreSettings(Lorg/ehcache/xml/model/SizeofType;)V
+#getDiskStoreSettings()Lorg/ehcache/xml/model/DiskStoreSettingsType;
+#setDiskStoreSettings(Lorg/ehcache/xml/model/DiskStoreSettingsType;)V
+#getAny()Ljava/util/List;
@3.0.0.rc2
+#getHeap()Lorg/ehcache/xml/model/Heap;
+#setHeap(Lorg/ehcache/xml/model/Heap;)V
+#getServiceConfiguration()Ljava/util/List;
-#getHeap()Lorg/ehcache/xml/model/ResourceType;
-#setHeap(Lorg/ehcache/xml/model/ResourceType;)V
-#getAny()Ljava/util/List;
@3.0.0
+#getEvictionAdvisor()Ljava/lang/String;
+#setEvictionAdvisor(Ljava/lang/String;)V
-#getEvictionVeto()Ljava/lang/String;
-#setEvictionVeto(Ljava/lang/String;)V
@3.5.0
+#getResilience()Ljava/lang/String;
+#setResilience(Ljava/lang/String;)V
@3.6.0
+#withKeyType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withValueType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withExpiry(Lorg/ehcache/xml/model/ExpiryType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withEvictionAdvisor(Ljava/lang/String;)Lorg/ehcache/xml/model/BaseCacheType;
+#withLoaderWriter(Lorg/ehcache/xml/model/CacheLoaderWriterType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withResilience(Ljava/lang/String;)Lorg/ehcache/xml/model/BaseCacheType;
+#withListeners(Lorg/ehcache/xml/model/ListenersType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withHeap(Lorg/ehcache/xml/model/Heap;)Lorg/ehcache/xml/model/BaseCacheType;
+#withResources(Lorg/ehcache/xml/model/ResourcesType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withHeapStoreSettings(Lorg/ehcache/xml/model/SizeofType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withDiskStoreSettings(Lorg/ehcache/xml/model/DiskStoreSettingsType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withServiceConfiguration([Lorg/w3c/dom/Element;)Lorg/ehcache/xml/model/BaseCacheType;
+#withServiceConfiguration(Ljava/util/Collection;)Lorg/ehcache/xml/model/BaseCacheType;

+###org/ehcache/xml/model/CacheDefinition
@3.6.0
+#<init>(Ljava/lang/String;[Lorg/ehcache/xml/model/BaseCacheType;)V

+###org/ehcache/xml/model/CacheEntryType
@3.0.0.m5
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getSerializer()Ljava/lang/String;
+#setSerializer(Ljava/lang/String;)V
+#getCopier()Ljava/lang/String;
+#setCopier(Ljava/lang/String;)V
@3.6.0
+#withValue(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheEntryType;
+#withSerializer(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheEntryType;
+#withCopier(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheEntryType;

+###org/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching
@3.0.0.m5
+#<init>()V
+#getMaxWriteDelay()Lorg/ehcache/xml/model/TimeType;
+#setMaxWriteDelay(Lorg/ehcache/xml/model/TimeType;)V
+#getBatchSize()Ljava/math/BigInteger;
+#setBatchSize(Ljava/math/BigInteger;)V
+#isCoalesce()Z
+#setCoalesce(Ljava/lang/Boolean;)V
@3.6.0
+#withMaxWriteDelay(Lorg/ehcache/xml/model/TimeType;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;
+#withBatchSize(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;
+#withCoalesce(Ljava/lang/Boolean;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;
@3.9.1
+#getMaxWriteDelay()Lorg/ehcache/xml/model/TimeTypeWithPropSubst;
+#setMaxWriteDelay(Lorg/ehcache/xml/model/TimeTypeWithPropSubst;)V
+#withMaxWriteDelay(Lorg/ehcache/xml/model/TimeTypeWithPropSubst;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;
-#getMaxWriteDelay()Lorg/ehcache/xml/model/TimeType;
-#setMaxWriteDelay(Lorg/ehcache/xml/model/TimeType;)V
-#withMaxWriteDelay(Lorg/ehcache/xml/model/TimeType;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;

+###org/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$NonBatching
@3.6.0
+#<init>()V

+###org/ehcache/xml/model/CacheLoaderWriterType$WriteBehind
@3.0.0.m5
+#<init>()V
+#getBatching()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;
+#setBatching(Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;)V
+#getNonBatching()Ljava/lang/Object;
+#setNonBatching(Ljava/lang/Object;)V
+#getConcurrency()Ljava/math/BigInteger;
+#setConcurrency(Ljava/math/BigInteger;)V
+#getSize()Ljava/math/BigInteger;
+#setSize(Ljava/math/BigInteger;)V
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
@3.6.0
+#getNonBatching()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$NonBatching;
+#setNonBatching(Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$NonBatching;)V
+#withBatching(Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#withNonBatching(Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$NonBatching;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#withConcurrency(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#withSize(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#withThreadPool(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
-#getNonBatching()Ljava/lang/Object;
-#setNonBatching(Ljava/lang/Object;)V

+###org/ehcache/xml/model/CacheLoaderWriterType
@3.0.0.m5
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getWriteBehind()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#setWriteBehind(Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;)V
@3.6.0
+#withClazz(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheLoaderWriterType;
+#withWriteBehind(Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;)Lorg/ehcache/xml/model/CacheLoaderWriterType;

+###org/ehcache/xml/model/CacheSpec
@3.6.0
+#<init>(Ljava/lang/String;[Lorg/ehcache/xml/model/BaseCacheType;)V
+#id()Ljava/lang/String;
+#keyType()Ljava/lang/String;
+#keySerializer()Ljava/lang/String;
+#keyCopier()Ljava/lang/String;
+#valueType()Ljava/lang/String;
+#valueSerializer()Ljava/lang/String;
+#valueCopier()Ljava/lang/String;
+#evictionAdvisor()Ljava/lang/String;
+#expiry()Lorg/ehcache/xml/model/Expiry;
+#getResources()Ljava/util/List;
+#loaderWriter()Ljava/lang/String;
+#resilienceStrategy()Ljava/lang/String;
+#listenersConfig()Lorg/ehcache/xml/model/ListenersConfig;
+#serviceConfigExtensions()Ljava/util/Collection;
+#getHeap()Lorg/ehcache/xml/model/Heap;
+#writeBehind()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#diskStoreSettings()Lorg/ehcache/xml/model/DiskStoreSettingsType;
+#heapStoreSettings()Lorg/ehcache/xml/model/SizeOfEngineLimits;

+###org/ehcache/xml/model/CacheTemplate$Impl
@3.6.0
+#<init>(Ljava/lang/String;Lorg/ehcache/xml/model/CacheTemplateType;)V
@3.7.0
+#<init>(Lorg/ehcache/xml/model/CacheTemplateType;)V
-#<init>(Ljava/lang/String;Lorg/ehcache/xml/model/CacheTemplateType;)V

+###org/ehcache/xml/model/CacheTemplate
@3.6.0
+#id()Ljava/lang/String;
+#keyType()Ljava/lang/String;
+#keySerializer()Ljava/lang/String;
+#keyCopier()Ljava/lang/String;
+#valueType()Ljava/lang/String;
+#valueSerializer()Ljava/lang/String;
+#valueCopier()Ljava/lang/String;
+#evictionAdvisor()Ljava/lang/String;
+#expiry()Lorg/ehcache/xml/model/Expiry;
+#getHeap()Lorg/ehcache/xml/model/Heap;
+#getResources()Ljava/util/List;
+#loaderWriter()Ljava/lang/String;
+#resilienceStrategy()Ljava/lang/String;
+#listenersConfig()Lorg/ehcache/xml/model/ListenersConfig;
+#serviceConfigExtensions()Ljava/util/Collection;
+#writeBehind()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#diskStoreSettings()Lorg/ehcache/xml/model/DiskStoreSettingsType;
+#heapStoreSettings()Lorg/ehcache/xml/model/SizeOfEngineLimits;

+###org/ehcache/xml/model/CacheTemplateType
@3.0.0.m5
+#<init>()V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
@3.6.0
+#withName(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withKeyType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withValueType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withExpiry(Lorg/ehcache/xml/model/ExpiryType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withEvictionAdvisor(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withLoaderWriter(Lorg/ehcache/xml/model/CacheLoaderWriterType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withResilience(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withListeners(Lorg/ehcache/xml/model/ListenersType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withHeap(Lorg/ehcache/xml/model/Heap;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withResources(Lorg/ehcache/xml/model/ResourcesType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withHeapStoreSettings(Lorg/ehcache/xml/model/SizeofType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withDiskStoreSettings(Lorg/ehcache/xml/model/DiskStoreSettingsType;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withServiceConfiguration([Lorg/w3c/dom/Element;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withServiceConfiguration(Ljava/util/Collection;)Lorg/ehcache/xml/model/CacheTemplateType;
+#withServiceConfiguration(Ljava/util/Collection;)Lorg/ehcache/xml/model/BaseCacheType;
+#withServiceConfiguration([Lorg/w3c/dom/Element;)Lorg/ehcache/xml/model/BaseCacheType;
+#withDiskStoreSettings(Lorg/ehcache/xml/model/DiskStoreSettingsType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withHeapStoreSettings(Lorg/ehcache/xml/model/SizeofType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withResources(Lorg/ehcache/xml/model/ResourcesType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withHeap(Lorg/ehcache/xml/model/Heap;)Lorg/ehcache/xml/model/BaseCacheType;
+#withListeners(Lorg/ehcache/xml/model/ListenersType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withResilience(Ljava/lang/String;)Lorg/ehcache/xml/model/BaseCacheType;
+#withLoaderWriter(Lorg/ehcache/xml/model/CacheLoaderWriterType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withEvictionAdvisor(Ljava/lang/String;)Lorg/ehcache/xml/model/BaseCacheType;
+#withExpiry(Lorg/ehcache/xml/model/ExpiryType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withValueType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withKeyType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/BaseCacheType;

+###org/ehcache/xml/model/CacheType
@3.0.0.m5
+#<init>()V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#getUsesTemplate()Ljava/lang/Object;
+#setUsesTemplate(Ljava/lang/Object;)V
@3.6.0
+#withAlias(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheType;
+#withUsesTemplate(Ljava/lang/Object;)Lorg/ehcache/xml/model/CacheType;
+#withKeyType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/CacheType;
+#withValueType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/CacheType;
+#withExpiry(Lorg/ehcache/xml/model/ExpiryType;)Lorg/ehcache/xml/model/CacheType;
+#withEvictionAdvisor(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheType;
+#withLoaderWriter(Lorg/ehcache/xml/model/CacheLoaderWriterType;)Lorg/ehcache/xml/model/CacheType;
+#withResilience(Ljava/lang/String;)Lorg/ehcache/xml/model/CacheType;
+#withListeners(Lorg/ehcache/xml/model/ListenersType;)Lorg/ehcache/xml/model/CacheType;
+#withHeap(Lorg/ehcache/xml/model/Heap;)Lorg/ehcache/xml/model/CacheType;
+#withResources(Lorg/ehcache/xml/model/ResourcesType;)Lorg/ehcache/xml/model/CacheType;
+#withHeapStoreSettings(Lorg/ehcache/xml/model/SizeofType;)Lorg/ehcache/xml/model/CacheType;
+#withDiskStoreSettings(Lorg/ehcache/xml/model/DiskStoreSettingsType;)Lorg/ehcache/xml/model/CacheType;
+#withServiceConfiguration([Lorg/w3c/dom/Element;)Lorg/ehcache/xml/model/CacheType;
+#withServiceConfiguration(Ljava/util/Collection;)Lorg/ehcache/xml/model/CacheType;
+#withServiceConfiguration(Ljava/util/Collection;)Lorg/ehcache/xml/model/BaseCacheType;
+#withServiceConfiguration([Lorg/w3c/dom/Element;)Lorg/ehcache/xml/model/BaseCacheType;
+#withDiskStoreSettings(Lorg/ehcache/xml/model/DiskStoreSettingsType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withHeapStoreSettings(Lorg/ehcache/xml/model/SizeofType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withResources(Lorg/ehcache/xml/model/ResourcesType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withHeap(Lorg/ehcache/xml/model/Heap;)Lorg/ehcache/xml/model/BaseCacheType;
+#withListeners(Lorg/ehcache/xml/model/ListenersType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withResilience(Ljava/lang/String;)Lorg/ehcache/xml/model/BaseCacheType;
+#withLoaderWriter(Lorg/ehcache/xml/model/CacheLoaderWriterType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withEvictionAdvisor(Ljava/lang/String;)Lorg/ehcache/xml/model/BaseCacheType;
+#withExpiry(Lorg/ehcache/xml/model/ExpiryType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withValueType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/BaseCacheType;
+#withKeyType(Lorg/ehcache/xml/model/CacheEntryType;)Lorg/ehcache/xml/model/BaseCacheType;

+###org/ehcache/xml/model/ConfigType
@3.0.0.m5
+#<init>()V
+#getService()Ljava/util/List;
+#getDefaultSerializers()Lorg/ehcache/xml/model/SerializerType;
+#setDefaultSerializers(Lorg/ehcache/xml/model/SerializerType;)V
+#getDefaultCopiers()Lorg/ehcache/xml/model/CopierType;
+#setDefaultCopiers(Lorg/ehcache/xml/model/CopierType;)V
+#getPersistence()Lorg/ehcache/xml/model/PersistenceType;
+#setPersistence(Lorg/ehcache/xml/model/PersistenceType;)V
+#getThreadPools()Lorg/ehcache/xml/model/ThreadPoolsType;
+#setThreadPools(Lorg/ehcache/xml/model/ThreadPoolsType;)V
+#getEventDispatch()Lorg/ehcache/xml/model/ThreadPoolReferenceType;
+#setEventDispatch(Lorg/ehcache/xml/model/ThreadPoolReferenceType;)V
+#getWriteBehind()Lorg/ehcache/xml/model/ThreadPoolReferenceType;
+#setWriteBehind(Lorg/ehcache/xml/model/ThreadPoolReferenceType;)V
+#getHeapStore()Lorg/ehcache/xml/model/SizeofType;
+#setHeapStore(Lorg/ehcache/xml/model/SizeofType;)V
+#getDiskStore()Lorg/ehcache/xml/model/ThreadPoolReferenceType;
+#setDiskStore(Lorg/ehcache/xml/model/ThreadPoolReferenceType;)V
+#getCacheOrCacheTemplate()Ljava/util/List;
@3.6.0
+#withService([Lorg/ehcache/xml/model/ServiceType;)Lorg/ehcache/xml/model/ConfigType;
+#withService(Ljava/util/Collection;)Lorg/ehcache/xml/model/ConfigType;
+#withDefaultSerializers(Lorg/ehcache/xml/model/SerializerType;)Lorg/ehcache/xml/model/ConfigType;
+#withDefaultCopiers(Lorg/ehcache/xml/model/CopierType;)Lorg/ehcache/xml/model/ConfigType;
+#withPersistence(Lorg/ehcache/xml/model/PersistenceType;)Lorg/ehcache/xml/model/ConfigType;
+#withThreadPools(Lorg/ehcache/xml/model/ThreadPoolsType;)Lorg/ehcache/xml/model/ConfigType;
+#withEventDispatch(Lorg/ehcache/xml/model/ThreadPoolReferenceType;)Lorg/ehcache/xml/model/ConfigType;
+#withWriteBehind(Lorg/ehcache/xml/model/ThreadPoolReferenceType;)Lorg/ehcache/xml/model/ConfigType;
+#withHeapStore(Lorg/ehcache/xml/model/SizeofType;)Lorg/ehcache/xml/model/ConfigType;
+#withDiskStore(Lorg/ehcache/xml/model/ThreadPoolReferenceType;)Lorg/ehcache/xml/model/ConfigType;
+#withCacheOrCacheTemplate([Lorg/ehcache/xml/model/BaseCacheType;)Lorg/ehcache/xml/model/ConfigType;
+#withCacheOrCacheTemplate(Ljava/util/Collection;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/model/CopierType$Copier
@3.0.0.m5
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
@3.6.0
+#withValue(Ljava/lang/String;)Lorg/ehcache/xml/model/CopierType$Copier;
+#withType(Ljava/lang/String;)Lorg/ehcache/xml/model/CopierType$Copier;

+###org/ehcache/xml/model/CopierType
@3.0.0.m5
+#<init>()V
+#getCopier()Ljava/util/List;
@3.6.0
+#withCopier([Lorg/ehcache/xml/model/CopierType$Copier;)Lorg/ehcache/xml/model/CopierType;
+#withCopier(Ljava/util/Collection;)Lorg/ehcache/xml/model/CopierType;

+###org/ehcache/xml/model/Disk
@3.0.0.rc2
+#<init>(Lorg/ehcache/xml/model/PersistableMemoryType;)V
+#<init>()V
@3.9.1
+#<init>(Lorg/ehcache/xml/model/PersistableMemoryTypeWithPropSubst;)V
-#<init>(Lorg/ehcache/xml/model/PersistableMemoryType;)V

+###org/ehcache/xml/model/DiskStoreSettingsType
@3.0.0.m5
+#<init>()V
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
+#getWriterThreads()Ljava/math/BigInteger;
+#setWriterThreads(Ljava/math/BigInteger;)V
@3.0.0
+#getWriterConcurrency()Ljava/math/BigInteger;
+#setWriterConcurrency(Ljava/math/BigInteger;)V
-#getWriterThreads()Ljava/math/BigInteger;
-#setWriterThreads(Ljava/math/BigInteger;)V
@3.4.0
+#getDiskSegments()Ljava/math/BigInteger;
+#setDiskSegments(Ljava/math/BigInteger;)V
@3.6.0
+#withThreadPool(Ljava/lang/String;)Lorg/ehcache/xml/model/DiskStoreSettingsType;
+#withWriterConcurrency(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/DiskStoreSettingsType;
+#withDiskSegments(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/DiskStoreSettingsType;

+###org/ehcache/xml/model/EventFiringType
@3.0.0.m5
+#values()[Lorg/ehcache/xml/model/EventFiringType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/xml/model/EventFiringType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/xml/model/EventFiringType;

+###org/ehcache/xml/model/EventOrderingType
@3.0.0.m5
+#values()[Lorg/ehcache/xml/model/EventOrderingType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/xml/model/EventOrderingType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/xml/model/EventOrderingType;

+###org/ehcache/xml/model/EventType
@3.0.0.m5
+#values()[Lorg/ehcache/xml/model/EventType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/xml/model/EventType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/xml/model/EventType;

+###org/ehcache/xml/model/Expiry
@3.6.0
+#<init>(Lorg/ehcache/xml/model/ExpiryType;)V
+#isUserDef()Z
+#isTTI()Z
+#isTTL()Z
+#type()Ljava/lang/String;
+#value()J
+#unit()Ljava/time/temporal/TemporalUnit;

+###org/ehcache/xml/model/ExpiryType$None
@3.0.0.m5
+#<init>()V

+###org/ehcache/xml/model/ExpiryType
@3.0.0.m5
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getTti()Lorg/ehcache/xml/model/TimeType;
+#setTti(Lorg/ehcache/xml/model/TimeType;)V
+#getTtl()Lorg/ehcache/xml/model/TimeType;
+#setTtl(Lorg/ehcache/xml/model/TimeType;)V
+#getNone()Lorg/ehcache/xml/model/ExpiryType$None;
+#setNone(Lorg/ehcache/xml/model/ExpiryType$None;)V
@3.6.0
+#withClazz(Ljava/lang/String;)Lorg/ehcache/xml/model/ExpiryType;
+#withTti(Lorg/ehcache/xml/model/TimeType;)Lorg/ehcache/xml/model/ExpiryType;
+#withTtl(Lorg/ehcache/xml/model/TimeType;)Lorg/ehcache/xml/model/ExpiryType;
+#withNone(Lorg/ehcache/xml/model/ExpiryType$None;)Lorg/ehcache/xml/model/ExpiryType;
@3.9.1
+#getTti()Lorg/ehcache/xml/model/TimeTypeWithPropSubst;
+#setTti(Lorg/ehcache/xml/model/TimeTypeWithPropSubst;)V
+#getTtl()Lorg/ehcache/xml/model/TimeTypeWithPropSubst;
+#setTtl(Lorg/ehcache/xml/model/TimeTypeWithPropSubst;)V
+#withTti(Lorg/ehcache/xml/model/TimeTypeWithPropSubst;)Lorg/ehcache/xml/model/ExpiryType;
+#withTtl(Lorg/ehcache/xml/model/TimeTypeWithPropSubst;)Lorg/ehcache/xml/model/ExpiryType;
-#getTti()Lorg/ehcache/xml/model/TimeType;
-#setTti(Lorg/ehcache/xml/model/TimeType;)V
-#getTtl()Lorg/ehcache/xml/model/TimeType;
-#setTtl(Lorg/ehcache/xml/model/TimeType;)V
-#withTti(Lorg/ehcache/xml/model/TimeType;)Lorg/ehcache/xml/model/ExpiryType;
-#withTtl(Lorg/ehcache/xml/model/TimeType;)Lorg/ehcache/xml/model/ExpiryType;

+###org/ehcache/xml/model/Heap
@3.0.0.rc2
+#<init>(Lorg/ehcache/xml/model/ResourceType;)V
+#<init>()V
@3.9.1
+#<init>(Lorg/ehcache/xml/model/ResourceTypeWithPropSubst;)V
-#<init>(Lorg/ehcache/xml/model/ResourceType;)V

+###org/ehcache/xml/model/ListenersConfig
@3.6.0
+#<init>(Lorg/ehcache/xml/model/ListenersType;[Lorg/ehcache/xml/model/ListenersType;)V
+#threadPool()Ljava/lang/String;
+#listeners()Ljava/lang/Iterable;

+###org/ehcache/xml/model/ListenersType$Listener
@3.0.0.m5
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getEventFiringMode()Lorg/ehcache/xml/model/EventFiringType;
+#setEventFiringMode(Lorg/ehcache/xml/model/EventFiringType;)V
+#getEventOrderingMode()Lorg/ehcache/xml/model/EventOrderingType;
+#setEventOrderingMode(Lorg/ehcache/xml/model/EventOrderingType;)V
+#getEventsToFireOn()Ljava/util/List;
+#getAny()Ljava/util/List;
@3.0.0.rc2
-#getAny()Ljava/util/List;
@3.6.0
+#withClazz(Ljava/lang/String;)Lorg/ehcache/xml/model/ListenersType$Listener;
+#withEventFiringMode(Lorg/ehcache/xml/model/EventFiringType;)Lorg/ehcache/xml/model/ListenersType$Listener;
+#withEventOrderingMode(Lorg/ehcache/xml/model/EventOrderingType;)Lorg/ehcache/xml/model/ListenersType$Listener;
+#withEventsToFireOn([Lorg/ehcache/xml/model/EventType;)Lorg/ehcache/xml/model/ListenersType$Listener;
+#withEventsToFireOn(Ljava/util/Collection;)Lorg/ehcache/xml/model/ListenersType$Listener;

+###org/ehcache/xml/model/ListenersType
@3.0.0.m5
+#<init>()V
+#getListener()Ljava/util/List;
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
+#getParallelismLevel()Ljava/math/BigInteger;
+#setParallelismLevel(Ljava/math/BigInteger;)V
@3.0.0
+#getDispatcherThreadPool()Ljava/lang/String;
+#setDispatcherThreadPool(Ljava/lang/String;)V
+#getDispatcherConcurrency()Ljava/math/BigInteger;
+#setDispatcherConcurrency(Ljava/math/BigInteger;)V
-#getThreadPool()Ljava/lang/String;
-#setThreadPool(Ljava/lang/String;)V
-#getParallelismLevel()Ljava/math/BigInteger;
-#setParallelismLevel(Ljava/math/BigInteger;)V
@3.6.0
+#withListener([Lorg/ehcache/xml/model/ListenersType$Listener;)Lorg/ehcache/xml/model/ListenersType;
+#withListener(Ljava/util/Collection;)Lorg/ehcache/xml/model/ListenersType;
+#withDispatcherThreadPool(Ljava/lang/String;)Lorg/ehcache/xml/model/ListenersType;
-#getDispatcherConcurrency()Ljava/math/BigInteger;
-#setDispatcherConcurrency(Ljava/math/BigInteger;)V

+###org/ehcache/xml/model/MemoryType
@3.0.0.m5
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getUnit()Lorg/ehcache/xml/model/MemoryUnit;
+#setUnit(Lorg/ehcache/xml/model/MemoryUnit;)V
@3.6.0
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/MemoryType;
+#withUnit(Lorg/ehcache/xml/model/MemoryUnit;)Lorg/ehcache/xml/model/MemoryType;

+###org/ehcache/xml/model/MemoryTypeWithPropSubst
@3.9.1
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getUnit()Lorg/ehcache/xml/model/MemoryUnit;
+#setUnit(Lorg/ehcache/xml/model/MemoryUnit;)V
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/MemoryTypeWithPropSubst;
+#withUnit(Lorg/ehcache/xml/model/MemoryUnit;)Lorg/ehcache/xml/model/MemoryTypeWithPropSubst;

+###org/ehcache/xml/model/MemoryUnit
@3.0.0.m5
+#values()[Lorg/ehcache/xml/model/MemoryUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/xml/model/MemoryUnit;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/xml/model/MemoryUnit;

+###org/ehcache/xml/model/ObjectFactory
@3.0.0.m5
+#<init>()V
+#createSerializerType()Lorg/ehcache/xml/model/SerializerType;
+#createCopierType()Lorg/ehcache/xml/model/CopierType;
+#createThreadPoolsType()Lorg/ehcache/xml/model/ThreadPoolsType;
+#createSizeofType()Lorg/ehcache/xml/model/SizeofType;
+#createListenersType()Lorg/ehcache/xml/model/ListenersType;
+#createCacheLoaderWriterType()Lorg/ehcache/xml/model/CacheLoaderWriterType;
+#createCacheLoaderWriterTypeWriteBehind()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind;
+#createExpiryType()Lorg/ehcache/xml/model/ExpiryType;
+#createConfigType()Lorg/ehcache/xml/model/ConfigType;
+#createServiceType()Lorg/ehcache/xml/model/ServiceType;
+#createThreadPoolReferenceType()Lorg/ehcache/xml/model/ThreadPoolReferenceType;
+#createTimeType()Lorg/ehcache/xml/model/TimeType;
+#createCacheType()Lorg/ehcache/xml/model/CacheType;
+#createDiskStoreSettingsType()Lorg/ehcache/xml/model/DiskStoreSettingsType;
+#createPersistableMemoryType()Lorg/ehcache/xml/model/PersistableMemoryType;
+#createResourceType()Lorg/ehcache/xml/model/ResourceType;
+#createResourcesType()Lorg/ehcache/xml/model/ResourcesType;
+#createPersistenceType()Lorg/ehcache/xml/model/PersistenceType;
+#createCacheEntryType()Lorg/ehcache/xml/model/CacheEntryType;
+#createCacheTemplateType()Lorg/ehcache/xml/model/CacheTemplateType;
+#createMemoryType()Lorg/ehcache/xml/model/MemoryType;
+#createSerializerTypeSerializer()Lorg/ehcache/xml/model/SerializerType$Serializer;
+#createCopierTypeCopier()Lorg/ehcache/xml/model/CopierType$Copier;
+#createThreadPoolsTypeThreadPool()Lorg/ehcache/xml/model/ThreadPoolsType$ThreadPool;
+#createSizeofTypeMaxObjectGraphSize()Lorg/ehcache/xml/model/SizeofType$MaxObjectGraphSize;
+#createListenersTypeListener()Lorg/ehcache/xml/model/ListenersType$Listener;
+#createCacheLoaderWriterTypeWriteBehindBatching()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$Batching;
+#createExpiryTypeNone()Lorg/ehcache/xml/model/ExpiryType$None;
+#createConfig(Lorg/ehcache/xml/model/ConfigType;)Ljavax/xml/bind/JAXBElement;
@3.0.0.rc2
+#createOffheap(Lorg/ehcache/xml/model/MemoryType;)Lorg/ehcache/xml/model/Offheap;
+#createResource(Ljava/lang/Object;)Ljavax/xml/bind/JAXBElement;
+#createServiceCreationConfiguration(Ljava/lang/Object;)Ljavax/xml/bind/JAXBElement;
+#createHeap(Lorg/ehcache/xml/model/ResourceType;)Lorg/ehcache/xml/model/Heap;
+#createDisk(Lorg/ehcache/xml/model/PersistableMemoryType;)Lorg/ehcache/xml/model/Disk;
+#createServiceConfiguration(Ljava/lang/Object;)Ljavax/xml/bind/JAXBElement;
@3.6.0
+#createCacheLoaderWriterTypeWriteBehindNonBatching()Lorg/ehcache/xml/model/CacheLoaderWriterType$WriteBehind$NonBatching;
@3.9.1
+#createResourceTypeWithPropSubst()Lorg/ehcache/xml/model/ResourceTypeWithPropSubst;
+#createMemoryTypeWithPropSubst()Lorg/ehcache/xml/model/MemoryTypeWithPropSubst;
+#createPersistableMemoryTypeWithPropSubst()Lorg/ehcache/xml/model/PersistableMemoryTypeWithPropSubst;
+#createTimeTypeWithPropSubst()Lorg/ehcache/xml/model/TimeTypeWithPropSubst;
+#createHeap(Lorg/ehcache/xml/model/ResourceTypeWithPropSubst;)Lorg/ehcache/xml/model/Heap;
+#createOffheap(Lorg/ehcache/xml/model/MemoryTypeWithPropSubst;)Lorg/ehcache/xml/model/Offheap;
+#createDisk(Lorg/ehcache/xml/model/PersistableMemoryTypeWithPropSubst;)Lorg/ehcache/xml/model/Disk;
-#createResourceType()Lorg/ehcache/xml/model/ResourceType;
-#createPersistableMemoryType()Lorg/ehcache/xml/model/PersistableMemoryType;
-#createTimeType()Lorg/ehcache/xml/model/TimeType;
-#createHeap(Lorg/ehcache/xml/model/ResourceType;)Lorg/ehcache/xml/model/Heap;
-#createOffheap(Lorg/ehcache/xml/model/MemoryType;)Lorg/ehcache/xml/model/Offheap;
-#createDisk(Lorg/ehcache/xml/model/PersistableMemoryType;)Lorg/ehcache/xml/model/Disk;

+###org/ehcache/xml/model/Offheap
@3.0.0.rc2
+#<init>(Lorg/ehcache/xml/model/MemoryType;)V
+#<init>()V
@3.9.1
+#<init>(Lorg/ehcache/xml/model/MemoryTypeWithPropSubst;)V
-#<init>(Lorg/ehcache/xml/model/MemoryType;)V

+###org/ehcache/xml/model/PersistableMemoryTypeWithPropSubst
@3.9.1
+#<init>()V
+#isPersistent()Z
+#setPersistent(Ljava/lang/Boolean;)V
+#withPersistent(Ljava/lang/Boolean;)Lorg/ehcache/xml/model/PersistableMemoryTypeWithPropSubst;
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/PersistableMemoryTypeWithPropSubst;
+#withUnit(Lorg/ehcache/xml/model/MemoryUnit;)Lorg/ehcache/xml/model/PersistableMemoryTypeWithPropSubst;
+#withUnit(Lorg/ehcache/xml/model/MemoryUnit;)Lorg/ehcache/xml/model/MemoryTypeWithPropSubst;
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/MemoryTypeWithPropSubst;

+###org/ehcache/xml/model/PersistenceType
@3.0.0.m5
+#<init>()V
+#getDirectory()Ljava/lang/String;
+#setDirectory(Ljava/lang/String;)V
@3.6.0
+#withDirectory(Ljava/lang/String;)Lorg/ehcache/xml/model/PersistenceType;

+###org/ehcache/xml/model/ResourceTypeWithPropSubst
@3.9.1
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getUnit()Lorg/ehcache/xml/model/ResourceUnit;
+#setUnit(Lorg/ehcache/xml/model/ResourceUnit;)V
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/ResourceTypeWithPropSubst;
+#withUnit(Lorg/ehcache/xml/model/ResourceUnit;)Lorg/ehcache/xml/model/ResourceTypeWithPropSubst;

+###org/ehcache/xml/model/ResourceUnit
@3.0.0.m5
+#values()[Lorg/ehcache/xml/model/ResourceUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/xml/model/ResourceUnit;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/xml/model/ResourceUnit;

+###org/ehcache/xml/model/ResourcesType
@3.0.0.m5
+#<init>()V
+#getHeap()Lorg/ehcache/xml/model/ResourceType;
+#setHeap(Lorg/ehcache/xml/model/ResourceType;)V
+#getOffheap()Lorg/ehcache/xml/model/MemoryType;
+#setOffheap(Lorg/ehcache/xml/model/MemoryType;)V
+#getDisk()Lorg/ehcache/xml/model/PersistableMemoryType;
+#setDisk(Lorg/ehcache/xml/model/PersistableMemoryType;)V
+#getAny()Ljava/lang/Object;
+#setAny(Ljava/lang/Object;)V
@3.0.0.rc2
+#getResource()Ljava/util/List;
-#getHeap()Lorg/ehcache/xml/model/ResourceType;
-#setHeap(Lorg/ehcache/xml/model/ResourceType;)V
-#getOffheap()Lorg/ehcache/xml/model/MemoryType;
-#setOffheap(Lorg/ehcache/xml/model/MemoryType;)V
-#getDisk()Lorg/ehcache/xml/model/PersistableMemoryType;
-#setDisk(Lorg/ehcache/xml/model/PersistableMemoryType;)V
-#getAny()Ljava/lang/Object;
-#setAny(Ljava/lang/Object;)V
@3.6.0
+#withResource([Lorg/w3c/dom/Element;)Lorg/ehcache/xml/model/ResourcesType;
+#withResource(Ljava/util/Collection;)Lorg/ehcache/xml/model/ResourcesType;

+###org/ehcache/xml/model/SerializerType$Serializer
@3.0.0.m5
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
@3.6.0
+#withValue(Ljava/lang/String;)Lorg/ehcache/xml/model/SerializerType$Serializer;
+#withType(Ljava/lang/String;)Lorg/ehcache/xml/model/SerializerType$Serializer;

+###org/ehcache/xml/model/SerializerType
@3.0.0.m5
+#<init>()V
+#getSerializer()Ljava/util/List;
@3.6.0
+#withSerializer([Lorg/ehcache/xml/model/SerializerType$Serializer;)Lorg/ehcache/xml/model/SerializerType;
+#withSerializer(Ljava/util/Collection;)Lorg/ehcache/xml/model/SerializerType;

+###org/ehcache/xml/model/ServiceType
@3.0.0.m5
+#<init>()V
+#getAny()Ljava/lang/Object;
+#setAny(Ljava/lang/Object;)V
@3.0.0.rc2
+#getServiceCreationConfiguration()Lorg/w3c/dom/Element;
+#setServiceCreationConfiguration(Lorg/w3c/dom/Element;)V
-#getAny()Ljava/lang/Object;
-#setAny(Ljava/lang/Object;)V
@3.6.0
+#withServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/xml/model/ServiceType;

+###org/ehcache/xml/model/SizeOfEngineLimits
@3.6.0
+#<init>(Lorg/ehcache/xml/model/SizeofType;)V
+#getMaxObjectGraphSize()J
+#getMaxObjectSize()J
+#getUnit()Lorg/ehcache/config/units/MemoryUnit;

+###org/ehcache/xml/model/SizeofType$MaxObjectGraphSize
@3.0.0.m5
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
@3.6.0
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/SizeofType$MaxObjectGraphSize;

+###org/ehcache/xml/model/SizeofType
@3.0.0.m5
+#<init>()V
+#getMaxObjectGraphSize()Lorg/ehcache/xml/model/SizeofType$MaxObjectGraphSize;
+#setMaxObjectGraphSize(Lorg/ehcache/xml/model/SizeofType$MaxObjectGraphSize;)V
+#getMaxObjectSize()Lorg/ehcache/xml/model/MemoryType;
+#setMaxObjectSize(Lorg/ehcache/xml/model/MemoryType;)V
@3.6.0
+#withMaxObjectGraphSize(Lorg/ehcache/xml/model/SizeofType$MaxObjectGraphSize;)Lorg/ehcache/xml/model/SizeofType;
+#withMaxObjectSize(Lorg/ehcache/xml/model/MemoryType;)Lorg/ehcache/xml/model/SizeofType;

+###org/ehcache/xml/model/ThreadPoolReferenceType
@3.0.0.m5
+#<init>()V
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
@3.6.0
+#withThreadPool(Ljava/lang/String;)Lorg/ehcache/xml/model/ThreadPoolReferenceType;

+###org/ehcache/xml/model/ThreadPoolsType$ThreadPool
@3.0.0.m5
+#<init>()V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#isDefault()Z
+#setDefault(Ljava/lang/Boolean;)V
+#getMinSize()Ljava/math/BigInteger;
+#setMinSize(Ljava/math/BigInteger;)V
+#getMaxSize()Ljava/math/BigInteger;
+#setMaxSize(Ljava/math/BigInteger;)V
@3.6.0
+#withAlias(Ljava/lang/String;)Lorg/ehcache/xml/model/ThreadPoolsType$ThreadPool;
+#withDefault(Ljava/lang/Boolean;)Lorg/ehcache/xml/model/ThreadPoolsType$ThreadPool;
+#withMinSize(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/ThreadPoolsType$ThreadPool;
+#withMaxSize(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/ThreadPoolsType$ThreadPool;

+###org/ehcache/xml/model/ThreadPoolsType
@3.0.0.m5
+#<init>()V
+#getThreadPool()Ljava/util/List;
@3.6.0
+#withThreadPool([Lorg/ehcache/xml/model/ThreadPoolsType$ThreadPool;)Lorg/ehcache/xml/model/ThreadPoolsType;
+#withThreadPool(Ljava/util/Collection;)Lorg/ehcache/xml/model/ThreadPoolsType;

+###org/ehcache/xml/model/TimeTypeWithPropSubst
@3.9.1
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getUnit()Lorg/ehcache/xml/model/TimeUnit;
+#setUnit(Lorg/ehcache/xml/model/TimeUnit;)V
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/TimeTypeWithPropSubst;
+#withUnit(Lorg/ehcache/xml/model/TimeUnit;)Lorg/ehcache/xml/model/TimeTypeWithPropSubst;

+###org/ehcache/xml/model/TimeUnit
@3.0.0.m5
+#values()[Lorg/ehcache/xml/model/TimeUnit;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/xml/model/TimeUnit;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/xml/model/TimeUnit;

+###org/ehcache/xml/multi/XmlMultiConfiguration$Builder
@3.7.0
+#withoutManager(Ljava/lang/String;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Builder;
+#withManager(Ljava/lang/String;Lorg/ehcache/config/Configuration;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Builder;
+#withManager(Ljava/lang/String;Lorg/ehcache/config/Builder;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Builder;
+#withManager(Ljava/lang/String;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Variant;
+#build()Lorg/ehcache/xml/multi/XmlMultiConfiguration;

+###org/ehcache/xml/multi/XmlMultiConfiguration$Variant
@3.7.0
+#withoutVariant(Ljava/lang/String;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Variant;
+#variant(Ljava/lang/String;Lorg/ehcache/config/Configuration;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Variant;
+#variant(Ljava/lang/String;Lorg/ehcache/config/Builder;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Variant;

+###org/ehcache/xml/multi/XmlMultiConfiguration
@3.7.0
+#configuration(Ljava/lang/String;)Lorg/ehcache/config/Configuration;
+#configuration(Ljava/lang/String;Ljava/lang/String;)Lorg/ehcache/config/Configuration;
+#variants(Ljava/lang/String;)Ljava/util/Set;
+#identities()Ljava/util/Set;
+#asDocument()Lorg/w3c/dom/Document;
+#asRenderedDocument()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#from(Ljava/net/URL;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Builder;
+#from(Ljava/net/URL;Ljava/lang/ClassLoader;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Builder;
+#from(Lorg/ehcache/xml/multi/XmlMultiConfiguration;)Lorg/ehcache/xml/multi/XmlMultiConfiguration$Builder;
+#fromNothing()Lorg/ehcache/xml/multi/XmlMultiConfiguration$Builder;

+###org/ehcache/xml/multi/model/Configurations$Configuration$Variant
@3.7.0
+#<init>()V
+#getConfig()Lorg/w3c/dom/Element;
+#setConfig(Lorg/w3c/dom/Element;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
+#withConfig(Lorg/w3c/dom/Element;)Lorg/ehcache/xml/multi/model/Configurations$Configuration$Variant;
+#withType(Ljava/lang/String;)Lorg/ehcache/xml/multi/model/Configurations$Configuration$Variant;

+###org/ehcache/xml/multi/model/Configurations$Configuration
@3.7.0
+#<init>()V
+#getConfigOrVariant()Ljava/util/List;
+#getIdentity()Ljava/lang/String;
+#setIdentity(Ljava/lang/String;)V
+#withConfigOrVariant([Ljava/lang/Object;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;
+#withConfigOrVariant(Ljava/util/Collection;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;
+#withIdentity(Ljava/lang/String;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;
@3.8.2
+#getConfig()Lorg/w3c/dom/Element;
+#setConfig(Lorg/w3c/dom/Element;)V
+#getVariant()Ljava/util/List;
+#withConfig(Lorg/w3c/dom/Element;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;
+#withVariant([Lorg/ehcache/xml/multi/model/Configurations$Configuration$Variant;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;
+#withVariant(Ljava/util/Collection;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;
-#getConfigOrVariant()Ljava/util/List;
-#withConfigOrVariant([Ljava/lang/Object;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;
-#withConfigOrVariant(Ljava/util/Collection;)Lorg/ehcache/xml/multi/model/Configurations$Configuration;

+###org/ehcache/xml/multi/model/Configurations
@3.7.0
+#<init>()V
+#getConfiguration()Ljava/util/List;
+#withConfiguration([Lorg/ehcache/xml/multi/model/Configurations$Configuration;)Lorg/ehcache/xml/multi/model/Configurations;
+#withConfiguration(Ljava/util/Collection;)Lorg/ehcache/xml/multi/model/Configurations;

+###org/ehcache/xml/multi/model/ObjectFactory
@3.7.0
+#<init>()V
+#createConfigurations()Lorg/ehcache/xml/multi/model/Configurations;
+#createConfigurationsConfiguration()Lorg/ehcache/xml/multi/model/Configurations$Configuration;
+#createConfigurationsConfigurationVariant()Lorg/ehcache/xml/multi/model/Configurations$Configuration$Variant;
+#createConfigurationsConfigurationVariant(Lorg/ehcache/xml/multi/model/Configurations$Configuration$Variant;)Ljavax/xml/bind/JAXBElement;
@3.8.2
-#createConfigurationsConfigurationVariant(Lorg/ehcache/xml/multi/model/Configurations$Configuration$Variant;)Ljavax/xml/bind/JAXBElement;

+###org/ehcache/xml/provider/CacheEventDispatcherFactoryConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/provider/CacheManagerPersistenceConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/provider/DefaultCopyProviderConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/provider/DefaultSerializationProviderConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/provider/DefaultSizeOfEngineProviderConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/provider/OffHeapDiskStoreProviderConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/provider/PooledExecutionServiceConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/provider/WriteBehindProviderConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;
@3.10.0-alpha0
-#unparseServiceCreationConfiguration(Lorg/ehcache/config/Configuration;Lorg/ehcache/xml/model/ConfigType;)Lorg/ehcache/xml/model/ConfigType;

+###org/ehcache/xml/service/DefaultCacheEventDispatcherConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
-#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/service/DefaultCacheEventListenerConfigurationParser
@3.6.0
+#<init>()V
+#parseServiceConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Ljava/lang/Object;)Ljava/lang/Object;
+#parseServiceConfiguration(Ljava/lang/Object;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;

+###org/ehcache/xml/service/DefaultCacheLoaderWriterConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
-#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/service/DefaultCopierConfigurationParser
@3.6.0
+#<init>()V
+#parseServiceConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Ljava/lang/Object;)Ljava/lang/Object;
+#parseServiceConfiguration(Ljava/lang/Object;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;

+###org/ehcache/xml/service/DefaultResilienceStrategyConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
-#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/service/DefaultSerializerConfigurationParser
@3.6.0
+#<init>()V
+#parseServiceConfiguration(Lorg/ehcache/xml/model/CacheTemplate;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Ljava/lang/Object;)Ljava/lang/Object;
+#parseServiceConfiguration(Ljava/lang/Object;Ljava/lang/ClassLoader;Lorg/ehcache/config/builders/CacheConfigurationBuilder;)Lorg/ehcache/config/builders/CacheConfigurationBuilder;

+###org/ehcache/xml/service/DefaultSizeOfEngineConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
-#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/service/DefaultWriteBehindConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
-#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/xml/service/OffHeapDiskStoreConfigurationParser
@3.6.0
+#<init>()V
+#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;
@3.10.0-alpha0
-#unparseServiceConfiguration(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/xml/model/CacheType;)Lorg/ehcache/xml/model/CacheType;

+###org/ehcache/core/EhcachePrefixLoggerFactory$Context
@3.10.1
+#close()V

+###org/ehcache/core/EhcachePrefixLoggerFactory
@3.10.1
+#withContext(Ljava/lang/String;Ljava/lang/String;)Lorg/ehcache/core/EhcachePrefixLoggerFactory$Context;
+#getLogger(Ljava/lang/Class;)Lorg/slf4j/Logger;
+#getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;

+###org/ehcache/core/EhcacheWithLoaderWriter
@3.0.0.rc1
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
+#getBulkMethodEntries()Ljava/util/Map;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#clear()V
+#iterator()Ljava/util/Iterator;
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;
+#addHook(Lorg/ehcache/spi/LifeCycled;)V
+#getJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
+#getCacheLoaderWriter()Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
@3.0.0.rc2
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
@3.0.0
+#addHook(Lorg/ehcache/core/spi/LifeCycled;)V
-#addHook(Lorg/ehcache/spi/LifeCycled;)V
@3.5.0
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/resilience/ResilienceStrategy;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
+#doPut(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#doPutAll(Ljava/util/Map;)V
+#doPutIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Consumer;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#createJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/core/events/CacheEventDispatcher;Lorg/slf4j/Logger;)V
-#getBulkMethodEntries()Ljava/util/Map;
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#put(Ljava/lang/Object;Ljava/lang/Object;)V
-#containsKey(Ljava/lang/Object;)Z
-#remove(Ljava/lang/Object;)V
-#clear()V
-#iterator()Ljava/util/Iterator;
-#getAll(Ljava/util/Set;)Ljava/util/Map;
-#putAll(Ljava/util/Map;)V
-#removeAll(Ljava/util/Set;)V
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
-#init()V
-#close()V
-#getStatus()Lorg/ehcache/Status;
-#addHook(Lorg/ehcache/core/spi/LifeCycled;)V
-#getJsr107Cache()Lorg/ehcache/core/Jsr107Cache;
@3.7.0
-###org/ehcache/core/EhcacheWithLoaderWriter

+###org/ehcache/core/config/AbstractResourcePool
@3.0.0.rc3
+#getType()Lorg/ehcache/config/ResourceType;
+#isPersistent()Z
+#validateUpdate(Lorg/ehcache/config/ResourcePool;)V
@3.8.0
-###org/ehcache/core/config/AbstractResourcePool

+###org/ehcache/core/config/BaseCacheConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getServiceConfigurations()Ljava/util/Collection;
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
@3.0.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getEvictionAdvisor()Lorg/ehcache/config/EvictionAdvisor;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
-#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
@3.5.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#getExpiryPolicy()Lorg/ehcache/expiry/ExpiryPolicy;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
@3.8.0
-###org/ehcache/core/config/BaseCacheConfiguration

+###org/ehcache/core/config/ResourcePoolsImpl
@3.0.0.m5
+#<init>(Ljava/util/Map;)V
+#getPoolForResource(Lorg/ehcache/config/ResourceType;)Lorg/ehcache/config/ResourcePool;
+#getResourceTypeSet()Ljava/util/Set;
+#validateAndMerge(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/ResourcePools;
+#validateResourcePools(Ljava/util/Collection;)V
@3.1.2
+#readableString()Ljava/lang/String;
@3.8.0
-###org/ehcache/core/config/ResourcePoolsImpl

+###org/ehcache/core/config/SizedResourcePoolImpl
@3.0.0.rc3
+#<init>(Lorg/ehcache/config/ResourceType;JLorg/ehcache/config/ResourceUnit;Z)V
+#getSize()J
+#getUnit()Lorg/ehcache/config/ResourceUnit;
+#validateUpdate(Lorg/ehcache/config/ResourcePool;)V
+#toString()Ljava/lang/String;
@3.1.2
+#readableString()Ljava/lang/String;
@3.8.0
-###org/ehcache/core/config/SizedResourcePoolImpl

+###org/ehcache/core/internal/events/EventListenerWrapper
@3.0.0.rc1
+#<init>(Lorg/ehcache/event/CacheEventListener;)V
+#<init>(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventFiring;Lorg/ehcache/event/EventOrdering;Ljava/util/EnumSet;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#getListener()Lorg/ehcache/event/CacheEventListener;
+#isForEventType(Lorg/ehcache/event/EventType;)Z
+#isOrdered()Z
+#getFiringMode()Lorg/ehcache/event/EventFiring;
@3.7.0
-###org/ehcache/core/internal/events/EventListenerWrapper

+###org/ehcache/core/internal/resilience/AbstractResilienceStrategy
@3.5.0
+#iteratorFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)Lorg/ehcache/Cache$Entry;
@3.7.0
-###org/ehcache/core/internal/resilience/AbstractResilienceStrategy

+###org/ehcache/core/internal/resilience/RobustLoaderWriterResilienceStrategy
@3.5.0
+#<init>(Lorg/ehcache/spi/resilience/RecoveryStore;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#clearFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)V
@3.7.0
-###org/ehcache/core/internal/resilience/RobustLoaderWriterResilienceStrategy

+###org/ehcache/core/internal/resilience/RobustResilienceStrategy
@3.0.0.rc1
+#<init>(Lorg/ehcache/core/internal/resilience/RecoveryCache;)V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#clearFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
@3.0.0.rc2
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#clearFailure(Lorg/ehcache/exceptions/StoreAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Z
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#clearFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)V
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
@3.0.0.rc3
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
@3.0.0
+#getFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)V
+#clearFailure(Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheWritingException;)Ljava/util/Map;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Z
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#clearFailure(Lorg/ehcache/exceptions/StoreAccessException;)V
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)V
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
@3.5.0
+#<init>(Lorg/ehcache/spi/resilience/RecoveryStore;)V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#clearFailure(Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/spi/resilience/StoreAccessException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/spi/resilience/StoreAccessException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/spi/resilience/StoreAccessException;)V
-#<init>(Lorg/ehcache/core/internal/resilience/RecoveryCache;)V
-#getFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
-#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Z
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)V
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)V
-#clearFailure(Lorg/ehcache/core/spi/store/StoreAccessException;)V
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Z
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheLoadingException;)Ljava/util/Map;
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;)V
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheWritingException;)V
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheWritingException;)Ljava/util/Map;
@3.7.0
-###org/ehcache/core/internal/resilience/RobustResilienceStrategy

+###org/ehcache/core/internal/service/ServiceLocator$DependencySet
@3.2.0.beta1
+#<init>()V
+#with(Lorg/ehcache/spi/service/Service;)Lorg/ehcache/core/internal/service/ServiceLocator$DependencySet;
+#with(Ljava/lang/Iterable;)Lorg/ehcache/core/internal/service/ServiceLocator$DependencySet;
+#with(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/internal/service/ServiceLocator$DependencySet;
+#with(Ljava/lang/Class;)Lorg/ehcache/core/internal/service/ServiceLocator$DependencySet;
+#contains(Ljava/lang/Class;)Z
+#providerOf(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#providersOf(Ljava/lang/Class;)Ljava/util/Collection;
+#build()Lorg/ehcache/core/internal/service/ServiceLocator;
+#build()Ljava/lang/Object;
@3.6.1
+#withoutMandatoryServices()Lorg/ehcache/core/internal/service/ServiceLocator$DependencySet;
@3.7.0
-###org/ehcache/core/internal/service/ServiceLocator$DependencySet

+###org/ehcache/core/internal/service/ServiceLocator
@3.0.0.rc2
+#<init>([Lorg/ehcache/spi/service/Service;)V
+#addService(Lorg/ehcache/spi/service/Service;)V
+#getOrCreateServiceFor(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
+#getService(Ljava/lang/Class;)Lorg/ehcache/spi/service/Service;
+#findAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#findAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;
+#findSingletonAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;
+#findSingletonAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#startAllServices()V
+#stopAllServices()V
+#loadDependenciesOf(Ljava/lang/Class;)V
+#knowsServiceFor(Lorg/ehcache/spi/service/ServiceConfiguration;)Z
+#getServicesOfType(Ljava/lang/Class;)Ljava/util/Collection;
@3.2.0.beta1
+#dependencySet()Lorg/ehcache/core/internal/service/ServiceLocator$DependencySet;
-#<init>([Lorg/ehcache/spi/service/Service;)V
-#addService(Lorg/ehcache/spi/service/Service;)V
-#getOrCreateServiceFor(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#loadDependenciesOf(Ljava/lang/Class;)V
@3.2.2
-#findAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
-#findAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;
-#findSingletonAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;
-#findSingletonAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
@3.3.0
+#findAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
+#findAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;
+#findSingletonAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;
+#findSingletonAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
@3.3.1
-#findAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
-#findAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;
-#findSingletonAmongst(Ljava/lang/Class;Ljava/util/Collection;)Ljava/lang/Object;
-#findSingletonAmongst(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
@3.7.0
-###org/ehcache/core/internal/service/ServiceLocator

+###org/ehcache/core/internal/store/StoreConfigurationImpl
@3.0.0.rc2
+#<init>(Lorg/ehcache/config/CacheConfiguration;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#getKeySerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getValueSerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getOrderedEventParallelism()I
@3.0.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#getEvictionAdvisor()Lorg/ehcache/config/EvictionAdvisor;
+#getDispatcherConcurrency()I
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
-#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
-#getOrderedEventParallelism()I
@3.5.0
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#getExpiry()Lorg/ehcache/expiry/ExpiryPolicy;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
-#getExpiry()Lorg/ehcache/expiry/Expiry;
@3.6.0
+#<init>(Lorg/ehcache/config/CacheConfiguration;IZLorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionAdvisor;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/ExpiryPolicy;Lorg/ehcache/config/ResourcePools;IZLorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#isOperationStatisticsEnabled()Z
@3.7.0
-###org/ehcache/core/internal/store/StoreConfigurationImpl

+###org/ehcache/core/internal/store/StoreSupport
@3.0.0.rc2
+#selectStoreProvider(Lorg/ehcache/spi/ServiceProvider;Ljava/util/Set;Ljava/util/Collection;)Lorg/ehcache/core/spi/store/Store$Provider;
@3.0.0
+#selectStoreProvider(Lorg/ehcache/spi/service/ServiceProvider;Ljava/util/Set;Ljava/util/Collection;)Lorg/ehcache/core/spi/store/Store$Provider;
-#selectStoreProvider(Lorg/ehcache/spi/ServiceProvider;Ljava/util/Set;Ljava/util/Collection;)Lorg/ehcache/core/spi/store/Store$Provider;
@3.7.0
-###org/ehcache/core/internal/store/StoreSupport

+###org/ehcache/core/internal/util/ClassLoading
@3.0.0.rc1
+#<init>()V
+#getDefaultClassLoader()Ljava/lang/ClassLoader;
+#libraryServiceLoaderFor(Ljava/lang/Class;)Ljava/util/ServiceLoader;
@3.7.0
-###org/ehcache/core/internal/util/ClassLoading

+###org/ehcache/core/internal/util/CollectionUtil
@3.5.0
+#findBestCollectionSize(Ljava/lang/Iterable;I)I
+#entry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
+#copyMapButFailOnNull(Ljava/util/Map;)Ljava/util/Map;
+#map(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
+#map(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
+#map(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
@3.7.0
-###org/ehcache/core/internal/util/CollectionUtil

+###org/ehcache/core/internal/util/Pacer
@3.5.0
+#<init>(Lorg/ehcache/core/spi/time/TimeSource;J)V
+#pacedCall(Ljava/lang/Runnable;Ljava/lang/Runnable;)V
@3.7.0
-###org/ehcache/core/internal/util/Pacer

+###org/ehcache/core/spi/service/StatisticsServiceConfiguration
@3.5.0
+#getLatencyHistoryWindowInterval()J
+#getLatencyHistoryWindowUnit()Ljava/util/concurrent/TimeUnit;
+#getLatencyHistorySize()I
@3.6.0
+#getDefaultHistogramWindow()Ljava/time/Duration;
-#getLatencyHistoryWindowInterval()J
-#getLatencyHistoryWindowUnit()Ljava/util/concurrent/TimeUnit;
-#getLatencyHistorySize()I
@3.6.1
-###org/ehcache/core/spi/service/StatisticsServiceConfiguration

+###org/ehcache/impl/internal/classes/commonslang/Validate
@3.0.0.m5
+#<init>()V
+#notNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.5.3
-###org/ehcache/impl/internal/classes/commonslang/Validate

+###org/ehcache/impl/internal/events/ScopedStoreEventDispatcher
@3.0.0.m5
+#<init>(I)V
+#eventSink()Lorg/ehcache/core/events/StoreEventSink;
+#releaseEventSinkAfterFailure(Lorg/ehcache/core/events/StoreEventSink;Ljava/lang/Throwable;)V
+#releaseEventSink(Lorg/ehcache/core/events/StoreEventSink;)V
+#isEventOrdering()Z
+#setEventOrdering(Z)V
+#addEventFilter(Lorg/ehcache/core/spi/cache/events/StoreEventFilter;)V
+#removeEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
+#addEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
@3.0.0.rc2
+#addEventFilter(Lorg/ehcache/core/spi/store/events/StoreEventFilter;)V
+#removeEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#addEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
-#addEventFilter(Lorg/ehcache/core/spi/cache/events/StoreEventFilter;)V
-#removeEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
-#addEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
@3.0.0.rc3
+#reset(Lorg/ehcache/core/events/StoreEventSink;)V
@3.8.0
-###org/ehcache/impl/internal/events/ScopedStoreEventDispatcher

+###org/ehcache/impl/internal/statistics/DefaultStatisticsService
@3.3.0
+#<init>()V
+#getCacheStatistics(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheStatistics;
+#isStarted()Z
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V
@3.5.0
+#<init>(Lorg/ehcache/core/spi/service/StatisticsServiceConfiguration;)V
+#getConfiguration()Lorg/ehcache/core/spi/service/StatisticsServiceConfiguration;
@3.6.1
-#<init>(Lorg/ehcache/core/spi/service/StatisticsServiceConfiguration;)V
-#getConfiguration()Lorg/ehcache/core/spi/service/StatisticsServiceConfiguration;
@3.8.0
-###org/ehcache/impl/internal/statistics/DefaultStatisticsService

+###org/ehcache/impl/internal/statistics/DefaultStatisticsServiceConfiguration
@3.5.0
+#<init>()V
+#getLatencyHistoryWindowInterval()J
+#getLatencyHistoryWindowUnit()Ljava/util/concurrent/TimeUnit;
+#getLatencyHistorySize()I
+#withLatencyHistoryWindow(JLjava/util/concurrent/TimeUnit;)Lorg/ehcache/impl/internal/statistics/DefaultStatisticsServiceConfiguration;
+#withLatencyHistorySize(I)Lorg/ehcache/impl/internal/statistics/DefaultStatisticsServiceConfiguration;
+#getServiceType()Ljava/lang/Class;
@3.6.0
+#getDefaultHistogramWindow()Ljava/time/Duration;
+#withDefaultHistogramWindow(Ljava/time/Duration;)Lorg/ehcache/impl/internal/statistics/DefaultStatisticsServiceConfiguration;
-#getLatencyHistoryWindowInterval()J
-#getLatencyHistoryWindowUnit()Ljava/util/concurrent/TimeUnit;
-#getLatencyHistorySize()I
-#withLatencyHistoryWindow(JLjava/util/concurrent/TimeUnit;)Lorg/ehcache/impl/internal/statistics/DefaultStatisticsServiceConfiguration;
-#withLatencyHistorySize(I)Lorg/ehcache/impl/internal/statistics/DefaultStatisticsServiceConfiguration;
@3.6.1
-###org/ehcache/impl/internal/statistics/DefaultStatisticsServiceConfiguration

+###org/ehcache/impl/internal/statistics/DefaultStatisticsServiceFactory
@3.3.0
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/service/StatisticsService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.8.0
-###org/ehcache/impl/internal/statistics/DefaultStatisticsServiceFactory

+###org/ehcache/impl/internal/store/basic/EmptyValueHolder
@3.1.4
+#<init>()V
+#empty()Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#value()Ljava/lang/Object;
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
@3.5.0
+#get()Ljava/lang/Object;
-#value()Ljava/lang/Object;
@3.6.2
-#hitRate(JLjava/util/concurrent/TimeUnit;)F
-#hits()J
@3.7.0
-###org/ehcache/impl/internal/store/basic/EmptyValueHolder

+###org/ehcache/impl/internal/util/ByteBufferInputStream
@3.0.0.m5
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
@3.0.0.rc1
+#read([BII)I
+#skip(J)J
+#available()I
@3.7.0
-###org/ehcache/impl/internal/util/ByteBufferInputStream

+###org/ehcache/jsr107/config/Jsr107Service
@3.0.0.m5
+#getTemplateNameForCache(Ljava/lang/String;)Ljava/lang/String;
+#jsr107CompliantAtomics()Z
@3.0.1
+#isManagementEnabledOnAllCaches()Lorg/ehcache/jsr107/config/ConfigurationElementState;
+#isStatisticsEnabledOnAllCaches()Lorg/ehcache/jsr107/config/ConfigurationElementState;
@3.6.0
-###org/ehcache/jsr107/config/Jsr107Service

+###org/ehcache/xml/model/PersistableMemoryType
@3.0.0.m5
+#<init>()V
+#isPersistent()Z
+#setPersistent(Ljava/lang/Boolean;)V
@3.6.0
+#withPersistent(Ljava/lang/Boolean;)Lorg/ehcache/xml/model/PersistableMemoryType;
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/PersistableMemoryType;
+#withUnit(Lorg/ehcache/xml/model/MemoryUnit;)Lorg/ehcache/xml/model/PersistableMemoryType;
+#withUnit(Lorg/ehcache/xml/model/MemoryUnit;)Lorg/ehcache/xml/model/MemoryType;
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/MemoryType;
@3.9.1
-###org/ehcache/xml/model/PersistableMemoryType

+###org/ehcache/xml/model/ResourceType
@3.0.0.m5
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getUnit()Lorg/ehcache/xml/model/ResourceUnit;
+#setUnit(Lorg/ehcache/xml/model/ResourceUnit;)V
@3.6.0
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/ResourceType;
+#withUnit(Lorg/ehcache/xml/model/ResourceUnit;)Lorg/ehcache/xml/model/ResourceType;
@3.9.1
-###org/ehcache/xml/model/ResourceType

+###org/ehcache/xml/model/TimeType
@3.0.0.m5
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getUnit()Lorg/ehcache/xml/model/TimeUnit;
+#setUnit(Lorg/ehcache/xml/model/TimeUnit;)V
@3.6.0
+#withValue(Ljava/math/BigInteger;)Lorg/ehcache/xml/model/TimeType;
+#withUnit(Lorg/ehcache/xml/model/TimeUnit;)Lorg/ehcache/xml/model/TimeType;
@3.9.1
-###org/ehcache/xml/model/TimeType

+###org/terracotta/context/query/Queries
@3.0.0.m2
+#self()Lorg/terracotta/context/query/Query;
+#children()Lorg/terracotta/context/query/Query;
+#descendants()Lorg/terracotta/context/query/Query;
@3.8.0
-###org/terracotta/context/query/Queries

+###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;Z)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;IZ)V
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getEncodingForHashAndBinary(ILjava/nio/ByteBuffer;)Ljava/lang/Long;
+#installMappingForHashAndEncoding(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)J
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#removeNoReturn(Ljava/lang/Object;)Z
+#clear()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#evict(IZ)Z
+#entrySet()Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#destroy()V
+#shrink()Z
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
@3.0.0.rc1
+#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.0.2
+#removeAllWithHash(I)Ljava/util/Map;
@3.5.0
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.7.1
-#entrySet()Ljava/util/Set;
-#keySet()Ljava/util/Set;
-#values()Ljava/util/Collection;
@3.8.0
-###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap

+###org/terracotta/offheapstore/AbstractOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;Z)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;IZ)V
+#getEvictionIndex()I
+#evict(IZ)Z
+#isPinned(Ljava/lang/Object;)Z
+#setPinning(Ljava/lang/Object;Z)V
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/AbstractOffHeapClockCache

+###org/terracotta/offheapstore/HashingMap
@3.0.2
+#removeAllWithHash(I)Ljava/util/Map;
@3.8.0
-###org/terracotta/offheapstore/HashingMap

+###org/terracotta/offheapstore/MapInternals
@3.0.0.m5
+#getSize()J
+#getTableCapacity()J
+#getUsedSlotCount()J
+#getRemovedSlotCount()J
+#getReprobeLength()I
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataAllocatedMemory()J
+#getDataOccupiedMemory()J
+#getDataVitalMemory()J
+#getDataSize()J
@3.8.0
-###org/terracotta/offheapstore/MapInternals

+###org/terracotta/offheapstore/Metadata
@3.0.0.m5
@3.8.0
-###org/terracotta/offheapstore/Metadata

+###org/terracotta/offheapstore/MetadataTuple
@3.0.0.rc1
+#value()Ljava/lang/Object;
+#metadata()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#metadataTuple(Ljava/lang/Object;I)Lorg/terracotta/offheapstore/MetadataTuple;
@3.8.0
-###org/terracotta/offheapstore/MetadataTuple

+###org/terracotta/offheapstore/OffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;Z)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getEncodingForHashAndBinary(ILjava/nio/ByteBuffer;)Ljava/lang/Long;
+#installMappingForHashAndEncoding(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)J
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#removeNoReturn(Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#entrySet()Ljava/util/Set;
+#encodingSet()Ljava/util/Set;
+#keySet()Ljava/util/Set;
+#evict(IZ)Z
+#getSlotForHashAndEncoding(IJJ)Ljava/lang/Integer;
+#updateEncoding(IJJJ)Z
+#getSize()J
+#getTableCapacity()J
+#getUsedSlotCount()J
+#getRemovedSlotCount()J
+#getReprobeLength()I
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataAllocatedMemory()J
+#getDataOccupiedMemory()J
+#getDataVitalMemory()J
+#getDataSize()J
+#isThiefForTableAllocations()Z
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getStorageEngine()Lorg/terracotta/offheapstore/storage/StorageEngine;
+#encodingSet()Ljava/lang/Iterable;
@3.0.0.rc1
+#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.0.2
+#removeAllWithHash(I)Ljava/util/Map;
@3.5.0
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap

+###org/terracotta/offheapstore/ReadWriteLockedOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@3.8.0
-###org/terracotta/offheapstore/ReadWriteLockedOffHeapClockCache

+###org/terracotta/offheapstore/ReadWriteLockedOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@3.8.0
-###org/terracotta/offheapstore/ReadWriteLockedOffHeapHashMap

+###org/terracotta/offheapstore/Segment
@3.0.0.m5
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#removeNoReturn(Ljava/lang/Object;)Z
+#destroy()V
+#shrink()Z
@3.0.0.rc1
+#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.5.0
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.8.0
-###org/terracotta/offheapstore/Segment

+###org/terracotta/offheapstore/WriteLockedOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@3.8.0
-###org/terracotta/offheapstore/WriteLockedOffHeapClockCache

+###org/terracotta/offheapstore/WriteLockedOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@3.8.0
-###org/terracotta/offheapstore/WriteLockedOffHeapHashMap

+###org/terracotta/offheapstore/buffersource/BufferSource
@3.0.0.m5
+#allocateBuffer(I)Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/buffersource/BufferSource

+###org/terracotta/offheapstore/buffersource/HeapBufferSource
@3.0.0.m5
+#<init>()V
+#allocateBuffer(I)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/offheapstore/buffersource/HeapBufferSource

+###org/terracotta/offheapstore/buffersource/OffHeapBufferSource
@3.0.0.m5
+#<init>()V
+#allocateBuffer(I)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/offheapstore/buffersource/OffHeapBufferSource

+###org/terracotta/offheapstore/buffersource/TimingBufferSource
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/buffersource/BufferSource;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;Z)V
+#allocateBuffer(I)Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/buffersource/TimingBufferSource

+###org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/util/Factory;I)V
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#isPinned(Ljava/lang/Object;)Z
+#setPinning(Ljava/lang/Object;Z)V
+#shrink()Z
+#shrinkOthers(I)Z
@3.8.0
-###org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapCache

+###org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap$AggregateIterator
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
@3.8.0
-###org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap$AggregateIterator

+###org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/util/Factory;I)V
+#getIndexFor(I)I
+#getSegments()Ljava/util/List;
+#size()I
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#fill(Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#removeNoReturn(Ljava/lang/Object;)Z
+#getMetadata(Ljava/lang/Object;I)Ljava/lang/Integer;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getValueAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Object;
+#clear()V
+#destroy()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#writeLockAll()V
+#writeUnlockAll()V
+#getSegmentInternals()Ljava/util/List;
+#getSize()J
+#getTableCapacity()J
+#getUsedSlotCount()J
+#getRemovedSlotCount()J
+#getReprobeLength()I
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataAllocatedMemory()J
+#getDataOccupiedMemory()J
+#getDataVitalMemory()J
+#getDataSize()J
+#handleOversizeMappingException(I)Z
@3.0.0.rc1
+#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.0.2
+#removeAllWithHash(I)Ljava/util/Map;
@3.5.0
+#computeWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfAbsentWithMetadata(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
+#computeIfPresentWithMetadata(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfAbsentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/Function;)Lorg/terracotta/offheapstore/MetadataTuple;
-#computeIfPresentWithMetadata(Ljava/lang/Object;Lorg/terracotta/offheapstore/jdk8/BiFunction;)Lorg/terracotta/offheapstore/MetadataTuple;
@3.8.0
-###org/terracotta/offheapstore/concurrent/AbstractConcurrentOffHeapMap

+###org/terracotta/offheapstore/concurrent/ConcurrentMapInternals
@3.0.0.m5
+#getSegmentInternals()Ljava/util/List;
@3.8.0
-###org/terracotta/offheapstore/concurrent/ConcurrentMapInternals

+###org/terracotta/offheapstore/concurrent/ConcurrentOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;JI)V
@3.8.0
-###org/terracotta/offheapstore/concurrent/ConcurrentOffHeapClockCache

+###org/terracotta/offheapstore/concurrent/ConcurrentOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/util/Factory;JI)V
@3.8.0
-###org/terracotta/offheapstore/concurrent/ConcurrentOffHeapHashMap

+###org/terracotta/offheapstore/concurrent/ConcurrentWriteLockedOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;JI)V
@3.8.0
-###org/terracotta/offheapstore/concurrent/ConcurrentWriteLockedOffHeapClockCache

+###org/terracotta/offheapstore/concurrent/ConcurrentWriteLockedOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
@3.8.0
-###org/terracotta/offheapstore/concurrent/ConcurrentWriteLockedOffHeapHashMap

+###org/terracotta/offheapstore/concurrent/ReadWriteLockedOffHeapClockCacheFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;I)V
+#newInstance()Lorg/terracotta/offheapstore/ReadWriteLockedOffHeapClockCache;
+#newInstance()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/concurrent/ReadWriteLockedOffHeapClockCacheFactory

+###org/terracotta/offheapstore/concurrent/ReadWriteLockedOffHeapHashMapFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/util/Factory;I)V
+#newInstance()Lorg/terracotta/offheapstore/ReadWriteLockedOffHeapHashMap;
+#newInstance()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/concurrent/ReadWriteLockedOffHeapHashMapFactory

+###org/terracotta/offheapstore/concurrent/WriteLockedOffHeapClockCacheFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/eviction/EvictionListener;I)V
+#newInstance()Lorg/terracotta/offheapstore/WriteLockedOffHeapClockCache;
+#newInstance()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/concurrent/WriteLockedOffHeapClockCacheFactory

+###org/terracotta/offheapstore/concurrent/WriteLockedOffHeapHashMapFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/util/Factory;I)V
+#newInstance()Lorg/terracotta/offheapstore/WriteLockedOffHeapHashMap;
+#newInstance()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/concurrent/WriteLockedOffHeapHashMapFactory

+###org/terracotta/offheapstore/disk/paging/MappedPage
@3.0.0.m5
+#<init>(Ljava/nio/MappedByteBuffer;)V
+#asByteBuffer()Ljava/nio/MappedByteBuffer;
+#asByteBuffer()Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/disk/paging/MappedPage

+###org/terracotta/offheapstore/disk/paging/MappedPageSource
@3.0.0.m5
+#<init>(Ljava/io/File;)V
+#<init>(Ljava/io/File;J)V
+#<init>(Ljava/io/File;Z)V
+#<init>(Ljava/io/File;ZJ)V
+#allocateRegion(J)Ljava/lang/Long;
+#freeRegion(J)V
+#claimRegion(JJ)J
+#getReadableChannel()Ljava/nio/channels/FileChannel;
+#getWritableChannel()Ljava/nio/channels/FileChannel;
+#getFile()Ljava/io/File;
+#allocate(IZZLorg/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/terracotta/offheapstore/disk/paging/MappedPage;
+#free(Lorg/terracotta/offheapstore/paging/Page;)V
+#claimPage(JJ)Lorg/terracotta/offheapstore/disk/paging/MappedPage;
+#getAddress(Lorg/terracotta/offheapstore/paging/Page;)J
+#flush()V
+#close()V
+#allocate(IZZLorg/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/terracotta/offheapstore/paging/Page;
@3.8.0
-###org/terracotta/offheapstore/disk/paging/MappedPageSource

+###org/terracotta/offheapstore/disk/paging/PowerOfTwoFileAllocator
@3.0.0.m5
+#<init>()V
+#<init>(J)V
+#allocate(J)Ljava/lang/Long;
+#free(JJ)V
+#mark(JJ)V
+#occupied()J
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/offheapstore/disk/paging/PowerOfTwoFileAllocator

+###org/terracotta/offheapstore/disk/persistent/AbstractPersistentConcurrentOffHeapCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/util/Factory;I)V
+#flush()V
+#persist(Ljava/io/ObjectOutput;)V
+#close()V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/AbstractPersistentConcurrentOffHeapCache

+###org/terracotta/offheapstore/disk/persistent/AbstractPersistentConcurrentOffHeapMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/util/Factory;I)V
+#flush()V
+#persist(Ljava/io/ObjectOutput;)V
+#close()V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/AbstractPersistentConcurrentOffHeapMap

+###org/terracotta/offheapstore/disk/persistent/AbstractPersistentLockedOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/AbstractPersistentLockedOffHeapHashMap

+###org/terracotta/offheapstore/disk/persistent/AbstractPersistentOffHeapCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/AbstractPersistentOffHeapCache

+###org/terracotta/offheapstore/disk/persistent/Persistent
@3.0.0.m5
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/Persistent

+###org/terracotta/offheapstore/disk/persistent/PersistentConcurrentOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Ljava/io/ObjectInput;Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Ljava/io/ObjectInput;Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentConcurrentOffHeapClockCache

+###org/terracotta/offheapstore/disk/persistent/PersistentConcurrentOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Ljava/io/ObjectInput;Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
+#<init>(Ljava/io/ObjectInput;Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;JI)V
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentConcurrentOffHeapHashMap

+###org/terracotta/offheapstore/disk/persistent/PersistentHalfStorageEngine
@3.0.0.m5
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentHalfStorageEngine

+###org/terracotta/offheapstore/disk/persistent/PersistentPortability
@3.0.0.m5
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentPortability

+###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCache

+###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCacheFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;IZ)V
+#newInstance()Lorg/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCache;
+#newInstance()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapClockCacheFactory

+###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMap
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/disk/persistent/PersistentStorageEngine;IZ)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#getLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMap

+###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMapFactory
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;I)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;IZ)V
+#newInstance()Lorg/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMap;
+#newInstance()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentReadWriteLockedOffHeapHashMapFactory

+###org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine
@3.0.0.m5
@3.8.0
-###org/terracotta/offheapstore/disk/persistent/PersistentStorageEngine

+###org/terracotta/offheapstore/disk/storage/AATreeFileAllocator
@3.0.0.m5
+#<init>(J)V
+#<init>(JLjava/io/DataInput;)V
+#allocate(J)J
+#free(JJ)V
+#removeAndReturn(Ljava/lang/Object;)Lorg/terracotta/offheapstore/disk/storage/Region;
+#find(Ljava/lang/Object;)Lorg/terracotta/offheapstore/disk/storage/Region;
+#occupied()J
+#capacity()J
+#toString()Ljava/lang/String;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;
@3.8.0
-###org/terracotta/offheapstore/disk/storage/AATreeFileAllocator

+###org/terracotta/offheapstore/disk/storage/FileBackedStorageEngine
@3.0.0.m5
+#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Z)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/util/Factory;Z)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;Z)V
+#destroy()V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#shrink()Z
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#readKeyHash(J)I
@3.0.2
+#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/terracotta/offheapstore/util/MemoryUnit;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/terracotta/offheapstore/util/MemoryUnit;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Z)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/terracotta/offheapstore/util/MemoryUnit;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/util/Factory;Z)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/terracotta/offheapstore/util/MemoryUnit;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/terracotta/offheapstore/util/MemoryUnit;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/terracotta/offheapstore/util/MemoryUnit;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Z)V
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;JLorg/terracotta/offheapstore/util/MemoryUnit;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;Z)V
-#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/util/Factory;
-#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Z)Lorg/terracotta/offheapstore/util/Factory;
-#createFactory(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/util/Factory;Z)Lorg/terracotta/offheapstore/util/Factory;
-#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)V
-#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;)V
-#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Z)V
-#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;Ljava/util/concurrent/ExecutorService;Z)V
@3.8.0
-###org/terracotta/offheapstore/disk/storage/FileBackedStorageEngine

+###org/terracotta/offheapstore/disk/storage/PersistentIntegerStorageEngine
@3.0.0.m5
+#<init>()V
+#createPersistentFactory()Lorg/terracotta/offheapstore/util/Factory;
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/storage/PersistentIntegerStorageEngine

+###org/terracotta/offheapstore/disk/storage/PersistentSplitStorageEngine
@3.0.0.m5
+#createPersistentFactory(Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/util/Factory;)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/disk/persistent/PersistentHalfStorageEngine;Lorg/terracotta/offheapstore/disk/persistent/PersistentHalfStorageEngine;)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/storage/PersistentSplitStorageEngine

+###org/terracotta/offheapstore/disk/storage/portability/PersistentByteArrayPortability
@3.0.0.m5
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/storage/portability/PersistentByteArrayPortability

+###org/terracotta/offheapstore/disk/storage/portability/PersistentSerializablePortability
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
@3.8.0
-###org/terracotta/offheapstore/disk/storage/portability/PersistentSerializablePortability

+###org/terracotta/offheapstore/eviction/EvictionListener
@3.0.0.m5
+#evicting(Ljava/util/concurrent/Callable;)V
@3.8.0
-###org/terracotta/offheapstore/eviction/EvictionListener

+###org/terracotta/offheapstore/eviction/EvictionListeningReadWriteLockedOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/eviction/EvictionListener;Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/eviction/EvictionListener;Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#evict(IZ)Z
@3.8.0
-###org/terracotta/offheapstore/eviction/EvictionListeningReadWriteLockedOffHeapClockCache

+###org/terracotta/offheapstore/eviction/EvictionListeningWriteLockedOffHeapClockCache
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/eviction/EvictionListener;Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;)V
+#<init>(Lorg/terracotta/offheapstore/eviction/EvictionListener;Lorg/terracotta/offheapstore/paging/PageSource;Lorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#evict(IZ)Z
@3.8.0
-###org/terracotta/offheapstore/eviction/EvictionListeningWriteLockedOffHeapClockCache

+###org/terracotta/offheapstore/exceptions/OversizeMappingException
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.8.0
-###org/terracotta/offheapstore/exceptions/OversizeMappingException

+###org/terracotta/offheapstore/paging/OffHeapStorageArea$Owner
@3.0.0.m5
+#evictAtAddress(JZ)Z
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#isThief()Z
+#moved(JJ)Z
+#sizeOf(J)I
@3.8.0
-###org/terracotta/offheapstore/paging/OffHeapStorageArea$Owner

+###org/terracotta/offheapstore/paging/OffHeapStorageArea
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/terracotta/offheapstore/paging/PageSource;IZZ)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/terracotta/offheapstore/paging/PageSource;IZZF)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/terracotta/offheapstore/paging/PageSource;IIZZ)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/OffHeapStorageArea$Owner;Lorg/terracotta/offheapstore/paging/PageSource;IIZZF)V
+#clear()V
+#readByte(J)B
+#readShort(J)S
+#readInt(J)I
+#readLong(J)J
+#readBuffer(JI)Ljava/nio/ByteBuffer;
+#writeByte(JB)V
+#writeShort(JS)V
+#writeInt(JI)V
+#writeLong(JJ)V
+#writeBuffer(JLjava/nio/ByteBuffer;)V
+#writeBuffers(J[Ljava/nio/ByteBuffer;)V
+#free(J)V
+#destroy()V
+#allocate(J)J
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#toString()Ljava/lang/String;
+#validateStorageArea()V
+#release(J)V
+#release(Ljava/util/Collection;)Ljava/util/Collection;
+#shrink()Z
@3.2.0.beta1
+#readBuffers(JI)[Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/paging/OffHeapStorageArea

+###org/terracotta/offheapstore/paging/Page
@3.0.0.m5
+#<init>(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#<init>(Ljava/nio/ByteBuffer;IILorg/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#asByteBuffer()Ljava/nio/ByteBuffer;
+#asIntBuffer()Ljava/nio/IntBuffer;
+#size()I
+#index()I
+#address()I
+#binding()Lorg/terracotta/offheapstore/paging/OffHeapStorageArea;
@3.8.0
-###org/terracotta/offheapstore/paging/Page

+###org/terracotta/offheapstore/paging/PageSource
@3.0.0.m5
+#allocate(IZZLorg/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/terracotta/offheapstore/paging/Page;
+#free(Lorg/terracotta/offheapstore/paging/Page;)V
@3.8.0
-###org/terracotta/offheapstore/paging/PageSource

+###org/terracotta/offheapstore/paging/PhantomReferenceLimitedPageSource
@3.0.0.m5
+#<init>(J)V
+#allocate(IZZLorg/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/terracotta/offheapstore/paging/Page;
+#free(Lorg/terracotta/offheapstore/paging/Page;)V
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/offheapstore/paging/PhantomReferenceLimitedPageSource

+###org/terracotta/offheapstore/paging/UnlimitedPageSource
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/buffersource/BufferSource;)V
+#allocate(IZZLorg/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/terracotta/offheapstore/paging/Page;
+#free(Lorg/terracotta/offheapstore/paging/Page;)V
@3.8.0
-###org/terracotta/offheapstore/paging/UnlimitedPageSource

+###org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection
@3.0.0.m5
+#values()[Lorg/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;
@3.8.0
-###org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection

+###org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/buffersource/BufferSource;JI)V
+#<init>(Lorg/terracotta/offheapstore/buffersource/BufferSource;JII)V
+#allocate(IZZLorg/terracotta/offheapstore/paging/OffHeapStorageArea;)Lorg/terracotta/offheapstore/paging/Page;
+#free(Lorg/terracotta/offheapstore/paging/Page;)V
+#getAllocatedSize()J
+#getAllocatedSizeUnSync()J
+#toString()Ljava/lang/String;
+#addAllocationThreshold(Lorg/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;JLjava/lang/Runnable;)Ljava/lang/Runnable;
+#removeAllocationThreshold(Lorg/terracotta/offheapstore/paging/UpfrontAllocatingPageSource$ThresholdDirection;J)Ljava/lang/Runnable;
@3.2.0
+#getCapacity()J
@3.8.0
-###org/terracotta/offheapstore/paging/UpfrontAllocatingPageSource

+###org/terracotta/offheapstore/pinning/PinnableCache
@3.0.0.m5
+#isPinned(Ljava/lang/Object;)Z
+#setPinning(Ljava/lang/Object;Z)V
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/pinning/PinnableCache

+###org/terracotta/offheapstore/pinning/PinnableSegment
@3.0.0.m5
@3.8.0
-###org/terracotta/offheapstore/pinning/PinnableSegment

+###org/terracotta/offheapstore/set/OffHeapHashSet
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ZLorg/terracotta/offheapstore/storage/StorageEngine;I)V
+#<init>(Lorg/terracotta/offheapstore/OffHeapHashMap;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#clear()V
+#getStorageEngine()Lorg/terracotta/offheapstore/storage/StorageEngine;
@3.8.0
-###org/terracotta/offheapstore/set/OffHeapHashSet

+###org/terracotta/offheapstore/storage/BinaryStorageEngine
@3.0.0.m5
+#readKeyHash(J)I
+#readBinaryKey(J)Ljava/nio/ByteBuffer;
+#readBinaryValue(J)Ljava/nio/ByteBuffer;
+#equalsBinaryKey(Ljava/nio/ByteBuffer;J)Z
+#writeBinaryMapping(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;II)Ljava/lang/Long;
+#writeBinaryMapping([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljava/lang/Long;
@3.8.0
-###org/terracotta/offheapstore/storage/BinaryStorageEngine

+###org/terracotta/offheapstore/storage/BooleanHalfStorageEngine
@3.0.0.m5
+#write(Ljava/lang/Boolean;I)Ljava/lang/Integer;
+#free(I)V
+#read(I)Ljava/lang/Boolean;
+#equals(Ljava/lang/Object;I)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z
+#read(I)Ljava/lang/Object;
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;
@3.8.0
-###org/terracotta/offheapstore/storage/BooleanHalfStorageEngine

+###org/terracotta/offheapstore/storage/HalfStorageEngine
@3.0.0.m5
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;
+#free(I)V
+#read(I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;I)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z
@3.8.0
-###org/terracotta/offheapstore/storage/HalfStorageEngine

+###org/terracotta/offheapstore/storage/IntegerStorageEngine
@3.0.0.m5
+#<init>()V
+#instance()Lorg/terracotta/offheapstore/storage/IntegerStorageEngine;
+#createFactory()Lorg/terracotta/offheapstore/util/Factory;
+#read(I)Ljava/lang/Integer;
+#write(Ljava/lang/Integer;I)Ljava/lang/Integer;
+#free(I)V
+#equals(Ljava/lang/Object;I)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z
+#read(I)Ljava/lang/Object;
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;
@3.8.0
-###org/terracotta/offheapstore/storage/IntegerStorageEngine

+###org/terracotta/offheapstore/storage/LongStorageEngine
@3.0.0.m5
+#createFactory(Lorg/terracotta/offheapstore/util/Factory;)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/storage/HalfStorageEngine;)V
+#writeMapping(Ljava/lang/Long;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Long;
+#equalsKey(Ljava/lang/Object;J)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#invalidateCache()V
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#destroy()V
+#shrink()Z
+#readKey(JI)Ljava/lang/Object;
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;
@3.8.0
-###org/terracotta/offheapstore/storage/LongStorageEngine

+###org/terracotta/offheapstore/storage/OffHeapBufferHalfStorageEngine
@3.0.0.m5
+#createFactory(Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#<init>(Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#clear()V
+#free(I)V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;J)V
+#destroy()V
+#shrink()Z
+#evictAtAddress(JZ)Z
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#isThief()Z
+#moved(JJ)Z
+#sizeOf(J)I
@3.8.0
-###org/terracotta/offheapstore/storage/OffHeapBufferHalfStorageEngine

+###org/terracotta/offheapstore/storage/OffHeapBufferStorageEngine
@3.0.0.m5
+#createFactory(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZF)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZ)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZF)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;F)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;F)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZF)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZ)V
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;IILorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;ZZF)V
+#readKeyBuffer(J)Ljava/nio/ByteBuffer;
+#readValueBuffer(J)Ljava/nio/ByteBuffer;
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#destroy()V
+#shrink()Z
+#evictAtAddress(JZ)Z
+#isThief()Z
+#readKeyHash(J)I
+#moved(JJ)Z
+#sizeOf(J)I
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#writeLock()Ljava/util/concurrent/locks/Lock;
@3.8.0
-###org/terracotta/offheapstore/storage/OffHeapBufferStorageEngine

+###org/terracotta/offheapstore/storage/PointerSize
@3.0.0.m5
+#values()[Lorg/terracotta/offheapstore/storage/PointerSize;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/offheapstore/storage/PointerSize;
+#bitSize()I
+#byteSize()I
@3.8.0
-###org/terracotta/offheapstore/storage/PointerSize

+###org/terracotta/offheapstore/storage/PortabilityBasedHalfStorageEngine
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/storage/portability/Portability;)V
+#write(Ljava/lang/Object;I)Ljava/lang/Integer;
+#free(I)V
+#read(I)Ljava/lang/Object;
+#equals(Ljava/lang/Object;I)Z
+#invalidateCache()V
@3.8.0
-###org/terracotta/offheapstore/storage/PortabilityBasedHalfStorageEngine

+###org/terracotta/offheapstore/storage/PortabilityBasedStorageEngine
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/storage/portability/Portability;Lorg/terracotta/offheapstore/storage/portability/Portability;)V
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#clear()V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Object;
+#equalsKey(Ljava/lang/Object;J)Z
+#readBinaryKey(J)Ljava/nio/ByteBuffer;
+#readBinaryValue(J)Ljava/nio/ByteBuffer;
+#equalsBinaryKey(Ljava/nio/ByteBuffer;J)Z
+#writeBinaryMapping([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljava/lang/Long;
+#writeBinaryMapping(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;II)Ljava/lang/Long;
+#invalidateCache()V
@3.8.0
-###org/terracotta/offheapstore/storage/PortabilityBasedStorageEngine

+###org/terracotta/offheapstore/storage/SerializableStorageEngine
@3.0.0.m5
+#createFactory(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;I)Lorg/terracotta/offheapstore/util/Factory;
+#createFactory(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;ILorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;I)V
@3.8.0
-###org/terracotta/offheapstore/storage/SerializableStorageEngine

+###org/terracotta/offheapstore/storage/SplitStorageEngine
@3.0.0.m5
+#createFactory(Lorg/terracotta/offheapstore/util/Factory;Lorg/terracotta/offheapstore/util/Factory;)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/storage/HalfStorageEngine;Lorg/terracotta/offheapstore/storage/HalfStorageEngine;)V
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Object;
+#equalsKey(Ljava/lang/Object;J)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#toString()Ljava/lang/String;
+#invalidateCache()V
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#destroy()V
+#shrink()Z
+#valueEncoding(J)I
+#keyEncoding(J)I
+#encoding(II)J
@3.8.0
-###org/terracotta/offheapstore/storage/SplitStorageEngine

+###org/terracotta/offheapstore/storage/StorageEngine$Owner
@3.0.0.m5
+#getEncodingForHashAndBinary(ILjava/nio/ByteBuffer;)Ljava/lang/Long;
+#getSize()J
+#installMappingForHashAndEncoding(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)J
+#encodingSet()Ljava/lang/Iterable;
+#updateEncoding(IJJJ)Z
+#getSlotForHashAndEncoding(IJJ)Ljava/lang/Integer;
+#evict(IZ)Z
+#isThiefForTableAllocations()Z
@3.8.0
-###org/terracotta/offheapstore/storage/StorageEngine$Owner

+###org/terracotta/offheapstore/storage/StorageEngine
@3.0.0.m5
+#writeMapping(Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/Long;
+#attachedMapping(JII)V
+#freeMapping(JIZ)V
+#readValue(J)Ljava/lang/Object;
+#equalsValue(Ljava/lang/Object;J)Z
+#readKey(JI)Ljava/lang/Object;
+#equalsKey(Ljava/lang/Object;J)Z
+#clear()V
+#getAllocatedMemory()J
+#getOccupiedMemory()J
+#getVitalMemory()J
+#getDataSize()J
+#invalidateCache()V
+#bind(Lorg/terracotta/offheapstore/storage/StorageEngine$Owner;)V
+#destroy()V
+#shrink()Z
@3.8.0
-###org/terracotta/offheapstore/storage/StorageEngine

+###org/terracotta/offheapstore/storage/StringStorageEngine
@3.0.0.m5
+#createFactory(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;I)Lorg/terracotta/offheapstore/util/Factory;
+#<init>(Lorg/terracotta/offheapstore/storage/PointerSize;Lorg/terracotta/offheapstore/paging/PageSource;I)V
@3.8.0
-###org/terracotta/offheapstore/storage/StringStorageEngine

+###org/terracotta/offheapstore/storage/allocator/Allocator
@3.0.0.m5
+#allocate(J)J
+#free(J)V
+#clear()V
+#expand(J)V
+#occupied()J
+#validateAllocator()V
+#getLastUsedAddress()J
+#getLastUsedPointer()J
+#getMinimalSize()I
+#getMaximumAddress()J
@3.8.0
-###org/terracotta/offheapstore/storage/allocator/Allocator

+###org/terracotta/offheapstore/storage/allocator/IntegerBestFitAllocator
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#clear()V
+#expand(J)V
+#allocate(J)J
+#free(J)V
+#occupied()J
+#toString()Ljava/lang/String;
+#validateAllocator()V
+#validateMallocedPointer(I)I
+#getLastUsedPointer()J
+#getLastUsedAddress()J
+#getMinimalSize()I
+#getMaximumAddress()J
+#iterator()Ljava/util/Iterator;
@3.8.0
-###org/terracotta/offheapstore/storage/allocator/IntegerBestFitAllocator

+###org/terracotta/offheapstore/storage/allocator/LongBestFitAllocator
@3.0.0.m5
+#<init>(Lorg/terracotta/offheapstore/paging/OffHeapStorageArea;)V
+#clear()V
+#expand(J)V
+#allocate(J)J
+#free(J)V
+#occupied()J
+#toString()Ljava/lang/String;
+#validateAllocator()V
+#validateMallocedPointer(J)J
+#getLastUsedPointer()J
+#getLastUsedAddress()J
+#getMinimalSize()I
+#getMaximumAddress()J
+#iterator()Ljava/util/Iterator;
@3.8.0
-###org/terracotta/offheapstore/storage/allocator/LongBestFitAllocator

+###org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing
@3.0.0.m5
+#values()[Lorg/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;
@3.8.0
-###org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing

+###org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator
@3.0.0.m5
+#<init>(I)V
+#allocate(ILorg/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;)I
+#free(II)V
+#tryFree(II)V
+#find(ILorg/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator$Packing;)I
+#claim(II)V
+#occupied()I
+#removeAndReturn(Ljava/lang/Object;)Lorg/terracotta/offheapstore/storage/allocator/Region;
+#find(Ljava/lang/Object;)Lorg/terracotta/offheapstore/storage/allocator/Region;
+#toString()Ljava/lang/String;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;
@3.8.0
-###org/terracotta/offheapstore/storage/allocator/PowerOfTwoAllocator

+###org/terracotta/offheapstore/storage/listener/AbstractListenableStorageEngine
@3.0.0.m5
+#<init>()V
+#registerListener(Lorg/terracotta/offheapstore/storage/listener/StorageEngineListener;)V
@3.8.0
-###org/terracotta/offheapstore/storage/listener/AbstractListenableStorageEngine

+###org/terracotta/offheapstore/storage/listener/ListenableStorageEngine
@3.0.0.m5
+#registerListener(Lorg/terracotta/offheapstore/storage/listener/StorageEngineListener;)V
@3.8.0
-###org/terracotta/offheapstore/storage/listener/ListenableStorageEngine

+###org/terracotta/offheapstore/storage/listener/RecoveryStorageEngineListener
@3.0.0.m5
+#recovered(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;IIJ)V
@3.8.0
-###org/terracotta/offheapstore/storage/listener/RecoveryStorageEngineListener

+###org/terracotta/offheapstore/storage/listener/RuntimeStorageEngineListener
@3.0.0.m5
+#written(Ljava/lang/Object;Ljava/lang/Object;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;IIJ)V
+#freed(JILjava/nio/ByteBuffer;Z)V
+#cleared()V
+#copied(IJJI)V
@3.8.0
-###org/terracotta/offheapstore/storage/listener/RuntimeStorageEngineListener

+###org/terracotta/offheapstore/storage/listener/StorageEngineListener
@3.0.0.m5
@3.8.0
-###org/terracotta/offheapstore/storage/listener/StorageEngineListener

+###org/terracotta/offheapstore/storage/portability/BooleanPortability
@3.0.0.m5
+#encode(Ljava/lang/Boolean;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Boolean;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/storage/portability/BooleanPortability

+###org/terracotta/offheapstore/storage/portability/ByteArrayPortability
@3.0.0.m5
+#encode([B)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)[B
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/storage/portability/ByteArrayPortability

+###org/terracotta/offheapstore/storage/portability/Portability
@3.0.0.m5
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
@3.8.0
-###org/terracotta/offheapstore/storage/portability/Portability

+###org/terracotta/offheapstore/storage/portability/SerializablePortability$SerializableDataKey
@3.0.0.m5
+#<init>(Ljava/io/ObjectStreamClass;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#forClass()Ljava/lang/Class;
+#setClass(Ljava/lang/Class;)V
+#getObjectStreamClass()Ljava/io/ObjectStreamClass;
@3.8.0
-###org/terracotta/offheapstore/storage/portability/SerializablePortability$SerializableDataKey

+###org/terracotta/offheapstore/storage/portability/SerializablePortability
@3.0.0.m5
+#<init>()V
+#<init>(Ljava/lang/ClassLoader;)V
+#encode(Ljava/io/Serializable;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/io/Serializable;
+#getObjectOutputStream(Ljava/io/OutputStream;)Ljava/io/ObjectOutputStream;
+#getObjectInputStream(Ljava/io/InputStream;)Ljava/io/ObjectInputStream;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/storage/portability/SerializablePortability

+###org/terracotta/offheapstore/storage/portability/StringPortability
@3.0.0.m5
+#encode(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/String;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#flush()V
+#close()V
+#persist(Ljava/io/ObjectOutput;)V
+#bootstrap(Ljava/io/ObjectInput;)V
+#decode(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#encode(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/storage/portability/StringPortability

+###org/terracotta/offheapstore/storage/portability/WriteBackPortability
@3.0.0.m5
+#decode(Ljava/nio/ByteBuffer;Lorg/terracotta/offheapstore/storage/portability/WriteContext;)Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/storage/portability/WriteBackPortability

+###org/terracotta/offheapstore/storage/portability/WriteContext
@3.0.0.m5
+#setLong(IJ)V
+#flush()V
@3.8.0
-###org/terracotta/offheapstore/storage/portability/WriteContext

+###org/terracotta/offheapstore/util/AATreeSet$AbstractTreeNode
@3.0.0.m5
+#<init>()V
+#setLeft(Lorg/terracotta/offheapstore/util/AATreeSet$Node;)V
+#setRight(Lorg/terracotta/offheapstore/util/AATreeSet$Node;)V
+#getLeft()Lorg/terracotta/offheapstore/util/AATreeSet$Node;
+#getRight()Lorg/terracotta/offheapstore/util/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
@3.8.0
-###org/terracotta/offheapstore/util/AATreeSet$AbstractTreeNode

+###org/terracotta/offheapstore/util/AATreeSet$Node
@3.0.0.m5
+#setLeft(Lorg/terracotta/offheapstore/util/AATreeSet$Node;)V
+#setRight(Lorg/terracotta/offheapstore/util/AATreeSet$Node;)V
+#getLeft()Lorg/terracotta/offheapstore/util/AATreeSet$Node;
+#getRight()Lorg/terracotta/offheapstore/util/AATreeSet$Node;
+#getLevel()I
+#setLevel(I)V
+#decrementLevel()I
+#incrementLevel()I
+#swapPayload(Lorg/terracotta/offheapstore/util/AATreeSet$Node;)V
+#getPayload()Ljava/lang/Comparable;
@3.8.0
-###org/terracotta/offheapstore/util/AATreeSet$Node

+###org/terracotta/offheapstore/util/AATreeSet
@3.0.0.m5
+#<init>()V
+#add(Ljava/lang/Comparable;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAndReturn(Ljava/lang/Object;)Ljava/lang/Comparable;
+#clear()V
+#iterator()Ljava/util/Iterator;
+#size()I
+#isEmpty()Z
+#comparator()Ljava/util/Comparator;
+#subSet(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Comparable;)Ljava/util/SortedSet;
+#first()Ljava/lang/Comparable;
+#last()Ljava/lang/Comparable;
+#find(Ljava/lang/Object;)Ljava/lang/Comparable;
+#add(Ljava/lang/Object;)Z
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
@3.8.0
-###org/terracotta/offheapstore/util/AATreeSet

+###org/terracotta/offheapstore/util/ByteBufferInputStream
@3.0.0.m5
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
+#mark(I)V
+#reset()V
+#markSupported()Z
@3.8.0
-###org/terracotta/offheapstore/util/ByteBufferInputStream

+###org/terracotta/offheapstore/util/ByteBufferUtils
@3.0.0.m5
+#totalLength([Ljava/nio/ByteBuffer;)I
+#aggregate([Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
@3.8.0
-###org/terracotta/offheapstore/util/ByteBufferUtils

+###org/terracotta/offheapstore/util/DebuggingUtils
@3.0.0.m5
+#toBase2SuffixedString(J)Ljava/lang/String;
+#toBase10SuffixedString(J)Ljava/lang/String;
@3.8.0
-###org/terracotta/offheapstore/util/DebuggingUtils

+###org/terracotta/offheapstore/util/Factory
@3.0.0.m5
+#newInstance()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/util/Factory

+###org/terracotta/offheapstore/util/FindbugsSuppressWarnings
@3.0.0.m5
+#value()[Ljava/lang/String;
@3.8.0
-###org/terracotta/offheapstore/util/FindbugsSuppressWarnings

+###org/terracotta/offheapstore/util/MemoryUnit
@3.0.0.m5
+#values()[Lorg/terracotta/offheapstore/util/MemoryUnit;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/offheapstore/util/MemoryUnit;
+#convert(JLorg/terracotta/offheapstore/util/MemoryUnit;)J
+#toBits(J)J
+#toBits(I)I
+#toBytes(J)J
+#toBytes(I)I
@3.8.0
-###org/terracotta/offheapstore/util/MemoryUnit

+###org/terracotta/offheapstore/util/NoOpLock
@3.0.0.m5
+#lock()V
+#lockInterruptibly()V
+#tryLock()Z
+#tryLock(JLjava/util/concurrent/TimeUnit;)Z
+#unlock()V
+#newCondition()Ljava/util/concurrent/locks/Condition;
@3.8.0
-###org/terracotta/offheapstore/util/NoOpLock

+###org/terracotta/offheapstore/util/PhysicalMemory
@3.0.0.m5
+#<init>()V
+#totalPhysicalMemory()Ljava/lang/Long;
+#freePhysicalMemory()Ljava/lang/Long;
+#totalSwapSpace()Ljava/lang/Long;
+#freeSwapSpace()Ljava/lang/Long;
+#ourCommittedVirtualMemory()Ljava/lang/Long;
+#main([Ljava/lang/String;)V
@3.8.0
-###org/terracotta/offheapstore/util/PhysicalMemory

+###org/terracotta/offheapstore/util/Retryer
@3.0.0.m5
+#<init>(JJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V
+#completeAsynchronously(Ljava/lang/Runnable;)V
+#shutdownNow()V
@3.8.0
-###org/terracotta/offheapstore/util/Retryer

+###org/terracotta/offheapstore/util/Validation
@3.0.0.m5
+#<init>()V
+#shouldValidate(Ljava/lang/Class;)Z
+#validate(Z)V
@3.8.0
-###org/terracotta/offheapstore/util/Validation

+###org/terracotta/offheapstore/util/WeakIdentityHashMap$ReaperTask
@3.0.0.m5
+#reap(Ljava/lang/Object;)V
@3.8.0
-###org/terracotta/offheapstore/util/WeakIdentityHashMap$ReaperTask

+###org/terracotta/offheapstore/util/WeakIdentityHashMap
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/terracotta/offheapstore/util/WeakIdentityHashMap$ReaperTask;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#entries()Ljava/util/Iterator;
+#values()Ljava/util/Iterator;
+#reap()V
@3.8.0
-###org/terracotta/offheapstore/util/WeakIdentityHashMap

+###org/terracotta/statistics/MappedOperationStatistic
@3.1.4
+#<init>(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#begin()V
+#end(Ljava/lang/Enum;)V
+#end(Ljava/lang/Enum;[J)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
@3.2.0.beta1
-###org/terracotta/statistics/MappedOperationStatistic

+###org/terracotta/statistics/MemoizingValueStatistic
@3.5.0
+#<init>(JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;)V
+#type()Lorg/terracotta/statistics/StatisticType;
+#value()Ljava/io/Serializable;
@3.8.0
-###org/terracotta/statistics/MemoizingValueStatistic

+###org/terracotta/statistics/Sample
@3.5.0
+#<init>(JLjava/io/Serializable;)V
+#getSample()Ljava/io/Serializable;
+#getTimestamp()J
+#toString()Ljava/lang/String;
@3.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.8.0
-###org/terracotta/statistics/Sample

+###org/terracotta/statistics/SampledStatistic
@3.5.0
+#history()Ljava/util/List;
+#history(J)Ljava/util/List;
@3.8.0
-###org/terracotta/statistics/SampledStatistic

+###org/terracotta/statistics/SampledStatisticAdapter
@3.5.0
+#value()Ljava/io/Serializable;
+#history()Ljava/util/List;
+#history(J)Ljava/util/List;
+#type()Lorg/terracotta/statistics/StatisticType;
+#sample(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/function/LongSupplier;)Lorg/terracotta/statistics/SampledStatistic;
@3.8.0
-###org/terracotta/statistics/SampledStatisticAdapter

+###org/terracotta/statistics/StatisticBuilder$OperationStatisticBuilder
@3.0.0.m2
+#<init>(Ljava/lang/Class;)V
+#build()Lorg/terracotta/statistics/observer/OperationObserver;
@3.8.0
-###org/terracotta/statistics/StatisticBuilder$OperationStatisticBuilder

+###org/terracotta/statistics/StatisticBuilder
@3.0.0.m2
+#operation(Ljava/lang/Class;)Lorg/terracotta/statistics/StatisticBuilder$OperationStatisticBuilder;
@3.8.0
-###org/terracotta/statistics/StatisticBuilder

+###org/terracotta/statistics/StatisticMapper
@3.1.4
+#<init>(Ljava/util/Map;Lorg/terracotta/statistics/OperationStatistic;)V
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#begin()V
+#end(Ljava/lang/Enum;)V
+#end(Ljava/lang/Enum;[J)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
@3.2.0.beta1
-###org/terracotta/statistics/StatisticMapper

+###org/terracotta/statistics/StatisticType
@3.5.0
+#values()[Lorg/terracotta/statistics/StatisticType;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/statistics/StatisticType;
@3.8.0
-###org/terracotta/statistics/StatisticType

+###org/terracotta/statistics/SuppliedValueStatistic
@3.5.0
+#<init>(Lorg/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#value()Ljava/io/Serializable;
+#type()Lorg/terracotta/statistics/StatisticType;
@3.8.0
-###org/terracotta/statistics/SuppliedValueStatistic

+###org/terracotta/statistics/Table$Builder
@3.5.0
+#setStatistic(Ljava/lang/String;Ljava/lang/String;Lorg/terracotta/statistics/StatisticType;Ljava/io/Serializable;)Lorg/terracotta/statistics/Table$Builder;
+#withRow(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/terracotta/statistics/Table$Builder;
+#withRows(Ljava/util/Collection;Ljava/util/function/BiConsumer;)Lorg/terracotta/statistics/Table$Builder;
+#build()Lorg/terracotta/statistics/Table;
@3.8.0
-###org/terracotta/statistics/Table$Builder

+###org/terracotta/statistics/Table$RowBuilder
@3.5.0
+#setStatistic(Ljava/lang/String;Lorg/terracotta/statistics/StatisticType;Ljava/io/Serializable;)Lorg/terracotta/statistics/Table$RowBuilder;
@3.8.0
-###org/terracotta/statistics/Table$RowBuilder

+###org/terracotta/statistics/Table
@3.5.0
+#newBuilder([Ljava/lang/String;)Lorg/terracotta/statistics/Table$Builder;
@3.8.0
-###org/terracotta/statistics/Table

+###org/terracotta/statistics/TableSkeleton
@3.5.0
+#isEmpty()Z
+#getRowCount()I
+#getRowLabels()Ljava/util/Collection;
+#getStatisticNames()[Ljava/lang/String;
+#getStatisticCount()I
+#getStatistics(Ljava/lang/String;)[Lorg/terracotta/statistics/ValueStatistic;
+#getStatistics()Ljava/util/Map;
+#getStatistic(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/statistics/TableSkeleton

+###org/terracotta/statistics/TableValueStatistic$Builder
@3.5.0
+#registerStatistic(Ljava/lang/String;Ljava/lang/String;Lorg/terracotta/statistics/ValueStatistic;)Lorg/terracotta/statistics/TableValueStatistic$Builder;
+#withRow(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/terracotta/statistics/TableValueStatistic$Builder;
+#withRows(Ljava/util/Collection;Ljava/util/function/BiConsumer;)Lorg/terracotta/statistics/TableValueStatistic$Builder;
+#build()Lorg/terracotta/statistics/ValueStatistic;
@3.8.0
-###org/terracotta/statistics/TableValueStatistic$Builder

+###org/terracotta/statistics/TableValueStatistic$RowBuilder
@3.5.0
+#registerStatistic(Ljava/lang/String;Lorg/terracotta/statistics/ValueStatistic;)Lorg/terracotta/statistics/TableValueStatistic$RowBuilder;
@3.8.0
-###org/terracotta/statistics/TableValueStatistic$RowBuilder

+###org/terracotta/statistics/TableValueStatistic
@3.5.0
+#newBuilder([Ljava/lang/String;)Lorg/terracotta/statistics/TableValueStatistic$Builder;
+#type()Lorg/terracotta/statistics/StatisticType;
+#value()Lorg/terracotta/statistics/Table;
+#value()Ljava/io/Serializable;
@3.8.0
-###org/terracotta/statistics/TableValueStatistic

+###org/terracotta/statistics/ValueStatistics
@3.5.0
+#<init>()V
+#nullValue(Lorg/terracotta/statistics/StatisticType;)Lorg/terracotta/statistics/ConstantValueStatistic;
+#constant(Lorg/terracotta/statistics/StatisticType;Ljava/io/Serializable;)Lorg/terracotta/statistics/ConstantValueStatistic;
+#supply(Lorg/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)Lorg/terracotta/statistics/ValueStatistic;
+#gauge(Ljava/util/function/Supplier;)Lorg/terracotta/statistics/ValueStatistic;
+#counter(Ljava/util/function/Supplier;)Lorg/terracotta/statistics/ValueStatistic;
+#rate(Ljava/util/function/Supplier;)Lorg/terracotta/statistics/ValueStatistic;
+#ratio(Ljava/util/function/Supplier;)Lorg/terracotta/statistics/ValueStatistic;
+#table(Ljava/util/function/Supplier;)Lorg/terracotta/statistics/ValueStatistic;
+#memoize(JLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/ValueStatistic;)Lorg/terracotta/statistics/ValueStatistic;
@3.8.0
-###org/terracotta/statistics/ValueStatistics

+###org/terracotta/statistics/ZeroOperationStatistic
@3.5.0
+#<init>()V
+#get()Lorg/terracotta/statistics/OperationStatistic;
+#type()Ljava/lang/Class;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#begin()V
+#end(Ljava/lang/Enum;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
@3.6.1
+#getDerivedStatistics()Ljava/util/Collection;
@3.8.0
-###org/terracotta/statistics/ZeroOperationStatistic

+###org/terracotta/statistics/derived/OperationResultSampler
@3.5.0
+#<init>(Ljava/util/Set;D[Lorg/terracotta/statistics/observer/ChainedEventObserver;)V
+#end(JJLjava/lang/Enum;)V
@3.6.1
+#getCeiling()I
@3.8.0
-###org/terracotta/statistics/derived/OperationResultSampler

+###org/terracotta/statistics/derived/latency/Jsr107LatencyMonitor
@3.5.0
+#<init>(Ljava/util/Set;D)V
+#begin(J)V
+#end(JJLjava/lang/Enum;)V
+#average()D
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#clear()V
@3.8.0
-###org/terracotta/statistics/derived/latency/Jsr107LatencyMonitor

+###org/terracotta/statistics/derived/latency/LatencyAccumulator
@3.5.0
+#accumulate(J)V
+#accumulate(Lorg/terracotta/statistics/derived/latency/LatencyAccumulator;)V
+#count()J
+#total()J
+#isEmpty()Z
+#event(JJ)V
+#maximum()Ljava/lang/Long;
+#minimum()Ljava/lang/Long;
+#average()D
+#toString()Ljava/lang/String;
+#accumulator([J)Lorg/terracotta/statistics/derived/latency/LatencyAccumulator;
+#empty()Lorg/terracotta/statistics/derived/latency/LatencyAccumulator;
@3.8.0
-###org/terracotta/statistics/derived/latency/LatencyAccumulator

+###org/terracotta/statistics/derived/latency/LatencyPeriodAccumulator
@3.5.0
+#isBefore(J)Z
+#isAfter(J)Z
+#start()J
+#end()J
+#accumulator()Lorg/terracotta/statistics/derived/latency/LatencyAccumulator;
+#tryAccumulate(JJ)Z
+#event(JJ)V
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#average()D
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/statistics/derived/latency/LatencyPeriodAccumulator

+###org/terracotta/statistics/derived/latency/LatencySimpleMovingAverage
@3.5.0
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#<init>(JLjava/util/concurrent/TimeUnit;I)V
+#average()D
+#maximum()Ljava/lang/Long;
+#minimum()Ljava/lang/Long;
+#event(JJ)V
@3.8.0
-###org/terracotta/statistics/derived/latency/LatencySimpleMovingAverage

+###org/terracotta/statistics/derived/latency/LatencyStatistic
@3.5.0
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#average()D
+#averageStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#minimumStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#maximumStatistic()Lorg/terracotta/statistics/ValueStatistic;
@3.8.0
-###org/terracotta/statistics/derived/latency/LatencyStatistic

+###org/terracotta/statistics/derived/latency/MaximumLatencyHistory
@3.5.0
+#<init>(IJLjava/util/concurrent/TimeUnit;Ljava/util/function/LongSupplier;)V
+#<init>(IJLjava/util/concurrent/TimeUnit;Ljava/util/function/LongSupplier;Ljava/util/function/Consumer;)V
+#event(JJ)V
+#value()Ljava/lang/Long;
+#type()Lorg/terracotta/statistics/StatisticType;
+#history()Ljava/util/List;
+#history(J)Ljava/util/List;
+#value()Ljava/io/Serializable;
@3.8.0
-###org/terracotta/statistics/derived/latency/MaximumLatencyHistory

+###org/terracotta/statistics/registry/OperationStatisticDescriptor
@3.5.0
+#getObserverName()Ljava/lang/String;
+#getTags()Ljava/util/Set;
+#getType()Ljava/lang/Class;
+#descriptor(Ljava/lang/String;Ljava/util/Set;Ljava/lang/Class;)Lorg/terracotta/statistics/registry/OperationStatisticDescriptor;
+#descriptor(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/String;)Lorg/terracotta/statistics/registry/OperationStatisticDescriptor;
@3.8.0
-###org/terracotta/statistics/registry/OperationStatisticDescriptor

+###org/terracotta/statistics/registry/Statistic
@3.5.0
+#<init>(Lorg/terracotta/statistics/StatisticType;)V
+#<init>(Lorg/terracotta/statistics/StatisticType;Lorg/terracotta/statistics/Sample;)V
+#<init>(Lorg/terracotta/statistics/StatisticType;Ljava/util/List;)V
+#getType()Lorg/terracotta/statistics/StatisticType;
+#isEmpty()Z
+#getSamples()Ljava/util/List;
+#getLatestSampleValue()Ljava/util/Optional;
+#getLatestSample()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/statistics/registry/Statistic

+###org/terracotta/statistics/registry/StatisticRegistry
@3.5.0
+#<init>(Ljava/lang/Object;Ljava/util/function/LongSupplier;)V
+#queryStatistic(Ljava/lang/String;)Ljava/util/Optional;
+#queryStatistic(Ljava/lang/String;J)Ljava/util/Optional;
+#queryStatistics()Ljava/util/Map;
+#queryStatistics(J)Ljava/util/Map;
+#registerStatistic(Ljava/lang/String;Lorg/terracotta/statistics/StatisticType;Ljava/util/function/Supplier;)V
+#registerStatistic(Ljava/lang/String;Lorg/terracotta/statistics/ValueStatistic;)V
+#registerTable(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#registerGauge(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#registerCounter(Ljava/lang/String;Ljava/util/function/Supplier;)V
+#registerStatistic(Ljava/lang/String;Lorg/terracotta/statistics/registry/ValueStatisticDescriptor;)Z
+#registerStatistic(Ljava/lang/String;Lorg/terracotta/statistics/registry/OperationStatisticDescriptor;Ljava/util/EnumSet;)Z
@3.8.0
-###org/terracotta/statistics/registry/StatisticRegistry

+###org/terracotta/statistics/registry/ValueStatisticDescriptor
@3.5.0
+#getObserverName()Ljava/lang/String;
+#getTags()Ljava/util/Set;
+#descriptor(Ljava/lang/String;Ljava/util/Set;)Lorg/terracotta/statistics/registry/ValueStatisticDescriptor;
+#descriptor(Ljava/lang/String;[Ljava/lang/String;)Lorg/terracotta/statistics/registry/ValueStatisticDescriptor;
@3.8.0
-###org/terracotta/statistics/registry/ValueStatisticDescriptor

+###org/ehcache/core/internal/util/TypeUtil
@3.6.0
+#uncheckedCast(Ljava/lang/Object;)Ljava/lang/Object;
@3.7.0
-###org/ehcache/core/internal/util/TypeUtil

+###org/ehcache/impl/internal/statistics/StatsUtils
@3.6.0
+#hasTag(Ljava/lang/String;)Lorg/terracotta/context/query/Matcher;
+#hasProperty(Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/context/query/Matcher;
+#findStatisticOnDescendants(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#findStatisticOnDescendants(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#findOperationStatisticOnChildren(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Lorg/terracotta/statistics/OperationStatistic;
+#findTiers(Lorg/ehcache/Cache;)[Ljava/lang/String;
+#findLowestTier([Ljava/lang/String;)Ljava/lang/String;
+#hasOperationStat(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Z
@3.8.0
-###org/ehcache/impl/internal/statistics/StatsUtils

+###org/ehcache/impl/internal/store/basic/BaseStore$BaseStoreProvider
@3.6.0
@3.7.0
-###org/ehcache/impl/internal/store/basic/BaseStore$BaseStoreProvider

+###org/ehcache/impl/internal/store/basic/BaseStore
@3.6.0
+#<init>(Lorg/ehcache/core/spi/store/Store$Configuration;)V
@3.7.0
-###org/ehcache/impl/internal/store/basic/BaseStore

+###org/ehcache/impl/internal/util/CheckerUtil
@3.6.0
+#checkKey(Ljava/lang/Class;Ljava/lang/Object;)V
+#checkValue(Ljava/lang/Class;Ljava/lang/Object;)V
@3.7.0
-###org/ehcache/impl/internal/util/CheckerUtil

+###org/ehcache/xml/DomUtil
@3.6.0
+#<init>()V
+#createAndGetDocumentBuilder(Ljava/util/Collection;)Ljavax/xml/parsers/DocumentBuilder;
+#createAndGetDocumentBuilder(Ljavax/xml/transform/Source;)Ljavax/xml/parsers/DocumentBuilder;
+#createAndGetDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;
+#createDocumentRoot(Ljavax/xml/transform/Source;)Lorg/w3c/dom/Document;
@3.10.0-alpha0
-###org/ehcache/xml/DomUtil

+###org/terracotta/statistics/derived/histogram/BarSplittingBiasedHistogram
@3.6.0
+#<init>(DDIIDJ)V
+#<init>(IJ)V
+#<init>(DIJ)V
+#event(DJ)V
+#expire(J)V
+#toString()Ljava/lang/String;
+#getBuckets()Ljava/util/List;
+#getMinimum()D
+#getMaximum()D
+#getQuantileBounds(D)[D
+#size()J
@3.8.0
-###org/terracotta/statistics/derived/histogram/BarSplittingBiasedHistogram

+###org/terracotta/statistics/derived/histogram/ExponentialHistogram
@3.6.0
+#<init>(DJ)V
+#merge(Lorg/terracotta/statistics/derived/histogram/ExponentialHistogram;)V
+#insert(JJ)V
+#insert(J)V
+#expire(J)J
+#count()J
+#split(D)Lorg/terracotta/statistics/derived/histogram/ExponentialHistogram;
+#toString()Ljava/lang/String;
+#epsilon()D
@3.8.0
-###org/terracotta/statistics/derived/histogram/ExponentialHistogram

+###org/terracotta/statistics/derived/histogram/Histogram$Bucket
@3.6.0
+#minimum()D
+#maximum()D
+#count()D
@3.8.0
-###org/terracotta/statistics/derived/histogram/Histogram$Bucket

+###org/terracotta/statistics/derived/histogram/Histogram
@3.6.0
+#getBuckets()Ljava/util/List;
+#getMinimum()D
+#getMaximum()D
+#getQuantileBounds(D)[D
+#size()J
@3.6.1
+#event(DJ)V
+#expire(J)V
@3.8.0
-###org/terracotta/statistics/derived/histogram/Histogram

+###org/terracotta/statistics/derived/histogram/Striped
@3.6.1
+#<init>(Ljava/util/function/Supplier;)V
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/statistics/derived/histogram/Striped

+###org/terracotta/statistics/derived/histogram/StripedHistogram
@3.6.1
+#<init>(DDIIDJ)V
+#<init>(IJ)V
+#<init>(DIJ)V
+#getBuckets()Ljava/util/List;
+#getQuantileBounds(D)[D
+#size()J
+#event(DJ)V
+#expire(J)V
@3.8.0
-###org/terracotta/statistics/derived/histogram/StripedHistogram

+###org/terracotta/statistics/derived/latency/DefaultLatencyHistogramStatistic
@3.6.0
+#<init>(DILjava/time/Duration;Ljava/util/function/LongSupplier;)V
+#<init>(DILjava/time/Duration;)V
+#buckets()Ljava/util/List;
+#count()J
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#percentile(D)Ljava/lang/Long;
+#percentileBounds(D)[J
+#event(JJ)V
+#query(Ljava/util/function/Function;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
@3.8.0
-###org/terracotta/statistics/derived/latency/DefaultLatencyHistogramStatistic

+###org/terracotta/statistics/derived/latency/LatencyHistogramQuery
@3.6.0
+#minimum()Ljava/lang/Long;
+#maximum()Ljava/lang/Long;
+#median()Ljava/lang/Long;
+#count()J
+#percentile(D)Ljava/lang/Long;
+#percentileBounds(D)[J
+#buckets()Ljava/util/List;
@3.8.0
-###org/terracotta/statistics/derived/latency/LatencyHistogramQuery

+###org/terracotta/statistics/derived/latency/LatencyHistogramStatistic
@3.6.0
+#query(Ljava/util/function/Function;)Ljava/lang/Object;
+#percentileStatistic(D)Lorg/terracotta/statistics/ValueStatistic;
+#minimumStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#maximumStatistic()Lorg/terracotta/statistics/ValueStatistic;
+#medianStatistic()Lorg/terracotta/statistics/ValueStatistic;
@3.8.0
-###org/terracotta/statistics/derived/latency/LatencyHistogramStatistic

+###org/ehcache/core/internal/resilience/LoggingRobustResilienceStrategy
@3.0.0.rc1
+#<init>(Lorg/ehcache/core/internal/resilience/RecoveryCache;)V
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)Lorg/ehcache/Cache$Entry;
@3.0.0.rc2
+#iteratorFailure(Lorg/ehcache/exceptions/StoreAccessException;)Lorg/ehcache/Cache$Entry;
-#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)Lorg/ehcache/Cache$Entry;
@3.0.0
+#iteratorFailure(Lorg/ehcache/core/spi/store/StoreAccessException;)Lorg/ehcache/Cache$Entry;
-#iteratorFailure(Lorg/ehcache/exceptions/StoreAccessException;)Lorg/ehcache/Cache$Entry;
@3.5.0
-###org/ehcache/core/internal/resilience/LoggingRobustResilienceStrategy

+###org/ehcache/core/internal/resilience/RecoveryCache
@3.0.0.rc1
+#obliterate()V
+#obliterate(Ljava/lang/Object;)V
+#obliterate(Ljava/lang/Iterable;)V
@3.5.0
-###org/ehcache/core/internal/resilience/RecoveryCache

+###org/ehcache/core/internal/resilience/ResilienceStrategy
@3.0.0.rc1
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#clearFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)Lorg/ehcache/Cache$Entry;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
@3.0.0.rc2
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#clearFailure(Lorg/ehcache/exceptions/StoreAccessException;)V
+#iteratorFailure(Lorg/ehcache/exceptions/StoreAccessException;)Lorg/ehcache/Cache$Entry;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Z
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#clearFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
-#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)Lorg/ehcache/Cache$Entry;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)V
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
@3.0.0.rc3
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
@3.0.0
+#getFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)V
+#clearFailure(Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#iteratorFailure(Lorg/ehcache/core/spi/store/StoreAccessException;)Lorg/ehcache/Cache$Entry;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/core/spi/store/StoreAccessException;Lorg/ehcache/spi/loaderwriter/BulkCacheWritingException;)Ljava/util/Map;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
-#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Z
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
-#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)V
-#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
-#clearFailure(Lorg/ehcache/exceptions/StoreAccessException;)V
-#iteratorFailure(Lorg/ehcache/exceptions/StoreAccessException;)Lorg/ehcache/Cache$Entry;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Z)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
-#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
-#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;)V
-#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;)Ljava/util/Map;
-#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/StoreAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
@3.5.0
-###org/ehcache/core/internal/resilience/ResilienceStrategy

+###org/ehcache/core/internal/resilience/RethrowingStoreAccessException
@3.0.0.rc2
+#<init>(Ljava/lang/RuntimeException;)V
+#getCause()Ljava/lang/RuntimeException;
+#getCause()Ljava/lang/Throwable;
@3.5.0
-###org/ehcache/core/internal/resilience/RethrowingStoreAccessException

+###org/ehcache/core/internal/util/Functions
@3.0.0.rc1
+#<init>()V
+#memoize(Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/function/Function;
+#memoize(Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/function/BiFunction;
@3.5.0
-###org/ehcache/core/internal/util/Functions

+###org/ehcache/core/spi/function/BiFunction
@3.0.0.rc1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.5.0
-###org/ehcache/core/spi/function/BiFunction

+###org/ehcache/core/spi/function/Function
@3.0.0.rc1
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@3.5.0
-###org/ehcache/core/spi/function/Function

+###org/ehcache/core/spi/function/NullaryFunction
@3.0.0.rc1
+#apply()Ljava/lang/Object;
@3.5.0
-###org/ehcache/core/spi/function/NullaryFunction

+###org/ehcache/core/spi/store/StoreAccessException
@3.0.0
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
@3.5.0
-###org/ehcache/core/spi/store/StoreAccessException

+###org/ehcache/core/spi/store/StoreAccessTimeoutException
@3.1.1
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.5.0
-###org/ehcache/core/spi/store/StoreAccessTimeoutException

+###org/ehcache/core/statistics/CacheOperationOutcomes$CacheLoadingOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/CacheOperationOutcomes$CacheLoadingOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheOperationOutcomes$CacheLoadingOutcome;
@3.5.0
-###org/ehcache/core/statistics/CacheOperationOutcomes$CacheLoadingOutcome

+###org/ehcache/core/statistics/TypedValueStatistic
@3.3.0
+#<init>(Lorg/terracotta/statistics/extended/StatisticType;)V
+#getType()Lorg/terracotta/statistics/extended/StatisticType;
@3.5.0
-###org/ehcache/core/statistics/TypedValueStatistic

+###org/ehcache/impl/internal/classes/commonslang/JavaVersion
@3.0.0.m5
+#values()[Lorg/ehcache/impl/internal/classes/commonslang/JavaVersion;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/impl/internal/classes/commonslang/JavaVersion;
+#atLeast(Lorg/ehcache/impl/internal/classes/commonslang/JavaVersion;)Z
+#toString()Ljava/lang/String;
@3.5.0
-###org/ehcache/impl/internal/classes/commonslang/JavaVersion

+###org/ehcache/impl/internal/classes/commonslang/SystemUtils
@3.0.0.m5
+#isJavaVersionAtLeast(Lorg/ehcache/impl/internal/classes/commonslang/JavaVersion;)Z
+#<init>()V
@3.5.0
-###org/ehcache/impl/internal/classes/commonslang/SystemUtils

+###org/ehcache/impl/internal/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory
@3.0.0.m5
+#newThread(Lorg/ehcache/impl/internal/concurrent/ForkJoinPool;)Lorg/ehcache/impl/internal/concurrent/ForkJoinWorkerThread;
@3.5.0
-###org/ehcache/impl/internal/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory

+###org/ehcache/impl/internal/concurrent/ForkJoinPool$ManagedBlocker
@3.0.0.m5
+#block()Z
+#isReleasable()Z
@3.5.0
-###org/ehcache/impl/internal/concurrent/ForkJoinPool$ManagedBlocker

+###org/ehcache/impl/internal/concurrent/JSR166Helper$BiConsumer
@3.0.0.m5
+#accept(Ljava/lang/Object;Ljava/lang/Object;)V
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$BiConsumer

+###org/ehcache/impl/internal/concurrent/JSR166Helper$Consumer
@3.0.0.m5
+#accept(Ljava/lang/Object;)V
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$Consumer

+###org/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator
@3.0.0.m5
+#applyAsDouble(DD)J
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$DoubleBinaryOperator

+###org/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator
@3.0.0.m5
+#applyAsInt(II)I
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$IntBinaryOperator

+###org/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator
@3.0.0.m5
+#applyAsLong(JJ)J
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$LongBinaryOperator

+###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator$OfDouble
@3.0.0.m5
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator$OfDouble

+###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator$OfInt
@3.0.0.m5
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator$OfInt

+###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator$OfLong
@3.0.0.m5
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator$OfLong

+###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator
@3.0.0.m5
+#trySplit()Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator;
+#estimateSize()J
+#forEachRemaining(Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)V
+#tryAdvance(Lorg/ehcache/impl/internal/concurrent/JSR166Helper$Consumer;)Z
+#characteristics()I
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$Spliterator

+###org/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleBiFunction
@3.0.0.m5
+#applyAsDouble(Ljava/lang/Object;Ljava/lang/Object;)D
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleBiFunction

+###org/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction
@3.0.0.m5
+#applyAsDouble(Ljava/lang/Object;)D
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$ToDoubleFunction

+###org/ehcache/impl/internal/concurrent/JSR166Helper$ToIntBiFunction
@3.0.0.m5
+#applyAsInt(Ljava/lang/Object;Ljava/lang/Object;)I
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$ToIntBiFunction

+###org/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction
@3.0.0.m5
+#applyAsInt(Ljava/lang/Object;)I
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$ToIntFunction

+###org/ehcache/impl/internal/concurrent/JSR166Helper$ToLongBiFunction
@3.0.0.m5
+#applyAsLong(Ljava/lang/Object;Ljava/lang/Object;)J
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$ToLongBiFunction

+###org/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction
@3.0.0.m5
+#applyAsLong(Ljava/lang/Object;)J
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper$ToLongFunction

+###org/ehcache/impl/internal/concurrent/JSR166Helper
@3.0.0.m5
@3.5.0
-###org/ehcache/impl/internal/concurrent/JSR166Helper

+###org/terracotta/context/extended/OperationStatisticDescriptor
@3.1.4
+#getObserverName()Ljava/lang/String;
+#getTags()Ljava/util/Set;
+#getType()Ljava/lang/Class;
+#descriptor(Ljava/lang/String;Ljava/util/Set;Ljava/lang/Class;)Lorg/terracotta/context/extended/OperationStatisticDescriptor;
@3.5.0
-###org/terracotta/context/extended/OperationStatisticDescriptor

+###org/terracotta/context/extended/RegisteredCompoundOperationStatistic
@3.1.4
+#<init>(Lorg/terracotta/statistics/extended/CompoundOperation;)V
+#getCompoundOperation()Lorg/terracotta/statistics/extended/CompoundOperation;
+#getSupport()Lorg/terracotta/statistics/extended/SamplingSupport;
@3.5.0
-###org/terracotta/context/extended/RegisteredCompoundOperationStatistic

+###org/terracotta/context/extended/RegisteredCompoundStatistic
@3.1.4
+#<init>(Lorg/terracotta/statistics/extended/CompoundOperation;Ljava/util/EnumSet;)V
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getCompound()Ljava/util/EnumSet;
+#getResult()Lorg/terracotta/statistics/extended/Result;
@3.2.0.beta1
-#getType()Lorg/terracotta/context/extended/RegistrationType;
-#getResult()Lorg/terracotta/statistics/extended/Result;
@3.2.0
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getResult()Lorg/terracotta/statistics/extended/Result;
@3.5.0
-###org/terracotta/context/extended/RegisteredCompoundStatistic

+###org/terracotta/context/extended/RegisteredCounterStatistic
@3.1.4
+#<init>(Lorg/terracotta/statistics/extended/ExpiringSampledStatistic;)V
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
+#getSupport()Lorg/terracotta/statistics/extended/SamplingSupport;
@3.2.0.beta1
+#getSampledStatistic()Lorg/terracotta/statistics/extended/ExpiringSampledStatistic;
-#getType()Lorg/terracotta/context/extended/RegistrationType;
-#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
-#getSampledStatistic()Lorg/terracotta/statistics/extended/ExpiringSampledStatistic;
@3.5.0
-###org/terracotta/context/extended/RegisteredCounterStatistic

+###org/terracotta/context/extended/RegisteredRatioStatistic
@3.1.4
+#<init>(Lorg/terracotta/statistics/extended/CompoundOperation;Ljava/util/EnumSet;Ljava/util/EnumSet;)V
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getNumerator()Ljava/util/EnumSet;
+#getDenominator()Ljava/util/EnumSet;
+#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0.beta1
-#getType()Lorg/terracotta/context/extended/RegistrationType;
-#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
@3.5.0
-###org/terracotta/context/extended/RegisteredRatioStatistic

+###org/terracotta/context/extended/RegisteredSizeStatistic
@3.1.4
+#<init>(Lorg/terracotta/statistics/extended/ExpiringSampledStatistic;)V
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
+#getSupport()Lorg/terracotta/statistics/extended/SamplingSupport;
@3.2.0.beta1
+#getSampledStatistic()Lorg/terracotta/statistics/extended/ExpiringSampledStatistic;
-#getType()Lorg/terracotta/context/extended/RegistrationType;
-#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0
+#getType()Lorg/terracotta/context/extended/RegistrationType;
+#getSampledStatistic()Lorg/terracotta/statistics/extended/SampledStatistic;
-#getSampledStatistic()Lorg/terracotta/statistics/extended/ExpiringSampledStatistic;
@3.5.0
-###org/terracotta/context/extended/RegisteredSizeStatistic

+###org/terracotta/context/extended/RegisteredStatistic
@3.1.4
+#getSupport()Lorg/terracotta/statistics/extended/SamplingSupport;
+#getType()Lorg/terracotta/context/extended/RegistrationType;
@3.2.0.beta1
+#<init>()V
-#getType()Lorg/terracotta/context/extended/RegistrationType;
@3.2.0
+#getType()Lorg/terracotta/context/extended/RegistrationType;
-#<init>()V
@3.5.0
-###org/terracotta/context/extended/RegisteredStatistic

+###org/terracotta/context/extended/RegistrationType
@3.1.4
+#values()[Lorg/terracotta/context/extended/RegistrationType;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/context/extended/RegistrationType;
@3.2.0.beta1
-###org/terracotta/context/extended/RegistrationType

+###org/terracotta/context/extended/StatisticsRegistry
@3.0.0.m2
+#<init>(Ljava/lang/Class;Ljava/lang/Object;Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;IJLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)V
+#setTimeToDisable(JLjava/util/concurrent/TimeUnit;)V
+#setAlwaysOn(Z)V
+#registerCompoundOperation(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/context/extended/OperationType;Ljava/util/Set;)V
+#registerCountOperation(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/context/extended/OperationType;)V
+#registerRatio(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/context/extended/OperationType;Ljava/util/Set;Ljava/util/Set;)V
+#getRegistrations()Ljava/util/Collection;
+#clearRegistrations()V
@3.1.4
+#<init>(Ljava/lang/Object;Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;IJLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)V
+#registerSize(Ljava/lang/String;Lorg/terracotta/context/extended/ValueStatisticDescriptor;)V
+#registerCounter(Ljava/lang/String;Lorg/terracotta/context/extended/ValueStatisticDescriptor;)V
+#registerCompoundOperations(Ljava/lang/String;Lorg/terracotta/context/extended/OperationStatisticDescriptor;Ljava/util/EnumSet;)V
+#registerRatios(Ljava/lang/String;Lorg/terracotta/context/extended/OperationStatisticDescriptor;Ljava/util/EnumSet;Ljava/util/EnumSet;)V
+#getRegistrations()Ljava/util/Map;
+#findSampledStatistic(Ljava/lang/String;)Lorg/terracotta/statistics/extended/SampledStatistic;
+#findSampledCompoundStatistic(Ljava/lang/String;Lorg/terracotta/statistics/extended/SampleType;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#<init>(Ljava/lang/Class;Ljava/lang/Object;Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;IJLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)V
-#registerCompoundOperation(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/context/extended/OperationType;Ljava/util/Set;)V
-#registerCountOperation(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/context/extended/OperationType;)V
-#registerRatio(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lorg/terracotta/context/extended/OperationType;Ljava/util/Set;Ljava/util/Set;)V
-#getRegistrations()Ljava/util/Collection;
@3.2.0.beta1
-#findSampledStatistic(Ljava/lang/String;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#findSampledCompoundStatistic(Ljava/lang/String;Lorg/terracotta/statistics/extended/SampleType;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0
+#findSampledStatistic(Ljava/lang/String;)Lorg/terracotta/statistics/extended/SampledStatistic;
+#findSampledCompoundStatistic(Ljava/lang/String;Lorg/terracotta/statistics/extended/SampleType;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.3.0
+#findSampledCompoundStatistic(Ljava/lang/String;Lorg/terracotta/statistics/extended/StatisticType;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#findSampledCompoundStatistic(Ljava/lang/String;Lorg/terracotta/statistics/extended/SampleType;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.5.0
-###org/terracotta/context/extended/StatisticsRegistry

+###org/terracotta/context/extended/ValueStatisticDescriptor
@3.1.4
+#getObserverName()Ljava/lang/String;
+#getTags()Ljava/util/Set;
+#descriptor(Ljava/lang/String;Ljava/util/Set;)Lorg/terracotta/context/extended/ValueStatisticDescriptor;
@3.5.0
-###org/terracotta/context/extended/ValueStatisticDescriptor

+###org/terracotta/offheapstore/jdk8/BiFunction
@3.0.0.rc1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@3.5.0
-###org/terracotta/offheapstore/jdk8/BiFunction

+###org/terracotta/offheapstore/jdk8/Function
@3.0.0.rc1
+#apply(Ljava/lang/Object;)Ljava/lang/Object;
@3.5.0
-###org/terracotta/offheapstore/jdk8/Function

+###org/terracotta/statistics/extended/CompoundOperation
@3.0.0.m2
+#type()Ljava/lang/Class;
+#component(Ljava/lang/Enum;)Lorg/terracotta/statistics/extended/Result;
+#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
+#asCountOperation()Lorg/terracotta/statistics/extended/CountOperation;
+#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
+#setAlwaysOn(Z)V
+#isAlwaysOn()Z
+#setWindow(JLjava/util/concurrent/TimeUnit;)V
+#setHistory(IJLjava/util/concurrent/TimeUnit;)V
+#getWindowSize(Ljava/util/concurrent/TimeUnit;)J
+#getHistorySampleSize()I
+#getHistorySampleTime(Ljava/util/concurrent/TimeUnit;)J
@3.1.4
+#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0.beta1
+#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0
+#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.5.0
-###org/terracotta/statistics/extended/CompoundOperation

+###org/terracotta/statistics/extended/CompoundOperationImpl
@3.0.0.m2
+#<init>(Lorg/terracotta/statistics/OperationStatistic;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
+#type()Ljava/lang/Class;
+#component(Ljava/lang/Enum;)Lorg/terracotta/statistics/extended/Result;
+#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
+#asCountOperation()Lorg/terracotta/statistics/extended/CountOperation;
+#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
+#setAlwaysOn(Z)V
+#isAlwaysOn()Z
+#setWindow(JLjava/util/concurrent/TimeUnit;)V
+#setHistory(IJLjava/util/concurrent/TimeUnit;)V
+#getWindowSize(Ljava/util/concurrent/TimeUnit;)J
+#getHistorySampleSize()I
+#getHistorySampleTime(Ljava/util/concurrent/TimeUnit;)J
+#expire(J)Z
@3.1.4
+#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0.beta1
+#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0
+#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.5.0
-###org/terracotta/statistics/extended/CompoundOperationImpl

+###org/terracotta/statistics/extended/CountOperation
@3.0.0.m2
+#value(Ljava/lang/Object;)J
+#value([Ljava/lang/Object;)J
@3.5.0
-###org/terracotta/statistics/extended/CountOperation

+###org/terracotta/statistics/extended/ExpiringSampledStatistic
@3.1.4
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
+#value()Ljava/lang/Number;
@3.2.0.beta1
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
-#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
@3.2.0
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
-#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
@3.3.0
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/StatisticType;)V
-#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
@3.5.0
-###org/terracotta/statistics/extended/ExpiringSampledStatistic

+###org/terracotta/statistics/extended/Latency
@3.0.0.m2
+#minimum()Lorg/terracotta/statistics/extended/SampledStatistic;
+#maximum()Lorg/terracotta/statistics/extended/SampledStatistic;
+#average()Lorg/terracotta/statistics/extended/SampledStatistic;
@3.5.0
-###org/terracotta/statistics/extended/Latency

+###org/terracotta/statistics/extended/NullCompoundOperation
@3.0.0.m2
+#instance(Ljava/lang/Class;)Lorg/terracotta/statistics/extended/CompoundOperation;
+#type()Ljava/lang/Class;
+#component(Ljava/lang/Enum;)Lorg/terracotta/statistics/extended/Result;
+#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
+#asCountOperation()Lorg/terracotta/statistics/extended/CountOperation;
+#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
+#setAlwaysOn(Z)V
+#setWindow(JLjava/util/concurrent/TimeUnit;)V
+#setHistory(IJLjava/util/concurrent/TimeUnit;)V
+#isAlwaysOn()Z
+#getWindowSize(Ljava/util/concurrent/TimeUnit;)J
+#getHistorySampleSize()I
+#getHistorySampleTime(Ljava/util/concurrent/TimeUnit;)J
@3.1.4
+#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
+#expire(J)Z
-#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0.beta1
+#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.2.0
+#compound(Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/Result;
+#ratioOf(Ljava/util/EnumSet;Ljava/util/EnumSet;)Lorg/terracotta/statistics/extended/SampledStatistic;
-#compound(Ljava/util/Set;)Lorg/terracotta/statistics/extended/Result;
-#ratioOf(Ljava/util/Set;Ljava/util/Set;)Lorg/terracotta/statistics/extended/SampledStatistic;
@3.5.0
-###org/terracotta/statistics/extended/NullCompoundOperation

+###org/terracotta/statistics/extended/RateImpl
@3.0.0.m2
+#<init>(Lorg/terracotta/statistics/OperationStatistic;Ljava/util/Set;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
+#active()Z
+#value()Ljava/lang/Double;
+#history()Ljava/util/List;
+#value()Ljava/lang/Number;
@3.1.4
+#history(J)Ljava/util/List;
+#type()Lorg/terracotta/statistics/extended/SampleType;
@3.2.0.beta1
-#history(J)Ljava/util/List;
-#type()Lorg/terracotta/statistics/extended/SampleType;
@3.2.0
+#history(J)Ljava/util/List;
+#type()Lorg/terracotta/statistics/extended/SampleType;
@3.3.0
+#type()Lorg/terracotta/statistics/extended/StatisticType;
-#type()Lorg/terracotta/statistics/extended/SampleType;
@3.5.0
-###org/terracotta/statistics/extended/RateImpl

+###org/terracotta/statistics/extended/Result
@3.0.0.m2
+#count()Lorg/terracotta/statistics/extended/SampledStatistic;
+#rate()Lorg/terracotta/statistics/extended/SampledStatistic;
+#latency()Lorg/terracotta/statistics/extended/Latency;
@3.5.0
-###org/terracotta/statistics/extended/Result

+###org/terracotta/statistics/extended/SampledStatistic
@3.0.0.m2
+#active()Z
+#value()Ljava/lang/Number;
+#history()Ljava/util/List;
@3.1.4
+#history(J)Ljava/util/List;
+#type()Lorg/terracotta/statistics/extended/SampleType;
@3.2.0.beta1
-#history(J)Ljava/util/List;
-#type()Lorg/terracotta/statistics/extended/SampleType;
@3.2.0
+#history(J)Ljava/util/List;
+#type()Lorg/terracotta/statistics/extended/SampleType;
@3.3.0
+#type()Lorg/terracotta/statistics/extended/StatisticType;
-#type()Lorg/terracotta/statistics/extended/SampleType;
@3.5.0
-###org/terracotta/statistics/extended/SampledStatistic

+###org/terracotta/statistics/extended/SamplingSupport
@3.1.4
+#expire(J)Z
+#setAlwaysOn(Z)V
@3.5.0
-###org/terracotta/statistics/extended/SamplingSupport

+###org/terracotta/statistics/extended/SemiExpiringSampledStatistic
@3.0.0.m2
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
+#history()Ljava/util/List;
+#active()Z
+#value()Ljava/lang/Number;
@3.1.4
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
+#history(J)Ljava/util/List;
+#expire(J)Z
+#setAlwaysOn(Z)V
+#type()Lorg/terracotta/statistics/extended/SampleType;
-#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
@3.2.0.beta1
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
-#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
-#history(J)Ljava/util/List;
-#type()Lorg/terracotta/statistics/extended/SampleType;
@3.2.0
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
+#history(J)Ljava/util/List;
+#type()Lorg/terracotta/statistics/extended/SampleType;
-#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;)V
@3.3.0
+#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/StatisticType;)V
+#type()Lorg/terracotta/statistics/extended/StatisticType;
-#<init>(Lorg/terracotta/statistics/ValueStatistic;Ljava/util/concurrent/ScheduledExecutorService;IJLjava/util/concurrent/TimeUnit;Lorg/terracotta/statistics/extended/SampleType;)V
-#type()Lorg/terracotta/statistics/extended/SampleType;
@3.5.0
-###org/terracotta/statistics/extended/SemiExpiringSampledStatistic

+###org/terracotta/statistics/extended/StatisticType
@3.3.0
+#values()[Lorg/terracotta/statistics/extended/StatisticType;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/statistics/extended/StatisticType;
@3.5.0
-###org/terracotta/statistics/extended/StatisticType

+###org/ehcache/core/statistics/DefaultCacheStatistics
@3.8.0
+#<init>(Lorg/ehcache/core/InternalCache;)V
+#registerDerivedStatistic(Ljava/lang/Class;Ljava/lang/String;Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#getKnownStatistics()Ljava/util/Map;
+#getTierStatistics()Ljava/util/Map;
+#clear()V
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getCacheExpirations()J
@3.9.1
-###org/ehcache/core/statistics/DefaultCacheStatistics

+###org/ehcache/core/statistics/DefaultStatisticsService
@3.8.0
+#<init>()V
+#getCacheStatistics(Ljava/lang/String;)Lorg/ehcache/core/statistics/CacheStatistics;
+#registerWithParent(Ljava/lang/Object;Ljava/lang/Object;)V
+#registerStoreStatistics(Lorg/ehcache/core/spi/store/Store;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;Ljava/lang/String;)Lorg/ehcache/core/statistics/OperationStatistic;
+#deRegisterFromParent(Ljava/lang/Object;Ljava/lang/Object;)V
+#cleanForNode(Ljava/lang/Object;)V
+#createCacheRegistry(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/util/function/LongSupplier;)V
+#registerCacheStatistics(Ljava/lang/String;)V
+#getCacheDescriptors(Ljava/lang/String;)Ljava/util/Collection;
+#registerDerivedStatistics(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/lang/String;Ljava/lang/Enum;Ljava/lang/String;Lorg/ehcache/core/statistics/LatencyHistogramConfiguration;)V
+#collectStatistics(Ljava/lang/String;Ljava/util/Collection;J)Ljava/util/Map;
+#registerStatistic(Ljava/lang/Object;Ljava/lang/String;Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/Set;Ljava/util/function/Supplier;)V
+#createOperationStatistics(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Lorg/ehcache/core/statistics/OperationObserver;
+#isStarted()Z
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
+#stop()V
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V
@3.9.1
-###org/ehcache/core/statistics/DefaultStatisticsService

+###org/ehcache/core/statistics/DefaultStatisticsServiceFactory
@3.8.0
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/core/spi/service/StatisticsService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.9.1
-###org/ehcache/core/statistics/DefaultStatisticsServiceFactory

+###org/ehcache/core/statistics/DefaultTierStatistics
@3.8.0
+#<init>(Lorg/ehcache/Cache;Ljava/lang/String;)V
+#getKnownStatistics()Ljava/util/Map;
+#clear()V
+#getHits()J
+#getMisses()J
+#getPuts()J
+#getRemovals()J
+#getEvictions()J
+#getExpirations()J
+#getMappings()J
+#getAllocatedByteSize()J
+#getOccupiedByteSize()J
@3.9.1
-###org/ehcache/core/statistics/DefaultTierStatistics

+###org/ehcache/core/statistics/DelegatedMappedOperationStatistics
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/MappedOperationStatistic;)V
+#type()Ljava/lang/Class;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#begin()V
+#end(Ljava/lang/Enum;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
@3.9.1
-###org/ehcache/core/statistics/DelegatedMappedOperationStatistics

+###org/ehcache/core/statistics/DelegatingOperationObserver
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/observer/OperationObserver;)V
+#begin()V
+#end(Ljava/lang/Enum;)V
@3.9.1
-###org/ehcache/core/statistics/DelegatingOperationObserver

+###org/ehcache/core/statistics/DelegatingOperationStatistic
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/OperationStatistic;)V
+#type()Ljava/lang/Class;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#begin()V
+#end(Ljava/lang/Enum;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedOperationObserver;)V
+#getDerivedStatistics()Ljava/util/Collection;
+#removeDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
+#addDerivedStatistic(Lorg/ehcache/core/statistics/ChainedObserver;)V
@3.9.1
-###org/ehcache/core/statistics/DelegatingOperationStatistic

+###org/ehcache/core/statistics/Jsr107LatencyMonitor
@3.8.0
+#<init>(Ljava/lang/Class;)V
+#average()D
+#clear()V
+#begin(J)V
+#end(JJLjava/lang/Enum;)V
@3.9.1
-###org/ehcache/core/statistics/Jsr107LatencyMonitor

+###org/ehcache/core/statistics/LatencyHistogramConfiguration
@3.8.0
+#<init>(DILjava/time/Duration;)V
+#getPhi()D
+#getBucketCount()I
+#getWindow()Ljava/time/Duration;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/ehcache/core/statistics/LatencyHistogramConfiguration

+###org/ehcache/core/statistics/StatsUtils
@3.8.0
+#hasTag(Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#hasProperty(Ljava/lang/String;Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/context/query/Matcher;
+#findStatisticOnDescendants(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#findStatisticOnDescendants(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;
+#findOperationStatisticOnChildren(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Lorg/ehcache/shadow/org/terracotta/statistics/OperationStatistic;
+#findTiers(Lorg/ehcache/Cache;)[Ljava/lang/String;
+#findLowestTier([Ljava/lang/String;)Ljava/lang/String;
+#hasOperationStat(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Z
+#registerClearNotification(Ljava/lang/String;Lorg/ehcache/Cache;Ljava/util/function/Consumer;)V
@3.9.1
-###org/ehcache/core/statistics/StatsUtils

+###org/ehcache/xml/ConfigurationParser$FatalErrorHandler
@3.7.0
+#<init>()V
+#warning(Lorg/xml/sax/SAXParseException;)V
+#error(Lorg/xml/sax/SAXParseException;)V
+#fatalError(Lorg/xml/sax/SAXParseException;)V
@3.10.0-alpha0
-###org/ehcache/xml/ConfigurationParser$FatalErrorHandler

+###org/terracotta/management/model/call/ContextualCall
@3.8.0
+#<init>(Lorg/terracotta/management/model/context/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/model/call/Parameter;)V
+#getCapability()Ljava/lang/String;
+#getContext()Lorg/terracotta/management/model/context/Context;
+#setContext(Lorg/terracotta/management/model/context/Context;)V
+#getMethodName()Ljava/lang/String;
+#getParameters()[Lorg/terracotta/management/model/call/Parameter;
+#getReturnType()Ljava/lang/Class;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.9.1
-###org/terracotta/management/model/call/ContextualCall

+###org/terracotta/management/model/call/ContextualReturn
@3.8.0
+#hasExecuted()Z
+#errorThrown()Z
+#getValue()Ljava/lang/Object;
+#setContext(Lorg/terracotta/management/model/context/Context;)V
+#getContext()Lorg/terracotta/management/model/context/Context;
+#of(Ljava/lang/String;Lorg/terracotta/management/model/context/Context;Ljava/lang/String;Ljava/lang/Object;)Lorg/terracotta/management/model/call/ContextualReturn;
+#notExecuted(Ljava/lang/String;Lorg/terracotta/management/model/context/Context;Ljava/lang/String;)Lorg/terracotta/management/model/call/ContextualReturn;
+#error(Ljava/lang/String;Lorg/terracotta/management/model/context/Context;Ljava/lang/String;Ljava/util/concurrent/ExecutionException;)Lorg/terracotta/management/model/call/ContextualReturn;
+#getCapability()Ljava/lang/String;
+#getMethodName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/call/ContextualReturn

+###org/terracotta/management/model/call/Parameter
@3.8.0
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#getValue()Ljava/lang/Object;
+#getClassName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/call/Parameter

+###org/terracotta/management/model/capabilities/Capability
@3.8.0
+#getName()Ljava/lang/String;
+#getDescriptors()Ljava/util/Collection;
+#getDescriptors(Ljava/lang/Class;)Ljava/util/Collection;
+#getCapabilityContext()Lorg/terracotta/management/model/capabilities/context/CapabilityContext;
@3.9.1
-###org/terracotta/management/model/capabilities/Capability

+###org/terracotta/management/model/capabilities/DefaultCapability
@3.8.0
+#<init>(Ljava/lang/String;Lorg/terracotta/management/model/capabilities/context/CapabilityContext;[Lorg/terracotta/management/model/capabilities/descriptors/Descriptor;)V
+#<init>(Ljava/lang/String;Lorg/terracotta/management/model/capabilities/context/CapabilityContext;Ljava/util/Collection;)V
+#getName()Ljava/lang/String;
+#getDescriptors()Ljava/util/Collection;
+#getDescriptors(Ljava/lang/Class;)Ljava/util/Collection;
+#getCapabilityContext()Lorg/terracotta/management/model/capabilities/context/CapabilityContext;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/capabilities/DefaultCapability

+###org/terracotta/management/model/capabilities/context/CapabilityContext$Attribute
@3.8.0
+#<init>(Ljava/lang/String;Z)V
+#getName()Ljava/lang/String;
+#isRequired()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.9.1
-###org/terracotta/management/model/capabilities/context/CapabilityContext$Attribute

+###org/terracotta/management/model/capabilities/context/CapabilityContext
@3.8.0
+#<init>([Lorg/terracotta/management/model/capabilities/context/CapabilityContext$Attribute;)V
+#<init>(Ljava/util/Collection;)V
+#getAttributes()Ljava/util/Collection;
+#getRequiredAttributeNames()Ljava/util/Collection;
+#getRequiredAttributes()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/capabilities/context/CapabilityContext

+###org/terracotta/management/model/capabilities/descriptors/CallDescriptor$Parameter
@3.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/capabilities/descriptors/CallDescriptor$Parameter

+###org/terracotta/management/model/capabilities/descriptors/CallDescriptor
@3.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/terracotta/management/model/capabilities/descriptors/CallDescriptor$Parameter;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getReturnType()Ljava/lang/String;
+#getParameters()Ljava/util/List;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/capabilities/descriptors/CallDescriptor

+###org/terracotta/management/model/capabilities/descriptors/Descriptor
@3.8.0
@3.9.1
-###org/terracotta/management/model/capabilities/descriptors/Descriptor

+###org/terracotta/management/model/capabilities/descriptors/Settings$Builder
@3.8.0
+#build(Lorg/terracotta/management/model/capabilities/descriptors/Settings;Ljava/lang/Object;)V
@3.9.1
-###org/terracotta/management/model/capabilities/descriptors/Settings$Builder

+###org/terracotta/management/model/capabilities/descriptors/Settings
@3.8.0
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/terracotta/management/model/capabilities/descriptors/Settings;)V
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getOrDefault(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#getString(Ljava/lang/String;)Ljava/lang/String;
+#getStringOrDefault(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getNumber(Ljava/lang/String;)Ljava/lang/Number;
+#getNumberOrDefault(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/Number;
+#getBool(Ljava/lang/String;)Z
+#getBoolOrDefault(Ljava/lang/String;Z)Z
+#getStrings(Ljava/lang/String;)[Ljava/lang/String;
+#getStringsOrDefault(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#set(Ljava/lang/String;Lorg/terracotta/management/model/capabilities/descriptors/Settings;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#set(Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#set(Ljava/lang/String;Ljava/lang/Number;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#set(Ljava/lang/String;Z)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#set(Ljava/lang/String;Ljava/lang/Enum;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#set(Ljava/lang/String;Ljava/lang/Class;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#set(Ljava/lang/String;[Ljava/lang/String;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#with(Ljava/lang/String;Ljava/lang/Object;Lorg/terracotta/management/model/capabilities/descriptors/Settings$Builder;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#withEach(Ljava/lang/String;Ljava/util/Collection;Lorg/terracotta/management/model/capabilities/descriptors/Settings$Builder;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
+#withEach(Ljava/lang/String;Ljava/util/Map;Lorg/terracotta/management/model/capabilities/descriptors/Settings$Builder;)Lorg/terracotta/management/model/capabilities/descriptors/Settings;
@3.9.1
-###org/terracotta/management/model/capabilities/descriptors/Settings

+###org/terracotta/management/model/capabilities/descriptors/StatisticDescriptor
@3.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/capabilities/descriptors/StatisticDescriptor

+###org/terracotta/management/model/cluster/ClientIdentifier
@3.8.0
+#getConnectionUid()Ljava/lang/String;
+#getHostAddress()Ljava/lang/String;
+#getPid()J
+#getName()Ljava/lang/String;
+#getVmId()Ljava/lang/String;
+#getClientId()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#create(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/management/model/cluster/ClientIdentifier;
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/management/model/cluster/ClientIdentifier;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/management/model/cluster/ClientIdentifier;
@3.9.1
-###org/terracotta/management/model/cluster/ClientIdentifier

+###org/terracotta/management/model/context/Context
@3.8.0
+#toMap()Ljava/util/Map;
+#with(Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/management/model/context/Context;
+#with(Ljava/util/Map;)Lorg/terracotta/management/model/context/Context;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#size()I
+#isEmpty()Z
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#contains(Lorg/terracotta/management/model/context/Context;)Z
+#contains(Ljava/lang/String;)Z
+#contains(Ljava/lang/String;Ljava/lang/String;)Z
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/management/model/context/Context;
+#create(Ljava/util/Map;)Lorg/terracotta/management/model/context/Context;
+#empty()Lorg/terracotta/management/model/context/Context;
@3.9.1
-###org/terracotta/management/model/context/Context

+###org/terracotta/management/model/context/ContextContainer
@3.8.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/terracotta/management/model/context/ContextContainer;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#getSubContexts()Ljava/util/Collection;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/context/ContextContainer

+###org/terracotta/management/model/context/Contextual
@3.8.0
+#getContext()Lorg/terracotta/management/model/context/Context;
+#setContext(Lorg/terracotta/management/model/context/Context;)V
@3.9.1
-###org/terracotta/management/model/context/Contextual

+###org/terracotta/management/model/message/DefaultManagementCallMessage
@3.8.0
+#<init>(Ljava/lang/String;Lorg/terracotta/management/sequence/Sequence;Ljava/lang/String;[Lorg/terracotta/management/model/context/Contextual;)V
+#getManagementCallIdentifier()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/message/DefaultManagementCallMessage

+###org/terracotta/management/model/message/DefaultMessage
@3.8.0
+#<init>(Lorg/terracotta/management/sequence/Sequence;Ljava/lang/String;[Lorg/terracotta/management/model/context/Contextual;)V
+#unwrap(Ljava/lang/Class;)Ljava/util/List;
+#getSequence()Lorg/terracotta/management/sequence/Sequence;
+#getTimestamp()J
+#getType()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/message/DefaultMessage

+###org/terracotta/management/model/message/ManagementCallMessage
@3.8.0
+#getManagementCallIdentifier()Ljava/lang/String;
@3.9.1
-###org/terracotta/management/model/message/ManagementCallMessage

+###org/terracotta/management/model/message/Message
@3.8.0
+#unwrap(Ljava/lang/Class;)Ljava/util/List;
+#getType()Ljava/lang/String;
+#getSequence()Lorg/terracotta/management/sequence/Sequence;
+#getTimestamp()J
@3.9.1
-###org/terracotta/management/model/message/Message

+###org/terracotta/management/model/notification/ContextualNotification
@3.8.0
+#<init>(Lorg/terracotta/management/model/context/Context;Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Lorg/terracotta/management/model/context/Context;Ljava/lang/String;)V
+#setContext(Lorg/terracotta/management/model/context/Context;)V
+#getContext()Lorg/terracotta/management/model/context/Context;
+#getAttributes()Ljava/util/Map;
+#getType()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/notification/ContextualNotification

+###org/terracotta/management/model/stats/ContextualStatistics
@3.8.0
+#<init>(Ljava/lang/String;Lorg/terracotta/management/model/context/Context;Ljava/util/Map;)V
+#getCapability()Ljava/lang/String;
+#size()I
+#isEmpty()Z
+#getStatistics()Ljava/util/Map;
+#getLatestSampleValues()Ljava/util/Map;
+#getLatestSamples()Ljava/util/Map;
+#hasStatistic(Ljava/lang/String;)Z
+#getStatistic(Ljava/lang/String;)Ljava/util/Optional;
+#getLatestSampleValue(Ljava/lang/String;)Ljava/util/Optional;
+#getLatestSample(Ljava/lang/String;)Ljava/util/Optional;
+#setContext(Lorg/terracotta/management/model/context/Context;)V
+#getContext()Lorg/terracotta/management/model/context/Context;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.9.1
-###org/terracotta/management/model/stats/ContextualStatistics

+###org/terracotta/management/model/stats/DelegatingSample
@3.8.0
+#<init>(JLjava/io/Serializable;)V
+#getSample()Ljava/io/Serializable;
+#getTimestamp()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.9.1
-###org/terracotta/management/model/stats/DelegatingSample

+###org/terracotta/management/model/stats/DelegatingStatistic
@3.8.0
+#<init>(Lorg/ehcache/shadow/org/terracotta/statistics/registry/Statistic;)V
+#<init>(Lorg/terracotta/management/model/stats/StatisticType;)V
+#<init>(Lorg/terracotta/management/model/stats/StatisticType;Lorg/terracotta/management/model/stats/Sample;)V
+#<init>(Lorg/terracotta/management/model/stats/StatisticType;Ljava/util/List;)V
+#getType()Lorg/terracotta/management/model/stats/StatisticType;
+#isEmpty()Z
+#getSamples()Ljava/util/List;
+#getLatestSampleValue()Ljava/util/Optional;
+#getLatestSample()Ljava/util/Optional;
+#convertStats(Lorg/terracotta/management/model/stats/Statistic;)Lorg/ehcache/shadow/org/terracotta/statistics/registry/Statistic;
@3.9.1
-###org/terracotta/management/model/stats/DelegatingStatistic

+###org/terracotta/management/model/stats/Sample
@3.8.0
+#getSample()Ljava/io/Serializable;
+#getTimestamp()J
@3.9.1
-###org/terracotta/management/model/stats/Sample

+###org/terracotta/management/model/stats/Statistic
@3.8.0
+#getType()Lorg/terracotta/management/model/stats/StatisticType;
+#isEmpty()Z
+#getSamples()Ljava/util/List;
+#getLatestSampleValue()Ljava/util/Optional;
+#getLatestSample()Ljava/util/Optional;
+#toString()Ljava/lang/String;
@3.9.1
-###org/terracotta/management/model/stats/Statistic

+###org/terracotta/management/model/stats/StatisticRegistry
@3.8.0
+#<init>(Ljava/lang/Object;Ljava/util/function/LongSupplier;)V
+#getDescriptors()Ljava/util/Collection;
+#collect(Lorg/terracotta/management/model/stats/StatisticRegistry;Ljava/util/Collection;J)Ljava/util/Map;
@3.9.1
-###org/terracotta/management/model/stats/StatisticRegistry

+###org/terracotta/management/model/stats/StatisticType
@3.8.0
+#values()[Lorg/terracotta/management/model/stats/StatisticType;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/management/model/stats/StatisticType;
+#convert(Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;)Lorg/terracotta/management/model/stats/StatisticType;
+#convert(Lorg/terracotta/management/model/stats/StatisticType;)Lorg/ehcache/shadow/org/terracotta/statistics/StatisticType;
@3.9.1
-###org/terracotta/management/model/stats/StatisticType

+###org/terracotta/management/sequence/BoundaryFlakeSequence
@3.8.0
+#getTimestamp()J
+#getNodeId()J
+#getSequenceId()J
+#toHexString()Ljava/lang/String;
+#toBytes()[B
+#toString()Ljava/lang/String;
+#compareTo(Lorg/terracotta/management/sequence/Sequence;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#fromBytes([B)Lorg/terracotta/management/sequence/BoundaryFlakeSequence;
+#fromHexString(Ljava/lang/String;)Lorg/terracotta/management/sequence/BoundaryFlakeSequence;
+#compareTo(Ljava/lang/Object;)I
@3.9.1
-###org/terracotta/management/sequence/BoundaryFlakeSequence

+###org/terracotta/management/sequence/BoundaryFlakeSequenceGenerator
@3.8.0
+#<init>()V
+#<init>(Lorg/terracotta/management/sequence/TimeSource;Lorg/terracotta/management/sequence/NodeIdSource;)V
+#getTimeSource()Lorg/terracotta/management/sequence/TimeSource;
+#next()Lorg/terracotta/management/sequence/Sequence;
@3.9.1
-###org/terracotta/management/sequence/BoundaryFlakeSequenceGenerator

+###org/terracotta/management/sequence/NodeIdSource$Fixed
@3.8.0
+#<init>(J)V
+#getNodeId()J
@3.9.1
-###org/terracotta/management/sequence/NodeIdSource$Fixed

+###org/terracotta/management/sequence/NodeIdSource
@3.8.0
+#getNodeId()J
@3.9.1
-###org/terracotta/management/sequence/NodeIdSource

+###org/terracotta/management/sequence/Sequence
@3.8.0
+#getTimestamp()J
+#getNodeId()J
+#getSequenceId()J
+#toHexString()Ljava/lang/String;
+#toBytes()[B
@3.9.1
-###org/terracotta/management/sequence/Sequence

+###org/terracotta/management/sequence/SequenceGenerator
@3.8.0
+#getTimeSource()Lorg/terracotta/management/sequence/TimeSource;
+#next()Lorg/terracotta/management/sequence/Sequence;
@3.9.1
-###org/terracotta/management/sequence/SequenceGenerator

+###org/terracotta/management/sequence/TimeSource$Fixed
@3.8.0
+#<init>(J)V
+#getTimestamp()J
@3.9.1
-###org/terracotta/management/sequence/TimeSource$Fixed

+###org/terracotta/management/sequence/TimeSource
@3.8.0
+#getTimestamp()J
@3.9.1
-###org/terracotta/management/sequence/TimeSource

+###org/terracotta/management/sequence/perf/PerfTest
@3.8.0
+#<init>()V
+#main([Ljava/lang/String;)V
@3.9.1
-###org/terracotta/management/sequence/perf/PerfTest

+###org/ehcache/core/internal/util/ConcurrentWeakIdentityHashMap
@3.0.0.rc1
+#<init>()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
@3.2.2
-###org/ehcache/core/internal/util/ConcurrentWeakIdentityHashMap

+###org/ehcache/impl/internal/events/NullStoreEventDispatcher
@3.0.0.m5
+#<init>()V
+#nullStoreEventDispatcher()Lorg/ehcache/core/events/StoreEventDispatcher;
+#eventSink()Lorg/ehcache/core/events/StoreEventSink;
+#releaseEventSink(Lorg/ehcache/core/events/StoreEventSink;)V
+#releaseEventSinkAfterFailure(Lorg/ehcache/core/events/StoreEventSink;Ljava/lang/Throwable;)V
+#addEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
+#removeEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
+#addEventFilter(Lorg/ehcache/core/spi/cache/events/StoreEventFilter;)V
+#setEventOrdering(Z)V
+#isEventOrdering()Z
@3.0.0.rc2
+#addEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#removeEventListener(Lorg/ehcache/core/spi/store/events/StoreEventListener;)V
+#addEventFilter(Lorg/ehcache/core/spi/store/events/StoreEventFilter;)V
-#addEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
-#removeEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
-#addEventFilter(Lorg/ehcache/core/spi/cache/events/StoreEventFilter;)V
@3.0.0.rc3
+#reset(Lorg/ehcache/core/events/StoreEventSink;)V
@3.2.2
-###org/ehcache/impl/internal/events/NullStoreEventDispatcher

+###org/ehcache/impl/internal/store/AbstractValueHolder
@3.0.0.rc2
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#setExpirationTime(JLjava/util/concurrent/TimeUnit;)V
+#accessed(JLorg/ehcache/expiry/Duration;)V
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#setLastAccessTime(JLjava/util/concurrent/TimeUnit;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
+#toString()Ljava/lang/String;
@3.2.2
-###org/ehcache/impl/internal/store/AbstractValueHolder

+###org/ehcache/impl/serialization/CompactPersistentJavaSerializer
@3.0.0.m5
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/core/spi/service/FileBasedPersistenceContext;)V
+#close()V
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
@3.2.0.beta1
-###org/ehcache/impl/serialization/CompactPersistentJavaSerializer

+###org/terracotta/context/extended/ExposedStatistic
@3.0.0.m2
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Set;Ljava/util/Map;Ljava/lang/Object;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#getTags()Ljava/util/Set;
+#getProperties()Ljava/util/Map;
+#getStat()Ljava/lang/Object;
@3.1.4
-###org/terracotta/context/extended/ExposedStatistic

+###org/terracotta/context/extended/OperationType
@3.0.0.m2
+#required()Z
+#context()Lorg/terracotta/context/query/Query;
+#type()Ljava/lang/Class;
+#operationName()Ljava/lang/String;
+#tags()Ljava/util/Set;
@3.1.4
-###org/terracotta/context/extended/OperationType

+###org/ehcache/event/CacheEventListenerProvider
@3.0.0.m2
+#createEventListener(Ljava/lang/String;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/event/CacheEventListener;
+#releaseEventListener(Lorg/ehcache/event/CacheEventListener;)V
@3.0.0
-###org/ehcache/event/CacheEventListenerProvider

+###org/ehcache/exceptions/CachePersistenceException
@3.0.0.m2
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.0.0
-###org/ehcache/exceptions/CachePersistenceException

+###org/ehcache/spi/LifeCycled
@3.0.0.m2
+#init()V
+#close()V
@3.0.0
-###org/ehcache/spi/LifeCycled

+###org/ehcache/spi/loaderwriter/WriteBehindDecoratorLoaderWriterProvider
@3.0.0.m2
+#createWriteBehindDecoratorLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#releaseWriteBehindDecoratorCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m4
-###org/ehcache/spi/loaderwriter/WriteBehindDecoratorLoaderWriterProvider

+###org/ehcache/spi/service/SupplementaryService
@3.0.0.m2
@3.0.0.rc2
-###org/ehcache/spi/service/SupplementaryService

+###org/ehcache/CacheConfigurationProperty
@3.0.0.m2
+#values()[Lorg/ehcache/CacheConfigurationProperty;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/CacheConfigurationProperty;
@3.0.0.m5
-###org/ehcache/CacheConfigurationProperty

+###org/ehcache/RuntimeConfiguration
@3.0.0.m2
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/events/CacheEventNotificationService;)V
+#updateResourcePools(Lorg/ehcache/config/ResourcePools;)V
+#getServiceConfigurations()Ljava/util/Collection;
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getEvictionPrioritizer()Lorg/ehcache/config/EvictionPrioritizer;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#addCacheConfigurationListener(Ljava/util/List;)Z
+#removeCacheConfigurationListener(Lorg/ehcache/CacheConfigurationChangeListener;)Z
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/Set;)V
@3.0.0.m3
-###org/ehcache/RuntimeConfiguration

+###org/ehcache/UserManagedCacheBuilder
@3.0.0.m2
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#build(Z)Lorg/ehcache/UserManagedCache;
+#with(Lorg/ehcache/config/UserManagedCacheConfiguration;)Lorg/ehcache/UserManagedCacheBuilder;
+#identifier(Ljava/lang/String;)Lorg/ehcache/UserManagedCacheBuilder;
+#vetoEviction(Lorg/ehcache/config/EvictionVeto;)Lorg/ehcache/UserManagedCacheBuilder;
+#prioritizeEviction(Lorg/ehcache/config/EvictionPrioritizer;)Lorg/ehcache/UserManagedCacheBuilder;
+#loadingAndWritingWith(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)Lorg/ehcache/UserManagedCacheBuilder;
+#withClassLoader(Ljava/lang/ClassLoader;)Lorg/ehcache/UserManagedCacheBuilder;
+#withExpiry(Lorg/ehcache/expiry/Expiry;)Lorg/ehcache/UserManagedCacheBuilder;
+#withCacheEvents(Lorg/ehcache/events/CacheEventNotificationService;)Lorg/ehcache/UserManagedCacheBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/UserManagedCacheBuilder;
+#withResourcePools(Lorg/ehcache/config/ResourcePoolsBuilder;)Lorg/ehcache/UserManagedCacheBuilder;
+#newUserManagedCacheBuilder(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/UserManagedCacheBuilder;
+#using(Lorg/ehcache/spi/service/Service;)Lorg/ehcache/UserManagedCacheBuilder;
+#using(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/UserManagedCacheBuilder;
@3.0.0.m3
+#using(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/UserManagedCacheBuilder;
-#using(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/UserManagedCacheBuilder;
@3.0.0.m4
+#withCacheEvents(Lorg/ehcache/events/CacheEventDispatcher;)Lorg/ehcache/UserManagedCacheBuilder;
-#withCacheEvents(Lorg/ehcache/events/CacheEventNotificationService;)Lorg/ehcache/UserManagedCacheBuilder;
@3.0.0.m5
-###org/ehcache/UserManagedCacheBuilder

+###org/ehcache/InternalRuntimeConfiguration
@3.0.0.m2
+#addCacheConfigurationListener(Ljava/util/List;)Z
+#removeCacheConfigurationListener(Lorg/ehcache/CacheConfigurationChangeListener;)Z
@3.0.0.m5
-###org/ehcache/InternalRuntimeConfiguration

+###org/ehcache/CacheConfigurationChangeEvent
@3.0.0.m2
+#<init>(Lorg/ehcache/CacheConfigurationProperty;Ljava/lang/Object;Ljava/lang/Object;)V
+#getProperty()Lorg/ehcache/CacheConfigurationProperty;
+#getNewValue()Ljava/lang/Object;
+#getOldValue()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/CacheConfigurationChangeEvent

+###org/ehcache/CacheConfigurationChangeListener
@3.0.0.m2
+#cacheConfigurationChange(Lorg/ehcache/CacheConfigurationChangeEvent;)V
@3.0.0.m5
-###org/ehcache/CacheConfigurationChangeListener

+###org/ehcache/PersistentUserManagedEhcache
@3.0.0.m2
+#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/cache/Store$PersistentStoreConfiguration;Lorg/ehcache/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/lang/String;)V
+#toMaintenance()Lorg/ehcache/Maintainable;
+#init()V
+#close()V
+#getStatus()Lorg/ehcache/Status;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#containsKey(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)V
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#clear()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#iterator()Ljava/util/Iterator;
@3.0.0.m3
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/lang/String;)V
-#<init>(Lorg/ehcache/RuntimeConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/cache/Store$PersistentStoreConfiguration;Lorg/ehcache/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/lang/String;)V
@3.0.0.m4
+#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventDispatcher;Ljava/lang/String;)V
-#<init>(Lorg/ehcache/config/CacheConfiguration;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/spi/service/LocalPersistenceService;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/events/CacheEventNotificationService;Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/PersistentUserManagedEhcache

+###org/ehcache/statistics/StoreOperationOutcomes$EvictionOutcome
@3.0.0.m2
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$EvictionOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$EvictionOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$EvictionOutcome

+###org/ehcache/spi/cache/AbstractValueHolder
@3.0.0.m2
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#setExpirationTime(JLjava/util/concurrent/TimeUnit;)V
+#accessed(JLorg/ehcache/expiry/Duration;)V
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#setLastAccessTime(JLjava/util/concurrent/TimeUnit;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
+#toString()Ljava/lang/String;
@3.0.0.m5
-###org/ehcache/spi/cache/AbstractValueHolder

+###org/ehcache/spi/cache/CacheStoreHelper
@3.0.0.m2
+#cacheEntry(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;Lorg/ehcache/internal/TimeSource;)Lorg/ehcache/Cache$Entry;
@3.0.0.m5
-###org/ehcache/spi/cache/CacheStoreHelper

+###org/ehcache/spi/cache/ConfigurationChangeSupport
@3.0.0.m2
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.m5
-###org/ehcache/spi/cache/ConfigurationChangeSupport

+###org/ehcache/spi/cache/tiering/LowerCachingTier$Provider
@3.0.0.m2
+#createCachingTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/LowerCachingTier;
+#releaseCachingTier(Lorg/ehcache/spi/cache/tiering/LowerCachingTier;)V
+#initCachingTier(Lorg/ehcache/spi/cache/tiering/LowerCachingTier;)V
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/LowerCachingTier$Provider

+###org/ehcache/spi/cache/tiering/LowerCachingTier
@3.0.0.m2
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
+#clear()V
+#setInvalidationListener(Lorg/ehcache/spi/cache/tiering/CachingTier$InvalidationListener;)V
@3.0.0.m4
+#installMapping(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/LowerCachingTier

+###org/ehcache/spi/service/FileBasedPersistenceContext
@3.0.0.m2
+#getDirectory()Ljava/io/File;
@3.0.0.m5
-###org/ehcache/spi/service/FileBasedPersistenceContext

+###org/ehcache/events/CacheEventNotificationListenerServiceProvider
@3.0.0.m2
+#createCacheEventNotificationService(Lorg/ehcache/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/events/CacheEventNotificationService;
+#releaseCacheEventNotificationService(Lorg/ehcache/events/CacheEventNotificationService;)V
@3.0.0.m4
-###org/ehcache/events/CacheEventNotificationListenerServiceProvider

+###org/ehcache/config/SerializerConfiguration
@3.0.0.m2
+#getType()Lorg/ehcache/config/SerializerConfiguration$Type;
@3.0.0.m5
-###org/ehcache/config/SerializerConfiguration

+###org/ehcache/config/SerializerConfiguration$Type
@3.0.0.m2
+#values()[Lorg/ehcache/config/SerializerConfiguration$Type;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/SerializerConfiguration$Type;
@3.0.0.m5
-###org/ehcache/config/SerializerConfiguration$Type

+###org/ehcache/config/UserManagedCacheConfiguration
@3.0.0.m2
+#builder(Lorg/ehcache/UserManagedCacheBuilder;)Lorg/ehcache/UserManagedCacheBuilder;
@3.0.0.m5
-###org/ehcache/config/UserManagedCacheConfiguration

+###org/ehcache/config/persistence/UserManagedPersistenceContext
@3.0.0.m2
+#<init>(Ljava/lang/String;Lorg/ehcache/spi/service/LocalPersistenceService;)V
+#builder(Lorg/ehcache/UserManagedCacheBuilder;)Lorg/ehcache/UserManagedCacheBuilder;
@3.0.0.m5
-###org/ehcache/config/persistence/UserManagedPersistenceContext

+###org/ehcache/config/persistence/CacheManagerPersistenceConfiguration
@3.0.0.m2
+#<init>(Ljava/io/File;)V
+#getRootDirectory()Ljava/io/File;
+#getServiceType()Ljava/lang/Class;
+#builder(Lorg/ehcache/CacheManagerBuilder;)Lorg/ehcache/CacheManagerBuilder;
@3.0.0.m5
-###org/ehcache/config/persistence/CacheManagerPersistenceConfiguration

+###org/ehcache/config/persistence/DefaultPersistenceConfiguration
@3.0.0.m2
+#<init>(Ljava/io/File;)V
+#getRootDirectory()Ljava/io/File;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/config/persistence/DefaultPersistenceConfiguration

+###org/ehcache/config/writebehind/WriteBehindConfigurationBuilder
@3.0.0.m2
+#newWriteBehindConfiguration()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#build()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
+#queueSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#enableCoalescing()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#disableCoalescing()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#batchSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#retry(II)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#rateLimit(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#delay(II)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#build()Ljava/lang/Object;
@3.0.0.m4
+#newBatchedWriteBehindConfiguration(JLjava/util/concurrent/TimeUnit;I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#newUnBatchedWriteBehindConfiguration()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#buildWith(Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#newWriteBehindConfiguration()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#build()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
-#enableCoalescing()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#disableCoalescing()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#batchSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#retry(II)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#rateLimit(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#delay(II)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
-#build()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/config/writebehind/WriteBehindConfigurationBuilder

+###org/ehcache/config/writebehind/ResilientCacheWriter
@3.0.0.m2
+#throwAway(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Exception;)V
@3.0.0.m4
-###org/ehcache/config/writebehind/ResilientCacheWriter

+###org/ehcache/config/writebehind/DefaultWriteBehindConfiguration
@3.0.0.m2
+#<init>()V
+#getMinWriteDelay()I
+#getMaxWriteDelay()I
+#getRateLimitPerSecond()I
+#isWriteCoalescing()Z
+#isWriteBatching()Z
+#getWriteBatchSize()I
+#getRetryAttempts()I
+#getRetryAttemptDelaySeconds()I
+#getWriteBehindConcurrency()I
+#getWriteBehindMaxQueueSize()I
+#setMinWriteDelay(I)V
+#setMaxWriteDelay(I)V
+#setRateLimitPerSecond(I)V
+#setWriteCoalescing(Z)V
+#setWriteBatchSize(I)V
+#setRetryAttempts(I)V
+#setRetryAttemptDelaySeconds(I)V
+#setWriteBehindConcurrency(I)V
+#setWriteBehindMaxQueueSize(I)V
+#getServiceType()Ljava/lang/Class;
@3.0.0.m3
+#setRetryAttempts(II)V
-#isWriteBatching()Z
-#setRetryAttempts(I)V
-#setRetryAttemptDelaySeconds(I)V
@3.0.0.m4
-###org/ehcache/config/writebehind/DefaultWriteBehindConfiguration

+###org/ehcache/util/ResourcePoolMerger
@3.0.0.m2
+#<init>()V
+#validateAndMerge(Lorg/ehcache/config/ResourcePools;Lorg/ehcache/config/ResourcePools;)Lorg/ehcache/config/ResourcePools;
@3.0.0.m5
-###org/ehcache/util/ResourcePoolMerger

+###org/ehcache/util/ConcurrentWeakIdentityHashMap
@3.0.0.m2
+#<init>()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
@3.0.0.m5
-###org/ehcache/util/ConcurrentWeakIdentityHashMap

+###org/ehcache/management/ManagementRegistry
@3.0.0.m2
+#register(Ljava/lang/Class;Ljava/lang/Object;)V
+#unregister(Ljava/lang/Class;Ljava/lang/Object;)V
+#capabilities()Ljava/util/Collection;
+#contexts()Ljava/util/Collection;
+#collectStatistics(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Collection;
+#callAction(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m4
+#getConfiguration()Lorg/ehcache/management/ManagementRegistryConfiguration;
+#addManagementProvider(Lorg/ehcache/management/providers/ManagementProvider;)V
+#removeManagementProvider(Lorg/ehcache/management/providers/ManagementProvider;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#getCapabilities()Ljava/util/Collection;
+#getContext()Lorg/terracotta/management/context/ContextContainer;
-#register(Ljava/lang/Class;Ljava/lang/Object;)V
-#unregister(Ljava/lang/Class;Ljava/lang/Object;)V
-#capabilities()Ljava/util/Collection;
-#contexts()Ljava/util/Collection;
-#collectStatistics(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Collection;
-#callAction(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/management/ManagementRegistry

+###org/ehcache/internal/TimeSourceService
@3.0.0.m2
+#getTimeSource()Lorg/ehcache/internal/TimeSource;
@3.0.0.m5
-###org/ehcache/internal/TimeSourceService

+###org/ehcache/spi/event/DefaultCacheEventListenerProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/event/DefaultCacheEventListenerProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/event/DefaultCacheEventListenerProvider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/event/DefaultCacheEventListenerProvider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/spi/event/DefaultCacheEventListenerProviderFactory

+###org/ehcache/spi/event/DefaultCacheEventListenerProvider
@3.0.0.m2
+#<init>(Lorg/ehcache/config/event/DefaultCacheEventListenerProviderConfiguration;)V
+#createEventListener(Ljava/lang/String;Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/event/CacheEventListener;
+#releaseEventListener(Lorg/ehcache/event/CacheEventListener;)V
@3.0.0.m5
-###org/ehcache/spi/event/DefaultCacheEventListenerProvider

+###org/ehcache/spi/serialization/DefaultSerializationProvider
@3.0.0.m2
+#<init>(Lorg/ehcache/config/serializer/DefaultSerializationProviderConfiguration;)V
+#createKeySerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
+#createValueSerializer(Ljava/lang/Class;Ljava/lang/ClassLoader;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/Serializer;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.0.0.m3
+#stop()V
@3.0.0.m4
+#releaseSerializer(Lorg/ehcache/spi/serialization/Serializer;)V
@3.0.0.m5
-###org/ehcache/spi/serialization/DefaultSerializationProvider

+###org/ehcache/spi/serialization/DefaultSerializationProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/DefaultSerializationProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/serialization/DefaultSerializationProvider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/serialization/DefaultSerializationProvider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/spi/serialization/DefaultSerializationProviderFactory

+###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterProvider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterProvider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterProviderFactory

+###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterProvider
@3.0.0.m2
+#<init>(Lorg/ehcache/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;)V
+#createCacheLoaderWriter(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
+#releaseCacheLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m5
-###org/ehcache/spi/loaderwriter/DefaultCacheLoaderWriterProvider

+###org/ehcache/config/event/DefaultCacheEventListenerConfiguration
@3.0.0.m2
+#<init>(Ljava/lang/Class;)V
+#getServiceType()Ljava/lang/Class;
+#setEventFiringMode(Lorg/ehcache/event/EventFiring;)V
+#setEventOrderingMode(Lorg/ehcache/event/EventOrdering;)V
+#setEventsToFireOn(Ljava/util/EnumSet;)V
+#firingMode()Lorg/ehcache/event/EventFiring;
+#orderingMode()Lorg/ehcache/event/EventOrdering;
+#fireOn()Ljava/util/EnumSet;
@3.0.0.m3
+#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/Class;)V
@3.0.0.m4
+#<init>(Lorg/ehcache/event/CacheEventListener;)V
@3.0.0.m5
-###org/ehcache/config/event/DefaultCacheEventListenerConfiguration

+###org/ehcache/config/event/DefaultCacheEventListenerProviderConfiguration
@3.0.0.m2
+#<init>()V
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/config/event/DefaultCacheEventListenerProviderConfiguration

+###org/ehcache/config/event/CacheEventListenerConfigurationBuilder
@3.0.0.m2
+#newEventListenerConfiguration(Ljava/lang/Class;Lorg/ehcache/event/EventType;[Lorg/ehcache/event/EventType;)Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#newEventListenerConfiguration(Ljava/lang/Class;Ljava/util/Set;)Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#eventOrdering(Lorg/ehcache/event/EventOrdering;)Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#ordered()Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#unordered()Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#firingMode(Lorg/ehcache/event/EventFiring;)Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#synchronous()Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#asynchronous()Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#build()Lorg/ehcache/event/CacheEventListenerConfiguration;
+#build()Ljava/lang/Object;
@3.0.0.m3
+#constructedWith([Ljava/lang/Object;)Lorg/ehcache/config/event/CacheEventListenerConfigurationBuilder;
+#build()Lorg/ehcache/config/event/DefaultCacheEventListenerConfiguration;
-#build()Lorg/ehcache/event/CacheEventListenerConfiguration;
@3.0.0.m5
-###org/ehcache/config/event/CacheEventListenerConfigurationBuilder

+###org/ehcache/config/serializer/DefaultSerializerConfiguration
@3.0.0.m2
+#<init>(Ljava/lang/Class;Lorg/ehcache/config/SerializerConfiguration$Type;)V
+#getServiceType()Ljava/lang/Class;
+#getType()Lorg/ehcache/config/SerializerConfiguration$Type;
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/config/SerializerConfiguration$Type;)V
@3.0.0.m5
-###org/ehcache/config/serializer/DefaultSerializerConfiguration

+###org/ehcache/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration
@3.0.0.m2
+#<init>()V
+#getServiceType()Ljava/lang/Class;
+#addLoaderFor(Ljava/lang/String;Ljava/lang/Class;)Lorg/ehcache/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;
@3.0.0.m3
+#addLoaderFor(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/ehcache/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;
-#addLoaderFor(Ljava/lang/String;Ljava/lang/Class;)Lorg/ehcache/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration;
@3.0.0.m5
-###org/ehcache/config/loaderwriter/DefaultCacheLoaderWriterProviderConfiguration

+###org/ehcache/loaderwriter/writebehind/AggregateWriteBehindQueue
@3.0.0.m2
+#<init>(Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;)V
+#stop()V
+#setOperationsFilter(Lorg/ehcache/loaderwriter/writebehind/operations/OperationsFilter;)V
+#getQueueSize()J
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/AggregateWriteBehindQueue

+###org/ehcache/loaderwriter/writebehind/WriteBehindDecoratorLoaderWriterProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindDecoratorLoaderWriterProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindDecoratorLoaderWriterProvider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindDecoratorLoaderWriterProvider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/WriteBehindDecoratorLoaderWriterProviderFactory

+###org/ehcache/loaderwriter/writebehind/LocalHeapWriteBehindQueue
@3.0.0.m2
+#getQueueSize()J
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/LocalHeapWriteBehindQueue

+###org/ehcache/loaderwriter/writebehind/AbstractWriteBehindQueue
@3.0.0.m2
+#<init>(Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;)V
+#stop()V
+#setOperationsFilter(Lorg/ehcache/loaderwriter/writebehind/operations/OperationsFilter;)V
+#getQueueSize()J
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/AbstractWriteBehindQueue

+###org/ehcache/loaderwriter/writebehind/WriteBehindDecoratorLoaderWriter
@3.0.0.m2
+#getWriteBehindQueue()Lorg/ehcache/loaderwriter/writebehind/AggregateWriteBehindQueue;
+#<init>(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;)V
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/lang/Iterable;)V
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/WriteBehindDecoratorLoaderWriter

+###org/ehcache/loaderwriter/writebehind/WriteBehind
@3.0.0.m2
+#start()V
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#delete(Ljava/lang/Object;)V
+#stop()V
+#setOperationsFilter(Lorg/ehcache/loaderwriter/writebehind/operations/OperationsFilter;)V
+#getQueueSize()J
@3.0.0.m4
-#load(Ljava/lang/Object;)Ljava/lang/Object;
-#write(Ljava/lang/Object;Ljava/lang/Object;)V
-#delete(Ljava/lang/Object;)V
-#setOperationsFilter(Lorg/ehcache/loaderwriter/writebehind/operations/OperationsFilter;)V
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/WriteBehind

+###org/ehcache/loaderwriter/writebehind/AggregateWriteBehindQueue$WriteBehindQueueFactory
@3.0.0.m2
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/AggregateWriteBehindQueue$WriteBehindQueueFactory

+###org/ehcache/loaderwriter/writebehind/operations/WriteOperation
@3.0.0.m2
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;J)V
+#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createBatchOperation(Ljava/util/List;)Lorg/ehcache/loaderwriter/writebehind/operations/BatchOperation;
+#getKey()Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#getCreationTime()J
+#getType()Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.0.0.m4
-#getType()Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/operations/WriteOperation

+###org/ehcache/loaderwriter/writebehind/operations/OperationsFilter
@3.0.0.m2
+#filter(Ljava/util/List;)V
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/operations/OperationsFilter

+###org/ehcache/loaderwriter/writebehind/operations/CoalesceKeysFilter
@3.0.0.m2
+#<init>()V
+#filter(Ljava/util/List;)V
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/operations/CoalesceKeysFilter

+###org/ehcache/loaderwriter/writebehind/operations/DeleteOperation
@3.0.0.m2
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;J)V
+#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createBatchOperation(Ljava/util/List;)Lorg/ehcache/loaderwriter/writebehind/operations/BatchOperation;
+#getKey()Ljava/lang/Object;
+#getCreationTime()J
+#getType()Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.0.0.m4
-#getType()Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/operations/DeleteOperation

+###org/ehcache/loaderwriter/writebehind/operations/DeleteAllOperation
@3.0.0.m2
+#<init>(Ljava/lang/Iterable;)V
+#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/operations/DeleteAllOperation

+###org/ehcache/loaderwriter/writebehind/operations/WriteAllOperation
@3.0.0.m2
+#<init>(Ljava/lang/Iterable;)V
+#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/operations/WriteAllOperation

+###org/ehcache/loaderwriter/writebehind/operations/KeyBasedOperation
@3.0.0.m2
+#getKey()Ljava/lang/Object;
+#getCreationTime()J
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/operations/KeyBasedOperation

+###org/ehcache/loaderwriter/writebehind/operations/SingleOperation
@3.0.0.m2
+#performSingleOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createBatchOperation(Ljava/util/List;)Lorg/ehcache/loaderwriter/writebehind/operations/BatchOperation;
+#getType()Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
@3.0.0.m4
-#getType()Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/operations/SingleOperation

+###org/ehcache/loaderwriter/writebehind/operations/BatchOperation
@3.0.0.m2
+#performBatchOperation(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/operations/BatchOperation

+###org/ehcache/loaderwriter/writebehind/operations/SingleOperationType
@3.0.0.m2
+#values()[Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/loaderwriter/writebehind/operations/SingleOperationType;
@3.0.0.m4
-###org/ehcache/loaderwriter/writebehind/operations/SingleOperationType

+###org/ehcache/internal/DefaultTimeSourceService
@3.0.0.m2
+#<init>(Lorg/ehcache/internal/TimeSourceConfiguration;)V
+#getTimeSource()Lorg/ehcache/internal/TimeSource;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m5
-###org/ehcache/internal/DefaultTimeSourceService

+###org/ehcache/internal/TimeSourceServiceFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/TimeSourceService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/TimeSourceService;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/TimeSourceService;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/TimeSourceServiceFactory

+###org/ehcache/internal/events/CacheEventNotificationListenerServiceProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/events/CacheEventNotificationListenerServiceProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/events/CacheEventNotificationListenerServiceProvider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/events/CacheEventNotificationListenerServiceProvider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m4
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/events/CacheEventDispatcherFactory;
-#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/events/CacheEventNotificationListenerServiceProvider;
@3.0.0.m5
-###org/ehcache/internal/events/CacheEventNotificationListenerServiceProviderFactory

+###org/ehcache/internal/events/CacheEventNotificationListenerServiceProviderImpl
@3.0.0.m2
+#<init>()V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createCacheEventNotificationService(Lorg/ehcache/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/events/CacheEventNotificationService;
+#releaseCacheEventNotificationService(Lorg/ehcache/events/CacheEventNotificationService;)V
@3.0.0.m4
-###org/ehcache/internal/events/CacheEventNotificationListenerServiceProviderImpl

+###org/ehcache/internal/store/heap/service/OnHeapStoreServiceConfiguration
@3.0.0.m2
+#<init>()V
+#storeByValue()Z
+#storeByValue(Z)Lorg/ehcache/internal/store/heap/service/OnHeapStoreServiceConfiguration;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m3
-###org/ehcache/internal/store/heap/service/OnHeapStoreServiceConfiguration

+###org/ehcache/internal/store/tiering/CompoundCachingTierProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/tiering/CompoundCachingTier$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/store/tiering/CompoundCachingTier$Provider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/tiering/CompoundCachingTier$Provider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CompoundCachingTierProviderFactory

+###org/ehcache/internal/store/tiering/CompoundCachingTierServiceConfiguration
@3.0.0.m2
+#<init>()V
+#higherProvider()Ljava/lang/Class;
+#higherProvider(Ljava/lang/Class;)Lorg/ehcache/internal/store/tiering/CompoundCachingTierServiceConfiguration;
+#lowerProvider()Ljava/lang/Class;
+#lowerProvider(Ljava/lang/Class;)Lorg/ehcache/internal/store/tiering/CompoundCachingTierServiceConfiguration;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CompoundCachingTierServiceConfiguration

+###org/ehcache/internal/store/tiering/CompoundCachingTier$Provider
@3.0.0.m2
+#<init>()V
+#createCachingTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/spi/cache/tiering/CachingTier;)V
+#initCachingTier(Lorg/ehcache/spi/cache/tiering/CachingTier;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CompoundCachingTier$Provider

+###org/ehcache/internal/store/tiering/CompoundCachingTier
@3.0.0.m2
+#<init>(Lorg/ehcache/spi/cache/tiering/CachingTier;Lorg/ehcache/spi/cache/tiering/LowerCachingTier;)V
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
+#clear()V
+#setInvalidationListener(Lorg/ehcache/spi/cache/tiering/CachingTier$InvalidationListener;)V
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/cache/tiering/HigherCachingTier;Lorg/ehcache/spi/cache/tiering/LowerCachingTier;)V
-#<init>(Lorg/ehcache/spi/cache/tiering/CachingTier;Lorg/ehcache/spi/cache/tiering/LowerCachingTier;)V
-#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CompoundCachingTier

+###org/ehcache/internal/store/tiering/CacheStoreServiceConfiguration
@3.0.0.m2
+#<init>()V
+#cachingTierProvider(Ljava/lang/Class;)Lorg/ehcache/internal/store/tiering/CacheStoreServiceConfiguration;
+#authoritativeTierProvider(Ljava/lang/Class;)Lorg/ehcache/internal/store/tiering/CacheStoreServiceConfiguration;
+#cachingTierProvider()Ljava/lang/Class;
+#authoritativeTierProvider()Ljava/lang/Class;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/internal/store/tiering/CacheStoreServiceConfiguration

+###org/ehcache/internal/store/offheap/AbstractOffHeapStore
@3.0.0.m2
+#<init>(Ljava/lang/String;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/spi/cache/Store$ValueHolder;)Z
+#setInvalidationListener(Lorg/ehcache/spi/cache/tiering/CachingTier$InvalidationListener;)V
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#registerEmergencyValve(Ljava/util/concurrent/Callable;)V
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;)V
+#handleOversizeMappingException(Ljava/lang/Object;Lorg/terracotta/offheapstore/exceptions/OversizeMappingException;Ljava/util/concurrent/atomic/AtomicBoolean;)V
@3.0.0.m4
+#installMapping(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
@3.0.0.m5
-###org/ehcache/internal/store/offheap/AbstractOffHeapStore

+###org/ehcache/internal/store/offheap/OffHeapStoreProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/offheap/OffHeapStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/store/offheap/OffHeapStore$Provider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/offheap/OffHeapStore$Provider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/store/offheap/OffHeapStoreProviderFactory

+###org/ehcache/internal/store/offheap/EhcacheOffHeapBackingMap
@3.0.0.m2
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#nextIdFor(Ljava/lang/Object;)J
+#getAndPin(Ljava/lang/Object;)Ljava/lang/Object;
+#getAndSetMetadata(Ljava/lang/Object;II)Ljava/lang/Integer;
+#getSegments()Ljava/util/List;
+#shrinkOthers(I)Z
@3.0.0.m5
-###org/ehcache/internal/store/offheap/EhcacheOffHeapBackingMap

+###org/ehcache/internal/store/disk/EhcachePersistentConcurrentOffHeapClockCache
@3.0.0.m2
+#<init>(Ljava/io/ObjectInput;Lorg/ehcache/internal/store/disk/factories/EhcachePersistentSegmentFactory;)V
+#<init>(Lorg/ehcache/internal/store/disk/factories/EhcachePersistentSegmentFactory;I)V
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#nextIdFor(Ljava/lang/Object;)J
@3.0.0.m5
-###org/ehcache/internal/store/disk/EhcachePersistentConcurrentOffHeapClockCache

+###org/ehcache/internal/store/disk/OffHeapDiskStore
@3.0.0.m2
+#<init>(Lorg/ehcache/spi/service/FileBasedPersistenceContext;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/internal/TimeSource;J)V
+#getConfigurationChangeListeners()Ljava/util/List;
+#persistent(Lorg/terracotta/offheapstore/storage/portability/Portability;)Lorg/terracotta/offheapstore/disk/persistent/PersistentPortability;
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/service/FileBasedPersistenceContext;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;J)V
-#<init>(Lorg/ehcache/spi/service/FileBasedPersistenceContext;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/internal/TimeSource;J)V
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/service/FileBasedPersistenceContext;Lorg/ehcache/spi/service/ExecutionService;Ljava/lang/String;ILorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;J)V
-#<init>(Lorg/ehcache/spi/service/FileBasedPersistenceContext;Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;J)V
@3.0.0.m5
-###org/ehcache/internal/store/disk/OffHeapDiskStore

+###org/ehcache/internal/store/disk/OffHeapDiskStoreProviderFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/disk/OffHeapDiskStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/internal/store/disk/OffHeapDiskStore$Provider;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/disk/OffHeapDiskStore$Provider;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/store/disk/OffHeapDiskStoreProviderFactory

+###org/ehcache/internal/store/disk/DiskWriteThreadPool
@3.0.0.m2
+#<init>(Ljava/lang/String;I)V
+#newInstance()Ljava/util/concurrent/ThreadPoolExecutor;
+#getTotalQueueSize()J
+#newInstance()Ljava/lang/Object;
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/service/ExecutionService;Ljava/lang/String;I)V
+#newInstance()Ljava/util/concurrent/ExecutorService;
-#<init>(Ljava/lang/String;I)V
-#newInstance()Ljava/util/concurrent/ThreadPoolExecutor;
-#getTotalQueueSize()J
@3.0.0.m5
-###org/ehcache/internal/store/disk/DiskWriteThreadPool

+###org/ehcache/internal/store/disk/OffHeapDiskStore$Provider
@3.0.0.m2
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/disk/OffHeapDiskStore;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#initStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createAuthoritativeTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
+#initAuthoritativeTier(Lorg/ehcache/spi/cache/tiering/AuthoritativeTier;)V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
@3.0.0.m4
+#<init>(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/internal/store/disk/OffHeapDiskStore$Provider

+###org/ehcache/internal/store/disk/OffHeapDiskStoreServiceConfiguration
@3.0.0.m2
+#<init>()V
+#getServiceType()Ljava/lang/Class;
@3.0.0.m4
-###org/ehcache/internal/store/disk/OffHeapDiskStoreServiceConfiguration

+###org/ehcache/internal/store/disk/factories/EhcachePersistentSegmentFactory
@3.0.0.m2
+#<init>(Lorg/terracotta/offheapstore/disk/paging/MappedPageSource;Lorg/terracotta/offheapstore/util/Factory;ILorg/ehcache/function/Predicate;Lorg/ehcache/internal/store/offheap/factories/EhcacheSegmentFactory$EhcacheSegment$EvictionListener;Z)V
+#newInstance()Lorg/ehcache/internal/store/disk/factories/EhcachePersistentSegmentFactory$EhcachePersistentSegment;
+#newInstance()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/store/disk/factories/EhcachePersistentSegmentFactory

+###org/ehcache/internal/store/disk/factories/EhcachePersistentSegmentFactory$EhcachePersistentSegment
@3.0.0.m2
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Z)Ljava/lang/Object;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Ljava/lang/Object;
+#computeIfPinned(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/Function;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putPinned(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#evict(IZ)Z
@3.0.0.m5
-###org/ehcache/internal/store/disk/factories/EhcachePersistentSegmentFactory$EhcachePersistentSegment

+###org/ehcache/internal/classes/ClassInstanceProvider$ConstructorArgument
@3.0.0.m2
+#<init>(Ljava/lang/Class;Ljava/lang/Object;)V
+#getClazz()Ljava/lang/Class;
+#getVal()Ljava/lang/Object;
@3.0.0.m3
-###org/ehcache/internal/classes/ClassInstanceProvider$ConstructorArgument

+###org/ehcache/internal/classes/ClassInstanceProviderConfiguration
@3.0.0.m2
+#<init>()V
+#getDefaults()Ljava/util/Map;
@3.0.0.m5
-###org/ehcache/internal/classes/ClassInstanceProviderConfiguration

+###org/ehcache/internal/classes/ClassInstanceConfiguration
@3.0.0.m2
+#<init>(Ljava/lang/Class;)V
+#getClazz()Ljava/lang/Class;
@3.0.0.m3
+#<init>(Ljava/lang/Class;[Ljava/lang/Object;)V
+#getArguments()[Ljava/lang/Object;
-#<init>(Ljava/lang/Class;)V
@3.0.0.m4
+#<init>(Ljava/lang/Object;)V
+#getInstance()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/classes/ClassInstanceConfiguration

+###org/ehcache/management/providers/AbstractActionProvider
@3.0.0.m2
+#<init>()V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#descriptions()Ljava/util/Set;
+#collectStatistics(Ljava/util/Map;[Ljava/lang/String;)Ljava/util/Collection;
@3.0.0.m4
-###org/ehcache/management/providers/AbstractActionProvider

+###org/ehcache/management/providers/ManagementProvider
@3.0.0.m2
+#managedType()Ljava/lang/Class;
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#descriptions()Ljava/util/Set;
+#capabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#collectStatistics(Ljava/util/Map;[Ljava/lang/String;)Ljava/util/Collection;
+#callAction(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m4
+#getDescriptors()Ljava/util/Collection;
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#getCapability()Lorg/terracotta/management/capabilities/Capability;
+#getCapabilityName()Ljava/lang/String;
+#collectStatistics(Lorg/terracotta/management/context/Context;Ljava/util/Collection;J)Ljava/util/Map;
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Ljava/lang/Object;
+#supports(Lorg/terracotta/management/context/Context;)Z
+#close()V
-#descriptions()Ljava/util/Set;
-#capabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
-#collectStatistics(Ljava/util/Map;[Ljava/lang/String;)Ljava/util/Collection;
-#callAction(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/management/providers/ManagementProvider

+###org/ehcache/management/providers/CapabilityContextProvider
@3.0.0.m2
+#<init>()V
+#managedType()Ljava/lang/Class;
+#capabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#callAction(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#contexts()Ljava/util/Collection;
@3.0.0.m4
-###org/ehcache/management/providers/CapabilityContextProvider

+###org/ehcache/management/providers/statistics/EhcacheStatisticsProvider
@3.0.0.m2
+#<init>(Lorg/ehcache/management/config/StatisticsProviderConfiguration;Ljava/util/concurrent/ScheduledExecutorService;)V
+#getConfiguration()Lorg/ehcache/management/config/StatisticsProviderConfiguration;
+#register(Lorg/ehcache/Ehcache;)V
+#unregister(Lorg/ehcache/Ehcache;)V
+#managedType()Ljava/lang/Class;
+#descriptions()Ljava/util/Set;
+#capabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#collectStatistics(Ljava/util/Map;[Ljava/lang/String;)Ljava/util/Collection;
+#callAction(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#unregister(Ljava/lang/Object;)V
+#register(Ljava/lang/Object;)V
@3.0.0.m4
+#<init>(Ljava/lang/String;Lorg/ehcache/management/config/StatisticsProviderConfiguration;Ljava/util/concurrent/ScheduledExecutorService;)V
+#getDescriptors()Ljava/util/Set;
+#collectStatistics(Lorg/terracotta/management/context/Context;Ljava/util/Collection;J)Ljava/util/Map;
+#getDescriptors()Ljava/util/Collection;
-#<init>(Lorg/ehcache/management/config/StatisticsProviderConfiguration;Ljava/util/concurrent/ScheduledExecutorService;)V
-#getConfiguration()Lorg/ehcache/management/config/StatisticsProviderConfiguration;
-#register(Lorg/ehcache/Ehcache;)V
-#unregister(Lorg/ehcache/Ehcache;)V
-#managedType()Ljava/lang/Class;
-#descriptions()Ljava/util/Set;
-#capabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
-#collectStatistics(Ljava/util/Map;[Ljava/lang/String;)Ljava/util/Collection;
-#callAction(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
-#unregister(Ljava/lang/Object;)V
-#register(Ljava/lang/Object;)V
@3.0.0.m5
+#<init>(Lorg/terracotta/management/context/Context;Lorg/ehcache/management/config/StatisticsProviderConfiguration;Ljava/util/concurrent/ScheduledExecutorService;)V
+#getCapability()Lorg/terracotta/management/capabilities/Capability;
-#<init>(Ljava/lang/String;Lorg/ehcache/management/config/StatisticsProviderConfiguration;Ljava/util/concurrent/ScheduledExecutorService;)V
@3.0.0.rc3
-###org/ehcache/management/providers/statistics/EhcacheStatisticsProvider

+###org/ehcache/management/providers/actions/EhcacheActionWrapper
@3.0.0.m2
+#<init>(Lorg/ehcache/Ehcache;)V
+#clear()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
@3.0.0.m4
+#<init>(Lorg/ehcache/Cache;)V
-#<init>(Lorg/ehcache/Ehcache;)V
@3.0.0.m5
+#<init>(Lorg/terracotta/management/context/Context;Lorg/ehcache/management/providers/CacheBinding;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#getTarget()Lorg/ehcache/management/providers/CacheBinding;
+#matches(Lorg/terracotta/management/context/Context;)Z
+#getTarget()Ljava/lang/Object;
-#<init>(Lorg/ehcache/Cache;)V
@3.0.0.rc3
-###org/ehcache/management/providers/actions/EhcacheActionWrapper

+###org/ehcache/management/providers/actions/EhcacheActionProvider
@3.0.0.m2
+#<init>()V
+#managedType()Ljava/lang/Class;
+#capabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#callAction(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m4
+#<init>(Ljava/lang/String;)V
+#getDescriptors()Ljava/util/Set;
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Ljava/lang/Object;
+#getDescriptors()Ljava/util/Collection;
-#<init>()V
-#managedType()Ljava/lang/Class;
-#capabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
-#callAction(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
+#<init>(Lorg/terracotta/management/context/Context;)V
-#<init>(Ljava/lang/String;)V
-#getDescriptors()Ljava/util/Set;
-#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Ljava/lang/Object;
-#getDescriptors()Ljava/util/Collection;
@3.0.0.rc3
-###org/ehcache/management/providers/actions/EhcacheActionProvider

+###org/ehcache/management/registry/DefaultManagementRegistry
@3.0.0.m2
+#<init>()V
+#<init>(Lorg/ehcache/management/registry/DefaultManagementRegistryConfiguration;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m4
+#<init>(Lorg/ehcache/management/ManagementRegistryConfiguration;)V
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V
+#getConfiguration()Lorg/ehcache/management/ManagementRegistryConfiguration;
+#addManagementProvider(Lorg/ehcache/management/providers/ManagementProvider;)V
+#removeManagementProvider(Lorg/ehcache/management/providers/ManagementProvider;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#getContext()Lorg/terracotta/management/context/ContextContainer;
+#withCapability(Ljava/lang/String;)Lorg/ehcache/management/CapabilityManagement;
+#getCapabilities()Ljava/util/Collection;
+#getManagementProvidersByCapability(Ljava/lang/String;)Ljava/util/List;
+#getManagementProvidersByCapability(Ljava/lang/String;)Ljava/util/Collection;
-#<init>(Lorg/ehcache/management/registry/DefaultManagementRegistryConfiguration;)V
@3.0.0.m5
-###org/ehcache/management/registry/DefaultManagementRegistry

+###org/ehcache/management/registry/AbstractManagementRegistry
@3.0.0.m2
+#contexts()Ljava/util/Collection;
+#collectStatistics(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Collection;
+#callAction(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#register(Ljava/lang/Class;Ljava/lang/Object;)V
+#unregister(Ljava/lang/Class;Ljava/lang/Object;)V
+#capabilities()Ljava/util/Collection;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m4
-###org/ehcache/management/registry/AbstractManagementRegistry

+###org/ehcache/management/registry/DefaultManagementRegistryConfiguration
@3.0.0.m2
+#<init>()V
+#addConfiguration(Lorg/ehcache/management/config/StatisticsProviderConfiguration;)Lorg/ehcache/management/registry/DefaultManagementRegistryConfiguration;
+#getConfigurationFor(Ljava/lang/Class;)Lorg/ehcache/management/config/StatisticsProviderConfiguration;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m4
+#setCacheManagerAlias(Ljava/lang/String;)Lorg/ehcache/management/registry/DefaultManagementRegistryConfiguration;
+#setStatisticsExecutorAlias(Ljava/lang/String;)Lorg/ehcache/management/registry/DefaultManagementRegistryConfiguration;
+#getCacheManagerAlias()Ljava/lang/String;
+#getStatisticsExecutorAlias()Ljava/lang/String;
@3.0.0.m5
+#setContext(Lorg/terracotta/management/context/Context;)Lorg/ehcache/management/registry/DefaultManagementRegistryConfiguration;
+#setCollectorExecutorAlias(Ljava/lang/String;)Lorg/ehcache/management/registry/DefaultManagementRegistryConfiguration;
+#getContext()Lorg/terracotta/management/context/Context;
+#getCollectorExecutorAlias()Ljava/lang/String;
-#getCacheManagerAlias()Ljava/lang/String;
@3.0.0.rc3
-###org/ehcache/management/registry/DefaultManagementRegistryConfiguration

+###org/ehcache/management/registry/DefaultManagementRegistryFactory
@3.0.0.m2
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/management/registry/DefaultManagementRegistry;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m3
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/management/registry/DefaultManagementRegistry;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/management/registry/DefaultManagementRegistry;
-#create(Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m4
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/management/ManagementRegistry;
-#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/management/registry/DefaultManagementRegistry;
@3.0.0.m5
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/management/ManagementRegistryService;
-#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/management/ManagementRegistry;
@3.0.0.rc3
-###org/ehcache/management/registry/DefaultManagementRegistryFactory

+###org/ehcache/management/config/StatisticsProviderConfiguration
@3.0.0.m2
+#averageWindowDuration()J
+#averageWindowUnit()Ljava/util/concurrent/TimeUnit;
+#historySize()I
+#historyInterval()J
+#historyIntervalUnit()Ljava/util/concurrent/TimeUnit;
+#timeToDisable()J
+#timeToDisableUnit()Ljava/util/concurrent/TimeUnit;
+#getStatisticsProviderType()Ljava/lang/Class;
@3.0.0.rc3
-###org/ehcache/management/config/StatisticsProviderConfiguration

+###org/ehcache/management/config/EhcacheStatisticsProviderConfiguration
@3.0.0.m2
+#<init>(JLjava/util/concurrent/TimeUnit;IJLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)V
+#averageWindowDuration()J
+#averageWindowUnit()Ljava/util/concurrent/TimeUnit;
+#historySize()I
+#historyInterval()J
+#historyIntervalUnit()Ljava/util/concurrent/TimeUnit;
+#timeToDisable()J
+#timeToDisableUnit()Ljava/util/concurrent/TimeUnit;
+#getStatisticsProviderType()Ljava/lang/Class;
@3.0.0.rc3
-###org/ehcache/management/config/EhcacheStatisticsProviderConfiguration

+###org/ehcache/management/utils/ConversionHelper
@3.0.0.m2
+#convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/management/utils/ConversionHelper

+###org/ehcache/management/utils/ClassLoadingHelper
@3.0.0.m2
+#toClasses(Ljava/lang/ClassLoader;[Ljava/lang/String;)[Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/management/utils/ClassLoadingHelper

+###org/ehcache/management/utils/ContextHelper
@3.0.0.m2
+#findCacheNames(Lorg/ehcache/EhcacheManager;)Ljava/util/Collection;
+#findCacheName(Lorg/ehcache/Ehcache;)Ljava/lang/String;
+#findCacheManagerName(Lorg/ehcache/EhcacheManager;)Ljava/lang/String;
+#findCacheManagerName(Lorg/ehcache/Ehcache;)Ljava/lang/String;
@3.0.0.m4
-###org/ehcache/management/utils/ContextHelper

+###org/ehcache/management/annotations/Named
@3.0.0.m2
+#value()Ljava/lang/String;
@3.0.0.m5
-###org/ehcache/management/annotations/Named

+###org/ehcache/management/annotations/Exposed
@3.0.0.m2
@3.0.0.m5
-###org/ehcache/management/annotations/Exposed

+###org/ehcache/jsr107/ServiceConfigurationParser
@3.0.0.m2
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parse(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.0.0.m3
-###org/ehcache/jsr107/ServiceConfigurationParser

+###org/ehcache/jsr107/DefaultJsr107SerializationProvider
@3.0.0.m2
+#<init>()V
@3.0.0.rc2
-###org/ehcache/jsr107/DefaultJsr107SerializationProvider

+###org/ehcache/jsr107/DefaultConfigurationResolver
@3.0.0.m2
@3.0.0.rc2
-###org/ehcache/jsr107/DefaultConfigurationResolver

+###org/ehcache/jsr107/Eh107CacheStatisticsMXBean
@3.0.0.m2
+#clear()V
+#getCacheHits()J
+#getCacheHitPercentage()F
+#getCacheMisses()J
+#getCacheMissPercentage()F
+#getCacheGets()J
+#getCachePuts()J
+#getCacheRemovals()J
+#getCacheEvictions()J
+#getAverageGetTime()F
+#getAveragePutTime()F
+#getAverageRemoveTime()F
@3.0.0.rc2
-###org/ehcache/jsr107/Eh107CacheStatisticsMXBean

+###org/ehcache/config/xml/model/SerializerType$Serializer
@3.0.0.m2
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/SerializerType$Serializer

+###org/ehcache/config/xml/model/EventType
@3.0.0.m2
+#values()[Lorg/ehcache/config/xml/model/EventType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/xml/model/EventType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/config/xml/model/EventType;
@3.0.0.m5
-###org/ehcache/config/xml/model/EventType

+###org/ehcache/config/xml/model/EventFiringType
@3.0.0.m2
+#values()[Lorg/ehcache/config/xml/model/EventFiringType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/xml/model/EventFiringType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/config/xml/model/EventFiringType;
@3.0.0.m5
-###org/ehcache/config/xml/model/EventFiringType

+###org/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts
@3.0.0.m2
+#<init>()V
+#getValue()Ljava/math/BigInteger;
+#setValue(Ljava/math/BigInteger;)V
+#getDelay()Ljava/math/BigInteger;
+#setDelay(Ljava/math/BigInteger;)V
@3.0.0.m3
-###org/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts

+###org/ehcache/config/xml/model/EventOrderingType
@3.0.0.m2
+#values()[Lorg/ehcache/config/xml/model/EventOrderingType;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/xml/model/EventOrderingType;
+#value()Ljava/lang/String;
+#fromValue(Ljava/lang/String;)Lorg/ehcache/config/xml/model/EventOrderingType;
@3.0.0.m5
-###org/ehcache/config/xml/model/EventOrderingType

+###org/ehcache/config/xml/model/CacheIntegration$Writebehind
@3.0.0.m2
+#<init>()V
+#getWritedelay()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay;
+#setWritedelay(Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay;)V
+#getRatelimitpersecond()Ljava/math/BigInteger;
+#setRatelimitpersecond(Ljava/math/BigInteger;)V
+#getBatchsize()Ljava/math/BigInteger;
+#setBatchsize(Ljava/math/BigInteger;)V
+#getRetryAttempts()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts;
+#setRetryAttempts(Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts;)V
+#getConcurrency()Ljava/math/BigInteger;
+#setConcurrency(Ljava/math/BigInteger;)V
+#getSize()Ljava/math/BigInteger;
+#setSize(Ljava/math/BigInteger;)V
+#isCoalesce()Ljava/lang/Boolean;
+#setCoalesce(Ljava/lang/Boolean;)V
@3.0.0.m3
+#getRetry()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Retry;
+#setRetry(Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Retry;)V
+#isCoalesce()Z
+#getMinWriteDelay()Ljava/math/BigInteger;
+#setMinWriteDelay(Ljava/math/BigInteger;)V
+#getMaxWriteDelay()Ljava/math/BigInteger;
+#setMaxWriteDelay(Ljava/math/BigInteger;)V
-#getWritedelay()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay;
-#setWritedelay(Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay;)V
-#getRetryAttempts()Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts;
-#setRetryAttempts(Lorg/ehcache/config/xml/model/CacheIntegration$Writebehind$RetryAttempts;)V
-#isCoalesce()Ljava/lang/Boolean;
@3.0.0.m4
-###org/ehcache/config/xml/model/CacheIntegration$Writebehind

+###org/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay
@3.0.0.m2
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getMin()Ljava/math/BigInteger;
+#setMin(Ljava/math/BigInteger;)V
+#getMax()Ljava/math/BigInteger;
+#setMax(Ljava/math/BigInteger;)V
@3.0.0.m3
-###org/ehcache/config/xml/model/CacheIntegration$Writebehind$Writedelay

+###org/ehcache/config/xml/model/CacheEntryType
@3.0.0.m2
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getSerializer()Ljava/lang/String;
+#setSerializer(Ljava/lang/String;)V
@3.0.0.m3
+#getCopier()Ljava/lang/String;
+#setCopier(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/CacheEntryType

+###org/ehcache/config/xml/model/PersistableResourceType
@3.0.0.m2
+#<init>()V
+#isPersistent()Z
+#setPersistent(Ljava/lang/Boolean;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/PersistableResourceType

+###org/ehcache/config/xml/model/CacheIntegration$Listener
@3.0.0.m2
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getEventFiringMode()Lorg/ehcache/config/xml/model/EventFiringType;
+#setEventFiringMode(Lorg/ehcache/config/xml/model/EventFiringType;)V
+#getEventOrderingMode()Lorg/ehcache/config/xml/model/EventOrderingType;
+#setEventOrderingMode(Lorg/ehcache/config/xml/model/EventOrderingType;)V
+#getEventsToFireOn()Ljava/util/List;
+#getAny()Ljava/util/List;
@3.0.0.m4
-###org/ehcache/config/xml/model/CacheIntegration$Listener

+###org/ehcache/impl/internal/util/HashUtils
@3.3.0
+#<init>()V
+#intHashToLong(I)J
+#longHashToInt(J)I
@3.3.1
-###org/ehcache/impl/internal/util/HashUtils

+###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedEntryIterator
@3.7.1
+#next()Ljava/util/Map$Entry;
+#remove()V
+#next()Ljava/lang/Object;
@3.8.0
-###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedEntryIterator

+###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedEntrySet
@3.7.1
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V
@3.8.0
-###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedEntrySet

+###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedKeyIterator
@3.7.1
+#next()Ljava/lang/Object;
+#remove()V
@3.8.0
-###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedKeyIterator

+###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedKeySet
@3.7.1
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V
@3.8.0
-###org/terracotta/offheapstore/AbstractLockedOffHeapHashMap$LockedKeySet

+###org/terracotta/offheapstore/OffHeapHashMap$EncodingIterator
@3.7.1
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap$EncodingIterator

+###org/terracotta/offheapstore/OffHeapHashMap$EncodingSet
@3.7.1
+#iterator()Ljava/util/Iterator;
+#size()I
+#contains(Ljava/lang/Object;)Z
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap$EncodingSet

+###org/terracotta/offheapstore/OffHeapHashMap$EntryIterator
@3.7.1
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap$EntryIterator

+###org/terracotta/offheapstore/OffHeapHashMap$EntrySet
@3.7.1
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap$EntrySet

+###org/terracotta/offheapstore/OffHeapHashMap$HashIterator
@3.7.1
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap$HashIterator

+###org/terracotta/offheapstore/OffHeapHashMap$KeyIterator
@3.7.1
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap$KeyIterator

+###org/terracotta/offheapstore/OffHeapHashMap$KeySet
@3.7.1
+#iterator()Ljava/util/Iterator;
+#contains(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#size()I
+#clear()V
@3.8.0
-###org/terracotta/offheapstore/OffHeapHashMap$KeySet

+###org/ehcache/exceptions/RethrowingCacheAccessException
@3.0.0.m3
+#<init>(Ljava/lang/RuntimeException;)V
+#getCause()Ljava/lang/RuntimeException;
+#getCause()Ljava/lang/Throwable;
@3.0.0.rc1
-###org/ehcache/exceptions/RethrowingCacheAccessException

+###org/ehcache/spi/serialization/Serializer$Persistent
@3.0.0.m3
@3.0.0.m4
-###org/ehcache/spi/serialization/Serializer$Persistent

+###org/ehcache/spi/serialization/Serializer$Transient
@3.0.0.m3
@3.0.0.m4
-###org/ehcache/spi/serialization/Serializer$Transient

+###org/ehcache/config/RuntimeConfiguration
@3.0.0.m3
@3.0.0
-###org/ehcache/config/RuntimeConfiguration

+###org/ehcache/statistics/StoreOperationOutcomes$ExpirationOutcome
@3.0.0.m3
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$ExpirationOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$ExpirationOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$ExpirationOutcome

+###org/ehcache/statistics/CacheOperationOutcomes$RemoveAllOutcome
@3.0.0.m3
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$RemoveAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$RemoveAllOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$RemoveAllOutcome

+###org/ehcache/statistics/CacheOperationOutcomes$GetAllOutcome
@3.0.0.m3
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$GetAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$GetAllOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$GetAllOutcome

+###org/ehcache/statistics/CacheOperationOutcomes$PutAllOutcome
@3.0.0.m3
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$PutAllOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$PutAllOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CacheOperationOutcomes$PutAllOutcome

+###org/ehcache/spi/LifeCycledAdapter
@3.0.0.m3
+#<init>()V
+#init()V
+#close()V
@3.0.0.m5
-###org/ehcache/spi/LifeCycledAdapter

+###org/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier
@3.0.0.m3
@3.0.0.m5
-###org/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier

+###org/ehcache/config/copy/CopierConfiguration$Type
@3.0.0.m3
+#values()[Lorg/ehcache/config/copy/CopierConfiguration$Type;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/config/copy/CopierConfiguration$Type;
@3.0.0.m5
-###org/ehcache/config/copy/CopierConfiguration$Type

+###org/ehcache/config/copy/CopierConfiguration
@3.0.0.m3
+#getType()Lorg/ehcache/config/copy/CopierConfiguration$Type;
@3.0.0.m5
-###org/ehcache/config/copy/CopierConfiguration

+###org/ehcache/util/LifeCycleUtils
@3.0.0.m3
+#<init>()V
+#closerFor(Ljava/io/Closeable;)Lorg/ehcache/spi/LifeCycled;
@3.0.0.m5
-###org/ehcache/util/LifeCycleUtils

+###org/ehcache/spi/copy/DefaultCopyProviderFactory
@3.0.0.m3
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/copy/CopyProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/spi/copy/DefaultCopyProviderFactory

+###org/ehcache/spi/copy/DefaultCopyProvider
@3.0.0.m3
+#<init>(Lorg/ehcache/config/copy/DefaultCopyProviderConfiguration;)V
+#createKeyCopier(Ljava/lang/Class;Lorg/ehcache/spi/serialization/Serializer;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/copy/Copier;
+#createValueCopier(Ljava/lang/Class;Lorg/ehcache/spi/serialization/Serializer;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/copy/Copier;
@3.0.0.m5
-###org/ehcache/spi/copy/DefaultCopyProvider

+###org/ehcache/config/copy/DefaultCopierConfiguration
@3.0.0.m3
+#<init>(Ljava/lang/Class;Lorg/ehcache/config/copy/CopierConfiguration$Type;)V
+#<init>(Lorg/ehcache/spi/copy/Copier;Lorg/ehcache/config/copy/CopierConfiguration$Type;)V
+#getInstance()Lorg/ehcache/spi/copy/Copier;
+#getServiceType()Ljava/lang/Class;
+#getType()Lorg/ehcache/config/copy/CopierConfiguration$Type;
@3.0.0.m4
-#getInstance()Lorg/ehcache/spi/copy/Copier;
@3.0.0.m5
-###org/ehcache/config/copy/DefaultCopierConfiguration

+###org/ehcache/config/copy/DefaultCopyProviderConfiguration
@3.0.0.m3
+#<init>()V
+#getServiceType()Ljava/lang/Class;
+#addCopierFor(Ljava/lang/Class;Ljava/lang/Class;)Lorg/ehcache/config/copy/DefaultCopyProviderConfiguration;
@3.0.0.m5
-###org/ehcache/config/copy/DefaultCopyProviderConfiguration

+###org/ehcache/internal/serialization/CompactJavaSerializer
@3.0.0.m3
+#<init>(Ljava/lang/ClassLoader;)V
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#getObjectOutputStream(Ljava/io/OutputStream;)Ljava/io/ObjectOutputStream;
+#getObjectInputStream(Ljava/io/InputStream;)Ljava/io/ObjectInputStream;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#close()V
@3.0.0.m5
-###org/ehcache/internal/serialization/CompactJavaSerializer

+###org/ehcache/internal/serialization/CompactPersistentJavaSerializer
@3.0.0.m3
+#<init>(Ljava/lang/ClassLoader;Lorg/ehcache/spi/service/FileBasedPersistenceContext;)V
+#close()V
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
@3.0.0.m5
-###org/ehcache/internal/serialization/CompactPersistentJavaSerializer

+###org/ehcache/internal/serialization/CompactJavaSerializer$SerializableDataKey
@3.0.0.m3
+#<init>(Ljava/io/ObjectStreamClass;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#forClass()Ljava/lang/Class;
+#setClass(Ljava/lang/Class;)V
+#getObjectStreamClass()Ljava/io/ObjectStreamClass;
@3.0.0.m5
-###org/ehcache/internal/serialization/CompactJavaSerializer$SerializableDataKey

+###org/ehcache/internal/copy/SerializingCopier
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/serialization/Serializer;)V
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
+#getSerializer()Lorg/ehcache/spi/serialization/Serializer;
@3.0.0.m5
-###org/ehcache/internal/copy/SerializingCopier

+###org/ehcache/internal/copy/IdentityCopier
@3.0.0.m3
+#<init>()V
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/copy/IdentityCopier

+###org/ehcache/internal/copy/ReadWriteCopier
@3.0.0.m3
+#<init>()V
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;
+#copy(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/copy/ReadWriteCopier

+###org/ehcache/internal/store/heap/holders/CopiedOnHeapKey
@3.0.0.m3
+#<init>(Ljava/lang/Object;Lorg/ehcache/spi/copy/Copier;)V
+#getActualKeyObject()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.m5
-###org/ehcache/internal/store/heap/holders/CopiedOnHeapKey

+###org/ehcache/internal/store/heap/holders/CopiedOnHeapValueHolder
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/cache/Store$ValueHolder;Ljava/lang/Object;Lorg/ehcache/spi/copy/Copier;JLorg/ehcache/expiry/Duration;)V
+#<init>(Ljava/lang/Object;JLorg/ehcache/spi/copy/Copier;)V
+#<init>(Ljava/lang/Object;JJLorg/ehcache/spi/copy/Copier;)V
+#value()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/store/heap/holders/CopiedOnHeapValueHolder

+###org/ehcache/internal/store/heap/holders/OnHeapKey
@3.0.0.m3
+#getActualKeyObject()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/store/heap/holders/OnHeapKey

+###org/ehcache/internal/store/heap/holders/LookupOnlyOnHeapKey
@3.0.0.m3
+#<init>(Ljava/lang/Object;)V
+#getActualKeyObject()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.m5
-###org/ehcache/internal/store/heap/holders/LookupOnlyOnHeapKey

+###org/ehcache/internal/store/heap/holders/SerializedOnHeapValueHolder
@3.0.0.m3
+#<init>(Ljava/lang/Object;JLorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Ljava/lang/Object;JJLorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Lorg/ehcache/spi/cache/Store$ValueHolder;Ljava/lang/Object;Lorg/ehcache/spi/serialization/Serializer;JLorg/ehcache/expiry/Duration;)V
+#value()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.m5
-###org/ehcache/internal/store/heap/holders/SerializedOnHeapValueHolder

+###org/ehcache/internal/store/heap/holders/OnHeapValueHolder
@3.0.0.m3
@3.0.0.m4
+#equals(Ljava/lang/Object;)Z
@3.0.0.m5
-###org/ehcache/internal/store/heap/holders/OnHeapValueHolder

+###org/ehcache/internal/classes/commonslang/ClassUtils
@3.0.0.m3
+#<init>()V
+#isAssignable([Ljava/lang/Class;[Ljava/lang/Class;Z)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z
+#isAssignable(Ljava/lang/Class;Ljava/lang/Class;Z)Z
+#primitiveToWrapper(Ljava/lang/Class;)Ljava/lang/Class;
+#wrapperToPrimitive(Ljava/lang/Class;)Ljava/lang/Class;
+#toClass([Ljava/lang/Object;)[Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/internal/classes/commonslang/ClassUtils

+###org/ehcache/internal/classes/commonslang/ArrayUtils
@3.0.0.m3
+#<init>()V
+#nullToEmpty([Ljava/lang/Object;)[Ljava/lang/Object;
+#nullToEmpty([Ljava/lang/Class;)[Ljava/lang/Class;
+#isSameLength([Ljava/lang/Object;[Ljava/lang/Object;)Z
+#getLength(Ljava/lang/Object;)I
+#isEmpty([Ljava/lang/Object;)Z
@3.0.0.m5
-###org/ehcache/internal/classes/commonslang/ArrayUtils

+###org/ehcache/internal/classes/commonslang/JavaVersion
@3.0.0.m3
+#values()[Lorg/ehcache/internal/classes/commonslang/JavaVersion;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/internal/classes/commonslang/JavaVersion;
+#atLeast(Lorg/ehcache/internal/classes/commonslang/JavaVersion;)Z
+#toString()Ljava/lang/String;
@3.0.0.m5
-###org/ehcache/internal/classes/commonslang/JavaVersion

+###org/ehcache/internal/classes/commonslang/Validate
@3.0.0.m3
+#<init>()V
+#notNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/classes/commonslang/Validate

+###org/ehcache/internal/classes/commonslang/SystemUtils
@3.0.0.m3
+#isJavaVersionAtLeast(Lorg/ehcache/internal/classes/commonslang/JavaVersion;)Z
+#<init>()V
@3.0.0.m5
-###org/ehcache/internal/classes/commonslang/SystemUtils

+###org/ehcache/internal/classes/commonslang/reflect/ConstructorUtils
@3.0.0.m3
+#<init>()V
+#invokeConstructor(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#invokeConstructor(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;
+#getAccessibleConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;
+#getMatchingAccessibleConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
@3.0.0.m5
-###org/ehcache/internal/classes/commonslang/reflect/ConstructorUtils

+###org/ehcache/jsr107/Jsr107ServiceConfigurationParser
@3.0.0.m3
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.0.0.rc2
-###org/ehcache/jsr107/Jsr107ServiceConfigurationParser

+###org/ehcache/config/xml/CacheServiceConfigurationParser
@3.0.0.m3
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.0.0.m5
-###org/ehcache/config/xml/CacheServiceConfigurationParser

+###org/ehcache/config/xml/CacheManagerServiceConfigurationParser
@3.0.0.m3
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.0.0.m5
-###org/ehcache/config/xml/CacheManagerServiceConfigurationParser

+###org/ehcache/config/xml/model/CacheIntegration$Writebehind$Retry
@3.0.0.m3
+#<init>()V
+#getAttempts()Ljava/math/BigInteger;
+#setAttempts(Ljava/math/BigInteger;)V
+#getDelay()Ljava/math/BigInteger;
+#setDelay(Ljava/math/BigInteger;)V
@3.0.0.m4
-###org/ehcache/config/xml/model/CacheIntegration$Writebehind$Retry

+###org/ehcache/config/xml/model/CopierType$Copier
@3.0.0.m3
+#<init>()V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#getType()Ljava/lang/String;
+#setType(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/CopierType$Copier

+###org/ehcache/config/xml/model/CopierType
@3.0.0.m3
+#<init>()V
+#getCopier()Ljava/util/List;
@3.0.0.m5
-###org/ehcache/config/xml/model/CopierType

+###org/ehcache/transactions/xa/XAStore$Provider
@3.0.0.m3
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#initStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m5
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
-#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
-#releaseStore(Lorg/ehcache/spi/cache/Store;)V
-#initStore(Lorg/ehcache/spi/cache/Store;)V
@3.0.0.rc1
-###org/ehcache/transactions/xa/XAStore$Provider

+###org/ehcache/transactions/xa/EhcacheXAResource
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/cache/Store;Lorg/ehcache/transactions/xa/journal/Journal;Lorg/ehcache/transactions/xa/XATransactionContextFactory;)V
+#commit(Ljavax/transaction/xa/Xid;Z)V
+#forget(Ljavax/transaction/xa/Xid;)V
+#getTransactionTimeout()I
+#isSameRM(Ljavax/transaction/xa/XAResource;)Z
+#prepare(Ljavax/transaction/xa/Xid;)I
+#recover(I)[Ljavax/transaction/xa/Xid;
+#rollback(Ljavax/transaction/xa/Xid;)V
+#setTransactionTimeout(I)Z
+#start(Ljavax/transaction/xa/Xid;I)V
+#end(Ljavax/transaction/xa/Xid;I)V
+#getCurrentContext()Lorg/ehcache/transactions/xa/XATransactionContext;
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/journal/Journal;Lorg/ehcache/transactions/xa/XATransactionContextFactory;)V
-#<init>(Lorg/ehcache/spi/cache/Store;Lorg/ehcache/transactions/xa/journal/Journal;Lorg/ehcache/transactions/xa/XATransactionContextFactory;)V
@3.0.0.rc1
-###org/ehcache/transactions/xa/EhcacheXAResource

+###org/ehcache/transactions/xa/XAValueHolder
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/cache/Store$ValueHolder;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;J)V
+#<init>(Lorg/ehcache/transactions/xa/XAValueHolder;Ljava/lang/Object;)V
+#value()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/lang/Object;)V
-#<init>(Lorg/ehcache/spi/cache/Store$ValueHolder;Ljava/lang/Object;)V
@3.0.0.rc1
-###org/ehcache/transactions/xa/XAValueHolder

+###org/ehcache/transactions/xa/XACacheException
@3.0.0.m3
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.1.0
-###org/ehcache/transactions/xa/XACacheException

+###org/ehcache/transactions/xa/XATransactionContextFactory
@3.0.0.m3
+#<init>(Lorg/ehcache/internal/TimeSource;)V
+#createTransactionContext(Lorg/ehcache/transactions/xa/TransactionId;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/transactions/xa/journal/Journal;I)Lorg/ehcache/transactions/xa/XATransactionContext;
+#get(Lorg/ehcache/transactions/xa/TransactionId;)Lorg/ehcache/transactions/xa/XATransactionContext;
+#destroy(Lorg/ehcache/transactions/xa/TransactionId;)V
+#contains(Lorg/ehcache/transactions/xa/TransactionId;)Z
+#listPuts(Lorg/ehcache/transactions/xa/TransactionId;)Ljava/util/Map;
+#isTouched(Lorg/ehcache/transactions/xa/TransactionId;Ljava/lang/Object;)Z
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/time/TimeSource;)V
+#createTransactionContext(Lorg/ehcache/transactions/xa/TransactionId;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/journal/Journal;I)Lorg/ehcache/transactions/xa/XATransactionContext;
-#<init>(Lorg/ehcache/internal/TimeSource;)V
-#createTransactionContext(Lorg/ehcache/transactions/xa/TransactionId;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/transactions/xa/journal/Journal;I)Lorg/ehcache/transactions/xa/XATransactionContext;
@3.0.0.rc1
-###org/ehcache/transactions/xa/XATransactionContextFactory

+###org/ehcache/transactions/xa/XACacheAccessException
@3.0.0.m3
+#<init>(Ljava/lang/RuntimeException;)V
@3.0.0.rc2
-###org/ehcache/transactions/xa/XACacheAccessException

+###org/ehcache/transactions/xa/TransactionId
@3.0.0.m3
+#<init>(Ljavax/transaction/xa/Xid;)V
+#getSerializableXid()Lorg/ehcache/transactions/xa/SerializableXid;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.rc1
-###org/ehcache/transactions/xa/TransactionId

+###org/ehcache/transactions/xa/SoftLockValueCombinedCopier
@3.0.0.m3
+#<init>(Lorg/ehcache/spi/copy/Copier;)V
+#copyForRead(Lorg/ehcache/transactions/xa/SoftLock;)Lorg/ehcache/transactions/xa/SoftLock;
+#copyForWrite(Lorg/ehcache/transactions/xa/SoftLock;)Lorg/ehcache/transactions/xa/SoftLock;
+#copyForWrite(Ljava/lang/Object;)Ljava/lang/Object;
+#copyForRead(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.rc1
-###org/ehcache/transactions/xa/SoftLockValueCombinedCopier

+###org/ehcache/transactions/xa/SoftLockValueCombinedSerializer
@3.0.0.m3
+#<init>(Ljava/util/concurrent/atomic/AtomicReference;Lorg/ehcache/spi/serialization/Serializer;)V
+#serialize(Lorg/ehcache/transactions/xa/SoftLock;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Lorg/ehcache/transactions/xa/SoftLock;
+#equals(Lorg/ehcache/transactions/xa/SoftLock;Ljava/nio/ByteBuffer;)Z
+#close()V
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.0.0.m4
-#close()V
@3.0.0.rc1
-###org/ehcache/transactions/xa/SoftLockValueCombinedSerializer

+###org/ehcache/transactions/xa/SoftLock
@3.0.0.m3
+#<init>(Lorg/ehcache/transactions/xa/TransactionId;Ljava/lang/Object;Lorg/ehcache/transactions/xa/XAValueHolder;)V
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/XAValueHolder;
+#getTransactionId()Lorg/ehcache/transactions/xa/TransactionId;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.rc1
-###org/ehcache/transactions/xa/SoftLock

+###org/ehcache/transactions/xa/XATransactionContext
@3.0.0.m3
+#hasTimedOut()Z
+#getTransactionId()Lorg/ehcache/transactions/xa/TransactionId;
+#addCommand(Ljava/lang/Object;Lorg/ehcache/transactions/xa/commands/Command;)V
+#newValueHolders()Ljava/util/Map;
+#touched(Ljava/lang/Object;)Z
+#removed(Ljava/lang/Object;)Z
+#updated(Ljava/lang/Object;)Z
+#evicted(Ljava/lang/Object;)Z
+#oldValueOf(Ljava/lang/Object;)Ljava/lang/Object;
+#newValueHolderOf(Ljava/lang/Object;)Lorg/ehcache/transactions/xa/XAValueHolder;
+#newValueOf(Ljava/lang/Object;)Ljava/lang/Object;
+#prepare()I
+#commit(Z)V
+#commitInOnePhase()V
+#rollback(Z)V
@3.0.0.rc1
-###org/ehcache/transactions/xa/XATransactionContext

+###org/ehcache/transactions/xa/SerializableXid
@3.0.0.m3
+#<init>(Ljavax/transaction/xa/Xid;)V
+#getFormatId()I
+#getBranchQualifier()[B
+#getGlobalTransactionId()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.rc1
-###org/ehcache/transactions/xa/SerializableXid

+###org/ehcache/transactions/xa/EhcacheXAException
@3.0.0.m3
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILjava/lang/Throwable;)V
@3.1.0
-###org/ehcache/transactions/xa/EhcacheXAException

+###org/ehcache/transactions/xa/XAStore
@3.0.0.m3
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;Lorg/ehcache/internal/TimeSource;Lorg/ehcache/transactions/xa/journal/Journal;Ljava/lang/String;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.m5
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/transactions/xa/journal/Journal;Ljava/lang/String;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/spi/cache/Store;Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;Lorg/ehcache/internal/TimeSource;Lorg/ehcache/transactions/xa/journal/Journal;Ljava/lang/String;)V
-#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
-#disableStoreEventNotifications()V
-#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
@3.0.0.rc1
-###org/ehcache/transactions/xa/XAStore

+###org/ehcache/transactions/xa/SoftLockSerializer
@3.0.0.m3
+#<init>(Ljava/lang/ClassLoader;)V
+#serialize(Lorg/ehcache/transactions/xa/SoftLock;)Ljava/nio/ByteBuffer;
+#read(Ljava/nio/ByteBuffer;)Lorg/ehcache/transactions/xa/SoftLock;
+#equals(Lorg/ehcache/transactions/xa/SoftLock;Ljava/nio/ByteBuffer;)Z
+#close()V
+#equals(Ljava/lang/Object;Ljava/nio/ByteBuffer;)Z
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@3.0.0.m4
-###org/ehcache/transactions/xa/SoftLockSerializer

+###org/ehcache/transactions/xa/configuration/XAStoreConfiguration
@3.0.0.m3
+#<init>(Ljava/lang/String;)V
+#getUniqueXAResourceId()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.1.0
-###org/ehcache/transactions/xa/configuration/XAStoreConfiguration

+###org/ehcache/transactions/xa/configuration/XAStoreProviderConfiguration
@3.0.0.m3
+#<init>()V
+#getServiceType()Ljava/lang/Class;
@3.0.0.rc2
-###org/ehcache/transactions/xa/configuration/XAStoreProviderConfiguration

+###org/ehcache/transactions/xa/configuration/XAStoreProviderFactory
@3.0.0.m3
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/transactions/xa/XAStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.rc1
-###org/ehcache/transactions/xa/configuration/XAStoreProviderFactory

+###org/ehcache/transactions/xa/txmgr/TransactionManagerWrapper
@3.0.0.m3
+#<init>(Ljavax/transaction/TransactionManager;Lorg/ehcache/transactions/xa/txmgr/XAResourceRegistry;)V
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#registerXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#unregisterXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#toString()Ljava/lang/String;
@3.1.0
-###org/ehcache/transactions/xa/txmgr/TransactionManagerWrapper

+###org/ehcache/transactions/xa/txmgr/NullXAResourceRegistry
@3.0.0.m3
+#<init>()V
+#registerXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#unregisterXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
@3.0.0.rc1
-###org/ehcache/transactions/xa/txmgr/NullXAResourceRegistry

+###org/ehcache/transactions/xa/txmgr/XAResourceRegistry
@3.0.0.m3
+#registerXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#unregisterXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
@3.1.0
-###org/ehcache/transactions/xa/txmgr/XAResourceRegistry

+###org/ehcache/transactions/xa/txmgr/btm/Ehcache3XAResourceHolder
@3.0.0.m3
+#<init>(Ljavax/transaction/xa/XAResource;Lbitronix/tm/resource/common/ResourceBean;)V
+#getXAResource()Ljavax/transaction/xa/XAResource;
+#getResourceBean()Lbitronix/tm/resource/common/ResourceBean;
+#close()V
+#getConnectionHandle()Ljava/lang/Object;
+#getLastReleaseDate()Ljava/util/Date;
+#getXAResourceHolders()Ljava/util/List;
@3.0.0.rc1
-###org/ehcache/transactions/xa/txmgr/btm/Ehcache3XAResourceHolder

+###org/ehcache/transactions/xa/txmgr/btm/Ehcache3XAResourceProducer
@3.0.0.m3
+#<init>()V
+#startRecovery()Lbitronix/tm/internal/XAResourceHolderState;
+#endRecovery()V
+#setFailed(Z)V
+#findXAResourceHolder(Ljavax/transaction/xa/XAResource;)Lbitronix/tm/resource/common/XAResourceHolder;
+#init()V
+#close()V
+#createPooledConnection(Ljava/lang/Object;Lbitronix/tm/resource/common/ResourceBean;)Lbitronix/tm/resource/common/XAStatefulHolder;
+#getReference()Ljavax/naming/Reference;
+#toString()Ljava/lang/String;
@3.0.0.rc1
-###org/ehcache/transactions/xa/txmgr/btm/Ehcache3XAResourceProducer

+###org/ehcache/transactions/xa/txmgr/btm/BitronixXAResourceRegistry
@3.0.0.m3
+#<init>()V
+#registerXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#unregisterXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
@3.1.0
-###org/ehcache/transactions/xa/txmgr/btm/BitronixXAResourceRegistry

+###org/ehcache/transactions/xa/txmgr/provider/DefaultTransactionManagerProvider
@3.0.0.m3
+#<init>(Lorg/ehcache/transactions/xa/txmgr/provider/TransactionManagerProviderConfiguration;)V
+#getTransactionManagerWrapper()Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.rc1
-###org/ehcache/transactions/xa/txmgr/provider/DefaultTransactionManagerProvider

+###org/ehcache/transactions/xa/txmgr/provider/TransactionManagerProvider
@3.0.0.m3
+#getTransactionManagerWrapper()Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;
@3.1.0
-###org/ehcache/transactions/xa/txmgr/provider/TransactionManagerProvider

+###org/ehcache/transactions/xa/txmgr/provider/TransactionManagerProviderConfiguration
@3.0.0.m3
+#<init>(Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;)V
+#getTransactionManagerWrapper()Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;
+#getServiceType()Ljava/lang/Class;
@3.0.0.rc2
+#<init>()V
@3.0.0.rc3
-###org/ehcache/transactions/xa/txmgr/provider/TransactionManagerProviderConfiguration

+###org/ehcache/transactions/xa/txmgr/provider/DefaultTransactionManagerProviderFactory
@3.0.0.m3
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/transactions/xa/txmgr/provider/TransactionManagerProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.rc1
-###org/ehcache/transactions/xa/txmgr/provider/DefaultTransactionManagerProviderFactory

+###org/ehcache/transactions/xa/commands/StoreEvictCommand
@3.0.0.m3
+#<init>(Ljava/lang/Object;)V
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/XAValueHolder;
@3.0.0.rc1
-###org/ehcache/transactions/xa/commands/StoreEvictCommand

+###org/ehcache/transactions/xa/commands/Command
@3.0.0.m3
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/XAValueHolder;
@3.0.0.rc1
-###org/ehcache/transactions/xa/commands/Command

+###org/ehcache/transactions/xa/commands/StorePutCommand
@3.0.0.m3
+#<init>(Ljava/lang/Object;Lorg/ehcache/transactions/xa/XAValueHolder;)V
+#getNewValueHolder()Lorg/ehcache/transactions/xa/XAValueHolder;
+#getOldValue()Ljava/lang/Object;
@3.0.0.rc1
-###org/ehcache/transactions/xa/commands/StorePutCommand

+###org/ehcache/transactions/xa/commands/StoreRemoveCommand
@3.0.0.m3
+#<init>(Ljava/lang/Object;)V
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/XAValueHolder;
@3.0.0.rc1
-###org/ehcache/transactions/xa/commands/StoreRemoveCommand

+###org/ehcache/transactions/xa/journal/TransientJournal$Entry
@3.0.0.m3
+#<init>(Lorg/ehcache/transactions/xa/journal/TransientJournal$XAState;ZLjava/util/Collection;)V
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/TransientJournal$Entry

+###org/ehcache/transactions/xa/journal/PersistentJournal
@3.0.0.m3
+#<init>(Ljava/io/File;Lorg/ehcache/spi/serialization/Serializer;)V
+#open()V
+#close()V
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/PersistentJournal

+###org/ehcache/transactions/xa/journal/DefaultJournalProvider
@3.0.0.m3
+#<init>()V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#getJournal(Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/journal/Journal;
@3.0.0.m5
+#getJournal(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/journal/Journal;
-#getJournal(Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/journal/Journal;
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/DefaultJournalProvider

+###org/ehcache/transactions/xa/journal/TransientJournal
@3.0.0.m3
+#<init>()V
+#saveCommitted(Lorg/ehcache/transactions/xa/TransactionId;Z)V
+#saveRolledBack(Lorg/ehcache/transactions/xa/TransactionId;Z)V
+#saveInDoubt(Lorg/ehcache/transactions/xa/TransactionId;Ljava/util/Collection;)V
+#isInDoubt(Lorg/ehcache/transactions/xa/TransactionId;)Z
+#getInDoubtKeys(Lorg/ehcache/transactions/xa/TransactionId;)Ljava/util/Collection;
+#recover()Ljava/util/Map;
+#isHeuristicallyTerminated(Lorg/ehcache/transactions/xa/TransactionId;)Z
+#forget(Lorg/ehcache/transactions/xa/TransactionId;)V
+#heuristicDecisions()Ljava/util/Map;
+#open()V
+#close()V
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/TransientJournal

+###org/ehcache/transactions/xa/journal/PersistentJournal$SerializableEntry
@3.0.0.m3
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/PersistentJournal$SerializableEntry

+###org/ehcache/transactions/xa/journal/DefaultJournalProviderFactory
@3.0.0.m3
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/transactions/xa/journal/JournalProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/DefaultJournalProviderFactory

+###org/ehcache/transactions/xa/journal/Journal
@3.0.0.m3
+#saveCommitted(Lorg/ehcache/transactions/xa/TransactionId;Z)V
+#saveRolledBack(Lorg/ehcache/transactions/xa/TransactionId;Z)V
+#saveInDoubt(Lorg/ehcache/transactions/xa/TransactionId;Ljava/util/Collection;)V
+#isInDoubt(Lorg/ehcache/transactions/xa/TransactionId;)Z
+#getInDoubtKeys(Lorg/ehcache/transactions/xa/TransactionId;)Ljava/util/Collection;
+#recover()Ljava/util/Map;
+#isHeuristicallyTerminated(Lorg/ehcache/transactions/xa/TransactionId;)Z
+#heuristicDecisions()Ljava/util/Map;
+#forget(Lorg/ehcache/transactions/xa/TransactionId;)V
+#open()V
+#close()V
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/Journal

+###org/ehcache/transactions/xa/journal/JournalProvider
@3.0.0.m3
+#getJournal(Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/journal/Journal;
@3.0.0.m5
+#getJournal(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/journal/Journal;
-#getJournal(Lorg/ehcache/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/journal/Journal;
@3.0.0.rc1
-###org/ehcache/transactions/xa/journal/JournalProvider

+###org/ehcache/transactions/xml/TxCacheServiceConfigurationParser
@3.0.0.m3
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.0.0.rc3
-###org/ehcache/transactions/xml/TxCacheServiceConfigurationParser

+###org/ehcache/transactions/xml/TxCacheManagerServiceConfigurationParser
@3.0.0.m3
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.0.0.rc3
-###org/ehcache/transactions/xml/TxCacheManagerServiceConfigurationParser

+###org/ehcache/xml/JaxbParsers
@3.9.1
+#<init>()V
+#parsePropertyOrString(Ljava/lang/String;)Ljava/lang/String;
+#parsePropertyOrInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#parsePropertyOrPositiveInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#parsePropertyOrNonNegativeInteger(Ljava/lang/String;)Ljava/math/BigInteger;
+#parseStringWithProperties(Ljava/lang/String;)Ljava/lang/String;
@3.10.0-alpha1
-###org/ehcache/xml/JaxbParsers

+###org/terracotta/utilities/exec/Shell$Encoding
@3.9.0
+#<init>()V
@3.10.0-alpha0
-###org/terracotta/utilities/exec/Shell$Encoding

+###org/terracotta/utilities/exec/Shell$Result
@3.9.0
+#exitCode()I
+#lines()Ljava/util/List;
+#iterator()Ljava/util/Iterator;
@3.10.0-alpha0
-###org/terracotta/utilities/exec/Shell$Result

+###org/terracotta/utilities/exec/Shell
@3.9.0
+#execute(Ljava/nio/charset/Charset;[Ljava/lang/String;)Lorg/terracotta/utilities/exec/Shell$Result;
@3.10.0-alpha0
-###org/terracotta/utilities/exec/Shell

+###org/terracotta/utilities/io/CapturedPrintStream
@3.9.0
+#getInstance()Lorg/terracotta/utilities/io/CapturedPrintStream;
+#getReader()Ljava/io/BufferedReader;
@3.9.5
+#reset()V
+#toByteArray()[B
@3.10.0-alpha0
-###org/terracotta/utilities/io/CapturedPrintStream

+###org/terracotta/utilities/io/Files$ExtendedOption
@3.9.0
+#values()[Lorg/terracotta/utilities/io/Files$ExtendedOption;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/utilities/io/Files$ExtendedOption;
@3.10.0-alpha0
-###org/terracotta/utilities/io/Files$ExtendedOption

+###org/terracotta/utilities/io/Files$FileStoreConstraintException
@3.9.0
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@3.10.0-alpha0
-###org/terracotta/utilities/io/Files$FileStoreConstraintException

+###org/terracotta/utilities/io/Files
@3.9.0
+#rename(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;
+#rename(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/time/Duration;)Ljava/nio/file/Path;
+#rename(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/time/Duration;Ljava/lang/Runnable;)Ljava/nio/file/Path;
+#deleteTree(Ljava/nio/file/Path;)V
+#deleteTree(Ljava/nio/file/Path;Ljava/time/Duration;)V
+#deleteTree(Ljava/nio/file/Path;Ljava/time/Duration;Ljava/lang/Runnable;)V
+#delete(Ljava/nio/file/Path;)V
+#delete(Ljava/nio/file/Path;Ljava/time/Duration;)V
+#delete(Ljava/nio/file/Path;Ljava/time/Duration;Ljava/lang/Runnable;)V
+#deleteIfExists(Ljava/nio/file/Path;)Z
+#copy(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
+#relocate(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
@3.9.10
+#createFile(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
+#createFile(Ljava/nio/file/Path;Ljava/time/Duration;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
+#copy(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
@3.10.0-alpha0
-###org/terracotta/utilities/io/Files

+###org/terracotta/utilities/io/NullOutputStream
@3.9.0
+#<init>()V
+#write(I)V
+#write([BII)V
+#close()V
@3.10.0-alpha0
-###org/terracotta/utilities/io/NullOutputStream

+###org/terracotta/utilities/io/buffer/DumpUtility$FieldInaccessibleException
@3.9.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.10.0-alpha0
-###org/terracotta/utilities/io/buffer/DumpUtility$FieldInaccessibleException

+###org/terracotta/utilities/io/buffer/DumpUtility
@3.9.0
+#<init>(Ljava/io/PrintStream;)V
+#<init>(Ljava/io/PrintStream;Ljava/lang/CharSequence;)V
+#dumpBuffer(Ljava/nio/IntBuffer;Ljava/io/PrintStream;)V
+#dumpBuffer(Ljava/nio/LongBuffer;Ljava/io/PrintStream;)V
+#dumpBuffer(Ljava/nio/ByteBuffer;Ljava/io/PrintStream;)V
+#dumpBuffer(Ljava/nio/IntBuffer;)V
+#dumpBuffer(Ljava/nio/LongBuffer;)V
+#dumpBuffer(Ljava/nio/ByteBuffer;)V
+#dump([B)V
@3.10.0-alpha0
-###org/terracotta/utilities/io/buffer/DumpUtility

+###org/terracotta/utilities/logging/LoggerBridge
@3.9.0
+#getInstance(Lorg/slf4j/Logger;Lorg/slf4j/event/Level;)Lorg/terracotta/utilities/logging/LoggerBridge;
+#isLevelEnabled()Z
+#log(Ljava/lang/String;[Ljava/lang/Object;)V
+#log(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.10.0-alpha0
-###org/terracotta/utilities/logging/LoggerBridge

+###org/terracotta/utilities/logging/LoggingOutputStream
@3.9.0
+#<init>(Lorg/slf4j/Logger;Lorg/slf4j/event/Level;)V
+#write(I)V
+#flush()V
+#close()V
@3.10.0-alpha0
-###org/terracotta/utilities/logging/LoggingOutputStream

+###org/terracotta/statistics/extended/SampleType
@3.1.4
+#values()[Lorg/terracotta/statistics/extended/SampleType;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/statistics/extended/SampleType;
@3.2.0.beta1
-###org/terracotta/statistics/extended/SampleType

+###org/ehcache/config/builders/Builder
@3.0.0.m5
+#build()Ljava/lang/Object;
@3.0.0
-###org/ehcache/config/builders/Builder

+###org/ehcache/core/DefaultCacheManagerProviderService
@3.0.0.m5
+#<init>(Lorg/ehcache/core/EhcacheManager;)V
+#getCacheManager()Lorg/ehcache/core/EhcacheManager;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.rc1
-###org/ehcache/core/DefaultCacheManagerProviderService

+###org/ehcache/core/InternalRuntimeConfiguration
@3.0.0.m5
+#addCacheConfigurationListener(Ljava/util/List;)Z
+#removeCacheConfigurationListener(Lorg/ehcache/core/CacheConfigurationChangeListener;)Z
@3.0.0.rc1
-###org/ehcache/core/InternalRuntimeConfiguration

+###org/ehcache/core/InternalStatus
@3.0.0.m5
+#values()[Lorg/ehcache/core/InternalStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/InternalStatus;
+#init()Lorg/ehcache/core/InternalStatus$Transition;
+#close()Lorg/ehcache/core/InternalStatus$Transition;
+#maintenance()Lorg/ehcache/core/InternalStatus$Transition;
+#toPublicStatus()Lorg/ehcache/Status;
+#initial()Lorg/ehcache/core/InternalStatus$Transition;
@3.0.0.rc1
-###org/ehcache/core/InternalStatus

+###org/ehcache/core/config/ResourcePoolImpl
@3.0.0.m5
+#<init>(Lorg/ehcache/config/ResourceType;JLorg/ehcache/config/ResourceUnit;Z)V
+#getType()Lorg/ehcache/config/ResourceType;
+#getSize()J
+#getUnit()Lorg/ehcache/config/ResourceUnit;
+#isPersistent()Z
+#toString()Ljava/lang/String;
@3.0.0.rc3
-###org/ehcache/core/config/ResourcePoolImpl

+###org/ehcache/core/config/copy/CopierConfiguration$Type
@3.0.0.m5
+#values()[Lorg/ehcache/core/config/copy/CopierConfiguration$Type;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/config/copy/CopierConfiguration$Type;
@3.0.0.rc1
-###org/ehcache/core/config/copy/CopierConfiguration$Type

+###org/ehcache/core/config/copy/CopierConfiguration
@3.0.0.m5
+#getType()Lorg/ehcache/core/config/copy/CopierConfiguration$Type;
@3.0.0.rc1
-###org/ehcache/core/config/copy/CopierConfiguration

+###org/ehcache/core/config/events/StoreEventSourceConfiguration
@3.0.0.m5
+#getOrderedEventParallelism()I
@3.0.0.rc1
-###org/ehcache/core/config/events/StoreEventSourceConfiguration

+###org/ehcache/core/config/loaderwriter/CacheLoaderWriterConfiguration
@3.0.0.m5
@3.0.0.rc1
-###org/ehcache/core/config/loaderwriter/CacheLoaderWriterConfiguration

+###org/ehcache/core/config/loaderwriter/writebehind/DefaultBatchingConfiguration
@3.0.0.m5
+#<init>(JLjava/util/concurrent/TimeUnit;IZ)V
+#getMaxDelay()J
+#getMaxDelayUnit()Ljava/util/concurrent/TimeUnit;
+#isCoalescing()Z
+#getBatchSize()I
@3.0.0.rc1
-###org/ehcache/core/config/loaderwriter/writebehind/DefaultBatchingConfiguration

+###org/ehcache/core/config/loaderwriter/writebehind/DefaultWriteBehindConfiguration
@3.0.0.m5
+#<init>(Ljava/lang/String;IILorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;)V
+#getConcurrency()I
+#getMaxQueueSize()I
+#getThreadPoolAlias()Ljava/lang/String;
+#getBatchingConfiguration()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration$BatchingConfiguration;
+#getServiceType()Ljava/lang/Class;
@3.0.0.rc1
-###org/ehcache/core/config/loaderwriter/writebehind/DefaultWriteBehindConfiguration

+###org/ehcache/core/config/persistence/DefaultPersistenceConfiguration
@3.0.0.m5
+#<init>(Ljava/io/File;)V
+#getRootDirectory()Ljava/io/File;
+#getServiceType()Ljava/lang/Class;
@3.0.0.rc1
-###org/ehcache/core/config/persistence/DefaultPersistenceConfiguration

+###org/ehcache/core/config/persistence/PersistenceConfiguration
@3.0.0.m5
+#getRootDirectory()Ljava/io/File;
@3.0.0.rc1
-###org/ehcache/core/config/persistence/PersistenceConfiguration

+###org/ehcache/core/config/serializer/SerializerConfiguration$Type
@3.0.0.m5
+#values()[Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;
@3.0.0.rc1
-###org/ehcache/core/config/serializer/SerializerConfiguration$Type

+###org/ehcache/core/config/serializer/SerializerConfiguration
@3.0.0.m5
+#getType()Lorg/ehcache/core/config/serializer/SerializerConfiguration$Type;
@3.0.0.rc1
-###org/ehcache/core/config/serializer/SerializerConfiguration

+###org/ehcache/core/config/sizeof/SizeOfEngineConfiguration
@3.0.0.m5
+#getMaxObjectGraphSize()J
+#getMaxObjectSize()J
+#getUnit()Lorg/ehcache/config/units/MemoryUnit;
@3.0.0.rc1
-###org/ehcache/core/config/sizeof/SizeOfEngineConfiguration

+###org/ehcache/core/config/sizeof/SizeOfEngineProviderConfiguration
@3.0.0.m5
+#getMaxObjectGraphSize()J
+#getMaxObjectSize()J
+#getUnit()Lorg/ehcache/config/units/MemoryUnit;
@3.0.0.rc1
-###org/ehcache/core/config/sizeof/SizeOfEngineProviderConfiguration

+###org/ehcache/core/config/store/StoreConfigurationImpl
@3.0.0.m5
+#<init>(Lorg/ehcache/config/CacheConfiguration;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/config/EvictionVeto;Ljava/lang/ClassLoader;Lorg/ehcache/expiry/Expiry;Lorg/ehcache/config/ResourcePools;ILorg/ehcache/spi/serialization/Serializer;Lorg/ehcache/spi/serialization/Serializer;)V
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#getKeySerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getValueSerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getOrderedEventParallelism()I
@3.0.0.rc2
-###org/ehcache/core/config/store/StoreConfigurationImpl

+###org/ehcache/core/events/CacheEventDispatcherImpl
@3.0.0.m5
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#shutdown()V
+#setListenerSource(Lorg/ehcache/Cache;)V
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#getConfigurationChangeListeners()Ljava/util/List;
+#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V
@3.0.0.rc1
-###org/ehcache/core/events/CacheEventDispatcherImpl

+###org/ehcache/core/events/DisabledCacheEventNotificationService
@3.0.0.m5
+#<init>()V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#shutdown()V
+#setListenerSource(Lorg/ehcache/Cache;)V
+#getConfigurationChangeListeners()Ljava/util/List;
+#setStoreEventSource(Lorg/ehcache/core/spi/cache/events/StoreEventSource;)V
@3.0.0.rc1
-###org/ehcache/core/events/DisabledCacheEventNotificationService

+###org/ehcache/core/exceptions/CachePassThroughException
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#handleRuntimeException(Ljava/lang/RuntimeException;)V
@3.0.0.rc2
-###org/ehcache/core/exceptions/CachePassThroughException

+###org/ehcache/core/exceptions/LimitExceededException
@3.0.0.m5
+#<init>(Ljava/lang/String;)V
@3.0.0.rc2
-###org/ehcache/core/exceptions/LimitExceededException

+###org/ehcache/core/resilience/LoggingRobustResilienceStrategy
@3.0.0.m5
+#<init>(Lorg/ehcache/core/resilience/RecoveryCache;)V
+#iteratorFailure(Lorg/ehcache/exceptions/CacheAccessException;)Lorg/ehcache/Cache$Entry;
@3.0.0.rc1
-###org/ehcache/core/resilience/LoggingRobustResilienceStrategy

+###org/ehcache/core/resilience/RecoveryCache
@3.0.0.m5
+#obliterate()V
+#obliterate(Ljava/lang/Object;)V
+#obliterate(Ljava/lang/Iterable;)V
@3.0.0.rc1
-###org/ehcache/core/resilience/RecoveryCache

+###org/ehcache/core/resilience/RobustResilienceStrategy
@3.0.0.m5
+#<init>(Lorg/ehcache/core/resilience/RecoveryCache;)V
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#getFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#containsKeyFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Z
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)V
+#removeFailure(Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)V
+#clearFailure(Lorg/ehcache/exceptions/CacheAccessException;)V
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#putIfAbsentFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#removeFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Ljava/lang/Object;
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Z)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheWritingException;)Z
+#replaceFailure(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/CacheLoadingException;)Z
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#getAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheLoadingException;)Ljava/util/Map;
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;)V
+#putAllFailure(Ljava/util/Map;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)V
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;)Ljava/util/Map;
+#removeAllFailure(Ljava/lang/Iterable;Lorg/ehcache/exceptions/CacheAccessException;Lorg/ehcache/exceptions/BulkCacheWritingException;)Ljava/util/Map;
@3.0.0.rc1
-###org/ehcache/core/resilience/RobustResilienceStrategy

+###org/ehcache/core/spi/cache/AbstractValueHolder
@3.0.0.m5
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#setExpirationTime(JLjava/util/concurrent/TimeUnit;)V
+#accessed(JLorg/ehcache/expiry/Duration;)V
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#setLastAccessTime(JLjava/util/concurrent/TimeUnit;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
+#toString()Ljava/lang/String;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/AbstractValueHolder

+###org/ehcache/core/spi/cache/CacheProvider
@3.0.0.m5
+#createCache(Ljava/lang/Class;Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/Ehcache;
+#releaseCache(Lorg/ehcache/core/Ehcache;)V
@3.0.0.rc1
+#createCache(Ljava/lang/Class;Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/EhcacheWithLoaderWriter;
+#releaseCache(Lorg/ehcache/core/EhcacheWithLoaderWriter;)V
-#createCache(Ljava/lang/Class;Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/Ehcache;
-#releaseCache(Lorg/ehcache/core/Ehcache;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/CacheProvider

+###org/ehcache/core/spi/cache/ConfigurationChangeSupport
@3.0.0.m5
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/ConfigurationChangeSupport

+###org/ehcache/core/spi/cache/Store$Configuration
@3.0.0.m5
+#getKeyType()Ljava/lang/Class;
+#getValueType()Ljava/lang/Class;
+#getEvictionVeto()Lorg/ehcache/config/EvictionVeto;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getExpiry()Lorg/ehcache/expiry/Expiry;
+#getResourcePools()Lorg/ehcache/config/ResourcePools;
+#getKeySerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getValueSerializer()Lorg/ehcache/spi/serialization/Serializer;
+#getOrderedEventParallelism()I
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store$Configuration

+###org/ehcache/core/spi/cache/Store$Iterator
@3.0.0.m5
+#hasNext()Z
+#next()Ljava/lang/Object;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store$Iterator

+###org/ehcache/core/spi/cache/Store$Provider
@3.0.0.m5
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store$Provider

+###org/ehcache/core/spi/cache/Store$ValueHolder
@3.0.0.m5
+#value()Ljava/lang/Object;
+#creationTime(Ljava/util/concurrent/TimeUnit;)J
+#expirationTime(Ljava/util/concurrent/TimeUnit;)J
+#isExpired(JLjava/util/concurrent/TimeUnit;)Z
+#lastAccessTime(Ljava/util/concurrent/TimeUnit;)J
+#hitRate(JLjava/util/concurrent/TimeUnit;)F
+#hits()J
+#getId()J
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store$ValueHolder

+###org/ehcache/core/spi/cache/Store
@3.0.0.m5
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
@3.0.0.rc1
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#put(Ljava/lang/Object;Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store

+###org/ehcache/core/spi/cache/events/StoreEvent
@3.0.0.m5
+#getType()Lorg/ehcache/event/EventType;
+#getKey()Ljava/lang/Object;
+#getNewValue()Ljava/lang/Object;
+#getOldValue()Ljava/lang/Object;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/events/StoreEvent

+###org/ehcache/core/spi/cache/events/StoreEventFilter
@3.0.0.m5
+#acceptEvent(Lorg/ehcache/event/EventType;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
@3.0.0.rc2
-###org/ehcache/core/spi/cache/events/StoreEventFilter

+###org/ehcache/core/spi/cache/events/StoreEventListener
@3.0.0.m5
+#onEvent(Lorg/ehcache/core/spi/cache/events/StoreEvent;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/events/StoreEventListener

+###org/ehcache/core/spi/cache/events/StoreEventSource
@3.0.0.m5
+#addEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
+#removeEventListener(Lorg/ehcache/core/spi/cache/events/StoreEventListener;)V
+#addEventFilter(Lorg/ehcache/core/spi/cache/events/StoreEventFilter;)V
+#setEventOrdering(Z)V
+#isEventOrdering()Z
@3.0.0.rc2
-###org/ehcache/core/spi/cache/events/StoreEventSource

+###org/ehcache/core/spi/cache/tiering/AuthoritativeTier$Provider
@3.0.0.m5
+#createAuthoritativeTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;
+#releaseAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
+#initAuthoritativeTier(Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/AuthoritativeTier$Provider

+###org/ehcache/core/spi/cache/tiering/AuthoritativeTier
@3.0.0.m5
+#getAndFault(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#flush(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)Z
@3.0.0.rc1
+#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsentAndFault(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/AuthoritativeTier

+###org/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener
@3.0.0.m5
+#onInvalidation(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener

+###org/ehcache/core/spi/cache/tiering/CachingTier$Provider
@3.0.0.m5
+#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/CachingTier;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/CachingTier$Provider

+###org/ehcache/core/spi/cache/tiering/CachingTier
@3.0.0.m5
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#clear()V
+#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
@3.0.0.rc1
+#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#getOrComputeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/CachingTier

+###org/ehcache/core/spi/cache/tiering/HigherCachingTier$Provider
@3.0.0.m5
+#createHigherCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;
+#releaseHigherCachingTier(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;)V
+#initHigherCachingTier(Lorg/ehcache/core/spi/cache/tiering/HigherCachingTier;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/HigherCachingTier$Provider

+###org/ehcache/core/spi/cache/tiering/HigherCachingTier
@3.0.0.m5
+#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/function/Function;)V
@3.0.0.rc1
+#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)V
-#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/function/Function;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/HigherCachingTier

+###org/ehcache/core/spi/cache/tiering/LowerCachingTier$Provider
@3.0.0.m5
+#createCachingTier(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;
+#releaseCachingTier(Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
+#initCachingTier(Lorg/ehcache/core/spi/cache/tiering/LowerCachingTier;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/LowerCachingTier$Provider

+###org/ehcache/core/spi/cache/tiering/LowerCachingTier
@3.0.0.m5
+#installMapping(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#getAndRemove(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;)V
+#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
+#clear()V
+#setInvalidationListener(Lorg/ehcache/core/spi/cache/tiering/CachingTier$InvalidationListener;)V
@3.0.0.rc1
+#installMapping(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#invalidate(Ljava/lang/Object;Lorg/ehcache/core/spi/function/NullaryFunction;)V
-#installMapping(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#invalidate(Ljava/lang/Object;Lorg/ehcache/function/NullaryFunction;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/LowerCachingTier

+###org/ehcache/core/spi/service/ExecutionServiceFactory
@3.0.0.m5
@3.0.0.rc2
-###org/ehcache/core/spi/service/ExecutionServiceFactory

+###org/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier
@3.0.0.m5
@3.1.0
-###org/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier

+###org/ehcache/core/spi/sizeof/SizeOfEngine
@3.0.0.m5
+#sizeof(Ljava/lang/Object;Lorg/ehcache/core/spi/cache/Store$ValueHolder;)J
@3.0.0.rc2
-###org/ehcache/core/spi/sizeof/SizeOfEngine

+###org/ehcache/core/spi/sizeof/SizeOfEngineProvider
@3.0.0.m5
+#createSizeOfEngine(Lorg/ehcache/config/ResourceUnit;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/sizeof/SizeOfEngine;
@3.0.0.rc2
-###org/ehcache/core/spi/sizeof/SizeOfEngineProvider

+###org/ehcache/core/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome
@3.0.0.m5
+#values()[Lorg/ehcache/core/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome;
@3.0.0.rc2
-###org/ehcache/core/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome

+###org/ehcache/core/util/ConcurrentWeakIdentityHashMap
@3.0.0.m5
+#<init>()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#clear()V
+#keySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
@3.0.0.rc1
-###org/ehcache/core/util/ConcurrentWeakIdentityHashMap

+###org/ehcache/core/util/Functions
@3.0.0.m5
+#<init>()V
+#memoize(Lorg/ehcache/function/Function;)Lorg/ehcache/function/Function;
+#memoize(Lorg/ehcache/function/BiFunction;)Lorg/ehcache/function/BiFunction;
@3.0.0.rc1
-###org/ehcache/core/util/Functions

+###org/ehcache/core/util/KeysIterable
@3.0.0.m5
+#keysOf(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#iterator()Ljava/util/Iterator;
@3.0.0.rc1
-###org/ehcache/core/util/KeysIterable

+###org/ehcache/core/util/LifeCycleUtils
@3.0.0.m5
+#<init>()V
+#closerFor(Ljava/io/Closeable;)Lorg/ehcache/spi/LifeCycled;
@3.0.0.rc1
-###org/ehcache/core/util/LifeCycleUtils

+###org/ehcache/exceptions/CacheIterationException
@3.0.0.m4
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0
-###org/ehcache/exceptions/CacheIterationException

+###org/ehcache/impl/config/sizeof/DefaultSizeOfEngineConfiguration
@3.0.0.m5
+#<init>(JLorg/ehcache/config/units/MemoryUnit;J)V
+#getServiceType()Ljava/lang/Class;
+#getMaxObjectGraphSize()J
+#getMaxObjectSize()J
+#getUnit()Lorg/ehcache/config/units/MemoryUnit;
@3.0.0.rc2
-###org/ehcache/impl/config/sizeof/DefaultSizeOfEngineConfiguration

+###org/ehcache/impl/config/sizeof/DefaultSizeOfEngineProviderConfiguration
@3.0.0.m5
+#<init>(JLorg/ehcache/config/units/MemoryUnit;J)V
+#getServiceType()Ljava/lang/Class;
+#getMaxObjectGraphSize()J
+#getMaxObjectSize()J
+#getUnit()Lorg/ehcache/config/units/MemoryUnit;
@3.0.0.rc2
-###org/ehcache/impl/config/sizeof/DefaultSizeOfEngineProviderConfiguration

+###org/ehcache/impl/internal/store/DefaultStoreProvider
@3.0.0.m5
+#<init>()V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.rc2
-###org/ehcache/impl/internal/store/DefaultStoreProvider

+###org/ehcache/impl/internal/store/DefaultStoreProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/DefaultStoreProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.rc2
-###org/ehcache/impl/internal/store/DefaultStoreProviderFactory

+###org/ehcache/impl/internal/store/tiering/CacheStore$Provider
@3.0.0.m5
+#<init>()V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.rc2
+#rank(Ljava/util/Set;Ljava/util/Collection;)I
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
-#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
-#initStore(Lorg/ehcache/core/spi/cache/Store;)V
@3.0.0
-###org/ehcache/impl/internal/store/tiering/CacheStore$Provider

+###org/ehcache/impl/internal/store/tiering/CacheStore
@3.0.0.m5
+#<init>(Lorg/ehcache/core/spi/cache/tiering/CachingTier;Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.rc1
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
+#remove(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
-#put(Ljava/lang/Object;Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;)V
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
-#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
-#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/tiering/CachingTier;Lorg/ehcache/core/spi/store/tiering/AuthoritativeTier;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#<init>(Lorg/ehcache/core/spi/cache/tiering/CachingTier;Lorg/ehcache/core/spi/cache/tiering/AuthoritativeTier;)V
-#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
-#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
-#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
@3.0.0
-###org/ehcache/impl/internal/store/tiering/CacheStore

+###org/ehcache/impl/internal/store/tiering/CacheStoreProviderFactory
@3.0.0.m5
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/impl/internal/store/tiering/CacheStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0
-###org/ehcache/impl/internal/store/tiering/CacheStoreProviderFactory

+###org/ehcache/impl/internal/store/tiering/CacheStoreServiceConfiguration
@3.0.0.m5
+#<init>()V
+#cachingTierProvider(Ljava/lang/Class;)Lorg/ehcache/impl/internal/store/tiering/CacheStoreServiceConfiguration;
+#authoritativeTierProvider(Ljava/lang/Class;)Lorg/ehcache/impl/internal/store/tiering/CacheStoreServiceConfiguration;
+#cachingTierProvider()Ljava/lang/Class;
+#authoritativeTierProvider()Ljava/lang/Class;
+#getServiceType()Ljava/lang/Class;
@3.0.0.rc2
-###org/ehcache/impl/internal/store/tiering/CacheStoreServiceConfiguration

+###org/ehcache/impl/internal/store/tiering/CompoundCachingTierServiceConfiguration
@3.0.0.m5
+#<init>()V
+#higherProvider()Ljava/lang/Class;
+#higherProvider(Ljava/lang/Class;)Lorg/ehcache/impl/internal/store/tiering/CompoundCachingTierServiceConfiguration;
+#lowerProvider()Ljava/lang/Class;
+#lowerProvider(Ljava/lang/Class;)Lorg/ehcache/impl/internal/store/tiering/CompoundCachingTierServiceConfiguration;
+#getServiceType()Ljava/lang/Class;
@3.1.0
-###org/ehcache/impl/internal/store/tiering/CompoundCachingTierServiceConfiguration

+###org/ehcache/impl/serialization/CompactJavaSerializer$SerializableDataKey
@3.0.0.m5
+#<init>(Ljava/io/ObjectStreamClass;Z)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#forClass()Ljava/lang/Class;
+#setClass(Ljava/lang/Class;)V
+#getObjectStreamClass()Ljava/io/ObjectStreamClass;
@3.0.0.rc2
-###org/ehcache/impl/serialization/CompactJavaSerializer$SerializableDataKey

+###org/ehcache/jsr107/tck/Eh107MBeanServerBuilder$Eh107MBeanServerDelegate
@3.0.0.m4
+#<init>(Ljavax/management/MBeanServerDelegate;)V
+#getSpecificationName()Ljava/lang/String;
+#getSpecificationVersion()Ljava/lang/String;
+#getSpecificationVendor()Ljava/lang/String;
+#getImplementationName()Ljava/lang/String;
+#getImplementationVersion()Ljava/lang/String;
+#getImplementationVendor()Ljava/lang/String;
+#getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;
+#addNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#removeNotificationListener(Ljavax/management/NotificationListener;Ljavax/management/NotificationFilter;Ljava/lang/Object;)V
+#removeNotificationListener(Ljavax/management/NotificationListener;)V
+#sendNotification(Ljavax/management/Notification;)V
+#getMBeanServerId()Ljava/lang/String;
@3.0.0.rc2
-###org/ehcache/jsr107/tck/Eh107MBeanServerBuilder$Eh107MBeanServerDelegate

+###org/ehcache/jsr107/tck/Eh107MBeanServerBuilder
@3.0.0.m4
+#<init>()V
+#newMBeanServer(Ljava/lang/String;Ljavax/management/MBeanServer;Ljavax/management/MBeanServerDelegate;)Ljavax/management/MBeanServer;
@3.0.0.rc2
-###org/ehcache/jsr107/tck/Eh107MBeanServerBuilder

+###org/ehcache/management/CollectorService
@3.0.0.m5
@3.0.0.rc3
-###org/ehcache/management/CollectorService

+###org/ehcache/management/ManagementRegistryService
@3.0.0.m5
+#getConfiguration()Lorg/ehcache/management/ManagementRegistryServiceConfiguration;
@3.0.0.rc3
-###org/ehcache/management/ManagementRegistryService

+###org/ehcache/management/ManagementRegistryServiceConfiguration
@3.0.0.m5
+#getContext()Lorg/terracotta/management/context/Context;
+#getStatisticsExecutorAlias()Ljava/lang/String;
+#getCollectorExecutorAlias()Ljava/lang/String;
+#getConfigurationFor(Ljava/lang/Class;)Lorg/ehcache/management/config/StatisticsProviderConfiguration;
@3.0.0.rc3
-###org/ehcache/management/ManagementRegistryServiceConfiguration

+###org/ehcache/management/SharedManagementService
@3.0.0.m4
+#getContexts()Ljava/util/Collection;
+#getCapabilities()Ljava/util/Map;
@3.0.0.m5
+#getContextContainers()Ljava/util/Map;
-#getContexts()Ljava/util/Collection;
@3.0.0.rc3
-###org/ehcache/management/SharedManagementService

+###org/ehcache/management/providers/CacheBinding
@3.0.0.m5
+#<init>(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#getAlias()Ljava/lang/String;
+#getCache()Lorg/ehcache/Cache;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.rc3
-###org/ehcache/management/providers/CacheBinding

+###org/ehcache/management/providers/EhcacheStatisticCollectorProvider
@3.0.0.m5
+#<init>(Lorg/terracotta/management/context/Context;)V
@3.0.0.rc3
-###org/ehcache/management/providers/EhcacheStatisticCollectorProvider

+###org/ehcache/management/registry/DefaultCollectorService
@3.0.0.m5
+#<init>(Lorg/terracotta/management/registry/MessageConsumer;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V
+#startStatisticCollector()V
+#stopStatisticCollector()V
+#updateCollectedStatistics(Ljava/lang/String;Ljava/util/Collection;)V
@3.0.0.rc3
-###org/ehcache/management/registry/DefaultCollectorService

+###org/ehcache/management/registry/DefaultManagementRegistryService
@3.0.0.m5
+#<init>()V
+#<init>(Lorg/ehcache/management/ManagementRegistryServiceConfiguration;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#cacheAdded(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#cacheRemoved(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#stateTransition(Lorg/ehcache/Status;Lorg/ehcache/Status;)V
+#getConfiguration()Lorg/ehcache/management/ManagementRegistryServiceConfiguration;
+#getContextContainer()Lorg/terracotta/management/context/ContextContainer;
@3.0.0.rc3
-###org/ehcache/management/registry/DefaultManagementRegistryService

+###org/ehcache/management/registry/DefaultSharedManagementService
@3.0.0.m4
+#<init>()V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#getContexts()Ljava/util/Collection;
+#getCapabilities()Ljava/util/Map;
+#getManagementProvidersByCapability(Ljava/lang/String;)Ljava/util/Collection;
+#withCapability(Ljava/lang/String;)Lorg/ehcache/management/CapabilityManagement;
@3.0.0.m5
+#getContextContainers()Ljava/util/Map;
+#withCapability(Ljava/lang/String;)Lorg/terracotta/management/registry/CapabilityManagement;
-#getContexts()Ljava/util/Collection;
-#withCapability(Ljava/lang/String;)Lorg/ehcache/management/CapabilityManagement;
@3.0.0.rc3
-###org/ehcache/management/registry/DefaultSharedManagementService

+###org/ehcache/management/registry/EhcacheNotification
@3.0.0.m5
+#values()[Lorg/ehcache/management/registry/EhcacheNotification;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/management/registry/EhcacheNotification;
@3.0.0.rc3
-###org/ehcache/management/registry/EhcacheNotification

+###org/terracotta/management/call/ContextualReturn
@3.0.0.m5
+#hasValue()Z
+#getValue()Ljava/lang/Object;
+#getContext()Lorg/terracotta/management/context/Context;
+#of(Ljava/lang/String;Lorg/terracotta/management/context/Context;Ljava/lang/Object;)Lorg/terracotta/management/call/ContextualReturn;
+#empty(Ljava/lang/String;Lorg/terracotta/management/context/Context;)Lorg/terracotta/management/call/ContextualReturn;
+#getCapability()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc2
+#getValue()Ljava/io/Serializable;
+#of(Ljava/lang/String;Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/io/Serializable;)Lorg/terracotta/management/call/ContextualReturn;
+#empty(Ljava/lang/String;Lorg/terracotta/management/context/Context;Ljava/lang/String;)Lorg/terracotta/management/call/ContextualReturn;
+#getMethodName()Ljava/lang/String;
-#getValue()Ljava/lang/Object;
-#of(Ljava/lang/String;Lorg/terracotta/management/context/Context;Ljava/lang/Object;)Lorg/terracotta/management/call/ContextualReturn;
-#empty(Ljava/lang/String;Lorg/terracotta/management/context/Context;)Lorg/terracotta/management/call/ContextualReturn;
@3.0.0.rc3
-###org/terracotta/management/call/ContextualReturn

+###org/terracotta/management/call/Parameter
@3.0.0.m5
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V
+#getValue()Ljava/lang/Object;
+#getClassName()Ljava/lang/String;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/call/Parameter

+###org/terracotta/management/capabilities/ActionsCapability
@3.0.0.m5
+#<init>(Ljava/lang/String;Lorg/terracotta/management/capabilities/context/CapabilityContext;[Lorg/terracotta/management/capabilities/descriptors/Descriptor;)V
+#<init>(Ljava/lang/String;Lorg/terracotta/management/capabilities/context/CapabilityContext;Ljava/util/Collection;)V
+#getName()Ljava/lang/String;
+#getDescriptors()Ljava/util/Collection;
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/capabilities/ActionsCapability

+###org/terracotta/management/capabilities/Capability
@3.0.0.m5
+#getName()Ljava/lang/String;
+#getDescriptors()Ljava/util/Collection;
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
@3.0.0.rc3
-###org/terracotta/management/capabilities/Capability

+###org/terracotta/management/capabilities/StatisticsCapability$Properties
@3.0.0.m5
+#<init>(JLjava/util/concurrent/TimeUnit;IJLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)V
+#getAverageWindowDuration()J
+#getAverageWindowUnit()Ljava/util/concurrent/TimeUnit;
+#getHistorySize()I
+#getHistoryInterval()J
+#getHistoryIntervalUnit()Ljava/util/concurrent/TimeUnit;
+#getTimeToDisable()J
+#getTimeToDisableUnit()Ljava/util/concurrent/TimeUnit;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/capabilities/StatisticsCapability$Properties

+###org/terracotta/management/capabilities/StatisticsCapability
@3.0.0.m5
+#<init>(Ljava/lang/String;Lorg/terracotta/management/capabilities/StatisticsCapability$Properties;Ljava/util/Collection;Lorg/terracotta/management/capabilities/context/CapabilityContext;)V
+#getProperties()Lorg/terracotta/management/capabilities/StatisticsCapability$Properties;
+#getDescriptors()Ljava/util/Collection;
+#getName()Ljava/lang/String;
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
@3.0.0.rc1
+#<init>(Ljava/lang/String;Lorg/terracotta/management/capabilities/StatisticsCapability$Properties;Lorg/terracotta/management/capabilities/context/CapabilityContext;[Lorg/terracotta/management/capabilities/descriptors/Descriptor;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/capabilities/StatisticsCapability

+###org/terracotta/management/capabilities/context/CapabilityContext$Attribute
@3.0.0.m5
+#<init>(Ljava/lang/String;Z)V
+#getName()Ljava/lang/String;
+#isRequired()Z
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/capabilities/context/CapabilityContext$Attribute

+###org/terracotta/management/capabilities/context/CapabilityContext
@3.0.0.m5
+#<init>([Lorg/terracotta/management/capabilities/context/CapabilityContext$Attribute;)V
+#<init>(Ljava/util/Collection;)V
+#getAttributes()Ljava/util/Collection;
+#getRequiredAttributeNames()Ljava/util/Collection;
+#getRequiredAttributes()Ljava/util/Collection;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/capabilities/context/CapabilityContext

+###org/terracotta/management/capabilities/descriptors/CallDescriptor$Parameter
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getType()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/capabilities/descriptors/CallDescriptor$Parameter

+###org/terracotta/management/capabilities/descriptors/CallDescriptor
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getReturnType()Ljava/lang/String;
+#getParameters()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc1
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/terracotta/management/capabilities/descriptors/CallDescriptor$Parameter;)V
@3.0.0.rc3
-###org/terracotta/management/capabilities/descriptors/CallDescriptor

+###org/terracotta/management/capabilities/descriptors/Descriptor
@3.0.0.m5
+#getName()Ljava/lang/String;
@3.0.0.rc3
-###org/terracotta/management/capabilities/descriptors/Descriptor

+###org/terracotta/management/capabilities/descriptors/StatisticDescriptor
@3.0.0.m5
+#<init>(Ljava/lang/String;Lorg/terracotta/management/stats/StatisticType;)V
+#getName()Ljava/lang/String;
+#getType()Lorg/terracotta/management/stats/StatisticType;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/capabilities/descriptors/StatisticDescriptor

+###org/terracotta/management/capabilities/descriptors/StatisticDescriptorCategory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getStatistics()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc1
+#<init>(Ljava/lang/String;[Lorg/terracotta/management/capabilities/descriptors/StatisticDescriptor;)V
@3.0.0.rc3
-###org/terracotta/management/capabilities/descriptors/StatisticDescriptorCategory

+###org/terracotta/management/context/Context
@3.0.0.m5
+#toMap()Ljava/util/Map;
+#with(Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/management/context/Context;
+#with(Ljava/util/Map;)Lorg/terracotta/management/context/Context;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#size()I
+#isEmpty()Z
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#contains(Lorg/terracotta/management/context/Context;)Z
+#contains(Ljava/lang/String;)Z
+#contains(Ljava/lang/String;Ljava/lang/String;)Z
+#create(Ljava/lang/String;Ljava/lang/String;)Lorg/terracotta/management/context/Context;
+#create(Ljava/util/Map;)Lorg/terracotta/management/context/Context;
+#empty()Lorg/terracotta/management/context/Context;
@3.0.0.rc3
-###org/terracotta/management/context/Context

+###org/terracotta/management/context/ContextContainer
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;[Lorg/terracotta/management/context/ContextContainer;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/String;
+#getSubContexts()Ljava/util/Collection;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/context/ContextContainer

+###org/terracotta/management/message/DefaultMessage
@3.0.0.m5
+#<init>(JLjava/lang/String;Ljava/lang/Object;)V
+#<init>(JLorg/terracotta/management/notification/ContextualNotification;)V
+#<init>(JLorg/terracotta/management/call/ContextualReturn;)V
+#<init>(J[Lorg/terracotta/management/stats/ContextualStatistics;)V
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#getTimeMillis()J
+#getType()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#<init>(JLjava/lang/String;Ljava/lang/Object;)V
@3.0.0.rc3
-###org/terracotta/management/message/DefaultMessage

+###org/terracotta/management/message/Message
@3.0.0.m5
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#getType()Ljava/lang/String;
+#getTimeMillis()J
@3.0.0.rc3
-###org/terracotta/management/message/Message

+###org/terracotta/management/message/MessageType
@3.0.0.m5
+#values()[Lorg/terracotta/management/message/MessageType;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/management/message/MessageType;
@3.0.0.rc3
-###org/terracotta/management/message/MessageType

+###org/terracotta/management/notification/ContextualNotification
@3.0.0.m5
+#<init>(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/util/Map;)V
+#<init>(Lorg/terracotta/management/context/Context;Ljava/lang/String;)V
+#getContext()Lorg/terracotta/management/context/Context;
+#getAttributes()Ljava/util/Map;
+#getType()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/notification/ContextualNotification

+###org/terracotta/management/registry/AbstractManagementProvider
@3.0.0.m5
+#<init>(Ljava/lang/Class;)V
+#getManagedType()Ljava/lang/Class;
+#getCapabilityName()Ljava/lang/String;
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#close()V
+#supports(Lorg/terracotta/management/context/Context;)Z
+#collectStatistics(Lorg/terracotta/management/context/Context;Ljava/util/Collection;J)Ljava/util/Map;
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;[Lorg/terracotta/management/call/Parameter;)V
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Ljava/lang/Object;
+#getDescriptors()Ljava/util/Collection;
@3.0.0.rc3
-###org/terracotta/management/registry/AbstractManagementProvider

+###org/terracotta/management/registry/AbstractManagementRegistry
@3.0.0.m5
+#<init>()V
+#addManagementProvider(Lorg/terracotta/management/registry/ManagementProvider;)V
+#removeManagementProvider(Lorg/terracotta/management/registry/ManagementProvider;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#withCapability(Ljava/lang/String;)Lorg/terracotta/management/registry/CapabilityManagement;
+#getCapabilities()Ljava/util/Collection;
+#getManagementProvidersByCapability(Ljava/lang/String;)Ljava/util/List;
+#getManagementProvidersByCapability(Ljava/lang/String;)Ljava/util/Collection;
@3.0.0.rc3
-###org/terracotta/management/registry/AbstractManagementRegistry

+###org/terracotta/management/registry/CallQuery$Builder
@3.0.0.m5
@3.0.0.rc3
-###org/terracotta/management/registry/CallQuery$Builder

+###org/terracotta/management/registry/CallQuery
@3.0.0.m5
+#getReturnType()Ljava/lang/Class;
+#getMethodName()Ljava/lang/String;
+#getParameters()[Lorg/terracotta/management/call/Parameter;
@3.0.0.rc3
-###org/terracotta/management/registry/CallQuery

+###org/terracotta/management/registry/CapabilityManagement
@3.0.0.m5
+#queryStatistic(Ljava/lang/String;)Lorg/terracotta/management/registry/StatisticQuery$Builder;
+#queryStatistics(Ljava/util/Collection;)Lorg/terracotta/management/registry/StatisticQuery$Builder;
+#call(Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Lorg/terracotta/management/registry/CallQuery$Builder;
+#call(Ljava/lang/String;[Lorg/terracotta/management/call/Parameter;)Lorg/terracotta/management/registry/CallQuery$Builder;
@3.0.0.rc3
-###org/terracotta/management/registry/CapabilityManagement

+###org/terracotta/management/registry/CapabilityManagementSupport
@3.0.0.m5
+#withCapability(Ljava/lang/String;)Lorg/terracotta/management/registry/CapabilityManagement;
+#getManagementProvidersByCapability(Ljava/lang/String;)Ljava/util/Collection;
@3.0.0.rc3
-###org/terracotta/management/registry/CapabilityManagementSupport

+###org/terracotta/management/registry/DefaultCallQuery
@3.0.0.m5
+#<init>(Lorg/terracotta/management/registry/CapabilityManagementSupport;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;Ljava/util/Collection;)V
+#getReturnType()Ljava/lang/Class;
+#getCapabilityName()Ljava/lang/String;
+#getContexts()Ljava/util/Collection;
+#getMethodName()Ljava/lang/String;
+#getParameters()[Lorg/terracotta/management/call/Parameter;
+#execute()Lorg/terracotta/management/registry/ResultSet;
@3.0.0.rc3
-###org/terracotta/management/registry/DefaultCallQuery

+###org/terracotta/management/registry/DefaultCallQueryBuilder
@3.0.0.m5
+#<init>(Lorg/terracotta/management/registry/CapabilityManagementSupport;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)V
+#build()Lorg/terracotta/management/registry/CallQuery;
+#on(Lorg/terracotta/management/context/Context;)Lorg/terracotta/management/registry/CallQuery$Builder;
+#on(Ljava/util/Collection;)Lorg/terracotta/management/registry/CallQuery$Builder;
+#build()Ljava/lang/Object;
+#on(Ljava/util/Collection;)Ljava/lang/Object;
+#on(Lorg/terracotta/management/context/Context;)Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/registry/DefaultCallQueryBuilder

+###org/terracotta/management/registry/DefaultCapabilityManagement
@3.0.0.m5
+#<init>(Lorg/terracotta/management/registry/CapabilityManagementSupport;Ljava/lang/String;)V
+#queryStatistic(Ljava/lang/String;)Lorg/terracotta/management/registry/StatisticQuery$Builder;
+#queryStatistics(Ljava/util/Collection;)Lorg/terracotta/management/registry/StatisticQuery$Builder;
+#call(Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Lorg/terracotta/management/registry/CallQuery$Builder;
+#call(Ljava/lang/String;[Lorg/terracotta/management/call/Parameter;)Lorg/terracotta/management/registry/CallQuery$Builder;
@3.0.0.rc3
-###org/terracotta/management/registry/DefaultCapabilityManagement

+###org/terracotta/management/registry/DefaultResultSet
@3.0.0.m5
+#<init>(Ljava/util/Map;)V
+#getResult(Lorg/terracotta/management/context/Context;)Ljava/lang/Object;
+#getSingleResult()Ljava/lang/Object;
+#isEmpty()Z
+#size()I
+#iterator()Ljava/util/Iterator;
@3.0.0.rc3
-###org/terracotta/management/registry/DefaultResultSet

+###org/terracotta/management/registry/DefaultStatisticQuery
@3.0.0.m5
+#<init>(Lorg/terracotta/management/registry/CapabilityManagementSupport;Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;J)V
+#getCapabilityName()Ljava/lang/String;
+#getContexts()Ljava/util/Collection;
+#getStatisticNames()Ljava/util/Collection;
+#getSince()J
+#execute()Lorg/terracotta/management/registry/ResultSet;
@3.0.0.rc3
-###org/terracotta/management/registry/DefaultStatisticQuery

+###org/terracotta/management/registry/DefaultStatisticQueryBuilder
@3.0.0.m5
+#<init>(Lorg/terracotta/management/registry/CapabilityManagementSupport;Ljava/lang/String;Ljava/util/Collection;)V
+#build()Lorg/terracotta/management/registry/StatisticQuery;
+#on(Lorg/terracotta/management/context/Context;)Lorg/terracotta/management/registry/StatisticQuery$Builder;
+#on(Ljava/util/Collection;)Lorg/terracotta/management/registry/StatisticQuery$Builder;
+#since(J)Lorg/terracotta/management/registry/StatisticQuery$Builder;
+#build()Ljava/lang/Object;
+#on(Ljava/util/Collection;)Ljava/lang/Object;
+#on(Lorg/terracotta/management/context/Context;)Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/registry/DefaultStatisticQueryBuilder

+###org/terracotta/management/registry/ManagementProvider
@3.0.0.m5
+#getManagedType()Ljava/lang/Class;
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#getDescriptors()Ljava/util/Collection;
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#getCapability()Lorg/terracotta/management/capabilities/Capability;
+#getCapabilityName()Ljava/lang/String;
+#collectStatistics(Lorg/terracotta/management/context/Context;Ljava/util/Collection;J)Ljava/util/Map;
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Ljava/lang/Object;
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;[Lorg/terracotta/management/call/Parameter;)V
+#supports(Lorg/terracotta/management/context/Context;)Z
+#close()V
@3.0.0.rc3
-###org/terracotta/management/registry/ManagementProvider

+###org/terracotta/management/registry/ManagementRegistry
@3.0.0.m5
+#addManagementProvider(Lorg/terracotta/management/registry/ManagementProvider;)V
+#removeManagementProvider(Lorg/terracotta/management/registry/ManagementProvider;)V
+#register(Ljava/lang/Object;)V
+#unregister(Ljava/lang/Object;)V
+#getCapabilities()Ljava/util/Collection;
+#getContextContainer()Lorg/terracotta/management/context/ContextContainer;
@3.0.0.rc3
-###org/terracotta/management/registry/ManagementRegistry

+###org/terracotta/management/registry/MessageConsumer
@3.0.0.m5
+#accept(Lorg/terracotta/management/message/Message;)V
@3.0.0.rc3
-###org/terracotta/management/registry/MessageConsumer

+###org/terracotta/management/registry/Query
@3.0.0.m5
+#getCapabilityName()Ljava/lang/String;
+#getContexts()Ljava/util/Collection;
+#execute()Lorg/terracotta/management/registry/ResultSet;
@3.0.0.rc3
-###org/terracotta/management/registry/Query

+###org/terracotta/management/registry/QueryBuilder
@3.0.0.m5
+#on(Lorg/terracotta/management/context/Context;)Ljava/lang/Object;
+#on(Ljava/util/Collection;)Ljava/lang/Object;
+#build()Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/registry/QueryBuilder

+###org/terracotta/management/registry/ResultSet
@3.0.0.m5
+#getResult(Lorg/terracotta/management/context/Context;)Ljava/lang/Object;
+#getSingleResult()Ljava/lang/Object;
+#size()I
+#isEmpty()Z
@3.0.0.rc3
-###org/terracotta/management/registry/ResultSet

+###org/terracotta/management/registry/StatisticQuery$Builder
@3.0.0.m5
+#since(J)Lorg/terracotta/management/registry/StatisticQuery$Builder;
@3.0.0.rc3
-###org/terracotta/management/registry/StatisticQuery$Builder

+###org/terracotta/management/registry/StatisticQuery
@3.0.0.m5
+#getStatisticNames()Ljava/util/Collection;
+#getSince()J
@3.0.0.rc3
-###org/terracotta/management/registry/StatisticQuery

+###org/terracotta/management/registry/action/AbstractActionManagementProvider
@3.0.0.m5
+#<init>(Ljava/lang/Class;)V
+#getCapability()Lorg/terracotta/management/capabilities/Capability;
+#getDescriptors()Ljava/util/Collection;
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/registry/action/AbstractActionManagementProvider

+###org/terracotta/management/registry/action/ActionCapability
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/Collection;Lorg/terracotta/management/capabilities/context/CapabilityContext;)V
+#getName()Ljava/lang/String;
+#getDescriptors()Ljava/util/Collection;
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
@3.0.0.rc1
-###org/terracotta/management/registry/action/ActionCapability

+###org/terracotta/management/registry/action/Exposed
@3.0.0.m5
@3.0.0.rc3
-###org/terracotta/management/registry/action/Exposed

+###org/terracotta/management/registry/action/ExposedObject
@3.0.0.m5
+#getTarget()Ljava/lang/Object;
+#getClassLoader()Ljava/lang/ClassLoader;
+#matches(Lorg/terracotta/management/context/Context;)Z
@3.0.0.rc3
-###org/terracotta/management/registry/action/ExposedObject

+###org/terracotta/management/registry/action/Named
@3.0.0.m5
+#value()Ljava/lang/String;
@3.0.0.rc3
-###org/terracotta/management/registry/action/Named

+###org/terracotta/management/registry/action/RequiredContext
@3.0.0.m5
+#value()[Lorg/terracotta/management/registry/action/Named;
@3.0.0.rc3
-###org/terracotta/management/registry/action/RequiredContext

+###org/terracotta/management/registry/collect/StatisticCollector
@3.0.0.m5
+#startStatisticCollector()V
+#stopStatisticCollector()V
+#updateCollectedStatistics(Ljava/lang/String;Ljava/util/Collection;)V
@3.0.0.rc3
-###org/terracotta/management/registry/collect/StatisticCollector

+###org/terracotta/management/registry/collect/StatisticCollectorProvider$ExposedStatisticCollector
@3.0.0.m5
+#<init>(Lorg/terracotta/management/registry/collect/StatisticCollector;Lorg/terracotta/management/context/Context;)V
+#updateCollectedStatistics(Ljava/lang/String;Ljava/util/Collection;)V
+#stopStatisticCollector()V
+#startStatisticCollector()V
+#getTarget()Lorg/terracotta/management/registry/collect/StatisticCollector;
+#getClassLoader()Ljava/lang/ClassLoader;
+#matches(Lorg/terracotta/management/context/Context;)Z
+#getTarget()Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/registry/collect/StatisticCollectorProvider$ExposedStatisticCollector

+###org/terracotta/management/registry/collect/StatisticCollectorProvider
@3.0.0.m5
+#<init>(Ljava/lang/Class;Lorg/terracotta/management/context/Context;)V
@3.0.0.rc3
-###org/terracotta/management/registry/collect/StatisticCollectorProvider

+###org/terracotta/management/stats/AbstractStatistic
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
+#getUnit()Ljava/lang/Object;
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc1
+#<init>(Ljava/io/Serializable;Ljava/io/Serializable;)V
+#getUnit()Ljava/io/Serializable;
+#getValue()Ljava/io/Serializable;
-#<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
-#getUnit()Ljava/lang/Object;
-#getName()Ljava/lang/String;
-#getValue()Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/stats/AbstractStatistic

+###org/terracotta/management/stats/AbstractStatisticHistory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/Object;)V
@3.0.0.rc1
+#<init>(Ljava/util/List;Ljava/io/Serializable;)V
+#<init>(Ljava/io/Serializable;[Lorg/terracotta/management/stats/Sample;)V
+#getUnit()Ljava/io/Serializable;
+#getValue()[Lorg/terracotta/management/stats/Sample;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getValue()Ljava/io/Serializable;
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/lang/Object;)V
@3.0.0.rc3
-###org/terracotta/management/stats/AbstractStatisticHistory

+###org/terracotta/management/stats/Category
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getStatistics()Ljava/util/List;
@3.0.0.rc1
-###org/terracotta/management/stats/Category

+###org/terracotta/management/stats/ContextualStatistics
@3.0.0.m5
+#<init>(Ljava/lang/String;Lorg/terracotta/management/context/Context;Ljava/util/Map;)V
+#getCapability()Ljava/lang/String;
+#size()I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#getStatistics()Ljava/util/Map;
+#getStatistic(Ljava/lang/Class;)Lorg/terracotta/management/stats/Statistic;
+#getStatistic(Ljava/lang/Class;Ljava/lang/String;)Lorg/terracotta/management/stats/Statistic;
+#getStatistics(Ljava/lang/Class;)Ljava/util/Map;
+#getContext()Lorg/terracotta/management/context/Context;
+#toString()Ljava/lang/String;
@3.0.0.rc1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.rc3
-###org/terracotta/management/stats/ContextualStatistics

+###org/terracotta/management/stats/MemoryUnit
@3.0.0.m5
+#values()[Lorg/terracotta/management/stats/MemoryUnit;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/management/stats/MemoryUnit;
+#toBytes(J)J
@3.0.0.rc3
-###org/terracotta/management/stats/MemoryUnit

+###org/terracotta/management/stats/NumberUnit
@3.0.0.m5
+#values()[Lorg/terracotta/management/stats/NumberUnit;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/management/stats/NumberUnit;
@3.0.0.rc3
-###org/terracotta/management/stats/NumberUnit

+###org/terracotta/management/stats/Sample
@3.0.0.m5
+#<init>(JLjava/lang/Object;)V
+#getTimestamp()J
+#getValue()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.rc1
+#<init>(JLjava/io/Serializable;)V
+#getValue()Ljava/io/Serializable;
-#<init>(JLjava/lang/Object;)V
-#getValue()Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/stats/Sample

+###org/terracotta/management/stats/Statistic
@3.0.0.m5
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#getUnit()Ljava/lang/Object;
@3.0.0.rc1
+#getValue()Ljava/io/Serializable;
+#getUnit()Ljava/io/Serializable;
-#getName()Ljava/lang/String;
-#getValue()Ljava/lang/Object;
-#getUnit()Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/stats/Statistic

+###org/terracotta/management/stats/StatisticHistory
@3.0.0.m5
@3.0.0.rc3
-###org/terracotta/management/stats/StatisticHistory

+###org/terracotta/management/stats/StatisticType
@3.0.0.m5
+#values()[Lorg/terracotta/management/stats/StatisticType;
+#valueOf(Ljava/lang/String;)Lorg/terracotta/management/stats/StatisticType;
+#getClazz()Ljava/lang/Class;
+#getTypeName()Ljava/lang/String;
+#fromClass(Ljava/lang/Class;)Lorg/terracotta/management/stats/StatisticType;
@3.0.0.rc3
-###org/terracotta/management/stats/StatisticType

+###org/terracotta/management/stats/history/AverageHistory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc1
+#<init>(Ljava/util/concurrent/TimeUnit;[Lorg/terracotta/management/stats/Sample;)V
+#<init>(Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/history/AverageHistory

+###org/terracotta/management/stats/history/CounterHistory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc1
+#<init>(Lorg/terracotta/management/stats/NumberUnit;[Lorg/terracotta/management/stats/Sample;)V
+#<init>(Ljava/util/List;Lorg/terracotta/management/stats/NumberUnit;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/history/CounterHistory

+###org/terracotta/management/stats/history/DurationHistory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc1
+#<init>(Ljava/util/concurrent/TimeUnit;[Lorg/terracotta/management/stats/Sample;)V
+#<init>(Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/history/DurationHistory

+###org/terracotta/management/stats/history/RateHistory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc1
+#<init>(Ljava/util/concurrent/TimeUnit;[Lorg/terracotta/management/stats/Sample;)V
+#<init>(Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/history/RateHistory

+###org/terracotta/management/stats/history/RatioHistory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc1
+#<init>(Lorg/terracotta/management/stats/NumberUnit;[Lorg/terracotta/management/stats/Sample;)V
+#<init>(Ljava/util/List;Lorg/terracotta/management/stats/NumberUnit;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/history/RatioHistory

+###org/terracotta/management/stats/history/SizeHistory
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/terracotta/management/stats/MemoryUnit;)V
@3.0.0.rc1
+#<init>(Lorg/terracotta/management/stats/MemoryUnit;[Lorg/terracotta/management/stats/Sample;)V
+#<init>(Ljava/util/List;Lorg/terracotta/management/stats/MemoryUnit;)V
-#<init>(Ljava/lang/String;Ljava/util/List;Lorg/terracotta/management/stats/MemoryUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/history/SizeHistory

+###org/terracotta/management/stats/primitive/Average
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Double;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc1
+#<init>(Ljava/lang/Double;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Ljava/lang/String;Ljava/lang/Double;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/primitive/Average

+###org/terracotta/management/stats/primitive/Counter
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Long;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc1
+#<init>(Ljava/lang/Long;Lorg/terracotta/management/stats/NumberUnit;)V
-#<init>(Ljava/lang/String;Ljava/lang/Long;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/primitive/Counter

+###org/terracotta/management/stats/primitive/Duration
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc1
+#<init>(Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Ljava/lang/String;Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/primitive/Duration

+###org/terracotta/management/stats/primitive/Rate
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Double;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc1
+#<init>(Ljava/lang/Double;Ljava/util/concurrent/TimeUnit;)V
-#<init>(Ljava/lang/String;Ljava/lang/Double;Ljava/util/concurrent/TimeUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/primitive/Rate

+###org/terracotta/management/stats/primitive/Ratio
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Double;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc1
+#<init>(Ljava/lang/Double;Lorg/terracotta/management/stats/NumberUnit;)V
-#<init>(Ljava/lang/String;Ljava/lang/Double;Lorg/terracotta/management/stats/NumberUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/primitive/Ratio

+###org/terracotta/management/stats/primitive/Size
@3.0.0.m5
+#<init>(Ljava/lang/String;Ljava/lang/Long;Lorg/terracotta/management/stats/MemoryUnit;)V
@3.0.0.rc1
+#<init>(Ljava/lang/Long;Lorg/terracotta/management/stats/MemoryUnit;)V
-#<init>(Ljava/lang/String;Ljava/lang/Long;Lorg/terracotta/management/stats/MemoryUnit;)V
@3.0.0.rc3
-###org/terracotta/management/stats/primitive/Size

+###org/ehcache/core/internal/resilience/RethrowingCacheAccessException
@3.0.0.rc1
+#<init>(Ljava/lang/RuntimeException;)V
+#getCause()Ljava/lang/RuntimeException;
+#getCause()Ljava/lang/Throwable;
@3.0.0.rc2
-###org/ehcache/core/internal/resilience/RethrowingCacheAccessException

+###org/ehcache/core/spi/cache/InternalCacheManager
@3.0.0.rc1
+#registerListener(Lorg/ehcache/core/events/CacheManagerListener;)V
+#deregisterListener(Lorg/ehcache/core/events/CacheManagerListener;)V
@3.0.0.rc2
-###org/ehcache/core/spi/cache/InternalCacheManager

+###org/ehcache/core/spi/cache/Store$PutStatus
@3.0.0.rc1
+#values()[Lorg/ehcache/core/spi/cache/Store$PutStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store$PutStatus

+###org/ehcache/core/spi/cache/Store$RemoveStatus
@3.0.0.rc1
+#values()[Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store$RemoveStatus

+###org/ehcache/core/spi/cache/Store$ReplaceStatus
@3.0.0.rc1
+#values()[Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
@3.0.0.rc2
-###org/ehcache/core/spi/cache/Store$ReplaceStatus

+###org/ehcache/core/spi/cache/tiering/BinaryValueHolder
@3.0.0.rc1
+#getBinaryValue()Ljava/nio/ByteBuffer;
+#isBinaryValueAvailable()Z
@3.0.0.rc2
-###org/ehcache/core/spi/cache/tiering/BinaryValueHolder

+###org/ehcache/impl/config/persistence/PersistenceConfiguration
@3.0.0.rc1
+#getRootDirectory()Ljava/io/File;
@3.0.0.rc2
-###org/ehcache/impl/config/persistence/PersistenceConfiguration

+###org/ehcache/spi/service/PersistableResourceService
@3.0.0.rc1
+#handlesResourceType(Lorg/ehcache/config/ResourceType;)Z
+#additionalConfigurationsForPool(Ljava/lang/String;Lorg/ehcache/config/ResourcePool;)Ljava/util/Collection;
+#destroy(Ljava/lang/String;)V
+#create()V
+#destroyAll()V
@3.1.0
-###org/ehcache/spi/service/PersistableResourceService

+###org/ehcache/transactions/xa/internal/EhcacheXAResource
@3.0.0.rc1
+#<init>(Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/internal/journal/Journal;Lorg/ehcache/transactions/xa/internal/XATransactionContextFactory;)V
+#commit(Ljavax/transaction/xa/Xid;Z)V
+#forget(Ljavax/transaction/xa/Xid;)V
+#getTransactionTimeout()I
+#isSameRM(Ljavax/transaction/xa/XAResource;)Z
+#prepare(Ljavax/transaction/xa/Xid;)I
+#recover(I)[Ljavax/transaction/xa/Xid;
+#rollback(Ljavax/transaction/xa/Xid;)V
+#setTransactionTimeout(I)Z
+#start(Ljavax/transaction/xa/Xid;I)V
+#end(Ljavax/transaction/xa/Xid;I)V
+#getCurrentContext()Lorg/ehcache/transactions/xa/internal/XATransactionContext;
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/transactions/xa/internal/journal/Journal;Lorg/ehcache/transactions/xa/internal/XATransactionContextFactory;)V
-#<init>(Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/internal/journal/Journal;Lorg/ehcache/transactions/xa/internal/XATransactionContextFactory;)V
@3.1.0
-###org/ehcache/transactions/xa/internal/EhcacheXAResource

+###org/ehcache/transactions/xa/internal/SerializableXid
@3.0.0.rc1
+#<init>(Ljavax/transaction/xa/Xid;)V
+#getFormatId()I
+#getBranchQualifier()[B
+#getGlobalTransactionId()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.1.0
-###org/ehcache/transactions/xa/internal/SerializableXid

+###org/ehcache/transactions/xa/internal/SoftLock
@3.0.0.rc1
+#<init>(Lorg/ehcache/transactions/xa/internal/TransactionId;Ljava/lang/Object;Lorg/ehcache/transactions/xa/internal/XAValueHolder;)V
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/internal/XAValueHolder;
+#getTransactionId()Lorg/ehcache/transactions/xa/internal/TransactionId;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.1.0
-###org/ehcache/transactions/xa/internal/SoftLock

+###org/ehcache/transactions/xa/internal/TransactionId
@3.0.0.rc1
+#<init>(Ljavax/transaction/xa/Xid;)V
+#getSerializableXid()Lorg/ehcache/transactions/xa/internal/SerializableXid;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.1.0
-###org/ehcache/transactions/xa/internal/TransactionId

+###org/ehcache/transactions/xa/internal/XAStore$Provider
@3.0.0.rc1
+#<init>()V
+#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
+#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
+#initStore(Lorg/ehcache/core/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.rc2
+#rank(Ljava/util/Set;Ljava/util/Collection;)I
+#createStore(Lorg/ehcache/core/spi/store/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/store/Store;
+#releaseStore(Lorg/ehcache/core/spi/store/Store;)V
+#initStore(Lorg/ehcache/core/spi/store/Store;)V
-#createStore(Lorg/ehcache/core/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/core/spi/cache/Store;
-#releaseStore(Lorg/ehcache/core/spi/cache/Store;)V
-#initStore(Lorg/ehcache/core/spi/cache/Store;)V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
-###org/ehcache/transactions/xa/internal/XAStore$Provider

+###org/ehcache/transactions/xa/internal/XAStore
@3.0.0.rc1
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/transactions/xa/internal/journal/Journal;Ljava/lang/String;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
+#remove(Ljava/lang/Object;)Z
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
+#clear()V
+#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;Lorg/ehcache/core/spi/function/NullaryFunction;)Ljava/util/Map;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/core/spi/function/Function;)Ljava/util/Map;
+#getConfigurationChangeListeners()Ljava/util/List;
@3.0.0.rc2
+#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/transactions/xa/internal/journal/Journal;Ljava/lang/String;)V
+#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$PutStatus;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$RemoveStatus;
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/store/Store$ReplaceStatus;
+#getStoreEventSource()Lorg/ehcache/core/spi/store/events/StoreEventSource;
+#iterator()Lorg/ehcache/core/spi/store/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/store/Store$ValueHolder;
-#<init>(Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;Lorg/ehcache/core/spi/time/TimeSource;Lorg/ehcache/transactions/xa/internal/journal/Journal;Ljava/lang/String;)V
-#get(Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#put(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$PutStatus;
-#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$RemoveStatus;
-#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/core/spi/cache/Store$ReplaceStatus;
-#getStoreEventSource()Lorg/ehcache/core/spi/cache/events/StoreEventSource;
-#iterator()Lorg/ehcache/core/spi/cache/Store$Iterator;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#compute(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/Function;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
-#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/core/spi/function/BiFunction;Lorg/ehcache/core/spi/function/NullaryFunction;)Lorg/ehcache/core/spi/cache/Store$ValueHolder;
@3.1.0
-###org/ehcache/transactions/xa/internal/XAStore

+###org/ehcache/transactions/xa/internal/XATransactionContext
@3.0.0.rc1
+#hasTimedOut()Z
+#getTransactionId()Lorg/ehcache/transactions/xa/internal/TransactionId;
+#addCommand(Ljava/lang/Object;Lorg/ehcache/transactions/xa/internal/commands/Command;)Z
+#removeCommand(Ljava/lang/Object;)V
+#newValueHolders()Ljava/util/Map;
+#touched(Ljava/lang/Object;)Z
+#removed(Ljava/lang/Object;)Z
+#updated(Ljava/lang/Object;)Z
+#evicted(Ljava/lang/Object;)Z
+#oldValueOf(Ljava/lang/Object;)Ljava/lang/Object;
+#newValueHolderOf(Ljava/lang/Object;)Lorg/ehcache/transactions/xa/internal/XAValueHolder;
+#newValueOf(Ljava/lang/Object;)Ljava/lang/Object;
+#prepare()I
+#commit(Z)V
+#commitInOnePhase()V
+#rollback(Z)V
@3.1.0
-###org/ehcache/transactions/xa/internal/XATransactionContext

+###org/ehcache/transactions/xa/internal/XATransactionContextFactory
@3.0.0.rc1
+#<init>(Lorg/ehcache/core/spi/time/TimeSource;)V
+#createTransactionContext(Lorg/ehcache/transactions/xa/internal/TransactionId;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/internal/journal/Journal;I)Lorg/ehcache/transactions/xa/internal/XATransactionContext;
+#get(Lorg/ehcache/transactions/xa/internal/TransactionId;)Lorg/ehcache/transactions/xa/internal/XATransactionContext;
+#destroy(Lorg/ehcache/transactions/xa/internal/TransactionId;)V
+#contains(Lorg/ehcache/transactions/xa/internal/TransactionId;)Z
+#listPuts(Lorg/ehcache/transactions/xa/internal/TransactionId;)Ljava/util/Map;
+#isTouched(Lorg/ehcache/transactions/xa/internal/TransactionId;Ljava/lang/Object;)Z
@3.0.0.rc2
+#createTransactionContext(Lorg/ehcache/transactions/xa/internal/TransactionId;Lorg/ehcache/core/spi/store/Store;Lorg/ehcache/transactions/xa/internal/journal/Journal;I)Lorg/ehcache/transactions/xa/internal/XATransactionContext;
-#createTransactionContext(Lorg/ehcache/transactions/xa/internal/TransactionId;Lorg/ehcache/core/spi/cache/Store;Lorg/ehcache/transactions/xa/internal/journal/Journal;I)Lorg/ehcache/transactions/xa/internal/XATransactionContext;
@3.1.0
-###org/ehcache/transactions/xa/internal/XATransactionContextFactory

+###org/ehcache/transactions/xa/internal/XAValueHolder
@3.0.0.rc1
+#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;J)V
+#<init>(Lorg/ehcache/transactions/xa/internal/XAValueHolder;Ljava/lang/Object;)V
+#value()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@3.0.0.rc2
+#<init>(Lorg/ehcache/core/spi/store/Store$ValueHolder;Ljava/lang/Object;)V
-#<init>(Lorg/ehcache/core/spi/cache/Store$ValueHolder;Ljava/lang/Object;)V
@3.1.0
-###org/ehcache/transactions/xa/internal/XAValueHolder

+###org/ehcache/transactions/xa/internal/commands/Command
@3.0.0.rc1
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/internal/XAValueHolder;
@3.1.0
-###org/ehcache/transactions/xa/internal/commands/Command

+###org/ehcache/transactions/xa/internal/commands/StoreEvictCommand
@3.0.0.rc1
+#<init>(Ljava/lang/Object;)V
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/internal/XAValueHolder;
@3.1.0
-###org/ehcache/transactions/xa/internal/commands/StoreEvictCommand

+###org/ehcache/transactions/xa/internal/commands/StorePutCommand
@3.0.0.rc1
+#<init>(Ljava/lang/Object;Lorg/ehcache/transactions/xa/internal/XAValueHolder;)V
+#getNewValueHolder()Lorg/ehcache/transactions/xa/internal/XAValueHolder;
+#getOldValue()Ljava/lang/Object;
@3.1.0
-###org/ehcache/transactions/xa/internal/commands/StorePutCommand

+###org/ehcache/transactions/xa/internal/commands/StoreRemoveCommand
@3.0.0.rc1
+#<init>(Ljava/lang/Object;)V
+#getOldValue()Ljava/lang/Object;
+#getNewValueHolder()Lorg/ehcache/transactions/xa/internal/XAValueHolder;
@3.1.0
-###org/ehcache/transactions/xa/internal/commands/StoreRemoveCommand

+###org/ehcache/transactions/xa/internal/configuration/XAStoreProviderFactory
@3.0.0.rc1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/transactions/xa/internal/XAStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.1.0
-###org/ehcache/transactions/xa/internal/configuration/XAStoreProviderFactory

+###org/ehcache/transactions/xa/internal/journal/DefaultJournalProvider
@3.0.0.rc1
+#<init>()V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#getJournal(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/internal/journal/Journal;
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/DefaultJournalProvider

+###org/ehcache/transactions/xa/internal/journal/DefaultJournalProviderFactory
@3.0.0.rc1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/transactions/xa/internal/journal/JournalProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/DefaultJournalProviderFactory

+###org/ehcache/transactions/xa/internal/journal/Journal
@3.0.0.rc1
+#saveCommitted(Lorg/ehcache/transactions/xa/internal/TransactionId;Z)V
+#saveRolledBack(Lorg/ehcache/transactions/xa/internal/TransactionId;Z)V
+#saveInDoubt(Lorg/ehcache/transactions/xa/internal/TransactionId;Ljava/util/Collection;)V
+#isInDoubt(Lorg/ehcache/transactions/xa/internal/TransactionId;)Z
+#getInDoubtKeys(Lorg/ehcache/transactions/xa/internal/TransactionId;)Ljava/util/Collection;
+#recover()Ljava/util/Map;
+#isHeuristicallyTerminated(Lorg/ehcache/transactions/xa/internal/TransactionId;)Z
+#heuristicDecisions()Ljava/util/Map;
+#forget(Lorg/ehcache/transactions/xa/internal/TransactionId;)V
+#open()V
+#close()V
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/Journal

+###org/ehcache/transactions/xa/internal/journal/JournalProvider
@3.0.0.rc1
+#getJournal(Lorg/ehcache/core/spi/service/LocalPersistenceService$PersistenceSpaceIdentifier;Lorg/ehcache/spi/serialization/Serializer;)Lorg/ehcache/transactions/xa/internal/journal/Journal;
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/JournalProvider

+###org/ehcache/transactions/xa/internal/journal/PersistentJournal$SerializableEntry
@3.0.0.rc1
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/PersistentJournal$SerializableEntry

+###org/ehcache/transactions/xa/internal/journal/PersistentJournal
@3.0.0.rc1
+#<init>(Ljava/io/File;Lorg/ehcache/spi/serialization/Serializer;)V
+#open()V
+#close()V
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/PersistentJournal

+###org/ehcache/transactions/xa/internal/journal/TransientJournal$Entry
@3.0.0.rc1
+#<init>(Lorg/ehcache/transactions/xa/internal/journal/TransientJournal$XAState;ZLjava/util/Collection;)V
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/TransientJournal$Entry

+###org/ehcache/transactions/xa/internal/journal/TransientJournal
@3.0.0.rc1
+#<init>()V
+#saveCommitted(Lorg/ehcache/transactions/xa/internal/TransactionId;Z)V
+#saveRolledBack(Lorg/ehcache/transactions/xa/internal/TransactionId;Z)V
+#saveInDoubt(Lorg/ehcache/transactions/xa/internal/TransactionId;Ljava/util/Collection;)V
+#isInDoubt(Lorg/ehcache/transactions/xa/internal/TransactionId;)Z
+#getInDoubtKeys(Lorg/ehcache/transactions/xa/internal/TransactionId;)Ljava/util/Collection;
+#recover()Ljava/util/Map;
+#isHeuristicallyTerminated(Lorg/ehcache/transactions/xa/internal/TransactionId;)Z
+#forget(Lorg/ehcache/transactions/xa/internal/TransactionId;)V
+#heuristicDecisions()Ljava/util/Map;
+#open()V
+#close()V
@3.1.0
-###org/ehcache/transactions/xa/internal/journal/TransientJournal

+###org/ehcache/transactions/xa/internal/txmgr/NullXAResourceRegistry
@3.0.0.rc1
+#<init>()V
+#registerXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
+#unregisterXAResource(Ljava/lang/String;Ljavax/transaction/xa/XAResource;)V
@3.1.0
-###org/ehcache/transactions/xa/internal/txmgr/NullXAResourceRegistry

+###org/ehcache/transactions/xa/internal/txmgr/provider/DefaultTransactionManagerProvider
@3.0.0.rc1
+#<init>(Lorg/ehcache/transactions/xa/txmgr/provider/TransactionManagerProviderConfiguration;)V
+#getTransactionManagerWrapper()Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.rc3
-###org/ehcache/transactions/xa/internal/txmgr/provider/DefaultTransactionManagerProvider

+###org/ehcache/transactions/xa/internal/txmgr/provider/DefaultTransactionManagerProviderFactory
@3.0.0.rc1
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/transactions/xa/txmgr/provider/TransactionManagerProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.1.0
-###org/ehcache/transactions/xa/internal/txmgr/provider/DefaultTransactionManagerProviderFactory

+###org/terracotta/management/Objects
@3.0.0.rc1
+#<init>()V
+#requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.rc3
-###org/terracotta/management/Objects

+###org/ehcache/exceptions/StoreAccessException
@3.0.0.rc2
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
@3.0.0
-###org/ehcache/exceptions/StoreAccessException

+###org/ehcache/transactions/xa/XAStoreAccessException
@3.0.0.rc2
+#<init>(Ljava/lang/RuntimeException;)V
@3.1.0
-###org/ehcache/transactions/xa/XAStoreAccessException

+###org/ehcache/transactions/xa/internal/xml/TxCacheManagerServiceConfigurationParser
@3.0.0.rc3
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceCreationConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceCreationConfiguration;
@3.1.0
-###org/ehcache/transactions/xa/internal/xml/TxCacheManagerServiceConfigurationParser

+###org/ehcache/transactions/xa/internal/xml/TxCacheServiceConfigurationParser
@3.0.0.rc3
+#<init>()V
+#getXmlSchema()Ljavax/xml/transform/Source;
+#getNamespace()Ljava/net/URI;
+#parseServiceConfiguration(Lorg/w3c/dom/Element;)Lorg/ehcache/spi/service/ServiceConfiguration;
@3.1.0
-###org/ehcache/transactions/xa/internal/xml/TxCacheServiceConfigurationParser

+###org/ehcache/transactions/xa/txmgr/btm/BitronixTransactionManagerLookup
@3.0.0.rc3
+#<init>()V
+#lookupTransactionManagerWrapper()Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;
@3.1.0
-###org/ehcache/transactions/xa/txmgr/btm/BitronixTransactionManagerLookup

+###org/ehcache/transactions/xa/txmgr/provider/LookupTransactionManagerProvider
@3.0.0.rc3
+#<init>(Lorg/ehcache/transactions/xa/txmgr/provider/LookupTransactionManagerProviderConfiguration;)V
+#getTransactionManagerWrapper()Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0
+#start(Lorg/ehcache/spi/service/ServiceProvider;)V
-#start(Lorg/ehcache/spi/ServiceProvider;)V
@3.1.0
-###org/ehcache/transactions/xa/txmgr/provider/LookupTransactionManagerProvider

+###org/ehcache/transactions/xa/txmgr/provider/LookupTransactionManagerProviderConfiguration
@3.0.0.rc3
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;)V
+#getServiceType()Ljava/lang/Class;
@3.1.0
-###org/ehcache/transactions/xa/txmgr/provider/LookupTransactionManagerProviderConfiguration

+###org/ehcache/transactions/xa/txmgr/provider/TransactionManagerLookup
@3.0.0.rc3
+#lookupTransactionManagerWrapper()Lorg/ehcache/transactions/xa/txmgr/TransactionManagerWrapper;
@3.1.0
-###org/ehcache/transactions/xa/txmgr/provider/TransactionManagerLookup

+###org/ehcache/function/Comparables
@3.0.0.Alpha
+#biggest()Ljava/lang/Comparable;
+#smallest()Ljava/lang/Comparable;
@3.0.0.m1
-###org/ehcache/function/Comparables

+###org/ehcache/exceptions/BulkCacheLoaderException
@3.0.0.Alpha
+#<init>(Ljava/util/Map;Ljava/util/Map;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
+#getFailures()Ljava/util/Map;
+#getSuccesses()Ljava/util/Map;
@3.0.0.m1
-###org/ehcache/exceptions/BulkCacheLoaderException

+###org/ehcache/exceptions/CacheLoaderException
@3.0.0.Alpha
@3.0.0.m1
-###org/ehcache/exceptions/CacheLoaderException

+###org/ehcache/exceptions/BulkCacheWriterException
@3.0.0.Alpha
+#<init>(Ljava/util/Map;Ljava/util/Set;)V
+#getFailures()Ljava/util/Map;
+#getSuccesses()Ljava/util/Set;
@3.0.0.m1
-###org/ehcache/exceptions/BulkCacheWriterException

+###org/ehcache/exceptions/CacheWriterException
@3.0.0.Alpha
@3.0.0.m1
-###org/ehcache/exceptions/CacheWriterException

+###org/ehcache/spi/writer/CacheWriter
@3.0.0.Alpha
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/lang/Iterable;)V
@3.0.0.m1
-###org/ehcache/spi/writer/CacheWriter

+###org/ehcache/spi/writer/CacheWriterFactory
@3.0.0.Alpha
+#createCacheWriter(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/writer/CacheWriter;
+#releaseCacheWriter(Lorg/ehcache/spi/writer/CacheWriter;)V
@3.0.0.m1
-###org/ehcache/spi/writer/CacheWriterFactory

+###org/ehcache/spi/loader/CacheLoaderFactory
@3.0.0.Alpha
+#createCacheLoader(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/loader/CacheLoader;
+#releaseCacheLoader(Lorg/ehcache/spi/loader/CacheLoader;)V
@3.0.0.m1
-###org/ehcache/spi/loader/CacheLoaderFactory

+###org/ehcache/spi/loader/CacheLoader
@3.0.0.Alpha
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
@3.0.0.m1
-###org/ehcache/spi/loader/CacheLoader

+###org/ehcache/statistics/CacheOperationOutcomes$CacheLoaderOutcome
@3.0.0.Alpha
+#values()[Lorg/ehcache/statistics/CacheOperationOutcomes$CacheLoaderOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CacheOperationOutcomes$CacheLoaderOutcome;
@3.0.0.m1
-###org/ehcache/statistics/CacheOperationOutcomes$CacheLoaderOutcome

+###org/ehcache/spi/writer/DefaultCacheWriterFactory
@3.0.0.Alpha
+#<init>()V
+#createCacheWriter(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/writer/CacheWriter;
+#releaseCacheWriter(Lorg/ehcache/spi/writer/CacheWriter;)V
@3.0.0.m1
-###org/ehcache/spi/writer/DefaultCacheWriterFactory

+###org/ehcache/spi/writer/DefaultCacheWriterFactoryProvider
@3.0.0.Alpha
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/writer/DefaultCacheWriterFactory;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m1
-###org/ehcache/spi/writer/DefaultCacheWriterFactoryProvider

+###org/ehcache/spi/loader/DefaultCacheLoaderFactoryProvider
@3.0.0.Alpha
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/loader/DefaultCacheLoaderFactory;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m1
-###org/ehcache/spi/loader/DefaultCacheLoaderFactoryProvider

+###org/ehcache/spi/loader/DefaultCacheLoaderFactory
@3.0.0.Alpha
+#<init>()V
+#createCacheLoader(Ljava/lang/String;Lorg/ehcache/config/CacheConfiguration;)Lorg/ehcache/spi/loader/CacheLoader;
+#releaseCacheLoader(Lorg/ehcache/spi/loader/CacheLoader;)V
@3.0.0.m1
-###org/ehcache/spi/loader/DefaultCacheLoaderFactory

+###org/ehcache/config/writer/DefaultCacheWriterConfiguration
@3.0.0.Alpha
+#<init>(Ljava/lang/Class;)V
+#getServiceType()Ljava/lang/Class;
@3.0.0.m1
-###org/ehcache/config/writer/DefaultCacheWriterConfiguration

+###org/ehcache/config/writer/DefaultCacheWriterFactoryConfiguration
@3.0.0.Alpha
+#<init>()V
+#getServiceType()Ljava/lang/Class;
+#addWriterFor(Ljava/lang/String;Ljava/lang/Class;)Lorg/ehcache/config/writer/DefaultCacheWriterFactoryConfiguration;
@3.0.0.m1
-###org/ehcache/config/writer/DefaultCacheWriterFactoryConfiguration

+###org/ehcache/config/loader/DefaultCacheLoaderFactoryConfiguration
@3.0.0.Alpha
+#<init>()V
+#getServiceType()Ljava/lang/Class;
+#addLoaderFor(Ljava/lang/String;Ljava/lang/Class;)Lorg/ehcache/config/loader/DefaultCacheLoaderFactoryConfiguration;
@3.0.0.m1
-###org/ehcache/config/loader/DefaultCacheLoaderFactoryConfiguration

+###org/ehcache/config/loader/DefaultCacheLoaderConfiguration
@3.0.0.Alpha
+#<init>(Ljava/lang/Class;)V
+#getServiceType()Ljava/lang/Class;
@3.0.0.m1
-###org/ehcache/config/loader/DefaultCacheLoaderConfiguration

+###org/ehcache/internal/HeapCachingTierResource
@3.0.0.Alpha
+#<init>()V
+#createCachingTier(Ljava/lang/Class;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/CachingTier;
+#releaseCachingTier(Lorg/ehcache/spi/cache/tiering/CachingTier;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
@3.0.0.m1
-###org/ehcache/internal/HeapCachingTierResource

+###org/ehcache/internal/HeapCacheFactory
@3.0.0.Alpha
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/HeapCachingTierResource;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m1
-###org/ehcache/internal/HeapCacheFactory

+###org/ehcache/internal/cachingtier/TieredCache
@3.0.0.Alpha
+#<init>(Lorg/ehcache/Cache;Ljava/lang/Class;Ljava/lang/Class;Lorg/ehcache/spi/ServiceLocator;[Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getRuntimeConfiguration()Lorg/ehcache/config/CacheRuntimeConfiguration;
+#getAll(Ljava/util/Set;)Ljava/util/Map;
+#putAll(Ljava/util/Map;)V
+#removeAll(Ljava/util/Set;)V
+#clear()V
+#close()V
+#iterator()Ljava/util/Iterator;
+#getStatistics()Lorg/ehcache/statistics/CacheStatistics;
+#getMaxCacheSize()J
@3.0.0.m1
-###org/ehcache/internal/cachingtier/TieredCache

+###org/ehcache/internal/cachingtier/ClockEvictingHeapCachingTier
@3.0.0.Alpha
+#<init>(J)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;Ljava/lang/Object;)V
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#getMaxCacheSize()J
+#size()J
@3.0.0.m1
-###org/ehcache/internal/cachingtier/ClockEvictingHeapCachingTier

+###org/ehcache/internal/store/OnHeapStoreProviderFactory
@3.0.0.Alpha
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/internal/store/OnHeapStore$Provider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceConfiguration;Lorg/ehcache/spi/ServiceLocator;)Lorg/ehcache/spi/service/Service;
@3.0.0.m1
-###org/ehcache/internal/store/OnHeapStoreProviderFactory

+###org/ehcache/internal/store/OnHeapStore$Provider
@3.0.0.Alpha
+#<init>()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/internal/store/OnHeapStore;
+#releaseStore(Lorg/ehcache/spi/cache/Store;)V
+#start(Lorg/ehcache/spi/service/ServiceConfiguration;)V
+#stop()V
+#createStore(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/Store;
@3.0.0.m1
-###org/ehcache/internal/store/OnHeapStore$Provider

+###org/ehcache/internal/store/OnHeapStore
@3.0.0.Alpha
+#<init>(Lorg/ehcache/spi/cache/Store$Configuration;Lorg/ehcache/internal/TimeSource;Z)V
+#get(Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#containsKey(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#remove(Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#clear()V
+#destroy()V
+#create()V
+#close()V
+#init()V
+#maintenance()V
+#iterator()Lorg/ehcache/spi/cache/Store$Iterator;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#compute(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfAbsent(Ljava/lang/Object;Lorg/ehcache/function/Function;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#computeIfPresent(Ljava/lang/Object;Lorg/ehcache/function/BiFunction;Lorg/ehcache/function/NullaryFunction;)Lorg/ehcache/spi/cache/Store$ValueHolder;
+#bulkComputeIfAbsent(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;)Ljava/util/Map;
+#bulkCompute(Ljava/util/Set;Lorg/ehcache/function/Function;Lorg/ehcache/function/NullaryFunction;)Ljava/util/Map;
+#enableStoreEventNotifications(Lorg/ehcache/events/StoreEventListener;)V
+#disableStoreEventNotifications()V
@3.0.0.m1
-###org/ehcache/internal/store/OnHeapStore

+###org/ehcache/internal/store/service/OnHeapStoreServiceConfig
@3.0.0.Alpha
+#<init>()V
+#storeByValue()Z
+#storeByValue(Z)Lorg/ehcache/internal/store/service/OnHeapStoreServiceConfig;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m1
-###org/ehcache/internal/store/service/OnHeapStoreServiceConfig

+###org/ehcache/config/xml/model/CacheIntegration$Loader
@3.0.0.Alpha
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getAny()Ljava/util/List;
@3.0.0.m1
-###org/ehcache/config/xml/model/CacheIntegration$Loader

+###org/ehcache/config/xml/model/CacheIntegration$Writer
@3.0.0.Alpha
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getAny()Ljava/util/List;
@3.0.0.m1
-###org/ehcache/config/xml/model/CacheIntegration$Writer

+###org/ehcache/core/statistics/StatisticMapper
@3.2.0.beta1
+#<init>(Ljava/util/Map;Lorg/terracotta/statistics/OperationStatistic;)V
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#begin()V
+#end(Ljava/lang/Enum;)V
+#end(Ljava/lang/Enum;[J)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
@3.2.0
-###org/ehcache/core/statistics/StatisticMapper

+###org/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$EvictionOutcome
@3.2.0.beta1
+#values()[Lorg/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$EvictionOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$EvictionOutcome;
@3.2.0
-###org/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$EvictionOutcome

+###org/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$GetOutcome
@3.2.0.beta1
+#values()[Lorg/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$GetOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$GetOutcome;
@3.2.0
-###org/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes$GetOutcome

+###org/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes
@3.2.0.beta1
+#<init>()V
@3.2.0
-###org/ehcache/core/statistics/TierOperationStatistic$TierOperationOutcomes

+###org/ehcache/core/statistics/TierOperationStatistic
@3.2.0.beta1
+#<init>(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
+#type()Ljava/lang/Class;
+#statistic(Ljava/lang/Enum;)Lorg/terracotta/statistics/ValueStatistic;
+#statistic(Ljava/util/Set;)Lorg/terracotta/statistics/ValueStatistic;
+#count(Ljava/lang/Enum;)J
+#sum(Ljava/util/Set;)J
+#sum()J
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedOperationObserver;)V
+#begin()V
+#end(Ljava/lang/Enum;)V
+#end(Ljava/lang/Enum;[J)V
+#removeDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
+#addDerivedStatistic(Lorg/terracotta/statistics/observer/ChainedObserver;)V
@3.2.0
-###org/ehcache/core/statistics/TierOperationStatistic

+###org/ehcache/impl/internal/store/offheap/AbstractOffHeapStore$EmergencyValveOutcome
@3.0.2
+#values()[Lorg/ehcache/impl/internal/store/offheap/AbstractOffHeapStore$EmergencyValveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/impl/internal/store/offheap/AbstractOffHeapStore$EmergencyValveOutcome;
@3.1.0
-###org/ehcache/impl/internal/store/offheap/AbstractOffHeapStore$EmergencyValveOutcome

+###org/ehcache/config/event/CacheEventDispatcherFactoryConfiguration
@3.0.0.m4
+#<init>(Ljava/lang/String;)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/config/event/CacheEventDispatcherFactoryConfiguration

+###org/ehcache/config/executor/PooledExecutionServiceConfiguration$PoolConfiguration
@3.0.0.m4
+#minSize()I
+#maxSize()I
@3.0.0.m5
-###org/ehcache/config/executor/PooledExecutionServiceConfiguration$PoolConfiguration

+###org/ehcache/config/executor/PooledExecutionServiceConfiguration
@3.0.0.m4
+#<init>()V
+#addDefaultPool(Ljava/lang/String;II)V
+#addPool(Ljava/lang/String;II)V
+#getPoolConfigurations()Ljava/util/Map;
+#getDefaultPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/config/executor/PooledExecutionServiceConfiguration

+###org/ehcache/config/loaderwriter/writebehind/WriteBehindProviderConfiguration
@3.0.0.m4
+#<init>(Ljava/lang/String;)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/config/loaderwriter/writebehind/WriteBehindProviderConfiguration

+###org/ehcache/config/store/disk/OffHeapDiskStoreConfiguration
@3.0.0.m4
+#<init>(Ljava/lang/String;I)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getWriterConcurrency()I
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/config/store/disk/OffHeapDiskStoreConfiguration

+###org/ehcache/config/store/disk/OffHeapDiskStoreProviderConfiguration
@3.0.0.m4
+#<init>(Ljava/lang/String;)V
+#getThreadPoolAlias()Ljava/lang/String;
+#getServiceType()Ljava/lang/Class;
@3.0.0.m5
-###org/ehcache/config/store/disk/OffHeapDiskStoreProviderConfiguration

+###org/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder
@3.0.0.m4
+#enableCoalescing()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#disableCoalescing()Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#batchSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#maxWriteDelay(JLjava/util/concurrent/TimeUnit;)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#queueSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder;
+#build()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#queueSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#build()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/config/writebehind/WriteBehindConfigurationBuilder$BatchedWriteBehindConfigurationBuilder

+###org/ehcache/config/writebehind/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder
@3.0.0.m4
+#build()Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;
+#queueSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder;
+#useThreadPool(Ljava/lang/String;)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#concurrencyLevel(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#queueSize(I)Lorg/ehcache/config/writebehind/WriteBehindConfigurationBuilder;
+#build()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/config/writebehind/WriteBehindConfigurationBuilder$UnBatchedWriteBehindConfigurationBuilder

+###org/ehcache/config/xml/model/CacheIntegrationType$LoaderWriter
@3.0.0.m4
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getAny()Ljava/util/List;
@3.0.0.m5
-###org/ehcache/config/xml/model/CacheIntegrationType$LoaderWriter

+###org/ehcache/config/xml/model/CacheIntegrationType$WriteBehind$Batching
@3.0.0.m4
+#<init>()V
+#getMaxWriteDelay()Lorg/ehcache/config/xml/model/TimeType;
+#setMaxWriteDelay(Lorg/ehcache/config/xml/model/TimeType;)V
+#getBatchSize()Ljava/math/BigInteger;
+#setBatchSize(Ljava/math/BigInteger;)V
+#isCoalesce()Z
+#setCoalesce(Ljava/lang/Boolean;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/CacheIntegrationType$WriteBehind$Batching

+###org/ehcache/config/xml/model/CacheIntegrationType$WriteBehind
@3.0.0.m4
+#<init>()V
+#getBatching()Lorg/ehcache/config/xml/model/CacheIntegrationType$WriteBehind$Batching;
+#setBatching(Lorg/ehcache/config/xml/model/CacheIntegrationType$WriteBehind$Batching;)V
+#getNonBatching()Ljava/lang/Object;
+#setNonBatching(Ljava/lang/Object;)V
+#getConcurrency()Ljava/math/BigInteger;
+#setConcurrency(Ljava/math/BigInteger;)V
+#getSize()Ljava/math/BigInteger;
+#setSize(Ljava/math/BigInteger;)V
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/CacheIntegrationType$WriteBehind

+###org/ehcache/config/xml/model/CacheIntegrationType
@3.0.0.m4
+#<init>()V
+#getLoaderWriter()Lorg/ehcache/config/xml/model/CacheIntegrationType$LoaderWriter;
+#setLoaderWriter(Lorg/ehcache/config/xml/model/CacheIntegrationType$LoaderWriter;)V
+#getWriteBehind()Lorg/ehcache/config/xml/model/CacheIntegrationType$WriteBehind;
+#setWriteBehind(Lorg/ehcache/config/xml/model/CacheIntegrationType$WriteBehind;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/CacheIntegrationType

+###org/ehcache/config/xml/model/DiskStoreSettingsType
@3.0.0.m4
+#<init>()V
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
+#getWriterThreads()Ljava/math/BigInteger;
+#setWriterThreads(Ljava/math/BigInteger;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/DiskStoreSettingsType

+###org/ehcache/config/xml/model/ListenersType$Listener
@3.0.0.m4
+#<init>()V
+#getClazz()Ljava/lang/String;
+#setClazz(Ljava/lang/String;)V
+#getEventFiringMode()Lorg/ehcache/config/xml/model/EventFiringType;
+#setEventFiringMode(Lorg/ehcache/config/xml/model/EventFiringType;)V
+#getEventOrderingMode()Lorg/ehcache/config/xml/model/EventOrderingType;
+#setEventOrderingMode(Lorg/ehcache/config/xml/model/EventOrderingType;)V
+#getEventsToFireOn()Ljava/util/List;
+#getAny()Ljava/util/List;
@3.0.0.m5
-###org/ehcache/config/xml/model/ListenersType$Listener

+###org/ehcache/config/xml/model/ListenersType
@3.0.0.m4
+#<init>()V
+#getListener()Ljava/util/List;
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ListenersType

+###org/ehcache/config/xml/model/ThreadPoolReferenceType
@3.0.0.m4
+#<init>()V
+#getThreadPool()Ljava/lang/String;
+#setThreadPool(Ljava/lang/String;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ThreadPoolReferenceType

+###org/ehcache/config/xml/model/ThreadPoolsType$ThreadPool
@3.0.0.m4
+#<init>()V
+#getAlias()Ljava/lang/String;
+#setAlias(Ljava/lang/String;)V
+#isDefault()Z
+#setDefault(Ljava/lang/Boolean;)V
+#getMinSize()Ljava/math/BigInteger;
+#setMinSize(Ljava/math/BigInteger;)V
+#getMaxSize()Ljava/math/BigInteger;
+#setMaxSize(Ljava/math/BigInteger;)V
@3.0.0.m5
-###org/ehcache/config/xml/model/ThreadPoolsType$ThreadPool

+###org/ehcache/config/xml/model/ThreadPoolsType
@3.0.0.m4
+#<init>()V
+#getThreadPool()Ljava/util/List;
@3.0.0.m5
-###org/ehcache/config/xml/model/ThreadPoolsType

+###org/ehcache/events/CacheEventDispatcher
@3.0.0.m4
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#hasListeners()Z
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#releaseAllListeners()V
+#setStoreListenerSource(Lorg/ehcache/Cache;)V
@3.0.0.m5
-###org/ehcache/events/CacheEventDispatcher

+###org/ehcache/events/CacheEventDispatcherFactory
@3.0.0.m4
+#createCacheEventDispatcher(Lorg/ehcache/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/events/CacheEventDispatcher;
+#releaseCacheEventDispatcher(Lorg/ehcache/events/CacheEventDispatcher;)V
@3.0.0.m5
-###org/ehcache/events/CacheEventDispatcherFactory

+###org/ehcache/events/CacheEventDispatcherImpl
@3.0.0.m4
+#<init>(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;Lorg/ehcache/spi/cache/Store;)V
+#registerCacheEventListener(Lorg/ehcache/event/CacheEventListener;Lorg/ehcache/event/EventOrdering;Lorg/ehcache/event/EventFiring;Ljava/util/EnumSet;)V
+#deregisterCacheEventListener(Lorg/ehcache/event/CacheEventListener;)V
+#releaseAllListeners()V
+#setStoreListenerSource(Lorg/ehcache/Cache;)V
+#onEvent(Lorg/ehcache/event/CacheEvent;)V
+#hasListeners()Z
@3.0.0.m5
-###org/ehcache/events/CacheEventDispatcherImpl

+###org/ehcache/exceptions/CachePassThroughException
@3.0.0.m4
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
+#handleRuntimeException(Ljava/lang/RuntimeException;)V
@3.0.0.m5
-###org/ehcache/exceptions/CachePassThroughException

+###org/ehcache/internal/events/CacheEventDispatcherFactoryImpl
@3.0.0.m4
+#<init>()V
+#<init>(Lorg/ehcache/config/event/CacheEventDispatcherFactoryConfiguration;)V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
+#createCacheEventDispatcher(Lorg/ehcache/spi/cache/Store;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/events/CacheEventDispatcher;
+#releaseCacheEventDispatcher(Lorg/ehcache/events/CacheEventDispatcher;)V
@3.0.0.m5
-###org/ehcache/internal/events/CacheEventDispatcherFactoryImpl

+###org/ehcache/internal/executor/DefaultExecutionServiceFactory
@3.0.0.m4
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/ExecutionService;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/internal/executor/DefaultExecutionServiceFactory

+###org/ehcache/internal/executor/ExecutorUtil
@3.0.0.m4
+#<init>()V
+#shutdown(Ljava/util/concurrent/ExecutorService;)V
+#shutdownNow(Ljava/util/concurrent/ExecutorService;)V
+#waitFor(Ljava/util/concurrent/Future;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/internal/executor/ExecutorUtil

+###org/ehcache/internal/executor/OnDemandExecutionService
@3.0.0.m4
+#<init>()V
+#getScheduledExecutor(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#getOrderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#getUnorderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m5
-###org/ehcache/internal/executor/OnDemandExecutionService

+###org/ehcache/internal/executor/PooledExecutionService
@3.0.0.m4
+#getScheduledExecutor(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#getOrderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#getUnorderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#stop()V
@3.0.0.m5
-###org/ehcache/internal/executor/PooledExecutionService

+###org/ehcache/loaderwriter/writebehind/BatchingLocalHeapWriteBehindQueue
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/service/ExecutionService;Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#stop()V
+#getQueueSize()J
+#deleteAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#load(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/BatchingLocalHeapWriteBehindQueue

+###org/ehcache/loaderwriter/writebehind/NonBatchingLocalHeapWriteBehindQueue
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/service/ExecutionService;Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#stop()V
+#getQueueSize()J
+#deleteAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#load(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/NonBatchingLocalHeapWriteBehindQueue

+###org/ehcache/loaderwriter/writebehind/StripedWriteBehind
@3.0.0.m4
+#<init>(Lorg/ehcache/spi/service/ExecutionService;Ljava/lang/String;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#start()V
+#load(Ljava/lang/Object;)Ljava/lang/Object;
+#loadAll(Ljava/lang/Iterable;)Ljava/util/Map;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
+#writeAll(Ljava/lang/Iterable;)V
+#delete(Ljava/lang/Object;)V
+#deleteAll(Ljava/lang/Iterable;)V
+#stop()V
+#getQueueSize()J
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/StripedWriteBehind

+###org/ehcache/loaderwriter/writebehind/WriteBehindProviderFactory$Provider
@3.0.0.m4
+#stop()V
+#start(Lorg/ehcache/spi/ServiceProvider;)V
+#createWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;)Lorg/ehcache/loaderwriter/writebehind/WriteBehind;
+#releaseWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;)V
+#createWriteBehindLoaderWriter(Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;Lorg/ehcache/spi/loaderwriter/WriteBehindConfiguration;)Lorg/ehcache/spi/loaderwriter/CacheLoaderWriter;
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/WriteBehindProviderFactory$Provider

+###org/ehcache/loaderwriter/writebehind/WriteBehindProviderFactory
@3.0.0.m4
+#<init>()V
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/loaderwriter/WriteBehindProvider;
+#getServiceType()Ljava/lang/Class;
+#create(Lorg/ehcache/spi/service/ServiceCreationConfiguration;)Lorg/ehcache/spi/service/Service;
@3.0.0.m5
-###org/ehcache/loaderwriter/writebehind/WriteBehindProviderFactory

+###org/ehcache/management/CallQuery$Builder
@3.0.0.m4
@3.0.0.m5
-###org/ehcache/management/CallQuery$Builder

+###org/ehcache/management/CallQuery
@3.0.0.m4
+#getReturnType()Ljava/lang/Class;
+#getMethodName()Ljava/lang/String;
+#getParameters()[Lorg/terracotta/management/call/Parameter;
@3.0.0.m5
-###org/ehcache/management/CallQuery

+###org/ehcache/management/CapabilityManagement
@3.0.0.m4
+#queryStatistic(Ljava/lang/String;)Lorg/ehcache/management/StatisticQuery$Builder;
+#queryStatistics(Ljava/util/Collection;)Lorg/ehcache/management/StatisticQuery$Builder;
+#call(Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Lorg/ehcache/management/CallQuery$Builder;
+#call(Ljava/lang/String;[Lorg/terracotta/management/call/Parameter;)Lorg/ehcache/management/CallQuery$Builder;
@3.0.0.m5
-###org/ehcache/management/CapabilityManagement

+###org/ehcache/management/CapabilityManagementSupport
@3.0.0.m4
+#withCapability(Ljava/lang/String;)Lorg/ehcache/management/CapabilityManagement;
+#getManagementProvidersByCapability(Ljava/lang/String;)Ljava/util/Collection;
@3.0.0.m5
-###org/ehcache/management/CapabilityManagementSupport

+###org/ehcache/management/ManagementRegistryConfiguration
@3.0.0.m4
+#getCacheManagerAlias()Ljava/lang/String;
+#getStatisticsExecutorAlias()Ljava/lang/String;
+#getConfigurationFor(Ljava/lang/Class;)Lorg/ehcache/management/config/StatisticsProviderConfiguration;
@3.0.0.m5
-###org/ehcache/management/ManagementRegistryConfiguration

+###org/ehcache/management/Query
@3.0.0.m4
+#getCapabilityName()Ljava/lang/String;
+#getContexts()Ljava/util/Collection;
+#execute()Lorg/ehcache/management/ResultSet;
@3.0.0.m5
-###org/ehcache/management/Query

+###org/ehcache/management/QueryBuilder
@3.0.0.m4
+#on(Lorg/terracotta/management/context/Context;)Ljava/lang/Object;
+#on(Ljava/util/Collection;)Ljava/lang/Object;
+#build()Ljava/lang/Object;
@3.0.0.m5
-###org/ehcache/management/QueryBuilder

+###org/ehcache/management/ResultSet
@3.0.0.m4
+#getResult(Lorg/terracotta/management/context/Context;)Ljava/lang/Object;
+#getSingleResult()Ljava/lang/Object;
+#size()I
+#isEmpty()Z
@3.0.0.m5
-###org/ehcache/management/ResultSet

+###org/ehcache/management/StatisticQuery$Builder
@3.0.0.m4
+#since(J)Lorg/ehcache/management/StatisticQuery$Builder;
@3.0.0.m5
-###org/ehcache/management/StatisticQuery$Builder

+###org/ehcache/management/StatisticQuery
@3.0.0.m4
+#getStatisticNames()Ljava/util/Collection;
+#getSince()J
@3.0.0.m5
-###org/ehcache/management/StatisticQuery

+###org/ehcache/management/providers/CacheBindingManagementProviderSkeleton
@3.0.0.m4
+#managedType()Ljava/lang/Class;
+#register(Lorg/ehcache/management/registry/CacheBinding;)V
+#unregister(Lorg/ehcache/management/registry/CacheBinding;)V
+#getCapabilityContext()Lorg/terracotta/management/capabilities/context/CapabilityContext;
+#getCapabilityName()Ljava/lang/String;
+#getCapability()Lorg/terracotta/management/capabilities/Capability;
+#supports(Lorg/terracotta/management/context/Context;)Z
+#close()V
+#collectStatistics(Lorg/terracotta/management/context/Context;Ljava/util/Collection;J)Ljava/util/Map;
+#callAction(Lorg/terracotta/management/context/Context;Ljava/lang/String;Ljava/lang/Class;[Lorg/terracotta/management/call/Parameter;)Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#unregister(Ljava/lang/Object;)V
+#register(Ljava/lang/Object;)V
@3.0.0.m5
-###org/ehcache/management/providers/CacheBindingManagementProviderSkeleton

+###org/ehcache/management/registry/CacheBinding
@3.0.0.m4
+#<init>(Ljava/lang/String;Lorg/ehcache/Cache;)V
+#getAlias()Ljava/lang/String;
+#getCache()Lorg/ehcache/Cache;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.m5
-###org/ehcache/management/registry/CacheBinding

+###org/ehcache/spi/cache/tiering/HigherCachingTier$Provider
@3.0.0.m4
+#createHigherCachingTier(Lorg/ehcache/spi/cache/Store$Configuration;[Lorg/ehcache/spi/service/ServiceConfiguration;)Lorg/ehcache/spi/cache/tiering/HigherCachingTier;
+#releaseHigherCachingTier(Lorg/ehcache/spi/cache/tiering/HigherCachingTier;)V
+#initHigherCachingTier(Lorg/ehcache/spi/cache/tiering/HigherCachingTier;)V
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/HigherCachingTier$Provider

+###org/ehcache/spi/cache/tiering/HigherCachingTier
@3.0.0.m4
+#silentInvalidate(Ljava/lang/Object;Lorg/ehcache/function/Function;)V
@3.0.0.m5
-###org/ehcache/spi/cache/tiering/HigherCachingTier

+###org/ehcache/spi/service/CacheManagerProviderService
@3.0.0.m4
+#getCacheManager()Lorg/ehcache/EhcacheManager;
@3.0.0.m5
-###org/ehcache/spi/service/CacheManagerProviderService

+###org/ehcache/spi/service/ExecutionService
@3.0.0.m4
+#getScheduledExecutor(Ljava/lang/String;)Ljava/util/concurrent/ScheduledExecutorService;
+#getOrderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
+#getUnorderedExecutor(Ljava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;
@3.0.0.m5
-###org/ehcache/spi/service/ExecutionService

+###org/ehcache/spi/service/ExecutionServiceFactory
@3.0.0.m4
@3.0.0.m5
-###org/ehcache/spi/service/ExecutionServiceFactory

+###org/ehcache/statistics/AuthoritativeTierOperationOutcomes$ComputeIfAbsentAndFaultOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/AuthoritativeTierOperationOutcomes$ComputeIfAbsentAndFaultOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/AuthoritativeTierOperationOutcomes$ComputeIfAbsentAndFaultOutcome;
@3.0.0.m5
-###org/ehcache/statistics/AuthoritativeTierOperationOutcomes$ComputeIfAbsentAndFaultOutcome

+###org/ehcache/statistics/AuthoritativeTierOperationOutcomes$FlushOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/AuthoritativeTierOperationOutcomes$FlushOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/AuthoritativeTierOperationOutcomes$FlushOutcome;
@3.0.0.m5
-###org/ehcache/statistics/AuthoritativeTierOperationOutcomes$FlushOutcome

+###org/ehcache/statistics/AuthoritativeTierOperationOutcomes$GetAndFaultOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/AuthoritativeTierOperationOutcomes$GetAndFaultOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/AuthoritativeTierOperationOutcomes$GetAndFaultOutcome;
@3.0.0.m5
-###org/ehcache/statistics/AuthoritativeTierOperationOutcomes$GetAndFaultOutcome

+###org/ehcache/statistics/AuthoritativeTierOperationOutcomes
@3.0.0.m4
@3.0.0.m5
-###org/ehcache/statistics/AuthoritativeTierOperationOutcomes

+###org/ehcache/statistics/CachingTierOperationOutcomes$GetOrComputeIfAbsentOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/CachingTierOperationOutcomes$GetOrComputeIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CachingTierOperationOutcomes$GetOrComputeIfAbsentOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CachingTierOperationOutcomes$GetOrComputeIfAbsentOutcome

+###org/ehcache/statistics/CachingTierOperationOutcomes$InvalidateOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/CachingTierOperationOutcomes$InvalidateOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/CachingTierOperationOutcomes$InvalidateOutcome;
@3.0.0.m5
-###org/ehcache/statistics/CachingTierOperationOutcomes$InvalidateOutcome

+###org/ehcache/statistics/CachingTierOperationOutcomes
@3.0.0.m4
@3.0.0.m5
-###org/ehcache/statistics/CachingTierOperationOutcomes

+###org/ehcache/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateOutcome;
@3.0.0.m5
-###org/ehcache/statistics/HigherCachingTierOperationOutcomes$SilentInvalidateOutcome

+###org/ehcache/statistics/HigherCachingTierOperationOutcomes
@3.0.0.m4
@3.0.0.m5
-###org/ehcache/statistics/HigherCachingTierOperationOutcomes

+###org/ehcache/statistics/LowerCachingTierOperationsOutcome$GetAndRemoveOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/LowerCachingTierOperationsOutcome$GetAndRemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/LowerCachingTierOperationsOutcome$GetAndRemoveOutcome;
@3.0.0.m5
-###org/ehcache/statistics/LowerCachingTierOperationsOutcome$GetAndRemoveOutcome

+###org/ehcache/statistics/LowerCachingTierOperationsOutcome$InstallMappingOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/LowerCachingTierOperationsOutcome$InstallMappingOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/LowerCachingTierOperationsOutcome$InstallMappingOutcome;
@3.0.0.m5
-###org/ehcache/statistics/LowerCachingTierOperationsOutcome$InstallMappingOutcome

+###org/ehcache/statistics/LowerCachingTierOperationsOutcome$InvalidateOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/LowerCachingTierOperationsOutcome$InvalidateOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/LowerCachingTierOperationsOutcome$InvalidateOutcome;
@3.0.0.m5
-###org/ehcache/statistics/LowerCachingTierOperationsOutcome$InvalidateOutcome

+###org/ehcache/statistics/LowerCachingTierOperationsOutcome
@3.0.0.m4
@3.0.0.m5
-###org/ehcache/statistics/LowerCachingTierOperationsOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$ComputeIfAbsentOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$ComputeIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$ComputeIfAbsentOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$ComputeIfAbsentOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$ComputeIfPresentOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$ComputeOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$ComputeOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$ComputeOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$ComputeOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$ConditionalRemoveOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$ConditionalRemoveOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$ConditionalRemoveOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$ConditionalRemoveOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$ConditionalReplaceOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$ConditionalReplaceOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$ConditionalReplaceOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$ConditionalReplaceOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$PutIfAbsentOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$PutIfAbsentOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$PutIfAbsentOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$PutIfAbsentOutcome

+###org/ehcache/statistics/StoreOperationOutcomes$ReplaceOutcome
@3.0.0.m4
+#values()[Lorg/ehcache/statistics/StoreOperationOutcomes$ReplaceOutcome;
+#valueOf(Ljava/lang/String;)Lorg/ehcache/statistics/StoreOperationOutcomes$ReplaceOutcome;
@3.0.0.m5
-###org/ehcache/statistics/StoreOperationOutcomes$ReplaceOutcome
