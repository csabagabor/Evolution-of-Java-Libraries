
+###org/netbeans/modules/openide/nodes/NodesAnnotationProcessor
@RELEASE90
+#<init>()V
+#getSupportedAnnotationTypes()Ljava/util/Set;

+###org/netbeans/modules/openide/nodes/NodesRegistrationSupport$BeanInfoRegistration
@RELEASE90

+###org/netbeans/modules/openide/nodes/NodesRegistrationSupport$PEClassRegistration
@RELEASE90

+###org/netbeans/modules/openide/nodes/NodesRegistrationSupport$PEPackageRegistration
@RELEASE90

+###org/netbeans/modules/openide/nodes/NodesRegistrationSupport
@RELEASE90
+#<init>()V
+#registerPropertyEditors()V
+#createPackageRegistration(Ljava/util/Map;)Lorg/netbeans/modules/openide/nodes/NodesRegistrationSupport$PEPackageRegistration;
+#createClassRegistration(Ljava/util/Map;)Lorg/netbeans/modules/openide/nodes/NodesRegistrationSupport$PEClassRegistration;
+#createBeanInfoRegistration(Ljava/util/Map;)Lorg/netbeans/modules/openide/nodes/NodesRegistrationSupport$BeanInfoRegistration;

+###org/openide/cookies/CloseCookie
@RELEASE90

+###org/openide/cookies/ConnectionCookie$Event
@RELEASE90
+#<init>(Lorg/openide/nodes/Node;Lorg/openide/cookies/ConnectionCookie$Type;)V
+#getNode()Lorg/openide/nodes/Node;
+#getType()Lorg/openide/cookies/ConnectionCookie$Type;

+###org/openide/cookies/ConnectionCookie$Listener
@RELEASE90
+#notify(Lorg/openide/cookies/ConnectionCookie$Event;)V

+###org/openide/cookies/ConnectionCookie$Type
@RELEASE90
+#getEventClass()Ljava/lang/Class;
+#isPersistent()Z
+#overlaps(Lorg/openide/cookies/ConnectionCookie$Type;)Z

+###org/openide/cookies/ConnectionCookie
@RELEASE90
+#register(Lorg/openide/cookies/ConnectionCookie$Type;Lorg/openide/nodes/Node;)V
+#unregister(Lorg/openide/cookies/ConnectionCookie$Type;Lorg/openide/nodes/Node;)V
+#getTypes()Ljava/util/Set;

+###org/openide/cookies/EditCookie
@RELEASE90

+###org/openide/cookies/FilterCookie
@RELEASE90
+#getFilterClass()Ljava/lang/Class;
+#getFilter()Ljava/lang/Object;
+#setFilter(Ljava/lang/Object;)V

+###org/openide/cookies/InstanceCookie$Of
@RELEASE90
+#instanceOf(Ljava/lang/Class;)Z

+###org/openide/cookies/InstanceCookie
@RELEASE90
+#instanceName()Ljava/lang/String;
+#instanceClass()Ljava/lang/Class;
+#instanceCreate()Ljava/lang/Object;

+###org/openide/cookies/OpenCookie
@RELEASE90

+###org/openide/cookies/PrintCookie
@RELEASE90

+###org/openide/cookies/SaveCookie
@RELEASE90

+###org/openide/cookies/ViewCookie
@RELEASE90

+###org/openide/nodes/AbstractNode
@RELEASE90
+#<init>(Lorg/openide/nodes/Children;)V
+#<init>(Lorg/openide/nodes/Children;Lorg/openide/util/Lookup;)V
+#cloneNode()Lorg/openide/nodes/Node;
+#setName(Ljava/lang/String;)V
+#setIconBase(Ljava/lang/String;)V[deprecated]
+#setIconBaseWithExtension(Ljava/lang/String;)V
+#getIcon(I)Ljava/awt/Image;
+#getOpenedIcon(I)Ljava/awt/Image;
+#getHelpCtx()Lorg/openide/util/HelpCtx;
+#canRename()Z
+#canDestroy()Z
+#getPropertySets()[Lorg/openide/nodes/Node$PropertySet;
+#clipboardCopy()Ljava/awt/datatransfer/Transferable;
+#clipboardCut()Ljava/awt/datatransfer/Transferable;
+#drag()Ljava/awt/datatransfer/Transferable;
+#canCopy()Z
+#canCut()Z
+#getPasteTypes(Ljava/awt/datatransfer/Transferable;)[Lorg/openide/util/datatransfer/PasteType;
+#getDropType(Ljava/awt/datatransfer/Transferable;II)Lorg/openide/util/datatransfer/PasteType;
+#getNewTypes()[Lorg/openide/util/datatransfer/NewType;
+#getPreferredAction()Ljavax/swing/Action;
+#getDefaultAction()Lorg/openide/util/actions/SystemAction;[deprecated]
+#setDefaultAction(Lorg/openide/util/actions/SystemAction;)V[deprecated]
+#getActions()[Lorg/openide/util/actions/SystemAction;[deprecated]
+#hasCustomizer()Z
+#getCustomizer()Ljava/awt/Component;
+#getCookie(Ljava/lang/Class;)Lorg/openide/nodes/Node$Cookie;
+#getHandle()Lorg/openide/nodes/Node$Handle;

+###org/openide/nodes/BeanChildren$Factory
@RELEASE90
+#createNode(Ljava/lang/Object;)Lorg/openide/nodes/Node;

+###org/openide/nodes/BeanChildren
@RELEASE90
+#<init>(Ljava/beans/beancontext/BeanContext;)V
+#<init>(Ljava/beans/beancontext/BeanContext;Lorg/openide/nodes/BeanChildren$Factory;)V

+###org/openide/nodes/BeanInfoSearchPath
@RELEASE90

+###org/openide/nodes/BeanNode$Descriptor
@RELEASE90

+###org/openide/nodes/BeanNode
@RELEASE90
+#<init>(Ljava/lang/Object;)V
+#destroy()V
+#canDestroy()Z
+#setName(Ljava/lang/String;)V
+#canRename()Z
+#getIcon(I)Ljava/awt/Image;
+#getOpenedIcon(I)Ljava/awt/Image;
+#getHelpCtx()Lorg/openide/util/HelpCtx;
+#canCopy()Z
+#canCut()Z
+#getActions(Z)[Ljavax/swing/Action;
+#hasCustomizer()Z
+#getCustomizer()Ljava/awt/Component;
+#computeProperties(Ljava/lang/Object;Ljava/beans/BeanInfo;)Lorg/openide/nodes/BeanNode$Descriptor;
+#getPreferredAction()Ljavax/swing/Action;

+###org/openide/nodes/ChildFactory$Detachable
@RELEASE90
+#<init>()V

+###org/openide/nodes/ChildFactory
@RELEASE90
+#<init>()V

+###org/openide/nodes/Children$Array
@RELEASE90
+#<init>()V
+#clone()Ljava/lang/Object;
+#add([Lorg/openide/nodes/Node;)Z
+#remove([Lorg/openide/nodes/Node;)Z

+###org/openide/nodes/Children$Keys
@RELEASE90
+#<init>()V
+#clone()Ljava/lang/Object;
+#add([Lorg/openide/nodes/Node;)Z[deprecated]
+#remove([Lorg/openide/nodes/Node;)Z[deprecated]

+###org/openide/nodes/Children$Map
@RELEASE90
+#<init>()V
+#add([Lorg/openide/nodes/Node;)Z
+#remove([Lorg/openide/nodes/Node;)Z

+###org/openide/nodes/Children$SortedArray
@RELEASE90
+#<init>()V
+#setComparator(Ljava/util/Comparator;)V
+#getComparator()Ljava/util/Comparator;

+###org/openide/nodes/Children$SortedMap
@RELEASE90
+#<init>()V
+#setComparator(Ljava/util/Comparator;)V
+#getComparator()Ljava/util/Comparator;

+###org/openide/nodes/Children
@RELEASE90
+#<init>()V
+#create(Lorg/openide/nodes/ChildFactory;Z)Lorg/openide/nodes/Children;
+#createLazy(Ljava/util/concurrent/Callable;)Lorg/openide/nodes/Children;
+#add([Lorg/openide/nodes/Node;)Z
+#remove([Lorg/openide/nodes/Node;)Z
+#nodes()Ljava/util/Enumeration;
+#findChild(Ljava/lang/String;)Lorg/openide/nodes/Node;
+#getNodeAt(I)Lorg/openide/nodes/Node;
+#getNodes()[Lorg/openide/nodes/Node;
+#getNodes(Z)[Lorg/openide/nodes/Node;
+#getNodesCount()I
+#getNodesCount(Z)I
+#snapshot()Ljava/util/List;

+###org/openide/nodes/CookieSet$Before
@RELEASE90
+#beforeLookup(Ljava/lang/Class;)V

+###org/openide/nodes/CookieSet$Factory
@RELEASE90
+#createCookie(Ljava/lang/Class;)Lorg/openide/nodes/Node$Cookie;

+###org/openide/nodes/CookieSet
@RELEASE90
+#<init>()V
+#createGeneric(Lorg/openide/nodes/CookieSet$Before;)Lorg/openide/nodes/CookieSet;
+#getLookup()Lorg/openide/util/Lookup;
+#add(Lorg/openide/nodes/Node$Cookie;)V
+#remove(Lorg/openide/nodes/Node$Cookie;)V
+#getCookie(Ljava/lang/Class;)Lorg/openide/nodes/Node$Cookie;
+#addChangeListener(Ljavax/swing/event/ChangeListener;)V
+#removeChangeListener(Ljavax/swing/event/ChangeListener;)V
+#add(Ljava/lang/Class;Lorg/openide/nodes/CookieSet$Factory;)V
+#add([Ljava/lang/Class;Lorg/openide/nodes/CookieSet$Factory;)V
+#remove(Ljava/lang/Class;Lorg/openide/nodes/CookieSet$Factory;)V
+#remove([Ljava/lang/Class;Lorg/openide/nodes/CookieSet$Factory;)V
+#assign(Ljava/lang/Class;[Ljava/lang/Object;)V

+###org/openide/nodes/DefaultHandle
@RELEASE90
+#getNode()Lorg/openide/nodes/Node;
+#createHandle(Lorg/openide/nodes/Node;)Lorg/openide/nodes/DefaultHandle;
+#toString()Ljava/lang/String;

+###org/openide/nodes/DestroyableNodesFactory
@RELEASE90
+#<init>()V

+###org/openide/nodes/FilterNode$Children
@RELEASE90
+#<init>(Lorg/openide/nodes/Node;)V
+#clone()Ljava/lang/Object;
+#findChild(Ljava/lang/String;)Lorg/openide/nodes/Node;
+#add([Lorg/openide/nodes/Node;)Z[deprecated]
+#remove([Lorg/openide/nodes/Node;)Z[deprecated]
+#getNodes(Z)[Lorg/openide/nodes/Node;
+#getNodesCount(Z)I

+###org/openide/nodes/FilterNode$NodeAdapter
@RELEASE90
+#<init>(Lorg/openide/nodes/FilterNode;)V
+#propertyChange(Ljava/beans/PropertyChangeEvent;)V
+#childrenAdded(Lorg/openide/nodes/NodeMemberEvent;)V
+#childrenRemoved(Lorg/openide/nodes/NodeMemberEvent;)V
+#childrenReordered(Lorg/openide/nodes/NodeReorderEvent;)V
+#nodeDestroyed(Lorg/openide/nodes/NodeEvent;)V

+###org/openide/nodes/FilterNode$PropertyChangeAdapter
@RELEASE90
+#<init>(Lorg/openide/nodes/FilterNode;)V
+#propertyChange(Ljava/beans/PropertyChangeEvent;)V

+###org/openide/nodes/FilterNode
@RELEASE90
+#<init>(Lorg/openide/nodes/Node;)V
+#<init>(Lorg/openide/nodes/Node;Lorg/openide/nodes/Children;)V
+#<init>(Lorg/openide/nodes/Node;Lorg/openide/nodes/Children;Lorg/openide/util/Lookup;)V
+#cloneNode()Lorg/openide/nodes/Node;
+#setValue(Ljava/lang/String;Ljava/lang/Object;)V
+#getValue(Ljava/lang/String;)Ljava/lang/Object;
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setDisplayName(Ljava/lang/String;)V
+#getDisplayName()Ljava/lang/String;
+#setShortDescription(Ljava/lang/String;)V
+#getShortDescription()Ljava/lang/String;
+#getIcon(I)Ljava/awt/Image;
+#getOpenedIcon(I)Ljava/awt/Image;
+#getHelpCtx()Lorg/openide/util/HelpCtx;
+#canRename()Z
+#canDestroy()Z
+#destroy()V
+#getPropertySets()[Lorg/openide/nodes/Node$PropertySet;
+#clipboardCopy()Ljava/awt/datatransfer/Transferable;
+#clipboardCut()Ljava/awt/datatransfer/Transferable;
+#canCopy()Z
+#canCut()Z
+#drag()Ljava/awt/datatransfer/Transferable;
+#getDropType(Ljava/awt/datatransfer/Transferable;II)Lorg/openide/util/datatransfer/PasteType;
+#getPasteTypes(Ljava/awt/datatransfer/Transferable;)[Lorg/openide/util/datatransfer/PasteType;
+#getNewTypes()[Lorg/openide/util/datatransfer/NewType;
+#getActions()[Lorg/openide/util/actions/SystemAction;[deprecated]
+#getContextActions()[Lorg/openide/util/actions/SystemAction;[deprecated]
+#getDefaultAction()Lorg/openide/util/actions/SystemAction;[deprecated]
+#getActions(Z)[Ljavax/swing/Action;
+#getPreferredAction()Ljavax/swing/Action;
+#getHtmlDisplayName()Ljava/lang/String;
+#hasCustomizer()Z
+#getCustomizer()Ljava/awt/Component;
+#getCookie(Ljava/lang/Class;)Lorg/openide/nodes/Node$Cookie;
+#getHandle()Lorg/openide/nodes/Node$Handle;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/openide/nodes/Index$ArrayChildren
@RELEASE90
+#<init>()V
+#reorder([I)V
+#reorder()V
+#move(II)V
+#exchange(II)V
+#moveUp(I)V
+#moveDown(I)V
+#indexOf(Lorg/openide/nodes/Node;)I
+#addChangeListener(Ljavax/swing/event/ChangeListener;)V
+#removeChangeListener(Ljavax/swing/event/ChangeListener;)V

+###org/openide/nodes/Index$KeysChildren
@RELEASE90
+#<init>(Ljava/util/List;)V
+#getIndex()Lorg/openide/nodes/Index;
+#update()V

+###org/openide/nodes/Index$Support
@RELEASE90
+#<init>()V
+#move(II)V
+#exchange(II)V
+#moveUp(I)V
+#moveDown(I)V
+#addChangeListener(Ljavax/swing/event/ChangeListener;)V
+#removeChangeListener(Ljavax/swing/event/ChangeListener;)V
+#getNodes()[Lorg/openide/nodes/Node;
+#indexOf(Lorg/openide/nodes/Node;)I
+#reorder()V
+#showIndexedCustomizer(Lorg/openide/nodes/Index;)V
+#getNodesCount()I
+#reorder([I)V

+###org/openide/nodes/Index
@RELEASE90
+#getNodesCount()I
+#getNodes()[Lorg/openide/nodes/Node;
+#indexOf(Lorg/openide/nodes/Node;)I
+#reorder()V
+#reorder([I)V
+#move(II)V
+#exchange(II)V
+#moveUp(I)V
+#moveDown(I)V
+#addChangeListener(Ljavax/swing/event/ChangeListener;)V
+#removeChangeListener(Ljavax/swing/event/ChangeListener;)V

+###org/openide/nodes/IndexedCustomizer
@RELEASE90
+#<init>()V
+#getPreferredSize()Ljava/awt/Dimension;
+#isImmediateReorder()Z
+#setImmediateReorder(Z)V
+#setObject(Ljava/lang/Object;)V
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V

+###org/openide/nodes/IndexedNode
@RELEASE90
+#<init>()V
+#hasCustomizer()Z
+#getCustomizer()Ljava/awt/Component;
+#getCookie(Ljava/lang/Class;)Lorg/openide/nodes/Node$Cookie;

+###org/openide/nodes/IndexedPropertySupport
@RELEASE90
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
+#setDisplayName(Ljava/lang/String;)V
+#setName(Ljava/lang/String;)V
+#setShortDescription(Ljava/lang/String;)V
+#canRead()Z
+#getValue()Ljava/lang/Object;
+#canWrite()Z
+#setValue(Ljava/lang/Object;)V
+#canIndexedRead()Z
+#getIndexedValue(I)Ljava/lang/Object;
+#canIndexedWrite()Z
+#setIndexedValue(ILjava/lang/Object;)V

+###org/openide/nodes/Node$Cookie
@RELEASE90

+###org/openide/nodes/Node$Handle
@RELEASE90
+#getNode()Lorg/openide/nodes/Node;

+###org/openide/nodes/Node$IndexedProperty
@RELEASE90
+#<init>(Ljava/lang/Class;Ljava/lang/Class;)V
+#canIndexedRead()Z
+#getElementType()Ljava/lang/Class;
+#getIndexedValue(I)Ljava/lang/Object;
+#canIndexedWrite()Z
+#setIndexedValue(ILjava/lang/Object;)V
+#getIndexedPropertyEditor()Ljava/beans/PropertyEditor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/openide/nodes/Node$Property
@RELEASE90
+#<init>(Ljava/lang/Class;)V
+#getValueType()Ljava/lang/Class;
+#canRead()Z
+#getValue()Ljava/lang/Object;
+#canWrite()Z
+#setValue(Ljava/lang/Object;)V
+#supportsDefaultValue()Z
+#restoreDefaultValue()V
+#isDefaultValue()Z
+#getPropertyEditor()Ljava/beans/PropertyEditor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getHtmlDisplayName()Ljava/lang/String;

+###org/openide/nodes/Node$PropertySet
@RELEASE90
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getProperties()[Lorg/openide/nodes/Node$Property;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getHtmlDisplayName()Ljava/lang/String;

+###org/openide/nodes/Node
@RELEASE90
+#cloneNode()Lorg/openide/nodes/Node;
+#setName(Ljava/lang/String;)V
+#setDisplayName(Ljava/lang/String;)V
+#setShortDescription(Ljava/lang/String;)V
+#setHidden(Z)V[deprecated]
+#getIcon(I)Ljava/awt/Image;
+#getOpenedIcon(I)Ljava/awt/Image;
+#getHelpCtx()Lorg/openide/util/HelpCtx;
+#getChildren()Lorg/openide/nodes/Children;
+#isLeaf()Z
+#getParentNode()Lorg/openide/nodes/Node;
+#canRename()Z
+#canDestroy()Z
+#destroy()V
+#getPropertySets()[Lorg/openide/nodes/Node$PropertySet;
+#clipboardCopy()Ljava/awt/datatransfer/Transferable;
+#clipboardCut()Ljava/awt/datatransfer/Transferable;
+#drag()Ljava/awt/datatransfer/Transferable;
+#canCopy()Z
+#canCut()Z
+#getPasteTypes(Ljava/awt/datatransfer/Transferable;)[Lorg/openide/util/datatransfer/PasteType;
+#getDropType(Ljava/awt/datatransfer/Transferable;II)Lorg/openide/util/datatransfer/PasteType;
+#getNewTypes()[Lorg/openide/util/datatransfer/NewType;
+#getActions(Z)[Ljavax/swing/Action;
+#getActions()[Lorg/openide/util/actions/SystemAction;[deprecated]
+#getContextActions()[Lorg/openide/util/actions/SystemAction;[deprecated]
+#getDefaultAction()Lorg/openide/util/actions/SystemAction;[deprecated]
+#getPreferredAction()Ljavax/swing/Action;
+#getContextMenu()Ljavax/swing/JPopupMenu;
+#hasCustomizer()Z
+#getCustomizer()Ljava/awt/Component;
+#getCookie(Ljava/lang/Class;)Lorg/openide/nodes/Node$Cookie;
+#getLookup()Lorg/openide/util/Lookup;
+#getHtmlDisplayName()Ljava/lang/String;
+#getHandle()Lorg/openide/nodes/Node$Handle;
+#addNodeListener(Lorg/openide/nodes/NodeListener;)V
+#removeNodeListener(Lorg/openide/nodes/NodeListener;)V
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/openide/nodes/NodeAcceptor
@RELEASE90
+#acceptNodes([Lorg/openide/nodes/Node;)Z

+###org/openide/nodes/NodeAdapter
@RELEASE90
+#<init>()V
+#propertyChange(Ljava/beans/PropertyChangeEvent;)V
+#childrenAdded(Lorg/openide/nodes/NodeMemberEvent;)V
+#childrenRemoved(Lorg/openide/nodes/NodeMemberEvent;)V
+#childrenReordered(Lorg/openide/nodes/NodeReorderEvent;)V
+#nodeDestroyed(Lorg/openide/nodes/NodeEvent;)V

+###org/openide/nodes/NodeEvent
@RELEASE90
+#<init>(Lorg/openide/nodes/Node;)V
+#getNode()Lorg/openide/nodes/Node;

+###org/openide/nodes/NodeListener
@RELEASE90
+#childrenAdded(Lorg/openide/nodes/NodeMemberEvent;)V
+#childrenRemoved(Lorg/openide/nodes/NodeMemberEvent;)V
+#childrenReordered(Lorg/openide/nodes/NodeReorderEvent;)V
+#nodeDestroyed(Lorg/openide/nodes/NodeEvent;)V

+###org/openide/nodes/NodeMemberEvent
@RELEASE90
+#getSnapshot()Ljava/util/List;
+#isAddEvent()Z
+#getDelta()[Lorg/openide/nodes/Node;
+#getDeltaIndices()[I
+#toString()Ljava/lang/String;

+###org/openide/nodes/NodeNotFoundException
@RELEASE90
+#getClosestNode()Lorg/openide/nodes/Node;
+#getMissingChildName()Ljava/lang/String;
+#getClosestNodeDepth()I
+#getMessage()Ljava/lang/String;

+###org/openide/nodes/NodeOp
@RELEASE90
+#getDefaultActions()[Lorg/openide/util/actions/SystemAction;[deprecated]
+#setDefaultActions([Lorg/openide/util/actions/SystemAction;)V[deprecated]
+#findContextMenu([Lorg/openide/nodes/Node;)Ljavax/swing/JPopupMenu;
+#findActions([Lorg/openide/nodes/Node;)[Ljavax/swing/Action;
+#isSon(Lorg/openide/nodes/Node;Lorg/openide/nodes/Node;)Z
+#createPath(Lorg/openide/nodes/Node;Lorg/openide/nodes/Node;)[Ljava/lang/String;
+#findChild(Lorg/openide/nodes/Node;Ljava/lang/String;)Lorg/openide/nodes/Node;
+#findPath(Lorg/openide/nodes/Node;Ljava/util/Enumeration;)Lorg/openide/nodes/Node;
+#findPath(Lorg/openide/nodes/Node;[Ljava/lang/String;)Lorg/openide/nodes/Node;
+#findRoot(Lorg/openide/nodes/Node;)Lorg/openide/nodes/Node;
+#computePermutation([Lorg/openide/nodes/Node;[Lorg/openide/nodes/Node;)[I
+#toHandles([Lorg/openide/nodes/Node;)[Lorg/openide/nodes/Node$Handle;
+#fromHandles([Lorg/openide/nodes/Node$Handle;)[Lorg/openide/nodes/Node;
+#weakNodeListener(Lorg/openide/nodes/NodeListener;Ljava/lang/Object;)Lorg/openide/nodes/NodeListener;
+#registerPropertyEditors()V

+###org/openide/nodes/NodeOperation
@RELEASE90
+#getDefault()Lorg/openide/nodes/NodeOperation;
+#customize(Lorg/openide/nodes/Node;)Z
+#explore(Lorg/openide/nodes/Node;)V
+#showProperties(Lorg/openide/nodes/Node;)V
+#showProperties([Lorg/openide/nodes/Node;)V
+#showCustomEditorDialog(Lorg/openide/nodes/Node$Property;[Ljava/lang/Object;)V
+#select(Ljava/lang/String;Ljava/lang/String;Lorg/openide/nodes/Node;Lorg/openide/nodes/NodeAcceptor;Ljava/awt/Component;)[Lorg/openide/nodes/Node;
+#select(Ljava/lang/String;Ljava/lang/String;Lorg/openide/nodes/Node;Lorg/openide/nodes/NodeAcceptor;)[Lorg/openide/nodes/Node;
+#select(Ljava/lang/String;Ljava/lang/String;Lorg/openide/nodes/Node;)Lorg/openide/nodes/Node;

+###org/openide/nodes/NodeReorderEvent
@RELEASE90
+#getSnapshot()Ljava/util/List;
+#newIndexOf(I)I
+#getPermutation()[I
+#getPermutationSize()I
+#toString()Ljava/lang/String;

+###org/openide/nodes/NodeTransfer$Paste
@RELEASE90
+#types(Lorg/openide/nodes/Node;)[Lorg/openide/util/datatransfer/PasteType;

+###org/openide/nodes/NodeTransfer
@RELEASE90
+#transferable(Lorg/openide/nodes/Node;I)Lorg/openide/util/datatransfer/ExTransferable$Single;
+#node(Ljava/awt/datatransfer/Transferable;I)Lorg/openide/nodes/Node;
+#nodes(Ljava/awt/datatransfer/Transferable;I)[Lorg/openide/nodes/Node;
+#cookie(Ljava/awt/datatransfer/Transferable;ILjava/lang/Class;)Lorg/openide/nodes/Node$Cookie;
+#createPaste(Lorg/openide/nodes/NodeTransfer$Paste;)Lorg/openide/util/datatransfer/ExTransferable$Single;
+#findPaste(Ljava/awt/datatransfer/Transferable;)Lorg/openide/nodes/NodeTransfer$Paste;

+###org/openide/nodes/PropertyEditorRegistration
@RELEASE90
+#targetType()[Ljava/lang/Class;

+###org/openide/nodes/PropertyEditorSearchPath
@RELEASE90

+###org/openide/nodes/PropertySupport$Name
@RELEASE90
+#<init>(Lorg/openide/nodes/Node;)V
+#<init>(Lorg/openide/nodes/Node;Ljava/lang/String;Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#setValue(Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;

+###org/openide/nodes/PropertySupport$ReadOnly
@RELEASE90
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
+#setValue(Ljava/lang/Object;)V

+###org/openide/nodes/PropertySupport$ReadWrite
@RELEASE90
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V

+###org/openide/nodes/PropertySupport$Reflection
@RELEASE90
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V
+#canRead()Z
+#getValue()Ljava/lang/Object;
+#canWrite()Z
+#setValue(Ljava/lang/Object;)V
+#getPropertyEditor()Ljava/beans/PropertyEditor;
+#setPropertyEditorClass(Ljava/lang/Class;)V

+###org/openide/nodes/PropertySupport$WriteOnly
@RELEASE90
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V
+#getValue()Ljava/lang/Object;

+###org/openide/nodes/PropertySupport
@RELEASE90
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ZZ)V
+#canRead()Z
+#canWrite()Z
@RELEASE150
+#withDisplayName(Ljava/lang/String;)Lorg/openide/nodes/PropertySupport;
+#withShortDescription(Ljava/lang/String;)Lorg/openide/nodes/PropertySupport;
+#readWrite(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lorg/openide/nodes/PropertySupport;
+#readOnly(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/openide/nodes/PropertySupport;
+#writeOnly(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Consumer;)Lorg/openide/nodes/PropertySupport;

+###org/openide/nodes/Sheet$Set
@RELEASE90
+#<init>()V
+#cloneSet()Lorg/openide/nodes/Sheet$Set;
+#get(Ljava/lang/String;)Lorg/openide/nodes/Node$Property;
+#getProperties()[Lorg/openide/nodes/Node$Property;
+#put(Lorg/openide/nodes/Node$Property;)Lorg/openide/nodes/Node$Property;
+#put([Lorg/openide/nodes/Node$Property;)V
+#remove(Ljava/lang/String;)Lorg/openide/nodes/Node$Property;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V

+###org/openide/nodes/Sheet
@RELEASE90
+#<init>()V
+#toArray()[Lorg/openide/nodes/Node$PropertySet;
+#cloneSheet()Lorg/openide/nodes/Sheet;
+#get(Ljava/lang/String;)Lorg/openide/nodes/Sheet$Set;
+#put(Lorg/openide/nodes/Sheet$Set;)Lorg/openide/nodes/Sheet$Set;
+#remove(Ljava/lang/String;)Lorg/openide/nodes/Sheet$Set;
+#createDefault()Lorg/openide/nodes/Sheet;
+#createPropertiesSet()Lorg/openide/nodes/Sheet$Set;
+#createExpertSet()Lorg/openide/nodes/Sheet$Set;
+#addPropertyChangeListener(Ljava/beans/PropertyChangeListener;)V
+#removePropertyChangeListener(Ljava/beans/PropertyChangeListener;)V

+###org/openide/util/actions/CookieAction
@RELEASE90
+#<init>()V
+#createContextAwareInstance(Lorg/openide/util/Lookup;)Ljavax/swing/Action;

+###org/openide/util/actions/NodeAction
@RELEASE90
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#actionPerformed(Ljava/awt/event/ActionEvent;)V[deprecated]
+#performAction()V[deprecated]
+#getActivatedNodes()[Lorg/openide/nodes/Node;
+#createContextAwareInstance(Lorg/openide/util/Lookup;)Ljavax/swing/Action;
