
+###org/springframework/dao/InvalidDataAccessResourceUsageException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/ConcurrencyFailureException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/IncorrectUpdateSemanticsDataAccessException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#wasDataUpdated()Z

+###org/springframework/dao/CannotSerializeTransactionException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/PermissionDeniedDataAccessException
@2.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/EmptyResultDataAccessException
@2.5
+#<init>(I)V
+#<init>(Ljava/lang/String;I)V
@3.1.1.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/Throwable;)V

+###org/springframework/dao/DataRetrievalFailureException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/support/DaoSupport
@2.5
+#<init>()V
+#afterPropertiesSet()V

+###org/springframework/dao/support/DataAccessUtils
@2.5
+#<init>()V
+#singleResult(Ljava/util/Collection;)Ljava/lang/Object;
+#requiredSingleResult(Ljava/util/Collection;)Ljava/lang/Object;
+#uniqueResult(Ljava/util/Collection;)Ljava/lang/Object;
+#requiredUniqueResult(Ljava/util/Collection;)Ljava/lang/Object;
+#objectResult(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object;
+#intResult(Ljava/util/Collection;)I
+#longResult(Ljava/util/Collection;)J
+#translateIfNecessary(Ljava/lang/RuntimeException;Lorg/springframework/dao/support/PersistenceExceptionTranslator;)Ljava/lang/RuntimeException;
@5.0.2.RELEASE
+#nullableSingleResult(Ljava/util/Collection;)Ljava/lang/Object;

+###org/springframework/dao/support/PersistenceExceptionTranslationInterceptor
@2.5
+#<init>()V
+#<init>(Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#<init>(Lorg/springframework/beans/factory/ListableBeanFactory;)V
+#setPersistenceExceptionTranslator(Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#afterPropertiesSet()V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@3.0.1.RELEASE
+#setAlwaysTranslate(Z)V

+###org/springframework/dao/support/PersistenceExceptionTranslator
@2.5
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;

+###org/springframework/dao/support/ChainedPersistenceExceptionTranslator
@2.5
+#<init>()V
+#addDelegate(Lorg/springframework/dao/support/PersistenceExceptionTranslator;)V
+#getDelegates()[Lorg/springframework/dao/support/PersistenceExceptionTranslator;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;

+###org/springframework/dao/NonTransientDataAccessResourceException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/QueryTimeoutException
@3.1.1.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/RecoverableDataAccessException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/DeadlockLoserDataAccessException
@2.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/UncategorizedDataAccessException
@2.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/DataAccessResourceFailureException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/annotation/PersistenceExceptionTranslationAdvisor
@2.5
+#<init>(Lorg/springframework/dao/support/PersistenceExceptionTranslator;Ljava/lang/Class;)V
+#getAdvice()Lorg/aopalliance/aop/Advice;
+#getPointcut()Lorg/springframework/aop/Pointcut;

+###org/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor
@2.5
+#<init>()V
+#setRepositoryAnnotationType(Ljava/lang/Class;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#getOrder()I
+#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
@3.2.0.RELEASE
-#setBeanClassLoader(Ljava/lang/ClassLoader;)V
-#getOrder()I
-#postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
-#postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

+###org/springframework/dao/TypeMismatchDataAccessException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/NonTransientDataAccessException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/DuplicateKeyException
@3.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/InvalidDataAccessApiUsageException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/DataAccessException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/TransientDataAccessException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/IncorrectResultSizeDataAccessException
@2.5
+#<init>(I)V
+#<init>(II)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;II)V
+#getExpectedSize()I
+#getActualSize()I
@3.1.0.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/Throwable;)V
@3.1.1.RELEASE
+#<init>(Ljava/lang/String;IILjava/lang/Throwable;)V

+###org/springframework/dao/CannotAcquireLockException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/DataIntegrityViolationException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/PessimisticLockingFailureException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/OptimisticLockingFailureException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/CleanupFailureDataAccessException
@2.5
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/dao/TransientDataAccessResourceException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/HeuristicCompletionException
@2.5
+#getStateString(I)Ljava/lang/String;
+#<init>(ILjava/lang/Throwable;)V
+#getOutcomeState()I

+###org/springframework/transaction/jta/JtaTransactionManager
@2.5
+#<init>()V
+#<init>(Ljavax/transaction/UserTransaction;)V
+#<init>(Ljavax/transaction/UserTransaction;Ljavax/transaction/TransactionManager;)V
+#<init>(Ljavax/transaction/TransactionManager;)V
+#setJndiTemplate(Lorg/springframework/jndi/JndiTemplate;)V
+#getJndiTemplate()Lorg/springframework/jndi/JndiTemplate;
+#setJndiEnvironment(Ljava/util/Properties;)V
+#getJndiEnvironment()Ljava/util/Properties;
+#setUserTransaction(Ljavax/transaction/UserTransaction;)V
+#getUserTransaction()Ljavax/transaction/UserTransaction;
+#setUserTransactionName(Ljava/lang/String;)V
+#setAutodetectUserTransaction(Z)V
+#setCacheUserTransaction(Z)V
+#setTransactionManager(Ljavax/transaction/TransactionManager;)V
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#setTransactionManagerName(Ljava/lang/String;)V
+#setAutodetectTransactionManager(Z)V
+#setTransactionSynchronizationRegistryName(Ljava/lang/String;)V
+#setAllowCustomIsolationLevels(Z)V
+#afterPropertiesSet()V
+#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;
@3.0.0.RELEASE
+#supportsResourceAdapterManagedTransactions()Z
@4.0.0.RELEASE
+#setTransactionSynchronizationRegistry(Ljavax/transaction/TransactionSynchronizationRegistry;)V
+#getTransactionSynchronizationRegistry()Ljavax/transaction/TransactionSynchronizationRegistry;
+#setAutodetectTransactionSynchronizationRegistry(Z)V
@6.0.0
+#<init>(Ljakarta/transaction/UserTransaction;)V
+#<init>(Ljakarta/transaction/UserTransaction;Ljakarta/transaction/TransactionManager;)V
+#<init>(Ljakarta/transaction/TransactionManager;)V
+#setUserTransaction(Ljakarta/transaction/UserTransaction;)V
+#getUserTransaction()Ljakarta/transaction/UserTransaction;
+#setTransactionManager(Ljakarta/transaction/TransactionManager;)V
+#getTransactionManager()Ljakarta/transaction/TransactionManager;
+#setTransactionSynchronizationRegistry(Ljakarta/transaction/TransactionSynchronizationRegistry;)V
+#getTransactionSynchronizationRegistry()Ljakarta/transaction/TransactionSynchronizationRegistry;
+#createTransaction(Ljava/lang/String;I)Ljakarta/transaction/Transaction;
-#<init>(Ljavax/transaction/UserTransaction;)V
-#<init>(Ljavax/transaction/UserTransaction;Ljavax/transaction/TransactionManager;)V
-#<init>(Ljavax/transaction/TransactionManager;)V
-#setUserTransaction(Ljavax/transaction/UserTransaction;)V
-#getUserTransaction()Ljavax/transaction/UserTransaction;
-#setTransactionManager(Ljavax/transaction/TransactionManager;)V
-#getTransactionManager()Ljavax/transaction/TransactionManager;
-#setTransactionSynchronizationRegistry(Ljavax/transaction/TransactionSynchronizationRegistry;)V
-#getTransactionSynchronizationRegistry()Ljavax/transaction/TransactionSynchronizationRegistry;
-#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;

+###org/springframework/transaction/jta/UserTransactionAdapter
@2.5
+#<init>(Ljavax/transaction/TransactionManager;)V
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#begin()V
+#commit()V
+#getStatus()I
+#rollback()V
+#setRollbackOnly()V
+#setTransactionTimeout(I)V
@6.0.0
+#<init>(Ljakarta/transaction/TransactionManager;)V
+#getTransactionManager()Ljakarta/transaction/TransactionManager;
-#<init>(Ljavax/transaction/TransactionManager;)V
-#getTransactionManager()Ljavax/transaction/TransactionManager;

+###org/springframework/transaction/jta/SimpleTransactionFactory
@2.5
+#<init>(Ljavax/transaction/TransactionManager;)V
+#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;
@3.0.0.RELEASE
+#supportsResourceAdapterManagedTransactions()Z
@6.0.0
+#<init>(Ljakarta/transaction/TransactionManager;)V
+#createTransaction(Ljava/lang/String;I)Ljakarta/transaction/Transaction;
-#<init>(Ljavax/transaction/TransactionManager;)V
-#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;

+###org/springframework/transaction/jta/JtaTransactionObject
@2.5
+#<init>(Ljavax/transaction/UserTransaction;)V
+#getUserTransaction()Ljavax/transaction/UserTransaction;
+#isRollbackOnly()Z
@3.0.0.RELEASE
+#flush()V
@6.0.0
+#<init>(Ljakarta/transaction/UserTransaction;)V
+#getUserTransaction()Ljakarta/transaction/UserTransaction;
-#<init>(Ljavax/transaction/UserTransaction;)V
-#getUserTransaction()Ljavax/transaction/UserTransaction;

+###org/springframework/transaction/jta/TransactionFactory
@2.5
+#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;
@3.0.0.RELEASE
+#supportsResourceAdapterManagedTransactions()Z
@6.0.0
+#createTransaction(Ljava/lang/String;I)Ljakarta/transaction/Transaction;
-#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;

+###org/springframework/transaction/jta/WebSphereUowTransactionManager
@2.5
+#<init>()V
+#<init>(Lcom/ibm/wsspi/uow/UOWManager;)V
+#setUowManager(Lcom/ibm/wsspi/uow/UOWManager;)V
+#setUowManagerName(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#execute(Lorg/springframework/transaction/TransactionDefinition;Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;
@3.0.0.RELEASE
+#supportsResourceAdapterManagedTransactions()Z
@6.0.0
-###org/springframework/transaction/jta/WebSphereUowTransactionManager

+###org/springframework/transaction/jta/SpringJtaSynchronizationAdapter
@2.5
+#<init>(Lorg/springframework/transaction/support/TransactionSynchronization;)V
+#<init>(Lorg/springframework/transaction/support/TransactionSynchronization;Ljavax/transaction/UserTransaction;)V
+#<init>(Lorg/springframework/transaction/support/TransactionSynchronization;Ljavax/transaction/TransactionManager;)V
+#beforeCompletion()V
+#afterCompletion(I)V
@6.0.0
+#<init>(Lorg/springframework/transaction/support/TransactionSynchronization;Ljakarta/transaction/UserTransaction;)V
+#<init>(Lorg/springframework/transaction/support/TransactionSynchronization;Ljakarta/transaction/TransactionManager;)V
-#<init>(Lorg/springframework/transaction/support/TransactionSynchronization;Ljavax/transaction/UserTransaction;)V
-#<init>(Lorg/springframework/transaction/support/TransactionSynchronization;Ljavax/transaction/TransactionManager;)V

+###org/springframework/transaction/jta/ManagedTransactionAdapter
@3.0.2.RELEASE
+#<init>(Ljavax/transaction/TransactionManager;)V
+#getTransactionManager()Ljavax/transaction/TransactionManager;
+#commit()V
+#rollback()V
+#setRollbackOnly()V
+#getStatus()I
+#enlistResource(Ljavax/transaction/xa/XAResource;)Z
+#delistResource(Ljavax/transaction/xa/XAResource;I)Z
+#registerSynchronization(Ljavax/transaction/Synchronization;)V
@6.0.0
+#<init>(Ljakarta/transaction/TransactionManager;)V
+#getTransactionManager()Ljakarta/transaction/TransactionManager;
+#registerSynchronization(Ljakarta/transaction/Synchronization;)V
-#<init>(Ljavax/transaction/TransactionManager;)V
-#getTransactionManager()Ljavax/transaction/TransactionManager;
-#registerSynchronization(Ljavax/transaction/Synchronization;)V

+###org/springframework/transaction/jta/JtaAfterCompletionSynchronization
@2.5
+#<init>(Ljava/util/List;)V
+#beforeCompletion()V
+#afterCompletion(I)V

+###org/springframework/transaction/jta/WebLogicJtaTransactionManager
@2.5
+#<init>()V
+#afterPropertiesSet()V
+#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;
@6.0.0
-###org/springframework/transaction/jta/WebLogicJtaTransactionManager

+###org/springframework/transaction/TransactionDefinition
@2.5
+#getPropagationBehavior()I
+#getIsolationLevel()I
+#getTimeout()I
+#isReadOnly()Z
+#getName()Ljava/lang/String;
@5.2.0.RELEASE
+#withDefaults()Lorg/springframework/transaction/TransactionDefinition;

+###org/springframework/transaction/TransactionExecution
@5.2.0.RELEASE
+#isNewTransaction()Z
+#setRollbackOnly()V
+#isRollbackOnly()Z
+#isCompleted()Z

+###org/springframework/transaction/NestedTransactionNotSupportedException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/ReactiveTransactionManager
@5.2.0.RELEASE
+#getReactiveTransaction(Lorg/springframework/transaction/TransactionDefinition;)Lreactor/core/publisher/Mono;
+#commit(Lorg/springframework/transaction/ReactiveTransaction;)Lreactor/core/publisher/Mono;
+#rollback(Lorg/springframework/transaction/ReactiveTransaction;)Lreactor/core/publisher/Mono;

+###org/springframework/transaction/IllegalTransactionStateException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/TransactionSystemException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#initApplicationException(Ljava/lang/Throwable;)V
+#getApplicationException()Ljava/lang/Throwable;
+#getOriginalException()Ljava/lang/Throwable;
+#contains(Ljava/lang/Class;)Z

+###org/springframework/transaction/config/TxNamespaceHandler
@2.5
+#<init>()V
+#init()V

+###org/springframework/transaction/config/JtaTransactionManagerFactoryBean
@4.1.1.RELEASE
+#<init>()V
+#getObject()Lorg/springframework/transaction/jta/JtaTransactionManager;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#getObject()Ljava/lang/Object;
@5.2.0.RELEASE
+#afterPropertiesSet()V

+###org/springframework/transaction/config/JtaTransactionManagerBeanDefinitionParser
@2.5
+#<init>()V

+###org/springframework/transaction/config/TransactionManagementConfigUtils
@3.1.0.RELEASE
+#<init>()V

+###org/springframework/transaction/interceptor/TransactionAttributeSourceAdvisor
@2.5
+#<init>()V
+#<init>(Lorg/springframework/transaction/interceptor/TransactionInterceptor;)V
+#setTransactionInterceptor(Lorg/springframework/transaction/interceptor/TransactionInterceptor;)V
+#setClassFilter(Lorg/springframework/aop/ClassFilter;)V
+#getAdvice()Lorg/aopalliance/aop/Advice;
+#getPointcut()Lorg/springframework/aop/Pointcut;

+###org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo
@2.5
+#<init>(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
+#getTransactionAttribute()Lorg/springframework/transaction/interceptor/TransactionAttribute;
+#getJoinpointIdentification()Ljava/lang/String;
+#newTransactionStatus(Lorg/springframework/transaction/TransactionStatus;)V
+#getTransactionStatus()Lorg/springframework/transaction/TransactionStatus;
+#hasTransaction()Z
@2.5.2
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#<init>(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
+#getTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
-#<init>(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
@5.2.0.RELEASE
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
-#<init>(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V

+###org/springframework/transaction/interceptor/TransactionAttributeEditor
@2.5
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/transaction/interceptor/RollbackRuleAttribute
@2.5
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;)V
+#getExceptionName()Ljava/lang/String;
+#getDepth(Ljava/lang/Throwable;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/transaction/interceptor/CompositeTransactionAttributeSource
@2.5
+#<init>([Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
+#getTransactionAttributeSources()[Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
+#getTransactionAttribute(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;)Z

+###org/springframework/transaction/interceptor/DefaultTransactionAttribute
@2.5
+#<init>()V
+#<init>(Lorg/springframework/transaction/interceptor/TransactionAttribute;)V
+#<init>(I)V
+#rollbackOn(Ljava/lang/Throwable;)Z
@3.0.0.RELEASE
+#setQualifier(Ljava/lang/String;)V
+#getQualifier()Ljava/lang/String;
@4.3.4.RELEASE
+#setDescriptor(Ljava/lang/String;)V
+#getDescriptor()Ljava/lang/String;
@5.3.0
+#setTimeoutString(Ljava/lang/String;)V
+#getTimeoutString()Ljava/lang/String;
+#setLabels(Ljava/util/Collection;)V
+#getLabels()Ljava/util/Collection;
+#resolveAttributeStrings(Lorg/springframework/util/StringValueResolver;)V

+###org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource
@2.5
+#<init>()V
+#setMethodMap(Ljava/util/Map;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#afterPropertiesSet()V
+#addTransactionalMethod(Ljava/lang/String;Lorg/springframework/transaction/interceptor/TransactionAttribute;)V
+#addTransactionalMethod(Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/transaction/interceptor/TransactionAttribute;)V
+#addTransactionalMethod(Ljava/lang/reflect/Method;Lorg/springframework/transaction/interceptor/TransactionAttribute;)V
+#getTransactionAttribute(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.3.0
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V

+###org/springframework/transaction/interceptor/TransactionInterceptor
@2.5
+#<init>()V
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Ljava/util/Properties;)V
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
+#invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
@5.2.5.RELEASE
+#<init>(Lorg/springframework/transaction/TransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
*#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V[deprecated]
*#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Ljava/util/Properties;)V[deprecated]

+###org/springframework/transaction/interceptor/TransactionProxyFactoryBean
@2.5
+#<init>()V
+#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#setTransactionAttributes(Ljava/util/Properties;)V
+#setTransactionAttributeSource(Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
+#setPointcut(Lorg/springframework/aop/Pointcut;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/transaction/interceptor/TransactionAttributeSource
@2.5
+#getTransactionAttribute(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;)Z

+###org/springframework/transaction/interceptor/TransactionAspectSupport
@2.5
+#<init>()V
+#currentTransactionStatus()Lorg/springframework/transaction/TransactionStatus;
+#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#getTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
+#setTransactionAttributes(Ljava/util/Properties;)V
+#setTransactionAttributeSources([Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
+#setTransactionAttributeSource(Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
+#getTransactionAttributeSource()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
+#afterPropertiesSet()V
@3.0.0.RELEASE
+#setTransactionManagerBeanName(Ljava/lang/String;)V
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
@5.2.0.RELEASE
+#setTransactionManager(Lorg/springframework/transaction/TransactionManager;)V
+#getTransactionManager()Lorg/springframework/transaction/TransactionManager;
-#<init>()V
-#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
-#getTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;

+###org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource
@2.5
+#<init>()V
+#getTransactionAttribute(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@5.3.0
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V

+###org/springframework/transaction/interceptor/TransactionAttribute
@2.5
+#rollbackOn(Ljava/lang/Throwable;)Z
@3.0.0.RELEASE
+#getQualifier()Ljava/lang/String;
@5.3.0
+#getLabels()Ljava/util/Collection;

+###org/springframework/transaction/interceptor/TransactionAttributeSourceEditor
@2.5
+#<init>()V
+#setAsText(Ljava/lang/String;)V

+###org/springframework/transaction/interceptor/NoRollbackRuleAttribute
@2.5
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/String;)V
+#toString()Ljava/lang/String;

+###org/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback
@3.2.2.RELEASE
+#proceedWithInvocation()Ljava/lang/Object;

+###org/springframework/transaction/interceptor/RuleBasedTransactionAttribute
@2.5
+#<init>()V
+#<init>(Lorg/springframework/transaction/interceptor/RuleBasedTransactionAttribute;)V
+#<init>(ILjava/util/List;)V
+#setRollbackRules(Ljava/util/List;)V
+#getRollbackRules()Ljava/util/List;
+#rollbackOn(Ljava/lang/Throwable;)Z
+#toString()Ljava/lang/String;

+###org/springframework/transaction/interceptor/MatchAlwaysTransactionAttributeSource
@2.5
+#<init>()V
+#setTransactionAttribute(Lorg/springframework/transaction/interceptor/TransactionAttribute;)V
+#getTransactionAttribute(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor
@2.5.5
+#<init>()V
+#setTransactionAttributeSource(Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
+#setClassFilter(Lorg/springframework/aop/ClassFilter;)V
+#getPointcut()Lorg/springframework/aop/Pointcut;

+###org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource
@2.5
+#<init>()V
+#setNameMap(Ljava/util/Map;)V
+#setProperties(Ljava/util/Properties;)V
+#addTransactionalMethod(Ljava/lang/String;Lorg/springframework/transaction/interceptor/TransactionAttribute;)V
+#getTransactionAttribute(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.3.0
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V
+#afterPropertiesSet()V

+###org/springframework/transaction/interceptor/TransactionAspectSupport$CoroutinesInvocationCallback
@5.3.0
+#getContinuation()Ljava/lang/Object;
@5.3.2
+#getTarget()Ljava/lang/Object;
+#getArguments()[Ljava/lang/Object;

+###org/springframework/transaction/interceptor/TransactionalProxy
@4.1.7.RELEASE

+###org/springframework/transaction/interceptor/DelegatingTransactionAttribute
@2.5
+#<init>(Lorg/springframework/transaction/interceptor/TransactionAttribute;)V
+#getPropagationBehavior()I
+#getIsolationLevel()I
+#getTimeout()I
+#isReadOnly()Z
+#getName()Ljava/lang/String;
+#rollbackOn(Ljava/lang/Throwable;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@3.0.0.RELEASE
+#getQualifier()Ljava/lang/String;
-#getPropagationBehavior()I
-#getIsolationLevel()I
-#getTimeout()I
-#isReadOnly()Z
-#getName()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@5.3.0
+#getLabels()Ljava/util/Collection;

+###org/springframework/transaction/support/ResourceTransactionManager
@2.5
+#getResourceFactory()Ljava/lang/Object;

+###org/springframework/transaction/support/TransactionSynchronizationManager
@2.5
+#<init>()V
+#getResourceMap()Ljava/util/Map;
+#hasResource(Ljava/lang/Object;)Z
+#getResource(Ljava/lang/Object;)Ljava/lang/Object;
+#bindResource(Ljava/lang/Object;Ljava/lang/Object;)V
+#unbindResource(Ljava/lang/Object;)Ljava/lang/Object;
+#isSynchronizationActive()Z
+#initSynchronization()V
+#registerSynchronization(Lorg/springframework/transaction/support/TransactionSynchronization;)V
+#getSynchronizations()Ljava/util/List;
+#clearSynchronization()V
+#setCurrentTransactionName(Ljava/lang/String;)V
+#getCurrentTransactionName()Ljava/lang/String;
+#setCurrentTransactionReadOnly(Z)V
+#isCurrentTransactionReadOnly()Z
+#setCurrentTransactionIsolationLevel(Ljava/lang/Integer;)V
+#getCurrentTransactionIsolationLevel()Ljava/lang/Integer;
+#setActualTransactionActive(Z)V
+#isActualTransactionActive()Z
+#clear()V
@2.5.5
+#unbindResourceIfPossible(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/transaction/support/AbstractPlatformTransactionManager
@2.5
+#<init>()V
+#setTransactionSynchronizationName(Ljava/lang/String;)V
+#setTransactionSynchronization(I)V
+#getTransactionSynchronization()I
+#setDefaultTimeout(I)V
+#getDefaultTimeout()I
+#setNestedTransactionAllowed(Z)V
+#isNestedTransactionAllowed()Z
+#setGlobalRollbackOnParticipationFailure(Z)V
+#isGlobalRollbackOnParticipationFailure()Z
+#setFailEarlyOnGlobalRollbackOnly(Z)V
+#isFailEarlyOnGlobalRollbackOnly()Z
+#setRollbackOnCommitFailure(Z)V
+#isRollbackOnCommitFailure()Z
+#getTransaction(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
+#commit(Lorg/springframework/transaction/TransactionStatus;)V
+#rollback(Lorg/springframework/transaction/TransactionStatus;)V
@2.5.1
+#setValidateExistingTransaction(Z)V
+#isValidateExistingTransaction()Z

+###org/springframework/transaction/support/ResourceTransactionDefinition
@5.1.0.RELEASE
+#isLocalResource()Z

+###org/springframework/transaction/support/TransactionSynchronization
@2.5
+#suspend()V
+#resume()V
+#beforeCommit(Z)V
+#beforeCompletion()V
+#afterCommit()V
+#afterCompletion(I)V
@3.0.0.RELEASE
+#flush()V
@5.3.0
+#getOrder()I

+###org/springframework/transaction/support/DefaultTransactionDefinition
@2.5
+#<init>()V
+#<init>(Lorg/springframework/transaction/TransactionDefinition;)V
+#<init>(I)V
+#setPropagationBehaviorName(Ljava/lang/String;)V
+#setPropagationBehavior(I)V
+#getPropagationBehavior()I
+#setIsolationLevelName(Ljava/lang/String;)V
+#setIsolationLevel(I)V
+#getIsolationLevel()I
+#setTimeout(I)V
+#getTimeout()I
+#setReadOnly(Z)V
+#isReadOnly()Z
+#setName(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/transaction/support/TransactionOperations
@2.5
+#execute(Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;
@5.2.0.RELEASE
+#executeWithoutResult(Ljava/util/function/Consumer;)V
+#withoutTransaction()Lorg/springframework/transaction/support/TransactionOperations;

+###org/springframework/transaction/support/ResourceHolder
@2.5.5
+#reset()V
+#unbound()V
+#isVoid()Z

+###org/springframework/transaction/support/TransactionCallbackWithoutResult
@2.5
+#<init>()V
+#doInTransaction(Lorg/springframework/transaction/TransactionStatus;)Ljava/lang/Object;

+###org/springframework/transaction/support/TransactionSynchronizationUtils
@2.5
+#<init>()V
+#triggerBeforeCommit(Z)V
+#triggerBeforeCompletion()V
+#triggerAfterCommit()V
+#invokeAfterCommit(Ljava/util/List;)V
+#triggerAfterCompletion(I)V
+#invokeAfterCompletion(Ljava/util/List;I)V
@2.5.4
+#sameResourceFactory(Lorg/springframework/transaction/support/ResourceTransactionManager;Ljava/lang/Object;)Z
@3.0.0.RELEASE
+#triggerFlush()V
@5.3.4
+#unwrapResourceIfNecessary(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/transaction/support/SimpleTransactionScope
@4.2.0.RELEASE
+#<init>()V
+#get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#remove(Ljava/lang/String;)Ljava/lang/Object;
+#registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V
+#resolveContextualObject(Ljava/lang/String;)Ljava/lang/Object;
+#getConversationId()Ljava/lang/String;

+###org/springframework/transaction/support/TransactionSynchronizationAdapter
@2.5
+#<init>()V
+#getOrder()I
+#suspend()V
+#resume()V
+#beforeCommit(Z)V
+#beforeCompletion()V
+#afterCommit()V
+#afterCompletion(I)V
@3.0.0.RELEASE
+#flush()V

+###org/springframework/transaction/support/TransactionCallback
@2.5
+#doInTransaction(Lorg/springframework/transaction/TransactionStatus;)Ljava/lang/Object;

+###org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager
@2.5
+#execute(Lorg/springframework/transaction/TransactionDefinition;Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;

+###org/springframework/transaction/support/SimpleTransactionStatus
@2.5
+#<init>()V
+#<init>(Z)V
+#isNewTransaction()Z

+###org/springframework/transaction/support/DefaultTransactionStatus
@2.5
+#<init>(Ljava/lang/Object;ZZZZLjava/lang/Object;)V
+#getTransaction()Ljava/lang/Object;
+#hasTransaction()Z
+#isNewTransaction()Z
+#isNewSynchronization()Z
+#isReadOnly()Z
+#isDebug()Z
+#getSuspendedResources()Ljava/lang/Object;
+#isGlobalRollbackOnly()Z
+#isTransactionSavepointManager()Z
@3.0.0.RELEASE
+#flush()V

+###org/springframework/transaction/support/ResourceHolderSynchronization
@2.5.5
+#<init>(Lorg/springframework/transaction/support/ResourceHolder;Ljava/lang/Object;)V
+#suspend()V
+#resume()V
+#beforeCommit(Z)V
+#beforeCompletion()V
+#afterCommit()V
+#afterCompletion(I)V
@3.0.0.RELEASE
+#flush()V

+###org/springframework/transaction/support/DelegatingTransactionDefinition
@3.0.0.RELEASE
+#<init>(Lorg/springframework/transaction/TransactionDefinition;)V
+#getPropagationBehavior()I
+#getIsolationLevel()I
+#getTimeout()I
+#isReadOnly()Z
+#getName()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/transaction/support/ResourceHolderSupport
@2.5
+#<init>()V
+#setSynchronizedWithTransaction(Z)V
+#isSynchronizedWithTransaction()Z
+#setRollbackOnly()V
+#isRollbackOnly()Z
+#setTimeoutInSeconds(I)V
+#setTimeoutInMillis(J)V
+#hasTimeout()Z
+#getDeadline()Ljava/util/Date;
+#getTimeToLiveInSeconds()I
+#getTimeToLiveInMillis()J
+#requested()V
+#released()V
+#isOpen()Z
+#clear()V
+#reset()V
@2.5.5
+#unbound()V
+#isVoid()Z
@5.0.0.RELEASE
+#resetRollbackOnly()V

+###org/springframework/transaction/support/TransactionTemplate
@2.5
+#<init>()V
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#<init>(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/TransactionDefinition;)V
+#setTransactionManager(Lorg/springframework/transaction/PlatformTransactionManager;)V
+#getTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
+#afterPropertiesSet()V
+#execute(Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;
@4.3.15.RELEASE
+#equals(Ljava/lang/Object;)Z
@5.0.0.RELEASE
-#equals(Ljava/lang/Object;)Z
@5.0.5.RELEASE
+#equals(Ljava/lang/Object;)Z

+###org/springframework/transaction/support/SmartTransactionObject
@2.5
+#isRollbackOnly()Z
@3.0.0.RELEASE
+#flush()V

+###org/springframework/transaction/support/AbstractTransactionStatus
@2.5
+#<init>()V
+#setRollbackOnly()V
+#isRollbackOnly()Z
+#isLocalRollbackOnly()Z
+#isGlobalRollbackOnly()Z
+#setCompleted()V
+#isCompleted()Z
+#hasSavepoint()Z
+#createAndHoldSavepoint()V
+#rollbackToHeldSavepoint()V
+#releaseHeldSavepoint()V
+#createSavepoint()Ljava/lang/Object;
+#rollbackToSavepoint(Ljava/lang/Object;)V
+#releaseSavepoint(Ljava/lang/Object;)V
@3.0.0.RELEASE
+#flush()V

+###org/springframework/transaction/support/AbstractPlatformTransactionManager$SuspendedResourcesHolder
@2.5

+###org/springframework/transaction/TransactionStatus
@2.5
+#isNewTransaction()Z
+#hasSavepoint()Z
+#setRollbackOnly()V
+#isRollbackOnly()Z
+#isCompleted()Z
@3.0.0.RELEASE
+#flush()V
@5.2.0.RELEASE
-#isNewTransaction()Z
-#setRollbackOnly()V
-#isRollbackOnly()Z
-#isCompleted()Z

+###org/springframework/transaction/TransactionTimedOutException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/CannotCreateTransactionException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration
@3.1.0.RELEASE
+#<init>()V
+#transactionAdvisor()Lorg/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor;
+#transactionAttributeSource()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
+#transactionInterceptor()Lorg/springframework/transaction/interceptor/TransactionInterceptor;
@5.2.0.RELEASE
+#transactionAdvisor(Lorg/springframework/transaction/interceptor/TransactionAttributeSource;Lorg/springframework/transaction/interceptor/TransactionInterceptor;)Lorg/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor;
+#transactionInterceptor(Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)Lorg/springframework/transaction/interceptor/TransactionInterceptor;
-#transactionAdvisor()Lorg/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor;
-#transactionInterceptor()Lorg/springframework/transaction/interceptor/TransactionInterceptor;

+###org/springframework/transaction/annotation/TransactionAnnotationParser
@2.5
+#parseTransactionAnnotation(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;)Z

+###org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration
@3.1.0.RELEASE
+#<init>()V
+#setImportMetadata(Lorg/springframework/core/type/AnnotationMetadata;)V
@4.2.0.RELEASE
+#transactionalEventListenerFactory()Lorg/springframework/transaction/event/TransactionalEventListenerFactory;

+###org/springframework/transaction/annotation/EnableTransactionManagement
@3.1.0.RELEASE
+#proxyTargetClass()Z
+#mode()Lorg/springframework/context/annotation/AdviceMode;
+#order()I

+###org/springframework/transaction/annotation/Ejb3TransactionAnnotationParser
@2.5
+#<init>()V
+#parseTransactionAnnotation(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@2.5.6
+#parseTransactionAnnotation(Ljavax/ejb/TransactionAttribute;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@3.1.4.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;)Z
@6.0.0
+#parseTransactionAnnotation(Ljakarta/ejb/TransactionAttribute;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
-#parseTransactionAnnotation(Ljavax/ejb/TransactionAttribute;)Lorg/springframework/transaction/interceptor/TransactionAttribute;

+###org/springframework/transaction/annotation/Propagation
@2.5
+#values()[Lorg/springframework/transaction/annotation/Propagation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/transaction/annotation/Propagation;
+#value()I

+###org/springframework/transaction/annotation/SpringTransactionAnnotationParser
@2.5
+#<init>()V
+#parseTransactionAnnotation(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@2.5.6
+#parseTransactionAnnotation(Lorg/springframework/transaction/annotation/Transactional;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
@3.1.4.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;)Z

+###org/springframework/transaction/annotation/TransactionManagementConfigurer
@3.1.0.RELEASE
+#annotationDrivenTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;
@5.2.0.RELEASE
+#annotationDrivenTransactionManager()Lorg/springframework/transaction/TransactionManager;
-#annotationDrivenTransactionManager()Lorg/springframework/transaction/PlatformTransactionManager;

+###org/springframework/transaction/annotation/AnnotationTransactionAttributeSource
@2.5
+#<init>()V
+#<init>(Z)V
+#<init>(Lorg/springframework/transaction/annotation/TransactionAnnotationParser;)V
+#<init>(Ljava/util/Set;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.RELEASE
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@3.1.4.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.2.0.RELEASE
+#<init>([Lorg/springframework/transaction/annotation/TransactionAnnotationParser;)V
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;)Z

+###org/springframework/transaction/annotation/Transactional
@2.5
+#propagation()Lorg/springframework/transaction/annotation/Propagation;
+#isolation()Lorg/springframework/transaction/annotation/Isolation;
+#timeout()I
+#readOnly()Z
+#rollbackFor()[Ljava/lang/Class;
+#rollbackForClassName()[Ljava/lang/String;
+#noRollbackFor()[Ljava/lang/Class;
+#noRollbackForClassName()[Ljava/lang/String;
@3.0.0.RELEASE
+#value()Ljava/lang/String;
@4.2.0.RELEASE
+#transactionManager()Ljava/lang/String;
@5.3.0
+#label()[Ljava/lang/String;
+#timeoutString()Ljava/lang/String;

+###org/springframework/transaction/annotation/TransactionManagementConfigurationSelector
@3.1.0.RELEASE
+#<init>()V

+###org/springframework/transaction/annotation/Isolation
@2.5
+#values()[Lorg/springframework/transaction/annotation/Isolation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/transaction/annotation/Isolation;
+#value()I

+###org/springframework/transaction/annotation/JtaTransactionAnnotationParser
@4.0.0.RELEASE
+#<init>()V
+#parseTransactionAnnotation(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
+#parseTransactionAnnotation(Ljavax/transaction/Transactional;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.2.0.RELEASE
+#isCandidateClass(Ljava/lang/Class;)Z
@6.0.0
+#parseTransactionAnnotation(Ljakarta/transaction/Transactional;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
-#parseTransactionAnnotation(Ljavax/transaction/Transactional;)Lorg/springframework/transaction/interceptor/TransactionAttribute;

+###org/springframework/transaction/TransactionManager
@5.2.0.RELEASE

+###org/springframework/transaction/UnexpectedRollbackException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/TransactionException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/SavepointManager
@2.5
+#createSavepoint()Ljava/lang/Object;
+#rollbackToSavepoint(Ljava/lang/Object;)V
+#releaseSavepoint(Ljava/lang/Object;)V

+###org/springframework/transaction/NoTransactionException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/TransactionSuspensionNotSupportedException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/ReactiveTransaction
@5.2.0.RELEASE

+###org/springframework/transaction/InvalidTimeoutException
@2.5
+#<init>(Ljava/lang/String;I)V
+#getTimeout()I

+###org/springframework/transaction/event/TransactionalApplicationListener$SynchronizationCallback
@5.3.0
+#preProcessEvent(Lorg/springframework/context/ApplicationEvent;)V
+#postProcessEvent(Lorg/springframework/context/ApplicationEvent;Ljava/lang/Throwable;)V

+###org/springframework/transaction/event/TransactionalEventListenerFactory
@4.2.0.RELEASE
+#<init>()V
+#setOrder(I)V
+#getOrder()I
+#supportsMethod(Ljava/lang/reflect/Method;)Z
+#createApplicationListener(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/reflect/Method;)Lorg/springframework/context/ApplicationListener;

+###org/springframework/transaction/event/TransactionalApplicationListenerAdapter
@5.3.0
+#<init>(Lorg/springframework/context/ApplicationListener;)V
+#setOrder(I)V
+#getOrder()I
+#setTransactionPhase(Lorg/springframework/transaction/event/TransactionPhase;)V
+#getTransactionPhase()Lorg/springframework/transaction/event/TransactionPhase;
+#setListenerId(Ljava/lang/String;)V
+#getListenerId()Ljava/lang/String;
+#addCallback(Lorg/springframework/transaction/event/TransactionalApplicationListener$SynchronizationCallback;)V
+#processEvent(Lorg/springframework/context/ApplicationEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/transaction/event/TransactionalEventListener
@4.2.0.RELEASE
+#phase()Lorg/springframework/transaction/event/TransactionPhase;
+#fallbackExecution()Z
+#value()[Ljava/lang/Class;
+#classes()[Ljava/lang/Class;
+#condition()Ljava/lang/String;
@5.3.0
+#id()Ljava/lang/String;

+###org/springframework/transaction/event/TransactionPhase
@4.2.0.RELEASE
+#values()[Lorg/springframework/transaction/event/TransactionPhase;
+#valueOf(Ljava/lang/String;)Lorg/springframework/transaction/event/TransactionPhase;

+###org/springframework/transaction/event/TransactionalApplicationListener
@5.3.0
+#getOrder()I
+#getTransactionPhase()Lorg/springframework/transaction/event/TransactionPhase;
+#getListenerId()Ljava/lang/String;
+#addCallback(Lorg/springframework/transaction/event/TransactionalApplicationListener$SynchronizationCallback;)V
+#processEvent(Lorg/springframework/context/ApplicationEvent;)V
+#forPayload(Ljava/util/function/Consumer;)Lorg/springframework/transaction/event/TransactionalApplicationListener;
+#forPayload(Lorg/springframework/transaction/event/TransactionPhase;Ljava/util/function/Consumer;)Lorg/springframework/transaction/event/TransactionalApplicationListener;

+###org/springframework/transaction/event/TransactionalApplicationListenerMethodAdapter
@5.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/reflect/Method;)V
+#getTransactionPhase()Lorg/springframework/transaction/event/TransactionPhase;
+#getListenerId()Ljava/lang/String;
+#addCallback(Lorg/springframework/transaction/event/TransactionalApplicationListener$SynchronizationCallback;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@5.3.5
-#getListenerId()Ljava/lang/String;

+###org/springframework/transaction/PlatformTransactionManager
@2.5
+#getTransaction(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
+#commit(Lorg/springframework/transaction/TransactionStatus;)V
+#rollback(Lorg/springframework/transaction/TransactionStatus;)V

+###org/springframework/transaction/InvalidIsolationLevelException
@2.5
+#<init>(Ljava/lang/String;)V

+###org/springframework/transaction/TransactionUsageException
@2.5
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/transaction/reactive/AbstractReactiveTransactionManager
@5.2.0.RELEASE
+#<init>()V
+#getReactiveTransaction(Lorg/springframework/transaction/TransactionDefinition;)Lreactor/core/publisher/Mono;
+#commit(Lorg/springframework/transaction/ReactiveTransaction;)Lreactor/core/publisher/Mono;
+#rollback(Lorg/springframework/transaction/ReactiveTransaction;)Lreactor/core/publisher/Mono;

+###org/springframework/transaction/reactive/TransactionSynchronizationManager
@5.2.0.RELEASE
+#<init>(Lorg/springframework/transaction/reactive/TransactionContext;)V
+#forCurrentTransaction()Lreactor/core/publisher/Mono;
+#hasResource(Ljava/lang/Object;)Z
+#getResource(Ljava/lang/Object;)Ljava/lang/Object;
+#bindResource(Ljava/lang/Object;Ljava/lang/Object;)V
+#unbindResource(Ljava/lang/Object;)Ljava/lang/Object;
+#unbindResourceIfPossible(Ljava/lang/Object;)Ljava/lang/Object;
+#isSynchronizationActive()Z
+#initSynchronization()V
+#registerSynchronization(Lorg/springframework/transaction/reactive/TransactionSynchronization;)V
+#getSynchronizations()Ljava/util/List;
+#clearSynchronization()V
+#setCurrentTransactionName(Ljava/lang/String;)V
+#getCurrentTransactionName()Ljava/lang/String;
+#setCurrentTransactionReadOnly(Z)V
+#isCurrentTransactionReadOnly()Z
+#setCurrentTransactionIsolationLevel(Ljava/lang/Integer;)V
+#getCurrentTransactionIsolationLevel()Ljava/lang/Integer;
+#setActualTransactionActive(Z)V
+#isActualTransactionActive()Z
+#clear()V

+###org/springframework/transaction/reactive/TransactionSynchronization
@5.2.0.RELEASE
+#suspend()Lreactor/core/publisher/Mono;
+#resume()Lreactor/core/publisher/Mono;
+#beforeCommit(Z)Lreactor/core/publisher/Mono;
+#beforeCompletion()Lreactor/core/publisher/Mono;
+#afterCommit()Lreactor/core/publisher/Mono;
+#afterCompletion(I)Lreactor/core/publisher/Mono;

+###org/springframework/transaction/reactive/TransactionContextManager
@5.2.0.RELEASE
+#currentContext()Lreactor/core/publisher/Mono;
+#createTransactionContext()Ljava/util/function/Function;
+#getOrCreateContext()Ljava/util/function/Function;
+#getOrCreateContextHolder()Ljava/util/function/Function;

+###org/springframework/transaction/reactive/ReactiveResourceSynchronization
@5.2.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/transaction/reactive/TransactionSynchronizationManager;)V
+#suspend()Lreactor/core/publisher/Mono;
+#resume()Lreactor/core/publisher/Mono;
+#beforeCommit(Z)Lreactor/core/publisher/Mono;
+#beforeCompletion()Lreactor/core/publisher/Mono;
+#afterCommit()Lreactor/core/publisher/Mono;
+#afterCompletion(I)Lreactor/core/publisher/Mono;

+###org/springframework/transaction/reactive/AbstractReactiveTransactionManager$SuspendedResourcesHolder
@5.2.0.RELEASE

+###org/springframework/transaction/reactive/TransactionContext
@5.2.0.RELEASE
+#getParent()Lorg/springframework/transaction/reactive/TransactionContext;
+#getName()Ljava/lang/String;
+#getContextId()Ljava/util/UUID;
+#getResources()Ljava/util/Map;
+#setSynchronizations(Ljava/util/Set;)V
+#getSynchronizations()Ljava/util/Set;
+#setCurrentTransactionName(Ljava/lang/String;)V
+#getCurrentTransactionName()Ljava/lang/String;
+#setCurrentTransactionReadOnly(Z)V
+#isCurrentTransactionReadOnly()Z
+#setCurrentTransactionIsolationLevel(Ljava/lang/Integer;)V
+#getCurrentTransactionIsolationLevel()Ljava/lang/Integer;
+#setActualTransactionActive(Z)V
+#isActualTransactionActive()Z
+#clear()V
@5.3.9
*#getName()Ljava/lang/String;[deprecated]
*#getContextId()Ljava/util/UUID;[deprecated]
@6.0.0
-#getName()Ljava/lang/String;[deprecated]
-#getContextId()Ljava/util/UUID;[deprecated]

+###org/springframework/transaction/reactive/GenericReactiveTransaction
@5.2.0.RELEASE
+#<init>(Ljava/lang/Object;ZZZZLjava/lang/Object;)V
+#getTransaction()Ljava/lang/Object;
+#hasTransaction()Z
+#isNewTransaction()Z
+#isNewSynchronization()Z
+#isReadOnly()Z
+#isDebug()Z
+#getSuspendedResources()Ljava/lang/Object;
+#setRollbackOnly()V
+#isRollbackOnly()Z
+#setCompleted()V
+#isCompleted()Z

+###org/springframework/transaction/reactive/TransactionCallback
@5.2.0.RELEASE
+#doInTransaction(Lorg/springframework/transaction/ReactiveTransaction;)Lorg/reactivestreams/Publisher;

+###org/springframework/transaction/reactive/TransactionalOperator
@5.2.0.RELEASE
+#transactional(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
+#transactional(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
+#execute(Lorg/springframework/transaction/reactive/TransactionCallback;)Lreactor/core/publisher/Flux;
+#create(Lorg/springframework/transaction/ReactiveTransactionManager;)Lorg/springframework/transaction/reactive/TransactionalOperator;
+#create(Lorg/springframework/transaction/ReactiveTransactionManager;Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/reactive/TransactionalOperator;

+###org/springframework/jca/cci/core/InteractionCallback
@2.5
+#doInInteraction(Ljavax/resource/cci/Interaction;Ljavax/resource/cci/ConnectionFactory;)Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/core/InteractionCallback

+###org/springframework/jca/cci/core/CciTemplate
@2.5
+#<init>()V
+#<init>(Ljavax/resource/cci/ConnectionFactory;)V
+#<init>(Ljavax/resource/cci/ConnectionFactory;Ljavax/resource/cci/ConnectionSpec;)V
+#setConnectionFactory(Ljavax/resource/cci/ConnectionFactory;)V
+#getConnectionFactory()Ljavax/resource/cci/ConnectionFactory;
+#setConnectionSpec(Ljavax/resource/cci/ConnectionSpec;)V
+#getConnectionSpec()Ljavax/resource/cci/ConnectionSpec;
+#setOutputRecordCreator(Lorg/springframework/jca/cci/core/RecordCreator;)V
+#getOutputRecordCreator()Lorg/springframework/jca/cci/core/RecordCreator;
+#afterPropertiesSet()V
+#getDerivedTemplate(Ljavax/resource/cci/ConnectionSpec;)Lorg/springframework/jca/cci/core/CciTemplate;
+#execute(Lorg/springframework/jca/cci/core/ConnectionCallback;)Ljava/lang/Object;
+#execute(Lorg/springframework/jca/cci/core/InteractionCallback;)Ljava/lang/Object;
+#execute(Ljavax/resource/cci/InteractionSpec;Ljavax/resource/cci/Record;)Ljavax/resource/cci/Record;
+#execute(Ljavax/resource/cci/InteractionSpec;Ljavax/resource/cci/Record;Ljavax/resource/cci/Record;)V
+#execute(Ljavax/resource/cci/InteractionSpec;Lorg/springframework/jca/cci/core/RecordCreator;)Ljavax/resource/cci/Record;
+#execute(Ljavax/resource/cci/InteractionSpec;Ljavax/resource/cci/Record;Lorg/springframework/jca/cci/core/RecordExtractor;)Ljava/lang/Object;
+#execute(Ljavax/resource/cci/InteractionSpec;Lorg/springframework/jca/cci/core/RecordCreator;Lorg/springframework/jca/cci/core/RecordExtractor;)Ljava/lang/Object;
+#createIndexedRecord(Ljava/lang/String;)Ljavax/resource/cci/IndexedRecord;
+#createMappedRecord(Ljava/lang/String;)Ljavax/resource/cci/MappedRecord;
@6.0.0
-###org/springframework/jca/cci/core/CciTemplate

+###org/springframework/jca/cci/core/support/CommAreaRecord
@2.5
+#<init>()V
+#<init>([B)V
+#setRecordName(Ljava/lang/String;)V
+#getRecordName()Ljava/lang/String;
+#setRecordShortDescription(Ljava/lang/String;)V
+#getRecordShortDescription()Ljava/lang/String;
+#read(Ljava/io/InputStream;)V
+#write(Ljava/io/OutputStream;)V
+#toByteArray()[B
+#clone()Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/core/support/CommAreaRecord

+###org/springframework/jca/cci/core/support/CciDaoSupport
@2.5
+#<init>()V
+#setConnectionFactory(Ljavax/resource/cci/ConnectionFactory;)V
+#getConnectionFactory()Ljavax/resource/cci/ConnectionFactory;
+#setCciTemplate(Lorg/springframework/jca/cci/core/CciTemplate;)V
+#getCciTemplate()Lorg/springframework/jca/cci/core/CciTemplate;
@6.0.0
-###org/springframework/jca/cci/core/support/CciDaoSupport

+###org/springframework/jca/cci/core/RecordExtractor
@2.5
+#extractData(Ljavax/resource/cci/Record;)Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/core/RecordExtractor

+###org/springframework/jca/cci/core/CciOperations
@2.5
+#execute(Lorg/springframework/jca/cci/core/ConnectionCallback;)Ljava/lang/Object;
+#execute(Lorg/springframework/jca/cci/core/InteractionCallback;)Ljava/lang/Object;
+#execute(Ljavax/resource/cci/InteractionSpec;Ljavax/resource/cci/Record;)Ljavax/resource/cci/Record;
+#execute(Ljavax/resource/cci/InteractionSpec;Ljavax/resource/cci/Record;Ljavax/resource/cci/Record;)V
+#execute(Ljavax/resource/cci/InteractionSpec;Lorg/springframework/jca/cci/core/RecordCreator;)Ljavax/resource/cci/Record;
+#execute(Ljavax/resource/cci/InteractionSpec;Ljavax/resource/cci/Record;Lorg/springframework/jca/cci/core/RecordExtractor;)Ljava/lang/Object;
+#execute(Ljavax/resource/cci/InteractionSpec;Lorg/springframework/jca/cci/core/RecordCreator;Lorg/springframework/jca/cci/core/RecordExtractor;)Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/core/CciOperations

+###org/springframework/jca/cci/core/RecordCreator
@2.5
+#createRecord(Ljavax/resource/cci/RecordFactory;)Ljavax/resource/cci/Record;
@6.0.0
-###org/springframework/jca/cci/core/RecordCreator

+###org/springframework/jca/cci/core/ConnectionCallback
@2.5
+#doInConnection(Ljavax/resource/cci/Connection;Ljavax/resource/cci/ConnectionFactory;)Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/core/ConnectionCallback

+###org/springframework/jca/cci/object/MappingCommAreaOperation
@2.5
+#<init>()V
+#<init>(Ljavax/resource/cci/ConnectionFactory;Ljavax/resource/cci/InteractionSpec;)V
@6.0.0
-###org/springframework/jca/cci/object/MappingCommAreaOperation

+###org/springframework/jca/cci/object/SimpleRecordOperation
@2.5
+#<init>()V
+#<init>(Ljavax/resource/cci/ConnectionFactory;Ljavax/resource/cci/InteractionSpec;)V
+#execute(Ljavax/resource/cci/Record;)Ljavax/resource/cci/Record;
+#execute(Ljavax/resource/cci/Record;Ljavax/resource/cci/Record;)V
@6.0.0
-###org/springframework/jca/cci/object/SimpleRecordOperation

+###org/springframework/jca/cci/object/MappingRecordOperation
@2.5
+#<init>()V
+#<init>(Ljavax/resource/cci/ConnectionFactory;Ljavax/resource/cci/InteractionSpec;)V
+#setOutputRecordCreator(Lorg/springframework/jca/cci/core/RecordCreator;)V
+#execute(Ljava/lang/Object;)Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/object/MappingRecordOperation

+###org/springframework/jca/cci/object/MappingRecordOperation$RecordCreatorImpl
@2.5
+#<init>(Lorg/springframework/jca/cci/object/MappingRecordOperation;Ljava/lang/Object;)V
+#createRecord(Ljavax/resource/cci/RecordFactory;)Ljavax/resource/cci/Record;
@6.0.0
-###org/springframework/jca/cci/object/MappingRecordOperation$RecordCreatorImpl

+###org/springframework/jca/cci/object/MappingRecordOperation$RecordExtractorImpl
@2.5
+#extractData(Ljavax/resource/cci/Record;)Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/object/MappingRecordOperation$RecordExtractorImpl

+###org/springframework/jca/cci/object/EisOperation
@2.5
+#<init>()V
+#setCciTemplate(Lorg/springframework/jca/cci/core/CciTemplate;)V
+#getCciTemplate()Lorg/springframework/jca/cci/core/CciTemplate;
+#setConnectionFactory(Ljavax/resource/cci/ConnectionFactory;)V
+#setInteractionSpec(Ljavax/resource/cci/InteractionSpec;)V
+#getInteractionSpec()Ljavax/resource/cci/InteractionSpec;
+#afterPropertiesSet()V
@6.0.0
-###org/springframework/jca/cci/object/EisOperation

+###org/springframework/jca/cci/CciOperationNotSupportedException
@2.5
+#<init>(Ljava/lang/String;Ljavax/resource/ResourceException;)V
@6.0.0
-###org/springframework/jca/cci/CciOperationNotSupportedException

+###org/springframework/jca/cci/InvalidResultSetAccessException
@2.5
+#<init>(Ljava/lang/String;Ljava/sql/SQLException;)V
@6.0.0
-###org/springframework/jca/cci/InvalidResultSetAccessException

+###org/springframework/jca/cci/connection/ConnectionHolder
@2.5
+#<init>(Ljavax/resource/cci/Connection;)V
+#getConnection()Ljavax/resource/cci/Connection;
@6.0.0
-###org/springframework/jca/cci/connection/ConnectionHolder

+###org/springframework/jca/cci/connection/TransactionAwareConnectionFactoryProxy
@2.5
+#<init>()V
+#<init>(Ljavax/resource/cci/ConnectionFactory;)V
+#getConnection()Ljavax/resource/cci/Connection;
@6.0.0
-###org/springframework/jca/cci/connection/TransactionAwareConnectionFactoryProxy

+###org/springframework/jca/cci/connection/DelegatingConnectionFactory
@2.5
+#<init>()V
+#setTargetConnectionFactory(Ljavax/resource/cci/ConnectionFactory;)V
+#getTargetConnectionFactory()Ljavax/resource/cci/ConnectionFactory;
+#afterPropertiesSet()V
+#getConnection()Ljavax/resource/cci/Connection;
+#getConnection(Ljavax/resource/cci/ConnectionSpec;)Ljavax/resource/cci/Connection;
+#getRecordFactory()Ljavax/resource/cci/RecordFactory;
+#getMetaData()Ljavax/resource/cci/ResourceAdapterMetaData;
+#getReference()Ljavax/naming/Reference;
+#setReference(Ljavax/naming/Reference;)V
@6.0.0
-###org/springframework/jca/cci/connection/DelegatingConnectionFactory

+###org/springframework/jca/cci/connection/SingleConnectionFactory
@2.5
+#<init>()V
+#<init>(Ljavax/resource/cci/Connection;)V
+#<init>(Ljavax/resource/cci/ConnectionFactory;)V
+#afterPropertiesSet()V
+#getConnection()Ljavax/resource/cci/Connection;
+#getConnection(Ljavax/resource/cci/ConnectionSpec;)Ljavax/resource/cci/Connection;
+#destroy()V
+#initConnection()V
+#resetConnection()V
@6.0.0
-###org/springframework/jca/cci/connection/SingleConnectionFactory

+###org/springframework/jca/cci/connection/CciLocalTransactionManager
@2.5
+#<init>()V
+#<init>(Ljavax/resource/cci/ConnectionFactory;)V
+#setConnectionFactory(Ljavax/resource/cci/ConnectionFactory;)V
+#getConnectionFactory()Ljavax/resource/cci/ConnectionFactory;
+#afterPropertiesSet()V
+#getResourceFactory()Ljava/lang/Object;
@6.0.0
-###org/springframework/jca/cci/connection/CciLocalTransactionManager

+###org/springframework/jca/cci/connection/NotSupportedRecordFactory
@2.5
+#<init>()V
+#createMappedRecord(Ljava/lang/String;)Ljavax/resource/cci/MappedRecord;
+#createIndexedRecord(Ljava/lang/String;)Ljavax/resource/cci/IndexedRecord;
@6.0.0
-###org/springframework/jca/cci/connection/NotSupportedRecordFactory

+###org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter
@2.5
+#<init>()V
+#setConnectionSpec(Ljavax/resource/cci/ConnectionSpec;)V
+#setConnectionSpecForCurrentThread(Ljavax/resource/cci/ConnectionSpec;)V
+#removeConnectionSpecFromCurrentThread()V
+#getConnection()Ljavax/resource/cci/Connection;
@6.0.0
-###org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter

+###org/springframework/jca/cci/connection/ConnectionFactoryUtils
@2.5
+#<init>()V
+#getConnection(Ljavax/resource/cci/ConnectionFactory;)Ljavax/resource/cci/Connection;
+#getConnection(Ljavax/resource/cci/ConnectionFactory;Ljavax/resource/cci/ConnectionSpec;)Ljavax/resource/cci/Connection;
+#doGetConnection(Ljavax/resource/cci/ConnectionFactory;)Ljavax/resource/cci/Connection;
+#isConnectionTransactional(Ljavax/resource/cci/Connection;Ljavax/resource/cci/ConnectionFactory;)Z
+#releaseConnection(Ljavax/resource/cci/Connection;Ljavax/resource/cci/ConnectionFactory;)V
+#doReleaseConnection(Ljavax/resource/cci/Connection;Ljavax/resource/cci/ConnectionFactory;)V
@6.0.0
-###org/springframework/jca/cci/connection/ConnectionFactoryUtils

+###org/springframework/jca/cci/CannotGetCciConnectionException
@2.5
+#<init>(Ljava/lang/String;Ljavax/resource/ResourceException;)V
@6.0.0
-###org/springframework/jca/cci/CannotGetCciConnectionException

+###org/springframework/jca/cci/CannotCreateRecordException
@2.5
+#<init>(Ljava/lang/String;Ljavax/resource/ResourceException;)V
@6.0.0
-###org/springframework/jca/cci/CannotCreateRecordException

+###org/springframework/jca/cci/RecordTypeNotSupportedException
@2.5
+#<init>(Ljava/lang/String;Ljavax/resource/ResourceException;)V
@6.0.0
-###org/springframework/jca/cci/RecordTypeNotSupportedException

+###org/springframework/jca/endpoint/GenericMessageEndpointFactory
@2.5
+#<init>()V
+#setMessageListener(Ljava/lang/Object;)V
+#createEndpoint(Ljavax/transaction/xa/XAResource;)Ljavax/resource/spi/endpoint/MessageEndpoint;
@6.0.0
+#createEndpoint(Ljavax/transaction/xa/XAResource;)Ljakarta/resource/spi/endpoint/MessageEndpoint;
-#createEndpoint(Ljavax/transaction/xa/XAResource;)Ljavax/resource/spi/endpoint/MessageEndpoint;

+###org/springframework/jca/endpoint/GenericMessageEndpointFactory$InternalResourceException
@2.5
@5.0.6.RELEASE
+#<init>(Ljavax/resource/ResourceException;)V
@6.0.0
+#<init>(Ljakarta/resource/ResourceException;)V
-#<init>(Ljavax/resource/ResourceException;)V

+###org/springframework/jca/endpoint/AbstractMessageEndpointFactory$AbstractMessageEndpoint
@2.5
+#beforeDelivery(Ljava/lang/reflect/Method;)V
+#afterDelivery()V
+#release()V

+###org/springframework/jca/endpoint/AbstractMessageEndpointFactory
@2.5
+#<init>()V
+#setTransactionManager(Ljava/lang/Object;)V
+#setTransactionFactory(Lorg/springframework/transaction/jta/TransactionFactory;)V
+#setTransactionName(Ljava/lang/String;)V
+#setTransactionTimeout(I)V
+#isDeliveryTransacted(Ljava/lang/reflect/Method;)Z
+#createEndpoint(Ljavax/transaction/xa/XAResource;)Ljavax/resource/spi/endpoint/MessageEndpoint;
@3.0.4.RELEASE
+#createEndpoint(Ljavax/transaction/xa/XAResource;J)Ljavax/resource/spi/endpoint/MessageEndpoint;
@4.0.0.RELEASE
+#setBeanName(Ljava/lang/String;)V
+#getActivationName()Ljava/lang/String;
@5.0.0.RELEASE
+#getEndpointClass()Ljava/lang/Class;
@6.0.0
+#createEndpoint(Ljavax/transaction/xa/XAResource;)Ljakarta/resource/spi/endpoint/MessageEndpoint;
+#createEndpoint(Ljavax/transaction/xa/XAResource;J)Ljakarta/resource/spi/endpoint/MessageEndpoint;
-#createEndpoint(Ljavax/transaction/xa/XAResource;)Ljavax/resource/spi/endpoint/MessageEndpoint;
-#createEndpoint(Ljavax/transaction/xa/XAResource;J)Ljavax/resource/spi/endpoint/MessageEndpoint;

+###org/springframework/jca/endpoint/GenericMessageEndpointManager
@2.5
+#<init>()V
+#setResourceAdapter(Ljavax/resource/spi/ResourceAdapter;)V
+#getResourceAdapter()Ljavax/resource/spi/ResourceAdapter;
+#setMessageEndpointFactory(Ljavax/resource/spi/endpoint/MessageEndpointFactory;)V
+#getMessageEndpointFactory()Ljavax/resource/spi/endpoint/MessageEndpointFactory;
+#setActivationSpec(Ljavax/resource/spi/ActivationSpec;)V
+#getActivationSpec()Ljavax/resource/spi/ActivationSpec;
+#setAutoStartup(Z)V
+#afterPropertiesSet()V
+#start()V
+#stop()V
+#isRunning()Z
+#destroy()V
@3.0.0.RELEASE
+#isAutoStartup()Z
+#setPhase(I)V
+#getPhase()I
+#stop(Ljava/lang/Runnable;)V
@6.0.0
+#setResourceAdapter(Ljakarta/resource/spi/ResourceAdapter;)V
+#getResourceAdapter()Ljakarta/resource/spi/ResourceAdapter;
+#setMessageEndpointFactory(Ljakarta/resource/spi/endpoint/MessageEndpointFactory;)V
+#getMessageEndpointFactory()Ljakarta/resource/spi/endpoint/MessageEndpointFactory;
+#setActivationSpec(Ljakarta/resource/spi/ActivationSpec;)V
+#getActivationSpec()Ljakarta/resource/spi/ActivationSpec;
-#setResourceAdapter(Ljavax/resource/spi/ResourceAdapter;)V
-#getResourceAdapter()Ljavax/resource/spi/ResourceAdapter;
-#setMessageEndpointFactory(Ljavax/resource/spi/endpoint/MessageEndpointFactory;)V
-#getMessageEndpointFactory()Ljavax/resource/spi/endpoint/MessageEndpointFactory;
-#setActivationSpec(Ljavax/resource/spi/ActivationSpec;)V
-#getActivationSpec()Ljavax/resource/spi/ActivationSpec;

+###org/springframework/jca/context/ResourceAdapterApplicationContext
@2.5
+#<init>(Ljavax/resource/spi/BootstrapContext;)V
@6.0.0
-###org/springframework/jca/context/ResourceAdapterApplicationContext

+###org/springframework/jca/context/BootstrapContextAware
@2.5
+#setBootstrapContext(Ljavax/resource/spi/BootstrapContext;)V
@6.0.0
-###org/springframework/jca/context/BootstrapContextAware

+###org/springframework/jca/context/SpringContextResourceAdapter
@2.5
+#<init>()V
+#setContextConfigLocation(Ljava/lang/String;)V
+#start(Ljavax/resource/spi/BootstrapContext;)V
+#stop()V
+#endpointActivation(Ljavax/resource/spi/endpoint/MessageEndpointFactory;Ljavax/resource/spi/ActivationSpec;)V
+#endpointDeactivation(Ljavax/resource/spi/endpoint/MessageEndpointFactory;Ljavax/resource/spi/ActivationSpec;)V
+#getXAResources([Ljavax/resource/spi/ActivationSpec;)[Ljavax/transaction/xa/XAResource;
@3.1.4.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.2.0.RELEASE
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
@3.2.1.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@6.0.0
-###org/springframework/jca/context/SpringContextResourceAdapter

+###org/springframework/jca/support/SimpleBootstrapContext
@2.5
+#<init>(Ljavax/resource/spi/work/WorkManager;)V
+#<init>(Ljavax/resource/spi/work/WorkManager;Ljavax/resource/spi/XATerminator;)V
+#getWorkManager()Ljavax/resource/spi/work/WorkManager;
+#getXATerminator()Ljavax/resource/spi/XATerminator;
+#createTimer()Ljava/util/Timer;
@5.0.0.RELEASE
+#<init>(Ljavax/resource/spi/work/WorkManager;Ljavax/resource/spi/XATerminator;Ljavax/transaction/TransactionSynchronizationRegistry;)V
+#isContextSupported(Ljava/lang/Class;)Z
+#getTransactionSynchronizationRegistry()Ljavax/transaction/TransactionSynchronizationRegistry;
@6.0.0
+#<init>(Ljakarta/resource/spi/work/WorkManager;)V
+#<init>(Ljakarta/resource/spi/work/WorkManager;Ljakarta/resource/spi/XATerminator;)V
+#<init>(Ljakarta/resource/spi/work/WorkManager;Ljakarta/resource/spi/XATerminator;Ljakarta/transaction/TransactionSynchronizationRegistry;)V
+#getWorkManager()Ljakarta/resource/spi/work/WorkManager;
+#getXATerminator()Ljakarta/resource/spi/XATerminator;
+#getTransactionSynchronizationRegistry()Ljakarta/transaction/TransactionSynchronizationRegistry;
-#<init>(Ljavax/resource/spi/work/WorkManager;)V
-#<init>(Ljavax/resource/spi/work/WorkManager;Ljavax/resource/spi/XATerminator;)V
-#<init>(Ljavax/resource/spi/work/WorkManager;Ljavax/resource/spi/XATerminator;Ljavax/transaction/TransactionSynchronizationRegistry;)V
-#getWorkManager()Ljavax/resource/spi/work/WorkManager;
-#getXATerminator()Ljavax/resource/spi/XATerminator;
-#getTransactionSynchronizationRegistry()Ljavax/transaction/TransactionSynchronizationRegistry;

+###org/springframework/jca/support/LocalConnectionFactoryBean
@2.5
+#<init>()V
+#setManagedConnectionFactory(Ljavax/resource/spi/ManagedConnectionFactory;)V
+#setConnectionManager(Ljavax/resource/spi/ConnectionManager;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@6.0.0
+#setManagedConnectionFactory(Ljakarta/resource/spi/ManagedConnectionFactory;)V
+#setConnectionManager(Ljakarta/resource/spi/ConnectionManager;)V
-#setManagedConnectionFactory(Ljavax/resource/spi/ManagedConnectionFactory;)V
-#setConnectionManager(Ljavax/resource/spi/ConnectionManager;)V

+###org/springframework/jca/support/ResourceAdapterFactoryBean
@2.5
+#<init>()V
+#setResourceAdapterClass(Ljava/lang/Class;)V
+#setResourceAdapter(Ljavax/resource/spi/ResourceAdapter;)V
+#setBootstrapContext(Ljavax/resource/spi/BootstrapContext;)V
+#setWorkManager(Ljavax/resource/spi/work/WorkManager;)V
+#setXaTerminator(Ljavax/resource/spi/XATerminator;)V
+#afterPropertiesSet()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
@3.0.0.RELEASE
+#getObject()Ljavax/resource/spi/ResourceAdapter;
@6.0.0
+#setResourceAdapter(Ljakarta/resource/spi/ResourceAdapter;)V
+#setBootstrapContext(Ljakarta/resource/spi/BootstrapContext;)V
+#setWorkManager(Ljakarta/resource/spi/work/WorkManager;)V
+#setXaTerminator(Ljakarta/resource/spi/XATerminator;)V
+#getObject()Ljakarta/resource/spi/ResourceAdapter;
-#setResourceAdapter(Ljavax/resource/spi/ResourceAdapter;)V
-#setBootstrapContext(Ljavax/resource/spi/BootstrapContext;)V
-#setWorkManager(Ljavax/resource/spi/work/WorkManager;)V
-#setXaTerminator(Ljavax/resource/spi/XATerminator;)V
-#getObject()Ljavax/resource/spi/ResourceAdapter;

+###org/springframework/jca/work/DelegatingWork
@2.5
+#<init>(Ljava/lang/Runnable;)V
+#getDelegate()Ljava/lang/Runnable;
+#run()V
+#release()V
@6.0.0
-###org/springframework/jca/work/DelegatingWork

+###org/springframework/jca/work/WorkManagerTaskExecutor
@2.5
+#<init>()V
+#<init>(Ljavax/resource/spi/work/WorkManager;)V
+#setWorkManager(Ljavax/resource/spi/work/WorkManager;)V
+#setBootstrapContext(Ljavax/resource/spi/BootstrapContext;)V
+#setBlockUntilStarted(Z)V
+#setBlockUntilCompleted(Z)V
+#setWorkListener(Ljavax/resource/spi/work/WorkListener;)V
+#execute(Ljava/lang/Runnable;)V
+#execute(Ljava/lang/Runnable;J)V
+#prefersShortLivedTasks()Z
+#doWork(Ljavax/resource/spi/work/Work;)V
+#doWork(Ljavax/resource/spi/work/Work;JLjavax/resource/spi/work/ExecutionContext;Ljavax/resource/spi/work/WorkListener;)V
+#startWork(Ljavax/resource/spi/work/Work;)J
+#startWork(Ljavax/resource/spi/work/Work;JLjavax/resource/spi/work/ExecutionContext;Ljavax/resource/spi/work/WorkListener;)J
+#scheduleWork(Ljavax/resource/spi/work/Work;)V
+#scheduleWork(Ljavax/resource/spi/work/Work;JLjavax/resource/spi/work/ExecutionContext;Ljavax/resource/spi/work/WorkListener;)V
@2.5.2
+#setWorkManagerName(Ljava/lang/String;)V
+#afterPropertiesSet()V
@3.0.0.RELEASE
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
@4.0.1.RELEASE
+#submitListenable(Ljava/lang/Runnable;)Lorg/springframework/util/concurrent/ListenableFuture;
+#submitListenable(Ljava/util/concurrent/Callable;)Lorg/springframework/util/concurrent/ListenableFuture;
@4.3.0.RELEASE
+#setTaskDecorator(Lorg/springframework/core/task/TaskDecorator;)V
@5.1.0.RELEASE
-#prefersShortLivedTasks()Z
@5.3.16
*#execute(Ljava/lang/Runnable;J)V[deprecated]
@6.0.0
-###org/springframework/jca/work/WorkManagerTaskExecutor

+###org/springframework/jca/work/SimpleTaskWorkManager
@2.5
+#<init>()V
+#setSyncTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#setAsyncTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
+#doWork(Ljavax/resource/spi/work/Work;)V
+#doWork(Ljavax/resource/spi/work/Work;JLjavax/resource/spi/work/ExecutionContext;Ljavax/resource/spi/work/WorkListener;)V
+#startWork(Ljavax/resource/spi/work/Work;)J
+#startWork(Ljavax/resource/spi/work/Work;JLjavax/resource/spi/work/ExecutionContext;Ljavax/resource/spi/work/WorkListener;)J
+#scheduleWork(Ljavax/resource/spi/work/Work;)V
+#scheduleWork(Ljavax/resource/spi/work/Work;JLjavax/resource/spi/work/ExecutionContext;Ljavax/resource/spi/work/WorkListener;)V
@3.0.0.RELEASE
+#setAsyncTaskExecutor(Lorg/springframework/core/task/AsyncTaskExecutor;)V
-#setAsyncTaskExecutor(Lorg/springframework/core/task/TaskExecutor;)V
@6.0.0
-###org/springframework/jca/work/SimpleTaskWorkManager

+###org/springframework/transaction/reactive/TransactionalOperatorExtensionsKt
@5.2.0.RELEASE
+#transactional(Lkotlinx/coroutines/flow/Flow;Lorg/springframework/transaction/reactive/TransactionalOperator;)Lkotlinx/coroutines/flow/Flow;
+#executeAndAwait(Lorg/springframework/transaction/reactive/TransactionalOperator;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@6.0.5
+#transactional(Lkotlinx/coroutines/flow/Flow;Lorg/springframework/transaction/reactive/TransactionalOperator;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/Flow;
+#transactional$default(Lkotlinx/coroutines/flow/Flow;Lorg/springframework/transaction/reactive/TransactionalOperator;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#transactional(Lkotlinx/coroutines/flow/Flow;Lorg/springframework/transaction/reactive/TransactionalOperator;)Lkotlinx/coroutines/flow/Flow;

+###org/springframework/transaction/interceptor/AttributesTransactionAttributeSource
@2.5
+#<init>()V
+#<init>(Lorg/springframework/metadata/Attributes;)V
+#setAttributes(Lorg/springframework/metadata/Attributes;)V
+#afterPropertiesSet()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0.RELEASE
-###org/springframework/transaction/interceptor/AttributesTransactionAttributeSource

+###org/springframework/transaction/jta/JotmFactoryBean
@2.5
+#<init>()V
+#setDefaultTimeout(I)V
+#getJotm()Lorg/objectweb/jotm/Jotm;
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#destroy()V
@3.0.0.RELEASE
-###org/springframework/transaction/jta/JotmFactoryBean

+###org/springframework/transaction/jta/OC4JJtaTransactionManager
@2.5
+#<init>()V
+#afterPropertiesSet()V
+#createTransaction(Ljava/lang/String;I)Ljavax/transaction/Transaction;
@4.0.0.RELEASE
-###org/springframework/transaction/jta/OC4JJtaTransactionManager

+###org/springframework/transaction/jta/WebSphereTransactionManagerFactoryBean
@2.5
+#<init>()V
+#getObject()Ljava/lang/Object;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
@3.0.0.RELEASE
-###org/springframework/transaction/jta/WebSphereTransactionManagerFactoryBean

+###org/springframework/jca/work/glassfish/GlassFishWorkManagerTaskExecutor
@2.5.2
+#<init>()V
+#setThreadPoolName(Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/jca/work/glassfish/GlassFishWorkManagerTaskExecutor

+###org/springframework/jca/work/jboss/JBossWorkManagerTaskExecutor
@2.5.2
+#<init>()V
@3.0.1.RELEASE
+#setWorkManagerMBeanName(Ljava/lang/String;)V
@5.0.0.RELEASE
-###org/springframework/jca/work/jboss/JBossWorkManagerTaskExecutor

+###org/springframework/jca/work/jboss/JBossWorkManagerUtils
@2.5.2
+#<init>()V
+#getWorkManager()Ljavax/resource/spi/work/WorkManager;
@3.0.1.RELEASE
+#getWorkManager(Ljava/lang/String;)Ljavax/resource/spi/work/WorkManager;
@5.0.0.RELEASE
-###org/springframework/jca/work/jboss/JBossWorkManagerUtils

+###org/springframework/transaction/interceptor/TransactionAspectUtils
@3.0.2.RELEASE
+#<init>()V
+#getTransactionManager(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;
+#getTransactionManager(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;
@3.2.1.RELEASE
*#getTransactionManager(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;[deprecated]
*#getTransactionManager(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;[deprecated]
@4.0.0.RELEASE
-###org/springframework/transaction/interceptor/TransactionAspectUtils
