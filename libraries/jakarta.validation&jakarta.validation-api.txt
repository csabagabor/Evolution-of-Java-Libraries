
+###javax/validation/constraints/NegativeOrZero
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/NegativeOrZero

+###javax/validation/constraints/DecimalMin$List
@2.0.1
+#value()[Ljavax/validation/constraints/DecimalMin;
@3.0.0-M1
-###javax/validation/constraints/DecimalMin$List

+###javax/validation/constraints/DecimalMin
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()Ljava/lang/String;
+#inclusive()Z
@3.0.0-M1
-###javax/validation/constraints/DecimalMin

+###javax/validation/constraints/PositiveOrZero$List
@2.0.1
+#value()[Ljavax/validation/constraints/PositiveOrZero;
@3.0.0-M1
-###javax/validation/constraints/PositiveOrZero$List

+###javax/validation/constraints/PositiveOrZero
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/PositiveOrZero

+###javax/validation/constraints/PastOrPresent$List
@2.0.1
+#value()[Ljavax/validation/constraints/PastOrPresent;
@3.0.0-M1
-###javax/validation/constraints/PastOrPresent$List

+###javax/validation/constraints/PastOrPresent
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/PastOrPresent

+###javax/validation/constraints/Null$List
@2.0.1
+#value()[Ljavax/validation/constraints/Null;
@3.0.0-M1
-###javax/validation/constraints/Null$List

+###javax/validation/constraints/Digits$List
@2.0.1
+#value()[Ljavax/validation/constraints/Digits;
@3.0.0-M1
-###javax/validation/constraints/Digits$List

+###javax/validation/constraints/Negative$List
@2.0.1
+#value()[Ljavax/validation/constraints/Negative;
@3.0.0-M1
-###javax/validation/constraints/Negative$List

+###javax/validation/constraints/Negative
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/Negative

+###javax/validation/constraints/NotEmpty
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/NotEmpty

+###javax/validation/constraints/NotBlank
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/NotBlank

+###javax/validation/constraints/DecimalMax
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()Ljava/lang/String;
+#inclusive()Z
@3.0.0-M1
-###javax/validation/constraints/DecimalMax

+###javax/validation/constraints/Max
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()J
@3.0.0-M1
-###javax/validation/constraints/Max

+###javax/validation/constraints/Future$List
@2.0.1
+#value()[Ljavax/validation/constraints/Future;
@3.0.0-M1
-###javax/validation/constraints/Future$List

+###javax/validation/constraints/Size$List
@2.0.1
+#value()[Ljavax/validation/constraints/Size;
@3.0.0-M1
-###javax/validation/constraints/Size$List

+###javax/validation/constraints/AssertFalse$List
@2.0.1
+#value()[Ljavax/validation/constraints/AssertFalse;
@3.0.0-M1
-###javax/validation/constraints/AssertFalse$List

+###javax/validation/constraints/Email$List
@2.0.1
+#value()[Ljavax/validation/constraints/Email;
@3.0.0-M1
-###javax/validation/constraints/Email$List

+###javax/validation/constraints/Pattern$Flag
@2.0.1
+#values()[Ljavax/validation/constraints/Pattern$Flag;
+#valueOf(Ljava/lang/String;)Ljavax/validation/constraints/Pattern$Flag;
+#getValue()I
@3.0.0-M1
-###javax/validation/constraints/Pattern$Flag

+###javax/validation/constraints/Pattern
@2.0.1
+#regexp()Ljava/lang/String;
+#flags()[Ljavax/validation/constraints/Pattern$Flag;
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/Pattern

+###javax/validation/constraints/Past
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/Past

+###javax/validation/constraints/Positive
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/Positive

+###javax/validation/constraints/Min
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()J
@3.0.0-M1
-###javax/validation/constraints/Min

+###javax/validation/constraints/AssertTrue
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/AssertTrue

+###javax/validation/constraints/NotNull
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/NotNull

+###javax/validation/constraints/FutureOrPresent
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/FutureOrPresent

+###javax/validation/Payload
@2.0.1
@3.0.0-M1
-###javax/validation/Payload

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext
@2.0.1
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeContextBuilder
@2.0.1
+#atKey(Ljava/lang/Object;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext;
+#atIndex(Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeContextBuilder

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext
@2.0.1
+#inIterable()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeContextBuilder;
+#inContainer(Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addPropertyNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext
@2.0.1
+#addPropertyNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeContextBuilder
@2.0.1
+#atKey(Ljava/lang/Object;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext;
+#atIndex(Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext;
+#addPropertyNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeContextBuilder

+###javax/validation/ConstraintValidatorContext
@2.0.1
+#disableDefaultConstraintViolation()V
+#getDefaultConstraintMessageTemplate()Ljava/lang/String;
+#getClockProvider()Ljavax/validation/ClockProvider;
+#buildConstraintViolationWithTemplate(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext

+###javax/validation/bootstrap/GenericBootstrap
@2.0.1
+#providerResolver(Ljavax/validation/ValidationProviderResolver;)Ljavax/validation/bootstrap/GenericBootstrap;
+#configure()Ljavax/validation/Configuration;
@3.0.0-M1
-###javax/validation/bootstrap/GenericBootstrap

+###javax/validation/ValidationProviderResolver
@2.0.1
+#getValidationProviders()Ljava/util/List;
@3.0.0-M1
-###javax/validation/ValidationProviderResolver

+###javax/validation/spi/ValidationProvider
@2.0.1
+#createSpecializedConfiguration(Ljavax/validation/spi/BootstrapState;)Ljavax/validation/Configuration;
+#createGenericConfiguration(Ljavax/validation/spi/BootstrapState;)Ljavax/validation/Configuration;
+#buildValidatorFactory(Ljavax/validation/spi/ConfigurationState;)Ljavax/validation/ValidatorFactory;
@3.0.0-M1
-###javax/validation/spi/ValidationProvider

+###javax/validation/spi/ConfigurationState
@2.0.1
+#isIgnoreXmlConfiguration()Z
+#getMessageInterpolator()Ljavax/validation/MessageInterpolator;
+#getMappingStreams()Ljava/util/Set;
+#getValueExtractors()Ljava/util/Set;
+#getConstraintValidatorFactory()Ljavax/validation/ConstraintValidatorFactory;
+#getTraversableResolver()Ljavax/validation/TraversableResolver;
+#getParameterNameProvider()Ljavax/validation/ParameterNameProvider;
+#getClockProvider()Ljavax/validation/ClockProvider;
+#getProperties()Ljava/util/Map;
@3.0.0-M1
-###javax/validation/spi/ConfigurationState

+###javax/validation/MessageInterpolator
@2.0.1
+#interpolate(Ljava/lang/String;Ljavax/validation/MessageInterpolator$Context;)Ljava/lang/String;
+#interpolate(Ljava/lang/String;Ljavax/validation/MessageInterpolator$Context;Ljava/util/Locale;)Ljava/lang/String;
@3.0.0-M1
-###javax/validation/MessageInterpolator

+###javax/validation/Path$MethodNode
@2.0.1
+#getParameterTypes()Ljava/util/List;
@3.0.0-M1
-###javax/validation/Path$MethodNode

+###javax/validation/Path$ReturnValueNode
@2.0.1
@3.0.0-M1
-###javax/validation/Path$ReturnValueNode

+###javax/validation/Path$CrossParameterNode
@2.0.1
@3.0.0-M1
-###javax/validation/Path$CrossParameterNode

+###javax/validation/Path$PropertyNode
@2.0.1
+#getContainerClass()Ljava/lang/Class;
+#getTypeArgumentIndex()Ljava/lang/Integer;
@3.0.0-M1
-###javax/validation/Path$PropertyNode

+###javax/validation/Path
@2.0.1
+#toString()Ljava/lang/String;
@3.0.0-M1
-###javax/validation/Path

+###javax/validation/ConstraintValidatorFactory
@2.0.1
+#getInstance(Ljava/lang/Class;)Ljavax/validation/ConstraintValidator;
+#releaseInstance(Ljavax/validation/ConstraintValidator;)V
@3.0.0-M1
-###javax/validation/ConstraintValidatorFactory

+###javax/validation/valueextraction/ValueExtractor$ValueReceiver
@2.0.1
+#value(Ljava/lang/String;Ljava/lang/Object;)V
+#iterableValue(Ljava/lang/String;Ljava/lang/Object;)V
+#indexedValue(Ljava/lang/String;ILjava/lang/Object;)V
+#keyedValue(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
@3.0.0-M1
-###javax/validation/valueextraction/ValueExtractor$ValueReceiver

+###javax/validation/valueextraction/ExtractedValue
@2.0.1
+#type()Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/valueextraction/ExtractedValue

+###javax/validation/valueextraction/Unwrapping$Unwrap
@2.0.1
@3.0.0-M1
-###javax/validation/valueextraction/Unwrapping$Unwrap

+###javax/validation/valueextraction/Unwrapping
@2.0.1
@3.0.0-M1
-###javax/validation/valueextraction/Unwrapping

+###javax/validation/valueextraction/ValueExtractorDeclarationException
@2.0.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/valueextraction/ValueExtractorDeclarationException

+###javax/validation/ValidatorFactory
@2.0.1
+#getValidator()Ljavax/validation/Validator;
+#usingContext()Ljavax/validation/ValidatorContext;
+#getMessageInterpolator()Ljavax/validation/MessageInterpolator;
+#getTraversableResolver()Ljavax/validation/TraversableResolver;
+#getConstraintValidatorFactory()Ljavax/validation/ConstraintValidatorFactory;
+#getParameterNameProvider()Ljavax/validation/ParameterNameProvider;
+#getClockProvider()Ljavax/validation/ClockProvider;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#close()V
@3.0.0-M1
-###javax/validation/ValidatorFactory

+###javax/validation/executable/ExecutableType
@2.0.1
+#values()[Ljavax/validation/executable/ExecutableType;
+#valueOf(Ljava/lang/String;)Ljavax/validation/executable/ExecutableType;
@3.0.0-M1
-###javax/validation/executable/ExecutableType

+###javax/validation/executable/ValidateOnExecution
@2.0.1
+#type()[Ljavax/validation/executable/ExecutableType;
@3.0.0-M1
-###javax/validation/executable/ValidateOnExecution

+###javax/validation/ValidatorContext
@2.0.1
+#messageInterpolator(Ljavax/validation/MessageInterpolator;)Ljavax/validation/ValidatorContext;
+#traversableResolver(Ljavax/validation/TraversableResolver;)Ljavax/validation/ValidatorContext;
+#constraintValidatorFactory(Ljavax/validation/ConstraintValidatorFactory;)Ljavax/validation/ValidatorContext;
+#parameterNameProvider(Ljavax/validation/ParameterNameProvider;)Ljavax/validation/ValidatorContext;
+#clockProvider(Ljavax/validation/ClockProvider;)Ljavax/validation/ValidatorContext;
+#addValueExtractor(Ljavax/validation/valueextraction/ValueExtractor;)Ljavax/validation/ValidatorContext;
+#getValidator()Ljavax/validation/Validator;
@3.0.0-M1
-###javax/validation/ValidatorContext

+###javax/validation/metadata/BeanDescriptor
@2.0.1
+#isBeanConstrained()Z
+#getConstraintsForProperty(Ljava/lang/String;)Ljavax/validation/metadata/PropertyDescriptor;
+#getConstrainedProperties()Ljava/util/Set;
+#getConstraintsForMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljavax/validation/metadata/MethodDescriptor;
+#getConstrainedMethods(Ljavax/validation/metadata/MethodType;[Ljavax/validation/metadata/MethodType;)Ljava/util/Set;
+#getConstraintsForConstructor([Ljava/lang/Class;)Ljavax/validation/metadata/ConstructorDescriptor;
+#getConstrainedConstructors()Ljava/util/Set;
@3.0.0-M1
-###javax/validation/metadata/BeanDescriptor

+###javax/validation/metadata/ElementDescriptor
@2.0.1
+#hasConstraints()Z
+#getElementClass()Ljava/lang/Class;
+#getConstraintDescriptors()Ljava/util/Set;
+#findConstraints()Ljavax/validation/metadata/ElementDescriptor$ConstraintFinder;
@3.0.0-M1
-###javax/validation/metadata/ElementDescriptor

+###javax/validation/metadata/PropertyDescriptor
@2.0.1
+#getPropertyName()Ljava/lang/String;
@3.0.0-M1
-###javax/validation/metadata/PropertyDescriptor

+###javax/validation/metadata/ContainerDescriptor
@2.0.1
+#getConstrainedContainerElementTypes()Ljava/util/Set;
@3.0.0-M1
-###javax/validation/metadata/ContainerDescriptor

+###javax/validation/metadata/ExecutableDescriptor
@2.0.1
+#getName()Ljava/lang/String;
+#getParameterDescriptors()Ljava/util/List;
+#getCrossParameterDescriptor()Ljavax/validation/metadata/CrossParameterDescriptor;
+#getReturnValueDescriptor()Ljavax/validation/metadata/ReturnValueDescriptor;
+#hasConstrainedParameters()Z
+#hasConstrainedReturnValue()Z
+#hasConstraints()Z
+#getConstraintDescriptors()Ljava/util/Set;
+#findConstraints()Ljavax/validation/metadata/ElementDescriptor$ConstraintFinder;
@3.0.0-M1
-###javax/validation/metadata/ExecutableDescriptor

+###javax/validation/metadata/ConstructorDescriptor
@2.0.1
@3.0.0-M1
-###javax/validation/metadata/ConstructorDescriptor

+###javax/validation/metadata/ContainerElementTypeDescriptor
@2.0.1
+#getTypeArgumentIndex()Ljava/lang/Integer;
+#getContainerClass()Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/metadata/ContainerElementTypeDescriptor

+###javax/validation/metadata/CrossParameterDescriptor
@2.0.1
+#getElementClass()Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/metadata/CrossParameterDescriptor

+###javax/validation/metadata/Scope
@2.0.1
+#values()[Ljavax/validation/metadata/Scope;
+#valueOf(Ljava/lang/String;)Ljavax/validation/metadata/Scope;
@3.0.0-M1
-###javax/validation/metadata/Scope

+###javax/validation/ConstraintTarget
@2.0.1
+#values()[Ljavax/validation/ConstraintTarget;
+#valueOf(Ljava/lang/String;)Ljavax/validation/ConstraintTarget;
@3.0.0-M1
-###javax/validation/ConstraintTarget

+###javax/validation/ValidationException
@2.0.1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/ValidationException

+###javax/validation/constraintvalidation/ValidationTarget
@2.0.1
+#values()[Ljavax/validation/constraintvalidation/ValidationTarget;
+#valueOf(Ljava/lang/String;)Ljavax/validation/constraintvalidation/ValidationTarget;
@3.0.0-M1
-###javax/validation/constraintvalidation/ValidationTarget

+###javax/validation/ConstraintDeclarationException
@2.0.1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/ConstraintDeclarationException

+###javax/validation/ConstraintViolationException
@2.0.1
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#<init>(Ljava/util/Set;)V
+#getConstraintViolations()Ljava/util/Set;
@3.0.0-M1
-###javax/validation/ConstraintViolationException

+###javax/validation/Validation
@2.0.1
+#<init>()V
+#buildDefaultValidatorFactory()Ljavax/validation/ValidatorFactory;
+#byDefaultProvider()Ljavax/validation/bootstrap/GenericBootstrap;
+#byProvider(Ljava/lang/Class;)Ljavax/validation/bootstrap/ProviderSpecificBootstrap;
@3.0.0-M1
-###javax/validation/Validation

+###javax/validation/groups/ConvertGroup$List
@2.0.1
+#value()[Ljavax/validation/groups/ConvertGroup;
@3.0.0-M1
-###javax/validation/groups/ConvertGroup$List

+###javax/validation/OverridesAttribute$List
@2.0.1
+#value()[Ljavax/validation/OverridesAttribute;
@3.0.0-M1
-###javax/validation/OverridesAttribute$List

+###javax/validation/UnexpectedTypeException
@2.0.1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/UnexpectedTypeException

+###javax/validation/GroupSequence
@2.0.1
+#value()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/GroupSequence

+###javax/validation/constraints/NegativeOrZero$List
@2.0.1
+#value()[Ljavax/validation/constraints/NegativeOrZero;
@3.0.0-M1
-###javax/validation/constraints/NegativeOrZero$List

+###javax/validation/constraints/Null
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/Null

+###javax/validation/constraints/Digits
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#integer()I
+#fraction()I
@3.0.0-M1
-###javax/validation/constraints/Digits

+###javax/validation/constraints/NotEmpty$List
@2.0.1
+#value()[Ljavax/validation/constraints/NotEmpty;
@3.0.0-M1
-###javax/validation/constraints/NotEmpty$List

+###javax/validation/constraints/NotBlank$List
@2.0.1
+#value()[Ljavax/validation/constraints/NotBlank;
@3.0.0-M1
-###javax/validation/constraints/NotBlank$List

+###javax/validation/constraints/DecimalMax$List
@2.0.1
+#value()[Ljavax/validation/constraints/DecimalMax;
@3.0.0-M1
-###javax/validation/constraints/DecimalMax$List

+###javax/validation/constraints/Max$List
@2.0.1
+#value()[Ljavax/validation/constraints/Max;
@3.0.0-M1
-###javax/validation/constraints/Max$List

+###javax/validation/constraints/Future
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/Future

+###javax/validation/constraints/Size
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#min()I
+#max()I
@3.0.0-M1
-###javax/validation/constraints/Size

+###javax/validation/constraints/AssertFalse
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/constraints/AssertFalse

+###javax/validation/constraints/Email
@2.0.1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#regexp()Ljava/lang/String;
+#flags()[Ljavax/validation/constraints/Pattern$Flag;
@3.0.0-M1
-###javax/validation/constraints/Email

+###javax/validation/constraints/Pattern$List
@2.0.1
+#value()[Ljavax/validation/constraints/Pattern;
@3.0.0-M1
-###javax/validation/constraints/Pattern$List

+###javax/validation/constraints/Past$List
@2.0.1
+#value()[Ljavax/validation/constraints/Past;
@3.0.0-M1
-###javax/validation/constraints/Past$List

+###javax/validation/constraints/Positive$List
@2.0.1
+#value()[Ljavax/validation/constraints/Positive;
@3.0.0-M1
-###javax/validation/constraints/Positive$List

+###javax/validation/constraints/Min$List
@2.0.1
+#value()[Ljavax/validation/constraints/Min;
@3.0.0-M1
-###javax/validation/constraints/Min$List

+###javax/validation/constraints/AssertTrue$List
@2.0.1
+#value()[Ljavax/validation/constraints/AssertTrue;
@3.0.0-M1
-###javax/validation/constraints/AssertTrue$List

+###javax/validation/constraints/NotNull$List
@2.0.1
+#value()[Ljavax/validation/constraints/NotNull;
@3.0.0-M1
-###javax/validation/constraints/NotNull$List

+###javax/validation/constraints/FutureOrPresent$List
@2.0.1
+#value()[Ljavax/validation/constraints/FutureOrPresent;
@3.0.0-M1
-###javax/validation/constraints/FutureOrPresent$List

+###javax/validation/Constraint
@2.0.1
+#validatedBy()[Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/Constraint

+###javax/validation/ConstraintValidator
@2.0.1
+#initialize(Ljava/lang/annotation/Annotation;)V
+#isValid(Ljava/lang/Object;Ljavax/validation/ConstraintValidatorContext;)Z
@3.0.0-M1
-###javax/validation/ConstraintValidator

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext
@2.0.1
+#inIterable()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeContextBuilder;
+#inContainer(Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext
@2.0.1
+#addNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addPropertyNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeContextBuilder
@2.0.1
+#atKey(Ljava/lang/Object;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#atIndex(Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#addNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addPropertyNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeContextBuilder

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext
@2.0.1
+#inIterable()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeContextBuilder;
+#addPropertyNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext

+###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder
@2.0.1
+#addNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#addPropertyNode(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addParameterNode(I)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#addConstraintViolation()Ljavax/validation/ConstraintValidatorContext;
@3.0.0-M1
-###javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder

+###javax/validation/ClockProvider
@2.0.1
+#getClock()Ljava/time/Clock;
@3.0.0-M1
-###javax/validation/ClockProvider

+###javax/validation/bootstrap/ProviderSpecificBootstrap
@2.0.1
+#providerResolver(Ljavax/validation/ValidationProviderResolver;)Ljavax/validation/bootstrap/ProviderSpecificBootstrap;
+#configure()Ljavax/validation/Configuration;
@3.0.0-M1
-###javax/validation/bootstrap/ProviderSpecificBootstrap

+###javax/validation/Configuration
@2.0.1
+#ignoreXmlConfiguration()Ljavax/validation/Configuration;
+#messageInterpolator(Ljavax/validation/MessageInterpolator;)Ljavax/validation/Configuration;
+#traversableResolver(Ljavax/validation/TraversableResolver;)Ljavax/validation/Configuration;
+#constraintValidatorFactory(Ljavax/validation/ConstraintValidatorFactory;)Ljavax/validation/Configuration;
+#parameterNameProvider(Ljavax/validation/ParameterNameProvider;)Ljavax/validation/Configuration;
+#clockProvider(Ljavax/validation/ClockProvider;)Ljavax/validation/Configuration;
+#addValueExtractor(Ljavax/validation/valueextraction/ValueExtractor;)Ljavax/validation/Configuration;
+#addMapping(Ljava/io/InputStream;)Ljavax/validation/Configuration;
+#addProperty(Ljava/lang/String;Ljava/lang/String;)Ljavax/validation/Configuration;
+#getDefaultMessageInterpolator()Ljavax/validation/MessageInterpolator;
+#getDefaultTraversableResolver()Ljavax/validation/TraversableResolver;
+#getDefaultConstraintValidatorFactory()Ljavax/validation/ConstraintValidatorFactory;
+#getDefaultParameterNameProvider()Ljavax/validation/ParameterNameProvider;
+#getDefaultClockProvider()Ljavax/validation/ClockProvider;
+#getBootstrapConfiguration()Ljavax/validation/BootstrapConfiguration;
+#buildValidatorFactory()Ljavax/validation/ValidatorFactory;
@3.0.0-M1
-###javax/validation/Configuration

+###javax/validation/spi/BootstrapState
@2.0.1
+#getValidationProviderResolver()Ljavax/validation/ValidationProviderResolver;
+#getDefaultValidationProviderResolver()Ljavax/validation/ValidationProviderResolver;
@3.0.0-M1
-###javax/validation/spi/BootstrapState

+###javax/validation/MessageInterpolator$Context
@2.0.1
+#getConstraintDescriptor()Ljavax/validation/metadata/ConstraintDescriptor;
+#getValidatedValue()Ljava/lang/Object;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@3.0.0-M1
-###javax/validation/MessageInterpolator$Context

+###javax/validation/Path$Node
@2.0.1
+#getName()Ljava/lang/String;
+#isInIterable()Z
+#getIndex()Ljava/lang/Integer;
+#getKey()Ljava/lang/Object;
+#getKind()Ljavax/validation/ElementKind;
+#as(Ljava/lang/Class;)Ljavax/validation/Path$Node;
+#toString()Ljava/lang/String;
@3.0.0-M1
-###javax/validation/Path$Node

+###javax/validation/Path$ConstructorNode
@2.0.1
+#getParameterTypes()Ljava/util/List;
@3.0.0-M1
-###javax/validation/Path$ConstructorNode

+###javax/validation/Path$ParameterNode
@2.0.1
+#getParameterIndex()I
@3.0.0-M1
-###javax/validation/Path$ParameterNode

+###javax/validation/Path$BeanNode
@2.0.1
+#getContainerClass()Ljava/lang/Class;
+#getTypeArgumentIndex()Ljava/lang/Integer;
@3.0.0-M1
-###javax/validation/Path$BeanNode

+###javax/validation/Path$ContainerElementNode
@2.0.1
+#getContainerClass()Ljava/lang/Class;
+#getTypeArgumentIndex()Ljava/lang/Integer;
@3.0.0-M1
-###javax/validation/Path$ContainerElementNode

+###javax/validation/TraversableResolver
@2.0.1
+#isReachable(Ljava/lang/Object;Ljavax/validation/Path$Node;Ljava/lang/Class;Ljavax/validation/Path;Ljava/lang/annotation/ElementType;)Z
+#isCascadable(Ljava/lang/Object;Ljavax/validation/Path$Node;Ljava/lang/Class;Ljavax/validation/Path;Ljava/lang/annotation/ElementType;)Z
@3.0.0-M1
-###javax/validation/TraversableResolver

+###javax/validation/ParameterNameProvider
@2.0.1
+#getParameterNames(Ljava/lang/reflect/Constructor;)Ljava/util/List;
+#getParameterNames(Ljava/lang/reflect/Method;)Ljava/util/List;
@3.0.0-M1
-###javax/validation/ParameterNameProvider

+###javax/validation/valueextraction/ValueExtractor
@2.0.1
+#extractValues(Ljava/lang/Object;Ljavax/validation/valueextraction/ValueExtractor$ValueReceiver;)V
@3.0.0-M1
-###javax/validation/valueextraction/ValueExtractor

+###javax/validation/valueextraction/UnwrapByDefault
@2.0.1
@3.0.0-M1
-###javax/validation/valueextraction/UnwrapByDefault

+###javax/validation/valueextraction/Unwrapping$Skip
@2.0.1
@3.0.0-M1
-###javax/validation/valueextraction/Unwrapping$Skip

+###javax/validation/valueextraction/ValueExtractorDefinitionException
@2.0.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/valueextraction/ValueExtractorDefinitionException

+###javax/validation/BootstrapConfiguration
@2.0.1
+#getDefaultProviderClassName()Ljava/lang/String;
+#getConstraintValidatorFactoryClassName()Ljava/lang/String;
+#getMessageInterpolatorClassName()Ljava/lang/String;
+#getTraversableResolverClassName()Ljava/lang/String;
+#getParameterNameProviderClassName()Ljava/lang/String;
+#getClockProviderClassName()Ljava/lang/String;
+#getValueExtractorClassNames()Ljava/util/Set;
+#getConstraintMappingResourcePaths()Ljava/util/Set;
+#isExecutableValidationEnabled()Z
+#getDefaultValidatedExecutableTypes()Ljava/util/Set;
+#getProperties()Ljava/util/Map;
@3.0.0-M1
-###javax/validation/BootstrapConfiguration

+###javax/validation/ElementKind
@2.0.1
+#values()[Ljavax/validation/ElementKind;
+#valueOf(Ljava/lang/String;)Ljavax/validation/ElementKind;
@3.0.0-M1
-###javax/validation/ElementKind

+###javax/validation/executable/ExecutableValidator
@2.0.1
+#validateParameters(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateReturnValue(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateConstructorParameters(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateConstructorReturnValue(Ljava/lang/reflect/Constructor;Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
@3.0.0-M1
-###javax/validation/executable/ExecutableValidator

+###javax/validation/Validator
@2.0.1
+#validate(Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateProperty(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Set;
+#validateValue(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#getConstraintsForClass(Ljava/lang/Class;)Ljavax/validation/metadata/BeanDescriptor;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#forExecutables()Ljavax/validation/executable/ExecutableValidator;
@3.0.0-M1
-###javax/validation/Validator

+###javax/validation/metadata/ConstraintDescriptor
@2.0.1
+#getAnnotation()Ljava/lang/annotation/Annotation;
+#getMessageTemplate()Ljava/lang/String;
+#getGroups()Ljava/util/Set;
+#getPayload()Ljava/util/Set;
+#getValidationAppliesTo()Ljavax/validation/ConstraintTarget;
+#getConstraintValidatorClasses()Ljava/util/List;
+#getAttributes()Ljava/util/Map;
+#getComposingConstraints()Ljava/util/Set;
+#isReportAsSingleViolation()Z
+#getValueUnwrapping()Ljavax/validation/metadata/ValidateUnwrappedValue;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@3.0.0-M1
-###javax/validation/metadata/ConstraintDescriptor

+###javax/validation/metadata/ElementDescriptor$ConstraintFinder
@2.0.1
+#unorderedAndMatchingGroups([Ljava/lang/Class;)Ljavax/validation/metadata/ElementDescriptor$ConstraintFinder;
+#lookingAt(Ljavax/validation/metadata/Scope;)Ljavax/validation/metadata/ElementDescriptor$ConstraintFinder;
+#declaredOn([Ljava/lang/annotation/ElementType;)Ljavax/validation/metadata/ElementDescriptor$ConstraintFinder;
+#getConstraintDescriptors()Ljava/util/Set;
+#hasConstraints()Z
@3.0.0-M1
-###javax/validation/metadata/ElementDescriptor$ConstraintFinder

+###javax/validation/metadata/ValidateUnwrappedValue
@2.0.1
+#values()[Ljavax/validation/metadata/ValidateUnwrappedValue;
+#valueOf(Ljava/lang/String;)Ljavax/validation/metadata/ValidateUnwrappedValue;
@3.0.0-M1
-###javax/validation/metadata/ValidateUnwrappedValue

+###javax/validation/metadata/CascadableDescriptor
@2.0.1
+#isCascaded()Z
+#getGroupConversions()Ljava/util/Set;
@3.0.0-M1
-###javax/validation/metadata/CascadableDescriptor

+###javax/validation/metadata/MethodDescriptor
@2.0.1
@3.0.0-M1
-###javax/validation/metadata/MethodDescriptor

+###javax/validation/metadata/MethodType
@2.0.1
+#values()[Ljavax/validation/metadata/MethodType;
+#valueOf(Ljava/lang/String;)Ljavax/validation/metadata/MethodType;
@3.0.0-M1
-###javax/validation/metadata/MethodType

+###javax/validation/metadata/GroupConversionDescriptor
@2.0.1
+#getFrom()Ljava/lang/Class;
+#getTo()Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/metadata/GroupConversionDescriptor

+###javax/validation/metadata/ParameterDescriptor
@2.0.1
+#getIndex()I
+#getName()Ljava/lang/String;
@3.0.0-M1
-###javax/validation/metadata/ParameterDescriptor

+###javax/validation/metadata/ReturnValueDescriptor
@2.0.1
@3.0.0-M1
-###javax/validation/metadata/ReturnValueDescriptor

+###javax/validation/ConstraintViolation
@2.0.1
+#getMessage()Ljava/lang/String;
+#getMessageTemplate()Ljava/lang/String;
+#getRootBean()Ljava/lang/Object;
+#getRootBeanClass()Ljava/lang/Class;
+#getLeafBean()Ljava/lang/Object;
+#getExecutableParameters()[Ljava/lang/Object;
+#getExecutableReturnValue()Ljava/lang/Object;
+#getPropertyPath()Ljavax/validation/Path;
+#getInvalidValue()Ljava/lang/Object;
+#getConstraintDescriptor()Ljavax/validation/metadata/ConstraintDescriptor;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
@3.0.0-M1
-###javax/validation/ConstraintViolation

+###javax/validation/ConstraintDefinitionException
@2.0.1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/ConstraintDefinitionException

+###javax/validation/NoProviderFoundException
@2.0.1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/NoProviderFoundException

+###javax/validation/constraintvalidation/SupportedValidationTarget
@2.0.1
+#value()[Ljavax/validation/constraintvalidation/ValidationTarget;
@3.0.0-M1
-###javax/validation/constraintvalidation/SupportedValidationTarget

+###javax/validation/ReportAsSingleViolation
@2.0.1
@3.0.0-M1
-###javax/validation/ReportAsSingleViolation

+###javax/validation/groups/Default
@2.0.1
@3.0.0-M1
-###javax/validation/groups/Default

+###javax/validation/groups/ConvertGroup
@2.0.1
+#from()Ljava/lang/Class;
+#to()Ljava/lang/Class;
@3.0.0-M1
-###javax/validation/groups/ConvertGroup

+###javax/validation/OverridesAttribute
@2.0.1
+#constraint()Ljava/lang/Class;
+#name()Ljava/lang/String;
+#constraintIndex()I
@3.0.0-M1
-###javax/validation/OverridesAttribute

+###javax/validation/Valid
@2.0.1
@3.0.0-M1
-###javax/validation/Valid

+###javax/validation/GroupDefinitionException
@2.0.1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@3.0.0-M1
-###javax/validation/GroupDefinitionException

+###jakarta/validation/metadata/MethodDescriptor
@3.0.0-M1

+###jakarta/validation/metadata/ElementDescriptor$ConstraintFinder
@3.0.0-M1
+#unorderedAndMatchingGroups([Ljava/lang/Class;)Ljakarta/validation/metadata/ElementDescriptor$ConstraintFinder;
+#lookingAt(Ljakarta/validation/metadata/Scope;)Ljakarta/validation/metadata/ElementDescriptor$ConstraintFinder;
+#declaredOn([Ljava/lang/annotation/ElementType;)Ljakarta/validation/metadata/ElementDescriptor$ConstraintFinder;
+#getConstraintDescriptors()Ljava/util/Set;
+#hasConstraints()Z

+###jakarta/validation/metadata/ParameterDescriptor
@3.0.0-M1
+#getIndex()I
+#getName()Ljava/lang/String;

+###jakarta/validation/metadata/ContainerDescriptor
@3.0.0-M1
+#getConstrainedContainerElementTypes()Ljava/util/Set;

+###jakarta/validation/metadata/ReturnValueDescriptor
@3.0.0-M1

+###jakarta/validation/metadata/GroupConversionDescriptor
@3.0.0-M1
+#getFrom()Ljava/lang/Class;
+#getTo()Ljava/lang/Class;

+###jakarta/validation/metadata/ValidateUnwrappedValue
@3.0.0-M1
+#values()[Ljakarta/validation/metadata/ValidateUnwrappedValue;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/metadata/ValidateUnwrappedValue;

+###jakarta/validation/metadata/BeanDescriptor
@3.0.0-M1
+#isBeanConstrained()Z
+#getConstraintsForProperty(Ljava/lang/String;)Ljakarta/validation/metadata/PropertyDescriptor;
+#getConstrainedProperties()Ljava/util/Set;
+#getConstraintsForMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljakarta/validation/metadata/MethodDescriptor;
+#getConstrainedMethods(Ljakarta/validation/metadata/MethodType;[Ljakarta/validation/metadata/MethodType;)Ljava/util/Set;
+#getConstraintsForConstructor([Ljava/lang/Class;)Ljakarta/validation/metadata/ConstructorDescriptor;
+#getConstrainedConstructors()Ljava/util/Set;

+###jakarta/validation/metadata/MethodType
@3.0.0-M1
+#values()[Ljakarta/validation/metadata/MethodType;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/metadata/MethodType;

+###jakarta/validation/Payload
@3.0.0-M1

+###jakarta/validation/ConstraintValidator
@3.0.0-M1
+#initialize(Ljava/lang/annotation/Annotation;)V
+#isValid(Ljava/lang/Object;Ljakarta/validation/ConstraintValidatorContext;)Z

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext
@3.0.0-M1
+#inIterable()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeContextBuilder;
+#inContainer(Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext
@3.0.0-M1
+#addNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addPropertyNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeContextBuilder
@3.0.0-M1
+#atKey(Ljava/lang/Object;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#atIndex(Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#addNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addPropertyNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext
@3.0.0-M1
+#inIterable()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeContextBuilder;
+#addPropertyNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder
@3.0.0-M1
+#addNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#addPropertyNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addParameterNode(I)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderDefinedContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ClockProvider
@3.0.0-M1
+#getClock()Ljava/time/Clock;

+###jakarta/validation/ConstraintViolation
@3.0.0-M1
+#getMessage()Ljava/lang/String;
+#getMessageTemplate()Ljava/lang/String;
+#getRootBean()Ljava/lang/Object;
+#getRootBeanClass()Ljava/lang/Class;
+#getLeafBean()Ljava/lang/Object;
+#getExecutableParameters()[Ljava/lang/Object;
+#getExecutableReturnValue()Ljava/lang/Object;
+#getPropertyPath()Ljakarta/validation/Path;
+#getInvalidValue()Ljava/lang/Object;
+#getConstraintDescriptor()Ljakarta/validation/metadata/ConstraintDescriptor;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;

+###jakarta/validation/executable/ExecutableType
@3.0.0-M1
+#values()[Ljakarta/validation/executable/ExecutableType;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/executable/ExecutableType;

+###jakarta/validation/Path$Node
@3.0.0-M1
+#getName()Ljava/lang/String;
+#isInIterable()Z
+#getIndex()Ljava/lang/Integer;
+#getKey()Ljava/lang/Object;
+#getKind()Ljakarta/validation/ElementKind;
+#as(Ljava/lang/Class;)Ljakarta/validation/Path$Node;
+#toString()Ljava/lang/String;

+###jakarta/validation/Path$ConstructorNode
@3.0.0-M1
+#getParameterTypes()Ljava/util/List;

+###jakarta/validation/Path$ParameterNode
@3.0.0-M1
+#getParameterIndex()I

+###jakarta/validation/Path$BeanNode
@3.0.0-M1
+#getContainerClass()Ljava/lang/Class;
+#getTypeArgumentIndex()Ljava/lang/Integer;

+###jakarta/validation/Path$ContainerElementNode
@3.0.0-M1
+#getContainerClass()Ljava/lang/Class;
+#getTypeArgumentIndex()Ljava/lang/Integer;

+###jakarta/validation/ElementKind
@3.0.0-M1
+#values()[Ljakarta/validation/ElementKind;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/ElementKind;

+###jakarta/validation/Valid
@3.0.0-M1

+###jakarta/validation/constraints/PositiveOrZero
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/Null
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/DecimalMax
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()Ljava/lang/String;
+#inclusive()Z

+###jakarta/validation/constraints/Min
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()J

+###jakarta/validation/constraints/Negative
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/NotBlank
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/PastOrPresent
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/Size
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#min()I
+#max()I

+###jakarta/validation/constraints/Max
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()J

+###jakarta/validation/constraints/Past
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/Email
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#regexp()Ljava/lang/String;
+#flags()[Ljakarta/validation/constraints/Pattern$Flag;

+###jakarta/validation/constraints/Pattern$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Pattern;

+###jakarta/validation/constraints/Future$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Future;

+###jakarta/validation/constraints/Positive$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Positive;

+###jakarta/validation/constraints/DecimalMin$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/DecimalMin;

+###jakarta/validation/constraints/AssertFalse$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/AssertFalse;

+###jakarta/validation/constraints/FutureOrPresent$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/FutureOrPresent;

+###jakarta/validation/constraints/NegativeOrZero$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/NegativeOrZero;

+###jakarta/validation/constraints/NotEmpty$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/NotEmpty;

+###jakarta/validation/constraints/NotNull$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/NotNull;

+###jakarta/validation/constraints/AssertTrue$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/AssertTrue;

+###jakarta/validation/constraints/Digits$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Digits;

+###jakarta/validation/Constraint
@3.0.0-M1
+#validatedBy()[Ljava/lang/Class;

+###jakarta/validation/ValidationException
@3.0.0-M1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###jakarta/validation/ValidatorFactory
@3.0.0-M1
+#getValidator()Ljakarta/validation/Validator;
+#usingContext()Ljakarta/validation/ValidatorContext;
+#getMessageInterpolator()Ljakarta/validation/MessageInterpolator;
+#getTraversableResolver()Ljakarta/validation/TraversableResolver;
+#getConstraintValidatorFactory()Ljakarta/validation/ConstraintValidatorFactory;
+#getParameterNameProvider()Ljakarta/validation/ParameterNameProvider;
+#getClockProvider()Ljakarta/validation/ClockProvider;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#close()V

+###jakarta/validation/bootstrap/ProviderSpecificBootstrap
@3.0.0-M1
+#providerResolver(Ljakarta/validation/ValidationProviderResolver;)Ljakarta/validation/bootstrap/ProviderSpecificBootstrap;
+#configure()Ljakarta/validation/Configuration;

+###jakarta/validation/spi/ValidationProvider
@3.0.0-M1
+#createSpecializedConfiguration(Ljakarta/validation/spi/BootstrapState;)Ljakarta/validation/Configuration;
+#createGenericConfiguration(Ljakarta/validation/spi/BootstrapState;)Ljakarta/validation/Configuration;
+#buildValidatorFactory(Ljakarta/validation/spi/ConfigurationState;)Ljakarta/validation/ValidatorFactory;

+###jakarta/validation/spi/ConfigurationState
@3.0.0-M1
+#isIgnoreXmlConfiguration()Z
+#getMessageInterpolator()Ljakarta/validation/MessageInterpolator;
+#getMappingStreams()Ljava/util/Set;
+#getValueExtractors()Ljava/util/Set;
+#getConstraintValidatorFactory()Ljakarta/validation/ConstraintValidatorFactory;
+#getTraversableResolver()Ljakarta/validation/TraversableResolver;
+#getParameterNameProvider()Ljakarta/validation/ParameterNameProvider;
+#getClockProvider()Ljakarta/validation/ClockProvider;
+#getProperties()Ljava/util/Map;

+###jakarta/validation/MessageInterpolator$Context
@3.0.0-M1
+#getConstraintDescriptor()Ljakarta/validation/metadata/ConstraintDescriptor;
+#getValidatedValue()Ljava/lang/Object;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;

+###jakarta/validation/TraversableResolver
@3.0.0-M1
+#isReachable(Ljava/lang/Object;Ljakarta/validation/Path$Node;Ljava/lang/Class;Ljakarta/validation/Path;Ljava/lang/annotation/ElementType;)Z
+#isCascadable(Ljava/lang/Object;Ljakarta/validation/Path$Node;Ljava/lang/Class;Ljakarta/validation/Path;Ljava/lang/annotation/ElementType;)Z

+###jakarta/validation/ValidationProviderResolver
@3.0.0-M1
+#getValidationProviders()Ljava/util/List;

+###jakarta/validation/valueextraction/ValueExtractor
@3.0.0-M1
+#extractValues(Ljava/lang/Object;Ljakarta/validation/valueextraction/ValueExtractor$ValueReceiver;)V

+###jakarta/validation/valueextraction/ValueExtractorDefinitionException
@3.0.0-M1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###jakarta/validation/valueextraction/Unwrapping$Skip
@3.0.0-M1

+###jakarta/validation/valueextraction/UnwrapByDefault
@3.0.0-M1

+###jakarta/validation/ConstraintViolationException
@3.0.0-M1
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#<init>(Ljava/util/Set;)V
+#getConstraintViolations()Ljava/util/Set;

+###jakarta/validation/ConstraintDeclarationException
@3.0.0-M1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###jakarta/validation/OverridesAttribute
@3.0.0-M1
+#constraint()Ljava/lang/Class;
+#name()Ljava/lang/String;
+#constraintIndex()I

+###jakarta/validation/ConstraintDefinitionException
@3.0.0-M1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###jakarta/validation/groups/ConvertGroup$List
@3.0.0-M1
+#value()[Ljakarta/validation/groups/ConvertGroup;

+###jakarta/validation/ReportAsSingleViolation
@3.0.0-M1

+###jakarta/validation/constraintvalidation/SupportedValidationTarget
@3.0.0-M1
+#value()[Ljakarta/validation/constraintvalidation/ValidationTarget;

+###jakarta/validation/GroupDefinitionException
@3.0.0-M1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###jakarta/validation/metadata/ExecutableDescriptor
@3.0.0-M1
+#getName()Ljava/lang/String;
+#getParameterDescriptors()Ljava/util/List;
+#getCrossParameterDescriptor()Ljakarta/validation/metadata/CrossParameterDescriptor;
+#getReturnValueDescriptor()Ljakarta/validation/metadata/ReturnValueDescriptor;
+#hasConstrainedParameters()Z
+#hasConstrainedReturnValue()Z
+#hasConstraints()Z
+#getConstraintDescriptors()Ljava/util/Set;
+#findConstraints()Ljakarta/validation/metadata/ElementDescriptor$ConstraintFinder;

+###jakarta/validation/metadata/ElementDescriptor
@3.0.0-M1
+#hasConstraints()Z
+#getElementClass()Ljava/lang/Class;
+#getConstraintDescriptors()Ljava/util/Set;
+#findConstraints()Ljakarta/validation/metadata/ElementDescriptor$ConstraintFinder;

+###jakarta/validation/metadata/CascadableDescriptor
@3.0.0-M1
+#isCascaded()Z
+#getGroupConversions()Ljava/util/Set;

+###jakarta/validation/metadata/CrossParameterDescriptor
@3.0.0-M1
+#getElementClass()Ljava/lang/Class;

+###jakarta/validation/metadata/ConstraintDescriptor
@3.0.0-M1
+#getAnnotation()Ljava/lang/annotation/Annotation;
+#getMessageTemplate()Ljava/lang/String;
+#getGroups()Ljava/util/Set;
+#getPayload()Ljava/util/Set;
+#getValidationAppliesTo()Ljakarta/validation/ConstraintTarget;
+#getConstraintValidatorClasses()Ljava/util/List;
+#getAttributes()Ljava/util/Map;
+#getComposingConstraints()Ljava/util/Set;
+#isReportAsSingleViolation()Z
+#getValueUnwrapping()Ljakarta/validation/metadata/ValidateUnwrappedValue;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;

+###jakarta/validation/metadata/ContainerElementTypeDescriptor
@3.0.0-M1
+#getTypeArgumentIndex()Ljava/lang/Integer;
+#getContainerClass()Ljava/lang/Class;

+###jakarta/validation/metadata/Scope
@3.0.0-M1
+#values()[Ljakarta/validation/metadata/Scope;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/metadata/Scope;

+###jakarta/validation/metadata/PropertyDescriptor
@3.0.0-M1
+#getPropertyName()Ljava/lang/String;

+###jakarta/validation/metadata/ConstructorDescriptor
@3.0.0-M1

+###jakarta/validation/ConstraintTarget
@3.0.0-M1
+#values()[Ljakarta/validation/ConstraintTarget;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/ConstraintTarget;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext
@3.0.0-M1
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeContextBuilder
@3.0.0-M1
+#atKey(Ljava/lang/Object;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext;
+#atIndex(Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderDefinedContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext
@3.0.0-M1
+#inIterable()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeContextBuilder;
+#inContainer(Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addPropertyNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext
@3.0.0-M1
+#addPropertyNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeContextBuilder
@3.0.0-M1
+#atKey(Ljava/lang/Object;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext;
+#atIndex(Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderDefinedContext;
+#addPropertyNode(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$NodeBuilderCustomizableContext;
+#addBeanNode()Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$LeafNodeBuilderCustomizableContext;
+#addContainerElementNode(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Integer;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder$ContainerElementNodeBuilderCustomizableContext;
+#addConstraintViolation()Ljakarta/validation/ConstraintValidatorContext;

+###jakarta/validation/ConstraintValidatorContext
@3.0.0-M1
+#disableDefaultConstraintViolation()V
+#getDefaultConstraintMessageTemplate()Ljava/lang/String;
+#getClockProvider()Ljakarta/validation/ClockProvider;
+#buildConstraintViolationWithTemplate(Ljava/lang/String;)Ljakarta/validation/ConstraintValidatorContext$ConstraintViolationBuilder;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;

+###jakarta/validation/Validator
@3.0.0-M1
+#validate(Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateProperty(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/Set;
+#validateValue(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#getConstraintsForClass(Ljava/lang/Class;)Ljakarta/validation/metadata/BeanDescriptor;
+#unwrap(Ljava/lang/Class;)Ljava/lang/Object;
+#forExecutables()Ljakarta/validation/executable/ExecutableValidator;

+###jakarta/validation/executable/ExecutableValidator
@3.0.0-M1
+#validateParameters(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateReturnValue(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateConstructorParameters(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;
+#validateConstructorReturnValue(Ljava/lang/reflect/Constructor;Ljava/lang/Object;[Ljava/lang/Class;)Ljava/util/Set;

+###jakarta/validation/executable/ValidateOnExecution
@3.0.0-M1
+#type()[Ljakarta/validation/executable/ExecutableType;

+###jakarta/validation/Path$MethodNode
@3.0.0-M1
+#getParameterTypes()Ljava/util/List;

+###jakarta/validation/Path$ReturnValueNode
@3.0.0-M1

+###jakarta/validation/Path$CrossParameterNode
@3.0.0-M1

+###jakarta/validation/Path$PropertyNode
@3.0.0-M1
+#getContainerClass()Ljava/lang/Class;
+#getTypeArgumentIndex()Ljava/lang/Integer;

+###jakarta/validation/Path
@3.0.0-M1
+#toString()Ljava/lang/String;

+###jakarta/validation/ConstraintValidatorFactory
@3.0.0-M1
+#getInstance(Ljava/lang/Class;)Ljakarta/validation/ConstraintValidator;
+#releaseInstance(Ljakarta/validation/ConstraintValidator;)V

+###jakarta/validation/constraints/PositiveOrZero$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/PositiveOrZero;

+###jakarta/validation/constraints/Null$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Null;

+###jakarta/validation/constraints/DecimalMax$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/DecimalMax;

+###jakarta/validation/constraints/Min$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Min;

+###jakarta/validation/constraints/Negative$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Negative;

+###jakarta/validation/constraints/NotBlank$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/NotBlank;

+###jakarta/validation/constraints/PastOrPresent$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/PastOrPresent;

+###jakarta/validation/constraints/Size$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Size;

+###jakarta/validation/constraints/Max$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Max;

+###jakarta/validation/constraints/Past$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Past;

+###jakarta/validation/constraints/Email$List
@3.0.0-M1
+#value()[Ljakarta/validation/constraints/Email;

+###jakarta/validation/constraints/Pattern$Flag
@3.0.0-M1
+#values()[Ljakarta/validation/constraints/Pattern$Flag;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/constraints/Pattern$Flag;
+#getValue()I

+###jakarta/validation/constraints/Pattern
@3.0.0-M1
+#regexp()Ljava/lang/String;
+#flags()[Ljakarta/validation/constraints/Pattern$Flag;
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/Future
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/Positive
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/DecimalMin
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#value()Ljava/lang/String;
+#inclusive()Z

+###jakarta/validation/constraints/AssertFalse
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/FutureOrPresent
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/NegativeOrZero
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/NotEmpty
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/NotNull
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/AssertTrue
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;

+###jakarta/validation/constraints/Digits
@3.0.0-M1
+#message()Ljava/lang/String;
+#groups()[Ljava/lang/Class;
+#payload()[Ljava/lang/Class;
+#integer()I
+#fraction()I

+###jakarta/validation/BootstrapConfiguration
@3.0.0-M1
+#getDefaultProviderClassName()Ljava/lang/String;
+#getConstraintValidatorFactoryClassName()Ljava/lang/String;
+#getMessageInterpolatorClassName()Ljava/lang/String;
+#getTraversableResolverClassName()Ljava/lang/String;
+#getParameterNameProviderClassName()Ljava/lang/String;
+#getClockProviderClassName()Ljava/lang/String;
+#getValueExtractorClassNames()Ljava/util/Set;
+#getConstraintMappingResourcePaths()Ljava/util/Set;
+#isExecutableValidationEnabled()Z
+#getDefaultValidatedExecutableTypes()Ljava/util/Set;
+#getProperties()Ljava/util/Map;

+###jakarta/validation/Validation
@3.0.0-M1
+#<init>()V
+#buildDefaultValidatorFactory()Ljakarta/validation/ValidatorFactory;
+#byDefaultProvider()Ljakarta/validation/bootstrap/GenericBootstrap;
+#byProvider(Ljava/lang/Class;)Ljakarta/validation/bootstrap/ProviderSpecificBootstrap;

+###jakarta/validation/bootstrap/GenericBootstrap
@3.0.0-M1
+#providerResolver(Ljakarta/validation/ValidationProviderResolver;)Ljakarta/validation/bootstrap/GenericBootstrap;
+#configure()Ljakarta/validation/Configuration;

+###jakarta/validation/Configuration
@3.0.0-M1
+#ignoreXmlConfiguration()Ljakarta/validation/Configuration;
+#messageInterpolator(Ljakarta/validation/MessageInterpolator;)Ljakarta/validation/Configuration;
+#traversableResolver(Ljakarta/validation/TraversableResolver;)Ljakarta/validation/Configuration;
+#constraintValidatorFactory(Ljakarta/validation/ConstraintValidatorFactory;)Ljakarta/validation/Configuration;
+#parameterNameProvider(Ljakarta/validation/ParameterNameProvider;)Ljakarta/validation/Configuration;
+#clockProvider(Ljakarta/validation/ClockProvider;)Ljakarta/validation/Configuration;
+#addValueExtractor(Ljakarta/validation/valueextraction/ValueExtractor;)Ljakarta/validation/Configuration;
+#addMapping(Ljava/io/InputStream;)Ljakarta/validation/Configuration;
+#addProperty(Ljava/lang/String;Ljava/lang/String;)Ljakarta/validation/Configuration;
+#getDefaultMessageInterpolator()Ljakarta/validation/MessageInterpolator;
+#getDefaultTraversableResolver()Ljakarta/validation/TraversableResolver;
+#getDefaultConstraintValidatorFactory()Ljakarta/validation/ConstraintValidatorFactory;
+#getDefaultParameterNameProvider()Ljakarta/validation/ParameterNameProvider;
+#getDefaultClockProvider()Ljakarta/validation/ClockProvider;
+#getBootstrapConfiguration()Ljakarta/validation/BootstrapConfiguration;
+#buildValidatorFactory()Ljakarta/validation/ValidatorFactory;

+###jakarta/validation/spi/BootstrapState
@3.0.0-M1
+#getValidationProviderResolver()Ljakarta/validation/ValidationProviderResolver;
+#getDefaultValidationProviderResolver()Ljakarta/validation/ValidationProviderResolver;

+###jakarta/validation/ValidatorContext
@3.0.0-M1
+#messageInterpolator(Ljakarta/validation/MessageInterpolator;)Ljakarta/validation/ValidatorContext;
+#traversableResolver(Ljakarta/validation/TraversableResolver;)Ljakarta/validation/ValidatorContext;
+#constraintValidatorFactory(Ljakarta/validation/ConstraintValidatorFactory;)Ljakarta/validation/ValidatorContext;
+#parameterNameProvider(Ljakarta/validation/ParameterNameProvider;)Ljakarta/validation/ValidatorContext;
+#clockProvider(Ljakarta/validation/ClockProvider;)Ljakarta/validation/ValidatorContext;
+#addValueExtractor(Ljakarta/validation/valueextraction/ValueExtractor;)Ljakarta/validation/ValidatorContext;
+#getValidator()Ljakarta/validation/Validator;

+###jakarta/validation/MessageInterpolator
@3.0.0-M1
+#interpolate(Ljava/lang/String;Ljakarta/validation/MessageInterpolator$Context;)Ljava/lang/String;
+#interpolate(Ljava/lang/String;Ljakarta/validation/MessageInterpolator$Context;Ljava/util/Locale;)Ljava/lang/String;

+###jakarta/validation/ParameterNameProvider
@3.0.0-M1
+#getParameterNames(Ljava/lang/reflect/Constructor;)Ljava/util/List;
+#getParameterNames(Ljava/lang/reflect/Method;)Ljava/util/List;

+###jakarta/validation/valueextraction/ValueExtractor$ValueReceiver
@3.0.0-M1
+#value(Ljava/lang/String;Ljava/lang/Object;)V
+#iterableValue(Ljava/lang/String;Ljava/lang/Object;)V
+#indexedValue(Ljava/lang/String;ILjava/lang/Object;)V
+#keyedValue(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V

+###jakarta/validation/valueextraction/ValueExtractorDeclarationException
@3.0.0-M1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###jakarta/validation/valueextraction/Unwrapping$Unwrap
@3.0.0-M1

+###jakarta/validation/valueextraction/Unwrapping
@3.0.0-M1

+###jakarta/validation/valueextraction/ExtractedValue
@3.0.0-M1
+#type()Ljava/lang/Class;

+###jakarta/validation/UnexpectedTypeException
@3.0.0-M1
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###jakarta/validation/OverridesAttribute$List
@3.0.0-M1
+#value()[Ljakarta/validation/OverridesAttribute;

+###jakarta/validation/NoProviderFoundException
@3.0.0-M1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###jakarta/validation/groups/Default
@3.0.0-M1

+###jakarta/validation/groups/ConvertGroup
@3.0.0-M1
+#from()Ljava/lang/Class;
+#to()Ljava/lang/Class;

+###jakarta/validation/GroupSequence
@3.0.0-M1
+#value()[Ljava/lang/Class;

+###jakarta/validation/constraintvalidation/ValidationTarget
@3.0.0-M1
+#values()[Ljakarta/validation/constraintvalidation/ValidationTarget;
+#valueOf(Ljava/lang/String;)Ljakarta/validation/constraintvalidation/ValidationTarget;
