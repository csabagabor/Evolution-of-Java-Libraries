
+###org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration
@1.3.3.RELEASE
+#<init>()V

+###org/springframework/boot/devtools/classpath/ClassPathFolders
@1.3.0.RELEASE
+#<init>([Ljava/net/URL;)V
+#iterator()Ljava/util/Iterator;
@2.3.0.RELEASE
-###org/springframework/boot/devtools/classpath/ClassPathFolders

+###org/springframework/boot/devtools/classpath/PatternClassPathRestartStrategy
@1.3.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#isRestartRequired(Lorg/springframework/boot/devtools/filewatch/ChangedFile;)Z

+###org/springframework/boot/devtools/restart/server/DefaultSourceFolderUrlFilter
@1.3.0.RELEASE
+#<init>()V
+#isMatch(Ljava/lang/String;Ljava/net/URL;)Z
@2.3.0.RELEASE
-###org/springframework/boot/devtools/restart/server/DefaultSourceFolderUrlFilter

+###org/springframework/boot/devtools/tunnel/server/PortProvider
@1.3.0.RELEASE
+#getPort()I

+###org/springframework/boot/devtools/tunnel/server/HttpTunnelServerHandler
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/tunnel/server/HttpTunnelServer;)V
+#handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V

+###org/springframework/boot/devtools/tunnel/client/TunnelClient
@1.3.0.RELEASE
+#<init>(ILorg/springframework/boot/devtools/tunnel/client/TunnelConnection;)V
+#afterSingletonsInstantiated()V
+#start()V
+#stop()V
+#addListener(Lorg/springframework/boot/devtools/tunnel/client/TunnelClientListener;)V
+#removeListener(Lorg/springframework/boot/devtools/tunnel/client/TunnelClientListener;)V
@2.0.0.RELEASE
+#start()I
-#start()V

+###org/springframework/boot/devtools/tunnel/client/TunnelClientListener
@1.3.0.RELEASE
+#onOpen(Ljava/nio/channels/SocketChannel;)V
+#onClose(Ljava/nio/channels/SocketChannel;)V

+###org/springframework/boot/devtools/tunnel/client/TunnelConnection
@1.3.0.RELEASE
+#open(Ljava/nio/channels/WritableByteChannel;Ljava/io/Closeable;)Ljava/nio/channels/WritableByteChannel;

+###org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration
@1.3.0.RELEASE
+#<init>()V

+###org/springframework/boot/devtools/logger/DevToolsLogFactory
@2.1.0.RELEASE
+#getLog(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;

+###org/springframework/boot/devtools/restart/server/HttpRestartServerHandler
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/restart/server/HttpRestartServer;)V
+#handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V

+###org/springframework/boot/devtools/restart/server/SourceFolderUrlFilter
@1.3.0.RELEASE
+#isMatch(Ljava/lang/String;Ljava/net/URL;)Z
@2.3.0.RELEASE
-###org/springframework/boot/devtools/restart/server/SourceFolderUrlFilter

+###org/springframework/boot/devtools/restart/classloader/ClassLoaderFiles
@1.3.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFiles;)V
+#addAll(Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFiles;)V
+#addFile(Ljava/lang/String;Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile;)V
+#addFile(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile;)V
+#getSourceFolders()Ljava/util/Collection;
+#size()I
+#getFile(Ljava/lang/String;)Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile;
@2.3.0.RELEASE
+#getSourceDirectories()Ljava/util/Collection;
-#getSourceFolders()Ljava/util/Collection;

+###org/springframework/boot/devtools/restart/classloader/ClassLoaderFileURLStreamHandler
@1.4.3.RELEASE
+#<init>(Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile;)V

+###org/springframework/boot/devtools/restart/classloader/ClassLoaderFiles$SourceFolder
@1.3.0.RELEASE
+#getFilesEntrySet()Ljava/util/Set;
+#getName()Ljava/lang/String;
+#getFiles()Ljava/util/Collection;
@2.3.0.RELEASE
-###org/springframework/boot/devtools/restart/classloader/ClassLoaderFiles$SourceFolder

+###org/springframework/boot/devtools/filewatch/FileSystemWatcher
@1.3.0.RELEASE
+#<init>()V
+#<init>(ZJJ)V
+#addListener(Lorg/springframework/boot/devtools/filewatch/FileChangeListener;)V
+#addSourceFolders(Ljava/lang/Iterable;)V
+#addSourceFolder(Ljava/io/File;)V
+#setTriggerFilter(Ljava/io/FileFilter;)V
+#start()V
+#stop()V
@2.0.0.RELEASE
+#<init>(ZLjava/time/Duration;Ljava/time/Duration;)V
-#<init>(ZJJ)V
@2.3.0.RELEASE
+#addSourceDirectories(Ljava/lang/Iterable;)V
+#addSourceDirectory(Ljava/io/File;)V
-#addSourceFolders(Ljava/lang/Iterable;)V
-#addSourceFolder(Ljava/io/File;)V
@2.4.0
+#<init>(ZLjava/time/Duration;Ljava/time/Duration;Lorg/springframework/boot/devtools/filewatch/SnapshotStateRepository;)V

+###org/springframework/boot/devtools/filewatch/ChangedFiles
@1.3.0.RELEASE
+#<init>(Ljava/io/File;Ljava/util/Set;)V
+#getSourceFolder()Ljava/io/File;
+#iterator()Ljava/util/Iterator;
+#getFiles()Ljava/util/Set;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.3.0.RELEASE
+#getSourceDirectory()Ljava/io/File;
-#getSourceFolder()Ljava/io/File;

+###org/springframework/boot/devtools/autoconfigure/DevToolsProperties$Restart
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getAllExclude()[Ljava/lang/String;
+#getExclude()Ljava/lang/String;
+#setExclude(Ljava/lang/String;)V
+#getAdditionalExclude()Ljava/lang/String;
+#setAdditionalExclude(Ljava/lang/String;)V
+#getPollInterval()J
+#setPollInterval(J)V
+#getQuietPeriod()J
+#setQuietPeriod(J)V
+#getTriggerFile()Ljava/lang/String;
+#setTriggerFile(Ljava/lang/String;)V
+#getAdditionalPaths()Ljava/util/List;
+#setAdditionalPaths(Ljava/util/List;)V
@2.0.0.RELEASE
+#getPollInterval()Ljava/time/Duration;
+#setPollInterval(Ljava/time/Duration;)V
+#getQuietPeriod()Ljava/time/Duration;
+#setQuietPeriod(Ljava/time/Duration;)V
+#isLogConditionEvaluationDelta()Z
+#setLogConditionEvaluationDelta(Z)V
-#getPollInterval()J
-#setPollInterval(J)V
-#getQuietPeriod()J
-#setQuietPeriod(J)V

+###org/springframework/boot/devtools/classpath/ClassPathRestartStrategy
@1.3.0.RELEASE
+#isRestartRequired(Lorg/springframework/boot/devtools/filewatch/ChangedFile;)Z

+###org/springframework/boot/devtools/classpath/ClassPathChangedEvent
@1.3.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/util/Set;Z)V
+#getChangeSet()Ljava/util/Set;
+#isRestartRequired()Z
@2.3.10.RELEASE
+#toString()Ljava/lang/String;
@2.4.0
-#toString()Ljava/lang/String;
@2.4.5
+#toString()Ljava/lang/String;
@2.6.11
+#overview()Ljava/lang/String;
@2.7.0
-#overview()Ljava/lang/String;
@2.7.3
+#overview()Ljava/lang/String;

+###org/springframework/boot/devtools/restart/FailureHandler$Outcome
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/devtools/restart/FailureHandler$Outcome;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/devtools/restart/FailureHandler$Outcome;

+###org/springframework/boot/devtools/restart/FailureHandler
@1.3.0.RELEASE
+#handle(Ljava/lang/Throwable;)Lorg/springframework/boot/devtools/restart/FailureHandler$Outcome;

+###org/springframework/boot/devtools/remote/server/HttpStatusHandler
@1.3.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/http/HttpStatus;)V
+#handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V

+###org/springframework/boot/devtools/remote/server/DispatcherFilter
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/remote/server/Dispatcher;)V
+#init(Ljavax/servlet/FilterConfig;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#destroy()V
@3.0.0
+#init(Ljakarta/servlet/FilterConfig;)V
+#doFilter(Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;Ljakarta/servlet/FilterChain;)V
-#init(Ljavax/servlet/FilterConfig;)V
-#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V

+###org/springframework/boot/devtools/remote/server/HttpHeaderAccessManager
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#isAllowed(Lorg/springframework/http/server/ServerHttpRequest;)Z

+###org/springframework/boot/devtools/filewatch/FileChangeListener
@1.3.0.RELEASE
+#onChange(Ljava/util/Set;)V

+###org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayloadForwarder
@1.3.0.RELEASE
+#<init>(Ljava/nio/channels/WritableByteChannel;)V
+#forward(Lorg/springframework/boot/devtools/tunnel/payload/HttpTunnelPayload;)V

+###org/springframework/boot/devtools/autoconfigure/TriggerFileFilter
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#accept(Ljava/io/File;)Z

+###org/springframework/boot/devtools/env/DevToolsPropertyDefaultsPostProcessor
@1.3.0.RELEASE
+#<init>()V
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V

+###org/springframework/boot/devtools/livereload/Frame$Type
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/devtools/livereload/Frame$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/devtools/livereload/Frame$Type;
+#forCode(I)Lorg/springframework/boot/devtools/livereload/Frame$Type;
@2.2.0.RELEASE
-###org/springframework/boot/devtools/livereload/Frame$Type

+###org/springframework/boot/devtools/tunnel/server/HttpTunnelServer
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/tunnel/server/TargetServerConnection;)V
+#handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V
+#setLongPollTimeout(I)V
+#setDisconnectTimeout(J)V

+###org/springframework/boot/devtools/tunnel/server/HttpTunnelServer$ServerThread
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/tunnel/server/HttpTunnelServer;Ljava/nio/channels/ByteChannel;)V
+#run()V
+#handleIncomingHttp(Lorg/springframework/boot/devtools/tunnel/server/HttpTunnelServer$HttpConnection;)V

+###org/springframework/boot/devtools/tunnel/server/TargetServerConnection
@1.3.0.RELEASE
+#open(I)Ljava/nio/channels/ByteChannel;

+###org/springframework/boot/devtools/tunnel/client/HttpTunnelConnection$TunnelChannel
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/tunnel/client/HttpTunnelConnection;Ljava/nio/channels/WritableByteChannel;Ljava/io/Closeable;)V
+#isOpen()Z
+#close()V
+#write(Ljava/nio/ByteBuffer;)I

+###org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Proxy
@1.3.0.RELEASE
+#<init>()V
+#getHost()Ljava/lang/String;
+#setHost(Ljava/lang/String;)V
+#getPort()Ljava/lang/Integer;
+#setPort(Ljava/lang/Integer;)V

+###org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/filewatch/FileSystemWatcherFactory;Lorg/springframework/boot/devtools/classpath/ClassPathRestartStrategy;[Ljava/net/URL;)V
+#setStopWatcherOnRestart(Z)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#afterPropertiesSet()V
+#destroy()V

+###org/springframework/boot/devtools/restart/server/HttpRestartServer
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/restart/server/SourceFolderUrlFilter;)V
+#<init>(Lorg/springframework/boot/devtools/restart/server/RestartServer;)V
+#handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V
@2.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/restart/server/SourceDirectoryUrlFilter;)V
-#<init>(Lorg/springframework/boot/devtools/restart/server/SourceFolderUrlFilter;)V

+###org/springframework/boot/devtools/restart/RestartScope
@1.3.0.RELEASE

+###org/springframework/boot/devtools/remote/server/Handler
@1.3.0.RELEASE
+#handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V

+###org/springframework/boot/devtools/remote/server/UrlHandlerMapper
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/boot/devtools/remote/server/Handler;)V
+#getHandler(Lorg/springframework/http/server/ServerHttpRequest;)Lorg/springframework/boot/devtools/remote/server/Handler;

+###org/springframework/boot/devtools/remote/server/AccessManager
@1.3.0.RELEASE
+#isAllowed(Lorg/springframework/http/server/ServerHttpRequest;)Z

+###org/springframework/boot/devtools/remote/server/HandlerMapper
@1.3.0.RELEASE
+#getHandler(Lorg/springframework/http/server/ServerHttpRequest;)Lorg/springframework/boot/devtools/remote/server/Handler;

+###org/springframework/boot/devtools/remote/client/ClassPathChangeUploader
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/http/client/ClientHttpRequestFactory;)V
+#onApplicationEvent(Lorg/springframework/boot/devtools/classpath/ClassPathChangedEvent;)V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V

+###org/springframework/boot/devtools/livereload/LiveReloadServer
@1.3.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/concurrent/ThreadFactory;)V
+#<init>(I)V
+#<init>(ILjava/util/concurrent/ThreadFactory;)V
+#start()V
+#isStarted()Z
+#getPort()I
+#stop()V
+#triggerReload()V
@2.0.0.RELEASE
+#start()I
-#start()V

+###org/springframework/boot/devtools/tunnel/server/HttpTunnelServer$HttpConnection
@1.3.0.RELEASE
+#<init>(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)V
+#getRequest()Lorg/springframework/http/server/ServerHttpRequest;
+#isOlderThan(I)Z
+#waitForResponse()V
+#isDisconnectRequest()Z
+#respond(Lorg/springframework/http/HttpStatus;)V
+#respond(Lorg/springframework/boot/devtools/tunnel/payload/HttpTunnelPayload;)V

+###org/springframework/boot/devtools/autoconfigure/RemoteDevToolsAutoConfiguration
@1.3.0.RELEASE
+#<init>()V
+#remoteDevToolsAccessManager()Lorg/springframework/boot/devtools/remote/server/AccessManager;
+#remoteDevToolsHealthCheckHandlerMapper()Lorg/springframework/boot/devtools/remote/server/HandlerMapper;
+#remoteDevToolsDispatcherFilter(Lorg/springframework/boot/devtools/remote/server/AccessManager;Ljava/util/Collection;)Lorg/springframework/boot/devtools/remote/server/DispatcherFilter;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/autoconfigure/DevToolsProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
-#<init>()V
@2.2.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/autoconfigure/DevToolsProperties;)V
+#remoteDevToolsHealthCheckHandlerMapper(Lorg/springframework/boot/autoconfigure/web/ServerProperties;)Lorg/springframework/boot/devtools/remote/server/HandlerMapper;
-#<init>(Lorg/springframework/boot/devtools/autoconfigure/DevToolsProperties;Lorg/springframework/boot/autoconfigure/web/ServerProperties;)V
-#remoteDevToolsHealthCheckHandlerMapper()Lorg/springframework/boot/devtools/remote/server/HandlerMapper;

+###org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Restart
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V

+###org/springframework/boot/devtools/restart/DefaultRestartInitializer
@1.3.0.RELEASE
+#<init>()V
+#getInitialUrls(Ljava/lang/Thread;)[Ljava/net/URL;

+###org/springframework/boot/devtools/restart/RestartListener
@1.3.0.RELEASE
+#beforeRestart()V

+###org/springframework/boot/devtools/tunnel/client/HttpTunnelConnection
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/http/client/ClientHttpRequestFactory;)V
+#open(Ljava/nio/channels/WritableByteChannel;Ljava/io/Closeable;)Lorg/springframework/boot/devtools/tunnel/client/HttpTunnelConnection$TunnelChannel;
+#open(Ljava/nio/channels/WritableByteChannel;Ljava/io/Closeable;)Ljava/nio/channels/WritableByteChannel;

+###org/springframework/boot/devtools/autoconfigure/OptionalLiveReloadServer
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/livereload/LiveReloadServer;)V
+#startServer()V
+#triggerReload()V
@2.0.0.RELEASE
+#afterPropertiesSet()V
-#startServer()V

+###org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties
@1.3.0.RELEASE
+#<init>()V
+#getContextPath()Ljava/lang/String;
+#setContextPath(Ljava/lang/String;)V
+#getSecret()Ljava/lang/String;
+#setSecret(Ljava/lang/String;)V
+#getSecretHeaderName()Ljava/lang/String;
+#setSecretHeaderName(Ljava/lang/String;)V
+#getRestart()Lorg/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Restart;
+#getDebug()Lorg/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Debug;
+#getProxy()Lorg/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Proxy;
@2.0.0.RELEASE
-#getDebug()Lorg/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Debug;

+###org/springframework/boot/devtools/env/DevToolsHomePropertiesPostProcessor
@1.3.0.RELEASE
+#<init>()V
+#postProcessEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplication;)V

+###org/springframework/boot/devtools/RemoteSpringApplication
@1.3.0.RELEASE
+#main([Ljava/lang/String;)V

+###org/springframework/boot/devtools/settings/DevToolsSettings
@1.3.0.RELEASE
+#isRestartInclude(Ljava/net/URL;)Z
+#isRestartExclude(Ljava/net/URL;)Z
+#get()Lorg/springframework/boot/devtools/settings/DevToolsSettings;

+###org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayload
@1.3.0.RELEASE
+#<init>(JLjava/nio/ByteBuffer;)V
+#getSequence()J
+#assignTo(Lorg/springframework/http/HttpOutputMessage;)V
+#writeTo(Ljava/nio/channels/WritableByteChannel;)V
+#get(Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/boot/devtools/tunnel/payload/HttpTunnelPayload;
+#getPayloadData(Ljava/nio/channels/ReadableByteChannel;)Ljava/nio/ByteBuffer;
+#logIncoming()V
+#logOutgoing()V
+#toHexString()Ljava/lang/String;

+###org/springframework/boot/devtools/autoconfigure/DevToolsProperties
@1.3.0.RELEASE
+#<init>()V
+#getRestart()Lorg/springframework/boot/devtools/autoconfigure/DevToolsProperties$Restart;
+#getLivereload()Lorg/springframework/boot/devtools/autoconfigure/DevToolsProperties$Livereload;
+#getRemote()Lorg/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties;

+###org/springframework/boot/devtools/autoconfigure/DevToolsProperties$Livereload
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getPort()I
+#setPort(I)V

+###org/springframework/boot/devtools/restart/RestartScopeInitializer
@1.3.0.RELEASE
+#<init>()V
+#initialize(Lorg/springframework/context/ConfigurableApplicationContext;)V

+###org/springframework/boot/devtools/restart/server/RestartServer
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/restart/server/SourceFolderUrlFilter;)V
+#<init>(Lorg/springframework/boot/devtools/restart/server/SourceFolderUrlFilter;Ljava/lang/ClassLoader;)V
+#updateAndRestart(Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFiles;)V
@2.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/restart/server/SourceDirectoryUrlFilter;)V
+#<init>(Lorg/springframework/boot/devtools/restart/server/SourceDirectoryUrlFilter;Ljava/lang/ClassLoader;)V
-#<init>(Lorg/springframework/boot/devtools/restart/server/SourceFolderUrlFilter;)V
-#<init>(Lorg/springframework/boot/devtools/restart/server/SourceFolderUrlFilter;Ljava/lang/ClassLoader;)V

+###org/springframework/boot/devtools/restart/ConditionalOnInitializedRestarter
@1.3.0.RELEASE

+###org/springframework/boot/devtools/restart/RestartApplicationListener
@1.3.0.RELEASE
+#<init>()V
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
+#getOrder()I
+#setOrder(I)V

+###org/springframework/boot/devtools/restart/classloader/RestartClassLoader
@1.3.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;[Ljava/net/URL;)V
+#<init>(Ljava/lang/ClassLoader;[Ljava/net/URL;Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFileRepository;)V
+#<init>(Ljava/lang/ClassLoader;[Ljava/net/URL;Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFileRepository;Lorg/apache/commons/logging/Log;)V
+#getResources(Ljava/lang/String;)Ljava/util/Enumeration;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#findResource(Ljava/lang/String;)Ljava/net/URL;
+#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;
+#isClassReloadable(Ljava/lang/Class;)Z
@2.4.3
+#publicDefineClass(Ljava/lang/String;[BLjava/security/ProtectionDomain;)Ljava/lang/Class;
@2.4.4
+#getOriginalClassLoader()Ljava/lang/ClassLoader;
@2.4.12
*#<init>(Ljava/lang/ClassLoader;[Ljava/net/URL;Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFileRepository;Lorg/apache/commons/logging/Log;)V[deprecated]
@2.5.6
*#<init>(Ljava/lang/ClassLoader;[Ljava/net/URL;Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFileRepository;Lorg/apache/commons/logging/Log;)V[deprecated]
@3.0.0
-#<init>(Ljava/lang/ClassLoader;[Ljava/net/URL;Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFileRepository;Lorg/apache/commons/logging/Log;)V[deprecated]

+###org/springframework/boot/devtools/restart/classloader/ClassLoaderFile$Kind
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile$Kind;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile$Kind;

+###org/springframework/boot/devtools/restart/classloader/ClassLoaderFileRepository
@1.3.0.RELEASE
+#getFile(Ljava/lang/String;)Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile;

+###org/springframework/boot/devtools/restart/classloader/ClassLoaderFile
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile$Kind;[B)V
+#<init>(Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile$Kind;J[B)V
+#getKind()Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFile$Kind;
+#getLastModified()J
+#getContents()[B

+###org/springframework/boot/devtools/restart/RestartInitializer
@1.3.0.RELEASE
+#getInitialUrls(Ljava/lang/Thread;)[Ljava/net/URL;

+###org/springframework/boot/devtools/restart/AgentReloader
@1.3.0.RELEASE
+#isActive()Z

+###org/springframework/boot/devtools/restart/Restarter
@1.3.0.RELEASE
+#addUrls(Ljava/util/Collection;)V
+#addClassLoaderFiles(Lorg/springframework/boot/devtools/restart/classloader/ClassLoaderFiles;)V
+#getThreadFactory()Ljava/util/concurrent/ThreadFactory;
+#restart()V
+#restart(Lorg/springframework/boot/devtools/restart/FailureHandler;)V
+#getOrAddAttribute(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;
+#removeAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getInitialUrls()[Ljava/net/URL;
+#disable()V
+#initialize([Ljava/lang/String;)V
+#initialize([Ljava/lang/String;Lorg/springframework/boot/devtools/restart/RestartInitializer;)V
+#initialize([Ljava/lang/String;Z)V
+#initialize([Ljava/lang/String;ZLorg/springframework/boot/devtools/restart/RestartInitializer;)V
+#initialize([Ljava/lang/String;ZLorg/springframework/boot/devtools/restart/RestartInitializer;Z[Lorg/springframework/boot/devtools/restart/RestartListener;)V
+#getInstance()Lorg/springframework/boot/devtools/restart/Restarter;
+#clearInstance()V
@1.4.0.RELEASE
+#initialize([Ljava/lang/String;ZLorg/springframework/boot/devtools/restart/RestartInitializer;Z)V
-#initialize([Ljava/lang/String;ZLorg/springframework/boot/devtools/restart/RestartInitializer;Z[Lorg/springframework/boot/devtools/restart/RestartListener;)V

+###org/springframework/boot/devtools/remote/server/Dispatcher
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/remote/server/AccessManager;Ljava/util/Collection;)V
+#handle(Lorg/springframework/http/server/ServerHttpRequest;Lorg/springframework/http/server/ServerHttpResponse;)Z

+###org/springframework/boot/devtools/remote/client/HttpHeaderInterceptor
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#intercept(Lorg/springframework/http/HttpRequest;[BLorg/springframework/http/client/ClientHttpRequestExecution;)Lorg/springframework/http/client/ClientHttpResponse;

+###org/springframework/boot/devtools/remote/client/RemoteClientConfiguration
@1.3.0.RELEASE
+#<init>()V
+#propertySourcesPlaceholderConfigurer()Lorg/springframework/context/support/PropertySourcesPlaceholderConfigurer;
+#clientHttpRequestFactory()Lorg/springframework/http/client/ClientHttpRequestFactory;
@1.4.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/autoconfigure/DevToolsProperties;)V
-#<init>()V
@2.0.0.RELEASE
+#afterPropertiesSet()V

+###org/springframework/boot/devtools/filewatch/FileSystemWatcherFactory
@1.3.0.RELEASE
+#getFileSystemWatcher()Lorg/springframework/boot/devtools/filewatch/FileSystemWatcher;

+###org/springframework/boot/devtools/filewatch/ChangedFile
@1.3.0.RELEASE
+#<init>(Ljava/io/File;Ljava/io/File;Lorg/springframework/boot/devtools/filewatch/ChangedFile$Type;)V
+#getFile()Ljava/io/File;
+#getType()Lorg/springframework/boot/devtools/filewatch/ChangedFile$Type;
+#getRelativeName()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/boot/devtools/filewatch/ChangedFile$Type
@1.3.0.RELEASE
+#values()[Lorg/springframework/boot/devtools/filewatch/ChangedFile$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/boot/devtools/filewatch/ChangedFile$Type;

+###org/springframework/boot/devtools/tunnel/server/SocketTargetServerConnection
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/tunnel/server/PortProvider;)V
+#open(I)Ljava/nio/channels/ByteChannel;

+###org/springframework/boot/devtools/tunnel/server/StaticPortProvider
@1.3.0.RELEASE
+#<init>(I)V
+#getPort()I

+###org/springframework/boot/devtools/tunnel/client/TunnelClient$ServerThread
@1.3.0.RELEASE
+#<init>(Lorg/springframework/boot/devtools/tunnel/client/TunnelClient;Ljava/nio/channels/ServerSocketChannel;)V
+#close()V
+#run()V

+###org/springframework/boot/devtools/restart/server/DefaultSourceDirectoryUrlFilter
@2.3.0.RELEASE
+#<init>()V
+#isMatch(Ljava/lang/String;Ljava/net/URL;)Z

+###org/springframework/boot/devtools/restart/server/SourceDirectoryUrlFilter
@2.3.0.RELEASE
+#isMatch(Ljava/lang/String;Ljava/net/URL;)Z

+###org/springframework/boot/devtools/restart/classloader/ClassLoaderFiles$SourceDirectory
@2.3.0.RELEASE
+#getFilesEntrySet()Ljava/util/Set;
+#getName()Ljava/lang/String;
+#getFiles()Ljava/util/Collection;

+###org/springframework/boot/devtools/filewatch/SnapshotStateRepository
@2.4.0
+#save(Ljava/lang/Object;)V
+#restore()Ljava/lang/Object;

+###org/springframework/boot/devtools/classpath/ClassPathDirectories
@2.3.0.RELEASE
+#<init>([Ljava/net/URL;)V
+#iterator()Ljava/util/Iterator;

+###org/springframework/boot/devtools/autoconfigure/OnEnabledDevToolsCondition
@2.2.0.RELEASE
+#<init>()V
+#getMatchOutcome(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Lorg/springframework/boot/autoconfigure/condition/ConditionOutcome;

+###org/springframework/boot/devtools/system/DevToolsEnablementDeducer
@2.2.0.RELEASE
+#shouldEnable(Ljava/lang/Thread;)Z

+###org/springframework/boot/devtools/autoconfigure/DevToolsR2dbcAutoConfiguration
@2.5.6
+#<init>()V

+###org/springframework/boot/devtools/tunnel/server/RemoteDebugPortProvider
@1.3.0.RELEASE
+#<init>()V
+#getPort()I
+#isRemoteDebugRunning()Z
@2.0.0.RELEASE
-###org/springframework/boot/devtools/tunnel/server/RemoteDebugPortProvider

+###org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Debug
@1.3.0.RELEASE
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getLocalPort()I
+#setLocalPort(I)V
@2.0.0.RELEASE
-###org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties$Debug

+###org/springframework/boot/devtools/log4j2/Log4J2RestartListener
@1.3.0.RELEASE
+#<init>()V
+#beforeRestart()V
@1.4.0.RELEASE
-###org/springframework/boot/devtools/log4j2/Log4J2RestartListener
