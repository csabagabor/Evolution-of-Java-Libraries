
+###com/networknt/metrics/MetricsHandler
@0.1.7
+#<init>()V
+#getNext()Lio/undertow/server/HttpHandler;
+#setNext(Lio/undertow/server/HttpHandler;)Lcom/networknt/handler/MiddlewareHandler;
+#handleRequest(Lio/undertow/server/HttpServerExchange;)V
+#isEnabled()Z
+#register()V
@2.1.1
+#reload()V

+###com/networknt/metrics/MetricsConfig
@0.1.7
+#<init>()V
+#isEnabled()Z
+#setEnabled(Z)V
+#getDescription()Ljava/lang/String;
+#setDescription(Ljava/lang/String;)V
@0.1.9
+#getInfluxdbHost()Ljava/lang/String;
+#getInfluxdbProtocol()Ljava/lang/String;
+#setInfluxdbProtocol(Ljava/lang/String;)V
+#setInfluxdbHost(Ljava/lang/String;)V
+#getInfluxdbPort()I
+#setInfluxdbPort(I)V
+#getReportInMinutes()I
+#setReportInMinutes(I)V
+#getInfluxdbName()Ljava/lang/String;
+#setInfluxdbName(Ljava/lang/String;)V
+#getInfluxdbUser()Ljava/lang/String;
+#setInfluxdbUser(Ljava/lang/String;)V
+#getInfluxdbPass()Ljava/lang/String;
+#setInfluxdbPass(Ljava/lang/String;)V
@1.6.14
+#isEnableJVMMonitor()Z
+#setEnableJVMMonitor(Z)V
@2.0.0-BETA2
-#isEnableJVMMonitor()Z
-#setEnableJVMMonitor(Z)V
@2.0.10
+#isEnableJVMMonitor()Z
+#setEnableJVMMonitor(Z)V

+###io/dropwizard/metrics/influxdb/TimeUtils
@0.1.9
+#<init>()V
+#toTimePrecision(Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;

+###io/dropwizard/metrics/influxdb/InfluxDbHttpSender
@0.1.9
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/TimeUnit;)V
+#flush()V
+#hasSeriesData()Z
+#appendPoints(Lio/dropwizard/metrics/influxdb/data/InfluxDbPoint;)V
+#writeData()I
+#setTags(Ljava/util/Map;)V

+###io/dropwizard/metrics/influxdb/data/InfluxDbWriteObject
@0.1.9
+#<init>(Ljava/util/concurrent/TimeUnit;)V
+#getPrecision()Ljava/lang/String;
+#setPrecision(Ljava/lang/String;)V
+#getPoints()Ljava/util/Set;
+#setPoints(Ljava/util/Set;)V
+#getTags()Ljava/util/Map;
+#setTags(Ljava/util/Map;)V
+#getBody()Ljava/lang/String;

+###io/dropwizard/metrics/influxdb/data/InfluxDbPoint
@0.1.9
+#<init>(Ljava/lang/String;JLjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;JLjava/lang/String;)V
+#getMeasurement()Ljava/lang/String;
+#setMeasurement(Ljava/lang/String;)V
+#getTags()Ljava/util/Map;
+#setTags(Ljava/util/Map;)V
+#getTimestamp()J
+#setTimestamp(J)V
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#map2String(Ljava/util/Map;)Ljava/lang/String;

+###io/dropwizard/metrics/influxdb/InfluxDbReporter$Builder
@0.1.9
+#withTags(Ljava/util/Map;)Lio/dropwizard/metrics/influxdb/InfluxDbReporter$Builder;
+#convertRatesTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/influxdb/InfluxDbReporter$Builder;
+#convertDurationsTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/influxdb/InfluxDbReporter$Builder;
+#filter(Lio/dropwizard/metrics/MetricFilter;)Lio/dropwizard/metrics/influxdb/InfluxDbReporter$Builder;
+#skipIdleMetrics(Z)Lio/dropwizard/metrics/influxdb/InfluxDbReporter$Builder;
+#build(Lio/dropwizard/metrics/influxdb/InfluxDbSender;)Lio/dropwizard/metrics/influxdb/InfluxDbReporter;

+###io/dropwizard/metrics/influxdb/InfluxDbSender
@0.1.9
+#flush()V
+#hasSeriesData()Z
+#appendPoints(Lio/dropwizard/metrics/influxdb/data/InfluxDbPoint;)V
+#writeData()I
+#setTags(Ljava/util/Map;)V

+###io/dropwizard/metrics/influxdb/InfluxDbReporter
@0.1.9
+#forRegistry(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/influxdb/InfluxDbReporter$Builder;
+#report(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V

+###io/dropwizard/metrics/WeightedSnapshot
@0.1.9
+#<init>(Ljava/util/Collection;)V
+#getValue(D)D
+#size()I
+#getValues()[J
+#getMax()J
+#getMin()J
+#getMean()D
+#getStdDev()D
+#dump(Ljava/io/OutputStream;)V

+###io/dropwizard/metrics/Meter
@0.1.9
+#<init>()V
+#<init>(Lio/dropwizard/metrics/Clock;)V
+#mark()V
+#mark(J)V
+#getCount()J
+#getFifteenMinuteRate()D
+#getFiveMinuteRate()D
+#getMeanRate()D
+#getOneMinuteRate()D
+#toString()Ljava/lang/String;

+###io/dropwizard/metrics/Slf4jReporter
@0.1.9
+#forRegistry(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#report(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V

+###io/dropwizard/metrics/InstrumentedExecutors
@0.1.9
+#newFixedThreadPool(ILio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newFixedThreadPool(ILio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newFixedThreadPool(ILjava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newFixedThreadPool(ILjava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newSingleThreadExecutor(Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newSingleThreadExecutor(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newSingleThreadExecutor(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newSingleThreadExecutor(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newCachedThreadPool(Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newCachedThreadPool(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newCachedThreadPool(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newCachedThreadPool(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedExecutorService;
+#newSingleThreadScheduledExecutor(Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#newSingleThreadScheduledExecutor(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#newSingleThreadScheduledExecutor(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#newSingleThreadScheduledExecutor(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#newScheduledThreadPool(ILio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#newScheduledThreadPool(ILio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#newScheduledThreadPool(ILjava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#newScheduledThreadPool(ILjava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedScheduledExecutorService;
+#defaultThreadFactory(Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedThreadFactory;
+#defaultThreadFactory(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedThreadFactory;
+#privilegedThreadFactory(Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)Lio/dropwizard/metrics/InstrumentedThreadFactory;
+#privilegedThreadFactory(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/InstrumentedThreadFactory;

+###io/dropwizard/metrics/Gauge
@0.1.9
+#getValue()Ljava/lang/Object;

+###io/dropwizard/metrics/DefaultObjectNameFactory
@0.1.9
+#<init>()V
+#createName(Ljava/lang/String;Ljava/lang/String;Lio/dropwizard/metrics/MetricName;)Ljavax/management/ObjectName;

+###io/dropwizard/metrics/ConsoleReporter$Builder
@0.1.9
+#outputTo(Ljava/io/PrintStream;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#formattedFor(Ljava/util/Locale;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#withClock(Lio/dropwizard/metrics/Clock;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#formattedFor(Ljava/util/TimeZone;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#convertRatesTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#convertDurationsTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#filter(Lio/dropwizard/metrics/MetricFilter;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#build()Lio/dropwizard/metrics/ConsoleReporter;

+###io/dropwizard/metrics/MetricRegistry
@0.1.9
+#name(Ljava/lang/Class;[Ljava/lang/String;)Lio/dropwizard/metrics/MetricName;
+#name(Ljava/lang/String;[Ljava/lang/String;)Lio/dropwizard/metrics/MetricName;
+#<init>()V
+#register(Ljava/lang/String;Lio/dropwizard/metrics/Metric;)Lio/dropwizard/metrics/Metric;
+#register(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Metric;)Lio/dropwizard/metrics/Metric;
+#registerAll(Lio/dropwizard/metrics/MetricSet;)V
+#counter(Ljava/lang/String;)Lio/dropwizard/metrics/Counter;
+#counter(Lio/dropwizard/metrics/MetricName;)Lio/dropwizard/metrics/Counter;
+#histogram(Ljava/lang/String;)Lio/dropwizard/metrics/Histogram;
+#histogram(Lio/dropwizard/metrics/MetricName;)Lio/dropwizard/metrics/Histogram;
+#meter(Ljava/lang/String;)Lio/dropwizard/metrics/Meter;
+#meter(Lio/dropwizard/metrics/MetricName;)Lio/dropwizard/metrics/Meter;
+#timer(Ljava/lang/String;)Lio/dropwizard/metrics/Timer;
+#timer(Lio/dropwizard/metrics/MetricName;)Lio/dropwizard/metrics/Timer;
+#remove(Lio/dropwizard/metrics/MetricName;)Z
+#removeAll()V
+#removeMatching(Lio/dropwizard/metrics/MetricFilter;)V
+#addListener(Lio/dropwizard/metrics/MetricRegistryListener;)V
+#removeListener(Lio/dropwizard/metrics/MetricRegistryListener;)V
+#getNames()Ljava/util/SortedSet;
+#getGauges()Ljava/util/SortedMap;
+#getGauges(Lio/dropwizard/metrics/MetricFilter;)Ljava/util/SortedMap;
+#getCounters()Ljava/util/SortedMap;
+#getCounters(Lio/dropwizard/metrics/MetricFilter;)Ljava/util/SortedMap;
+#getHistograms()Ljava/util/SortedMap;
+#getHistograms(Lio/dropwizard/metrics/MetricFilter;)Ljava/util/SortedMap;
+#getMeters()Ljava/util/SortedMap;
+#getMeters(Lio/dropwizard/metrics/MetricFilter;)Ljava/util/SortedMap;
+#getTimers()Ljava/util/SortedMap;
+#getTimers(Lio/dropwizard/metrics/MetricFilter;)Ljava/util/SortedMap;
+#getOrAdd(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/MetricRegistry$MetricBuilder;)Lio/dropwizard/metrics/Metric;
+#getMetrics()Ljava/util/Map;

+###io/dropwizard/metrics/InstrumentedScheduledExecutorService
@0.1.9
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;Lio/dropwizard/metrics/MetricRegistry;)V
+#<init>(Ljava/util/concurrent/ScheduledExecutorService;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)V
+#schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#execute(Ljava/lang/Runnable;)V

+###io/dropwizard/metrics/MetricRegistryListener
@0.1.9
+#onGaugeAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Gauge;)V
+#onGaugeRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onCounterAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Counter;)V
+#onCounterRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onHistogramAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Histogram;)V
+#onHistogramRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onMeterAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Meter;)V
+#onMeterRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onTimerAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Timer;)V
+#onTimerRemoved(Lio/dropwizard/metrics/MetricName;)V

+###io/dropwizard/metrics/MetricName
@0.1.9
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/util/Map;)V
+#getKey()Ljava/lang/String;
+#getTags()Ljava/util/Map;
+#resolve(Ljava/lang/String;)Lio/dropwizard/metrics/MetricName;
+#tagged(Ljava/util/Map;)Lio/dropwizard/metrics/MetricName;
+#tagged([Ljava/lang/String;)Lio/dropwizard/metrics/MetricName;
+#join([Lio/dropwizard/metrics/MetricName;)Lio/dropwizard/metrics/MetricName;
+#build([Ljava/lang/String;)Lio/dropwizard/metrics/MetricName;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lio/dropwizard/metrics/MetricName;)I
+#compareTo(Ljava/lang/Object;)I

+###io/dropwizard/metrics/Metric
@0.1.9

+###io/dropwizard/metrics/Counting
@0.1.9
+#getCount()J

+###io/dropwizard/metrics/EWMA
@0.1.9
+#oneMinuteEWMA()Lio/dropwizard/metrics/EWMA;
+#fiveMinuteEWMA()Lio/dropwizard/metrics/EWMA;
+#fifteenMinuteEWMA()Lio/dropwizard/metrics/EWMA;
+#<init>(DJLjava/util/concurrent/TimeUnit;)V
+#update(J)V
+#tick()V
+#getRate(Ljava/util/concurrent/TimeUnit;)D

+###io/dropwizard/metrics/JmxAttributeGauge
@0.1.9
+#<init>(Ljavax/management/ObjectName;Ljava/lang/String;)V
+#<init>(Ljavax/management/MBeanServerConnection;Ljavax/management/ObjectName;Ljava/lang/String;)V
+#getValue()Ljava/lang/Object;

+###io/dropwizard/metrics/MetricSet
@0.1.9
+#getMetrics()Ljava/util/Map;

+###io/dropwizard/metrics/JmxReporter$JmxTimerMBean
@0.1.9
+#getMin()D
+#getMax()D
+#getMean()D
+#getStdDev()D
+#get50thPercentile()D
+#get75thPercentile()D
+#get95thPercentile()D
+#get98thPercentile()D
+#get99thPercentile()D
+#get999thPercentile()D
+#values()[J
+#getDurationUnit()Ljava/lang/String;

+###io/dropwizard/metrics/JmxReporter$JmxGaugeMBean
@0.1.9
+#getValue()Ljava/lang/Object;

+###io/dropwizard/metrics/ConsoleReporter
@0.1.9
+#forRegistry(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/ConsoleReporter$Builder;
+#report(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V

+###io/dropwizard/metrics/Snapshot
@0.1.9
+#<init>()V
+#getValue(D)D
+#getValues()[J
+#size()I
+#getMedian()D
+#get75thPercentile()D
+#get95thPercentile()D
+#get98thPercentile()D
+#get99thPercentile()D
+#get999thPercentile()D
+#getMax()J
+#getMean()D
+#getMin()J
+#getStdDev()D
+#dump(Ljava/io/OutputStream;)V

+###io/dropwizard/metrics/JmxReporter$JmxMeterMBean
@0.1.9
+#getCount()J
+#getMeanRate()D
+#getOneMinuteRate()D
+#getFiveMinuteRate()D
+#getFifteenMinuteRate()D
+#getRateUnit()Ljava/lang/String;

+###io/dropwizard/metrics/UniformSnapshot
@0.1.9
+#<init>(Ljava/util/Collection;)V
+#<init>([J)V
+#getValue(D)D
+#size()I
+#getValues()[J
+#getMax()J
+#getMin()J
+#getMean()D
+#getStdDev()D
+#dump(Ljava/io/OutputStream;)V

+###io/dropwizard/metrics/Metered
@0.1.9
+#getCount()J
+#getFifteenMinuteRate()D
+#getFiveMinuteRate()D
+#getMeanRate()D
+#getOneMinuteRate()D

+###io/dropwizard/metrics/ObjectNameFactory
@0.1.9
+#createName(Ljava/lang/String;Ljava/lang/String;Lio/dropwizard/metrics/MetricName;)Ljavax/management/ObjectName;

+###io/dropwizard/metrics/ExponentiallyDecayingReservoir
@0.1.9
+#<init>()V
+#<init>(ID)V
+#<init>(IDLio/dropwizard/metrics/Clock;)V
+#size()I
+#update(J)V
+#update(JJ)V
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/HdrHistogramResetOnSnapshotReservoir
@0.1.9
+#<init>()V
+#<init>(Lorg/HdrHistogram/Recorder;)V
+#size()I
+#update(J)V
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/SlidingTimeWindowReservoir
@0.1.9
+#<init>(JLjava/util/concurrent/TimeUnit;)V
+#<init>(JLjava/util/concurrent/TimeUnit;Lio/dropwizard/metrics/Clock;)V
+#size()I
+#update(J)V
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/Timer$Context
@0.1.9
+#stop()J
+#close()V
+#toString()Ljava/lang/String;

+###io/dropwizard/metrics/ScheduledReporter
@0.1.9
+#start(JLjava/util/concurrent/TimeUnit;)V
+#stop()V
+#close()V
+#report()V
+#report(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V

+###io/dropwizard/metrics/JvmAttributeGaugeSet
@0.1.9
+#<init>()V
+#<init>(Ljava/lang/management/RuntimeMXBean;)V
+#getMetrics()Ljava/util/Map;

+###io/dropwizard/metrics/Counter
@0.1.9
+#<init>()V
+#inc()V
+#inc(J)V
+#dec()V
+#dec(J)V
+#getCount()J
+#toString()Ljava/lang/String;

+###io/dropwizard/metrics/JmxReporter$JmxHistogramMBean
@0.1.9
+#getCount()J
+#getMin()J
+#getMax()J
+#getMean()D
+#getStdDev()D
+#get50thPercentile()D
+#get75thPercentile()D
+#get95thPercentile()D
+#get98thPercentile()D
+#get99thPercentile()D
+#get999thPercentile()D
+#values()[J

+###io/dropwizard/metrics/SharedMetricRegistries
@0.1.9
+#clear()V
+#names()Ljava/util/Set;
+#remove(Ljava/lang/String;)V
+#add(Ljava/lang/String;Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/MetricRegistry;
+#getOrCreate(Ljava/lang/String;)Lio/dropwizard/metrics/MetricRegistry;
+#setDefault(Ljava/lang/String;)Lio/dropwizard/metrics/MetricRegistry;
+#setDefault(Ljava/lang/String;Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/MetricRegistry;
+#getDefault()Lio/dropwizard/metrics/MetricRegistry;

+###io/dropwizard/metrics/RatioGauge
@0.1.9
+#<init>()V
+#getValue()Ljava/lang/Double;
+#getValue()Ljava/lang/Object;

+###io/dropwizard/metrics/JmxReporter
@0.1.9
+#forRegistry(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#start()V
+#stop()V
+#close()V

+###io/dropwizard/metrics/HdrHistogramReservoir
@0.1.9
+#<init>()V
+#<init>(Lorg/HdrHistogram/Recorder;)V
+#size()I
+#update(J)V
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/WeightedSnapshot$WeightedSample
@0.1.9
+#<init>(JD)V

+###io/dropwizard/metrics/Slf4jReporter$LoggingLevel
@0.1.9
+#values()[Lio/dropwizard/metrics/Slf4jReporter$LoggingLevel;
+#valueOf(Ljava/lang/String;)Lio/dropwizard/metrics/Slf4jReporter$LoggingLevel;

+###io/dropwizard/metrics/MetricFilter
@0.1.9
+#matches(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Metric;)Z

+###io/dropwizard/metrics/MetricRegistry$MetricBuilder
@0.1.9
+#newMetric()Lio/dropwizard/metrics/Metric;
+#isInstance(Lio/dropwizard/metrics/Metric;)Z

+###io/dropwizard/metrics/Clock$CpuTimeClock
@0.1.9
+#<init>()V
+#getTick()J

+###io/dropwizard/metrics/Reservoir
@0.1.9
+#size()I
+#update(J)V
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/JmxReporter$Builder
@0.1.9
+#registerWith(Ljavax/management/MBeanServer;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#convertRatesTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#createsObjectNamesWith(Lio/dropwizard/metrics/ObjectNameFactory;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#convertDurationsTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#filter(Lio/dropwizard/metrics/MetricFilter;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#inDomain(Ljava/lang/String;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#specificDurationUnits(Ljava/util/Map;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#specificRateUnits(Ljava/util/Map;)Lio/dropwizard/metrics/JmxReporter$Builder;
+#build()Lio/dropwizard/metrics/JmxReporter;

+###io/dropwizard/metrics/Reporter
@0.1.9

+###io/dropwizard/metrics/JmxReporter$MetricMBean
@0.1.9
+#objectName()Ljavax/management/ObjectName;

+###io/dropwizard/metrics/DerivativeGauge
@0.1.9
+#getValue()Ljava/lang/Object;

+###io/dropwizard/metrics/InstrumentedThreadFactory
@0.1.9
+#<init>(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;)V
+#<init>(Ljava/util/concurrent/ThreadFactory;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;

+###io/dropwizard/metrics/CachedGauge
@0.1.9
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###io/dropwizard/metrics/Histogram
@0.1.9
+#<init>(Lio/dropwizard/metrics/Reservoir;)V
+#update(I)V
+#update(J)V
+#getCount()J
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;
+#toString()Ljava/lang/String;

+###io/dropwizard/metrics/UniformReservoir
@0.1.9
+#<init>()V
+#<init>(I)V
+#size()I
+#update(J)V
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/Slf4jReporter$Builder
@0.1.9
+#outputTo(Lorg/slf4j/Logger;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#markWith(Lorg/slf4j/Marker;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#prefixedWith(Ljava/lang/String;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#convertRatesTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#convertDurationsTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#filter(Lio/dropwizard/metrics/MetricFilter;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#withLoggingLevel(Lio/dropwizard/metrics/Slf4jReporter$LoggingLevel;)Lio/dropwizard/metrics/Slf4jReporter$Builder;
+#build()Lio/dropwizard/metrics/Slf4jReporter;

+###io/dropwizard/metrics/Timer
@0.1.9
+#<init>()V
+#<init>(Lio/dropwizard/metrics/Reservoir;)V
+#<init>(Lio/dropwizard/metrics/Reservoir;Lio/dropwizard/metrics/Clock;)V
+#update(JLjava/util/concurrent/TimeUnit;)V
+#time(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
+#time(Ljava/lang/Runnable;)V
+#time()Lio/dropwizard/metrics/Timer$Context;
+#getCount()J
+#getFifteenMinuteRate()D
+#getFiveMinuteRate()D
+#getMeanRate()D
+#getOneMinuteRate()D
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;
+#toString()Ljava/lang/String;

+###io/dropwizard/metrics/InstrumentedExecutorService
@0.1.9
+#<init>(Ljava/util/concurrent/ExecutorService;Lio/dropwizard/metrics/MetricRegistry;)V
+#<init>(Ljava/util/concurrent/ExecutorService;Lio/dropwizard/metrics/MetricRegistry;Ljava/lang/String;)V
+#execute(Ljava/lang/Runnable;)V
+#submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
+#submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#invokeAll(Ljava/util/Collection;)Ljava/util/List;
+#invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
+#invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
+#invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#shutdown()V
+#shutdownNow()Ljava/util/List;
+#isShutdown()Z
+#isTerminated()Z
+#awaitTermination(JLjava/util/concurrent/TimeUnit;)Z

+###io/dropwizard/metrics/Sampling
@0.1.9
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/SlidingWindowReservoir
@0.1.9
+#<init>(I)V
+#size()I
+#update(J)V
+#getSnapshot()Lio/dropwizard/metrics/Snapshot;

+###io/dropwizard/metrics/Clock
@0.1.9
+#<init>()V
+#getTick()J
+#getTime()J
+#toString()Ljava/lang/String;
+#defaultClock()Lio/dropwizard/metrics/Clock;

+###io/dropwizard/metrics/RatioGauge$Ratio
@0.1.9
+#of(DD)Lio/dropwizard/metrics/RatioGauge$Ratio;
+#getValue()D
+#toString()Ljava/lang/String;

+###io/dropwizard/metrics/Clock$UserTimeClock
@0.1.9
+#<init>()V
+#getTick()J

+###io/dropwizard/metrics/JmxReporter$JmxCounterMBean
@0.1.9
+#getCount()J

+###io/dropwizard/metrics/MetricRegistryListener$Base
@0.1.9
+#<init>()V
+#onGaugeAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Gauge;)V
+#onGaugeRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onCounterAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Counter;)V
+#onCounterRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onHistogramAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Histogram;)V
+#onHistogramRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onMeterAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Meter;)V
+#onMeterRemoved(Lio/dropwizard/metrics/MetricName;)V
+#onTimerAdded(Lio/dropwizard/metrics/MetricName;Lio/dropwizard/metrics/Timer;)V
+#onTimerRemoved(Lio/dropwizard/metrics/MetricName;)V

+###com/networknt/metrics/JVMMetricsUtil
@1.6.14
+#<init>()V
+#trackAllJVMMetrics(Lio/dropwizard/metrics/MetricRegistry;Ljava/util/Map;)V
@2.0.0-BETA2
-###com/networknt/metrics/JVMMetricsUtil

+###com/networknt/metrics/JVMMetricsInfluxDbReporter
@1.6.14
+#<init>(Lio/dropwizard/metrics/MetricRegistry;Lio/dropwizard/metrics/influxdb/InfluxDbSender;Ljava/lang/String;Lio/dropwizard/metrics/MetricFilter;Ljava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;Ljava/util/Map;)V
+#report(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V
@2.0.0-BETA2
-###com/networknt/metrics/JVMMetricsInfluxDbReporter

+###io/dropwizard/metrics/CsvReporter
@0.1.9
+#forRegistry(Lio/dropwizard/metrics/MetricRegistry;)Lio/dropwizard/metrics/CsvReporter$Builder;
+#report(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V
@1.1.8
-###io/dropwizard/metrics/CsvReporter

+###io/dropwizard/metrics/FixedNameCsvFileProvider
@0.1.9
+#<init>()V
+#getFile(Ljava/io/File;Lio/dropwizard/metrics/MetricName;)Ljava/io/File;
@1.1.8
-###io/dropwizard/metrics/FixedNameCsvFileProvider

+###io/dropwizard/metrics/CsvFileProvider
@0.1.9
+#getFile(Ljava/io/File;Lio/dropwizard/metrics/MetricName;)Ljava/io/File;
@1.1.8
-###io/dropwizard/metrics/CsvFileProvider

+###io/dropwizard/metrics/CsvReporter$Builder
@0.1.9
+#formatFor(Ljava/util/Locale;)Lio/dropwizard/metrics/CsvReporter$Builder;
+#convertRatesTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/CsvReporter$Builder;
+#convertDurationsTo(Ljava/util/concurrent/TimeUnit;)Lio/dropwizard/metrics/CsvReporter$Builder;
+#withClock(Lio/dropwizard/metrics/Clock;)Lio/dropwizard/metrics/CsvReporter$Builder;
+#filter(Lio/dropwizard/metrics/MetricFilter;)Lio/dropwizard/metrics/CsvReporter$Builder;
+#withCsvFileProvider(Lio/dropwizard/metrics/CsvFileProvider;)Lio/dropwizard/metrics/CsvReporter$Builder;
+#build(Ljava/io/File;)Lio/dropwizard/metrics/CsvReporter;
@1.1.8
-###io/dropwizard/metrics/CsvReporter$Builder
