
+###org/apache/flink/formats/json/JsonRowSerializationSchema
@1.5.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;)V
+#serialize(Lorg/apache/flink/types/Row;)[B
+#serialize(Ljava/lang/Object;)[B
@1.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.9.0
*#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V[deprecated]
-#<init>(Ljava/lang/String;)V
@1.11.0
+#builder()Lorg/apache/flink/formats/json/JsonRowSerializationSchema$Builder;
-#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V[deprecated]
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/JsonRowFormatFactory
@1.6.0
+#<init>()V
+#requiredContext()Ljava/util/Map;
+#supportsSchemaDerivation()Z
+#supportedProperties()Ljava/util/List;
+#createDeserializationSchema(Ljava/util/Map;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#createSerializationSchema(Ljava/util/Map;)Lorg/apache/flink/api/common/serialization/SerializationSchema;
@1.7.0
-#requiredContext()Ljava/util/Map;
-#supportsSchemaDerivation()Z
-#supportedProperties()Ljava/util/List;
@1.14.0
-###org/apache/flink/formats/json/JsonRowFormatFactory

+###org/apache/flink/formats/json/JsonRowDeserializationSchema$Builder
@1.9.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;)V
+#failOnMissingField()Lorg/apache/flink/formats/json/JsonRowDeserializationSchema$Builder;
+#build()Lorg/apache/flink/formats/json/JsonRowDeserializationSchema;
@1.11.0
+#ignoreParseErrors()Lorg/apache/flink/formats/json/JsonRowDeserializationSchema$Builder;

+###org/apache/flink/formats/json/JsonRowSerializationSchema$Builder
@1.9.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;)V
+#build()Lorg/apache/flink/formats/json/JsonRowSerializationSchema;
@1.11.0
*#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V[deprecated]
*#<init>(Ljava/lang/String;)V[deprecated]
+#withTypeInfo(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/formats/json/JsonRowSerializationSchema$Builder;

+###org/apache/flink/formats/json/JsonRowDeserializationSchema
@1.5.0
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/String;)V
+#deserialize([B)Lorg/apache/flink/types/Row;
+#isEndOfStream(Lorg/apache/flink/types/Row;)Z
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#setFailOnMissingField(Z)V
+#isEndOfStream(Ljava/lang/Object;)Z
+#deserialize([B)Ljava/lang/Object;
@1.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@1.9.0
*#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V[deprecated]
*#<init>(Ljava/lang/String;)V[deprecated]
*#setFailOnMissingField(Z)V[deprecated]
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/JsonNodeDeserializationSchema
@1.5.0
+#<init>()V
+#deserialize([B)Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/node/ObjectNode;
+#deserialize([B)Ljava/lang/Object;
@1.16.0
-#deserialize([B)Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/node/ObjectNode;
-#deserialize([B)Ljava/lang/Object;

+###org/apache/flink/formats/json/JsonRowSchemaConverter
@1.6.0
+#convert(Ljava/lang/String;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;

+###org/apache/flink/table/descriptors/Json
@1.5.0
+#<init>()V
+#failOnMissingField(Z)Lorg/apache/flink/table/descriptors/Json;
+#jsonSchema(Ljava/lang/String;)Lorg/apache/flink/table/descriptors/Json;
+#schema(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/table/descriptors/Json;
+#deriveSchema()Lorg/apache/flink/table/descriptors/Json;
+#addFormatProperties(Lorg/apache/flink/table/descriptors/DescriptorProperties;)V
@1.7.0
-#addFormatProperties(Lorg/apache/flink/table/descriptors/DescriptorProperties;)V
@1.10.0
*#deriveSchema()Lorg/apache/flink/table/descriptors/Json;[deprecated]
@1.11.0
+#ignoreParseErrors(Z)Lorg/apache/flink/table/descriptors/Json;
*#jsonSchema(Ljava/lang/String;)Lorg/apache/flink/table/descriptors/Json;[deprecated]
*#schema(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/table/descriptors/Json;[deprecated]
@1.14.0
-###org/apache/flink/table/descriptors/Json

+###org/apache/flink/table/descriptors/JsonValidator
@1.5.0
+#<init>()V
+#validate(Lorg/apache/flink/table/descriptors/DescriptorProperties;)V
@1.14.0
-###org/apache/flink/table/descriptors/JsonValidator

+###org/apache/flink/formats/json/RowDataToJsonConverters
@1.12.0
+#<init>(Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
+#createConverter(Lorg/apache/flink/table/types/logical/LogicalType;)Lorg/apache/flink/formats/json/RowDataToJsonConverters$RowDataToJsonConverter;
@1.13.0
+#<init>(Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
@1.14.0
+#<init>(Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V

+###org/apache/flink/formats/json/JsonRowDataDeserializationSchema
@1.11.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/json/TimestampFormat;)V
+#deserialize([B)Lorg/apache/flink/table/data/RowData;
+#isEndOfStream(Lorg/apache/flink/table/data/RowData;)Z
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isEndOfStream(Ljava/lang/Object;)Z
+#deserialize([B)Ljava/lang/Object;
@1.13.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/common/TimestampFormat;)V
+#deserializeToJsonNode([B)Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;
+#convertToRowData(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;)Lorg/apache/flink/table/data/RowData;
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/json/TimestampFormat;)V
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/RowDataToJsonConverters$RowDataToJsonConverter
@1.12.0
+#convert(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/ObjectMapper;Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;Ljava/lang/Object;)Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;

+###org/apache/flink/formats/json/canal/CanalJsonDecodingFormat
@1.13.0
+#<init>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/flink/formats/common/TimestampFormat;)V
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#listReadableMetadata()Ljava/util/Map;
+#applyReadableMetadata(Ljava/util/List;)V
+#getChangelogMode()Lorg/apache/flink/table/connector/ChangelogMode;
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Ljava/lang/Object;
@1.15.0
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;[[I)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;[[I)Ljava/lang/Object;
-#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
-#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Ljava/lang/Object;

+###org/apache/flink/formats/json/canal/CanalJsonOptions
@1.12.0
+#<init>()V
+#validateDecodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
+#validateEncodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
@1.14.0
-###org/apache/flink/formats/json/canal/CanalJsonOptions

+###org/apache/flink/formats/json/canal/CanalJsonFormatFactory
@1.11.0
+#<init>()V
+#createDecodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/DecodingFormat;
+#createEncodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/EncodingFormat;
+#factoryIdentifier()Ljava/lang/String;
+#requiredOptions()Ljava/util/Set;
+#optionalOptions()Ljava/util/Set;

+###org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema
@1.11.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/json/TimestampFormat;)V
+#deserialize([B)Lorg/apache/flink/table/data/RowData;
+#deserialize([BLorg/apache/flink/util/Collector;)V
+#isEndOfStream(Lorg/apache/flink/table/data/RowData;)Z
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isEndOfStream(Ljava/lang/Object;)Z
+#deserialize([B)Ljava/lang/Object;
@1.12.0
+#builder(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/json/TimestampFormat;)V
@1.13.0
+#builder(Lorg/apache/flink/table/types/DataType;Ljava/util/List;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
-#builder(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder
@1.12.0
+#setDatabase(Ljava/lang/String;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
+#setTable(Ljava/lang/String;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
+#setIgnoreParseErrors(Z)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
+#setTimestampFormat(Lorg/apache/flink/formats/json/TimestampFormat;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
+#build()Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema;
@1.13.0
+#setTimestampFormat(Lorg/apache/flink/formats/common/TimestampFormat;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;
-#setTimestampFormat(Lorg/apache/flink/formats/json/TimestampFormat;)Lorg/apache/flink/formats/json/canal/CanalJsonDeserializationSchema$Builder;

+###org/apache/flink/formats/json/canal/CanalJsonSerializationSchema
@1.12.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V
+#serialize(Lorg/apache/flink/table/data/RowData;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#serialize(Ljava/lang/Object;)[B
@1.13.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
@1.14.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V

+###org/apache/flink/formats/json/JsonToRowDataConverters$JsonToRowDataConverter
@1.12.0
+#convert(Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonNode;)Ljava/lang/Object;

+###org/apache/flink/formats/json/JsonOptions
@1.11.0
+#<init>()V
+#getTimestampFormat(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/formats/json/TimestampFormat;
@1.12.0
+#getMapNullKeyMode(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;
+#validateDecodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
+#validateEncodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
@1.13.0
+#getTimestampFormat(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/formats/common/TimestampFormat;
-#getTimestampFormat(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/formats/json/TimestampFormat;
@1.14.0
-###org/apache/flink/formats/json/JsonOptions

+###org/apache/flink/formats/json/JsonOptions$MapNullKeyMode
@1.12.0
+#values()[Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;
@1.14.0
-###org/apache/flink/formats/json/JsonOptions$MapNullKeyMode

+###org/apache/flink/formats/json/maxwell/MaxwellJsonSerializationSchema
@1.12.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V
+#serialize(Lorg/apache/flink/table/data/RowData;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#serialize(Ljava/lang/Object;)[B
@1.13.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
@1.14.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V

+###org/apache/flink/formats/json/maxwell/MaxwellJsonDeserializationSchema
@1.12.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/json/TimestampFormat;)V
+#deserialize([B)Lorg/apache/flink/table/data/RowData;
+#deserialize([BLorg/apache/flink/util/Collector;)V
+#isEndOfStream(Lorg/apache/flink/table/data/RowData;)Z
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isEndOfStream(Ljava/lang/Object;)Z
+#deserialize([B)Ljava/lang/Object;
@1.13.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/common/TimestampFormat;)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/json/TimestampFormat;)V
@1.14.0
+#<init>(Lorg/apache/flink/table/types/DataType;Ljava/util/List;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/common/TimestampFormat;)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/common/TimestampFormat;)V
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/maxwell/MaxwellJsonFormatFactory
@1.12.0
+#<init>()V
+#createDecodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/DecodingFormat;
+#createEncodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/EncodingFormat;
+#factoryIdentifier()Ljava/lang/String;
+#requiredOptions()Ljava/util/Set;
+#optionalOptions()Ljava/util/Set;

+###org/apache/flink/formats/json/maxwell/MaxwellJsonOptions
@1.12.0
+#<init>()V
+#validateDecodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
+#validateEncodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
@1.14.0
-###org/apache/flink/formats/json/maxwell/MaxwellJsonOptions

+###org/apache/flink/formats/json/JsonToRowDataConverters
@1.12.0
+#<init>(ZZLorg/apache/flink/formats/json/TimestampFormat;)V
+#createRowConverter(Lorg/apache/flink/table/types/logical/RowType;)Lorg/apache/flink/formats/json/JsonToRowDataConverters$JsonToRowDataConverter;
@1.12.1
+#createConverter(Lorg/apache/flink/table/types/logical/LogicalType;)Lorg/apache/flink/formats/json/JsonToRowDataConverters$JsonToRowDataConverter;
@1.13.0
+#<init>(ZZLorg/apache/flink/formats/common/TimestampFormat;)V
-#<init>(ZZLorg/apache/flink/formats/json/TimestampFormat;)V

+###org/apache/flink/formats/json/JsonFormatFactory
@1.11.0
+#<init>()V
+#createDecodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/DecodingFormat;
+#createEncodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/EncodingFormat;
+#factoryIdentifier()Ljava/lang/String;
+#requiredOptions()Ljava/util/Set;
+#optionalOptions()Ljava/util/Set;
@1.15.0
+#forwardOptions()Ljava/util/Set;

+###org/apache/flink/formats/json/JsonRowDataSerializationSchema
@1.11.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;)V
+#serialize(Lorg/apache/flink/table/data/RowData;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#serialize(Ljava/lang/Object;)[B
@1.12.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;)V
@1.13.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
@1.14.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/debezium/DebeziumJsonDecodingFormat
@1.12.0
+#<init>(ZZLorg/apache/flink/formats/json/TimestampFormat;)V
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#listReadableMetadata()Ljava/util/Map;
+#applyReadableMetadata(Ljava/util/List;)V
+#getChangelogMode()Lorg/apache/flink/table/connector/ChangelogMode;
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Ljava/lang/Object;
@1.13.0
+#<init>(ZZLorg/apache/flink/formats/common/TimestampFormat;)V
-#<init>(ZZLorg/apache/flink/formats/json/TimestampFormat;)V
@1.15.0
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;[[I)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;[[I)Ljava/lang/Object;
-#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
-#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Ljava/lang/Object;

+###org/apache/flink/formats/json/debezium/DebeziumJsonSerializationSchema
@1.12.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V
+#serialize(Lorg/apache/flink/table/data/RowData;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#serialize(Ljava/lang/Object;)[B
@1.13.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/json/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;)V
@1.14.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;Ljava/lang/String;Z)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonOptions$MapNullKeyMode;Ljava/lang/String;Z)V

+###org/apache/flink/formats/json/debezium/DebeziumJsonDeserializationSchema
@1.11.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/json/TimestampFormat;)V
+#deserialize([B)Lorg/apache/flink/table/data/RowData;
+#deserialize([BLorg/apache/flink/util/Collector;)V
+#isEndOfStream(Lorg/apache/flink/table/data/RowData;)Z
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isEndOfStream(Ljava/lang/Object;)Z
+#deserialize([B)Ljava/lang/Object;
@1.12.0
+#<init>(Lorg/apache/flink/table/types/DataType;Ljava/util/List;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/json/TimestampFormat;)V
-#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/json/TimestampFormat;)V
@1.13.0
+#<init>(Lorg/apache/flink/table/types/DataType;Ljava/util/List;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/common/TimestampFormat;)V
-#<init>(Lorg/apache/flink/table/types/DataType;Ljava/util/List;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZZLorg/apache/flink/formats/json/TimestampFormat;)V
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/debezium/DebeziumJsonOptions
@1.12.0
+#<init>()V
+#validateDecodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
+#validateEncodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
@1.14.0
-###org/apache/flink/formats/json/debezium/DebeziumJsonOptions

+###org/apache/flink/formats/json/debezium/DebeziumJsonFormatFactory
@1.11.0
+#<init>()V
+#createDecodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/DecodingFormat;
+#createEncodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/EncodingFormat;
+#factoryIdentifier()Ljava/lang/String;
+#requiredOptions()Ljava/util/Set;
+#optionalOptions()Ljava/util/Set;

+###org/apache/flink/formats/common/TimeFormats
@1.13.0

+###org/apache/flink/formats/common/TimestampFormat
@1.13.0
+#values()[Lorg/apache/flink/formats/common/TimestampFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/formats/common/TimestampFormat;

+###org/apache/flink/formats/json/ogg/OggJsonFormatOptions
@1.15.0

+###org/apache/flink/formats/json/ogg/OggJsonDecodingFormat
@1.15.0
+#<init>(ZLorg/apache/flink/formats/common/TimestampFormat;)V
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#listReadableMetadata()Ljava/util/Map;
+#applyReadableMetadata(Ljava/util/List;)V
+#getChangelogMode()Lorg/apache/flink/table/connector/ChangelogMode;
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Ljava/lang/Object;

+###org/apache/flink/formats/json/ogg/OggJsonSerializationSchema
@1.15.0
+#<init>(Lorg/apache/flink/table/types/logical/RowType;Lorg/apache/flink/formats/common/TimestampFormat;Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;Ljava/lang/String;Z)V
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V
+#serialize(Lorg/apache/flink/table/data/RowData;)[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#serialize(Ljava/lang/Object;)[B

+###org/apache/flink/formats/json/ogg/OggJsonDeserializationSchema
@1.15.0
+#<init>(Lorg/apache/flink/table/types/DataType;Ljava/util/List;Lorg/apache/flink/api/common/typeinfo/TypeInformation;ZLorg/apache/flink/formats/common/TimestampFormat;)V
+#deserialize([B)Lorg/apache/flink/table/data/RowData;
+#deserialize([BLorg/apache/flink/util/Collector;)V
+#isEndOfStream(Lorg/apache/flink/table/data/RowData;)Z
+#getProducedType()Lorg/apache/flink/api/common/typeinfo/TypeInformation;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isEndOfStream(Ljava/lang/Object;)Z
+#deserialize([B)Ljava/lang/Object;
@1.16.0
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V

+###org/apache/flink/formats/json/ogg/OggJsonFormatFactory
@1.15.0
+#<init>()V
+#createDecodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/DecodingFormat;
+#createEncodingFormat(Lorg/apache/flink/table/factories/DynamicTableFactory$Context;Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/table/connector/format/EncodingFormat;
+#factoryIdentifier()Ljava/lang/String;
+#requiredOptions()Ljava/util/Set;
+#optionalOptions()Ljava/util/Set;

+###org/apache/flink/formats/json/JsonSerializationSchema
@1.16.0
+#<init>()V
+#<init>(Lorg/apache/flink/util/function/SerializableSupplier;)V
+#open(Lorg/apache/flink/api/common/serialization/SerializationSchema$InitializationContext;)V
+#serialize(Ljava/lang/Object;)[B

+###org/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode
@1.14.0
+#values()[Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;

+###org/apache/flink/formats/json/JsonFormatOptions
@1.14.0

+###org/apache/flink/formats/json/canal/CanalJsonFormatOptions
@1.14.0

+###org/apache/flink/formats/json/JsonDeserializationSchema
@1.16.0
+#<init>(Ljava/lang/Class;)V
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;)V
+#<init>(Ljava/lang/Class;Lorg/apache/flink/util/function/SerializableSupplier;)V
+#<init>(Lorg/apache/flink/api/common/typeinfo/TypeInformation;Lorg/apache/flink/util/function/SerializableSupplier;)V
+#open(Lorg/apache/flink/api/common/serialization/DeserializationSchema$InitializationContext;)V
+#deserialize([B)Ljava/lang/Object;

+###org/apache/flink/formats/json/JsonFormatOptionsUtil
@1.14.0
+#getTimestampFormat(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/formats/common/TimestampFormat;
+#getMapNullKeyMode(Lorg/apache/flink/configuration/ReadableConfig;)Lorg/apache/flink/formats/json/JsonFormatOptions$MapNullKeyMode;
+#validateDecodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V
+#validateEncodingFormatOptions(Lorg/apache/flink/configuration/ReadableConfig;)V

+###org/apache/flink/formats/json/maxwell/MaxwellJsonDecodingFormat
@1.14.0
+#<init>(ZLorg/apache/flink/formats/common/TimestampFormat;)V
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#listReadableMetadata()Ljava/util/Map;
+#applyReadableMetadata(Ljava/util/List;)V
+#getChangelogMode()Lorg/apache/flink/table/connector/ChangelogMode;
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Ljava/lang/Object;
@1.15.0
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;[[I)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
+#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;[[I)Ljava/lang/Object;
-#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Lorg/apache/flink/api/common/serialization/DeserializationSchema;
-#createRuntimeDecoder(Lorg/apache/flink/table/connector/source/DynamicTableSource$Context;Lorg/apache/flink/table/types/DataType;)Ljava/lang/Object;

+###org/apache/flink/formats/json/maxwell/MaxwellJsonFormatOptions
@1.14.0

+###org/apache/flink/formats/json/debezium/DebeziumJsonFormatOptions
@1.14.0

+###org/apache/flink/formats/common/Converter
@1.15.0
+#convert(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/flink/formats/json/JsonSchemaConverter
@1.5.0
+#convert(Ljava/lang/String;)Lorg/apache/flink/api/common/typeinfo/TypeInformation;
@1.6.0
-###org/apache/flink/formats/json/JsonSchemaConverter

+###org/apache/flink/formats/json/TimestampFormat
@1.11.0
+#values()[Lorg/apache/flink/formats/json/TimestampFormat;
+#valueOf(Ljava/lang/String;)Lorg/apache/flink/formats/json/TimestampFormat;
@1.13.0
-###org/apache/flink/formats/json/TimestampFormat

+###org/apache/flink/formats/json/JsonFileSystemFormatFactory$JsonRowDataEncoder
@1.11.0
+#<init>(Lorg/apache/flink/formats/json/JsonRowDataSerializationSchema;)V
+#encode(Lorg/apache/flink/table/data/RowData;Ljava/io/OutputStream;)V
+#encode(Ljava/lang/Object;Ljava/io/OutputStream;)V
@1.12.0
-###org/apache/flink/formats/json/JsonFileSystemFormatFactory$JsonRowDataEncoder

+###org/apache/flink/formats/json/JsonFileSystemFormatFactory
@1.11.0
+#<init>()V
+#factoryIdentifier()Ljava/lang/String;
+#requiredOptions()Ljava/util/Set;
+#optionalOptions()Ljava/util/Set;
+#createReader(Lorg/apache/flink/table/factories/FileSystemFormatFactory$ReaderContext;)Lorg/apache/flink/api/common/io/InputFormat;
+#createEncoder(Lorg/apache/flink/table/factories/FileSystemFormatFactory$WriterContext;)Ljava/util/Optional;
+#createBulkWriterFactory(Lorg/apache/flink/table/factories/FileSystemFormatFactory$WriterContext;)Ljava/util/Optional;
@1.12.0
-###org/apache/flink/formats/json/JsonFileSystemFormatFactory

+###org/apache/flink/formats/json/JsonFileSystemFormatFactory$JsonInputFormat
@1.11.0
+#<init>([Lorg/apache/flink/core/fs/Path;[Lorg/apache/flink/table/types/DataType;[Ljava/lang/String;[ILjava/util/List;Ljava/lang/String;J[I[ILorg/apache/flink/formats/json/JsonRowDataDeserializationSchema;)V
+#supportsMultiPaths()Z
+#open(Lorg/apache/flink/core/fs/FileInputSplit;)V
+#reachedEnd()Z
+#readRecord(Lorg/apache/flink/table/data/RowData;[BII)Lorg/apache/flink/table/data/RowData;
+#nextRecord(Lorg/apache/flink/table/data/RowData;)Lorg/apache/flink/table/data/RowData;
+#nextRecord(Ljava/lang/Object;)Ljava/lang/Object;
+#readRecord(Ljava/lang/Object;[BII)Ljava/lang/Object;
+#open(Lorg/apache/flink/core/io/InputSplit;)V
@1.12.0
-###org/apache/flink/formats/json/JsonFileSystemFormatFactory$JsonInputFormat
