
+###org/springframework/security/jwt/crypto/cipher/CipherMetadata
@1.0.0.RELEASE
+#keySize()I

+###org/springframework/security/jwt/crypto/sign/SignatureVerifier
@1.0.0.RELEASE
+#verify([B[B)V

+###org/springframework/security/jwt/crypto/sign/EllipticCurveVerifier
@1.0.9.RELEASE
+#<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/security/interfaces/ECPublicKey;Ljava/lang/String;)V
+#algorithm()Ljava/lang/String;
+#verify([B[B)V

+###org/springframework/security/jwt/crypto/sign/MacSigner
@1.0.0.RELEASE
+#<init>([B)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljavax/crypto/SecretKey;)V
+#<init>(Ljava/lang/String;Ljavax/crypto/SecretKey;)V
+#sign([B)[B
+#verify([B[B)V
+#algorithm()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/springframework/security/jwt/crypto/sign/InvalidSignatureException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/security/jwt/crypto/sign/RsaSigner
@1.0.0.RELEASE
+#<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
+#<init>(Ljava/security/interfaces/RSAPrivateKey;)V
+#<init>(Ljava/security/interfaces/RSAPrivateKey;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#sign([B)[B
+#algorithm()Ljava/lang/String;

+###org/springframework/security/jwt/crypto/sign/RsaVerifier
@1.0.0.RELEASE
+#<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
+#<init>(Ljava/security/interfaces/RSAPublicKey;)V
+#<init>(Ljava/security/interfaces/RSAPublicKey;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#verify([B[B)V
+#algorithm()Ljava/lang/String;

+###org/springframework/security/jwt/crypto/sign/Signer
@1.0.0.RELEASE
+#sign([B)[B

+###org/springframework/security/jwt/crypto/sign/SignerVerifier
@1.0.0.RELEASE

+###org/springframework/security/jwt/AlgorithmMetadata
@1.0.0.RELEASE
+#algorithm()Ljava/lang/String;

+###org/springframework/security/jwt/Jwt
@1.0.0.RELEASE
+#getClaims()Ljava/lang/String;
+#getEncoded()Ljava/lang/String;
+#verifySignature(Lorg/springframework/security/jwt/crypto/sign/SignatureVerifier;)V

+###org/springframework/security/jwt/JwtHelper
@1.0.0.RELEASE
+#<init>()V
+#decode(Ljava/lang/String;)Lorg/springframework/security/jwt/Jwt;
+#decodeAndVerify(Ljava/lang/String;Lorg/springframework/security/jwt/crypto/sign/SignatureVerifier;)Lorg/springframework/security/jwt/Jwt;
+#encode(Ljava/lang/CharSequence;Lorg/springframework/security/jwt/crypto/sign/Signer;)Lorg/springframework/security/jwt/Jwt;
@1.0.5.RELEASE
+#encode(Ljava/lang/CharSequence;Lorg/springframework/security/jwt/crypto/sign/Signer;Ljava/util/Map;)Lorg/springframework/security/jwt/Jwt;
@1.0.7.RELEASE
+#headers(Ljava/lang/String;)Ljava/util/Map;

+###org/springframework/security/jwt/codec/Codecs
@1.0.0.RELEASE
+#<init>()V
+#b64Encode([B)[B
+#b64Decode([B)[B
+#b64UrlEncode([B)[B
+#b64UrlEncode(Ljava/lang/CharSequence;)[B
+#b64UrlDecode([B)[B
+#b64UrlDecode(Ljava/lang/CharSequence;)[B
+#utf8Encode(Ljava/lang/CharSequence;)[B
+#utf8Decode([B)Ljava/lang/String;
+#utf8Decode(Ljava/nio/ByteBuffer;)Ljava/lang/String;
+#hexEncode([B)[C
+#hexDecode(Ljava/lang/CharSequence;)[B
+#concat([[B)[B

+###org/springframework/security/jwt/BinaryFormat
@1.0.0.RELEASE
+#bytes()[B

+###org/springframework/security/jwt/JwtAlgorithms
@1.0.0.RELEASE
+#<init>()V
