
+###org/springframework/data/redis/repository/configuration/RedisRepositoriesRegistrar
@1.7.0.RELEASE
+#<init>()V

+###org/springframework/data/redis/core/RedisOperations
@1.0.0.RELEASE
+#execute(Lorg/springframework/data/redis/core/RedisCallback;)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/SessionCallback;)Ljava/lang/Object;
+#hasKey(Ljava/lang/Object;)Ljava/lang/Boolean;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/util/Collection;)V
+#type(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/DataType;
+#keys(Ljava/lang/Object;)Ljava/util/Set;
+#randomKey()Ljava/lang/Object;
+#rename(Ljava/lang/Object;Ljava/lang/Object;)V
+#renameIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#expire(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/lang/Object;Ljava/util/Date;)Ljava/lang/Boolean;
+#persist(Ljava/lang/Object;)Ljava/lang/Boolean;
+#move(Ljava/lang/Object;I)Ljava/lang/Boolean;
+#getExpire(Ljava/lang/Object;)Ljava/lang/Long;
+#watch(Ljava/lang/Object;)V
+#watch(Ljava/util/Collection;)V
+#unwatch()V
+#multi()V
+#discard()V
+#exec()Ljava/util/List;
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
+#opsForValue()Lorg/springframework/data/redis/core/ValueOperations;
+#boundValueOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundValueOperations;
+#opsForList()Lorg/springframework/data/redis/core/ListOperations;
+#boundListOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundListOperations;
+#opsForSet()Lorg/springframework/data/redis/core/SetOperations;
+#boundSetOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundSetOperations;
+#opsForZSet()Lorg/springframework/data/redis/core/ZSetOperations;
+#boundZSetOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundZSetOperations;
+#opsForHash()Lorg/springframework/data/redis/core/HashOperations;
+#boundHashOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundHashOperations;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Lorg/springframework/data/redis/core/BulkMapper;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Lorg/springframework/data/redis/core/BulkMapper;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Ljava/lang/Object;)Ljava/lang/Long;
+#getValueSerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#getKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
@1.0.3.RELEASE
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Long;
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
@1.0.4.RELEASE
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Long;
@1.1.0.M1
+#dump(Ljava/lang/Object;)[B
+#restore(Ljava/lang/Object;[BJLjava/util/concurrent/TimeUnit;)V
@1.1.0.M2
+#executePipelined(Lorg/springframework/data/redis/core/RedisCallback;)Ljava/util/List;
+#executePipelined(Lorg/springframework/data/redis/core/RedisCallback;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#executePipelined(Lorg/springframework/data/redis/core/SessionCallback;)Ljava/util/List;
+#executePipelined(Lorg/springframework/data/redis/core/SessionCallback;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;
+#exec(Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
@1.1.0.RC1
+#getExpire(Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#getHashKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#getHashValueSerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
@1.3.0.RELEASE
+#getClientList()Ljava/util/List;
+#killClient(Ljava/lang/String;I)V
+#slaveOf(Ljava/lang/String;I)V
+#slaveOfNoOne()V
@1.5.0.RELEASE
+#opsForHyperLogLog()Lorg/springframework/data/redis/core/HyperLogLogOperations;
@1.7.0.RELEASE
+#opsForCluster()Lorg/springframework/data/redis/core/ClusterOperations;
@1.8.0.RELEASE
+#executeWithStickyConnection(Lorg/springframework/data/redis/core/RedisCallback;)Ljava/io/Closeable;
+#opsForGeo()Lorg/springframework/data/redis/core/GeoOperations;
+#boundGeoOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundGeoOperations;
@2.0.0.RELEASE
+#delete(Ljava/lang/Object;)Ljava/lang/Boolean;
+#delete(Ljava/util/Collection;)Ljava/lang/Long;
-#delete(Ljava/lang/Object;)V
-#delete(Ljava/util/Collection;)V
@2.1.0.RELEASE
+#countExistingKeys(Ljava/util/Collection;)Ljava/lang/Long;
+#unlink(Ljava/lang/Object;)Ljava/lang/Boolean;
+#unlink(Ljava/util/Collection;)Ljava/lang/Long;
+#restore(Ljava/lang/Object;[BJLjava/util/concurrent/TimeUnit;Z)V
@2.2.0.RELEASE
+#opsForStream()Lorg/springframework/data/redis/core/StreamOperations;
+#opsForStream(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/core/StreamOperations;
+#boundStreamOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundStreamOperations;
@2.3.0.RELEASE
+#expire(Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Boolean;
+#expireAt(Ljava/lang/Object;Ljava/time/Instant;)Ljava/lang/Boolean;
@2.6.0
+#copy(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Boolean;
@2.7.0
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@3.0.0
+#replicaOf(Ljava/lang/String;I)V
+#replicaOfNoOne()V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Long;
-#slaveOf(Ljava/lang/String;I)V
-#slaveOfNoOne()V
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V

+###org/springframework/data/redis/core/types/RedisClientInfo$RedisClientInfoBuilder
@1.3.0.RELEASE
+#<init>()V
+#fromString(Ljava/lang/String;)Lorg/springframework/data/redis/core/types/RedisClientInfo;

+###org/springframework/data/redis/core/types/Expiration
@1.7.0.RELEASE
+#getExpirationTimeInMilliseconds()J
+#getExpirationTimeInSeconds()J
+#getExpirationTime()J
+#getTimeUnit()Ljava/util/concurrent/TimeUnit;
+#getConverted(Ljava/util/concurrent/TimeUnit;)J
+#seconds(J)Lorg/springframework/data/redis/core/types/Expiration;
+#milliseconds(J)Lorg/springframework/data/redis/core/types/Expiration;
+#from(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/core/types/Expiration;
+#persistent()Lorg/springframework/data/redis/core/types/Expiration;
+#isPersistent()Z
@2.0.0.RELEASE
+#from(Ljava/time/Duration;)Lorg/springframework/data/redis/core/types/Expiration;
@2.4.0
+#keepTtl()Lorg/springframework/data/redis/core/types/Expiration;
+#isKeepTtl()Z
@2.6.0
+#unixTimestamp(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/core/types/Expiration;
+#isUnixTimestamp()Z

+###org/springframework/data/redis/core/TimeToLive
@1.7.0.RELEASE
+#unit()Ljava/util/concurrent/TimeUnit;

+###org/springframework/data/redis/core/RedisConnectionUtils
@1.0.0.RELEASE
+#<init>()V
+#bindConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/connection/RedisConnection;
+#getConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/connection/RedisConnection;
+#doGetConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;ZZ)Lorg/springframework/data/redis/connection/RedisConnection;
+#releaseConnection(Lorg/springframework/data/redis/connection/RedisConnection;Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#unbindConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#isConnectionTransactional(Lorg/springframework/data/redis/connection/RedisConnection;Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z
@1.3.0.RELEASE
+#bindConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;Z)Lorg/springframework/data/redis/connection/RedisConnection;
+#getConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;Z)Lorg/springframework/data/redis/connection/RedisConnection;
+#doGetConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;ZZZ)Lorg/springframework/data/redis/connection/RedisConnection;
-#doGetConnection(Lorg/springframework/data/redis/connection/RedisConnectionFactory;ZZ)Lorg/springframework/data/redis/connection/RedisConnection;
@2.1.10.RELEASE
*#releaseConnection(Lorg/springframework/data/redis/connection/RedisConnection;Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V[deprecated]
+#releaseConnection(Lorg/springframework/data/redis/connection/RedisConnection;Lorg/springframework/data/redis/connection/RedisConnectionFactory;Z)V
@2.4.2
*#releaseConnection(Lorg/springframework/data/redis/connection/RedisConnection;Lorg/springframework/data/redis/connection/RedisConnectionFactory;Z)V[deprecated]
@3.0.0
-#releaseConnection(Lorg/springframework/data/redis/connection/RedisConnection;Lorg/springframework/data/redis/connection/RedisConnectionFactory;Z)V[deprecated]

+###org/springframework/data/redis/core/script/RedisScript
@1.1.0.M2
+#getSha1()Ljava/lang/String;
+#getResultType()Ljava/lang/Class;
+#getScriptAsString()Ljava/lang/String;
@2.0.0.RELEASE
+#returnsRawValue()Z
+#of(Ljava/lang/String;)Lorg/springframework/data/redis/core/script/RedisScript;
+#of(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/redis/core/script/RedisScript;
@2.2.0.RELEASE
+#of(Lorg/springframework/core/io/Resource;)Lorg/springframework/data/redis/core/script/RedisScript;
+#of(Lorg/springframework/core/io/Resource;Ljava/lang/Class;)Lorg/springframework/data/redis/core/script/RedisScript;

+###org/springframework/data/redis/core/ReactiveListOperations
@2.0.0.RELEASE
+#range(Ljava/lang/Object;JJ)Lreactor/core/publisher/Flux;
+#trim(Ljava/lang/Object;JJ)Lreactor/core/publisher/Mono;
+#size(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#leftPush(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#leftPushAll(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#leftPushAll(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#leftPushIfPresent(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#leftPush(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#rightPush(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#rightPushAll(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#rightPushAll(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#rightPushIfPresent(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#rightPush(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#set(Ljava/lang/Object;JLjava/lang/Object;)Lreactor/core/publisher/Mono;
+#remove(Ljava/lang/Object;JLjava/lang/Object;)Lreactor/core/publisher/Mono;
+#index(Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
+#leftPop(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#leftPop(Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#rightPop(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#rightPop(Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#rightPopAndLeftPush(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#rightPopAndLeftPush(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.4.0
+#indexOf(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#lastIndexOf(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.6.0
+#move(Lorg/springframework/data/redis/core/ListOperations$MoveFrom;Lorg/springframework/data/redis/core/ListOperations$MoveTo;)Lreactor/core/publisher/Mono;
+#move(Ljava/lang/Object;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;)Lreactor/core/publisher/Mono;
+#move(Lorg/springframework/data/redis/core/ListOperations$MoveFrom;Lorg/springframework/data/redis/core/ListOperations$MoveTo;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#move(Ljava/lang/Object;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;Ljava/time/Duration;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/core/index/RedisIndexDefinition$NoOpValueTransformer
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/core/index/RedisIndexDefinition$NoOpValueTransformer;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/core/index/RedisIndexDefinition$NoOpValueTransformer;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/core/index/IndexValueTransformer
@1.7.0.RELEASE

+###org/springframework/data/redis/core/ScanIteration
@1.4.0.RELEASE
+#<init>(JLjava/util/Collection;)V
+#getCursorId()J
+#getItems()Ljava/util/Collection;
+#iterator()Ljava/util/Iterator;

+###org/springframework/data/redis/core/ReactiveValueOperations
@2.0.0.RELEASE
+#set(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#set(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#setIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#setIfPresent(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#multiSet(Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#multiSetIfAbsent(Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#get(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#multiGet(Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#append(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#get(Ljava/lang/Object;JJ)Lreactor/core/publisher/Mono;
+#set(Ljava/lang/Object;Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
+#size(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#setBit(Ljava/lang/Object;JZ)Lreactor/core/publisher/Mono;
+#getBit(Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.1.0.RELEASE
+#setIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#setIfPresent(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#increment(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#increment(Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
+#increment(Ljava/lang/Object;D)Lreactor/core/publisher/Mono;
+#decrement(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#decrement(Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
+#bitField(Ljava/lang/Object;Lorg/springframework/data/redis/connection/BitFieldSubCommands;)Lreactor/core/publisher/Mono;
@2.6.0
+#getAndDelete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#getAndExpire(Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#getAndPersist(Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/core/KeyBoundCursor
@1.4.0.RELEASE
+#<init>([BJLorg/springframework/data/redis/core/ScanOptions;)V
+#getKey()[B

+###org/springframework/data/redis/core/convert/KeyspaceConfiguration$KeyspaceSettings
@1.7.0.RELEASE
+#<init>(Ljava/lang/Class;Ljava/lang/String;)V
+#<init>(Ljava/lang/Class;Ljava/lang/String;Z)V
+#getKeyspace()Ljava/lang/String;
+#getType()Ljava/lang/Class;
+#setTimeToLive(Ljava/lang/Long;)V
+#getTimeToLive()Ljava/lang/Long;
+#setTimeToLivePropertyName(Ljava/lang/String;)V
+#getTimeToLivePropertyName()Ljava/lang/String;

+###org/springframework/data/redis/core/convert/MappingConfiguration
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/index/ConfigurableIndexDefinitionProvider;Lorg/springframework/data/redis/core/convert/KeyspaceConfiguration;)V
+#getIndexConfiguration()Lorg/springframework/data/redis/core/index/ConfigurableIndexDefinitionProvider;
+#getKeyspaceConfiguration()Lorg/springframework/data/redis/core/convert/KeyspaceConfiguration;

+###org/springframework/data/redis/core/convert/MappingRedisConverter$KeyspaceIdentifier
@1.8.10.RELEASE
+#of(Ljava/lang/String;)Lorg/springframework/data/redis/core/convert/MappingRedisConverter$KeyspaceIdentifier;
+#isValid(Ljava/lang/String;)Z
+#getKeyspace()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#isPhantomKey()Z
@2.0.0.RELEASE
-###org/springframework/data/redis/core/convert/MappingRedisConverter$KeyspaceIdentifier

+###org/springframework/data/redis/cache/RedisCacheWriter
@2.0.0.RELEASE
+#nonLockingRedisCacheWriter(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/cache/RedisCacheWriter;
+#lockingRedisCacheWriter(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/cache/RedisCacheWriter;
+#put(Ljava/lang/String;[B[BLjava/time/Duration;)V
+#get(Ljava/lang/String;[B)[B
+#putIfAbsent(Ljava/lang/String;[B[BLjava/time/Duration;)[B
+#remove(Ljava/lang/String;[B)V
+#clean(Ljava/lang/String;[B)V
@2.4.0
+#clearStatistics(Ljava/lang/String;)V
+#withStatisticsCollector(Lorg/springframework/data/redis/cache/CacheStatisticsCollector;)Lorg/springframework/data/redis/cache/RedisCacheWriter;
@2.6.0
+#nonLockingRedisCacheWriter(Lorg/springframework/data/redis/connection/RedisConnectionFactory;Lorg/springframework/data/redis/cache/BatchStrategy;)Lorg/springframework/data/redis/cache/RedisCacheWriter;
+#lockingRedisCacheWriter(Lorg/springframework/data/redis/connection/RedisConnectionFactory;Lorg/springframework/data/redis/cache/BatchStrategy;)Lorg/springframework/data/redis/cache/RedisCacheWriter;

+###org/springframework/data/redis/connection/PoolConfig
@1.1.0.M1
+#<init>()V
+#setMaxIdle(I)V
+#setMinIdle(I)V
+#setMaxActive(I)V
+#setMaxWait(J)V
+#setWhenExhaustedAction(B)V
+#setTestOnBorrow(Z)V
+#setTestOnReturn(Z)V
+#setTestWhileIdle(Z)V
+#setTimeBetweenEvictionRunsMillis(J)V
+#setNumTestsPerEvictionRun(I)V
+#setMinEvictableIdleTimeMillis(J)V
+#setSoftMinEvictableIdleTimeMillis(J)V
@1.3.0.RELEASE
-#setMaxIdle(I)V
-#setMinIdle(I)V
-#setMaxWait(J)V
-#setWhenExhaustedAction(B)V
-#setTestOnBorrow(Z)V
-#setTestOnReturn(Z)V
-#setTestWhileIdle(Z)V
-#setTimeBetweenEvictionRunsMillis(J)V
-#setNumTestsPerEvictionRun(I)V
-#setMinEvictableIdleTimeMillis(J)V
-#setSoftMinEvictableIdleTimeMillis(J)V
@3.0.0
-###org/springframework/data/redis/connection/PoolConfig

+###org/springframework/data/redis/connection/RedisGeoCommands$DistanceUnit
@1.8.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisGeoCommands$DistanceUnit;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisGeoCommands$DistanceUnit;
+#getMultiplier()D
+#getAbbreviation()Ljava/lang/String;

+###org/springframework/data/redis/connection/lettuce/LettuceConnectionFactory
@1.0.3.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#afterPropertiesSet()V
+#destroy()V
+#getConnection()Lorg/springframework/data/redis/connection/RedisConnection;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getTimeout()J
+#setTimeout(J)V
@1.0.4.RELEASE
+#initConnection()V
+#resetConnection()V
+#validateConnection()V
+#getValidateConnection()Z
+#setValidateConnection(Z)V
+#getShareNativeConnection()Z
+#setShareNativeConnection(Z)V
+#getDatabase()I
+#setDatabase(I)V
@1.1.0.M1
+#<init>(Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@1.1.0.M2
+#getConvertPipelineAndTxResults()Z
+#setConvertPipelineAndTxResults(Z)V
@1.4.0.RELEASE
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
@1.6.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)V
+#getShutdownTimeout()J
+#setShutdownTimeout(J)V
+#isRedisSentinelAware()Z
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterConfiguration;)V
+#getClusterConnection()Lorg/springframework/data/redis/connection/RedisClusterConnection;
+#setUseSsl(Z)V
+#isUseSsl()Z
+#setVerifyPeer(Z)V
+#isVerifyPeer()Z
+#isStartTls()Z
+#setStartTls(Z)V
+#getClientResources()Lcom/lambdaworks/redis/resource/ClientResources;
+#setClientResources(Lcom/lambdaworks/redis/resource/ClientResources;)V
+#isClusterAware()Z
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisStandaloneConfiguration;)V
*#<init>(Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V[deprecated]
+#<init>(Lorg/springframework/data/redis/connection/RedisStandaloneConfiguration;Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterConfiguration;Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;)V
+#getReactiveConnection()Lorg/springframework/data/redis/connection/lettuce/LettuceReactiveRedisConnection;
+#getReactiveClusterConnection()Lorg/springframework/data/redis/connection/lettuce/LettuceReactiveRedisClusterConnection;
*#setHostName(Ljava/lang/String;)V[deprecated]
*#setPort(I)V[deprecated]
*#setTimeout(J)V[deprecated]
*#setUseSsl(Z)V[deprecated]
*#setVerifyPeer(Z)V[deprecated]
*#setStartTls(Z)V[deprecated]
*#setPassword(Ljava/lang/String;)V[deprecated]
*#setShutdownTimeout(J)V[deprecated]
+#getClientResources()Lio/lettuce/core/resource/ClientResources;
+#setClientResources(Lio/lettuce/core/resource/ClientResources;)V[deprecated]
+#getClientConfiguration()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;
+#getStandaloneConfiguration()Lorg/springframework/data/redis/connection/RedisStandaloneConfiguration;
+#getSentinelConfiguration()Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;
+#getClusterConfiguration()Lorg/springframework/data/redis/connection/RedisClusterConfiguration;
+#getReactiveClusterConnection()Lorg/springframework/data/redis/connection/ReactiveRedisClusterConnection;
+#getReactiveConnection()Lorg/springframework/data/redis/connection/ReactiveRedisConnection;
-#getClientResources()Lcom/lambdaworks/redis/resource/ClientResources;
-#setClientResources(Lcom/lambdaworks/redis/resource/ClientResources;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisConfiguration;Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;)V
+#getClientName()Ljava/lang/String;
+#setClientName(Ljava/lang/String;)V[deprecated]
+#getSocketConfiguration()Lorg/springframework/data/redis/connection/RedisSocketConfiguration;
@2.2.0.RELEASE
+#getEagerInitialization()Z
+#setEagerInitialization(Z)V
@2.3.0.RELEASE
+#setPipeliningFlushPolicy(Lorg/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushPolicy;)V
@2.5.0
+#getNativeClient()Lio/lettuce/core/AbstractRedisClient;
+#getRequiredNativeClient()Lio/lettuce/core/AbstractRedisClient;
@2.5.3
+#createRedisConfiguration(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisConfiguration;
+#createRedisConfiguration(Lio/lettuce/core/RedisURI;)Lorg/springframework/data/redis/connection/RedisConfiguration;
@3.0.0
-#<init>(Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V[deprecated]

+###org/springframework/data/redis/connection/lettuce/LettuceConverters
@1.1.0.M2
+#<init>()V
+#dateToLong()Lorg/springframework/core/convert/converter/Converter;
+#bytesListToBytesSet()Lorg/springframework/core/convert/converter/Converter;
+#keyValueToBytesList()Lorg/springframework/core/convert/converter/Converter;
+#bytesSetToBytesList()Lorg/springframework/core/convert/converter/Converter;
+#scoredValuesToTupleSet()Lorg/springframework/core/convert/converter/Converter;
+#scoredValueToTuple()Lorg/springframework/core/convert/converter/Converter;
+#exceptionConverter()Lorg/springframework/core/convert/converter/Converter;
+#toLong(Ljava/util/Date;)Ljava/lang/Long;
+#toBytesSet(Ljava/util/List;)Ljava/util/Set;
+#toBytesList(Lcom/lambdaworks/redis/KeyValue;)Ljava/util/List;
+#toBytesList(Ljava/util/Set;)Ljava/util/List;
+#toTupleSet(Ljava/util/List;)Ljava/util/Set;
+#toTuple(Lcom/lambdaworks/redis/ScoredValue;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
+#toScriptOutputType(Lorg/springframework/data/redis/connection/ReturnType;)Lcom/lambdaworks/redis/ScriptOutputType;
+#toBoolean(Lorg/springframework/data/redis/connection/RedisListCommands$Position;)Z
+#toInt(Z)I
+#toSortArgs(Lorg/springframework/data/redis/connection/SortParameters;)Lcom/lambdaworks/redis/SortArgs;
@1.3.0.RELEASE
+#stringToRedisClientListConverter()Lorg/springframework/core/convert/converter/Converter;
+#bytesToString()Lorg/springframework/core/convert/converter/Converter;
+#longToBooleanConverter()Lorg/springframework/core/convert/converter/Converter;
+#toString([B)Ljava/lang/String;
+#toListOfRedisClientInformation(Ljava/lang/String;)Ljava/util/List;
@1.3.2.RELEASE
-#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
@1.4.0.RELEASE
+#toTuple(Ljava/util/List;)Ljava/util/List;
+#bytesListToTupleListConverter()Lorg/springframework/core/convert/converter/Converter;
+#toMap(Ljava/util/List;)Ljava/util/Map;
+#bytesListToMapConverter()Lorg/springframework/core/convert/converter/Converter;
@1.6.0.RELEASE
+#scoredValuesToTupleList()Lorg/springframework/core/convert/converter/Converter;
+#subarray([[BI)[[B
+#boundaryToStringForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;Ljava/lang/String;)Ljava/lang/String;
+#toListOfRedisServer(Ljava/util/List;)Ljava/util/List;
+#sentinelConfigurationToRedisURI(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)Lcom/lambdaworks/redis/RedisURI;
+#toBytes(Ljava/lang/String;)[B
+#toBytes(Ljava/lang/Integer;)[B
+#toBytes(Ljava/lang/Long;)[B
+#toBytes(Ljava/lang/Double;)[B
+#boundaryToBytesForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)Ljava/lang/String;
+#boundaryToBytesForZRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)Ljava/lang/String;
@1.7.0.RELEASE
+#partitionsToClusterNodes(Lcom/lambdaworks/redis/cluster/models/partitions/Partitions;)Ljava/util/List;
+#toRedisClusterNode(Lcom/lambdaworks/redis/cluster/models/partitions/RedisClusterNode;)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#toSetArgs(Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lcom/lambdaworks/redis/protocol/SetArgs;
@1.8.0.RELEASE
+#bytesCollectionToBytesList()Lorg/springframework/core/convert/converter/Converter;
+#toBytesList(Ljava/util/Collection;)Ljava/util/List;
+#toSetArgs(Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lcom/lambdaworks/redis/SetArgs;
+#toGeoArgsUnit(Lorg/springframework/data/geo/Metric;)Lcom/lambdaworks/redis/GeoArgs$Unit;
+#toGeoArgs(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lcom/lambdaworks/redis/GeoArgs;
+#bytesSetToGeoResultsConverter()Lorg/springframework/core/convert/converter/Converter;
+#geoRadiusResponseToGeoResultsConverter(Lorg/springframework/data/geo/Metric;)Lorg/springframework/core/convert/converter/Converter;
+#geoCoordinatesToPointConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;
-#toBytesList(Ljava/util/Set;)Ljava/util/List;
-#toSetArgs(Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lcom/lambdaworks/redis/protocol/SetArgs;
@2.0.0.RELEASE
+#geoCoordinatesToPoint(Lio/lettuce/core/GeoCoordinates;)Lorg/springframework/data/geo/Point;
+#toBytesList(Lio/lettuce/core/KeyValue;)Ljava/util/List;
+#toTuple(Lio/lettuce/core/ScoredValue;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#toScriptOutputType(Lorg/springframework/data/redis/connection/ReturnType;)Lio/lettuce/core/ScriptOutputType;
+#toSortArgs(Lorg/springframework/data/redis/connection/SortParameters;)Lio/lettuce/core/SortArgs;
+#toLimit(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lio/lettuce/core/Limit;
+#toRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Lio/lettuce/core/Range;
+#toRevRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Lio/lettuce/core/Range;
+#sentinelConfigurationToRedisURI(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)Lio/lettuce/core/RedisURI;
+#partitionsToClusterNodes(Lio/lettuce/core/cluster/models/partitions/Partitions;)Ljava/util/List;
+#toRedisClusterNode(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#toSetArgs(Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lio/lettuce/core/SetArgs;
+#toGeoArgsUnit(Lorg/springframework/data/geo/Metric;)Lio/lettuce/core/GeoArgs$Unit;
+#toGeoArgs(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lio/lettuce/core/GeoArgs;
+#keyValueListUnwrapper()Lorg/springframework/data/redis/connection/convert/ListConverter;
+#transactionResultUnwrapper()Lorg/springframework/core/convert/converter/Converter;
-#toBytesList(Lcom/lambdaworks/redis/KeyValue;)Ljava/util/List;
-#toTuple(Lcom/lambdaworks/redis/ScoredValue;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#toScriptOutputType(Lorg/springframework/data/redis/connection/ReturnType;)Lcom/lambdaworks/redis/ScriptOutputType;
-#toSortArgs(Lorg/springframework/data/redis/connection/SortParameters;)Lcom/lambdaworks/redis/SortArgs;
-#sentinelConfigurationToRedisURI(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)Lcom/lambdaworks/redis/RedisURI;
-#partitionsToClusterNodes(Lcom/lambdaworks/redis/cluster/models/partitions/Partitions;)Ljava/util/List;
-#toRedisClusterNode(Lcom/lambdaworks/redis/cluster/models/partitions/RedisClusterNode;)Lorg/springframework/data/redis/connection/RedisClusterNode;
-#toSetArgs(Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lcom/lambdaworks/redis/SetArgs;
-#toGeoArgsUnit(Lorg/springframework/data/geo/Metric;)Lcom/lambdaworks/redis/GeoArgs$Unit;
-#toGeoArgs(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lcom/lambdaworks/redis/GeoArgs;
@2.1.0.RELEASE
+#toBitFieldArgs(Lorg/springframework/data/redis/connection/BitFieldSubCommands;)Lio/lettuce/core/BitFieldArgs;
@2.2.0.RELEASE
+#toRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Z)Lio/lettuce/core/Range;
@2.5.0
*#toTuple(Ljava/util/List;)Ljava/util/List;[deprecated]
*#bytesListToTupleListConverter()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#dateToLong()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#bytesListToBytesSet()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#bytesToString()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#keyValueToBytesList()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#bytesSetToBytesList()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#bytesCollectionToBytesList()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#scoredValuesToTupleSet()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#scoredValueToTuple()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#exceptionConverter()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#toTupleSet(Ljava/util/List;)Ljava/util/Set;[deprecated]
*#bytesListToMapConverter()Lorg/springframework/core/convert/converter/Converter;[deprecated]
*#subarray([[BI)[[B[deprecated]
*#boundaryToStringForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;Ljava/lang/String;)Ljava/lang/String;[deprecated]
*#boundaryToBytesForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)Ljava/lang/String;[deprecated]
*#boundaryToBytesForZRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)Ljava/lang/String;[deprecated]
*#geoCoordinatesToPointConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;[deprecated]
*#keyValueListUnwrapper()Lorg/springframework/data/redis/connection/convert/ListConverter;[deprecated]
@2.6.0
+#toGeoArgs(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoCommandArgs;)Lio/lettuce/core/GeoArgs;
@3.0.0
+#toBoolean(J)Z
+#toTuple(Lio/lettuce/core/ScoredValue;)Lorg/springframework/data/redis/connection/zset/Tuple;
+#toLimit(Lorg/springframework/data/redis/connection/Limit;)Lio/lettuce/core/Limit;
+#toRange(Lorg/springframework/data/domain/Range;)Lio/lettuce/core/Range;
+#toRange(Lorg/springframework/data/domain/Range;Z)Lio/lettuce/core/Range;
+#toRevRange(Lorg/springframework/data/domain/Range;)Lio/lettuce/core/Range;
-#toTuple(Ljava/util/List;)Ljava/util/List;[deprecated]
-#bytesListToTupleListConverter()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#dateToLong()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#bytesListToBytesSet()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#bytesToString()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#keyValueToBytesList()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#bytesSetToBytesList()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#bytesCollectionToBytesList()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#scoredValuesToTupleSet()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#scoredValueToTuple()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#exceptionConverter()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#toTupleSet(Ljava/util/List;)Ljava/util/Set;[deprecated]
-#toTuple(Lio/lettuce/core/ScoredValue;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#bytesListToMapConverter()Lorg/springframework/core/convert/converter/Converter;[deprecated]
-#subarray([[BI)[[B[deprecated]
-#boundaryToStringForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#toLimit(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lio/lettuce/core/Limit;
-#toRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Lio/lettuce/core/Range;
-#toRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Z)Lio/lettuce/core/Range;
-#toRevRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Lio/lettuce/core/Range;
-#boundaryToBytesForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)Ljava/lang/String;[deprecated]
-#boundaryToBytesForZRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)Ljava/lang/String;[deprecated]
-#geoCoordinatesToPointConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;[deprecated]
-#keyValueListUnwrapper()Lorg/springframework/data/redis/connection/convert/ListConverter;[deprecated]

+###org/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder
@1.7.0.RELEASE
+#<init>()V
+#listeningAt(Ljava/lang/String;I)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#withName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#withId(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#promotedAs(Lorg/springframework/data/redis/connection/RedisNode$NodeType;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#slaveOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#withFlags(Ljava/util/Set;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#serving(Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#linkState(Lorg/springframework/data/redis/connection/RedisClusterNode$LinkState;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#build()Lorg/springframework/data/redis/connection/RedisClusterNode;
+#build()Lorg/springframework/data/redis/connection/RedisNode;
+#slaveOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#promotedAs(Lorg/springframework/data/redis/connection/RedisNode$NodeType;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#withId(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#listeningAt(Ljava/lang/String;I)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#withName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
@2.1.0.RELEASE
+#replicaOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
+#replicaOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
@3.0.0
-#slaveOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;
-#slaveOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSetBuilder
@2.1.0.RELEASE
+#forType(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSetBuilder;
+#valueAt(J)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSetBuilder;
+#valueAt(Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSetBuilder;
+#to(J)Lorg/springframework/data/redis/connection/BitFieldSubCommands;

+###org/springframework/data/redis/connection/Message
@1.0.0.RELEASE
+#getBody()[B
+#getChannel()[B

+###org/springframework/data/redis/connection/stream/RecordId
@2.2.0.RELEASE
+#of(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#of(JJ)Lorg/springframework/data/redis/connection/stream/RecordId;
+#autoGenerate()Lorg/springframework/data/redis/connection/stream/RecordId;
+#getTimestamp()Ljava/lang/Long;
+#getSequence()Ljava/lang/Long;
+#shouldBeAutoGenerated()Z
+#getValue()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/ReactiveRedisConnection$NumericResponse
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Number;)V

+###org/springframework/data/redis/connection/ReactiveHashCommands$HSetCommand
@2.0.0.RELEASE
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HSetCommand;
+#fieldValues(Ljava/util/Map;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HSetCommand;
+#ofField(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HSetCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HSetCommand;
+#ifValueNotExists()Lorg/springframework/data/redis/connection/ReactiveHashCommands$HSetCommand;
+#isUpsert()Z
+#getFieldValueMap()Ljava/util/Map;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByRankCommand
@2.0.0.RELEASE
+#valuesWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByRankCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByRankCommand;
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/ReactiveNumberCommands
@2.0.0.RELEASE
+#incr(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#incr(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#incrBy(Ljava/nio/ByteBuffer;Ljava/lang/Number;)Lreactor/core/publisher/Mono;
+#incrBy(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#decr(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#decr(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#decrBy(Ljava/nio/ByteBuffer;Ljava/lang/Number;)Lreactor/core/publisher/Mono;
+#decrBy(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hIncrBy(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/lang/Number;)Lreactor/core/publisher/Mono;
+#hIncrBy(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ReactiveClusterKeyCommands
@2.0.0.RELEASE
+#keys(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#randomKey(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/connection/ReactiveRedisClusterConnection
@2.0.0.RELEASE
+#keyCommands()Lorg/springframework/data/redis/connection/ReactiveClusterKeyCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/ReactiveClusterStringCommands;
+#numberCommands()Lorg/springframework/data/redis/connection/ReactiveClusterNumberCommands;
+#listCommands()Lorg/springframework/data/redis/connection/ReactiveClusterListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/ReactiveClusterSetCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/ReactiveClusterZSetCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/ReactiveClusterHashCommands;
+#geoCommands()Lorg/springframework/data/redis/connection/ReactiveClusterGeoCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/ReactiveClusterHyperLogLogCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/ReactiveClusterServerCommands;
+#ping(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#serverCommands()Lorg/springframework/data/redis/connection/ReactiveServerCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands;
+#geoCommands()Lorg/springframework/data/redis/connection/ReactiveGeoCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/ReactiveHashCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/ReactiveZSetCommands;
+#setCommands()Lorg/springframework/data/redis/connection/ReactiveSetCommands;
+#listCommands()Lorg/springframework/data/redis/connection/ReactiveListCommands;
+#numberCommands()Lorg/springframework/data/redis/connection/ReactiveNumberCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/ReactiveStringCommands;
+#keyCommands()Lorg/springframework/data/redis/connection/ReactiveKeyCommands;
@2.2.0.RELEASE
+#streamCommands()Lorg/springframework/data/redis/connection/ReactiveClusterStreamCommands;
+#streamCommands()Lorg/springframework/data/redis/connection/ReactiveStreamCommands;

+###org/springframework/data/redis/connection/RedisConfiguration$StaticMasterReplicaConfiguration
@2.1.0.RELEASE
+#getNodes()Ljava/util/List;

+###org/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder
@2.0.0.RELEASE
+#useSsl()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#usePooling()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisPoolingClientConfigurationBuilder;
+#clientName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#readTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#connectTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;

+###org/springframework/data/redis/connection/jedis/JedisVersionUtil
@1.3.0.RELEASE
+#<init>()V
+#jedisVersion()Lorg/springframework/data/redis/Version;
+#atLeastJedis24()Z
+#atLeast(Ljava/lang/String;)Z
+#atMost(Ljava/lang/String;)Z
@2.3.8.RELEASE
+#jedisVersion()Lorg/springframework/data/util/Version;
-#jedisVersion()Lorg/springframework/data/redis/Version;
@2.4.0
+#jedisVersion()Lorg/springframework/data/redis/Version;
-#jedisVersion()Lorg/springframework/data/util/Version;
@2.4.6
+#jedisVersion()Lorg/springframework/data/util/Version;
-#jedisVersion()Lorg/springframework/data/redis/Version;
@3.0.0
-###org/springframework/data/redis/connection/jedis/JedisVersionUtil

+###org/springframework/data/redis/connection/jedis/JedisClientConfiguration$DefaultJedisClientConfigurationBuilder
@2.0.0.RELEASE
+#useSsl()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#sslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#sslParameters(Ljavax/net/ssl/SSLParameters;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#hostnameVerifier(Ljavax/net/ssl/HostnameVerifier;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#usePooling()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisPoolingClientConfigurationBuilder;
+#poolConfig(Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisPoolingClientConfigurationBuilder;
+#and()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#clientName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#readTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#connectTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;

+###org/springframework/data/redis/connection/RedisServerCommands$ShutdownOption
@1.3.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;

+###org/springframework/data/redis/connection/convert/StringToPropertiesConverter
@1.1.0.M2
+#<init>()V
+#convert(Ljava/lang/String;)Ljava/util/Properties;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/stream/Task
@2.2.0.RELEASE
+#isActive()Z
+#getState()Lorg/springframework/data/redis/stream/Task$State;
+#awaitStart(Ljava/time/Duration;)Z

+###org/springframework/data/redis/support/atomic/RedisAtomicLong
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisConnectionFactory;J)V
+#get()J
+#set(J)V
+#getAndSet(J)J
+#compareAndSet(JJ)Z
+#getAndIncrement()J
+#getAndDecrement()J
+#getAndAdd(J)J
+#incrementAndGet()J
+#decrementAndGet()J
+#addAndGet(J)J
+#toString()Ljava/lang/String;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#getKey()Ljava/lang/String;
+#expire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/util/Date;)Ljava/lang/Boolean;
+#getExpire()Ljava/lang/Long;
+#persist()Ljava/lang/Boolean;
+#rename(Ljava/lang/String;)V
+#getType()Lorg/springframework/data/redis/connection/DataType;
+#rename(Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
@1.0.3.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;J)V
@2.2.0.RELEASE
+#getAndUpdate(Ljava/util/function/LongUnaryOperator;)J
+#getAndAccumulate(JLjava/util/function/LongBinaryOperator;)J
+#updateAndGet(Ljava/util/function/LongUnaryOperator;)J
+#accumulateAndGet(JLjava/util/function/LongBinaryOperator;)J

+###org/springframework/data/redis/repository/configuration/RedisRepositoryConfigurationExtension
@1.7.0.RELEASE
+#<init>()V
+#getModuleName()Ljava/lang/String;
+#registerBeansForRoot(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)V

+###org/springframework/data/redis/repository/query/RedisOperationChain$NearPath
@1.8.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/geo/Point;Lorg/springframework/data/geo/Distance;)V
+#getPoint()Lorg/springframework/data/geo/Point;
+#getDistance()Lorg/springframework/data/geo/Distance;

+###org/springframework/data/redis/repository/query/RedisQueryCreator
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/repository/query/parser/PartTree;Lorg/springframework/data/repository/query/ParameterAccessor;)V

+###org/springframework/data/redis/serializer/RedisSerializationContext
@2.0.0.RELEASE
+#newSerializationContext()Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#newSerializationContext(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#newSerializationContext(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#raw()Lorg/springframework/data/redis/serializer/RedisSerializationContext;
+#string()Lorg/springframework/data/redis/serializer/RedisSerializationContext;
+#fromSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext;
+#just(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/serializer/RedisSerializationContext;
+#getKeySerializationPair()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getValueSerializationPair()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getHashKeySerializationPair()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getHashValueSerializationPair()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getStringSerializationPair()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
@2.1.0.RELEASE
+#java()Lorg/springframework/data/redis/serializer/RedisSerializationContext;
+#java(Ljava/lang/ClassLoader;)Lorg/springframework/data/redis/serializer/RedisSerializationContext;
@2.2.0.RELEASE
*#raw()Lorg/springframework/data/redis/serializer/RedisSerializationContext;[deprecated]
+#byteArray()Lorg/springframework/data/redis/serializer/RedisSerializationContext;
+#byteBuffer()Lorg/springframework/data/redis/serializer/RedisSerializationContext;

+###org/springframework/data/redis/core/types/RedisClientInfo$INFO
@1.3.0.RELEASE
+#values()[Lorg/springframework/data/redis/core/types/RedisClientInfo$INFO;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/core/types/RedisClientInfo$INFO;

+###org/springframework/data/redis/core/DefaultTypedTuple
@1.1.0.M2
+#<init>(Ljava/lang/Object;Ljava/lang/Double;)V
+#getScore()Ljava/lang/Double;
+#getValue()Ljava/lang/Object;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Double;)I
+#compareTo(Ljava/lang/Object;)I
@1.3.0.RELEASE
+#compareTo(Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;)I
@2.6.0
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/core/ScanCursor
@1.4.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/redis/core/ScanOptions;)V
+#<init>(J)V
+#<init>(JLorg/springframework/data/redis/core/ScanOptions;)V
+#open()Lorg/springframework/data/redis/core/ScanCursor;
+#getCursorId()J
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#close()V
+#isClosed()Z
+#getPosition()J
+#open()Lorg/springframework/data/redis/core/Cursor;
@3.0.0
-#open()Lorg/springframework/data/redis/core/Cursor;

+###org/springframework/data/redis/core/index/SpelIndexDefinition
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#getExpression()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/redis/core/index/IndexDefinition$IndexingContext
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)V
+#getKeyspace()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#getTypeInformation()Lorg/springframework/data/util/TypeInformation;
@2.0.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/core/ReactiveHashOperations
@2.0.0.RELEASE
+#remove(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#hasKey(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#get(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#multiGet(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#increment(Ljava/lang/Object;Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
+#increment(Ljava/lang/Object;Ljava/lang/Object;D)Lreactor/core/publisher/Mono;
+#keys(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#size(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#putAll(Ljava/lang/Object;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#values(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#entries(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.1.0.RELEASE
+#scan(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#scan(Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
@2.6.0
+#randomKey(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#randomEntry(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#randomKeys(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#randomEntries(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/core/BoundListOperations
@1.0.0.RELEASE
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#range(JJ)Ljava/util/List;
+#trim(JJ)V
+#size()Ljava/lang/Long;
+#leftPush(Ljava/lang/Object;)Ljava/lang/Long;
+#leftPushIfPresent(Ljava/lang/Object;)Ljava/lang/Long;
+#leftPush(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#rightPush(Ljava/lang/Object;)Ljava/lang/Long;
+#rightPushIfPresent(Ljava/lang/Object;)Ljava/lang/Long;
+#rightPush(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#leftPop()Ljava/lang/Object;
+#leftPop(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#rightPop()Ljava/lang/Object;
+#rightPop(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#remove(JLjava/lang/Object;)Ljava/lang/Long;
+#index(J)Ljava/lang/Object;
+#set(JLjava/lang/Object;)V
@1.1.0.M2
+#leftPushAll([Ljava/lang/Object;)Ljava/lang/Long;
+#rightPushAll([Ljava/lang/Object;)Ljava/lang/Long;
@2.3.0.RELEASE
+#leftPop(Ljava/time/Duration;)Ljava/lang/Object;
+#rightPop(Ljava/time/Duration;)Ljava/lang/Object;
@2.4.0
+#indexOf(Ljava/lang/Object;)Ljava/lang/Long;
+#lastIndexOf(Ljava/lang/Object;)Ljava/lang/Long;
@2.6.0
+#move(Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/Object;
+#move(Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/time/Duration;)Ljava/lang/Object;
+#move(Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#leftPop(J)Ljava/util/List;
+#rightPop(J)Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveNumberCommands$HIncrByCommand
@2.0.0.RELEASE
+#incr(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveNumberCommands$HIncrByCommand;
+#by(Ljava/lang/Number;)Lorg/springframework/data/redis/connection/ReactiveNumberCommands$HIncrByCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveNumberCommands$HIncrByCommand;
+#getValue()Ljava/lang/Number;
+#getField()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/RedisStaticMasterReplicaConfiguration
@2.1.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#addNode(Ljava/lang/String;I)V
+#node(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisConfiguration$StaticMasterReplicaConfiguration;
+#node(Ljava/lang/String;I)Lorg/springframework/data/redis/connection/RedisStaticMasterReplicaConfiguration;
+#getDatabase()I
+#setDatabase(I)V
+#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;
+#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
+#getNodes()Ljava/util/List;
@2.3.1.RELEASE
+#node(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisStaticMasterReplicaConfiguration;
-#node(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisConfiguration$StaticMasterReplicaConfiguration;
@2.4.0
+#setUsername(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
@2.5.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/RedisServer
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILjava/util/Properties;)V
+#newServerFrom(Ljava/util/Properties;)Lorg/springframework/data/redis/connection/RedisServer;
+#setQuorum(Ljava/lang/Long;)V
+#getRunId()Ljava/lang/String;
+#getFlags()Ljava/lang/String;
+#isMaster()Z
+#getPendingCommands()Ljava/lang/Long;
+#getLastPingSent()Ljava/lang/Long;
+#getLastOkPingReply()Ljava/lang/Long;
+#getDownAfterMilliseconds()Ljava/lang/Long;
+#getInfoRefresh()Ljava/lang/Long;
+#getRoleReported()Ljava/lang/String;
+#roleReportedTime()Ljava/lang/Long;
+#getConfigEpoch()Ljava/lang/Long;
+#getNumberSlaves()Ljava/lang/Long;
+#getNumberOtherSentinels()Ljava/lang/Long;
+#getQuorum()Ljava/lang/Long;
+#getFailoverTimeout()Ljava/lang/Long;
+#getParallelSyncs()Ljava/lang/Long;
+#get(Lorg/springframework/data/redis/connection/RedisServer$INFO;)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
@2.1.0.RELEASE
+#getNumberReplicas()Ljava/lang/Long;
@3.0.0
-#getNumberSlaves()Ljava/lang/Long;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy
@2.1.0.RELEASE
+#<init>()V
+#getCommand()Ljava/lang/String;
+#getValue()J
+#getOverflow()Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy$Overflow;
@2.5.2
+#create(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;J)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy;
+#create(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;JLorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy$Overflow;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/StreamOffset
@2.2.0.RELEASE
+#create(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Lorg/springframework/data/redis/connection/stream/StreamOffset;
+#latest(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/StreamOffset;
+#fromStart(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/StreamOffset;
+#from(Lorg/springframework/data/redis/connection/stream/Record;)Lorg/springframework/data/redis/connection/stream/StreamOffset;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getKey()Ljava/lang/Object;
+#getOffset()Lorg/springframework/data/redis/connection/stream/ReadOffset;

+###org/springframework/data/redis/connection/ReactiveListCommands$BPopCommand
@2.0.0.RELEASE
+#right()Lorg/springframework/data/redis/connection/ReactiveListCommands$BPopCommand;
+#left()Lorg/springframework/data/redis/connection/ReactiveListCommands$BPopCommand;
+#from(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveListCommands$BPopCommand;
+#blockingFor(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/ReactiveListCommands$BPopCommand;
+#getKey()Ljava/nio/ByteBuffer;
+#getKeys()Ljava/util/List;
+#getTimeout()Ljava/time/Duration;
+#getDirection()Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;

+###org/springframework/data/redis/connection/RedisSetCommands
@1.0.0.RELEASE
+#sAdd([B[B)Ljava/lang/Boolean;
+#sRem([B[B)Ljava/lang/Boolean;
+#sPop([B)[B
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sCard([B)Ljava/lang/Long;
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)V
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)V
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)V
+#sMembers([B)Ljava/util/Set;
+#sRandMember([B)[B
@1.0.1.RELEASE
+#sInterStore([B[[B)Ljava/lang/Long;
+#sUnionStore([B[[B)Ljava/lang/Long;
+#sDiffStore([B[[B)Ljava/lang/Long;
-#sInterStore([B[[B)V
-#sUnionStore([B[[B)V
-#sDiffStore([B[[B)V
@1.1.0.M1
+#sRandMember([BJ)Ljava/util/List;
@1.1.0.M2
+#sAdd([B[[B)Ljava/lang/Long;
+#sRem([B[[B)Ljava/lang/Long;
-#sAdd([B[B)Ljava/lang/Boolean;
-#sRem([B[B)Ljava/lang/Boolean;
@1.4.0.RELEASE
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@2.0.0.RELEASE
+#sPop([BJ)Ljava/util/List;
@2.6.0
+#sMIsMember([B[[B)Ljava/util/List;

+###org/springframework/data/redis/connection/RedisNode$RedisNodeBuilder
@1.4.0.RELEASE
+#<init>()V
+#withName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#listeningAt(Ljava/lang/String;I)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#build()Lorg/springframework/data/redis/connection/RedisNode;
@1.7.0.RELEASE
+#withId(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#promotedAs(Lorg/springframework/data/redis/connection/RedisNode$NodeType;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
+#slaveOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
@2.1.0.RELEASE
+#replicaOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
@3.0.0
-#slaveOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand
@2.0.0.RELEASE
+#within(Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withinMeters(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withinKiometers(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withinMiles(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withinFeet(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withFlag(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs$Flag;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withCoord()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withDist()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#withArgs(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#limitTo(J)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#sort(Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#orderByDistanceAsc()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#orderByDistanceDesc()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#storeAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#storeDistAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusByMemberCommand;
+#getDirection()Ljava/util/Optional;
+#getDistance()Lorg/springframework/data/geo/Distance;
+#getFlags()Ljava/util/Set;
+#getLimit()Ljava/util/Optional;
+#getMember()Ljava/nio/ByteBuffer;
+#getStore()Ljava/util/Optional;
+#getStoreDist()Ljava/util/Optional;
+#getArgs()Ljava/util/Optional;

+###org/springframework/data/redis/connection/ReactiveStringCommands$MSetCommand
@2.0.0.RELEASE
+#getKey()Ljava/nio/ByteBuffer;
+#mset(Ljava/util/Map;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$MSetCommand;
+#getKeyValuePairs()Ljava/util/Map;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldGetBuilder
@2.1.0.RELEASE
+#forType(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldGetBuilder;
+#valueAt(J)Lorg/springframework/data/redis/connection/BitFieldSubCommands;
+#valueAt(Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;)Lorg/springframework/data/redis/connection/BitFieldSubCommands;

+###org/springframework/data/redis/connection/jedis/JedisClusterConnection$JedisClusterCommandCallback
@1.7.0.RELEASE

+###org/springframework/data/redis/connection/jedis/JedisClientConfiguration
@2.0.0.RELEASE
+#isUseSsl()Z
+#getSslSocketFactory()Ljava/util/Optional;
+#getSslParameters()Ljava/util/Optional;
+#getHostnameVerifier()Ljava/util/Optional;
+#isUsePooling()Z
+#getPoolConfig()Ljava/util/Optional;
+#getClientName()Ljava/util/Optional;
+#getConnectTimeout()Ljava/time/Duration;
+#getReadTimeout()Ljava/time/Duration;
+#builder()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#defaultConfiguration()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;

+###org/springframework/data/redis/connection/ReactiveStringCommands$SetBitCommand
@2.0.0.RELEASE
+#bit(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetBitCommand;
+#atOffset(J)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetBitCommand;
+#to(Z)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetBitCommand;
+#getOffset()Ljava/lang/Long;
+#getValue()Z

+###org/springframework/data/redis/connection/convert/MapToPropertiesConverter
@1.4.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/convert/MapToPropertiesConverter;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/convert/MapToPropertiesConverter;
+#convert(Ljava/util/Map;)Ljava/util/Properties;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/ReactiveStringCommands
@2.0.0.RELEASE
+#set(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#set(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lreactor/core/publisher/Mono;
+#set(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#get(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#get(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#getSet(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#getSet(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mGet(Ljava/util/List;)Lreactor/core/publisher/Mono;
+#mGet(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#setNX(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#setNX(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#setEX(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/core/types/Expiration;)Lreactor/core/publisher/Mono;
+#setEX(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#pSetEX(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/core/types/Expiration;)Lreactor/core/publisher/Mono;
+#pSetEX(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mSet(Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#mSet(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mSetNX(Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#mSetNX(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#append(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#append(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#getRange(Ljava/nio/ByteBuffer;JJ)Lreactor/core/publisher/Mono;
+#getRange(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#setRange(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Mono;
+#setRange(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#getBit(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Mono;
+#getBit(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#setBit(Ljava/nio/ByteBuffer;JZ)Lreactor/core/publisher/Mono;
+#setBit(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#bitCount(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#bitCount(Ljava/nio/ByteBuffer;JJ)Lreactor/core/publisher/Mono;
+#bitCount(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#bitOp(Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#bitOp(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#strLen(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#strLen(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.1.0.RELEASE
+#bitField(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/BitFieldSubCommands;)Lreactor/core/publisher/Mono;
+#bitField(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#bitPos(Ljava/nio/ByteBuffer;Z)Lreactor/core/publisher/Mono;
+#bitPos(Ljava/nio/ByteBuffer;ZLorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#bitPos(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.6.0
+#getDel(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#getDel(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#getEx(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/core/types/Expiration;)Lreactor/core/publisher/Mono;
+#getEx(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequest
@2.2.0.RELEASE
+#getConsumer()Lorg/springframework/data/redis/connection/stream/Consumer;
+#isAutoAck()Z
@2.2.5.RELEASE
*#isAutoAck()Z[deprecated]
+#isAutoAcknowledge()Z
@3.0.0
-#isAutoAck()Z[deprecated]

+###org/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder
@2.2.0.RELEASE
+#errorHandler(Lorg/springframework/util/ErrorHandler;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;
+#cancelOnError(Ljava/util/function/Predicate;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;
+#consumer(Lorg/springframework/data/redis/connection/stream/Consumer;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;
+#autoAck(Z)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;
+#build()Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequest;
+#build()Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequest;
+#cancelOnError(Ljava/util/function/Predicate;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequestBuilder;
+#errorHandler(Lorg/springframework/util/ErrorHandler;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequestBuilder;
@2.2.5.RELEASE
*#autoAck(Z)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;[deprecated]
+#autoAcknowledge(Z)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;
@3.0.0
-#autoAck(Z)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;[deprecated]

+###org/springframework/data/redis/support/collections/AbstractRedisCollection
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#getKey()Ljava/lang/String;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#addAll(Ljava/util/Collection;)Z
+#add(Ljava/lang/Object;)Z
+#clear()V
+#containsAll(Ljava/util/Collection;)Z
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#expire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/util/Date;)Ljava/lang/Boolean;
+#getExpire()Ljava/lang/Long;
+#persist()Ljava/lang/Boolean;
+#rename(Ljava/lang/String;)V
+#rename(Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
@1.0.2.RELEASE
-#retainAll(Ljava/util/Collection;)Z
@1.2.0.RELEASE
-#add(Ljava/lang/Object;)Z
-#clear()V
-#remove(Ljava/lang/Object;)Z

+###org/springframework/data/redis/support/collections/RedisCollection
@1.0.0.RELEASE

+###org/springframework/data/redis/repository/support/RedisRepositoryFactory
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/keyvalue/core/KeyValueOperations;)V
+#<init>(Lorg/springframework/data/keyvalue/core/KeyValueOperations;Ljava/lang/Class;)V
+#<init>(Lorg/springframework/data/keyvalue/core/KeyValueOperations;Ljava/lang/Class;Ljava/lang/Class;)V
+#getEntityInformation(Ljava/lang/Class;)Lorg/springframework/data/repository/core/EntityInformation;

+###org/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair
@2.0.0.RELEASE
+#fromSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#just(Lorg/springframework/data/redis/serializer/RedisElementReader;Lorg/springframework/data/redis/serializer/RedisElementWriter;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#raw()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getReader()Lorg/springframework/data/redis/serializer/RedisElementReader;
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#getWriter()Lorg/springframework/data/redis/serializer/RedisElementWriter;
+#write(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
@2.2.0.RELEASE
*#raw()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;[deprecated]
+#byteArray()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#byteBuffer()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;

+###org/springframework/data/redis/serializer/GenericJackson2JsonRedisSerializer
@1.6.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
+#deserialize([BLjava/lang/Class;)Ljava/lang/Object;
@2.2.0.RELEASE
+#registerNullValueSerializer(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V
@3.0.0
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/serializer/JacksonObjectReader;Lorg/springframework/data/redis/serializer/JacksonObjectWriter;)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;Lorg/springframework/data/redis/serializer/JacksonObjectReader;Lorg/springframework/data/redis/serializer/JacksonObjectWriter;)V

+###org/springframework/data/redis/core/mapping/RedisPersistentEntity
@1.7.0.RELEASE
+#getTimeToLiveAccessor()Lorg/springframework/data/redis/core/TimeToLiveAccessor;
@1.8.0.RELEASE
+#hasExplictTimeToLiveProperty()Z
+#getExplicitTimeToLiveProperty()Lorg/springframework/data/mapping/PersistentProperty;
@2.0.0.RELEASE
+#getExplicitTimeToLiveProperty()Lorg/springframework/data/redis/core/mapping/RedisPersistentProperty;
-#getExplicitTimeToLiveProperty()Lorg/springframework/data/mapping/PersistentProperty;
@2.3.0.RELEASE
+#isExpiring()Z

+###org/springframework/data/redis/core/SetOperations
@1.0.0.RELEASE
+#difference(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#difference(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#differenceAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#differenceAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
+#intersect(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#intersect(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
+#union(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#union(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
+#add(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#isMember(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#members(Ljava/lang/Object;)Ljava/util/Set;
+#move(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#randomMember(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#pop(Ljava/lang/Object;)Ljava/lang/Object;
+#size(Ljava/lang/Object;)Ljava/lang/Long;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@1.0.1.RELEASE
+#differenceAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#differenceAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
-#differenceAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#differenceAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
-#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
-#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
@1.1.0.M1
+#distinctRandomMembers(Ljava/lang/Object;J)Ljava/util/Set;
+#randomMembers(Ljava/lang/Object;J)Ljava/util/List;
@1.1.0.M2
+#add(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
+#remove(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
-#add(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
@1.4.0.RELEASE
+#scan(Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@2.0.0.RELEASE
+#pop(Ljava/lang/Object;J)Ljava/util/List;
@2.2.0.RELEASE
+#intersect(Ljava/util/Collection;)Ljava/util/Set;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#union(Ljava/util/Collection;)Ljava/util/Set;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#difference(Ljava/util/Collection;)Ljava/util/Set;
+#differenceAndStore(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
@2.6.0
+#isMember(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/Map;

+###org/springframework/data/redis/core/types/RedisClientInfo
@1.3.0.RELEASE
+#<init>(Ljava/util/Properties;)V
+#getAddressPort()Ljava/lang/String;
+#getFileDescriptor()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getAge()Ljava/lang/Long;
+#getIdle()Ljava/lang/Long;
+#getFlags()Ljava/lang/String;
+#getDatabaseId()Ljava/lang/Long;
+#getChannelSubscribtions()Ljava/lang/Long;
+#getPatternSubscrbtions()Ljava/lang/Long;
+#getMultiCommandContext()Ljava/lang/Long;
+#getBufferLength()Ljava/lang/Long;
+#getBufferFreeSpace()Ljava/lang/Long;
+#getOutputBufferLength()Ljava/lang/Long;
+#getOutputListLength()Ljava/lang/Long;
+#getOutputBufferMemoryUsage()Ljava/lang/Long;
+#getEvents()Ljava/lang/String;
+#getLastCommand()Ljava/lang/String;
+#get(Lorg/springframework/data/redis/core/types/RedisClientInfo$INFO;)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/redis/core/RedisKeyExpiredEvent
@1.7.0.RELEASE
+#<init>([B)V
+#<init>([BLjava/lang/Object;)V
+#getKeyspace()Ljava/lang/String;
+#getId()[B
+#getValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
@1.8.0.RELEASE
+#<init>(Ljava/lang/String;[BLjava/lang/Object;)V

+###org/springframework/data/redis/core/PartialUpdate$UpdateCommand
@1.8.0.RELEASE
+#values()[Lorg/springframework/data/redis/core/PartialUpdate$UpdateCommand;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/core/PartialUpdate$UpdateCommand;

+###org/springframework/data/redis/core/ReactiveGeoOperations
@2.0.0.RELEASE
+#add(Ljava/lang/Object;Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#add(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Lreactor/core/publisher/Mono;
+#add(Ljava/lang/Object;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#add(Ljava/lang/Object;Ljava/lang/Iterable;)Lreactor/core/publisher/Mono;
+#add(Ljava/lang/Object;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#distance(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#distance(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lreactor/core/publisher/Mono;
+#hash(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#hash(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#position(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#position(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#radius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lreactor/core/publisher/Flux;
+#radius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lreactor/core/publisher/Flux;
+#radius(Ljava/lang/Object;Ljava/lang/Object;D)Lreactor/core/publisher/Flux;
+#radius(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lreactor/core/publisher/Flux;
+#radius(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lreactor/core/publisher/Flux;
+#remove(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.6.0
+#search(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lreactor/core/publisher/Flux;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;)Lreactor/core/publisher/Flux;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lreactor/core/publisher/Flux;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;)Lreactor/core/publisher/Flux;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lreactor/core/publisher/Flux;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lreactor/core/publisher/Flux;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lreactor/core/publisher/Mono;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;)Lreactor/core/publisher/Mono;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Lreactor/core/publisher/Mono;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;)Lreactor/core/publisher/Mono;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Lreactor/core/publisher/Mono;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/core/index/Indexed
@1.7.0.RELEASE

+###org/springframework/data/redis/core/convert/RedisCustomConversions
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/List;)V

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand
@2.0.0.RELEASE
+#meters()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand;
+#kilometers()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand;
+#miles()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand;
+#feet()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand;
+#between(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand;
+#and(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoDistCommand;
+#getFrom()Ljava/nio/ByteBuffer;
+#getTo()Ljava/nio/ByteBuffer;
+#getMetric()Ljava/util/Optional;

+###org/springframework/data/redis/connection/ReactiveSetCommands$SDiffCommand
@2.0.0.RELEASE
+#keys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SDiffCommand;
+#getKey()Ljava/nio/ByteBuffer;
+#getKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/lettuce/LettucePool
@1.1.0.M1
+#getClient()Lcom/lambdaworks/redis/RedisClient;
@1.8.0.RELEASE
+#getClient()Lcom/lambdaworks/redis/AbstractRedisClient;
-#getClient()Lcom/lambdaworks/redis/RedisClient;
@2.0.0.RELEASE
+#getClient()Lio/lettuce/core/AbstractRedisClient;
-#getClient()Lcom/lambdaworks/redis/AbstractRedisClient;
@3.0.0
-###org/springframework/data/redis/connection/lettuce/LettucePool

+###org/springframework/data/redis/connection/ReactiveClusterGeoCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/util/ByteArrayWrapper
@1.0.0.RELEASE
+#<init>([B)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getArray()[B
@3.0.1
+#<init>(Ljava/nio/ByteBuffer;)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/springframework/data/redis/connection/util/ByteArrayWrapper;)I
+#compareTo(Ljava/lang/Object;)I

+###org/springframework/data/redis/connection/RedisNode$NodeType
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisNode$NodeType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode$NodeType;

+###org/springframework/data/redis/connection/RedisClusterCommands$AddSlots
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisClusterCommands$AddSlots;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterCommands$AddSlots;

+###org/springframework/data/redis/connection/ReactiveStringCommands$AppendCommand
@2.0.0.RELEASE
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$AppendCommand;
+#append(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$AppendCommand;
+#getValue()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ClusterTopologyProvider
@1.7.0.RELEASE
+#getTopology()Lorg/springframework/data/redis/connection/ClusterTopology;

+###org/springframework/data/redis/connection/ClusterSlotHashUtil
@1.7.0.RELEASE
+#isSameSlotForAllKeys([[B)Z
+#calculateSlot(Ljava/lang/String;)I
+#calculateSlot([B)I
@2.0.0.RELEASE
+#isSameSlotForAllKeys(Ljava/util/Collection;)Z
+#isSameSlotForAllKeys([Ljava/nio/ByteBuffer;)Z

+###org/springframework/data/redis/connection/ClusterInfo
@1.7.0.RELEASE
+#<init>(Ljava/util/Properties;)V
+#getState()Ljava/lang/String;
+#getSlotsAssigned()Ljava/lang/Long;
+#getSlotsOk()Ljava/lang/Long;
+#getSlotsPfail()Ljava/lang/Long;
+#getSlotsFail()Ljava/lang/Long;
+#getKnownNodes()Ljava/lang/Long;
+#getClusterSize()Ljava/lang/Long;
+#getCurrentEpoch()Ljava/lang/Long;
+#getMessagesSent()Ljava/lang/Long;
+#getMessagesReceived()Ljava/lang/Long;
+#get(Lorg/springframework/data/redis/connection/ClusterInfo$Info;)Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/RedisClusterNode$LinkState
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisClusterNode$LinkState;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode$LinkState;

+###org/springframework/data/redis/connection/RedisSocketConfiguration
@2.1.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getSocket()Ljava/lang/String;
+#setSocket(Ljava/lang/String;)V
+#getDatabase()I
+#setDatabase(I)V
+#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;
+#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
@2.4.0
+#setUsername(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
@2.5.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/jedis/JedisClusterConnection
@1.7.0.RELEASE
+#<init>(Lredis/clients/jedis/JedisCluster;)V
+#<init>(Lredis/clients/jedis/JedisCluster;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;)V
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;
+#del([[B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#keys([B)Ljava/util/Set;
+#keys(Lorg/springframework/data/redis/connection/RedisClusterNode;[B)Ljava/util/Set;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#randomKey()[B
+#randomKey(Lorg/springframework/data/redis/connection/RedisClusterNode;)[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#pExpire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#pExpireAt([BJ)Ljava/lang/Boolean;
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#ttl([B)Ljava/lang/Long;
+#pTtl([B)Ljava/lang/Long;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#dump([B)[B
+#restore([BJ[B)V
+#get([B)[B
+#getSet([B[B)[B
+#mGet([[B)Ljava/util/List;
+#set([B[B)V
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
+#setNX([B[B)Ljava/lang/Boolean;
+#setEx([BJ[B)V
+#pSetEx([BJ[B)V
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#incrBy([BD)Ljava/lang/Double;
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#append([B[B)Ljava/lang/Long;
+#getRange([BJJ)[B
+#setRange([B[BJ)V
+#getBit([BJ)Ljava/lang/Boolean;
+#setBit([BJZ)Ljava/lang/Boolean;
+#bitCount([B)Ljava/lang/Long;
+#bitCount([BJJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
+#strLen([B)Ljava/lang/Long;
+#rPush([B[[B)Ljava/lang/Long;
+#lPush([B[[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#lPushX([B[B)Ljava/lang/Long;
+#lLen([B)Ljava/lang/Long;
+#lRange([BJJ)Ljava/util/List;
+#lTrim([BJJ)V
+#lIndex([BJ)[B
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lRem([BJ[B)Ljava/lang/Long;
+#lPop([B)[B
+#rPop([B)[B
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#rPopLPush([B[B)[B
+#bRPopLPush(I[B[B)[B
+#sAdd([B[[B)Ljava/lang/Long;
+#sRem([B[[B)Ljava/lang/Long;
+#sPop([B)[B
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sCard([B)Ljava/lang/Long;
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)Ljava/lang/Long;
+#sMembers([B)Ljava/util/Set;
+#sRandMember([B)[B
+#sRandMember([BJ)Ljava/util/List;
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;
+#zRem([B[[B)Ljava/lang/Long;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zRank([B[B)Ljava/lang/Long;
+#zRevRank([B[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByLex([B)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zCount([BDD)Ljava/lang/Long;
+#zCard([B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hIncrBy([B[BD)Ljava/lang/Double;
+#hExists([B[B)Ljava/lang/Boolean;
+#hDel([B[[B)Ljava/lang/Long;
+#hLen([B)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hVals([B)Ljava/util/List;
+#hGetAll([B)Ljava/util/Map;
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#multi()V
+#exec()Ljava/util/List;
+#discard()V
+#watch([[B)V
+#unwatch()V
+#isSubscribed()Z
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#publish([B[B)Ljava/lang/Long;
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#select(I)V
+#echo([B)[B
+#ping()Ljava/lang/String;
+#ping(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/String;
+#bgWriteAof()V
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#bgReWriteAof()V
+#bgSave()V
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#lastSave()Ljava/lang/Long;
+#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#save()V
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#dbSize()Ljava/lang/Long;
+#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#flushDb()V
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#flushAll()V
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#info()Ljava/util/Properties;
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;
+#info(Ljava/lang/String;)Ljava/util/Properties;
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
+#shutdown()V
+#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/List;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
+#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#time()Ljava/lang/Long;
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#killClient(Ljava/lang/String;I)V
+#setClientName([B)V
+#getClientName()Ljava/lang/String;
+#getClientList()Ljava/util/List;
+#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;
+#slaveOf(Ljava/lang/String;I)V
+#slaveOfNoOne()V
+#scriptFlush()V
+#scriptKill()V
+#scriptLoad([B)Ljava/lang/String;
+#scriptExists([Ljava/lang/String;)Ljava/util/List;
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V
+#exists([B)Ljava/lang/Boolean;
+#clusterSetSlot(Lorg/springframework/data/redis/connection/RedisClusterNode;ILorg/springframework/data/redis/connection/RedisClusterCommands$AddSlots;)V
+#clusterGetKeysInSlot(ILjava/lang/Integer;)Ljava/util/List;
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#clusterCountKeysInSlot(I)Ljava/lang/Long;
+#clusterDeleteSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#clusterDeleteSlotsInRange(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#clusterForget(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#clusterMeet(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#clusterReplicate(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#clusterGetSlotForKey([B)Ljava/lang/Integer;
+#clusterGetNodeForSlot(I)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#clusterGetNodes()Ljava/util/Set;
+#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Set;
+#clusterGetMasterSlaveMap()Ljava/util/Map;
+#clusterGetNodeForKey([B)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#clusterGetClusterInfo()Lorg/springframework/data/redis/connection/ClusterInfo;
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
+#close()V
+#isClosed()Z
+#getNativeConnection()Lredis/clients/jedis/JedisCluster;
+#isQueueing()Z
+#isPipelined()Z
+#openPipeline()V
+#closePipeline()Ljava/util/List;
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
+#getNativeConnection()Ljava/lang/Object;
+#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
+#clusterGetNodes()Ljava/lang/Iterable;
@1.8.0.RELEASE
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([B[[B)Ljava/util/List;
+#geoPos([B[[B)Ljava/util/List;
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([B[[B)Ljava/lang/Long;
@2.0.0.RELEASE
+#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
+#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
+#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisClusterServerCommands;
+#scriptingCommands()Lorg/springframework/data/redis/connection/RedisScriptingCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
-#del([[B)Ljava/lang/Long;
-#type([B)Lorg/springframework/data/redis/connection/DataType;
-#keys([B)Ljava/util/Set;
-#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#randomKey()[B
-#rename([B[B)V
-#renameNX([B[B)Ljava/lang/Boolean;
-#expire([BJ)Ljava/lang/Boolean;
-#pExpire([BJ)Ljava/lang/Boolean;
-#expireAt([BJ)Ljava/lang/Boolean;
-#pExpireAt([BJ)Ljava/lang/Boolean;
-#persist([B)Ljava/lang/Boolean;
-#move([BI)Ljava/lang/Boolean;
-#ttl([B)Ljava/lang/Long;
-#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
-#pTtl([B)Ljava/lang/Long;
-#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
-#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
-#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
-#dump([B)[B
-#restore([BJ[B)V
-#get([B)[B
-#getSet([B[B)[B
-#mGet([[B)Ljava/util/List;
-#set([B[B)V
-#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
-#setNX([B[B)Ljava/lang/Boolean;
-#setEx([BJ[B)V
-#pSetEx([BJ[B)V
-#mSet(Ljava/util/Map;)V
-#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
-#incr([B)Ljava/lang/Long;
-#incrBy([BJ)Ljava/lang/Long;
-#incrBy([BD)Ljava/lang/Double;
-#decr([B)Ljava/lang/Long;
-#decrBy([BJ)Ljava/lang/Long;
-#append([B[B)Ljava/lang/Long;
-#getRange([BJJ)[B
-#setRange([B[BJ)V
-#getBit([BJ)Ljava/lang/Boolean;
-#setBit([BJZ)Ljava/lang/Boolean;
-#bitCount([B)Ljava/lang/Long;
-#bitCount([BJJ)Ljava/lang/Long;
-#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
-#strLen([B)Ljava/lang/Long;
-#rPush([B[[B)Ljava/lang/Long;
-#lPush([B[[B)Ljava/lang/Long;
-#rPushX([B[B)Ljava/lang/Long;
-#lPushX([B[B)Ljava/lang/Long;
-#lLen([B)Ljava/lang/Long;
-#lRange([BJJ)Ljava/util/List;
-#lTrim([BJJ)V
-#lIndex([BJ)[B
-#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
-#lSet([BJ[B)V
-#lRem([BJ[B)Ljava/lang/Long;
-#lPop([B)[B
-#rPop([B)[B
-#bLPop(I[[B)Ljava/util/List;
-#bRPop(I[[B)Ljava/util/List;
-#rPopLPush([B[B)[B
-#bRPopLPush(I[B[B)[B
-#sAdd([B[[B)Ljava/lang/Long;
-#sRem([B[[B)Ljava/lang/Long;
-#sPop([B)[B
-#sMove([B[B[B)Ljava/lang/Boolean;
-#sCard([B)Ljava/lang/Long;
-#sIsMember([B[B)Ljava/lang/Boolean;
-#sInter([[B)Ljava/util/Set;
-#sInterStore([B[[B)Ljava/lang/Long;
-#sUnion([[B)Ljava/util/Set;
-#sUnionStore([B[[B)Ljava/lang/Long;
-#sDiff([[B)Ljava/util/Set;
-#sDiffStore([B[[B)Ljava/lang/Long;
-#sMembers([B)Ljava/util/Set;
-#sRandMember([B)[B
-#sRandMember([BJ)Ljava/util/List;
-#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zAdd([BD[B)Ljava/lang/Boolean;
-#zAdd([BLjava/util/Set;)Ljava/lang/Long;
-#zRem([B[[B)Ljava/lang/Long;
-#zIncrBy([BD[B)Ljava/lang/Double;
-#zRank([B[B)Ljava/lang/Long;
-#zRevRank([B[B)Ljava/lang/Long;
-#zRange([BJJ)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeByLex([B)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeWithScores([BJJ)Ljava/util/Set;
-#zRangeByScore([BDD)Ljava/util/Set;
-#zRangeByScoreWithScores([BDD)Ljava/util/Set;
-#zRangeByScore([BDDJJ)Ljava/util/Set;
-#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
-#zRevRange([BJJ)Ljava/util/Set;
-#zRevRangeWithScores([BJJ)Ljava/util/Set;
-#zRevRangeByScore([BDD)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
-#zRevRangeByScore([BDDJJ)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
-#zCount([BDD)Ljava/lang/Long;
-#zCard([B)Ljava/lang/Long;
-#zScore([B[B)Ljava/lang/Double;
-#zRemRange([BJJ)Ljava/lang/Long;
-#zRemRangeByScore([BDD)Ljava/lang/Long;
-#zUnionStore([B[[B)Ljava/lang/Long;
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zInterStore([B[[B)Ljava/lang/Long;
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
-#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
-#hSet([B[B[B)Ljava/lang/Boolean;
-#hSetNX([B[B[B)Ljava/lang/Boolean;
-#hGet([B[B)[B
-#hMGet([B[[B)Ljava/util/List;
-#hMSet([BLjava/util/Map;)V
-#hIncrBy([B[BJ)Ljava/lang/Long;
-#hIncrBy([B[BD)Ljava/lang/Double;
-#hExists([B[B)Ljava/lang/Boolean;
-#hDel([B[[B)Ljava/lang/Long;
-#hLen([B)Ljava/lang/Long;
-#hKeys([B)Ljava/util/Set;
-#hVals([B)Ljava/util/List;
-#hGetAll([B)Ljava/util/Map;
-#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
-#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
-#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
-#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
-#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
-#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
-#geoHash([B[[B)Ljava/util/List;
-#geoPos([B[[B)Ljava/util/List;
-#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
-#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
-#geoRemove([B[[B)Ljava/lang/Long;
-#bgWriteAof()V
-#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#bgReWriteAof()V
-#bgSave()V
-#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#lastSave()Ljava/lang/Long;
-#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#save()V
-#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#dbSize()Ljava/lang/Long;
-#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#flushDb()V
-#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#flushAll()V
-#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#info()Ljava/util/Properties;
-#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;
-#info(Ljava/lang/String;)Ljava/util/Properties;
-#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
-#shutdown()V
-#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
-#getConfig(Ljava/lang/String;)Ljava/util/List;
-#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/List;
-#setConfig(Ljava/lang/String;Ljava/lang/String;)V
-#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V
-#resetConfigStats()V
-#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#time()Ljava/lang/Long;
-#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#killClient(Ljava/lang/String;I)V
-#setClientName([B)V
-#getClientName()Ljava/lang/String;
-#getClientList()Ljava/util/List;
-#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;
-#slaveOf(Ljava/lang/String;I)V
-#slaveOfNoOne()V
-#scriptFlush()V
-#scriptKill()V
-#scriptLoad([B)Ljava/lang/String;
-#scriptExists([Ljava/lang/String;)Ljava/util/List;
-#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#pfAdd([B[[B)Ljava/lang/Long;
-#pfCount([[B)Ljava/lang/Long;
-#pfMerge([B[[B)V
-#exists([B)Ljava/lang/Boolean;
-#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
-#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
@2.1.0.RELEASE
+#execute(Ljava/lang/String;[BLjava/util/Collection;)Ljava/lang/Object;
+#execute(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/List;
+#scan(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@2.2.0.RELEASE
+#<init>(Lredis/clients/jedis/JedisCluster;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;Lorg/springframework/data/redis/connection/ClusterTopologyProvider;)V
@2.5.0
+#streamCommands()Lorg/springframework/data/redis/connection/RedisStreamCommands;
+#rewriteConfig()V
@3.0.0
+#commands()Lorg/springframework/data/redis/connection/RedisCommands;
+#clusterCommands()Lorg/springframework/data/redis/connection/RedisClusterCommands;
+#clusterGetReplicas(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Set;
+#clusterGetMasterReplicaMap()Ljava/util/Map;
+#clusterGetReplicas(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
-#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Set;
-#clusterGetMasterSlaveMap()Ljava/util/Map;
-#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;

+###org/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptions
@2.2.0.RELEASE
+#builder()Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#builder(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#getPollTimeout()Ljava/time/Duration;
+#getBatchSize()Ljava/util/OptionalInt;
+#getKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getHashKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getHashValueSerializer()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getHashMapper()Lorg/springframework/data/redis/hash/HashMapper;
+#getTargetType()Ljava/lang/Class;
@2.4.2
+#getResumeFunction()Ljava/util/function/Function;
+#getRequiredHashMapper()Lorg/springframework/data/redis/hash/HashMapper;
+#hasHashMapper()Z

+###org/springframework/data/redis/RedisSystemException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/redis/repository/configuration/EnableRedisRepositories
@1.7.0.RELEASE
+#value()[Ljava/lang/String;
+#basePackages()[Ljava/lang/String;
+#basePackageClasses()[Ljava/lang/Class;
+#excludeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
+#includeFilters()[Lorg/springframework/context/annotation/ComponentScan$Filter;
+#repositoryImplementationPostfix()Ljava/lang/String;
+#namedQueriesLocation()Ljava/lang/String;
+#queryLookupStrategy()Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
+#repositoryFactoryBeanClass()Ljava/lang/Class;
+#repositoryBaseClass()Ljava/lang/Class;
+#keyValueTemplateRef()Ljava/lang/String;
+#considerNestedRepositories()Z
+#redisTemplateRef()Ljava/lang/String;
+#indexConfiguration()Ljava/lang/Class;
+#keyspaceConfiguration()Ljava/lang/Class;
@1.7.2.RELEASE
+#enableKeyspaceEvents()Lorg/springframework/data/redis/core/RedisKeyValueAdapter$EnableKeyspaceEvents;
@1.7.3.RELEASE
+#keyspaceNotificationsConfigParameter()Ljava/lang/String;
@2.4.0
+#shadowCopy()Lorg/springframework/data/redis/core/RedisKeyValueAdapter$ShadowCopy;
@2.6.6
+#messageListenerContainerRef()Ljava/lang/String;
@2.7.0
-#messageListenerContainerRef()Ljava/lang/String;
@2.7.2
+#messageListenerContainerRef()Ljava/lang/String;

+###org/springframework/data/redis/repository/query/RedisOperationChain
@1.7.0.RELEASE
+#<init>()V
+#sismember(Ljava/lang/String;Ljava/lang/Object;)V
+#sismember(Lorg/springframework/data/redis/repository/query/RedisOperationChain$PathAndValue;)V
+#getSismember()Ljava/util/Set;
+#orSismember(Ljava/lang/String;Ljava/lang/Object;)V
+#orSismember(Lorg/springframework/data/redis/repository/query/RedisOperationChain$PathAndValue;)V
+#orSismember(Ljava/util/Collection;)V
+#getOrSismember()Ljava/util/Set;
@1.8.0.RELEASE
+#near(Lorg/springframework/data/redis/repository/query/RedisOperationChain$NearPath;)V
+#getNear()Lorg/springframework/data/redis/repository/query/RedisOperationChain$NearPath;
@2.1.0.RELEASE
+#isEmpty()Z

+###org/springframework/data/redis/listener/ChannelTopic
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getTopic()Ljava/lang/String;
@1.0.3.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.1.0.RELEASE
+#of(Ljava/lang/String;)Lorg/springframework/data/redis/listener/ChannelTopic;

+###org/springframework/data/redis/core/mapping/RedisMappingContext
@1.7.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/redis/core/convert/MappingConfiguration;)V
+#setFallbackKeySpaceResolver(Lorg/springframework/data/keyvalue/core/mapping/KeySpaceResolver;)V
+#getPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/redis/core/mapping/RedisPersistentEntity;
+#getPersistentEntity(Lorg/springframework/data/keyvalue/core/mapping/KeyValuePersistentProperty;)Lorg/springframework/data/redis/core/mapping/RedisPersistentEntity;
+#getPersistentEntity(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/redis/core/mapping/RedisPersistentEntity;
+#getMappingConfiguration()Lorg/springframework/data/redis/core/convert/MappingConfiguration;
+#getPersistentEntity(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
+#getPersistentEntity(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
+#getPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
+#getPersistentEntity(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/PersistentEntity;
+#getPersistentEntity(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentEntity;
+#getPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
@2.0.0.RELEASE
-#getPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/redis/core/mapping/RedisPersistentEntity;
-#getPersistentEntity(Lorg/springframework/data/keyvalue/core/mapping/KeyValuePersistentProperty;)Lorg/springframework/data/redis/core/mapping/RedisPersistentEntity;
-#getPersistentEntity(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/redis/core/mapping/RedisPersistentEntity;
-#getPersistentEntity(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
-#getPersistentEntity(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
-#getPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
-#getPersistentEntity(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/PersistentEntity;
-#getPersistentEntity(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentEntity;
-#getPersistentEntity(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;

+###org/springframework/data/redis/core/RedisKeyValueTemplate
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisKeyValueAdapter;Lorg/springframework/data/redis/core/mapping/RedisMappingContext;)V
+#getMappingContext()Lorg/springframework/data/redis/core/mapping/RedisMappingContext;
+#find(Lorg/springframework/data/redis/core/RedisCallback;Ljava/lang/Class;)Ljava/util/List;
+#getMappingContext()Lorg/springframework/data/mapping/context/MappingContext;
@1.8.0.RELEASE
+#insert(Ljava/io/Serializable;Ljava/lang/Object;)V
+#update(Ljava/lang/Object;)V
@2.0.0.RELEASE
+#insert(Ljava/lang/Object;Ljava/lang/Object;)V
-#insert(Ljava/io/Serializable;Ljava/lang/Object;)V
@2.1.0.RELEASE
+#getConverter()Lorg/springframework/data/redis/core/convert/RedisConverter;
+#insert(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#update(Ljava/lang/Object;)Ljava/lang/Object;
+#update(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#insert(Ljava/lang/Object;Ljava/lang/Object;)V
-#update(Ljava/lang/Object;)V

+###org/springframework/data/redis/core/ReactiveHashOperationsExtensionsKt
@2.2.0.RELEASE
+#hasKeyAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#getAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#multiGetAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#incrementAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Ljava/lang/Object;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#keysAsFlow(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#incrementAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Ljava/lang/Object;DLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#sizeAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#putAllAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#putAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#putIfAbsentAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#valuesAsFlow(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#entriesAsFlow(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#scanAsFlow(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lkotlinx/coroutines/flow/Flow;
+#scanAsFlow$default(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#removeAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveHashOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/data/redis/core/ZSetOperations$TypedTuple
@1.0.0.RELEASE
+#getValue()Ljava/lang/Object;
+#getScore()Ljava/lang/Double;
@2.5.0
+#of(Ljava/lang/Object;Ljava/lang/Double;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;

+###org/springframework/data/redis/core/index/IndexDefinitionProvider
@1.7.0.RELEASE
+#hasIndexFor(Ljava/io/Serializable;)Z
+#hasIndexFor(Ljava/io/Serializable;Ljava/lang/String;)Z
+#getIndexDefinitionsFor(Ljava/io/Serializable;)Ljava/util/Set;
+#getIndexDefinitionsFor(Ljava/io/Serializable;Ljava/lang/String;)Ljava/util/Set;

+###org/springframework/data/redis/core/index/RedisIndexDefinition$CompositeValueTransformer
@1.7.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/core/BoundSetOperations
@1.0.0.RELEASE
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#diff(Ljava/lang/Object;)Ljava/util/Set;
+#diff(Ljava/util/Collection;)Ljava/util/Set;
+#diffAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
+#diffAndStore(Ljava/util/Collection;Ljava/lang/Object;)V
+#intersect(Ljava/lang/Object;)Ljava/util/Set;
+#intersect(Ljava/util/Collection;)Ljava/util/Set;
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;)V
+#union(Ljava/lang/Object;)Ljava/util/Set;
+#union(Ljava/util/Collection;)Ljava/util/Set;
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;)V
+#add(Ljava/lang/Object;)Ljava/lang/Boolean;
+#isMember(Ljava/lang/Object;)Ljava/lang/Boolean;
+#members()Ljava/util/Set;
+#move(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#randomMember()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Boolean;
+#pop()Ljava/lang/Object;
+#size()Ljava/lang/Long;
@1.1.0.M1
+#distinctRandomMembers(J)Ljava/util/Set;
+#randomMembers(J)Ljava/util/List;
@1.1.0.M2
+#add([Ljava/lang/Object;)Ljava/lang/Long;
+#remove([Ljava/lang/Object;)Ljava/lang/Long;
-#add(Ljava/lang/Object;)Ljava/lang/Boolean;
-#remove(Ljava/lang/Object;)Ljava/lang/Boolean;
@1.4.0.RELEASE
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@2.6.0
+#isMember([Ljava/lang/Object;)Ljava/util/Map;
@3.0.0
+#difference(Ljava/lang/Object;)Ljava/util/Set;
+#difference(Ljava/util/Collection;)Ljava/util/Set;
*#diffAndStore(Ljava/lang/Object;Ljava/lang/Object;)V[deprecated]
+#differenceAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
*#diffAndStore(Ljava/util/Collection;Ljava/lang/Object;)V[deprecated]
+#differenceAndStore(Ljava/util/Collection;Ljava/lang/Object;)V

+###org/springframework/data/redis/core/convert/MappingRedisConverter$BinaryKeyspaceIdentifier
@1.8.10.RELEASE
+#of([B)Lorg/springframework/data/redis/core/convert/MappingRedisConverter$BinaryKeyspaceIdentifier;
+#isValid([B)Z
+#getKeyspace()[B
+#getId()[B
+#isPhantomKey()Z
@2.0.0.RELEASE
-###org/springframework/data/redis/core/convert/MappingRedisConverter$BinaryKeyspaceIdentifier

+###org/springframework/data/redis/core/convert/IndexResolver
@1.7.0.RELEASE
+#resolveIndexesFor(Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;
@1.8.0.RELEASE
+#resolveIndexesFor(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;

+###org/springframework/data/redis/core/GeoOperations
@1.8.0.RELEASE
+#geoAdd(Ljava/lang/Object;Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/lang/Long;
+#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;
+#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#geoPos(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
@2.0.0.RELEASE
+#add(Ljava/lang/Object;Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;
*#geoAdd(Ljava/lang/Object;Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;[deprecated]
+#add(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
*#geoAdd(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;[deprecated]
+#add(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Long;
*#geoAdd(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Long;[deprecated]
+#add(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/lang/Long;
*#geoAdd(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/lang/Long;[deprecated]
+#distance(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;
*#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;[deprecated]
+#distance(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
*#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;[deprecated]
+#hash(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
*#geoHash(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
+#position(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
*#geoPos(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
+#radius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
*#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
*#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;
*#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
*#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
*#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#remove(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
*#geoRemove(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;[deprecated]
@2.6.0
+#search(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;)Lorg/springframework/data/geo/GeoResults;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#search(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
@3.0.0
-#geoAdd(Ljava/lang/Object;Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;[deprecated]
-#geoAdd(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;[deprecated]
-#geoAdd(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Long;[deprecated]
-#geoAdd(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/lang/Long;[deprecated]
-#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;[deprecated]
-#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;[deprecated]
-#geoHash(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
-#geoPos(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;[deprecated]
-#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRemove(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;[deprecated]

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeCommand
@2.0.0.RELEASE
+#valuesWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeCommand;
+#reverseValuesWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeCommand;
+#withScores()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeCommand;
+#getRange()Lorg/springframework/data/domain/Range;
+#isWithScores()Z
+#getDirection()Lorg/springframework/data/domain/Sort$Direction;

+###org/springframework/data/redis/connection/ReactiveListCommands$Direction
@2.0.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;
@2.6.0
+#first()Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;
+#last()Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;

+###org/springframework/data/redis/connection/lettuce/DefaultLettucePool
@1.1.0.M1
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
+#afterPropertiesSet()V
+#getResource()Lcom/lambdaworks/redis/RedisAsyncConnection;
+#returnBrokenResource(Lcom/lambdaworks/redis/RedisAsyncConnection;)V
+#returnResource(Lcom/lambdaworks/redis/RedisAsyncConnection;)V
+#destroy()V
+#getClient()Lcom/lambdaworks/redis/RedisClient;
+#getPoolConfig()Lorg/apache/commons/pool/impl/GenericObjectPool$Config;
+#setPoolConfig(Lorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
+#getDatabase()I
+#setDatabase(I)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getTimeout()J
+#setTimeout(J)V
+#returnResource(Ljava/lang/Object;)V
+#returnBrokenResource(Ljava/lang/Object;)V
+#getResource()Ljava/lang/Object;
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;ILorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)V
+#getPoolConfig()Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;
+#setPoolConfig(Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)V
-#<init>(Ljava/lang/String;ILorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
-#getPoolConfig()Lorg/apache/commons/pool/impl/GenericObjectPool$Config;
-#setPoolConfig(Lorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
@1.6.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)V
+#isRedisSentinelAware()Z
@1.7.0.RELEASE
+#getClientResources()Lcom/lambdaworks/redis/resource/ClientResources;
+#setClientResources(Lcom/lambdaworks/redis/resource/ClientResources;)V
@1.8.0.RELEASE
+#getResource()Lcom/lambdaworks/redis/api/StatefulConnection;
+#returnBrokenResource(Lcom/lambdaworks/redis/api/StatefulConnection;)V
+#returnResource(Lcom/lambdaworks/redis/api/StatefulConnection;)V
+#getClient()Lcom/lambdaworks/redis/AbstractRedisClient;
-#getResource()Lcom/lambdaworks/redis/RedisAsyncConnection;
-#returnBrokenResource(Lcom/lambdaworks/redis/RedisAsyncConnection;)V
-#returnResource(Lcom/lambdaworks/redis/RedisAsyncConnection;)V
@2.0.0.RELEASE
+#getResource()Lio/lettuce/core/api/StatefulConnection;
+#returnBrokenResource(Lio/lettuce/core/api/StatefulConnection;)V
+#returnResource(Lio/lettuce/core/api/StatefulConnection;)V
+#getClient()Lio/lettuce/core/RedisClient;
+#getClientResources()Lio/lettuce/core/resource/ClientResources;
+#setClientResources(Lio/lettuce/core/resource/ClientResources;)V
+#getClient()Lio/lettuce/core/AbstractRedisClient;
-#getResource()Lcom/lambdaworks/redis/api/StatefulConnection;
-#returnBrokenResource(Lcom/lambdaworks/redis/api/StatefulConnection;)V
-#returnResource(Lcom/lambdaworks/redis/api/StatefulConnection;)V
-#getClient()Lcom/lambdaworks/redis/RedisClient;
-#getClientResources()Lcom/lambdaworks/redis/resource/ClientResources;
-#setClientResources(Lcom/lambdaworks/redis/resource/ClientResources;)V
-#getClient()Lcom/lambdaworks/redis/AbstractRedisClient;
@3.0.0
-###org/springframework/data/redis/connection/lettuce/DefaultLettucePool

+###org/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder
@2.0.0.RELEASE
+#useSsl()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingSslClientConfigurationBuilder;
+#clientResources(Lio/lettuce/core/resource/ClientResources;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#clientOptions(Lio/lettuce/core/ClientOptions;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#commandTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#shutdownTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#poolConfig(Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration;
+#build()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;
+#shutdownTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#commandTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#clientOptions(Lio/lettuce/core/ClientOptions;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#clientResources(Lio/lettuce/core/resource/ClientResources;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#useSsl()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceSslClientConfigurationBuilder;
@2.1.7.RELEASE
+#readFrom(Lio/lettuce/core/ReadFrom;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#clientName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#clientName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#readFrom(Lio/lettuce/core/ReadFrom;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
@2.2.0.RELEASE
+#shutdownQuietPeriod(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#shutdownQuietPeriod(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
@3.0.0
+#redisCredentialsProviderFactory(Lorg/springframework/data/redis/connection/lettuce/RedisCredentialsProviderFactory;)Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#redisCredentialsProviderFactory(Lorg/springframework/data/redis/connection/lettuce/RedisCredentialsProviderFactory;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;

+###org/springframework/data/redis/connection/lettuce/LettuceClusterConnection$LettuceMultiKeyClusterCommandCallback
@1.7.0.RELEASE

+###org/springframework/data/redis/connection/ReactiveClusterStringCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/ReactiveClusterScriptingCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/DefaultSortParameters
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/redis/connection/SortParameters$Range;Lorg/springframework/data/redis/connection/SortParameters$Order;Ljava/lang/Boolean;)V
+#<init>([BLorg/springframework/data/redis/connection/SortParameters$Range;[[BLorg/springframework/data/redis/connection/SortParameters$Order;Ljava/lang/Boolean;)V
+#getByPattern()[B
+#setByPattern([B)V
+#getLimit()Lorg/springframework/data/redis/connection/SortParameters$Range;
+#setLimit(Lorg/springframework/data/redis/connection/SortParameters$Range;)V
+#getGetPattern()[[B
+#addGetPattern([B)V
+#setGetPattern([[B)V
+#getOrder()Lorg/springframework/data/redis/connection/SortParameters$Order;
+#setOrder(Lorg/springframework/data/redis/connection/SortParameters$Order;)V
+#isAlphabetic()Ljava/lang/Boolean;
+#setAlphabetic(Ljava/lang/Boolean;)V
+#order(Lorg/springframework/data/redis/connection/SortParameters$Order;)Lorg/springframework/data/redis/connection/DefaultSortParameters;
+#alpha()Lorg/springframework/data/redis/connection/DefaultSortParameters;
+#asc()Lorg/springframework/data/redis/connection/DefaultSortParameters;
+#desc()Lorg/springframework/data/redis/connection/DefaultSortParameters;
+#numeric()Lorg/springframework/data/redis/connection/DefaultSortParameters;
+#get([B)Lorg/springframework/data/redis/connection/DefaultSortParameters;
+#by([B)Lorg/springframework/data/redis/connection/DefaultSortParameters;
+#limit(JJ)Lorg/springframework/data/redis/connection/DefaultSortParameters;

+###org/springframework/data/redis/connection/RedisSentinelCommands
@1.4.0.RELEASE
+#failover(Lorg/springframework/data/redis/connection/NamedNode;)V
+#masters()Ljava/util/Collection;
+#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;
+#remove(Lorg/springframework/data/redis/connection/NamedNode;)V
+#monitor(Lorg/springframework/data/redis/connection/RedisServer;)V
@3.0.0
+#replicas(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;
-#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;

+###org/springframework/data/redis/connection/ReactiveStringCommands$GetBitCommand
@2.0.0.RELEASE
+#bit(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$GetBitCommand;
+#atOffset(J)Lorg/springframework/data/redis/connection/ReactiveStringCommands$GetBitCommand;
+#getOffset()Ljava/lang/Long;

+###org/springframework/data/redis/connection/ReactiveSubscription
@2.1.0.RELEASE
+#subscribe([Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#pSubscribe([Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#unsubscribe()Lreactor/core/publisher/Mono;
+#unsubscribe([Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#pUnsubscribe()Lreactor/core/publisher/Mono;
+#pUnsubscribe([Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#getChannels()Ljava/util/Set;
+#getPatterns()Ljava/util/Set;
+#receive()Lreactor/core/publisher/Flux;
+#cancel()Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/connection/PoolException
@1.1.0.M1
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/data/redis/connection/jedis/JedisConverters
@1.1.0.M2
+#<init>()V
+#stringToBytes()Lorg/springframework/core/convert/converter/Converter;
+#stringListToByteList()Lorg/springframework/data/redis/connection/convert/ListConverter;
+#stringSetToByteSet()Lorg/springframework/data/redis/connection/convert/SetConverter;
+#stringMapToByteMap()Lorg/springframework/data/redis/connection/convert/MapConverter;
+#tupleSetToTupleSet()Lorg/springframework/data/redis/connection/convert/SetConverter;
+#exceptionConverter()Lorg/springframework/core/convert/converter/Converter;
+#toStrings([[B)[Ljava/lang/String;
+#toTupleSet(Ljava/util/Set;)Ljava/util/Set;
+#toBytes(Ljava/lang/Integer;)[B
+#toString([B)Ljava/lang/String;
+#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
+#toListPosition(Lorg/springframework/data/redis/connection/RedisListCommands$Position;)Lredis/clients/jedis/BinaryClient$LIST_POSITION;
+#toByteArrays(Ljava/util/Map;)[[B
+#toSortingParams(Lorg/springframework/data/redis/connection/SortParameters;)Lredis/clients/jedis/SortingParams;
@1.2.0.RELEASE
+#toBitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;)Lredis/clients/jedis/BitOP;
@1.3.0.RELEASE
+#toListOfRedisClientInformation(Ljava/lang/String;)Ljava/util/List;
@1.3.2.RELEASE
-#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
@1.3.4.RELEASE
+#toBytes(Ljava/lang/String;)[B
@1.4.0.RELEASE
+#tuplesToTuples()Lorg/springframework/data/redis/connection/convert/ListConverter;
+#toBytes(Ljava/lang/Long;)[B
+#toListOfRedisServer(Ljava/util/List;)Ljava/util/List;
+#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
@1.6.0.RELEASE
+#toBytes(Ljava/lang/Double;)[B
+#boundaryToBytesForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)[B
+#boundaryToBytesForZRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)[B
@1.7.0.RELEASE
+#toNode(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#toSetCommandExPxArgument(Lorg/springframework/data/redis/core/types/Expiration;)[B
+#toSetCommandNxXxArgument(Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)[B
+#toScanParams(Lorg/springframework/data/redis/core/ScanOptions;)Lredis/clients/jedis/ScanParams;
@1.8.0.RELEASE
+#toStrings(Ljava/util/List;)Ljava/util/List;
+#bytesListToStringListConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;
+#geoCoordinateToPointConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;
+#geoRadiusResponseToGeoResultsConverter(Lorg/springframework/data/geo/Metric;)Lorg/springframework/core/convert/converter/Converter;
+#toGeoUnit(Lorg/springframework/data/geo/Metric;)Lredis/clients/jedis/GeoUnit;
+#toGeoCoordinate(Lorg/springframework/data/geo/Point;)Lredis/clients/jedis/GeoCoordinate;
+#toGeoRadiusParam(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lredis/clients/jedis/params/geo/GeoRadiusParam;
@1.8.7.RELEASE
+#toTupleMap(Ljava/util/Set;)Ljava/util/Map;
@2.1.0.RELEASE
+#toEncoding([B)Lorg/springframework/data/redis/connection/ValueEncoding;
+#getBytesListToLongListConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;
+#toBitfieldCommandArguments(Lorg/springframework/data/redis/connection/BitFieldSubCommands;)[[B
@2.2.0.RELEASE
+#toListPosition(Lorg/springframework/data/redis/connection/RedisListCommands$Position;)Lredis/clients/jedis/ListPosition;
+#toSetCommandExPxArgument(Lorg/springframework/data/redis/core/types/Expiration;)Lredis/clients/jedis/params/SetParams;
+#toSetCommandExPxArgument(Lorg/springframework/data/redis/core/types/Expiration;Lredis/clients/jedis/params/SetParams;)Lredis/clients/jedis/params/SetParams;
+#toSetCommandNxXxArgument(Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lredis/clients/jedis/params/SetParams;
+#toSetCommandNxXxArgument(Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;Lredis/clients/jedis/params/SetParams;)Lredis/clients/jedis/params/SetParams;
+#toGeoRadiusParam(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lredis/clients/jedis/params/GeoRadiusParam;
-#toListPosition(Lorg/springframework/data/redis/connection/RedisListCommands$Position;)Lredis/clients/jedis/BinaryClient$LIST_POSITION;
-#toSetCommandExPxArgument(Lorg/springframework/data/redis/core/types/Expiration;)[B
-#toSetCommandNxXxArgument(Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)[B
-#toGeoRadiusParam(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lredis/clients/jedis/params/geo/GeoRadiusParam;
@2.5.0
*#stringSetToByteSet()Lorg/springframework/data/redis/connection/convert/SetConverter;[deprecated]
*#stringMapToByteMap()Lorg/springframework/data/redis/connection/convert/MapConverter;[deprecated]
*#tupleSetToTupleSet()Lorg/springframework/data/redis/connection/convert/SetConverter;[deprecated]
*#toTupleSet(Ljava/util/Set;)Ljava/util/Set;[deprecated]
+#toTuple(Lredis/clients/jedis/Tuple;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#toLong([B)Ljava/lang/Long;
*#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;[deprecated]
*#bytesListToStringListConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;[deprecated]
*#getBytesListToLongListConverter()Lorg/springframework/data/redis/connection/convert/ListConverter;[deprecated]
@3.0.0
-###org/springframework/data/redis/connection/jedis/JedisConverters

+###org/springframework/data/redis/connection/jedis/JedisClusterConnection$JedisClusterTopologyProvider
@2.2.0.RELEASE
+#<init>(Lredis/clients/jedis/JedisCluster;)V
+#<init>(Lredis/clients/jedis/JedisCluster;Ljava/time/Duration;)V
+#getTopology()Lorg/springframework/data/redis/connection/ClusterTopology;

+###org/springframework/data/redis/connection/ReactiveListCommands$LRemCommand
@2.0.0.RELEASE
+#all()Lorg/springframework/data/redis/connection/ReactiveListCommands$LRemCommand;
+#first(J)Lorg/springframework/data/redis/connection/ReactiveListCommands$LRemCommand;
+#last(J)Lorg/springframework/data/redis/connection/ReactiveListCommands$LRemCommand;
+#occurrencesOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LRemCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LRemCommand;
+#getCount()Ljava/lang/Long;
+#getValue()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ReactiveClusterZSetCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/convert/SetConverter
@1.1.0.M2
+#<init>(Lorg/springframework/core/convert/converter/Converter;)V
+#convert(Ljava/util/Set;)Ljava/util/Set;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@3.0.0
+#convert(Ljava/util/Collection;)Ljava/util/Set;

+###org/springframework/data/redis/hash/BeanUtilsHashMapper
@1.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#fromHash(Ljava/util/Map;)Ljava/lang/Object;
+#toHash(Ljava/lang/Object;)Ljava/util/Map;
@2.7.0
+#fromHash(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
@3.0.0
-#fromHash(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/data/redis/FallbackExceptionTranslationStrategy
@1.3.2.RELEASE
+#<init>(Lorg/springframework/core/convert/converter/Converter;)V
+#translate(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;

+###org/springframework/data/redis/support/collections/RedisMap
@1.0.0.RELEASE
+#increment(Ljava/lang/Object;J)Ljava/lang/Long;
@1.1.0.M1
+#increment(Ljava/lang/Object;D)Ljava/lang/Double;
@1.4.0.RELEASE
+#scan()Ljava/util/Iterator;
@2.6.0
+#randomKey()Ljava/lang/Object;
+#randomEntry()Ljava/util/Map$Entry;

+###org/springframework/data/redis/support/collections/RedisStore
@1.0.0.RELEASE
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;

+###org/springframework/data/redis/support/collections/RedisProperties
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/BoundHashOperations;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Ljava/util/Properties;Lorg/springframework/data/redis/core/BoundHashOperations;)V
+#<init>(Ljava/util/Properties;Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#propertyNames()Ljava/util/Enumeration;
+#clear()V
+#clone()Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#elements()Ljava/util/Enumeration;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#isEmpty()Z
+#keys()Ljava/util/Enumeration;
+#keySet()Ljava/util/Set;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#values()Ljava/util/Collection;
+#increment(Ljava/lang/Object;J)Ljava/lang/Long;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#expire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/util/Date;)Ljava/lang/Boolean;
+#getExpire()Ljava/lang/Long;
+#getKey()Ljava/lang/String;
+#getType()Lorg/springframework/data/redis/connection/DataType;
+#persist()Ljava/lang/Boolean;
+#rename(Ljava/lang/String;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#storeToXML(Ljava/io/OutputStream;Ljava/lang/String;Ljava/lang/String;)V
+#storeToXML(Ljava/io/OutputStream;Ljava/lang/String;)V
+#rename(Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
@1.1.0.M1
+#increment(Ljava/lang/Object;D)Ljava/lang/Double;
@1.4.0.RELEASE
+#scan()Ljava/util/Iterator;
@2.6.0
+#randomKey()Ljava/lang/Object;
+#randomEntry()Ljava/util/Map$Entry;

+###org/springframework/data/redis/repository/core/MappingRedisEntityInformation
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/mapping/RedisPersistentEntity;)V

+###org/springframework/data/redis/serializer/GenericToStringSerializer
@1.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Ljava/nio/charset/Charset;)V
+#setConversionService(Lorg/springframework/core/convert/ConversionService;)V
+#setTypeConverter(Lorg/springframework/beans/TypeConverter;)V
+#deserialize([B)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)[B
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V

+###org/springframework/data/redis/serializer/SerializationUtils
@1.0.0.RELEASE
+#<init>()V
+#deserialize(Ljava/util/Set;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/Set;
+#deserialize(Ljava/util/List;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#deserialize(Ljava/util/Collection;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/Collection;
@1.0.4.RELEASE
+#deserialize(Ljava/util/Map;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/Map;
@1.1.0.M2
+#deserialize(Ljava/util/Map;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/Map;

+###org/springframework/data/redis/core/mapping/RedisPersistentProperty
@1.7.0.RELEASE
+#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mapping/PersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
+#isIdProperty()Z
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/mapping/model/Property;Lorg/springframework/data/mapping/PersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
-#<init>(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mapping/PersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V

+###org/springframework/data/redis/core/ReactiveStreamOperationsExtensionsKt
@2.2.0.RELEASE
+#acknowledgeAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#acknowledgeAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#acknowledgeAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/Record;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#add(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/MapRecord;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/Record;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;[Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/Record;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;[Lorg/springframework/data/redis/connection/stream/RecordId;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#createGroupAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#createGroupAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteConsumerAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/Consumer;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#destroyGroupAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#sizeAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rangeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#rangeWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeWithTypeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#readAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#readAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#readWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#readWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#readAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#readAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#readWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#readWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeWithTypeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#trimAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
@2.7.4
+#trimAndAwait(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;JZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
@3.0.0
+#rangeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#rangeWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeWithTypeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeWithTypeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#rangeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#rangeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#rangeWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#rangeWithTypeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeWithTypeAsFlow(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeWithTypeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveStreamOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;

+###org/springframework/data/redis/core/ValueOperations
@1.0.0.RELEASE
+#set(Ljava/lang/Object;Ljava/lang/Object;)V
+#set(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
+#setIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#multiSet(Ljava/util/Map;)V
+#multiSetIfAbsent(Ljava/util/Map;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#multiGet(Ljava/util/Collection;)Ljava/util/List;
+#increment(Ljava/lang/Object;J)Ljava/lang/Long;
+#append(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Integer;
+#get(Ljava/lang/Object;JJ)Ljava/lang/String;
+#set(Ljava/lang/Object;Ljava/lang/Object;J)V
+#size(Ljava/lang/Object;)Ljava/lang/Long;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@1.1.0.M1
+#multiSetIfAbsent(Ljava/util/Map;)Ljava/lang/Boolean;
+#increment(Ljava/lang/Object;D)Ljava/lang/Double;
-#multiSetIfAbsent(Ljava/util/Map;)V
@1.5.0.RELEASE
+#setBit(Ljava/lang/Object;JZ)Ljava/lang/Boolean;
+#getBit(Ljava/lang/Object;J)Ljava/lang/Boolean;
@2.1.0.RELEASE
+#set(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)V
+#setIfAbsent(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#setIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Boolean;
+#setIfPresent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#setIfPresent(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#setIfPresent(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Boolean;
+#increment(Ljava/lang/Object;)Ljava/lang/Long;
+#decrement(Ljava/lang/Object;)Ljava/lang/Long;
+#decrement(Ljava/lang/Object;J)Ljava/lang/Long;
+#bitField(Ljava/lang/Object;Lorg/springframework/data/redis/connection/BitFieldSubCommands;)Ljava/util/List;
@2.6.0
+#getAndDelete(Ljava/lang/Object;)Ljava/lang/Object;
+#getAndExpire(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#getAndExpire(Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Object;
+#getAndPersist(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/core/index/IndexDefinition
@1.7.0.RELEASE
+#getKeyspace()Ljava/lang/String;
+#getConditions()Ljava/util/Collection;
+#valueTransformer()Lorg/springframework/data/redis/core/index/IndexValueTransformer;
+#getIndexName()Ljava/lang/String;

+###org/springframework/data/redis/core/query/SortQueryBuilder
@1.0.0.RELEASE
+#sort(Ljava/lang/Object;)Lorg/springframework/data/redis/core/query/SortQueryBuilder;
+#by(Ljava/lang/String;)Lorg/springframework/data/redis/core/query/SortCriterion;
+#noSort()Lorg/springframework/data/redis/core/query/SortCriterion;
+#get(Ljava/lang/String;)Lorg/springframework/data/redis/core/query/SortCriterion;
+#order(Lorg/springframework/data/redis/connection/SortParameters$Order;)Lorg/springframework/data/redis/core/query/SortCriterion;
+#limit(Lorg/springframework/data/redis/connection/SortParameters$Range;)Lorg/springframework/data/redis/core/query/SortCriterion;
+#limit(JJ)Lorg/springframework/data/redis/core/query/SortCriterion;
+#build()Lorg/springframework/data/redis/core/query/SortQuery;
+#alphabetical(Z)Lorg/springframework/data/redis/core/query/SortCriterion;

+###org/springframework/data/redis/core/RedisCommand
@1.3.0.RELEASE
+#values()[Lorg/springframework/data/redis/core/RedisCommand;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/core/RedisCommand;
+#requiresArguments()Z
+#requiresExactNumberOfArguments()Z
+#isRead()Z
+#isWrite()Z
+#isReadonly()Z
+#isRepresentedBy(Ljava/lang/String;)Z
+#validateArgumentCount(I)V
+#failsafeCommandLookup(Ljava/lang/String;)Lorg/springframework/data/redis/core/RedisCommand;

+###org/springframework/data/redis/core/convert/Bucket
@1.7.0.RELEASE
+#<init>()V
+#put(Ljava/lang/String;[B)V
+#get(Ljava/lang/String;)[B
+#entrySet()Ljava/util/Set;
+#isEmpty()Z
+#size()I
+#values()Ljava/util/Collection;
+#keySet()Ljava/util/Set;
+#asMap()Ljava/util/Map;
+#extract(Ljava/lang/String;)Lorg/springframework/data/redis/core/convert/Bucket;
+#extractAllKeysFor(Ljava/lang/String;)Ljava/util/Set;
+#rawMap()Ljava/util/Map;
+#newBucketFromRawMap(Ljava/util/Map;)Lorg/springframework/data/redis/core/convert/Bucket;
+#newBucketFromStringMap(Ljava/util/Map;)Lorg/springframework/data/redis/core/convert/Bucket;
+#toString()Ljava/lang/String;
@2.0.0.RELEASE
+#remove(Ljava/lang/String;)V
@2.1.0.RELEASE
+#getPath()Lorg/springframework/data/redis/core/convert/Bucket$BucketPropertyPath;
+#getPropertyPath(Ljava/lang/String;)Lorg/springframework/data/redis/core/convert/Bucket$BucketPropertyPath;
@2.5.0
+#hasValue(Ljava/lang/String;)Z

+###org/springframework/data/redis/cache/RedisCacheConfiguration
@2.0.0.RELEASE
+#defaultCacheConfig()Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#entryTtl(Ljava/time/Duration;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#prefixKeysWith(Ljava/lang/String;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#disableCachingNullValues()Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#disableKeyPrefix()Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#withConversionService(Lorg/springframework/core/convert/ConversionService;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#serializeKeysWith(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#serializeValuesWith(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
+#getKeyPrefix()Ljava/util/Optional;
+#usePrefix()Z
+#getAllowCacheNullValues()Z
+#getKeySerializationPair()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getValueSerializationPair()Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;
+#getTtl()Ljava/time/Duration;
+#getConversionService()Lorg/springframework/core/convert/ConversionService;
+#registerDefaultConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V
@2.0.4.RELEASE
+#computePrefixWith(Lorg/springframework/data/redis/cache/CacheKeyPrefix;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
*#getKeyPrefix()Ljava/util/Optional;[deprecated]
+#getKeyPrefixFor(Ljava/lang/String;)Ljava/lang/String;
@2.1.0.RELEASE
+#defaultCacheConfig(Ljava/lang/ClassLoader;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
@2.1.11.RELEASE
+#addCacheKeyConverter(Lorg/springframework/core/convert/converter/Converter;)V
+#configureKeyConverters(Ljava/util/function/Consumer;)V
@2.3.0.RELEASE
*#prefixKeysWith(Ljava/lang/String;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;[deprecated]
+#prefixCacheNameWith(Ljava/lang/String;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
@3.0.0
-#prefixKeysWith(Ljava/lang/String;)Lorg/springframework/data/redis/cache/RedisCacheConfiguration;[deprecated]
-#getKeyPrefix()Ljava/util/Optional;[deprecated]

+###org/springframework/data/redis/connection/ReactiveRedisConnection$RangeCommand
@2.0.0.RELEASE
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveRedisConnection$RangeCommand;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveRedisConnection$RangeCommand;
+#fromIndex(J)Lorg/springframework/data/redis/connection/ReactiveRedisConnection$RangeCommand;
+#toIndex(J)Lorg/springframework/data/redis/connection/ReactiveRedisConnection$RangeCommand;
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/ReactiveListCommands$PopResult
@2.0.0.RELEASE
+#<init>(Ljava/util/List;)V
+#getKey()Ljava/nio/ByteBuffer;
+#getValue()Ljava/nio/ByteBuffer;
+#getRaw()Ljava/util/List;

+###org/springframework/data/redis/connection/RedisInvalidSubscriptionException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/data/redis/connection/ReactiveClusterSetCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/ReactiveSetCommands$SIsMemberCommand
@2.0.0.RELEASE
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SIsMemberCommand;
+#of(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SIsMemberCommand;
+#getValue()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/DefaultTuple
@1.0.0.RELEASE
+#<init>([BLjava/lang/Double;)V
+#getScore()Ljava/lang/Double;
+#getValue()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Double;)I
+#compareTo(Ljava/lang/Object;)I
@2.6.0
+#toString()Ljava/lang/String;
@3.0.0
-###org/springframework/data/redis/connection/DefaultTuple

+###org/springframework/data/redis/connection/ReactiveNumberCommands$DecrByCommand
@2.0.0.RELEASE
+#decr(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveNumberCommands$DecrByCommand;
+#by(Ljava/lang/Number;)Lorg/springframework/data/redis/connection/ReactiveNumberCommands$DecrByCommand;
+#getValue()Ljava/lang/Number;

+###org/springframework/data/redis/connection/DefaultedRedisConnection
@2.0.0.RELEASE
+#exists([B)Ljava/lang/Boolean;[deprecated]
+#del([[B)Ljava/lang/Long;[deprecated]
+#type([B)Lorg/springframework/data/redis/connection/DataType;[deprecated]
+#keys([B)Ljava/util/Set;[deprecated]
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;[deprecated]
+#randomKey()[B[deprecated]
+#rename([B[B)V[deprecated]
+#renameNX([B[B)Ljava/lang/Boolean;[deprecated]
+#expire([BJ)Ljava/lang/Boolean;[deprecated]
+#persist([B)Ljava/lang/Boolean;[deprecated]
+#move([BI)Ljava/lang/Boolean;[deprecated]
+#restore([BJ[B)V[deprecated]
+#pTtl([B)Ljava/lang/Long;[deprecated]
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;[deprecated]
+#pExpire([BJ)Ljava/lang/Boolean;[deprecated]
+#pExpireAt([BJ)Ljava/lang/Boolean;[deprecated]
+#expireAt([BJ)Ljava/lang/Boolean;[deprecated]
+#ttl([B)Ljava/lang/Long;[deprecated]
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;[deprecated]
+#dump([B)[B[deprecated]
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;[deprecated]
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;[deprecated]
+#get([B)[B[deprecated]
+#getSet([B[B)[B[deprecated]
+#mGet([[B)Ljava/util/List;[deprecated]
+#set([B[B)Ljava/lang/Boolean;[deprecated]
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Ljava/lang/Boolean;[deprecated]
+#setNX([B[B)Ljava/lang/Boolean;[deprecated]
+#setEx([BJ[B)Ljava/lang/Boolean;[deprecated]
+#pSetEx([BJ[B)Ljava/lang/Boolean;[deprecated]
+#mSet(Ljava/util/Map;)Ljava/lang/Boolean;[deprecated]
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;[deprecated]
+#incr([B)Ljava/lang/Long;[deprecated]
+#incrBy([BD)Ljava/lang/Double;[deprecated]
+#incrBy([BJ)Ljava/lang/Long;[deprecated]
+#decr([B)Ljava/lang/Long;[deprecated]
+#decrBy([BJ)Ljava/lang/Long;[deprecated]
+#append([B[B)Ljava/lang/Long;[deprecated]
+#getRange([BJJ)[B[deprecated]
+#setRange([B[BJ)V[deprecated]
+#getBit([BJ)Ljava/lang/Boolean;[deprecated]
+#setBit([BJZ)Ljava/lang/Boolean;[deprecated]
+#bitCount([B)Ljava/lang/Long;[deprecated]
+#bitCount([BJJ)Ljava/lang/Long;[deprecated]
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;[deprecated]
+#strLen([B)Ljava/lang/Long;[deprecated]
+#rPush([B[[B)Ljava/lang/Long;[deprecated]
+#lPush([B[[B)Ljava/lang/Long;[deprecated]
+#rPushX([B[B)Ljava/lang/Long;[deprecated]
+#lPushX([B[B)Ljava/lang/Long;[deprecated]
+#lLen([B)Ljava/lang/Long;[deprecated]
+#lRange([BJJ)Ljava/util/List;[deprecated]
+#lTrim([BJJ)V[deprecated]
+#lIndex([BJ)[B[deprecated]
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;[deprecated]
+#lSet([BJ[B)V[deprecated]
+#lRem([BJ[B)Ljava/lang/Long;[deprecated]
+#lPop([B)[B[deprecated]
+#rPop([B)[B[deprecated]
+#bLPop(I[[B)Ljava/util/List;[deprecated]
+#bRPop(I[[B)Ljava/util/List;[deprecated]
+#rPopLPush([B[B)[B[deprecated]
+#bRPopLPush(I[B[B)[B[deprecated]
+#sAdd([B[[B)Ljava/lang/Long;[deprecated]
+#sCard([B)Ljava/lang/Long;[deprecated]
+#sDiff([[B)Ljava/util/Set;[deprecated]
+#sDiffStore([B[[B)Ljava/lang/Long;[deprecated]
+#sInter([[B)Ljava/util/Set;[deprecated]
+#sInterStore([B[[B)Ljava/lang/Long;[deprecated]
+#sIsMember([B[B)Ljava/lang/Boolean;[deprecated]
+#sMembers([B)Ljava/util/Set;[deprecated]
+#sMove([B[B[B)Ljava/lang/Boolean;[deprecated]
+#sPop([B)[B[deprecated]
+#sPop([BJ)Ljava/util/List;[deprecated]
+#sRandMember([B)[B[deprecated]
+#sRandMember([BJ)Ljava/util/List;[deprecated]
+#sRem([B[[B)Ljava/lang/Long;[deprecated]
+#sUnion([[B)Ljava/util/Set;[deprecated]
+#sUnionStore([B[[B)Ljava/lang/Long;[deprecated]
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;[deprecated]
+#zAdd([BD[B)Ljava/lang/Boolean;[deprecated]
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;[deprecated]
+#zCard([B)Ljava/lang/Long;[deprecated]
+#zCount([BDD)Ljava/lang/Long;[deprecated]
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#zIncrBy([BD[B)Ljava/lang/Double;[deprecated]
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;[deprecated]
+#zInterStore([B[[B)Ljava/lang/Long;[deprecated]
+#zRange([BJJ)Ljava/util/Set;[deprecated]
+#zRangeWithScores([BJJ)Ljava/util/Set;[deprecated]
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
+#zRevRangeWithScores([BJJ)Ljava/util/Set;[deprecated]
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
+#zRank([B[B)Ljava/lang/Long;[deprecated]
+#zRem([B[[B)Ljava/lang/Long;[deprecated]
+#zRemRange([BJJ)Ljava/lang/Long;[deprecated]
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#zRemRangeByScore([BDD)Ljava/lang/Long;[deprecated]
+#zRevRange([BJJ)Ljava/util/Set;[deprecated]
+#zRevRank([B[B)Ljava/lang/Long;[deprecated]
+#zScore([B[B)Ljava/lang/Double;[deprecated]
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;[deprecated]
+#zUnionStore([B[[B)Ljava/lang/Long;[deprecated]
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;[deprecated]
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;[deprecated]
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;[deprecated]
+#hSet([B[B[B)Ljava/lang/Boolean;[deprecated]
+#hSetNX([B[B[B)Ljava/lang/Boolean;[deprecated]
+#hDel([B[[B)Ljava/lang/Long;[deprecated]
+#hExists([B[B)Ljava/lang/Boolean;[deprecated]
+#hGet([B[B)[B[deprecated]
+#hGetAll([B)Ljava/util/Map;[deprecated]
+#hIncrBy([B[BD)Ljava/lang/Double;[deprecated]
+#hIncrBy([B[BJ)Ljava/lang/Long;[deprecated]
+#hKeys([B)Ljava/util/Set;[deprecated]
+#hLen([B)Ljava/lang/Long;
+#hMGet([B[[B)Ljava/util/List;[deprecated]
+#hMSet([BLjava/util/Map;)V[deprecated]
+#hVals([B)Ljava/util/List;[deprecated]
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;[deprecated]
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;[deprecated]
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;[deprecated]
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;[deprecated]
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;[deprecated]
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;[deprecated]
+#geoHash([B[[B)Ljava/util/List;[deprecated]
+#geoPos([B[[B)Ljava/util/List;[deprecated]
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#geoRemove([B[[B)Ljava/lang/Long;[deprecated]
+#pfAdd([B[[B)Ljava/lang/Long;[deprecated]
+#pfCount([[B)Ljava/lang/Long;[deprecated]
+#pfMerge([B[[B)V[deprecated]
+#bgWriteAof()V[deprecated]
+#bgReWriteAof()V[deprecated]
+#bgSave()V[deprecated]
+#lastSave()Ljava/lang/Long;[deprecated]
+#save()V[deprecated]
+#dbSize()Ljava/lang/Long;[deprecated]
+#flushDb()V[deprecated]
+#flushAll()V[deprecated]
+#info()Ljava/util/Properties;[deprecated]
+#info(Ljava/lang/String;)Ljava/util/Properties;[deprecated]
+#shutdown()V[deprecated]
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V[deprecated]
+#getConfig(Ljava/lang/String;)Ljava/util/Properties;[deprecated]
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#resetConfigStats()V[deprecated]
+#time()Ljava/lang/Long;[deprecated]
+#killClient(Ljava/lang/String;I)V[deprecated]
+#setClientName([B)V[deprecated]
+#getClientName()Ljava/lang/String;[deprecated]
+#getClientList()Ljava/util/List;[deprecated]
+#slaveOf(Ljava/lang/String;I)V[deprecated]
+#slaveOfNoOne()V[deprecated]
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V[deprecated]
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V[deprecated]
+#scriptFlush()V[deprecated]
+#scriptKill()V[deprecated]
+#scriptLoad([B)Ljava/lang/String;[deprecated]
+#scriptExists([Ljava/lang/String;)Ljava/util/List;[deprecated]
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;[deprecated]
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;[deprecated]
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;[deprecated]
@2.1.0.RELEASE
+#exists([[B)Ljava/lang/Long;[deprecated]
+#unlink([[B)Ljava/lang/Long;[deprecated]
+#touch([[B)Ljava/lang/Long;[deprecated]
+#restore([BJ[BZ)V[deprecated]
+#encodingOf([B)Lorg/springframework/data/redis/connection/ValueEncoding;[deprecated]
+#idletime([B)Ljava/time/Duration;[deprecated]
+#refcount([B)Ljava/lang/Long;[deprecated]
+#bitField([BLorg/springframework/data/redis/connection/BitFieldSubCommands;)Ljava/util/List;[deprecated]
+#bitPos([BZLorg/springframework/data/domain/Range;)Ljava/lang/Long;[deprecated]
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;[deprecated]
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;[deprecated]
+#hStrLen([B[B)Ljava/lang/Long;[deprecated]
-#restore([BJ[B)V[deprecated]
@2.2.0.RELEASE
+#xAck([BLjava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;[deprecated]
+#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;[deprecated]
+#xDel([B[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;[deprecated]
+#xGroupCreate([BLjava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Ljava/lang/String;[deprecated]
+#xGroupDelConsumer([BLorg/springframework/data/redis/connection/stream/Consumer;)Ljava/lang/Boolean;[deprecated]
+#xGroupDestroy([BLjava/lang/String;)Ljava/lang/Boolean;[deprecated]
+#xLen([B)Ljava/lang/Long;[deprecated]
+#xRange([BLorg/springframework/data/domain/Range;)Ljava/util/List;[deprecated]
+#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;[deprecated]
+#xRead([Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;[deprecated]
+#xRead(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;[deprecated]
+#xReadGroup(Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;[deprecated]
+#xReadGroup(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;[deprecated]
+#xRevRange([BLorg/springframework/data/domain/Range;)Ljava/util/List;[deprecated]
+#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;[deprecated]
+#xTrim([BJ)Ljava/lang/Long;[deprecated]
@2.3.0.RELEASE
+#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;)Lorg/springframework/data/redis/connection/stream/RecordId;[deprecated]
+#xClaimJustId([BLjava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;[deprecated]
+#xClaim([BLjava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;[deprecated]
+#xGroupCreate([BLjava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Z)Ljava/lang/String;[deprecated]
+#xInfo([B)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoStream;[deprecated]
+#xInfoGroups([B)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups;[deprecated]
+#xInfoConsumers([BLjava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers;[deprecated]
+#xPending([BLjava/lang/String;)Lorg/springframework/data/redis/connection/stream/PendingMessagesSummary;[deprecated]
+#xPending([BLjava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;)Lorg/springframework/data/redis/connection/stream/PendingMessages;[deprecated]
-#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;[deprecated]
@2.4.0
+#xTrim([BJZ)Ljava/lang/Long;[deprecated]
+#lPos([B[BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;[deprecated]
+#zLexCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
@2.5.0
+#zAdd([BD[BLorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Boolean;[deprecated]
+#zAdd([BLjava/util/Set;Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Long;[deprecated]
+#zRemRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#rewriteConfig()V[deprecated]
+#time(Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;[deprecated]
-#zAdd([BD[B)Ljava/lang/Boolean;[deprecated]
-#zAdd([BLjava/util/Set;)Ljava/lang/Long;[deprecated]
@2.6.0
+#copy([B[BZ)Ljava/lang/Boolean;[deprecated]
+#getEx([BLorg/springframework/data/redis/core/types/Expiration;)[B[deprecated]
+#getDel([B)[B[deprecated]
+#lMove([B[BLorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)[B[deprecated]
+#bLMove([B[BLorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;D)[B[deprecated]
+#lPop([BJ)Ljava/util/List;[deprecated]
+#rPop([BJ)Ljava/util/List;[deprecated]
+#sMIsMember([B[[B)Ljava/util/List;[deprecated]
+#zPopMin([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
+#zPopMin([BJ)Ljava/util/Set;[deprecated]
+#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
+#zPopMax([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
+#zPopMax([BJ)Ljava/util/Set;[deprecated]
+#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
+#zDiff([[B)Ljava/util/Set;[deprecated]
+#zDiffWithScores([[B)Ljava/util/Set;[deprecated]
+#zDiffStore([B[[B)Ljava/lang/Long;[deprecated]
+#zInter([[B)Ljava/util/Set;[deprecated]
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;[deprecated]
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;[deprecated]
+#zInterWithScores([[B)Ljava/util/Set;[deprecated]
+#zRandMember([B)[B[deprecated]
+#zRandMember([BJ)Ljava/util/List;[deprecated]
+#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
+#zRandMemberWithScore([BJ)Ljava/util/List;[deprecated]
+#zMScore([B[[B)Ljava/util/List;[deprecated]
+#zUnion([[B)Ljava/util/Set;[deprecated]
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;[deprecated]
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;[deprecated]
+#zUnionWithScores([[B)Ljava/util/Set;[deprecated]
+#hRandField([B)[B[deprecated]
+#hRandFieldWithValues([B)Ljava/util/Map$Entry;[deprecated]
+#hRandField([BJ)Ljava/util/List;[deprecated]
+#hRandFieldWithValues([BJ)Ljava/util/List;[deprecated]
+#geoSearch([BLorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#geoSearchStore([B[BLorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;[deprecated]
@2.7.0
+#flushDb(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V[deprecated]
+#flushAll(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V[deprecated]
@3.0.0
+#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;[deprecated]
+#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;[deprecated]
+#zLexCount([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;[deprecated]
+#zPopMin([B)Lorg/springframework/data/redis/connection/zset/Tuple;[deprecated]
+#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/zset/Tuple;[deprecated]
+#zPopMax([B)Lorg/springframework/data/redis/connection/zset/Tuple;[deprecated]
+#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/zset/Tuple;[deprecated]
+#zCount([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;[deprecated]
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/util/Set;[deprecated]
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/util/Set;[deprecated]
+#zInterStore([BLorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/lang/Long;[deprecated]
+#zInterStore([BLorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/lang/Long;[deprecated]
+#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/zset/Tuple;[deprecated]
+#zRangeByLex([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#zRevRangeByLex([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#zRangeByScore([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#zRangeByScoreWithScores([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#zRevRangeByScore([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#zRevRangeByScoreWithScores([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#zRemRangeByLex([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;[deprecated]
+#zRemRangeByScore([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;[deprecated]
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/util/Set;[deprecated]
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/util/Set;[deprecated]
+#zUnionStore([BLorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/lang/Long;[deprecated]
+#zUnionStore([BLorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/lang/Long;[deprecated]
+#replicaOf(Ljava/lang/String;I)V[deprecated]
+#replicaOfNoOne()V[deprecated]
+#zRangeStoreByLex([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;[deprecated]
+#zRangeStoreRevByLex([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;[deprecated]
+#zRangeStoreByScore([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;[deprecated]
+#zRangeStoreRevByScore([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;[deprecated]
-#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;[deprecated]
-#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;[deprecated]
-#zLexCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
-#zPopMin([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
-#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
-#zPopMax([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
-#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
-#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;[deprecated]
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;[deprecated]
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;[deprecated]
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;[deprecated]
-#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;[deprecated]
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
-#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;[deprecated]
-#zRemRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
-#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;[deprecated]
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;[deprecated]
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;[deprecated]
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;[deprecated]
-#bgWriteAof()V[deprecated]
-#slaveOf(Ljava/lang/String;I)V[deprecated]
-#slaveOfNoOne()V[deprecated]

+###org/springframework/data/redis/connection/StringRedisConnection
@1.0.0.RELEASE
+#exists(Ljava/lang/String;)Ljava/lang/Boolean;
+#del([Ljava/lang/String;)Ljava/lang/Long;
+#type(Ljava/lang/String;)Lorg/springframework/data/redis/connection/DataType;
+#keys(Ljava/lang/String;)Ljava/util/Collection;
+#rename(Ljava/lang/String;Ljava/lang/String;)V
+#renameNX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#expire(Ljava/lang/String;J)Ljava/lang/Boolean;
+#expireAt(Ljava/lang/String;J)Ljava/lang/Boolean;
+#persist(Ljava/lang/String;)Ljava/lang/Boolean;
+#move(Ljava/lang/String;I)Ljava/lang/Boolean;
+#ttl(Ljava/lang/String;)Ljava/lang/Long;
+#echo(Ljava/lang/String;)Ljava/lang/String;
+#sort(Ljava/lang/String;Lorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort(Ljava/lang/String;Lorg/springframework/data/redis/connection/SortParameters;Ljava/lang/String;)Ljava/lang/Long;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getSet(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#mGet([Ljava/lang/String;)Ljava/util/List;
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#setNX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#setEx(Ljava/lang/String;JLjava/lang/String;)V
+#mSetString(Ljava/util/Map;)V
+#mSetNXString(Ljava/util/Map;)V
+#incr(Ljava/lang/String;)Ljava/lang/Long;
+#incrBy(Ljava/lang/String;J)Ljava/lang/Long;
+#decr(Ljava/lang/String;)Ljava/lang/Long;
+#decrBy(Ljava/lang/String;J)Ljava/lang/Long;
+#append(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#getRange(Ljava/lang/String;JJ)Ljava/lang/String;
+#setRange(Ljava/lang/String;Ljava/lang/String;J)V
+#getBit(Ljava/lang/String;J)Ljava/lang/Boolean;
+#setBit(Ljava/lang/String;JZ)V
+#strLen(Ljava/lang/String;)Ljava/lang/Long;
+#rPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#rPushX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lPushX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lLen(Ljava/lang/String;)Ljava/lang/Long;
+#lRange(Ljava/lang/String;JJ)Ljava/util/List;
+#lTrim(Ljava/lang/String;JJ)V
+#lIndex(Ljava/lang/String;J)Ljava/lang/String;
+#lInsert(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisListCommands$Position;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lSet(Ljava/lang/String;JLjava/lang/String;)V
+#lRem(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/Long;
+#lPop(Ljava/lang/String;)Ljava/lang/String;
+#rPop(Ljava/lang/String;)Ljava/lang/String;
+#bLPop(I[Ljava/lang/String;)Ljava/util/List;
+#bRPop(I[Ljava/lang/String;)Ljava/util/List;
+#rPopLPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#bRPopLPush(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#sAdd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#sRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#sPop(Ljava/lang/String;)Ljava/lang/String;
+#sMove(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#sCard(Ljava/lang/String;)Ljava/lang/Long;
+#sIsMember(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#sInter([Ljava/lang/String;)Ljava/util/Set;
+#sInterStore(Ljava/lang/String;[Ljava/lang/String;)V
+#sUnion([Ljava/lang/String;)Ljava/util/Set;
+#sUnionStore(Ljava/lang/String;[Ljava/lang/String;)V
+#sDiff([Ljava/lang/String;)Ljava/util/Set;
+#sDiffStore(Ljava/lang/String;[Ljava/lang/String;)V
+#sMembers(Ljava/lang/String;)Ljava/util/Set;
+#sRandMember(Ljava/lang/String;)Ljava/lang/String;
+#zAdd(Ljava/lang/String;DLjava/lang/String;)Ljava/lang/Boolean;
+#zRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#zIncrBy(Ljava/lang/String;DLjava/lang/String;)Ljava/lang/Double;
+#zRank(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#zRevRank(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#zRange(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRangeWithScores(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRevRange(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRevRangeWithScores(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRangeByScore(Ljava/lang/String;DD)Ljava/util/Set;
+#zRangeByScoreWithScores(Ljava/lang/String;DD)Ljava/util/Set;
+#zRangeByScore(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#zCount(Ljava/lang/String;DD)Ljava/lang/Long;
+#zCard(Ljava/lang/String;)Ljava/lang/Long;
+#zScore(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Double;
+#zRemRange(Ljava/lang/String;JJ)Ljava/lang/Long;
+#zRemRangeByScore(Ljava/lang/String;DD)Ljava/lang/Long;
+#zUnionStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zUnionStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#zInterStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zInterStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#hSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hSetNX(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hGet(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#hMGet(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#hMSet(Ljava/lang/String;Ljava/util/Map;)V
+#hIncrBy(Ljava/lang/String;Ljava/lang/String;J)Ljava/lang/Long;
+#hExists(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hDel(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hLen(Ljava/lang/String;)Ljava/lang/Long;
+#hKeys(Ljava/lang/String;)Ljava/util/Set;
+#hVals(Ljava/lang/String;)Ljava/util/List;
+#hGetAll(Ljava/lang/String;)Ljava/util/Map;
+#publish(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[Ljava/lang/String;)V
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[Ljava/lang/String;)V
@1.0.1.RELEASE
+#execute(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;
+#execute(Ljava/lang/String;)Ljava/lang/Object;
@1.1.0.M1
+#pExpire(Ljava/lang/String;J)Ljava/lang/Boolean;
+#pExpireAt(Ljava/lang/String;J)Ljava/lang/Boolean;
+#pTtl(Ljava/lang/String;)Ljava/lang/Long;
+#mSetNXString(Ljava/util/Map;)Ljava/lang/Boolean;
+#incrBy(Ljava/lang/String;D)Ljava/lang/Double;
+#bitCount(Ljava/lang/String;)Ljava/lang/Long;
+#bitCount(Ljava/lang/String;JJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sRandMember(Ljava/lang/String;J)Ljava/util/List;
+#hIncrBy(Ljava/lang/String;Ljava/lang/String;D)Ljava/lang/Double;
+#scriptLoad(Ljava/lang/String;)Ljava/lang/String;
+#eval(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[Ljava/lang/String;)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[Ljava/lang/String;)Ljava/lang/Object;
-#mSetNXString(Ljava/util/Map;)V
@1.1.0.M2
+#rPush(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#lPush(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sAdd(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sRem(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sInterStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sUnionStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sDiffStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zAdd(Ljava/lang/String;Ljava/util/Set;)Ljava/lang/Long;
+#zRem(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zRevRangeByScore(Ljava/lang/String;DD)Ljava/util/Set;
+#zRevRangeByScoreWithScores(Ljava/lang/String;DD)Ljava/util/Set;
+#zRevRangeByScore(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#hDel(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
-#rPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
-#lPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
-#sAdd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
-#sRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
-#sInterStore(Ljava/lang/String;[Ljava/lang/String;)V
-#sUnionStore(Ljava/lang/String;[Ljava/lang/String;)V
-#sDiffStore(Ljava/lang/String;[Ljava/lang/String;)V
-#zRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
-#hDel(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
@1.3.0.RELEASE
+#pSetEx(Ljava/lang/String;JLjava/lang/String;)V
+#setBit(Ljava/lang/String;JZ)Ljava/lang/Boolean;
+#setClientName(Ljava/lang/String;)V
+#getClientList()Ljava/util/List;
-#setBit(Ljava/lang/String;JZ)V
@1.4.0.RELEASE
+#hScan(Ljava/lang/String;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan(Ljava/lang/String;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan(Ljava/lang/String;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.5.0.RELEASE
+#zRangeByScore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#pfAdd(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#pfCount([Ljava/lang/String;)Ljava/lang/Long;
+#pfMerge(Ljava/lang/String;[Ljava/lang/String;)V
@1.6.0.RELEASE
+#zRangeByLex(Ljava/lang/String;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@1.7.0.RELEASE
+#set(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
@1.8.0.RELEASE
+#ttl(Ljava/lang/String;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#pTtl(Ljava/lang/String;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Lorg/springframework/data/geo/Point;Ljava/lang/String;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/Long;
+#geoDist(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/geo/Distance;
+#geoDist(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#geoPos(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#geoRadius(Ljava/lang/String;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius(Ljava/lang/String;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/String;Ljava/lang/String;D)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
@2.0.0.RELEASE
+#set(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#set(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Ljava/lang/Boolean;
+#setEx(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/Boolean;
+#pSetEx(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/Boolean;
+#mSetString(Ljava/util/Map;)Ljava/lang/Boolean;
+#sPop(Ljava/lang/String;J)Ljava/util/List;
-#set(Ljava/lang/String;Ljava/lang/String;)V
-#set(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
-#setEx(Ljava/lang/String;JLjava/lang/String;)V
-#pSetEx(Ljava/lang/String;JLjava/lang/String;)V
-#mSetString(Ljava/util/Map;)V
@2.1.0.RELEASE
+#exists([Ljava/lang/String;)Ljava/lang/Long;
+#unlink([Ljava/lang/String;)Ljava/lang/Long;
+#touch([Ljava/lang/String;)Ljava/lang/Long;
+#encodingOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ValueEncoding;
+#idletime(Ljava/lang/String;)Ljava/time/Duration;
+#refcount(Ljava/lang/String;)Ljava/lang/Long;
+#bitPos(Ljava/lang/String;Z)Ljava/lang/Long;
+#bitPos(Ljava/lang/String;ZLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#hStrLen(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#bitfield(Ljava/lang/String;Lorg/springframework/data/redis/connection/BitFieldSubCommands;)Ljava/util/List;
@2.2.0.RELEASE
+#entryIds([Ljava/lang/String;)[Lorg/springframework/data/redis/connection/stream/RecordId;
+#xAck(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#xAck(Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xAdd(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xAdd(Lorg/springframework/data/redis/connection/stream/StringRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xDel(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#xDel(Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xGroupCreate(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;)Ljava/lang/String;
+#xGroupDelConsumer(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/Consumer;)Ljava/lang/Boolean;
+#xGroupDestroy(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#xLen(Ljava/lang/String;)Ljava/lang/Long;
+#xRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#xRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xReadAsString(Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadAsString([Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadAsString(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadAsString(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroupAsString(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroupAsString(Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroupAsString(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroupAsString(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xRevRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#xRevRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xTrim(Ljava/lang/String;J)Ljava/lang/Long;
@2.3.0.RELEASE
+#xAdd(Lorg/springframework/data/redis/connection/stream/StringRecord;Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xClaimJustId(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xClaim(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/util/List;
+#xClaim(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xGroupCreate(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;Z)Ljava/lang/String;
+#xInfo(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoStream;
+#xInfoGroups(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups;
+#xInfoConsumers(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers;
+#xPending(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/PendingMessagesSummary;
+#xPending(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
@2.4.0
+#lPos(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lPos(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;
+#zLexCount(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRevRangeByLex(Ljava/lang/String;)Ljava/util/Set;
+#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#xTrim(Ljava/lang/String;JZ)Ljava/lang/Long;
@2.5.0
+#zAdd(Ljava/lang/String;DLjava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Boolean;
+#zAdd(Ljava/lang/String;Ljava/util/Set;Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Long;
+#zRemRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
@2.6.0
+#copy(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/Boolean;
+#getDel(Ljava/lang/String;)Ljava/lang/String;
+#getEx(Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;)Ljava/lang/String;
+#lMove(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/String;
+#bLMove(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;D)Ljava/lang/String;
+#lPop(Ljava/lang/String;J)Ljava/util/List;
+#rPop(Ljava/lang/String;J)Ljava/util/List;
+#sMIsMember(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#zRandMember(Ljava/lang/String;)Ljava/lang/String;
+#zRandMember(Ljava/lang/String;J)Ljava/util/List;
+#zRandMemberWithScore(Ljava/lang/String;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zRandMemberWithScores(Ljava/lang/String;J)Ljava/util/List;
+#zPopMin(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zPopMin(Ljava/lang/String;J)Ljava/util/Set;
+#bZPopMin(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zPopMax(Ljava/lang/String;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zPopMax(Ljava/lang/String;J)Ljava/util/Set;
+#bZPopMax(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zMScore(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#zDiff([Ljava/lang/String;)Ljava/util/Set;
+#zDiffWithScores([Ljava/lang/String;)Ljava/util/Set;
+#zDiffStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zInter([Ljava/lang/String;)Ljava/util/Set;
+#zInterWithScores([Ljava/lang/String;)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
+#zUnion([Ljava/lang/String;)Ljava/util/Set;
+#zUnionWithScores([Ljava/lang/String;)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
+#hRandField(Ljava/lang/String;)Ljava/lang/String;
+#hRandFieldWithValues(Ljava/lang/String;)Ljava/util/Map$Entry;
+#hRandField(Ljava/lang/String;J)Ljava/util/List;
+#hRandFieldWithValues(Ljava/lang/String;J)Ljava/util/List;
+#geoSearch(Ljava/lang/String;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoSearchStore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
@3.0.0
+#zLexCount(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zPopMin(Ljava/lang/String;)Lorg/springframework/data/redis/connection/zset/Tuple;
+#zRemRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;[I[Ljava/lang/String;)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[Ljava/lang/String;)Ljava/util/Set;
+#zInterStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/zset/Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;[I[Ljava/lang/String;)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[Ljava/lang/String;)Ljava/util/Set;
+#zUnionStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/zset/Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRangeStoreByLex(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreByLex(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByLex(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreRevByLex(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreByScore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreByScore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByScore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreRevByScore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#xRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#xRevRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
-#zLexCount(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zPopMin(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#zRemRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/util/Set;
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
-#zInterStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/util/Set;
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
-#zUnionStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
-#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#xRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#xRevRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;

+###org/springframework/data/redis/connection/RedisServerCommands
@1.0.0.RELEASE
+#bgWriteAof()V
+#bgSave()V
+#lastSave()Ljava/lang/Long;
+#save()V
+#dbSize()Ljava/lang/Long;
+#flushDb()V
+#flushAll()V
+#info()Ljava/util/Properties;
+#shutdown()V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
@1.1.0.M1
+#info(Ljava/lang/String;)Ljava/util/Properties;
@1.2.0.RELEASE
+#time()Ljava/lang/Long;
@1.3.0.RELEASE
*#bgWriteAof()V[deprecated]
+#bgReWriteAof()V
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
+#killClient(Ljava/lang/String;I)V
+#setClientName([B)V
+#getClientName()Ljava/lang/String;
+#getClientList()Ljava/util/List;
+#slaveOf(Ljava/lang/String;I)V
+#slaveOfNoOne()V
@1.7.0.RELEASE
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
@2.0.0.RELEASE
+#getConfig(Ljava/lang/String;)Ljava/util/Properties;
-#getConfig(Ljava/lang/String;)Ljava/util/List;
@2.5.0
+#rewriteConfig()V
+#time(Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
@2.7.0
+#flushDb(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V
+#flushAll(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V
@3.0.0
+#replicaOf(Ljava/lang/String;I)V
+#replicaOfNoOne()V
-#bgWriteAof()V[deprecated]
-#slaveOf(Ljava/lang/String;I)V
-#slaveOfNoOne()V

+###org/springframework/data/redis/connection/Pool
@1.1.0.M1
+#getResource()Ljava/lang/Object;
+#returnBrokenResource(Ljava/lang/Object;)V
+#returnResource(Ljava/lang/Object;)V
+#destroy()V
@3.0.0
-###org/springframework/data/redis/connection/Pool

+###org/springframework/data/redis/connection/RedisConfiguration
@2.1.0.RELEASE
+#getDatabaseOrElse(Ljava/util/function/Supplier;)Ljava/lang/Integer;
+#getPasswordOrElse(Ljava/util/function/Supplier;)Lorg/springframework/data/redis/connection/RedisPassword;
+#isPasswordAware(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#isDatabaseIndexAware(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#isSentinelConfiguration(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#isClusterConfiguration(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#isStaticMasterReplicaConfiguration(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#isDomainSocketConfiguration(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#getDatabaseOrElse(Lorg/springframework/data/redis/connection/RedisConfiguration;Ljava/util/function/Supplier;)Ljava/lang/Integer;
+#getPasswordOrElse(Lorg/springframework/data/redis/connection/RedisConfiguration;Ljava/util/function/Supplier;)Lorg/springframework/data/redis/connection/RedisPassword;
@2.1.6.RELEASE
+#isHostAndPortAware(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#getPortOrElse(Lorg/springframework/data/redis/connection/RedisConfiguration;Ljava/util/function/IntSupplier;)I
+#getHostOrElse(Lorg/springframework/data/redis/connection/RedisConfiguration;Ljava/util/function/Supplier;)Ljava/lang/String;
@2.4.0
+#isAuthenticationAware(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z
+#getUsernameOrElse(Lorg/springframework/data/redis/connection/RedisConfiguration;Ljava/util/function/Supplier;)Ljava/lang/String;
-#isPasswordAware(Lorg/springframework/data/redis/connection/RedisConfiguration;)Z

+###org/springframework/data/redis/connection/ReactiveZSetCommands
@2.0.0.RELEASE
+#zAdd(Ljava/nio/ByteBuffer;Ljava/lang/Double;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zAdd(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#zAdd(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRem(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zRem(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#zRem(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zIncrBy(Ljava/nio/ByteBuffer;Ljava/lang/Number;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zIncrBy(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRank(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zRevRank(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zRank(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRangeWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRevRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRevRangeWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRange(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#zRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#zRevRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRevRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#zRevRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRevRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#zRangeByScore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zCount(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#zCount(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zCard(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zCard(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zScore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zScore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRemRangeByRank(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#zRemRangeByRank(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRemRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#zRemRangeByScore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
+#zUnionStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
+#zInterStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#zRevRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#zRevRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#zRangeByLex(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.1.0.RELEASE
+#zScan(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#zScan(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
+#zScan(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
@2.4.0
+#zLexCount(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#zLexCount(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.5.0
+#zRemRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#zRemRangeByLex(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.6.0
+#zRandMember(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zRandMember(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#zRandMember(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRandMemberWithScore(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zRandMemberWithScore(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#zRandMemberWithScore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zPopMin(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zPopMin(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#bZPopMin(Ljava/nio/ByteBuffer;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#zPopMax(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#zPopMax(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#bZPopMax(Ljava/nio/ByteBuffer;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#zPop(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#bZPop(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zMScore(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#zMScore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zDiff(Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zDiff(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zDiffWithScores(Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zDiffWithScores(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zDiffStore(Ljava/nio/ByteBuffer;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#zDiffStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zInter(Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zInter(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zUnion(Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zUnion(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@3.0.0
+#zRangeStoreByScore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#zRangeStoreByLex(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#zRangeStoreRevByScore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#zRangeStoreRevByLex(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#zRangeStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#zRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#zRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#zRevRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#zRevRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Flux;
+#zInterWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Flux;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Mono;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Mono;
+#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Mono;
+#zUnionWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Flux;
+#zUnionWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Flux;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Mono;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Mono;
+#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/zset/Weights;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Mono;
+#zRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#zRevRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
-#zRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#zRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#zRevRangeByScore(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#zRevRangeByScoreWithScores(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#zInterWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
-#zInterWithScores(Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
-#zInterWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
-#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
-#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
-#zInterStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
-#zUnionWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
-#zUnionWithScores(Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
-#zUnionWithScores(Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
-#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
-#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
-#zUnionStore(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
-#zRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#zRevRangeByLex(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ReactiveRedisConnection$KeyScanCommand
@2.1.0.RELEASE
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveRedisConnection$KeyScanCommand;
+#withOptions(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/connection/ReactiveRedisConnection$KeyScanCommand;
+#getOptions()Lorg/springframework/data/redis/core/ScanOptions;

+###org/springframework/data/redis/connection/ClusterCommandExecutor$MultiNodeResult
@2.0.0.RELEASE
+#<init>()V
+#getResults()Ljava/util/List;
+#resultsAsList()Ljava/util/List;
+#resultsAsListSortBy([[B)Ljava/util/List;
+#getFirstNonNullNotEmptyOrDefault(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/RedisSubscribedConnectionException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/data/redis/connection/convert/Converters
@1.1.0.M2
+#<init>()V
+#stringToProps()Lorg/springframework/core/convert/converter/Converter;
+#longToBoolean()Lorg/springframework/core/convert/converter/Converter;
+#stringToDataType()Lorg/springframework/core/convert/converter/Converter;
+#toProperties(Ljava/lang/String;)Ljava/util/Properties;
+#toBoolean(Ljava/lang/Long;)Ljava/lang/Boolean;
+#toDataType(Ljava/lang/String;)Lorg/springframework/data/redis/connection/DataType;
+#toBit(Ljava/lang/Boolean;)[B
+#toObjects(Ljava/util/Set;)Ljava/util/List;
@1.2.0.RELEASE
+#toTimeMillis(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
@1.4.0.RELEASE
+#toProperties(Ljava/util/Map;)Ljava/util/Properties;
@1.7.0.RELEASE
+#toSetOfRedisClusterNodes(Ljava/util/Collection;)Ljava/util/Set;
+#toSetOfRedisClusterNodes(Ljava/lang/String;)Ljava/util/Set;
@1.8.0.RELEASE
+#secondsToTimeUnit(JLjava/util/concurrent/TimeUnit;)J
+#secondsToTimeUnit(Ljava/util/concurrent/TimeUnit;)Lorg/springframework/core/convert/converter/Converter;
+#millisecondsToTimeUnit(JLjava/util/concurrent/TimeUnit;)J
+#millisecondsToTimeUnit(Ljava/util/concurrent/TimeUnit;)Lorg/springframework/core/convert/converter/Converter;
+#deserializingGeoResultsConverter(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/core/convert/converter/Converter;
+#distanceConverterForMetric(Lorg/springframework/data/geo/Metric;)Lorg/springframework/core/convert/converter/Converter;
@2.0.0.RELEASE
+#stringToBoolean(Ljava/lang/String;)Ljava/lang/Boolean;
+#stringToBooleanConverter()Lorg/springframework/core/convert/converter/Converter;
+#toProperties(Ljava/util/List;)Ljava/util/Properties;
+#listToPropertiesConverter()Lorg/springframework/core/convert/converter/Converter;
+#mapToPropertiesConverter()Lorg/springframework/core/convert/converter/Converter;
@2.1.0.RELEASE
+#secondsToDuration(Ljava/lang/Long;)Ljava/time/Duration;
@2.3.0.RELEASE
+#parse(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#parse(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;
@2.5.0
+#identityConverter()Lorg/springframework/core/convert/converter/Converter;
+#toTimeMillis(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
@2.6.0
+#entryOf(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;

+###org/springframework/data/redis/hash/Jackson2HashMapper
@1.8.0.RELEASE
+#<init>(Z)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;Z)V
+#toHash(Ljava/lang/Object;)Ljava/util/Map;
+#fromHash(Ljava/util/Map;)Ljava/lang/Object;
@2.7.0
+#fromHash(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
@3.0.0
-#fromHash(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/data/redis/stream/Subscription
@2.2.0.RELEASE
+#isActive()Z
+#await(Ljava/time/Duration;)Z

+###org/springframework/data/redis/stream/StreamListener
@2.2.0.RELEASE
+#onMessage(Lorg/springframework/data/redis/connection/stream/Record;)V

+###org/springframework/data/redis/serializer/RedisSerializer
@1.0.0.RELEASE
+#serialize(Ljava/lang/Object;)[B
+#deserialize([B)Ljava/lang/Object;
@2.1.0.RELEASE
+#java()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#java(Ljava/lang/ClassLoader;)Lorg/springframework/data/redis/serializer/RedisSerializer;
+#json()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#string()Lorg/springframework/data/redis/serializer/RedisSerializer;
@2.2.0.RELEASE
+#byteArray()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#canSerialize(Ljava/lang/Class;)Z
+#getTargetType()Ljava/lang/Class;

+###org/springframework/data/redis/core/mapping/BasicRedisPersistentEntity
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/util/TypeInformation;Lorg/springframework/data/keyvalue/core/mapping/KeySpaceResolver;Lorg/springframework/data/redis/core/TimeToLiveAccessor;)V
+#getTimeToLiveAccessor()Lorg/springframework/data/redis/core/TimeToLiveAccessor;
@1.8.0.RELEASE
+#hasExplictTimeToLiveProperty()Z
+#getExplicitTimeToLiveProperty()Lorg/springframework/data/redis/core/mapping/RedisPersistentProperty;
+#getExplicitTimeToLiveProperty()Lorg/springframework/data/mapping/PersistentProperty;
@2.0.0.RELEASE
-#getExplicitTimeToLiveProperty()Lorg/springframework/data/mapping/PersistentProperty;

+###org/springframework/data/redis/core/SessionCallback
@1.0.0.RELEASE
+#execute(Lorg/springframework/data/redis/core/RedisOperations;)Ljava/lang/Object;

+###org/springframework/data/redis/core/RedisClusterCallback
@1.7.0.RELEASE
+#doInRedis(Lorg/springframework/data/redis/connection/RedisClusterConnection;)Ljava/lang/Object;

+###org/springframework/data/redis/core/ReactiveListOperationsExtensionsKt
@2.2.0.RELEASE
+#rangeAsFlow(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;JJ)Lkotlinx/coroutines/flow/Flow;
+#trimAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;JJLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#sizeAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#leftPushAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#leftPushAllAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#leftPushAllAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#leftPushIfPresentAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#leftPushAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPushAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPushAllAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPushAllAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPushIfPresentAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPushAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;JLjava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#removeAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;JLjava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#indexAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#leftPopAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#leftPopAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPopAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPopAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@2.3.0.RELEASE
+#rightPopAndLeftPushAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rightPopAndLeftPushAndAwait(Lorg/springframework/data/redis/core/ReactiveListOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/data/redis/core/TimeToLiveAccessor
@1.7.0.RELEASE
+#getTimeToLive(Ljava/lang/Object;)Ljava/lang/Long;
@2.3.0.RELEASE
+#isExpiringEntity(Ljava/lang/Class;)Z

+###org/springframework/data/redis/core/query/QueryUtils
@1.0.0.RELEASE
+#<init>()V
+#convertQuery(Lorg/springframework/data/redis/core/query/SortQuery;Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/connection/SortParameters;

+###org/springframework/data/redis/core/convert/PathIndexResolver
@1.7.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/redis/core/mapping/RedisMappingContext;)V
+#resolveIndexesFor(Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;
@1.8.0.RELEASE
+#resolveIndexesFor(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;

+###org/springframework/data/redis/core/convert/ReferenceResolverImpl
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;)V
+#resolveReference(Ljava/io/Serializable;Ljava/lang/String;)Ljava/util/Map;
@2.0.0.RELEASE
+#resolveReference(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map;
-#resolveReference(Ljava/io/Serializable;Ljava/lang/String;)Ljava/util/Map;

+###org/springframework/data/redis/core/convert/CompositeIndexResolver
@1.7.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#resolveIndexesFor(Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;
@1.8.0.RELEASE
+#resolveIndexesFor(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;

+###org/springframework/data/redis/core/convert/RedisConverter
@1.7.0.RELEASE
@1.8.0.RELEASE
+#getMappingContext()Lorg/springframework/data/redis/core/mapping/RedisMappingContext;
@2.0.0.RELEASE
+#getMappingContext()Lorg/springframework/data/mapping/context/MappingContext;
@2.1.0.RELEASE
+#getIndexResolver()Lorg/springframework/data/redis/core/convert/IndexResolver;

+###org/springframework/data/redis/core/convert/DefaultRedisTypeMapper
@2.1.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/mapping/context/MappingContext;)V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#isTypeKey(Ljava/lang/String;)Z

+###org/springframework/data/redis/connection/ReactiveListCommands$RPopLPushCommand
@2.0.0.RELEASE
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$RPopLPushCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$RPopLPushCommand;
+#getDestination()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ReactiveSetCommands$SAddCommand
@2.0.0.RELEASE
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SAddCommand;
+#values(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SAddCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SAddCommand;
+#getValues()Ljava/util/List;

+###org/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceSslClientConfigurationBuilder
@2.0.0.RELEASE
@2.0.3.RELEASE
+#disablePeerVerification()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceSslClientConfigurationBuilder;
+#startTls()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceSslClientConfigurationBuilder;
+#and()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;

+###org/springframework/data/redis/connection/ClusterCommandExecutor$MultiKeyClusterCommandCallback
@1.7.0.RELEASE
+#doInCluster(Ljava/lang/Object;[B)Ljava/lang/Object;

+###org/springframework/data/redis/connection/RedisClusterConnection
@1.7.0.RELEASE
+#ping(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/String;
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
+#keys(Lorg/springframework/data/redis/connection/RedisClusterNode;[B)Ljava/util/Set;
+#randomKey(Lorg/springframework/data/redis/connection/RedisClusterNode;)[B
+#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/List;
+#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;
@2.0.0.RELEASE
+#serverCommands()Lorg/springframework/data/redis/connection/RedisClusterServerCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
-#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;
-#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
-#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/List;
-#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V
-#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;
@2.1.0.RELEASE
+#scan(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#execute(Ljava/lang/String;[BLjava/util/Collection;)Ljava/lang/Object;
@3.0.0
-#serverCommands()Lorg/springframework/data/redis/connection/RedisClusterServerCommands;
-#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand$GroupCommandAction
@2.2.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand$GroupCommandAction;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand$GroupCommandAction;

+###org/springframework/data/redis/connection/ReactiveRedisConnection$KeyCommand
@2.0.0.RELEASE
+#<init>(Ljava/nio/ByteBuffer;)V
+#getKey()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ReactiveSetCommands
@2.0.0.RELEASE
+#sAdd(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#sAdd(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#sAdd(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sRem(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#sRem(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#sRem(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sPop(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#sPop(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#sPop(Lorg/springframework/data/redis/connection/ReactiveSetCommands$SPopCommand;)Lreactor/core/publisher/Flux;
+#sPop(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sMove(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#sMove(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sCard(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#sCard(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sIsMember(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#sIsMember(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sInter(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#sInter(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sInterStore(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#sInterStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sUnion(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#sUnion(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sUnionStore(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#sUnionStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sDiff(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#sDiff(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sDiffStore(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#sDiffStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sMembers(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#sMembers(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#sRandMember(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#sRandMember(Ljava/nio/ByteBuffer;Ljava/lang/Long;)Lreactor/core/publisher/Flux;
+#sRandMember(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.1.0.RELEASE
+#sScan(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#sScan(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
+#sScan(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.6.0
+#sMIsMember(Ljava/nio/ByteBuffer;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#sMIsMember(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ReactiveRedisConnection
@2.0.0.RELEASE
+#close()V
+#keyCommands()Lorg/springframework/data/redis/connection/ReactiveKeyCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/ReactiveStringCommands;
+#numberCommands()Lorg/springframework/data/redis/connection/ReactiveNumberCommands;
+#listCommands()Lorg/springframework/data/redis/connection/ReactiveListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/ReactiveSetCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/ReactiveZSetCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/ReactiveHashCommands;
+#geoCommands()Lorg/springframework/data/redis/connection/ReactiveGeoCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands;
+#scriptingCommands()Lorg/springframework/data/redis/connection/ReactiveScriptingCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/ReactiveServerCommands;
+#ping()Lreactor/core/publisher/Mono;
@2.1.0.RELEASE
+#closeLater()Lreactor/core/publisher/Mono;
+#pubSubCommands()Lorg/springframework/data/redis/connection/ReactivePubSubCommands;
@2.2.0.RELEASE
+#streamCommands()Lorg/springframework/data/redis/connection/ReactiveStreamCommands;

+###org/springframework/data/redis/connection/RedisStringCommands$SetOption
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;
+#upsert()Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;
+#ifPresent()Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;
+#ifAbsent()Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;

+###org/springframework/data/redis/connection/ReactiveNumberCommands$IncrByCommand
@2.0.0.RELEASE
+#incr(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveNumberCommands$IncrByCommand;
+#by(Ljava/lang/Number;)Lorg/springframework/data/redis/connection/ReactiveNumberCommands$IncrByCommand;
+#getValue()Ljava/lang/Number;

+###org/springframework/data/redis/connection/RedisClusterServerCommands
@2.0.0.RELEASE
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
+#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
+#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;
@2.5.0
+#rewriteConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
@2.7.0
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V

+###org/springframework/data/redis/connection/RedisStandaloneConfiguration
@2.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#getHostName()Ljava/lang/String;
+#getPort()I
+#setHostName(Ljava/lang/String;)V
+#setPort(I)V
+#getDatabase()I
+#setDatabase(I)V
+#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;
+#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
@2.4.0
+#setUsername(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
@2.5.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/ReactiveHashCommands$HExistsCommand
@2.0.0.RELEASE
+#field(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HExistsCommand;
+#in(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HExistsCommand;
+#getField()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ReactiveHashCommands
@2.0.0.RELEASE
+#hSet(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hSetNX(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hMSet(Ljava/nio/ByteBuffer;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#hSet(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hGet(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hMGet(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#hMGet(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hExists(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hExists(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hDel(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hDel(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#hDel(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hLen(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hLen(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hKeys(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#hKeys(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hVals(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#hVals(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hGetAll(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#hGetAll(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.1.0.RELEASE
+#hScan(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#hScan(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
+#hScan(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hStrLen(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hStrLen(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.6.0
+#hRandField(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hRandFieldWithValues(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#hRandField(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#hRandFieldWithValues(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#hRandField(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#hRandFieldWithValues(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/jedis/JedisConnection
@1.0.0.RELEASE
+#<init>(Lredis/clients/jedis/Jedis;)V
+#<init>(Lredis/clients/jedis/Jedis;Lredis/clients/util/Pool;I)V
+#close()V
+#getNativeConnection()Lredis/clients/jedis/Jedis;
+#isClosed()Z
+#isQueueing()Z
+#isPipelined()Z
+#openPipeline()V
+#closePipeline()Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#dbSize()Ljava/lang/Long;
+#flushDb()V
+#flushAll()V
+#bgSave()V
+#bgWriteAof()V
+#save()V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#info()Ljava/util/Properties;
+#lastSave()Ljava/lang/Long;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
+#shutdown()V
+#echo([B)[B
+#ping()Ljava/lang/String;
+#del([[B)Ljava/lang/Long;
+#discard()V
+#exec()Ljava/util/List;
+#exists([B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#keys([B)Ljava/util/Set;
+#multi()V
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#select(I)V
+#ttl([B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#unwatch()V
+#watch([[B)V
+#get([B)[B
+#set([B[B)V
+#getSet([B[B)[B
+#append([B[B)Ljava/lang/Long;
+#mGet([[B)Ljava/util/List;
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)V
+#setEx([BJ[B)V
+#setNX([B[B)Ljava/lang/Boolean;
+#getRange([BJJ)[B
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#getBit([BJ)Ljava/lang/Boolean;
+#setBit([BJZ)V
+#setRange([B[BJ)V
+#strLen([B)Ljava/lang/Long;
+#lPush([B[B)Ljava/lang/Long;
+#rPush([B[B)Ljava/lang/Long;
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#lIndex([BJ)[B
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#lLen([B)Ljava/lang/Long;
+#lPop([B)[B
+#lRange([BJJ)Ljava/util/List;
+#lRem([BJ[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lTrim([BJJ)V
+#rPop([B)[B
+#rPopLPush([B[B)[B
+#bRPopLPush(I[B[B)[B
+#lPushX([B[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#sAdd([B[B)Ljava/lang/Boolean;
+#sCard([B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)V
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)V
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sMembers([B)Ljava/util/Set;
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sPop([B)[B
+#sRandMember([B)[B
+#sRem([B[B)Ljava/lang/Boolean;
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)V
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zCard([B)Ljava/lang/Long;
+#zCount([BDD)Ljava/lang/Long;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRank([B[B)Ljava/lang/Long;
+#zRem([B[B)Ljava/lang/Boolean;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRank([B[B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hDel([B[B)Ljava/lang/Boolean;
+#hExists([B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hGetAll([B)Ljava/util/Map;
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hLen([B)Ljava/lang/Long;
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hVals([B)Ljava/util/List;
+#publish([B[B)Ljava/lang/Long;
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#isSubscribed()Z
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#getNativeConnection()Ljava/lang/Object;
@1.0.1.RELEASE
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;
+#sDiffStore([B[[B)Ljava/lang/Long;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sUnionStore([B[[B)Ljava/lang/Long;
-#sDiffStore([B[[B)V
-#sInterStore([B[[B)V
-#sUnionStore([B[[B)V
@1.1.0.M1
+#info(Ljava/lang/String;)Ljava/util/Properties;
+#pExpire([BJ)Ljava/lang/Boolean;
+#pExpireAt([BJ)Ljava/lang/Boolean;
+#pTtl([B)Ljava/lang/Long;
+#dump([B)[B
+#restore([BJ[B)V
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#incrBy([BD)Ljava/lang/Double;
+#bitCount([B)Ljava/lang/Long;
+#bitCount([BJJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
+#sRandMember([BJ)Ljava/util/List;
+#hIncrBy([B[BD)Ljava/lang/Double;
+#scriptFlush()V
+#scriptKill()V
+#scriptLoad([B)Ljava/lang/String;
+#scriptExists([Ljava/lang/String;)Ljava/util/List;
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#mSetNX(Ljava/util/Map;)V
@1.1.0.M2
+#lPush([B[[B)Ljava/lang/Long;
+#rPush([B[[B)Ljava/lang/Long;
+#sAdd([B[[B)Ljava/lang/Long;
+#sRem([B[[B)Ljava/lang/Long;
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;
+#zRem([B[[B)Ljava/lang/Long;
+#hDel([B[[B)Ljava/lang/Long;
+#setConvertPipelineAndTxResults(Z)V
-#lPush([B[B)Ljava/lang/Long;
-#rPush([B[B)Ljava/lang/Long;
-#sAdd([B[B)Ljava/lang/Boolean;
-#sRem([B[B)Ljava/lang/Boolean;
-#zRem([B[B)Ljava/lang/Boolean;
-#hDel([B[B)Ljava/lang/Boolean;
@1.2.0.RELEASE
+#time()Ljava/lang/Long;
@1.3.0.RELEASE
+#bgReWriteAof()V
*#bgWriteAof()V[deprecated]
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
+#pSetEx([BJ[B)V
+#setBit([BJZ)Ljava/lang/Boolean;
+#killClient(Ljava/lang/String;I)V
+#slaveOf(Ljava/lang/String;I)V
+#setClientName([B)V
+#getClientName()Ljava/lang/String;
+#getClientList()Ljava/util/List;
+#slaveOfNoOne()V
-#setBit([BJZ)V
@1.4.0.RELEASE
+#scan()Lorg/springframework/data/redis/core/Cursor;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#scan(JLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan([BLjava/lang/Long;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.5.0.RELEASE
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V
@1.6.0.RELEASE
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByLex([B)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
@1.7.0.RELEASE
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
@1.8.0.RELEASE
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([B[[B)Ljava/util/List;
+#geoPos([B[[B)Ljava/util/List;
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([B[[B)Ljava/lang/Long;
@2.0.0.RELEASE
+#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
+#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
+#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
+#scriptingCommands()Lorg/springframework/data/redis/connection/RedisScriptingCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
+#getPipeline()Lredis/clients/jedis/Pipeline;
+#getRequiredPipeline()Lredis/clients/jedis/Pipeline;
+#getTransaction()Lredis/clients/jedis/Transaction;
+#getRequiredTransaction()Lredis/clients/jedis/Transaction;
+#getJedis()Lredis/clients/jedis/Jedis;
-#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
-#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
-#dbSize()Ljava/lang/Long;
-#flushDb()V
-#flushAll()V
-#bgSave()V
-#bgReWriteAof()V
-#bgWriteAof()V[deprecated]
-#save()V
-#getConfig(Ljava/lang/String;)Ljava/util/List;
-#info()Ljava/util/Properties;
-#info(Ljava/lang/String;)Ljava/util/Properties;
-#lastSave()Ljava/lang/Long;
-#setConfig(Ljava/lang/String;Ljava/lang/String;)V
-#resetConfigStats()V
-#shutdown()V
-#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
-#del([[B)Ljava/lang/Long;
-#exists([B)Ljava/lang/Boolean;
-#expire([BJ)Ljava/lang/Boolean;
-#expireAt([BJ)Ljava/lang/Boolean;
-#keys([B)Ljava/util/Set;
-#persist([B)Ljava/lang/Boolean;
-#move([BI)Ljava/lang/Boolean;
-#randomKey()[B
-#rename([B[B)V
-#renameNX([B[B)Ljava/lang/Boolean;
-#ttl([B)Ljava/lang/Long;
-#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
-#pExpire([BJ)Ljava/lang/Boolean;
-#pExpireAt([BJ)Ljava/lang/Boolean;
-#pTtl([B)Ljava/lang/Long;
-#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
-#dump([B)[B
-#restore([BJ[B)V
-#type([B)Lorg/springframework/data/redis/connection/DataType;
-#get([B)[B
-#set([B[B)V
-#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
-#getSet([B[B)[B
-#append([B[B)Ljava/lang/Long;
-#mGet([[B)Ljava/util/List;
-#mSet(Ljava/util/Map;)V
-#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
-#setEx([BJ[B)V
-#pSetEx([BJ[B)V
-#setNX([B[B)Ljava/lang/Boolean;
-#getRange([BJJ)[B
-#decr([B)Ljava/lang/Long;
-#decrBy([BJ)Ljava/lang/Long;
-#incr([B)Ljava/lang/Long;
-#incrBy([BJ)Ljava/lang/Long;
-#incrBy([BD)Ljava/lang/Double;
-#getBit([BJ)Ljava/lang/Boolean;
-#setBit([BJZ)Ljava/lang/Boolean;
-#setRange([B[BJ)V
-#strLen([B)Ljava/lang/Long;
-#bitCount([B)Ljava/lang/Long;
-#bitCount([BJJ)Ljava/lang/Long;
-#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
-#lPush([B[[B)Ljava/lang/Long;
-#rPush([B[[B)Ljava/lang/Long;
-#bLPop(I[[B)Ljava/util/List;
-#bRPop(I[[B)Ljava/util/List;
-#lIndex([BJ)[B
-#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
-#lLen([B)Ljava/lang/Long;
-#lPop([B)[B
-#lRange([BJJ)Ljava/util/List;
-#lRem([BJ[B)Ljava/lang/Long;
-#lSet([BJ[B)V
-#lTrim([BJJ)V
-#rPop([B)[B
-#rPopLPush([B[B)[B
-#bRPopLPush(I[B[B)[B
-#lPushX([B[B)Ljava/lang/Long;
-#rPushX([B[B)Ljava/lang/Long;
-#sAdd([B[[B)Ljava/lang/Long;
-#sCard([B)Ljava/lang/Long;
-#sDiff([[B)Ljava/util/Set;
-#sDiffStore([B[[B)Ljava/lang/Long;
-#sInter([[B)Ljava/util/Set;
-#sInterStore([B[[B)Ljava/lang/Long;
-#sIsMember([B[B)Ljava/lang/Boolean;
-#sMembers([B)Ljava/util/Set;
-#sMove([B[B[B)Ljava/lang/Boolean;
-#sPop([B)[B
-#sRandMember([B)[B
-#sRandMember([BJ)Ljava/util/List;
-#sRem([B[[B)Ljava/lang/Long;
-#sUnion([[B)Ljava/util/Set;
-#sUnionStore([B[[B)Ljava/lang/Long;
-#zAdd([BD[B)Ljava/lang/Boolean;
-#zAdd([BLjava/util/Set;)Ljava/lang/Long;
-#zCard([B)Ljava/lang/Long;
-#zCount([BDD)Ljava/lang/Long;
-#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zIncrBy([BD[B)Ljava/lang/Double;
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zInterStore([B[[B)Ljava/lang/Long;
-#zRange([BJJ)Ljava/util/Set;
-#zRangeWithScores([BJJ)Ljava/util/Set;
-#zRangeByLex([B)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeByScore([BDD)Ljava/util/Set;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeByScoreWithScores([BDD)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeWithScores([BJJ)Ljava/util/Set;
-#zRangeByScore([BDDJJ)Ljava/util/Set;
-#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
-#zRevRangeByScore([BDDJJ)Ljava/util/Set;
-#zRevRangeByScore([BDD)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
-#zRank([B[B)Ljava/lang/Long;
-#zRem([B[[B)Ljava/lang/Long;
-#zRemRange([BJJ)Ljava/lang/Long;
-#zRemRangeByScore([BDD)Ljava/lang/Long;
-#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zRevRange([BJJ)Ljava/util/Set;
-#zRevRank([B[B)Ljava/lang/Long;
-#zScore([B[B)Ljava/lang/Double;
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zUnionStore([B[[B)Ljava/lang/Long;
-#hSet([B[B[B)Ljava/lang/Boolean;
-#hSetNX([B[B[B)Ljava/lang/Boolean;
-#hDel([B[[B)Ljava/lang/Long;
-#hExists([B[B)Ljava/lang/Boolean;
-#hGet([B[B)[B
-#hGetAll([B)Ljava/util/Map;
-#hIncrBy([B[BJ)Ljava/lang/Long;
-#hIncrBy([B[BD)Ljava/lang/Double;
-#hKeys([B)Ljava/util/Set;
-#hLen([B)Ljava/lang/Long;
-#hMGet([B[[B)Ljava/util/List;
-#hMSet([BLjava/util/Map;)V
-#hVals([B)Ljava/util/List;
-#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
-#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
-#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
-#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
-#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
-#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
-#geoHash([B[[B)Ljava/util/List;
-#geoPos([B[[B)Ljava/util/List;
-#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
-#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
-#geoRemove([B[[B)Ljava/lang/Long;
-#scriptFlush()V
-#scriptKill()V
-#scriptLoad([B)Ljava/lang/String;
-#scriptExists([Ljava/lang/String;)Ljava/util/List;
-#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#time()Ljava/lang/Long;
-#killClient(Ljava/lang/String;I)V
-#slaveOf(Ljava/lang/String;I)V
-#setClientName([B)V
-#getClientName()Ljava/lang/String;
-#getClientList()Ljava/util/List;
-#slaveOfNoOne()V
-#scan()Lorg/springframework/data/redis/core/Cursor;
-#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#scan(JLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zScan([BLjava/lang/Long;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#sScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#hScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
-#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
-#pfAdd([B[[B)Ljava/lang/Long;
-#pfCount([[B)Ljava/lang/Long;
-#pfMerge([B[[B)V
-#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
-#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
@2.2.0.RELEASE
+#<init>(Lredis/clients/jedis/Jedis;Lredis/clients/jedis/util/Pool;I)V
+#streamCommands()Lorg/springframework/data/redis/connection/RedisStreamCommands;
-#<init>(Lredis/clients/jedis/Jedis;Lredis/clients/util/Pool;I)V
@3.0.0
+#commands()Lorg/springframework/data/redis/connection/RedisCommands;

+###org/springframework/data/redis/connection/RedisPassword
@2.0.0.RELEASE
+#of(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisPassword;
+#of([C)Lorg/springframework/data/redis/connection/RedisPassword;
+#none()Lorg/springframework/data/redis/connection/RedisPassword;
+#isPresent()Z
+#get()[C
+#map(Ljava/util/function/Function;)Ljava/util/Optional;
+#toOptional()Ljava/util/Optional;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/RedisConnectionFactory
@1.0.0.RELEASE
+#getConnection()Lorg/springframework/data/redis/connection/RedisConnection;
@1.1.0.M2
+#getConvertPipelineAndTxResults()Z
@1.4.0.RELEASE
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
@1.7.0.RELEASE
+#getClusterConnection()Lorg/springframework/data/redis/connection/RedisClusterConnection;

+###org/springframework/data/redis/Version
@1.3.0.RELEASE
+#<init>(III)V
+#compareTo(Lorg/springframework/data/redis/Version;)I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I
@3.0.0
-###org/springframework/data/redis/Version

+###org/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequestBuilder
@2.2.0.RELEASE
+#errorHandler(Lorg/springframework/util/ErrorHandler;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequestBuilder;
+#cancelOnError(Ljava/util/function/Predicate;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequestBuilder;
+#consumer(Lorg/springframework/data/redis/connection/stream/Consumer;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$ConsumerStreamReadRequestBuilder;
+#build()Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequest;

+###org/springframework/data/redis/support/collections/DefaultRedisZSet
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;D)V
+#<init>(Lorg/springframework/data/redis/core/BoundZSetOperations;)V
+#<init>(Lorg/springframework/data/redis/core/BoundZSetOperations;D)V
+#intersectAndStore(Lorg/springframework/data/redis/support/collections/RedisZSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#range(JJ)Ljava/util/Set;
+#reverseRange(JJ)Ljava/util/Set;
+#rangeByScore(DD)Ljava/util/Set;
+#reverseRangeByScore(DD)Ljava/util/Set;
+#rangeByScoreWithScores(DD)Ljava/util/Set;
+#rangeWithScores(JJ)Ljava/util/Set;
+#reverseRangeByScoreWithScores(DD)Ljava/util/Set;
+#reverseRangeWithScores(JJ)Ljava/util/Set;
+#remove(JJ)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#removeByScore(DD)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#unionAndStore(Lorg/springframework/data/redis/support/collections/RedisZSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#add(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;D)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#remove(Ljava/lang/Object;)Z
+#size()I
+#getDefaultScore()Ljava/lang/Double;
+#first()Ljava/lang/Object;
+#last()Ljava/lang/Object;
+#rank(Ljava/lang/Object;)Ljava/lang/Long;
+#reverseRank(Ljava/lang/Object;)Ljava/lang/Long;
+#score(Ljava/lang/Object;)Ljava/lang/Double;
+#getType()Lorg/springframework/data/redis/connection/DataType;
@1.4.0.RELEASE
+#scan()Lorg/springframework/data/redis/core/Cursor;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#scan()Ljava/util/Iterator;
@1.7.0.RELEASE
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.4.0
+#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#lexCount(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
@2.5.0
+#removeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#addIfAbsent(Ljava/lang/Object;D)Z
@2.6.0
+#diff(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#diff(Ljava/util/Collection;)Ljava/util/Set;
+#diffWithScores(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#diffWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#diffAndStore(Lorg/springframework/data/redis/support/collections/RedisZSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#diffAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#intersect(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#intersect(Ljava/util/Collection;)Ljava/util/Set;
+#intersectWithScores(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#intersectWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#union(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#union(Ljava/util/Collection;)Ljava/util/Set;
+#unionWithScores(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#unionWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#randomValue()Ljava/lang/Object;
+#popFirst()Ljava/lang/Object;
+#popFirst(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#popLast()Ljava/lang/Object;
+#popLast(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@3.0.0
+#rangeByLex(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#reverseRangeByLex(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#rangeAndStoreByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#reverseRangeAndStoreByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#rangeAndStoreByScore(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#reverseRangeAndStoreByScore(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#removeByLex(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#lexCount(Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
-#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#removeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#lexCount(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;

+###org/springframework/data/redis/support/collections/RedisList
@1.0.0.RELEASE
+#range(JJ)Ljava/util/List;
+#trim(II)Lorg/springframework/data/redis/support/collections/RedisList;
@2.6.0
+#create(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)Lorg/springframework/data/redis/support/collections/RedisList;
+#create(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;I)Lorg/springframework/data/redis/support/collections/RedisList;
+#create(Lorg/springframework/data/redis/core/BoundListOperations;)Lorg/springframework/data/redis/support/collections/RedisList;
+#create(Lorg/springframework/data/redis/core/BoundListOperations;I)Lorg/springframework/data/redis/support/collections/RedisList;
+#moveFirstTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/Object;
+#moveFirstTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/time/Duration;)Ljava/lang/Object;
+#moveFirstTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#moveLastTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/Object;
+#moveLastTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/time/Duration;)Ljava/lang/Object;
+#moveLastTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#trim(JJ)Lorg/springframework/data/redis/support/collections/RedisList;

+###org/springframework/data/redis/support/collections/RedisCollectionFactoryBean
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#getObject()Lorg/springframework/data/redis/support/collections/RedisStore;
+#getObjectType()Ljava/lang/Class;
+#isSingleton()Z
+#setBeanName(Ljava/lang/String;)V
+#setType(Lorg/springframework/data/redis/support/collections/RedisCollectionFactoryBean$CollectionType;)V
+#setTemplate(Lorg/springframework/data/redis/core/RedisTemplate;)V
+#setKey(Ljava/lang/String;)V
+#getObject()Ljava/lang/Object;

+###org/springframework/data/redis/repository/core/RedisEntityInformation
@1.7.0.RELEASE

+###org/springframework/data/redis/serializer/JdkSerializationRedisSerializer
@1.0.0.RELEASE
+#<init>()V
+#deserialize([B)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)[B
@1.7.0.RELEASE
+#<init>(Ljava/lang/ClassLoader;)V
+#<init>(Lorg/springframework/core/convert/converter/Converter;Lorg/springframework/core/convert/converter/Converter;)V

+###org/springframework/data/redis/serializer/StringRedisSerializer
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/nio/charset/Charset;)V
+#deserialize([B)Ljava/lang/String;
+#serialize(Ljava/lang/String;)[B
+#deserialize([B)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)[B
@2.2.0.RELEASE
+#getTargetType()Ljava/lang/Class;

+###org/springframework/data/redis/core/ReactiveRedisOperationsExtensionsKt
@2.2.0.RELEASE
+#executeAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
+#executeAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;)Lkotlinx/coroutines/flow/Flow;
+#executeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#executeAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/serializer/RedisElementWriter;Lorg/springframework/data/redis/serializer/RedisElementReader;)Lkotlinx/coroutines/flow/Flow;
+#executeAsFlow$default(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/serializer/RedisElementWriter;Lorg/springframework/data/redis/serializer/RedisElementReader;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#sendAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/String;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#listenToChannelAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;[Ljava/lang/String;)Lkotlinx/coroutines/flow/Flow;
+#listenToPatternAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;[Ljava/lang/String;)Lkotlinx/coroutines/flow/Flow;
+#listenToAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;[Lorg/springframework/data/redis/listener/Topic;)Lkotlinx/coroutines/flow/Flow;
+#hasKeyAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#typeAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#keysAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#scanAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lorg/springframework/data/redis/core/ScanOptions;)Lkotlinx/coroutines/flow/Flow;
+#scanAsFlow$default(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lorg/springframework/data/redis/core/ScanOptions;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#randomKeyAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#renameAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#renameIfAbsentAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unlinkAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#expireAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#expireAtAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Ljava/time/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#persistAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#moveAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#getExpireAndAwait(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@2.6.0
+#executeInSessionAsFlow(Lorg/springframework/data/redis/core/ReactiveRedisOperations;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;

+###org/springframework/data/redis/core/RedisAccessor
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#getConnectionFactory()Lorg/springframework/data/redis/connection/RedisConnectionFactory;
+#setConnectionFactory(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
@2.0.0.RELEASE
+#getRequiredConnectionFactory()Lorg/springframework/data/redis/connection/RedisConnectionFactory;

+###org/springframework/data/redis/core/ScanOptions
@1.4.0.RELEASE
+#scanOptions()Lorg/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder;
+#getCount()Ljava/lang/Long;
+#getPattern()Ljava/lang/String;
+#toOptionString()Ljava/lang/String;
@2.6.0
+#getBytePattern()[B

+###org/springframework/data/redis/core/script/ScriptExecutor
@1.1.0.M2
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/core/script/DigestUtils
@1.1.0.M2
+#<init>()V
+#sha1DigestAsHex(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/data/redis/core/script/ScriptingException
@1.1.0.M2
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/data/redis/core/index/PathBasedRedisIndexDefinition
@1.7.0.RELEASE
+#getPath()Ljava/lang/String;

+###org/springframework/data/redis/connection/FutureResult
@1.1.0.M2
+#<init>(Ljava/lang/Object;)V
+#<init>(Ljava/lang/Object;Lorg/springframework/core/convert/converter/Converter;)V
+#getResultHolder()Ljava/lang/Object;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
+#getConverter()Lorg/springframework/core/convert/converter/Converter;
+#isStatus()Z
+#setStatus(Z)V
+#get()Ljava/lang/Object;
@2.0.1.RELEASE
+#<init>(Ljava/lang/Object;Lorg/springframework/core/convert/converter/Converter;Ljava/util/function/Supplier;)V
+#conversionRequired()Z

+###org/springframework/data/redis/connection/ReactiveStreamCommands
@2.2.0.RELEASE
+#xAck(Ljava/nio/ByteBuffer;Ljava/lang/String;[Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#xAck(Ljava/nio/ByteBuffer;Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Mono;
+#xAck(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xAdd(Ljava/nio/ByteBuffer;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#xAdd(Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;)Lreactor/core/publisher/Mono;
+#xAdd(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xDel(Ljava/nio/ByteBuffer;[Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#xDel(Ljava/nio/ByteBuffer;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Mono;
+#xDel(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xLen(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#xLen(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#xRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#xRange(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xRead([Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#xRead(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xGroupCreate(Ljava/nio/ByteBuffer;Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Lreactor/core/publisher/Mono;
+#xGroupDelConsumer(Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#xGroupDelConsumer(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/stream/Consumer;)Lreactor/core/publisher/Mono;
+#xGroupDestroy(Ljava/nio/ByteBuffer;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#xGroup(Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;)Lreactor/core/publisher/Mono;
+#xGroup(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xReadGroup(Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#xReadGroup(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#xRevRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#xRevRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#xRevRange(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xTrim(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Mono;
+#xTrim(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.3.0.RELEASE
+#xClaimJustId(Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Lreactor/core/publisher/Flux;
+#xClaimJustId(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xClaim(Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Flux;
+#xClaim(Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Lreactor/core/publisher/Flux;
+#xClaim(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xPending(Ljava/nio/ByteBuffer;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#xPendingSummary(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xPending(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/stream/Consumer;)Lreactor/core/publisher/Mono;
+#xPending(Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#xPending(Ljava/nio/ByteBuffer;Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lreactor/core/publisher/Mono;
+#xPending(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lreactor/core/publisher/Mono;
+#xPending(Ljava/nio/ByteBuffer;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lreactor/core/publisher/Mono;
+#xPending(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xInfo(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#xInfo(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xInfoGroups(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#xInfoGroups(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xInfoConsumers(Ljava/nio/ByteBuffer;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#xInfoConsumers(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#xGroupCreate(Ljava/nio/ByteBuffer;Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Z)Lreactor/core/publisher/Mono;
@2.4.0
+#xTrim(Ljava/nio/ByteBuffer;JZ)Lreactor/core/publisher/Mono;
@3.0.0
+#xRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#xRevRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
-#xRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#xRevRange(Ljava/nio/ByteBuffer;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/stream/ByteBufferRecord
@2.2.0.RELEASE
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;
+#withStreamKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;
+#deserialize(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#deserialize(Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#of(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;
+#toObjectRecord(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/Record;

+###org/springframework/data/redis/connection/stream/StringRecord
@2.2.0.RELEASE
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/StringRecord;
+#withStreamKey(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StringRecord;
+#of(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/StringRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/Record;
@2.7.0
+#of(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/StringRecord;

+###org/springframework/data/redis/connection/ReactiveSetCommands$SPopCommand
@2.0.0.RELEASE
+#one()Lorg/springframework/data/redis/connection/ReactiveSetCommands$SPopCommand;
+#members(J)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SPopCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SPopCommand;
+#getCount()J

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoHashCommand
@2.0.0.RELEASE
+#member(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoHashCommand;
+#members(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoHashCommand;
+#of(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoHashCommand;
+#getMembers()Ljava/util/List;

+###org/springframework/data/redis/connection/ConnectionUtils
@1.1.1.RELEASE
+#<init>()V
+#isAsync(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z
+#isSrp(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z
+#isJredis(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z
+#isLettuce(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z
+#isJedis(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z
@2.0.0.RELEASE
-#isSrp(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z
-#isJredis(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Z

+###org/springframework/data/redis/connection/RedisPubSubCommands
@1.0.0.RELEASE
+#isSubscribed()Z
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#publish([B[B)Ljava/lang/Long;
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V

+###org/springframework/data/redis/connection/ReactiveSetCommands$SUnionCommand
@2.0.0.RELEASE
+#keys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SUnionCommand;
+#getKey()Ljava/nio/ByteBuffer;
+#getKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveStringCommands$BitCountCommand
@2.0.0.RELEASE
+#bitCount(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitCountCommand;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitCountCommand;
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs$Flag
@1.8.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs$Flag;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs$Flag;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldGet
@2.1.0.RELEASE
+#<init>()V
+#getCommand()Ljava/lang/String;
@2.5.2
+#create(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldGet;

+###org/springframework/data/redis/connection/RedisZSetCommands$Range
@1.6.0.RELEASE
+#<init>()V
+#range()Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;
+#unbounded()Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;
+#gte(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;
+#gt(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;
+#lte(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;
+#lt(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;
+#getMin()Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;
+#getMax()Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;
@3.0.0
+#toRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/RedisNode
@1.4.0.RELEASE
+#<init>(Ljava/lang/String;I)V
+#getHost()Ljava/lang/String;
+#getPort()Ljava/lang/Integer;
+#asString()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.7.0.RELEASE
+#getMasterId()Ljava/lang/String;
+#getId()Ljava/lang/String;
+#setId(Ljava/lang/String;)V
+#getType()Lorg/springframework/data/redis/connection/RedisNode$NodeType;
+#isMaster()Z
+#isSlave()Z
+#newRedisNode()Lorg/springframework/data/redis/connection/RedisNode$RedisNodeBuilder;
@2.1.0.RELEASE
+#isReplica()Z
@2.3.8.RELEASE
+#hasValidHost()Z
@2.4.0
-#hasValidHost()Z
@2.4.6
+#hasValidHost()Z
@2.6.8
+#fromString(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode;
@2.7.0
-#fromString(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode;
@2.7.4
+#fromString(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisNode;
@3.0.0
-#isSlave()Z

+###org/springframework/data/redis/connection/RedisClusterCommands
@1.7.0.RELEASE
+#clusterGetNodes()Ljava/lang/Iterable;
+#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
+#clusterGetMasterSlaveMap()Ljava/util/Map;
+#clusterGetSlotForKey([B)Ljava/lang/Integer;
+#clusterGetNodeForSlot(I)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#clusterGetNodeForKey([B)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#clusterGetClusterInfo()Lorg/springframework/data/redis/connection/ClusterInfo;
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#clusterCountKeysInSlot(I)Ljava/lang/Long;
+#clusterDeleteSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#clusterDeleteSlotsInRange(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#clusterForget(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#clusterMeet(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#clusterSetSlot(Lorg/springframework/data/redis/connection/RedisClusterNode;ILorg/springframework/data/redis/connection/RedisClusterCommands$AddSlots;)V
+#clusterGetKeysInSlot(ILjava/lang/Integer;)Ljava/util/List;
+#clusterReplicate(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode;)V
@3.0.0
+#clusterGetReplicas(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
+#clusterGetMasterReplicaMap()Ljava/util/Map;
-#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
-#clusterGetMasterSlaveMap()Ljava/util/Map;

+###org/springframework/data/redis/connection/ReactiveListCommands$LSetCommand
@2.0.0.RELEASE
+#elementAt(J)Lorg/springframework/data/redis/connection/ReactiveListCommands$LSetCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LSetCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LSetCommand;
+#getValue()Ljava/nio/ByteBuffer;
+#getIndex()Ljava/lang/Long;

+###org/springframework/data/redis/hash/DecoratingStringHashMapper
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/hash/HashMapper;)V
+#fromHash(Ljava/util/Map;)Ljava/lang/Object;
+#toHash(Ljava/lang/Object;)Ljava/util/Map;

+###org/springframework/data/redis/stream/StreamMessageListenerContainer
@2.2.0.RELEASE
+#create(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer;
+#create(Lorg/springframework/data/redis/connection/RedisConnectionFactory;Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptions;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer;
+#receive(Lorg/springframework/data/redis/connection/stream/StreamOffset;Lorg/springframework/data/redis/stream/StreamListener;)Lorg/springframework/data/redis/stream/Subscription;
+#receive(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamOffset;Lorg/springframework/data/redis/stream/StreamListener;)Lorg/springframework/data/redis/stream/Subscription;
+#receiveAutoAck(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamOffset;Lorg/springframework/data/redis/stream/StreamListener;)Lorg/springframework/data/redis/stream/Subscription;
+#register(Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequest;Lorg/springframework/data/redis/stream/StreamListener;)Lorg/springframework/data/redis/stream/Subscription;
+#remove(Lorg/springframework/data/redis/stream/Subscription;)V

+###org/springframework/data/redis/support/collections/DefaultRedisList
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Lorg/springframework/data/redis/core/BoundListOperations;)V
+#<init>(Lorg/springframework/data/redis/core/BoundListOperations;I)V
+#setMaxSize(I)V
+#range(JJ)Ljava/util/List;
+#trim(II)Lorg/springframework/data/redis/support/collections/RedisList;
+#iterator()Ljava/util/Iterator;
+#size()I
+#add(Ljava/lang/Object;)Z
+#clear()V
+#remove(Ljava/lang/Object;)Z
+#add(ILjava/lang/Object;)V
+#addAll(ILjava/util/Collection;)Z
+#get(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#remove(I)Ljava/lang/Object;
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#subList(II)Ljava/util/List;
+#element()Ljava/lang/Object;
+#offer(Ljava/lang/Object;)Z
+#peek()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#remove()Ljava/lang/Object;
+#addFirst(Ljava/lang/Object;)V
+#addLast(Ljava/lang/Object;)V
+#descendingIterator()Ljava/util/Iterator;
+#getFirst()Ljava/lang/Object;
+#getLast()Ljava/lang/Object;
+#offerFirst(Ljava/lang/Object;)Z
+#offerLast(Ljava/lang/Object;)Z
+#peekFirst()Ljava/lang/Object;
+#peekLast()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#pollLast()Ljava/lang/Object;
+#pop()Ljava/lang/Object;
+#push(Ljava/lang/Object;)V
+#removeFirst()Ljava/lang/Object;
+#removeFirstOccurrence(Ljava/lang/Object;)Z
+#removeLast()Ljava/lang/Object;
+#removeLastOccurrence(Ljava/lang/Object;)Z
+#drainTo(Ljava/util/Collection;I)I
+#drainTo(Ljava/util/Collection;)I
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#put(Ljava/lang/Object;)V
+#remainingCapacity()I
+#take()Ljava/lang/Object;
+#offerFirst(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#offerLast(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#pollFirst(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#pollLast(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#putFirst(Ljava/lang/Object;)V
+#putLast(Ljava/lang/Object;)V
+#takeFirst()Ljava/lang/Object;
+#takeLast()Ljava/lang/Object;
+#getType()Lorg/springframework/data/redis/connection/DataType;
@2.6.0
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;I)V
+#moveFirstTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/Object;
+#moveFirstTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#moveLastTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/Object;
+#moveLastTo(Lorg/springframework/data/redis/support/collections/RedisList;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#trim(JJ)Lorg/springframework/data/redis/support/collections/RedisList;

+###org/springframework/data/redis/ExceptionTranslationStrategy
@1.3.2.RELEASE
+#translate(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;

+###org/springframework/data/redis/repository/query/RedisOperationChain$PathAndValue
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#isSingleValue()Z
+#getPath()Ljava/lang/String;
+#values()Ljava/util/Collection;
+#getFirstValue()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/redis/serializer/SerializationException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/data/redis/listener/KeyspaceEventMessageListener
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;)V
+#onMessage(Lorg/springframework/data/redis/connection/Message;[B)V
+#init()V
+#destroy()V
+#afterPropertiesSet()V
@1.7.3.RELEASE
+#setKeyspaceNotificationsConfigParameter(Ljava/lang/String;)V

+###org/springframework/data/redis/listener/Topic
@1.0.0.RELEASE
+#getTopic()Ljava/lang/String;

+###org/springframework/data/redis/core/ReactiveValueOperationsExtensionsKt
@2.2.0.RELEASE
+#setAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setIfAbsentAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setIfAbsentAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setIfPresentAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setIfPresentAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#multiSetAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#multiSetIfAbsentAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#getAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#getAndSetAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#multiGetAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#multiGetAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#incrementAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#incrementAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#incrementAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;DLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#decrementAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#decrementAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#appendAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#getAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;JJLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Ljava/lang/Object;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#sizeAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#setBitAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;JZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#getBitAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#bitFieldAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Lorg/springframework/data/redis/connection/BitFieldSubCommands;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveValueOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/data/redis/core/BoundStreamOperations
@2.2.0.RELEASE
+#acknowledge(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#add(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#delete([Ljava/lang/String;)Ljava/lang/Long;
+#createGroup(Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;)Ljava/lang/String;
+#deleteConsumer(Lorg/springframework/data/redis/connection/stream/Consumer;)Ljava/lang/Boolean;
+#destroyGroup(Ljava/lang/String;)Ljava/lang/Boolean;
+#size()Ljava/lang/Long;
+#range(Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#range(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#read(Lorg/springframework/data/redis/connection/stream/ReadOffset;)Ljava/util/List;
+#read(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Ljava/util/List;
+#read(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Ljava/util/List;
+#read(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Ljava/util/List;
+#reverseRange(Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#reverseRange(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#trim(J)Ljava/lang/Long;
@2.4.0
+#trim(JZ)Ljava/lang/Long;
@3.0.0
+#range(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#reverseRange(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
-#range(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#reverseRange(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;

+###org/springframework/data/redis/core/PartialUpdate$PropertyUpdate
@1.8.0.RELEASE
+#getCmd()Lorg/springframework/data/redis/core/PartialUpdate$UpdateCommand;
+#getPropertyPath()Ljava/lang/String;
+#getValue()Ljava/lang/Object;

+###org/springframework/data/redis/core/script/ReactiveScriptExecutor
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/serializer/RedisElementWriter;Lorg/springframework/data/redis/serializer/RedisElementReader;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/core/script/DefaultRedisScript
@1.1.0.M2
+#<init>()V
+#afterPropertiesSet()V
+#getSha1()Ljava/lang/String;
+#getResultType()Ljava/lang/Class;
+#getScriptAsString()Ljava/lang/String;
+#setResultType(Ljava/lang/Class;)V
+#setScriptText(Ljava/lang/String;)V
+#setLocation(Lorg/springframework/core/io/Resource;)V
+#setScriptSource(Lorg/springframework/scripting/ScriptSource;)V
@1.4.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;)V

+###org/springframework/data/redis/core/PartialUpdate
@1.8.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Class;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#newPartialUpdate(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/data/redis/core/PartialUpdate;
+#getValue()Ljava/lang/Object;
+#set(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/data/redis/core/PartialUpdate;
+#del(Ljava/lang/String;)Lorg/springframework/data/redis/core/PartialUpdate;
+#getTarget()Ljava/lang/Class;
+#getId()Ljava/lang/Object;
+#getPropertyUpdates()Ljava/util/List;
+#isRefreshTtl()Z
+#refreshTtl(Z)Lorg/springframework/data/redis/core/PartialUpdate;

+###org/springframework/data/redis/core/BoundValueOperations
@1.0.0.RELEASE
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#set(Ljava/lang/Object;)V
+#set(Ljava/lang/Object;J)V
+#set(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
+#setIfAbsent(Ljava/lang/Object;)Ljava/lang/Boolean;
+#get()Ljava/lang/Object;
+#get(JJ)Ljava/lang/String;
+#getAndSet(Ljava/lang/Object;)Ljava/lang/Object;
+#increment(J)Ljava/lang/Long;
+#append(Ljava/lang/String;)Ljava/lang/Integer;
+#size()Ljava/lang/Long;
@1.1.0.M1
+#increment(D)Ljava/lang/Double;
@2.1.0.RELEASE
+#set(Ljava/lang/Object;Ljava/time/Duration;)V
+#setIfAbsent(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#setIfAbsent(Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Boolean;
+#setIfPresent(Ljava/lang/Object;)Ljava/lang/Boolean;
+#setIfPresent(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#setIfPresent(Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Boolean;
+#increment()Ljava/lang/Long;
+#decrement()Ljava/lang/Long;
+#decrement(J)Ljava/lang/Long;
@2.6.0
+#getAndDelete()Ljava/lang/Object;
+#getAndExpire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#getAndExpire(Ljava/time/Duration;)Ljava/lang/Object;
+#getAndPersist()Ljava/lang/Object;

+###org/springframework/data/redis/core/ConvertingCursor
@1.4.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/Cursor;Lorg/springframework/core/convert/converter/Converter;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V
+#close()V
+#getCursorId()J
+#isClosed()Z
+#open()Lorg/springframework/data/redis/core/Cursor;
+#getPosition()J
@3.0.0
-#open()Lorg/springframework/data/redis/core/Cursor;

+###org/springframework/data/redis/core/convert/SpelIndexResolver
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/mapping/RedisMappingContext;)V
+#<init>(Lorg/springframework/data/redis/core/mapping/RedisMappingContext;Lorg/springframework/expression/spel/standard/SpelExpressionParser;)V
+#resolveIndexesFor(Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;
+#setBeanResolver(Lorg/springframework/expression/BeanResolver;)V
@1.8.0.RELEASE
+#resolveIndexesFor(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/Object;)Ljava/util/Set;

+###org/springframework/data/redis/core/ReactiveRedisOperations
@2.0.0.RELEASE
+#execute(Lorg/springframework/data/redis/core/ReactiveRedisCallback;)Lreactor/core/publisher/Flux;
+#hasKey(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#type(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#keys(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#randomKey()Lreactor/core/publisher/Mono;
+#rename(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#renameIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#delete([Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#delete(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#expire(Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#expireAt(Ljava/lang/Object;Ljava/time/Instant;)Lreactor/core/publisher/Mono;
+#persist(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#move(Ljava/lang/Object;I)Lreactor/core/publisher/Mono;
+#getExpire(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/serializer/RedisElementWriter;Lorg/springframework/data/redis/serializer/RedisElementReader;)Lreactor/core/publisher/Flux;
+#opsForValue()Lorg/springframework/data/redis/core/ReactiveValueOperations;
+#opsForValue(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveValueOperations;
+#opsForList()Lorg/springframework/data/redis/core/ReactiveListOperations;
+#opsForList(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveListOperations;
+#opsForSet()Lorg/springframework/data/redis/core/ReactiveSetOperations;
+#opsForSet(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveSetOperations;
+#opsForZSet()Lorg/springframework/data/redis/core/ReactiveZSetOperations;
+#opsForZSet(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveZSetOperations;
+#opsForHyperLogLog()Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;
+#opsForHyperLogLog(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;
+#opsForHash()Lorg/springframework/data/redis/core/ReactiveHashOperations;
+#opsForHash(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveHashOperations;
+#opsForGeo()Lorg/springframework/data/redis/core/ReactiveGeoOperations;
+#opsForGeo(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveGeoOperations;
+#getSerializationContext()Lorg/springframework/data/redis/serializer/RedisSerializationContext;
@2.1.0.RELEASE
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#listenToChannel([Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#listenToPattern([Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#listenTo([Lorg/springframework/data/redis/listener/Topic;)Lreactor/core/publisher/Flux;
+#scan()Lreactor/core/publisher/Flux;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
+#unlink([Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#unlink(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
@2.2.0.RELEASE
+#opsForStream()Lorg/springframework/data/redis/core/ReactiveStreamOperations;
+#opsForStream(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/core/ReactiveStreamOperations;
+#opsForStream(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveStreamOperations;
@2.6.0
+#executeInSession(Lorg/springframework/data/redis/core/ReactiveRedisSessionCallback;)Lreactor/core/publisher/Flux;
+#listenToChannelLater([Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#listenToPatternLater([Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#listenToLater([Lorg/springframework/data/redis/listener/Topic;)Lreactor/core/publisher/Mono;
+#copy(Ljava/lang/Object;Ljava/lang/Object;Z)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/connection/ReactiveListCommands$PopCommand
@2.0.0.RELEASE
+#right()Lorg/springframework/data/redis/connection/ReactiveListCommands$PopCommand;
+#left()Lorg/springframework/data/redis/connection/ReactiveListCommands$PopCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$PopCommand;
+#getDirection()Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;
@2.6.0
+#count(J)Lorg/springframework/data/redis/connection/ReactiveListCommands$PopCommand;
+#getCount()J

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZCountCommand
@2.0.0.RELEASE
+#scoresWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZCountCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZCountCommand;
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByScoreCommand
@2.0.0.RELEASE
+#scoresWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByScoreCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByScoreCommand;
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/RedisConfiguration$DomainSocketConfiguration
@2.1.0.RELEASE

+###org/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfCountCommand
@2.0.0.RELEASE
+#valueIn(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfCountCommand;
+#valuesIn(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfCountCommand;
+#getKeys()Ljava/util/List;
+#getKey()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/lettuce/LettuceSubscription
@2.2.0.RELEASE

+###org/springframework/data/redis/connection/lettuce/LettuceConnectionProvider$TargetAware
@2.0.0.RELEASE
+#getConnection(Ljava/lang/Class;Lio/lettuce/core/RedisURI;)Lio/lettuce/core/api/StatefulConnection;
@2.2.0.RELEASE
+#getConnectionAsync(Ljava/lang/Class;Lio/lettuce/core/RedisURI;)Ljava/util/concurrent/CompletionStage;

+###org/springframework/data/redis/connection/ReactiveListCommands$LIndexCommand
@2.0.0.RELEASE
+#elementAt(J)Lorg/springframework/data/redis/connection/ReactiveListCommands$LIndexCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LIndexCommand;
+#getIndex()Ljava/lang/Long;

+###org/springframework/data/redis/connection/RedisConfiguration$WithDatabaseIndex
@2.1.0.RELEASE
+#setDatabase(I)V
+#getDatabase()I

+###org/springframework/data/redis/connection/ReactiveStringCommands$BitOpCommand
@2.0.0.RELEASE
+#perform(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitOpCommand;
+#onKeys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitOpCommand;
+#andSaveAs(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitOpCommand;
+#getBitOp()Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;
+#getKeys()Ljava/util/List;
+#getDestinationKey()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/MessageListener
@1.0.0.RELEASE
+#onMessage(Lorg/springframework/data/redis/connection/Message;[B)V

+###org/springframework/data/redis/connection/RedisConnection
@1.0.0.RELEASE
+#close()V
+#isClosed()Z
+#getNativeConnection()Ljava/lang/Object;
+#isQueueing()Z
+#isPipelined()Z
+#openPipeline()V
+#closePipeline()Ljava/util/List;
@1.4.0.RELEASE
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
@2.0.0.RELEASE
+#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
+#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
+#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
+#scriptingCommands()Lorg/springframework/data/redis/connection/RedisScriptingCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;
@2.2.0.RELEASE
+#streamCommands()Lorg/springframework/data/redis/connection/RedisStreamCommands;
@3.0.0
-#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
-#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
-#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
-#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
-#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
-#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
-#scriptingCommands()Lorg/springframework/data/redis/connection/RedisScriptingCommands;
-#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
-#streamCommands()Lorg/springframework/data/redis/connection/RedisStreamCommands;
-#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
-#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;

+###org/springframework/data/redis/connection/ReactiveListCommands
@2.0.0.RELEASE
+#rPush(Ljava/nio/ByteBuffer;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#rPushX(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#lPush(Ljava/nio/ByteBuffer;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#lPushX(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#push(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lLen(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#lLen(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lRange(Ljava/nio/ByteBuffer;JJ)Lreactor/core/publisher/Flux;
+#lRange(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lTrim(Ljava/nio/ByteBuffer;JJ)Lreactor/core/publisher/Mono;
+#lTrim(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lIndex(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Mono;
+#lIndex(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lInsert(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/RedisListCommands$Position;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#lInsert(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lSet(Ljava/nio/ByteBuffer;JLjava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#lSet(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lRem(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#lRem(Ljava/nio/ByteBuffer;Ljava/lang/Long;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#lRem(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lPop(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#rPop(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#pop(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#blPop(Ljava/util/List;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#brPop(Ljava/util/List;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#bPop(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#rPopLPush(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#rPopLPush(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#bRPopLPush(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#bRPopLPush(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.4.0
+#lPos(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#lPos(Lorg/springframework/data/redis/connection/ReactiveListCommands$LPosCommand;)Lreactor/core/publisher/Flux;
+#lPos(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.6.0
+#lMove(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;)Lreactor/core/publisher/Mono;
+#lMove(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#bLMove(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#bLMove(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#lPop(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#rPop(Ljava/nio/ByteBuffer;J)Lreactor/core/publisher/Flux;
+#popList(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ReactiveClusterHashCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/ReactiveHashCommands$HDelCommand
@2.0.0.RELEASE
+#field(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HDelCommand;
+#fields(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HDelCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HDelCommand;
+#getFields()Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveRedisConnection$ByteBufferResponse
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/nio/ByteBuffer;)V

+###org/springframework/data/redis/connection/ReactiveClusterListCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/RedisZSetCommands$Weights
@2.1.0.RELEASE
+#of([I)Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;
+#of([D)Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;
+#fromSetCount(I)Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;
+#multiply(I)Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;
+#multiply(D)Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;
+#apply(Ljava/util/function/Function;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;
+#getWeight(I)D
+#size()I
+#toArray()[D
+#toList()Ljava/util/List;
@2.2.0.RELEASE
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0
-###org/springframework/data/redis/connection/RedisZSetCommands$Weights

+###org/springframework/data/redis/connection/ReactiveKeyCommands$ExpireCommand
@2.0.0.RELEASE
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$ExpireCommand;
+#timeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$ExpireCommand;
+#getTimeout()Ljava/time/Duration;

+###org/springframework/data/redis/TooManyClusterRedirectionsException
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptions
@2.2.0.RELEASE
+#builder()Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#getPollTimeout()Ljava/time/Duration;
+#getBatchSize()Ljava/util/OptionalInt;
+#getKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#getHashKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#getHashValueSerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#getHashMapper()Lorg/springframework/data/redis/hash/HashMapper;
+#getTargetType()Ljava/lang/Class;
+#getErrorHandler()Lorg/springframework/util/ErrorHandler;
+#getExecutor()Ljava/util/concurrent/Executor;
@2.4.2
+#getRequiredHashMapper()Lorg/springframework/data/redis/hash/HashMapper;
+#hasHashMapper()Z

+###org/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder
@2.2.0.RELEASE
+#pollTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#batchSize(I)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#executor(Ljava/util/concurrent/Executor;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#errorHandler(Lorg/springframework/util/ErrorHandler;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#serializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#keySerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#hashKeySerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#hashValueSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#targetType(Ljava/lang/Class;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#objectMapper(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptionsBuilder;
+#build()Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamMessageListenerContainerOptions;

+###org/springframework/data/redis/repository/cdi/RedisKeyValueAdapterBean
@1.7.0.RELEASE
+#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljavax/enterprise/inject/spi/BeanManager;)V
+#create(Ljavax/enterprise/context/spi/CreationalContext;)Lorg/springframework/data/redis/core/RedisKeyValueAdapter;
+#destroy(Lorg/springframework/data/redis/core/RedisKeyValueAdapter;Ljavax/enterprise/context/spi/CreationalContext;)V
+#destroy(Ljava/lang/Object;Ljavax/enterprise/context/spi/CreationalContext;)V
+#create(Ljavax/enterprise/context/spi/CreationalContext;)Ljava/lang/Object;
@3.0.0
+#<init>(Ljakarta/enterprise/inject/spi/Bean;Ljava/util/Set;Ljakarta/enterprise/inject/spi/BeanManager;)V
+#create(Ljakarta/enterprise/context/spi/CreationalContext;)Lorg/springframework/data/redis/core/RedisKeyValueAdapter;
+#destroy(Lorg/springframework/data/redis/core/RedisKeyValueAdapter;Ljakarta/enterprise/context/spi/CreationalContext;)V
+#destroy(Ljava/lang/Object;Ljakarta/enterprise/context/spi/CreationalContext;)V
+#create(Ljakarta/enterprise/context/spi/CreationalContext;)Ljava/lang/Object;
-#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljavax/enterprise/inject/spi/BeanManager;)V
-#create(Ljavax/enterprise/context/spi/CreationalContext;)Lorg/springframework/data/redis/core/RedisKeyValueAdapter;
-#destroy(Lorg/springframework/data/redis/core/RedisKeyValueAdapter;Ljavax/enterprise/context/spi/CreationalContext;)V
-#destroy(Ljava/lang/Object;Ljavax/enterprise/context/spi/CreationalContext;)V
-#create(Ljavax/enterprise/context/spi/CreationalContext;)Ljava/lang/Object;

+###org/springframework/data/redis/repository/query/ExampleQueryMapper
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/redis/core/convert/IndexResolver;)V
+#getMappedExample(Lorg/springframework/data/domain/Example;)Lorg/springframework/data/redis/repository/query/RedisOperationChain;

+###org/springframework/data/redis/core/RedisKeyspaceEvent
@1.7.0.RELEASE
+#<init>([B)V
+#getSource()[B
+#getSource()Ljava/lang/Object;
@1.8.0.RELEASE
+#<init>(Ljava/lang/String;[B)V
+#getChannel()Ljava/lang/String;

+###org/springframework/data/redis/core/ReactiveZSetOperationsExtensionsKt
@2.2.0.RELEASE
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/lang/Object;DLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#addAllAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#removeAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#incrementScoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/lang/Object;DLkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rankAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#reverseRankAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rangeAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lkotlinx/coroutines/flow/Flow;
+#rangeWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lkotlinx/coroutines/flow/Flow;
+#rangeByScoreAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeByScoreAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#rangeByScoreWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeByScoreWithScoresAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreWithScoresAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#countAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#scoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#removeRangeAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#removeRangeByScoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@2.3.0.RELEASE
+#sizeAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rangeByLexAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeByLexAndAwait$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByLexAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByLexAndAwait$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
@2.5.0
+#removeRangeByLexAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@3.0.0
+#rangeByScoreAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeByScoreAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#rangeByScoreWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeByScoreWithScoresAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByScoreWithScoresAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#rangeByLexAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#rangeByLexAndAwait$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByLexAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lkotlinx/coroutines/flow/Flow;
+#reverseRangeByLexAndAwait$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#rangeByScoreAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#rangeByScoreAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#rangeByScoreWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#rangeByScoreWithScoresAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeByScoreAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeByScoreAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeByScoreWithScoresAsFlow(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeByScoreWithScoresAsFlow$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#rangeByLexAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#rangeByLexAndAwait$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeByLexAndAwait(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lkotlinx/coroutines/flow/Flow;
-#reverseRangeByLexAndAwait$default(Lorg/springframework/data/redis/core/ReactiveZSetOperations;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;

+###org/springframework/data/redis/core/ReactiveHyperLogLogOperationsExtensionsKt
@2.2.0.RELEASE
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#sizeAndAwait(Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAndAwait(Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/data/redis/core/RedisCallback
@1.0.0.RELEASE
+#doInRedis(Lorg/springframework/data/redis/connection/RedisConnection;)Ljava/lang/Object;

+###org/springframework/data/redis/core/convert/RedisTypeMapper
@2.1.0.RELEASE
+#isTypeKey(Ljava/lang/String;)Z

+###org/springframework/data/redis/VersionParser
@1.3.0.RELEASE
+#<init>()V
+#parseVersion(Ljava/lang/String;)Lorg/springframework/data/redis/Version;
@3.0.0
-###org/springframework/data/redis/VersionParser

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSubCommand
@2.1.0.RELEASE
+#getCommand()Ljava/lang/String;
+#getType()Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;
+#getOffset()Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;

+###org/springframework/data/redis/connection/ReactiveScriptingCommands
@2.0.0.RELEASE
+#scriptFlush()Lreactor/core/publisher/Mono;
+#scriptKill()Lreactor/core/publisher/Mono;
+#scriptLoad(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#scriptExists(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#scriptExists(Ljava/util/List;)Lreactor/core/publisher/Flux;
+#eval(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReturnType;I[Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ReactiveSetCommands$SInterCommand
@2.0.0.RELEASE
+#keys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SInterCommand;
+#getKey()Ljava/nio/ByteBuffer;
+#getKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/lettuce/LettuceClusterConnection
@1.7.0.RELEASE
+#<init>(Lcom/lambdaworks/redis/cluster/RedisClusterClient;)V
+#<init>(Lcom/lambdaworks/redis/cluster/RedisClusterClient;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;)V
+#scan(JLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#keys([B)Ljava/util/Set;
+#flushAll()V
+#flushDb()V
+#dbSize()Ljava/lang/Long;
+#info()Ljava/util/Properties;
+#info(Ljava/lang/String;)Ljava/util/Properties;
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
+#move([BI)Ljava/lang/Boolean;
+#del([[B)Ljava/lang/Long;
+#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Set;
+#clusterGetSlotForKey([B)Ljava/lang/Integer;
+#clusterGetNodeForSlot(I)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#clusterGetNodeForKey([B)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#clusterGetClusterInfo()Lorg/springframework/data/redis/connection/ClusterInfo;
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#clusterDeleteSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#clusterDeleteSlotsInRange(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#clusterForget(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#clusterMeet(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#clusterSetSlot(Lorg/springframework/data/redis/connection/RedisClusterNode;ILorg/springframework/data/redis/connection/RedisClusterCommands$AddSlots;)V
+#clusterGetKeysInSlot(ILjava/lang/Integer;)Ljava/util/List;
+#clusterCountKeysInSlot(I)Ljava/lang/Long;
+#clusterReplicate(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#ping()Ljava/lang/String;
+#ping(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/String;
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;
+#keys(Lorg/springframework/data/redis/connection/RedisClusterNode;[B)Ljava/util/Set;
+#randomKey(Lorg/springframework/data/redis/connection/RedisClusterNode;)[B
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#mGet([[B)Ljava/util/List;
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#rPopLPush([B[B)[B
+#bRPopLPush(I[B[B)[B
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)Ljava/lang/Long;
+#clusterGetNodes()Ljava/util/List;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V
+#watch([[B)V
+#unwatch()V
+#multi()V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/List;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
+#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#time()Ljava/lang/Long;
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
+#getClientList()Ljava/util/List;
+#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;
+#clusterGetMasterSlaveMap()Ljava/util/Map;
+#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
+#clusterGetNodes()Ljava/lang/Iterable;
@1.7.11.RELEASE
+#close()V
@1.8.0.RELEASE
+#select(I)V
-#close()V
@1.8.4.RELEASE
+#close()V
@1.8.7.RELEASE
+#<init>(Lcom/lambdaworks/redis/cluster/RedisClusterClient;JLorg/springframework/data/redis/connection/ClusterCommandExecutor;)V
@2.0.0.RELEASE
+#<init>(Lio/lettuce/core/cluster/RedisClusterClient;)V
+#<init>(Lio/lettuce/core/cluster/RedisClusterClient;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;)V
+#<init>(Lio/lettuce/core/cluster/RedisClusterClient;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;Ljava/time/Duration;)V
+#<init>(Lorg/springframework/data/redis/connection/lettuce/LettuceConnectionProvider;)V
+#<init>(Lorg/springframework/data/redis/connection/lettuce/LettuceConnectionProvider;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;)V
+#<init>(Lorg/springframework/data/redis/connection/lettuce/LettuceConnectionProvider;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;Ljava/time/Duration;)V
+#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
+#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
+#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
+#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisClusterServerCommands;
+#getClusterCommandExecutor()Lorg/springframework/data/redis/connection/ClusterCommandExecutor;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
-#<init>(Lcom/lambdaworks/redis/cluster/RedisClusterClient;)V
-#<init>(Lcom/lambdaworks/redis/cluster/RedisClusterClient;Lorg/springframework/data/redis/connection/ClusterCommandExecutor;)V
-#<init>(Lcom/lambdaworks/redis/cluster/RedisClusterClient;JLorg/springframework/data/redis/connection/ClusterCommandExecutor;)V
-#scan(JLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#keys([B)Ljava/util/Set;
-#flushAll()V
-#flushDb()V
-#dbSize()Ljava/lang/Long;
-#info()Ljava/util/Properties;
-#info(Ljava/lang/String;)Ljava/util/Properties;
-#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;
-#move([BI)Ljava/lang/Boolean;
-#del([[B)Ljava/lang/Long;
-#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;
-#randomKey()[B
-#rename([B[B)V
-#renameNX([B[B)Ljava/lang/Boolean;
-#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
-#mGet([[B)Ljava/util/List;
-#mSet(Ljava/util/Map;)V
-#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
-#bLPop(I[[B)Ljava/util/List;
-#bRPop(I[[B)Ljava/util/List;
-#rPopLPush([B[B)[B
-#bRPopLPush(I[B[B)[B
-#sMove([B[B[B)Ljava/lang/Boolean;
-#sInter([[B)Ljava/util/Set;
-#sInterStore([B[[B)Ljava/lang/Long;
-#sUnion([[B)Ljava/util/Set;
-#sUnionStore([B[[B)Ljava/lang/Long;
-#sDiff([[B)Ljava/util/Set;
-#sDiffStore([B[[B)Ljava/lang/Long;
-#pfCount([[B)Ljava/lang/Long;
-#pfMerge([B[[B)V
-#getConfig(Ljava/lang/String;)Ljava/util/List;
-#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/List;
-#setConfig(Ljava/lang/String;Ljava/lang/String;)V
-#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V
-#resetConfigStats()V
-#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
-#time()Ljava/lang/Long;
-#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;
-#getClientList()Ljava/util/List;
-#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;
@2.1.0.RELEASE
+#scan(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@3.0.0
+#clusterCommands()Lorg/springframework/data/redis/connection/RedisClusterCommands;
+#clusterGetReplicas(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Set;
+#clusterGetMasterReplicaMap()Ljava/util/Map;
+#clusterGetReplicas(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
-#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Set;
-#clusterGetMasterSlaveMap()Ljava/util/Map;
-#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;

+###org/springframework/data/redis/connection/ReactiveSubscription$PatternMessage
@2.1.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#getPattern()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/RedisListCommands$Position
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisListCommands$Position;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisListCommands$Position;

+###org/springframework/data/redis/connection/ReactiveKeyCommands$ExpireAtCommand
@2.0.0.RELEASE
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$ExpireAtCommand;
+#timeout(Ljava/time/Instant;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$ExpireAtCommand;
+#getExpireAt()Ljava/time/Instant;

+###org/springframework/data/redis/connection/RedisClusterNode
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;ILorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#getSlotRange()Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;
+#servesSlot(I)Z
+#getLinkState()Lorg/springframework/data/redis/connection/RedisClusterNode$LinkState;
+#isConnected()Z
+#getFlags()Ljava/util/Set;
+#isMarkedAsFail()Z
+#toString()Ljava/lang/String;
+#newRedisClusterNode()Lorg/springframework/data/redis/connection/RedisClusterNode$RedisClusterNodeBuilder;

+###org/springframework/data/redis/connection/ReactiveRedisConnection$MultiValueResponse
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/util/List;)V

+###org/springframework/data/redis/connection/ReactiveStreamCommands$TrimCommand
@2.2.0.RELEASE
+#stream(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$TrimCommand;
+#to(J)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$TrimCommand;
+#getCount()Ljava/lang/Long;
@2.4.0
+#approximate()Lorg/springframework/data/redis/connection/ReactiveStreamCommands$TrimCommand;
+#approximate(Z)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$TrimCommand;
+#isApproximateTrimming()Z

+###org/springframework/data/redis/connection/ReturnType
@1.1.0.M1
+#values()[Lorg/springframework/data/redis/connection/ReturnType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReturnType;
@1.1.0.M2
+#fromJavaType(Ljava/lang/Class;)Lorg/springframework/data/redis/connection/ReturnType;

+###org/springframework/data/redis/connection/ClusterCommandExecutor
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/ClusterTopologyProvider;Lorg/springframework/data/redis/connection/ClusterNodeResourceProvider;Lorg/springframework/data/redis/ExceptionTranslationStrategy;)V
+#<init>(Lorg/springframework/data/redis/connection/ClusterTopologyProvider;Lorg/springframework/data/redis/connection/ClusterNodeResourceProvider;Lorg/springframework/data/redis/ExceptionTranslationStrategy;Lorg/springframework/core/task/AsyncTaskExecutor;)V
+#executeCommandOnArbitraryNode(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$NodeResult;
+#executeCommandOnSingleNode(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;Lorg/springframework/data/redis/connection/RedisClusterNode;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$NodeResult;
+#executeCommandOnAllNodes(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult;
+#executeCommandAsyncOnNodes(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;Ljava/lang/Iterable;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult;
+#executeMuliKeyCommand(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MultiKeyClusterCommandCallback;Ljava/lang/Iterable;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult;
+#setMaxRedirects(I)V
+#destroy()V
@2.0.0.RELEASE
+#executeCommandOnAllNodes(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MultiNodeResult;
+#executeCommandAsyncOnNodes(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;Ljava/lang/Iterable;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MultiNodeResult;
+#executeMultiKeyCommand(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MultiKeyClusterCommandCallback;Ljava/lang/Iterable;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MultiNodeResult;
-#executeCommandOnAllNodes(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult;
-#executeCommandAsyncOnNodes(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback;Ljava/lang/Iterable;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult;
-#executeMuliKeyCommand(Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MultiKeyClusterCommandCallback;Ljava/lang/Iterable;)Lorg/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult;

+###org/springframework/data/redis/connection/RedisConfiguration$SentinelConfiguration
@2.1.0.RELEASE
+#setMaster(Ljava/lang/String;)V
+#setMaster(Lorg/springframework/data/redis/connection/NamedNode;)V
+#getMaster()Lorg/springframework/data/redis/connection/NamedNode;
+#getSentinels()Ljava/util/Set;
@2.2.2.RELEASE
+#getDataNodePassword()Lorg/springframework/data/redis/connection/RedisPassword;
+#setSentinelPassword(Ljava/lang/String;)V
+#setSentinelPassword([C)V
+#setSentinelPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
+#getSentinelPassword()Lorg/springframework/data/redis/connection/RedisPassword;
@2.4.0
+#getDataNodeUsername()Ljava/lang/String;
@2.7.0
+#setSentinelUsername(Ljava/lang/String;)V
+#getSentinelUsername()Ljava/lang/String;

+###org/springframework/data/redis/connection/ReactiveServerCommands
@2.0.0.RELEASE
+#bgReWriteAof()Lreactor/core/publisher/Mono;
+#bgSave()Lreactor/core/publisher/Mono;
+#lastSave()Lreactor/core/publisher/Mono;
+#save()Lreactor/core/publisher/Mono;
+#dbSize()Lreactor/core/publisher/Mono;
+#flushDb()Lreactor/core/publisher/Mono;
+#flushAll()Lreactor/core/publisher/Mono;
+#info()Lreactor/core/publisher/Mono;
+#info(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getConfig(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#resetConfigStats()Lreactor/core/publisher/Mono;
+#time()Lreactor/core/publisher/Mono;
+#killClient(Ljava/lang/String;I)Lreactor/core/publisher/Mono;
+#setClientName(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getClientName()Lreactor/core/publisher/Mono;
+#getClientList()Lreactor/core/publisher/Flux;
@2.5.0
+#time(Ljava/util/concurrent/TimeUnit;)Lreactor/core/publisher/Mono;
@2.7.0
+#flushDb(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)Lreactor/core/publisher/Mono;
+#flushAll(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/connection/ClusterInfo$Info
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/ClusterInfo$Info;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ClusterInfo$Info;

+###org/springframework/data/redis/connection/ValueEncoding$RedisValueEncoding
@2.1.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/ValueEncoding$RedisValueEncoding;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ValueEncoding$RedisValueEncoding;
+#raw()Ljava/lang/String;

+###org/springframework/data/redis/connection/jedis/JedisScriptReturnConverter
@1.1.0.M2
+#<init>(Lorg/springframework/data/redis/connection/ReturnType;)V
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$RangeCommand
@2.2.0.RELEASE
+#stream(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$RangeCommand;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$RangeCommand;
+#limit(I)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$RangeCommand;
+#limit(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$RangeCommand;
+#getRange()Lorg/springframework/data/domain/Range;
+#getLimit()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
@3.0.0
+#limit(Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$RangeCommand;
+#getLimit()Lorg/springframework/data/redis/connection/Limit;
-#limit(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$RangeCommand;
-#getLimit()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;

+###org/springframework/data/redis/connection/RedisKeyCommands
@1.0.0.RELEASE
+#exists([B)Ljava/lang/Boolean;
+#del([[B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#keys([B)Ljava/util/Set;
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#ttl([B)Ljava/lang/Long;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
@1.1.0.M1
+#pExpire([BJ)Ljava/lang/Boolean;
+#pExpireAt([BJ)Ljava/lang/Boolean;
+#pTtl([B)Ljava/lang/Long;
+#dump([B)[B
+#restore([BJ[B)V
@1.4.0.RELEASE
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.8.0.RELEASE
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
@2.1.0.RELEASE
+#exists([[B)Ljava/lang/Long;
+#unlink([[B)Ljava/lang/Long;
+#touch([[B)Ljava/lang/Long;
+#restore([BJ[BZ)V
+#encodingOf([B)Lorg/springframework/data/redis/connection/ValueEncoding;
+#idletime([B)Ljava/time/Duration;
+#refcount([B)Ljava/lang/Long;
@2.6.0
+#copy([B[BZ)Ljava/lang/Boolean;
+#scan(Lorg/springframework/data/redis/core/KeyScanOptions;)Lorg/springframework/data/redis/core/Cursor;

+###org/springframework/data/redis/connection/ClusterCommandExecutor$NodeResult
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/Object;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/Object;[B)V
+#getValue()Ljava/lang/Object;
+#getNode()Lorg/springframework/data/redis/connection/RedisClusterNode;
+#getKey()[B
@2.1.0.RELEASE
+#mapValue(Ljava/util/function/Function;)Ljava/lang/Object;

+###org/springframework/data/redis/util/ByteUtils
@1.7.0.RELEASE
+#concat([B[B)[B
+#concatAll([[B)[B
+#split([BI)[[B
+#mergeArrays([B[[B)[[B
@1.8.10.RELEASE
+#startsWith([B[B)Z
+#startsWith([B[BI)Z
+#indexOf([BB)I
@2.0.0.RELEASE
+#getBytes(Ljava/nio/ByteBuffer;)[B
-#startsWith([B[B)Z
-#startsWith([B[BI)Z
-#indexOf([BB)I
@2.0.3.RELEASE
+#startsWith([B[B)Z
+#startsWith([B[BI)Z
+#indexOf([BB)I
@2.1.0.RELEASE
+#getByteBuffer(Ljava/lang/String;)Ljava/nio/ByteBuffer;
+#getByteBuffer(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;
+#extractBytes(Ljava/nio/ByteBuffer;)[B

+###org/springframework/data/redis/repository/cdi/CdiBean
@1.7.0.RELEASE
+#<init>(Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;)V
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;)V
+#getTypes()Ljava/util/Set;
+#initialize()V
+#destroy(Ljava/lang/Object;Ljavax/enterprise/context/spi/CreationalContext;)V
+#getQualifiers()Ljava/util/Set;
+#getName()Ljava/lang/String;
+#getStereotypes()Ljava/util/Set;
+#getBeanClass()Ljava/lang/Class;
+#isAlternative()Z
+#isNullable()Z
+#getInjectionPoints()Ljava/util/Set;
+#getScope()Ljava/lang/Class;
+#getId()Ljava/lang/String;
+#toString()Ljava/lang/String;
@3.0.0
+#<init>(Ljava/util/Set;Ljava/lang/Class;Ljakarta/enterprise/inject/spi/BeanManager;)V
+#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/lang/Class;Ljakarta/enterprise/inject/spi/BeanManager;)V
+#destroy(Ljava/lang/Object;Ljakarta/enterprise/context/spi/CreationalContext;)V
-#<init>(Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;)V
-#<init>(Ljava/util/Set;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;)V
-#destroy(Ljava/lang/Object;Ljavax/enterprise/context/spi/CreationalContext;)V

+###org/springframework/data/redis/listener/PatternTopic
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getTopic()Ljava/lang/String;
@1.0.3.RELEASE
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.1.0.RELEASE
+#of(Ljava/lang/String;)Lorg/springframework/data/redis/listener/PatternTopic;

+###org/springframework/data/redis/listener/RedisMessageListenerContainer
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#destroy()V
+#isAutoStartup()Z
+#stop(Ljava/lang/Runnable;)V
+#getPhase()I
+#isRunning()Z
+#start()V
+#stop()V
+#isActive()Z
+#getConnectionFactory()Lorg/springframework/data/redis/connection/RedisConnectionFactory;
+#setConnectionFactory(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#setBeanName(Ljava/lang/String;)V
+#setTaskExecutor(Ljava/util/concurrent/Executor;)V
+#setSubscriptionExecutor(Ljava/util/concurrent/Executor;)V
+#setTopicSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#setErrorHandler(Lorg/springframework/util/ErrorHandler;)V
+#setMessageListeners(Ljava/util/Map;)V
+#addMessageListener(Lorg/springframework/data/redis/connection/MessageListener;Ljava/util/Collection;)V
+#addMessageListener(Lorg/springframework/data/redis/connection/MessageListener;Lorg/springframework/data/redis/listener/Topic;)V
@1.0.3.RELEASE
+#removeMessageListener(Lorg/springframework/data/redis/connection/MessageListener;Ljava/util/Collection;)V
+#removeMessageListener(Lorg/springframework/data/redis/connection/MessageListener;Lorg/springframework/data/redis/listener/Topic;)V
+#removeMessageListener(Lorg/springframework/data/redis/connection/MessageListener;)V
@1.1.0.RC1
+#setRecoveryInterval(J)V
@1.1.1.RELEASE
+#getMaxSubscriptionRegistrationWaitingTime()J
+#setMaxSubscriptionRegistrationWaitingTime(J)V
@2.7.0
+#isListening()Z
+#setRecoveryBackoff(Lorg/springframework/util/backoff/BackOff;)V
-#isAutoStartup()Z
-#getPhase()I

+###org/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder
@1.4.0.RELEASE
+#<init>()V
+#count(J)Lorg/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder;
+#match(Ljava/lang/String;)Lorg/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder;
+#build()Lorg/springframework/data/redis/core/ScanOptions;
@2.6.0
+#match([B)Lorg/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder;
+#type(Lorg/springframework/data/redis/connection/DataType;)Lorg/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder;
+#type(Ljava/lang/String;)Lorg/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder;
-#<init>()V

+###org/springframework/data/redis/core/BoundGeoOperations
@1.8.0.RELEASE
+#geoAdd(Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;
+#geoAdd(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd(Ljava/util/Map;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/Iterable;)Ljava/lang/Long;
+#geoDist(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;
+#geoDist(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([Ljava/lang/Object;)Ljava/util/List;
+#geoPos([Ljava/lang/Object;)Ljava/util/List;
+#geoRadius(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius(Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([Ljava/lang/Object;)Ljava/lang/Long;
@2.0.0.RELEASE
+#add(Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;
*#geoAdd(Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;[deprecated]
+#add(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
*#geoAdd(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;[deprecated]
+#add(Ljava/util/Map;)Ljava/lang/Long;
*#geoAdd(Ljava/util/Map;)Ljava/lang/Long;[deprecated]
+#add(Ljava/lang/Iterable;)Ljava/lang/Long;
*#geoAdd(Ljava/lang/Iterable;)Ljava/lang/Long;[deprecated]
+#distance(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;
*#geoDist(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;[deprecated]
+#distance(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
*#geoDist(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;[deprecated]
+#hash([Ljava/lang/Object;)Ljava/util/List;
*#geoHash([Ljava/lang/Object;)Ljava/util/List;[deprecated]
+#position([Ljava/lang/Object;)Ljava/util/List;
*#geoPos([Ljava/lang/Object;)Ljava/util/List;[deprecated]
+#radius(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
*#geoRadius(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
*#geoRadius(Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;
*#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
*#geoRadiusByMember(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#radius(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
*#geoRadiusByMember(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
+#remove([Ljava/lang/Object;)Ljava/lang/Long;
*#geoRemove([Ljava/lang/Object;)Ljava/lang/Long;[deprecated]
@2.6.0
+#search(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#search(Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#search(Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#search(Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;)Lorg/springframework/data/geo/GeoResults;
+#search(Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#search(Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#searchAndStore(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/BoundingBox;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
+#searchAndStore(Ljava/lang/Object;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
@3.0.0
+#radius(Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;
-#geoAdd(Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;[deprecated]
-#geoAdd(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;[deprecated]
-#geoAdd(Ljava/util/Map;)Ljava/lang/Long;[deprecated]
-#geoAdd(Ljava/lang/Iterable;)Ljava/lang/Long;[deprecated]
-#geoDist(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;[deprecated]
-#geoDist(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;[deprecated]
-#geoHash([Ljava/lang/Object;)Ljava/util/List;[deprecated]
-#geoPos([Ljava/lang/Object;)Ljava/util/List;[deprecated]
-#geoRadius(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRadius(Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#radius(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRadiusByMember(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRadiusByMember(Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;[deprecated]
-#geoRemove([Ljava/lang/Object;)Ljava/lang/Long;[deprecated]

+###org/springframework/data/redis/core/TimeoutUtils
@1.0.5.RELEASE
+#<init>()V
+#toSeconds(JLjava/util/concurrent/TimeUnit;)J
@1.1.0.M1
+#toMillis(JLjava/util/concurrent/TimeUnit;)J
@2.1.0.RELEASE
+#hasMillis(Ljava/time/Duration;)Z
@2.3.0.RELEASE
+#toSeconds(Ljava/time/Duration;)J
@2.6.0
+#toDoubleSeconds(JLjava/util/concurrent/TimeUnit;)D

+###org/springframework/data/redis/core/ZSetOperations
@1.0.0.RELEASE
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
+#range(Ljava/lang/Object;JJ)Ljava/util/Set;
+#reverseRange(Ljava/lang/Object;JJ)Ljava/util/Set;
+#rangeWithScores(Ljava/lang/Object;JJ)Ljava/util/Set;
+#reverseRangeWithScores(Ljava/lang/Object;JJ)Ljava/util/Set;
+#rangeByScore(Ljava/lang/Object;DD)Ljava/util/Set;
+#reverseRangeByScore(Ljava/lang/Object;DD)Ljava/util/Set;
+#rangeByScoreWithScores(Ljava/lang/Object;DD)Ljava/util/Set;
+#reverseRangeByScoreWithScores(Ljava/lang/Object;DD)Ljava/util/Set;
+#add(Ljava/lang/Object;Ljava/lang/Object;D)Ljava/lang/Boolean;
+#incrementScore(Ljava/lang/Object;Ljava/lang/Object;D)Ljava/lang/Double;
+#rank(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#reverseRank(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#score(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Double;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#removeRange(Ljava/lang/Object;JJ)V
+#removeRangeByScore(Ljava/lang/Object;DD)V
+#count(Ljava/lang/Object;DD)Ljava/lang/Long;
+#size(Ljava/lang/Object;)Ljava/lang/Long;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@1.0.1.RELEASE
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#removeRange(Ljava/lang/Object;JJ)Ljava/lang/Long;
+#removeRangeByScore(Ljava/lang/Object;DD)Ljava/lang/Long;
-#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
-#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
-#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)V
-#removeRange(Ljava/lang/Object;JJ)V
-#removeRangeByScore(Ljava/lang/Object;DD)V
@1.0.2.RELEASE
+#rangeByScore(Ljava/lang/Object;DDJJ)Ljava/util/Set;
+#reverseRangeByScore(Ljava/lang/Object;DDJJ)Ljava/util/Set;
+#rangeByScoreWithScores(Ljava/lang/Object;DDJJ)Ljava/util/Set;
+#reverseRangeByScoreWithScores(Ljava/lang/Object;DDJJ)Ljava/util/Set;
@1.1.0.M2
+#add(Ljava/lang/Object;Ljava/util/Set;)Ljava/lang/Long;
+#remove(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
-#remove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
@1.3.0.RELEASE
+#zCard(Ljava/lang/Object;)Ljava/lang/Long;
@1.4.0.RELEASE
+#scan(Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.7.0.RELEASE
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.1.0.RELEASE
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
@2.4.0
+#lexCount(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.5.0
+#addIfAbsent(Ljava/lang/Object;Ljava/lang/Object;D)Ljava/lang/Boolean;
+#addIfAbsent(Ljava/lang/Object;Ljava/util/Set;)Ljava/lang/Long;
+#removeRangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
@2.6.0
+#randomMember(Ljava/lang/Object;)Ljava/lang/Object;
+#distinctRandomMembers(Ljava/lang/Object;J)Ljava/util/Set;
+#randomMembers(Ljava/lang/Object;J)Ljava/util/List;
+#randomMemberWithScore(Ljava/lang/Object;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#distinctRandomMembersWithScore(Ljava/lang/Object;J)Ljava/util/Set;
+#randomMembersWithScore(Ljava/lang/Object;J)Ljava/util/List;
+#popMin(Ljava/lang/Object;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMin(Ljava/lang/Object;J)Ljava/util/Set;
+#popMin(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMin(Ljava/lang/Object;Ljava/time/Duration;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMax(Ljava/lang/Object;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMax(Ljava/lang/Object;J)Ljava/util/Set;
+#popMax(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMax(Ljava/lang/Object;Ljava/time/Duration;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#score(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#difference(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#difference(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#differenceWithScores(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#differenceWithScores(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#differenceAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#intersect(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#intersect(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#intersectWithScores(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/util/Set;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
+#union(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#union(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#unionWithScores(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Set;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/util/Set;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
@3.0.0
*#lexCount(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#lexCount(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
*#removeRangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#removeRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;)Ljava/util/Set;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/util/Set;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;)Ljava/lang/Long;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/lang/Long;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;)Ljava/util/Set;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/util/Set;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;)Ljava/lang/Long;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/lang/Long;
*#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;[deprecated]
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
*#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;[deprecated]
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#rangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#rangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#reverseRangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#reverseRangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#rangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#rangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#reverseRangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#reverseRangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
-#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/util/Set;
-#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
-#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
-#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
-#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/util/Set;
-#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
-#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
-#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
-#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;

+###org/springframework/data/redis/core/index/SimpleIndexDefinition
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/data/redis/core/ReactiveHyperLogLogOperations
@2.0.0.RELEASE
+#add(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#size([Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#union(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/core/ReactiveGeoOperationsExtensionsKt
@2.2.0.RELEASE
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Lorg/springframework/data/geo/Point;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#add(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
+#distanceAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#distanceAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#hashAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#hashAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#positionAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#positionAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#radiusAsFlow(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lkotlinx/coroutines/flow/Flow;
+#radiusAsFlow$default(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#radiusAsFlow(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Object;D)Lkotlinx/coroutines/flow/Flow;
+#radiusAsFlow(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lkotlinx/coroutines/flow/Flow;
+#radiusAsFlow$default(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#removeAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveGeoOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/data/redis/core/convert/ReferenceResolver
@1.7.0.RELEASE
+#resolveReference(Ljava/io/Serializable;Ljava/lang/String;)Ljava/util/Map;
@2.0.0.RELEASE
+#resolveReference(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Map;
-#resolveReference(Ljava/io/Serializable;Ljava/lang/String;)Ljava/util/Map;

+###org/springframework/data/redis/core/convert/Jsr310Converters
@1.7.0.RELEASE
+#<init>()V
+#getConvertersToRegister()Ljava/util/Collection;
+#supports(Ljava/lang/Class;)Z

+###org/springframework/data/redis/cache/RedisCache
@1.4.2.RELEASE
+#<init>(Ljava/lang/String;[BLorg/springframework/data/redis/core/RedisTemplate;J)V
+#getName()Ljava/lang/String;
+#getNativeCache()Ljava/lang/Object;
+#get(Ljava/lang/Object;)Lorg/springframework/cache/Cache$ValueWrapper;
+#get(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/cache/Cache$ValueWrapper;
+#evict(Ljava/lang/Object;)V
+#clear()V
@1.5.0.RELEASE
+#get(Lorg/springframework/data/redis/cache/RedisCacheKey;)Lorg/springframework/data/redis/cache/RedisCacheElement;
+#put(Lorg/springframework/data/redis/cache/RedisCacheElement;)V
+#putIfAbsent(Lorg/springframework/data/redis/cache/RedisCacheElement;)Lorg/springframework/cache/Cache$ValueWrapper;
+#evict(Lorg/springframework/data/redis/cache/RedisCacheElement;)V
@1.6.0.RELEASE
+#<init>(Ljava/lang/String;[BLorg/springframework/data/redis/core/RedisOperations;J)V
-#<init>(Ljava/lang/String;[BLorg/springframework/data/redis/core/RedisTemplate;J)V
@1.6.4.RELEASE
+#get(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
@1.8.0.RELEASE
+#<init>(Ljava/lang/String;[BLorg/springframework/data/redis/core/RedisOperations;JZ)V
@2.0.0.RELEASE
+#getNativeCache()Lorg/springframework/data/redis/cache/RedisCacheWriter;
+#getCacheConfiguration()Lorg/springframework/data/redis/cache/RedisCacheConfiguration;
-#<init>(Ljava/lang/String;[BLorg/springframework/data/redis/core/RedisOperations;J)V
-#<init>(Ljava/lang/String;[BLorg/springframework/data/redis/core/RedisOperations;JZ)V
-#get(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
-#get(Ljava/lang/Object;)Lorg/springframework/cache/Cache$ValueWrapper;
-#get(Lorg/springframework/data/redis/cache/RedisCacheKey;)Lorg/springframework/data/redis/cache/RedisCacheElement;
-#put(Lorg/springframework/data/redis/cache/RedisCacheElement;)V
-#putIfAbsent(Lorg/springframework/data/redis/cache/RedisCacheElement;)Lorg/springframework/cache/Cache$ValueWrapper;
-#evict(Lorg/springframework/data/redis/cache/RedisCacheElement;)V
@2.4.0
+#getStatistics()Lorg/springframework/data/redis/cache/CacheStatistics;
+#clearStatistics()V
@3.0.0
+#clear(Ljava/lang/String;)V

+###org/springframework/data/redis/connection/RedisCommands
@1.0.0.RELEASE
@1.0.1.RELEASE
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;

+###org/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary
@1.6.0.RELEASE
+#getValue()Ljava/lang/Object;
+#isIncluding()Z

+###org/springframework/data/redis/connection/DecoratedRedisConnection
@1.7.0.RELEASE
+#getDelegate()Lorg/springframework/data/redis/connection/RedisConnection;

+###org/springframework/data/redis/connection/RedisConfiguration$WithDomainSocket
@2.1.0.RELEASE
+#setSocket(Ljava/lang/String;)V
+#getSocket()Ljava/lang/String;

+###org/springframework/data/redis/connection/util/DecodeUtils
@1.0.0.RELEASE
+#<init>()V
+#decode([B)Ljava/lang/String;
+#decodeMultiple([[B)[Ljava/lang/String;
+#encode(Ljava/lang/String;)[B
+#encodeMap(Ljava/util/Map;)Ljava/util/Map;
+#decodeMap(Ljava/util/Map;)Ljava/util/Map;
+#convertToSet(Ljava/util/Collection;)Ljava/util/Set;
+#convertToList(Ljava/util/Collection;)Ljava/util/List;

+###org/springframework/data/redis/connection/ClusterCommandExecutionFailureException
@1.7.0.RELEASE
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/util/List;)V
+#getCauses()Ljava/util/Collection;
@3.0.0
-#getCauses()Ljava/util/Collection;

+###org/springframework/data/redis/connection/RedisClusterNode$Flag
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisClusterNode$Flag;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode$Flag;
+#getRaw()Ljava/lang/String;

+###org/springframework/data/redis/connection/DataType
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/DataType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/DataType;
+#code()Ljava/lang/String;
+#fromCode(Ljava/lang/String;)Lorg/springframework/data/redis/connection/DataType;

+###org/springframework/data/redis/connection/NamedNode
@1.4.0.RELEASE
+#getName()Ljava/lang/String;

+###org/springframework/data/redis/connection/ReactiveHyperLogLogCommands
@2.0.0.RELEASE
+#pfAdd(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#pfAdd(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#pfAdd(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#pfCount(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#pfCount(Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#pfCount(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#pfMerge(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#pfMerge(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ClusterNodeResourceProvider
@1.7.0.RELEASE
+#getResourceForSpecificNode(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Object;
+#returnResourceForSpecificNode(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/Object;)V

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoAddCommand
@2.0.0.RELEASE
+#location(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoAddCommand;
+#locations(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoAddCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoAddCommand;
+#getGeoLocations()Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveListCommands$PushCommand
@2.0.0.RELEASE
+#right()Lorg/springframework/data/redis/connection/ReactiveListCommands$PushCommand;
+#left()Lorg/springframework/data/redis/connection/ReactiveListCommands$PushCommand;
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$PushCommand;
+#values(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveListCommands$PushCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$PushCommand;
+#ifExists()Lorg/springframework/data/redis/connection/ReactiveListCommands$PushCommand;
+#getValues()Ljava/util/List;
+#getUpsert()Z
+#getDirection()Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;

+###org/springframework/data/redis/connection/ReactiveListCommands$BRPopLPushCommand
@2.0.0.RELEASE
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$BRPopLPushCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$BRPopLPushCommand;
+#blockingFor(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/ReactiveListCommands$BRPopLPushCommand;
+#getDestination()Ljava/nio/ByteBuffer;
+#getTimeout()Ljava/time/Duration;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$ReadCommand
@2.2.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;Lorg/springframework/data/redis/connection/stream/Consumer;)V
+#from(Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$ReadCommand;
+#from([Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$ReadCommand;
+#as(Lorg/springframework/data/redis/connection/stream/Consumer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$ReadCommand;
+#withOptions(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$ReadCommand;
+#getStreamOffsets()Ljava/util/List;
+#getReadOptions()Lorg/springframework/data/redis/connection/stream/StreamReadOptions;
+#getConsumer()Lorg/springframework/data/redis/connection/stream/Consumer;

+###org/springframework/data/redis/connection/RedisGeoCommands
@1.8.0.RELEASE
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([B[[B)Ljava/util/List;
+#geoPos([B[[B)Ljava/util/List;
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([B[[B)Ljava/lang/Long;
@2.6.0
+#geoSearch([BLorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoSearchStore([B[BLorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;

+###org/springframework/data/redis/connection/ReactiveStringCommands$BitFieldCommand
@2.1.0.RELEASE
+#bitField(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitFieldCommand;
+#commands(Lorg/springframework/data/redis/connection/BitFieldSubCommands;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitFieldCommand;
+#getSubCommands()Lorg/springframework/data/redis/connection/BitFieldSubCommands;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand
@2.0.0.RELEASE
+#sets(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
+#applyWeights(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
+#storeAs(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
+#getSourceKeys()Ljava/util/List;
+#getWeights()Ljava/util/List;
+#getAggregateFunction()Ljava/util/Optional;
@2.1.0.RELEASE
+#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
@2.6.0
+#storeAs(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#getSourceKeys()Ljava/util/List;
-#getWeights()Ljava/util/List;
-#getAggregateFunction()Ljava/util/Optional;
@3.0.0
+#applyWeights(Lorg/springframework/data/redis/connection/zset/Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/zset/Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/zset/Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Lorg/springframework/data/redis/connection/zset/Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
-#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZUnionStoreCommand;
-#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;

+###org/springframework/data/redis/connection/ReactiveRedisConnection$CommandResponse
@2.0.0.RELEASE
+#isPresent()Z
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getInput()Ljava/lang/Object;
+#getOutput()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/ReactiveStringCommands$SetCommand
@2.0.0.RELEASE
+#set(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetCommand;
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetCommand;
+#expiring(Lorg/springframework/data/redis/core/types/Expiration;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetCommand;
+#withSetOption(Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetCommand;
+#getValue()Ljava/nio/ByteBuffer;
+#getExpiration()Ljava/util/Optional;
+#getOption()Ljava/util/Optional;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand
@2.0.0.RELEASE
+#tuple(Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#tuples(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#xx()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#nx()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#ch()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#incr()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#getTuples()Ljava/util/List;
+#isUpsert()Z
+#isIncr()Z
+#isReturnTotalChanged()Z
@2.5.0
+#gt()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#lt()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
+#isGt()Z
+#isLt()Z
@3.0.0
+#tuple(Lorg/springframework/data/redis/connection/zset/Tuple;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;
-#tuple(Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAddCommand;

+###org/springframework/data/redis/connection/RedisHashCommands
@1.0.0.RELEASE
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hExists([B[B)Ljava/lang/Boolean;
+#hDel([B[B)Ljava/lang/Boolean;
+#hLen([B)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hVals([B)Ljava/util/List;
+#hGetAll([B)Ljava/util/Map;
@1.1.0.M1
+#hIncrBy([B[BD)Ljava/lang/Double;
@1.1.0.M2
+#hDel([B[[B)Ljava/lang/Long;
-#hDel([B[B)Ljava/lang/Boolean;
@1.4.0.RELEASE
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@2.1.0.RELEASE
+#hStrLen([B[B)Ljava/lang/Long;
@2.6.0
+#hRandField([B)[B
+#hRandFieldWithValues([B)Ljava/util/Map$Entry;
+#hRandField([BJ)Ljava/util/List;
+#hRandFieldWithValues([BJ)Ljava/util/List;

+###org/springframework/data/redis/connection/ClusterTopology
@1.7.0.RELEASE
+#<init>(Ljava/util/Set;)V
+#getNodes()Ljava/util/Set;
+#getActiveNodes()Ljava/util/Set;
+#getActiveMasterNodes()Ljava/util/Set;
+#getMasterNodes()Ljava/util/Set;
+#getSlotServingNodes(I)Ljava/util/Set;
+#getKeyServingMasterNode([B)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#lookup(Ljava/lang/String;I)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#lookup(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#lookup(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lorg/springframework/data/redis/connection/RedisClusterNode;
+#getKeyServingNodes([B)Ljava/util/Set;

+###org/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder
@2.0.0.RELEASE
+#sslSocketFactory(Ljavax/net/ssl/SSLSocketFactory;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#sslParameters(Ljavax/net/ssl/SSLParameters;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#hostnameVerifier(Ljavax/net/ssl/HostnameVerifier;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisSslClientConfigurationBuilder;
+#and()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;

+###org/springframework/data/redis/connection/RedisServer$INFO
@1.4.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisServer$INFO;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisServer$INFO;

+###org/springframework/data/redis/connection/ClusterCommandExecutor$ClusterCommandCallback
@1.7.0.RELEASE
+#doInCluster(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/convert/LongToBooleanConverter
@1.1.0.M2
+#<init>()V
+#convert(Ljava/lang/Long;)Ljava/lang/Boolean;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/hash/ObjectHashMapper
@1.8.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/redis/core/convert/CustomConversions;)V
+#toHash(Ljava/lang/Object;)Ljava/util/Map;
+#fromHash(Ljava/util/Map;)Ljava/lang/Object;
+#fromHash(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
@2.0.0.RELEASE
*#<init>(Lorg/springframework/data/redis/core/convert/CustomConversions;)V[deprecated]
+#<init>(Lorg/springframework/data/convert/CustomConversions;)V
@2.3.2.RELEASE
+#<init>(Lorg/springframework/data/redis/core/convert/RedisConverter;)V
@2.4.0
+#getSharedInstance()Lorg/springframework/data/redis/hash/ObjectHashMapper;
@2.7.0
+#fromHash(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
@3.0.0
-#<init>(Lorg/springframework/data/redis/core/convert/CustomConversions;)V[deprecated]
-#fromHash(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/data/redis/support/collections/DefaultRedisSet
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Lorg/springframework/data/redis/core/BoundSetOperations;)V
+#diff(Lorg/springframework/data/redis/support/collections/RedisSet;)Ljava/util/Set;
+#diff(Ljava/util/Collection;)Ljava/util/Set;
+#diffAndStore(Lorg/springframework/data/redis/support/collections/RedisSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#diffAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#intersect(Lorg/springframework/data/redis/support/collections/RedisSet;)Ljava/util/Set;
+#intersect(Ljava/util/Collection;)Ljava/util/Set;
+#intersectAndStore(Lorg/springframework/data/redis/support/collections/RedisSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#union(Lorg/springframework/data/redis/support/collections/RedisSet;)Ljava/util/Set;
+#union(Ljava/util/Collection;)Ljava/util/Set;
+#unionAndStore(Lorg/springframework/data/redis/support/collections/RedisSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#add(Ljava/lang/Object;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#remove(Ljava/lang/Object;)Z
+#size()I
+#getType()Lorg/springframework/data/redis/connection/DataType;
@1.4.0.RELEASE
+#scan()Lorg/springframework/data/redis/core/Cursor;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#scan()Ljava/util/Iterator;
@2.6.0
+#randomValue()Ljava/lang/Object;
+#containsAll(Ljava/util/Collection;)Z

+###org/springframework/data/redis/ClusterStateFailureException
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/redis/PassThroughExceptionTranslationStrategy
@1.3.2.RELEASE
+#<init>(Lorg/springframework/core/convert/converter/Converter;)V
+#translate(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;

+###org/springframework/data/redis/listener/KeyExpirationEventMessageListener
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;)V
+#setApplicationEventPublisher(Lorg/springframework/context/ApplicationEventPublisher;)V

+###org/springframework/data/redis/core/HyperLogLogOperations
@1.5.0.RELEASE
+#add(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
+#size([Ljava/lang/Object;)Ljava/lang/Long;
+#union(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
+#delete(Ljava/lang/Object;)V

+###org/springframework/data/redis/core/ReactiveSetOperations
@2.0.0.RELEASE
+#add(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#remove(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#pop(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#pop(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#move(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#size(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#isMember(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#intersect(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#intersect(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#union(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#union(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#difference(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#difference(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#differenceAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#differenceAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#members(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#randomMember(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#distinctRandomMembers(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#randomMembers(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.1.0.RELEASE
+#scan(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#scan(Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
@2.2.0.RELEASE
+#intersect(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#union(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#difference(Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#differenceAndStore(Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.6.0
+#isMember(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/core/script/DefaultScriptExecutor
@1.1.0.M2
+#<init>(Lorg/springframework/data/redis/core/RedisTemplate;)V
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/core/ClusterOperations
@1.7.0.RELEASE
+#keys(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/Object;)Ljava/util/Set;
+#ping(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/String;
+#randomKey(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Object;
+#addSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#addSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#meet(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#forget(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#getSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#reshard(Lorg/springframework/data/redis/connection/RedisClusterNode;ILorg/springframework/data/redis/connection/RedisClusterNode;)V
@2.7.0
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V
@3.0.0
+#getReplicas(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
-#getSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;

+###org/springframework/data/redis/core/index/RedisIndexDefinition$PathCondition
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#matches(Ljava/lang/Object;Lorg/springframework/data/redis/core/index/IndexDefinition$IndexingContext;)Z

+###org/springframework/data/redis/core/index/RedisIndexDefinition
@1.7.0.RELEASE
+#getKeyspace()Ljava/lang/String;
+#getConditions()Ljava/util/Collection;
+#valueTransformer()Lorg/springframework/data/redis/core/index/IndexValueTransformer;
+#getIndexName()Ljava/lang/String;
+#getPath()Ljava/lang/String;
+#setValueTransformer(Lorg/springframework/data/redis/core/index/IndexValueTransformer;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z

+###org/springframework/data/redis/core/BulkMapper
@1.0.0.RELEASE
+#mapBulk(Ljava/util/List;)Ljava/lang/Object;

+###org/springframework/data/redis/core/convert/SimpleIndexedPropertyValue
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
+#getValue()Ljava/lang/Object;
+#getIndexName()Ljava/lang/String;
+#getKeyspace()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/core/convert/CustomConversions
@1.7.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/List;)V
+#getSimpleTypeHolder()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
+#isSimpleType(Ljava/lang/Class;)Z
+#registerConvertersIn(Lorg/springframework/core/convert/support/GenericConversionService;)V
+#getCustomWriteTarget(Ljava/lang/Class;)Ljava/lang/Class;
+#getCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#hasCustomWriteTarget(Ljava/lang/Class;)Z
+#hasCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
+#hasCustomReadTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
@2.0.0.RELEASE
-#getSimpleTypeHolder()Lorg/springframework/data/mapping/model/SimpleTypeHolder;
-#isSimpleType(Ljava/lang/Class;)Z
-#registerConvertersIn(Lorg/springframework/core/convert/support/GenericConversionService;)V
-#getCustomWriteTarget(Ljava/lang/Class;)Ljava/lang/Class;
-#getCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
-#hasCustomWriteTarget(Ljava/lang/Class;)Z
-#hasCustomWriteTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
-#hasCustomReadTarget(Ljava/lang/Class;Ljava/lang/Class;)Z
@3.0.0
-###org/springframework/data/redis/core/convert/CustomConversions

+###org/springframework/data/redis/connection/RedisGeoCommands$GeoLocation
@1.8.0.RELEASE
+#getName()Ljava/lang/Object;
+#getPoint()Lorg/springframework/data/geo/Point;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#<init>(Ljava/lang/Object;Lorg/springframework/data/geo/Point;)V
@2.6.0
-#getName()Ljava/lang/Object;
-#getPoint()Lorg/springframework/data/geo/Point;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I

+###org/springframework/data/redis/connection/ReactiveSetCommands$SUnionStoreCommand
@2.0.0.RELEASE
+#keys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SUnionStoreCommand;
+#storeAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SUnionStoreCommand;
+#getKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration
@2.0.0.RELEASE
+#getPoolConfig()Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;
+#builder()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#defaultConfiguration()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration;

+###org/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder
@2.0.0.RELEASE
+#useSsl()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceSslClientConfigurationBuilder;
+#clientResources(Lio/lettuce/core/resource/ClientResources;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#clientOptions(Lio/lettuce/core/ClientOptions;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#commandTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#shutdownTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;
@2.1.0.RELEASE
+#readFrom(Lio/lettuce/core/ReadFrom;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#clientName(Ljava/lang/String;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
@2.2.0.RELEASE
+#shutdownQuietPeriod(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
@2.5.3
+#apply(Lio/lettuce/core/RedisURI;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
@3.0.0
+#redisCredentialsProviderFactory(Lorg/springframework/data/redis/connection/lettuce/RedisCredentialsProviderFactory;)Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;

+###org/springframework/data/redis/connection/ReactiveListCommands$PopResponse
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/ReactiveListCommands$BPopCommand;Lorg/springframework/data/redis/connection/ReactiveListCommands$PopResult;)V

+###org/springframework/data/redis/connection/ReactiveSetCommands$SMoveCommand
@2.0.0.RELEASE
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SMoveCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SMoveCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SMoveCommand;
+#getDestination()Ljava/nio/ByteBuffer;
+#getValue()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy$Overflow
@2.1.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy$Overflow;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy$Overflow;

+###org/springframework/data/redis/connection/ReactiveGeoCommands
@2.0.0.RELEASE
+#geoAdd(Ljava/nio/ByteBuffer;Lorg/springframework/data/geo/Point;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#geoAdd(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Lreactor/core/publisher/Mono;
+#geoAdd(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#geoAdd(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#geoDist(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#geoDist(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/geo/Metric;)Lreactor/core/publisher/Mono;
+#geoDist(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#geoHash(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#geoHash(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#geoHash(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#geoPos(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#geoPos(Ljava/nio/ByteBuffer;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#geoPos(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#geoRadius(Ljava/nio/ByteBuffer;Lorg/springframework/data/geo/Circle;)Lreactor/core/publisher/Flux;
+#geoRadius(Ljava/nio/ByteBuffer;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lreactor/core/publisher/Flux;
+#geoRadius(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#geoRadiusByMember(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/geo/Distance;)Lreactor/core/publisher/Flux;
+#geoRadiusByMember(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lreactor/core/publisher/Flux;
+#geoRadiusByMember(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.6.0
+#geoSearch(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lreactor/core/publisher/Flux;
+#geoSearch(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#geoSearchStore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Lreactor/core/publisher/Mono;
+#geoSearchStore(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ReactiveRedisConnectionFactory
@2.0.0.RELEASE
+#getReactiveConnection()Lorg/springframework/data/redis/connection/ReactiveRedisConnection;
+#getReactiveClusterConnection()Lorg/springframework/data/redis/connection/ReactiveRedisClusterConnection;

+###org/springframework/data/redis/connection/Subscription
@1.0.0.RELEASE
+#subscribe([[B)V
+#pSubscribe([[B)V
+#unsubscribe()V
+#unsubscribe([[B)V
+#pUnsubscribe()V
+#pUnsubscribe([[B)V
+#getChannels()Ljava/util/Collection;
+#getPatterns()Ljava/util/Collection;
+#getListener()Lorg/springframework/data/redis/connection/MessageListener;
+#isAlive()Z
@1.8.13.RELEASE
+#close()V
@2.0.0.RELEASE
-#close()V
@2.0.8.RELEASE
+#close()V

+###org/springframework/data/redis/connection/ReactiveSetCommands$SRemCommand
@2.0.0.RELEASE
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SRemCommand;
+#values(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SRemCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SRemCommand;
+#getValues()Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveSetCommands$SRandMembersCommand
@2.0.0.RELEASE
+#valueCount(J)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SRandMembersCommand;
+#singleValue()Lorg/springframework/data/redis/connection/ReactiveSetCommands$SRandMembersCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SRandMembersCommand;
+#getCount()Ljava/util/Optional;

+###org/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs
@1.8.0.RELEASE
+#newGeoRadiusArgs()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;
+#includeCoordinates()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;
+#includeDistance()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;
+#sortAscending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;
+#sortDescending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;
+#limit(J)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;
+#getFlags()Ljava/util/Set;
+#getLimit()Ljava/lang/Long;
+#getSortDirection()Lorg/springframework/data/domain/Sort$Direction;
+#hasFlags()Z
+#hasSortDirection()Z
+#hasLimit()Z
@2.6.0
+#sort(Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;
+#limit(J)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#sortDescending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#sortAscending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#sort(Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#includeDistance()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#includeCoordinates()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
-#getLimit()Ljava/lang/Long;
-#getSortDirection()Lorg/springframework/data/domain/Sort$Direction;
-#hasFlags()Z
-#hasSortDirection()Z
-#hasLimit()Z

+###org/springframework/data/redis/connection/ReactiveStreamCommands$DeleteCommand
@2.2.0.RELEASE
+#stream(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$DeleteCommand;
+#records([Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$DeleteCommand;
+#records([Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$DeleteCommand;
+#getRecordIds()Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveKeyCommands$MoveCommand
@2.0.0.RELEASE
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$MoveCommand;
+#timeout(I)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$MoveCommand;
+#getDatabase()Ljava/lang/Integer;

+###org/springframework/data/redis/connection/convert/TransactionResultConverter
@1.1.0.M2
+#<init>(Ljava/util/Queue;Lorg/springframework/core/convert/converter/Converter;)V
+#convert(Ljava/util/List;)Ljava/util/List;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/RedisZSetCommands
@1.0.0.RELEASE
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zRem([B[B)Ljava/lang/Boolean;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zRank([B[B)Ljava/lang/Long;
+#zRevRank([B[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zCount([BDD)Ljava/lang/Long;
+#zCard([B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
@1.1.0.M2
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;
+#zRem([B[[B)Ljava/lang/Long;
-#zRem([B[B)Ljava/lang/Boolean;
@1.4.0.RELEASE
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.5.0.RELEASE
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
@1.6.0.RELEASE
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByLex([B)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.1.0.RELEASE
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
@2.4.0
+#zLexCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRevRangeByLex([B)Ljava/util/Set;
+#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.5.0
+#zAdd([BD[BLorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Boolean;
+#zAdd([BLjava/util/Set;Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Long;
+#zRemRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
@2.6.0
+#zRandMember([B)[B
+#zRandMember([BJ)Ljava/util/List;
+#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zRandMemberWithScore([BJ)Ljava/util/List;
+#zPopMin([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zPopMin([BJ)Ljava/util/Set;
+#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zPopMax([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zPopMax([BJ)Ljava/util/Set;
+#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zMScore([B[[B)Ljava/util/List;
+#zDiff([[B)Ljava/util/Set;
+#zDiffWithScores([[B)Ljava/util/Set;
+#zDiffStore([B[[B)Ljava/lang/Long;
+#zInter([[B)Ljava/util/Set;
+#zInterWithScores([[B)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
+#zUnion([[B)Ljava/util/Set;
+#zUnionWithScores([[B)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
@3.0.0
+#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/zset/Tuple;
+#zRangeByScoreWithScores([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zCount([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zLexCount([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zPopMin([B)Lorg/springframework/data/redis/connection/zset/Tuple;
+#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/zset/Tuple;
+#zPopMax([B)Lorg/springframework/data/redis/connection/zset/Tuple;
+#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/zset/Tuple;
+#zRemRangeByLex([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRemRangeByScore([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/util/Set;
+#zInterStore([BLorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([BLorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/lang/Long;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/util/Set;
+#zUnionStore([BLorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/lang/Long;
+#zUnionStore([BLorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/lang/Long;
*#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;[deprecated]
+#zRangeByScore([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByLex([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRevRangeByLex([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRangeStoreByLex([B[BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreByLex([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByLex([B[BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreRevByLex([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreByScore([B[BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreByScore([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByScore([B[BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRangeStoreRevByScore([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
-#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zLexCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zPopMin([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#zPopMax([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#zRemRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/util/Set;
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;

+###org/springframework/data/redis/stream/StreamReceiver
@2.2.0.RELEASE
+#create(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;)Lorg/springframework/data/redis/stream/StreamReceiver;
+#create(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptions;)Lorg/springframework/data/redis/stream/StreamReceiver;
+#receive(Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#receiveAutoAck(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#receive(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequest
@2.2.0.RELEASE
+#builder(Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lorg/springframework/data/redis/stream/StreamMessageListenerContainer$StreamReadRequestBuilder;
+#getStreamOffset()Lorg/springframework/data/redis/connection/stream/StreamOffset;
+#getErrorHandler()Lorg/springframework/util/ErrorHandler;
+#getCancelSubscriptionOnError()Ljava/util/function/Predicate;

+###org/springframework/data/redis/support/collections/RedisZSet
@1.0.0.RELEASE
+#intersectAndStore(Lorg/springframework/data/redis/support/collections/RedisZSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#unionAndStore(Lorg/springframework/data/redis/support/collections/RedisZSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#range(JJ)Ljava/util/Set;
+#reverseRange(JJ)Ljava/util/Set;
+#rangeByScore(DD)Ljava/util/Set;
+#reverseRangeByScore(DD)Ljava/util/Set;
+#rangeWithScores(JJ)Ljava/util/Set;
+#reverseRangeWithScores(JJ)Ljava/util/Set;
+#rangeByScoreWithScores(DD)Ljava/util/Set;
+#reverseRangeByScoreWithScores(DD)Ljava/util/Set;
+#remove(JJ)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#removeByScore(DD)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#add(Ljava/lang/Object;D)Z
+#add(Ljava/lang/Object;)Z
+#score(Ljava/lang/Object;)Ljava/lang/Double;
+#rank(Ljava/lang/Object;)Ljava/lang/Long;
+#reverseRank(Ljava/lang/Object;)Ljava/lang/Long;
+#getDefaultScore()Ljava/lang/Double;
+#first()Ljava/lang/Object;
+#last()Ljava/lang/Object;
@1.4.0.RELEASE
+#scan()Ljava/util/Iterator;
@1.7.0.RELEASE
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.4.0
+#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#lexCount(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
@2.5.0
+#removeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#addIfAbsent(Ljava/lang/Object;)Z
+#addIfAbsent(Ljava/lang/Object;D)Z
@2.6.0
+#create(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#create(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;D)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#diff(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#diff(Ljava/util/Collection;)Ljava/util/Set;
+#diffWithScores(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#diffWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#diffAndStore(Lorg/springframework/data/redis/support/collections/RedisZSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#diffAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#intersect(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#intersect(Ljava/util/Collection;)Ljava/util/Set;
+#intersectWithScores(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#intersectWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#union(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#union(Ljava/util/Collection;)Ljava/util/Set;
+#unionWithScores(Lorg/springframework/data/redis/support/collections/RedisZSet;)Ljava/util/Set;
+#unionWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#randomValue()Ljava/lang/Object;
+#popFirst()Ljava/lang/Object;
+#popFirst(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#popLast()Ljava/lang/Object;
+#popLast(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@3.0.0
*#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;[deprecated]
+#rangeByLex(Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#rangeByLex(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
*#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;[deprecated]
+#reverseRangeByLex(Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#reverseRangeByLex(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#rangeAndStoreByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#rangeAndStoreByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#reverseRangeAndStoreByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#reverseRangeAndStoreByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#rangeAndStoreByScore(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#rangeAndStoreByScore(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#reverseRangeAndStoreByScore(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#reverseRangeAndStoreByScore(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#removeByLex(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/support/collections/RedisZSet;
+#lexCount(Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
-#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#removeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#lexCount(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;

+###org/springframework/data/redis/support/collections/RedisCollectionFactoryBean$CollectionType
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/redis/support/collections/RedisCollectionFactoryBean$CollectionType;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisCollectionFactoryBean$CollectionType;

+###org/springframework/data/redis/repository/cdi/RedisKeyValueTemplateBean
@1.7.0.RELEASE
+#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljavax/enterprise/inject/spi/BeanManager;)V
+#create(Ljavax/enterprise/context/spi/CreationalContext;)Lorg/springframework/data/keyvalue/core/KeyValueOperations;
+#destroy(Lorg/springframework/data/keyvalue/core/KeyValueOperations;Ljavax/enterprise/context/spi/CreationalContext;)V
+#destroy(Ljava/lang/Object;Ljavax/enterprise/context/spi/CreationalContext;)V
+#create(Ljavax/enterprise/context/spi/CreationalContext;)Ljava/lang/Object;
@3.0.0
+#<init>(Ljakarta/enterprise/inject/spi/Bean;Ljava/util/Set;Ljakarta/enterprise/inject/spi/BeanManager;)V
+#create(Ljakarta/enterprise/context/spi/CreationalContext;)Lorg/springframework/data/keyvalue/core/KeyValueOperations;
+#destroy(Lorg/springframework/data/keyvalue/core/KeyValueOperations;Ljakarta/enterprise/context/spi/CreationalContext;)V
+#destroy(Ljava/lang/Object;Ljakarta/enterprise/context/spi/CreationalContext;)V
+#create(Ljakarta/enterprise/context/spi/CreationalContext;)Ljava/lang/Object;
-#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljavax/enterprise/inject/spi/BeanManager;)V
-#create(Ljavax/enterprise/context/spi/CreationalContext;)Lorg/springframework/data/keyvalue/core/KeyValueOperations;
-#destroy(Lorg/springframework/data/keyvalue/core/KeyValueOperations;Ljavax/enterprise/context/spi/CreationalContext;)V
-#destroy(Ljava/lang/Object;Ljavax/enterprise/context/spi/CreationalContext;)V
-#create(Ljavax/enterprise/context/spi/CreationalContext;)Ljava/lang/Object;

+###org/springframework/data/redis/serializer/OxmSerializer
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/oxm/Marshaller;Lorg/springframework/oxm/Unmarshaller;)V
+#afterPropertiesSet()V
+#setMarshaller(Lorg/springframework/oxm/Marshaller;)V
+#setUnmarshaller(Lorg/springframework/oxm/Unmarshaller;)V
+#deserialize([B)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)[B

+###org/springframework/data/redis/listener/ReactiveRedisMessageListenerContainer
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;)V
+#destroy()V
+#destroyLater()Lreactor/core/publisher/Mono;
+#getActiveSubscriptions()Ljava/util/Collection;
+#receive([Lorg/springframework/data/redis/listener/ChannelTopic;)Lreactor/core/publisher/Flux;
+#receive([Lorg/springframework/data/redis/listener/PatternTopic;)Lreactor/core/publisher/Flux;
+#receive(Ljava/lang/Iterable;Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lreactor/core/publisher/Flux;
@2.6.0
+#receiveLater([Lorg/springframework/data/redis/listener/ChannelTopic;)Lreactor/core/publisher/Mono;
+#receiveLater([Lorg/springframework/data/redis/listener/PatternTopic;)Lreactor/core/publisher/Mono;
+#receive(Ljava/lang/Iterable;Lorg/springframework/data/redis/connection/SubscriptionListener;)Lreactor/core/publisher/Flux;
+#receive(Ljava/lang/Iterable;Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;Lorg/springframework/data/redis/connection/SubscriptionListener;)Lreactor/core/publisher/Flux;
+#receiveLater(Ljava/lang/Iterable;Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/core/RedisKeyValueAdapter
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;Lorg/springframework/data/redis/core/mapping/RedisMappingContext;)V
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;Lorg/springframework/data/redis/core/mapping/RedisMappingContext;Lorg/springframework/data/redis/core/convert/CustomConversions;)V
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;Lorg/springframework/data/redis/core/convert/RedisConverter;)V
+#put(Ljava/io/Serializable;Ljava/lang/Object;Ljava/io/Serializable;)Ljava/lang/Object;
+#contains(Ljava/io/Serializable;Ljava/io/Serializable;)Z
+#get(Ljava/io/Serializable;Ljava/io/Serializable;)Ljava/lang/Object;
+#get(Ljava/io/Serializable;Ljava/io/Serializable;Ljava/lang/Class;)Ljava/lang/Object;
+#delete(Ljava/io/Serializable;Ljava/io/Serializable;)Ljava/lang/Object;
+#delete(Ljava/io/Serializable;Ljava/io/Serializable;Ljava/lang/Class;)Ljava/lang/Object;
+#getAllOf(Ljava/io/Serializable;)Ljava/util/List;
+#deleteAllOf(Ljava/io/Serializable;)V
+#entries(Ljava/io/Serializable;)Lorg/springframework/data/util/CloseableIterator;
+#count(Ljava/io/Serializable;)J
+#execute(Lorg/springframework/data/redis/core/RedisCallback;)Ljava/lang/Object;
+#getConverter()Lorg/springframework/data/redis/core/convert/RedisConverter;
+#clear()V
+#createKey(Ljava/lang/String;Ljava/lang/String;)[B
+#toBytes(Ljava/lang/Object;)[B
+#destroy()V
+#onApplicationEvent(Lorg/springframework/data/redis/core/RedisKeyspaceEvent;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getAllOf(Ljava/io/Serializable;)Ljava/lang/Iterable;
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@1.7.2.RELEASE
+#setEnableKeyspaceEvents(Lorg/springframework/data/redis/core/RedisKeyValueAdapter$EnableKeyspaceEvents;)V
+#afterPropertiesSet()V
@1.7.3.RELEASE
+#getAllOf(Ljava/io/Serializable;II)Ljava/util/List;
+#setKeyspaceNotificationsConfigParameter(Ljava/lang/String;)V
@1.8.0.RELEASE
+#update(Lorg/springframework/data/redis/core/PartialUpdate;)V
@2.0.0.RELEASE
*#<init>(Lorg/springframework/data/redis/core/RedisOperations;Lorg/springframework/data/redis/core/mapping/RedisMappingContext;Lorg/springframework/data/redis/core/convert/CustomConversions;)V[deprecated]
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;Lorg/springframework/data/redis/core/mapping/RedisMappingContext;Lorg/springframework/data/convert/CustomConversions;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#contains(Ljava/lang/Object;Ljava/lang/String;)Z
+#get(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#get(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
+#delete(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
+#getAllOf(Ljava/lang/String;)Ljava/util/List;
+#getAllOf(Ljava/lang/String;JI)Ljava/util/List;
+#deleteAllOf(Ljava/lang/String;)V
+#entries(Ljava/lang/String;)Lorg/springframework/data/util/CloseableIterator;
+#count(Ljava/lang/String;)J
+#getAllOf(Ljava/lang/String;)Ljava/lang/Iterable;
-#put(Ljava/io/Serializable;Ljava/lang/Object;Ljava/io/Serializable;)Ljava/lang/Object;
-#contains(Ljava/io/Serializable;Ljava/io/Serializable;)Z
-#get(Ljava/io/Serializable;Ljava/io/Serializable;)Ljava/lang/Object;
-#get(Ljava/io/Serializable;Ljava/io/Serializable;Ljava/lang/Class;)Ljava/lang/Object;
-#delete(Ljava/io/Serializable;Ljava/io/Serializable;)Ljava/lang/Object;
-#delete(Ljava/io/Serializable;Ljava/io/Serializable;Ljava/lang/Class;)Ljava/lang/Object;
-#getAllOf(Ljava/io/Serializable;)Ljava/util/List;
-#getAllOf(Ljava/io/Serializable;II)Ljava/util/List;
-#deleteAllOf(Ljava/io/Serializable;)V
-#entries(Ljava/io/Serializable;)Lorg/springframework/data/util/CloseableIterator;
-#count(Ljava/io/Serializable;)J
-#getAllOf(Ljava/io/Serializable;)Ljava/lang/Iterable;
@2.4.0
+#setShadowCopy(Lorg/springframework/data/redis/core/RedisKeyValueAdapter$ShadowCopy;)V
@2.5.0
+#getAllOf(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Iterable;
+#getAllOf(Ljava/lang/String;Ljava/lang/Class;JI)Ljava/util/List;
-#getAllOf(Ljava/lang/String;JI)Ljava/util/List;
@2.6.6
+#setMessageListenerContainer(Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;)V
@2.7.0
-#setMessageListenerContainer(Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;)V
@2.7.2
+#setMessageListenerContainer(Lorg/springframework/data/redis/listener/RedisMessageListenerContainer;)V
@3.0.0
-#<init>(Lorg/springframework/data/redis/core/RedisOperations;Lorg/springframework/data/redis/core/mapping/RedisMappingContext;Lorg/springframework/data/redis/core/convert/CustomConversions;)V[deprecated]

+###org/springframework/data/redis/core/ReactiveStreamOperations
@2.2.0.RELEASE
+#acknowledge(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#acknowledge(Ljava/lang/Object;Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Mono;
+#acknowledge(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/Record;)Lreactor/core/publisher/Mono;
+#add(Ljava/lang/Object;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#add(Ljava/lang/Object;Ljava/util/Map;)Lreactor/core/publisher/Mono;
+#add(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lreactor/core/publisher/Mono;
+#add(Lorg/springframework/data/redis/connection/stream/Record;)Lreactor/core/publisher/Mono;
+#delete(Ljava/lang/Object;[Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#delete(Lorg/springframework/data/redis/connection/stream/Record;)Lreactor/core/publisher/Mono;
+#delete(Ljava/lang/Object;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Mono;
+#createGroup(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#createGroup(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#deleteConsumer(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/Consumer;)Lreactor/core/publisher/Mono;
+#destroyGroup(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#size(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#read(Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read([Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Ljava/lang/Class;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Lreactor/core/publisher/Flux;
+#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#trim(Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
+#getHashMapper(Ljava/lang/Class;)Lorg/springframework/data/redis/hash/HashMapper;
@2.3.0.RELEASE
+#consumers(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Flux;
+#groups(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#info(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#pending(Ljava/lang/Object;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#pending(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/Consumer;)Lreactor/core/publisher/Mono;
+#pending(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/data/domain/Range;J)Lreactor/core/publisher/Mono;
+#pending(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/domain/Range;J)Lreactor/core/publisher/Mono;
@2.4.0
+#trim(Ljava/lang/Object;JZ)Lreactor/core/publisher/Mono;
@2.4.2
+#map(Lorg/springframework/data/redis/connection/stream/MapRecord;Ljava/lang/Class;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#deserializeRecord(Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;)Lorg/springframework/data/redis/connection/stream/MapRecord;
@2.7.9
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Flux;
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Lreactor/core/publisher/Flux;
@3.0.0
+#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
-#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Flux;
-#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Lreactor/core/publisher/Flux;
-#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
@3.0.3
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Lreactor/core/publisher/Flux;
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/core/script/DefaultReactiveScriptExecutor
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;Lorg/springframework/data/redis/serializer/RedisSerializationContext;)V
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/serializer/RedisElementWriter;Lorg/springframework/data/redis/serializer/RedisElementReader;)Lreactor/core/publisher/Flux;
+#getConnectionFactory()Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;

+###org/springframework/data/redis/core/index/ConfigurableIndexDefinitionProvider
@1.7.0.RELEASE

+###org/springframework/data/redis/core/BoundHashOperations
@1.0.0.RELEASE
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#hasKey(Ljava/lang/Object;)Z
+#increment(Ljava/lang/Object;J)Ljava/lang/Long;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#multiGet(Ljava/util/Collection;)Ljava/util/Collection;
+#putAll(Ljava/util/Map;)V
+#keys()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#size()Ljava/lang/Long;
+#delete(Ljava/lang/Object;)V
+#entries()Ljava/util/Map;
@1.0.1.RELEASE
+#multiGet(Ljava/util/Collection;)Ljava/util/List;
+#values()Ljava/util/List;
-#multiGet(Ljava/util/Collection;)Ljava/util/Collection;
-#values()Ljava/util/Collection;
@1.0.2.RELEASE
+#hasKey(Ljava/lang/Object;)Ljava/lang/Boolean;
-#hasKey(Ljava/lang/Object;)Z
@1.1.0.M1
+#increment(Ljava/lang/Object;D)Ljava/lang/Double;
@1.1.0.M2
+#delete([Ljava/lang/Object;)V
-#delete(Ljava/lang/Object;)V
@1.4.0.RELEASE
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.7.0.RELEASE
+#delete([Ljava/lang/Object;)Ljava/lang/Long;
-#delete([Ljava/lang/Object;)V
@2.1.0.RELEASE
+#lengthOfValue(Ljava/lang/Object;)Ljava/lang/Long;
@2.6.0
+#randomKey()Ljava/lang/Object;
+#randomEntry()Ljava/util/Map$Entry;
+#randomKeys(J)Ljava/util/List;
+#randomEntries(J)Ljava/util/Map;

+###org/springframework/data/redis/core/ReactiveZSetOperations
@2.0.0.RELEASE
+#add(Ljava/lang/Object;Ljava/lang/Object;D)Lreactor/core/publisher/Mono;
+#addAll(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#remove(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#incrementScore(Ljava/lang/Object;Ljava/lang/Object;D)Lreactor/core/publisher/Mono;
+#rank(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#reverseRank(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#rangeWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#rangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#rangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#rangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#rangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#reverseRangeWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#reverseRangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#reverseRangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#reverseRangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#reverseRangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#count(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#size(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#score(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#removeRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#removeRangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Flux;
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
+#delete(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@2.1.0.RELEASE
+#scan(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#scan(Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
@2.4.0
+#lexCount(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
@2.5.0
+#removeRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
@2.6.0
+#randomMember(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#distinctRandomMembers(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#randomMembers(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#randomMemberWithScore(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#distinctRandomMembersWithScore(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#randomMembersWithScore(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#popMin(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#popMin(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#popMin(Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#popMax(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#popMax(Ljava/lang/Object;J)Lreactor/core/publisher/Flux;
+#popMax(Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#score(Ljava/lang/Object;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#difference(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#difference(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#differenceWithScores(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#differenceWithScores(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#differenceAndStore(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#differenceAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#intersect(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#intersect(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#intersectWithScores(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
+#union(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#union(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#unionWithScores(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;)Lreactor/core/publisher/Flux;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
@3.0.0
+#rangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#rangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#reverseRangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#reverseRangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#rangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#rangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#reverseRangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#reverseRangeAndStoreByLex(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#rangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#rangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#reverseRangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Lreactor/core/publisher/Mono;
+#reverseRangeAndStoreByScore(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Mono;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Flux;
+#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Flux;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Mono;
+#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Mono;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Flux;
+#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Flux;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;)Lreactor/core/publisher/Mono;
+#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Lreactor/core/publisher/Mono;
+#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
+#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Lreactor/core/publisher/Flux;
-#rangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#rangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#reverseRangeByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#reverseRangeByScoreWithScores(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
-#intersectWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
-#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
-#intersectAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
-#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Flux;
-#unionWithScores(Ljava/lang/Object;Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Flux;
-#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lreactor/core/publisher/Mono;
-#unionAndStore(Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lreactor/core/publisher/Mono;
-#rangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;
-#reverseRangeByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/core/convert/MappingRedisConverter
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/mapping/RedisMappingContext;Lorg/springframework/data/redis/core/convert/IndexResolver;Lorg/springframework/data/redis/core/convert/ReferenceResolver;)V
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/core/convert/RedisData;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Lorg/springframework/data/redis/core/convert/RedisData;)V
+#toBytes(Ljava/lang/Object;)[B
+#fromBytes([BLjava/lang/Class;)Ljava/lang/Object;
+#setCustomConversions(Lorg/springframework/data/redis/core/convert/CustomConversions;)V
+#setReferenceResolver(Lorg/springframework/data/redis/core/convert/ReferenceResolver;)V
+#setIndexResolver(Lorg/springframework/data/redis/core/convert/IndexResolver;)V
+#getMappingContext()Lorg/springframework/data/redis/core/mapping/RedisMappingContext;
+#getConversionService()Lorg/springframework/core/convert/ConversionService;
+#afterPropertiesSet()V
+#getMappingContext()Lorg/springframework/data/mapping/context/MappingContext;
+#read(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
@2.0.0.RELEASE
+#setCustomConversions(Lorg/springframework/data/convert/CustomConversions;)V
-#setCustomConversions(Lorg/springframework/data/redis/core/convert/CustomConversions;)V
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/mapping/RedisMappingContext;Lorg/springframework/data/redis/core/convert/IndexResolver;Lorg/springframework/data/redis/core/convert/ReferenceResolver;Lorg/springframework/data/redis/core/convert/RedisTypeMapper;)V
+#getIndexResolver()Lorg/springframework/data/redis/core/convert/IndexResolver;
@2.3.2.RELEASE
+#<init>(Lorg/springframework/data/redis/core/mapping/RedisMappingContext;)V

+###org/springframework/data/redis/connection/lettuce/LettuceClusterConnection$LettuceClusterCommandCallback
@1.7.0.RELEASE

+###org/springframework/data/redis/connection/RedisSentinelConnection
@1.4.0.RELEASE
+#isOpen()Z

+###org/springframework/data/redis/connection/util/AbstractSubscription
@1.0.0.RELEASE
+#getListener()Lorg/springframework/data/redis/connection/MessageListener;
+#getChannels()Ljava/util/Collection;
+#getPatterns()Ljava/util/Collection;
+#pSubscribe([[B)V
+#pUnsubscribe()V
+#subscribe([[B)V
+#unsubscribe()V
+#pUnsubscribe([[B)V
+#unsubscribe([[B)V
+#isAlive()Z
@1.8.13.RELEASE
+#close()V
@2.0.0.RELEASE
-#close()V
@2.0.8.RELEASE
+#close()V

+###org/springframework/data/redis/connection/ReactiveStringCommands$SetRangeCommand
@2.0.0.RELEASE
+#overwrite(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetRangeCommand;
+#withValue(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetRangeCommand;
+#atPosition(J)Lorg/springframework/data/redis/connection/ReactiveStringCommands$SetRangeCommand;
+#getValue()Ljava/nio/ByteBuffer;
+#getOffset()Ljava/lang/Long;

+###org/springframework/data/redis/connection/ReactiveKeyCommands$RenameCommand
@2.0.0.RELEASE
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$RenameCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$RenameCommand;
+#getNewName()Ljava/nio/ByteBuffer;
@2.5.7
*#getNewName()Ljava/nio/ByteBuffer;[deprecated]
+#getNewKey()Ljava/nio/ByteBuffer;
@3.0.0
-#getNewName()Ljava/nio/ByteBuffer;[deprecated]

+###org/springframework/data/redis/connection/RedisScriptingCommands
@1.1.0.M1
+#scriptFlush()V
+#scriptKill()V
+#scriptLoad([B)Ljava/lang/String;
+#scriptExists([Ljava/lang/String;)Ljava/util/List;
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
@1.5.0.RELEASE
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;

+###org/springframework/data/redis/connection/DefaultedRedisClusterConnection
@2.0.0.RELEASE
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;[deprecated]
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;[deprecated]
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Properties;[deprecated]
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;[deprecated]
+#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Ljava/util/Properties;[deprecated]
+#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)V[deprecated]
+#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Long;[deprecated]
+#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/List;[deprecated]
@2.1.0.RELEASE
+#execute(Ljava/lang/String;[BLjava/util/Collection;)Ljava/lang/Object;
@2.5.0
+#rewriteConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;)V[deprecated]
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;[deprecated]
@2.7.0
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V[deprecated]
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V[deprecated]
@3.0.0
-#execute(Ljava/lang/String;[BLjava/util/Collection;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$AcknowledgeCommand
@2.2.0.RELEASE
+#stream(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AcknowledgeCommand;
+#forRecords([Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AcknowledgeCommand;
+#forRecords([Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AcknowledgeCommand;
+#inGroup(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AcknowledgeCommand;
+#getGroup()Ljava/lang/String;
+#getRecordIds()Ljava/util/List;

+###org/springframework/data/redis/connection/BitFieldSubCommands$AbstractBitFieldSubCommand
@2.1.0.RELEASE
+#<init>()V
+#getType()Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;
+#getOffset()Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;
@2.5.2
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/AbstractRedisConnection
@1.4.0.RELEASE
+#<init>()V
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
+#setSentinelConfiguration(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)V
+#hasRedisSentinelConfigured()Z
+#close()V

+###org/springframework/data/redis/connection/RedisStringCommands
@1.0.0.RELEASE
+#get([B)[B
+#getSet([B[B)[B
+#mGet([[B)Ljava/util/List;
+#set([B[B)V
+#setNX([B[B)Ljava/lang/Boolean;
+#setEx([BJ[B)V
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)V
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#append([B[B)Ljava/lang/Long;
+#getRange([BJJ)[B
+#setRange([B[BJ)V
+#getBit([BJ)Ljava/lang/Boolean;
+#setBit([BJZ)V
+#strLen([B)Ljava/lang/Long;
@1.1.0.M1
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#incrBy([BD)Ljava/lang/Double;
+#bitCount([B)Ljava/lang/Long;
+#bitCount([BJJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
-#mSetNX(Ljava/util/Map;)V
@1.3.0.RELEASE
+#pSetEx([BJ[B)V
+#setBit([BJZ)Ljava/lang/Boolean;
-#setBit([BJZ)V
@1.7.0.RELEASE
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
@2.0.0.RELEASE
+#set([B[B)Ljava/lang/Boolean;
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Ljava/lang/Boolean;
+#setEx([BJ[B)Ljava/lang/Boolean;
+#pSetEx([BJ[B)Ljava/lang/Boolean;
+#mSet(Ljava/util/Map;)Ljava/lang/Boolean;
-#set([B[B)V
-#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
-#setEx([BJ[B)V
-#pSetEx([BJ[B)V
-#mSet(Ljava/util/Map;)V
@2.1.0.RELEASE
+#bitField([BLorg/springframework/data/redis/connection/BitFieldSubCommands;)Ljava/util/List;
+#bitPos([BZ)Ljava/lang/Long;
+#bitPos([BZLorg/springframework/data/domain/Range;)Ljava/lang/Long;
@2.6.0
+#getDel([B)[B
+#getEx([BLorg/springframework/data/redis/core/types/Expiration;)[B

+###org/springframework/data/redis/connection/RedisHyperLogLogCommands
@2.0.0.RELEASE
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V

+###org/springframework/data/redis/connection/ReactiveSetCommands$SDiffStoreCommand
@2.0.0.RELEASE
+#keys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SDiffStoreCommand;
+#storeAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SDiffStoreCommand;
+#getKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/SortParameters$Order
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/SortParameters$Order;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/SortParameters$Order;

+###org/springframework/data/redis/connection/jedis/JedisClusterConnection$JedisMultiKeyClusterCommandCallback
@1.7.0.RELEASE

+###org/springframework/data/redis/connection/DefaultStringRedisConnection
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisConnection;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisConnection;Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#append([B[B)Ljava/lang/Long;
+#bgSave()V
+#bgWriteAof()V
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#bRPopLPush(I[B[B)[B
+#close()V
+#dbSize()Ljava/lang/Long;
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#del([[B)Ljava/lang/Long;
+#discard()V
+#echo([B)[B
+#exec()Ljava/util/List;
+#exists([B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#flushAll()V
+#flushDb()V
+#get([B)[B
+#getBit([BJ)Ljava/lang/Boolean;
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#getNativeConnection()Ljava/lang/Object;
+#getRange([BJJ)[B
+#getSet([B[B)[B
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#hDel([B[B)Ljava/lang/Boolean;
+#hExists([B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hGetAll([B)Ljava/util/Map;
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hLen([B)Ljava/lang/Long;
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hVals([B)Ljava/util/List;
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#info()Ljava/util/Properties;
+#isClosed()Z
+#isQueueing()Z
+#isSubscribed()Z
+#keys([B)Ljava/util/Set;
+#lastSave()Ljava/lang/Long;
+#lIndex([BJ)[B
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#lLen([B)Ljava/lang/Long;
+#lPop([B)[B
+#lPush([B[B)Ljava/lang/Long;
+#lPushX([B[B)Ljava/lang/Long;
+#lRange([BJJ)Ljava/util/List;
+#lRem([BJ[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lTrim([BJJ)V
+#mGet([[B)Ljava/util/List;
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)V
+#multi()V
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#ping()Ljava/lang/String;
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#publish([B[B)Ljava/lang/Long;
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#resetConfigStats()V
+#rPop([B)[B
+#rPopLPush([B[B)[B
+#rPush([B[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#sAdd([B[B)Ljava/lang/Boolean;
+#save()V
+#sCard([B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)V
+#select(I)V
+#set([B[B)V
+#setBit([BJZ)V
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#setEx([BJ[B)V
+#setNX([B[B)Ljava/lang/Boolean;
+#setRange([B[BJ)V
+#shutdown()V
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)V
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sMembers([B)Ljava/util/Set;
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sPop([B)[B
+#sRandMember([B)[B
+#sRem([B[B)Ljava/lang/Boolean;
+#strLen([B)Ljava/lang/Long;
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)V
+#ttl([B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#unwatch()V
+#watch([[B)V
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zCard([B)Ljava/lang/Long;
+#zCount([BDD)Ljava/lang/Long;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRank([B[B)Ljava/lang/Long;
+#zRem([B[B)Ljava/lang/Boolean;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRevRank([B[B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#append(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#bLPop(I[Ljava/lang/String;)Ljava/util/List;
+#bRPop(I[Ljava/lang/String;)Ljava/util/List;
+#bRPopLPush(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#decr(Ljava/lang/String;)Ljava/lang/Long;
+#decrBy(Ljava/lang/String;J)Ljava/lang/Long;
+#del([Ljava/lang/String;)Ljava/lang/Long;
+#echo(Ljava/lang/String;)Ljava/lang/String;
+#exists(Ljava/lang/String;)Ljava/lang/Boolean;
+#expire(Ljava/lang/String;J)Ljava/lang/Boolean;
+#expireAt(Ljava/lang/String;J)Ljava/lang/Boolean;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getBit(Ljava/lang/String;J)Ljava/lang/Boolean;
+#getRange(Ljava/lang/String;JJ)Ljava/lang/String;
+#getSet(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#hDel(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hExists(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hGet(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#hGetAll(Ljava/lang/String;)Ljava/util/Map;
+#hIncrBy(Ljava/lang/String;Ljava/lang/String;J)Ljava/lang/Long;
+#hKeys(Ljava/lang/String;)Ljava/util/Set;
+#hLen(Ljava/lang/String;)Ljava/lang/Long;
+#hMGet(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#hMSet(Ljava/lang/String;Ljava/util/Map;)V
+#hSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hSetNX(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#hVals(Ljava/lang/String;)Ljava/util/List;
+#incr(Ljava/lang/String;)Ljava/lang/Long;
+#incrBy(Ljava/lang/String;J)Ljava/lang/Long;
+#keys(Ljava/lang/String;)Ljava/util/Collection;
+#lIndex(Ljava/lang/String;J)Ljava/lang/String;
+#lInsert(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisListCommands$Position;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lLen(Ljava/lang/String;)Ljava/lang/Long;
+#lPop(Ljava/lang/String;)Ljava/lang/String;
+#lPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lPushX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#lRange(Ljava/lang/String;JJ)Ljava/util/List;
+#lRem(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/Long;
+#lSet(Ljava/lang/String;JLjava/lang/String;)V
+#lTrim(Ljava/lang/String;JJ)V
+#mGet([Ljava/lang/String;)Ljava/util/List;
+#mSetNXString(Ljava/util/Map;)V
+#mSetString(Ljava/util/Map;)V
+#persist(Ljava/lang/String;)Ljava/lang/Boolean;
+#move(Ljava/lang/String;I)Ljava/lang/Boolean;
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[Ljava/lang/String;)V
+#publish(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#rename(Ljava/lang/String;Ljava/lang/String;)V
+#renameNX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#rPop(Ljava/lang/String;)Ljava/lang/String;
+#rPopLPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#rPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#rPushX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#sAdd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#sCard(Ljava/lang/String;)Ljava/lang/Long;
+#sDiff([Ljava/lang/String;)Ljava/util/Set;
+#sDiffStore(Ljava/lang/String;[Ljava/lang/String;)V
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#setBit(Ljava/lang/String;JZ)V
+#setEx(Ljava/lang/String;JLjava/lang/String;)V
+#setNX(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#setRange(Ljava/lang/String;Ljava/lang/String;J)V
+#sInter([Ljava/lang/String;)Ljava/util/Set;
+#sInterStore(Ljava/lang/String;[Ljava/lang/String;)V
+#sIsMember(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#sMembers(Ljava/lang/String;)Ljava/util/Set;
+#sMove(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#sort(Ljava/lang/String;Lorg/springframework/data/redis/connection/SortParameters;Ljava/lang/String;)Ljava/lang/Long;
+#sort(Ljava/lang/String;Lorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sPop(Ljava/lang/String;)Ljava/lang/String;
+#sRandMember(Ljava/lang/String;)Ljava/lang/String;
+#sRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#strLen(Ljava/lang/String;)Ljava/lang/Long;
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[Ljava/lang/String;)V
+#sUnion([Ljava/lang/String;)Ljava/util/Set;
+#sUnionStore(Ljava/lang/String;[Ljava/lang/String;)V
+#ttl(Ljava/lang/String;)Ljava/lang/Long;
+#type(Ljava/lang/String;)Lorg/springframework/data/redis/connection/DataType;
+#zAdd(Ljava/lang/String;DLjava/lang/String;)Ljava/lang/Boolean;
+#zCard(Ljava/lang/String;)Ljava/lang/Long;
+#zCount(Ljava/lang/String;DD)Ljava/lang/Long;
+#zIncrBy(Ljava/lang/String;DLjava/lang/String;)Ljava/lang/Double;
+#zInterStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#zInterStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zRange(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRangeByScore(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#zRangeByScore(Ljava/lang/String;DD)Ljava/util/Set;
+#zRangeByScoreWithScores(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores(Ljava/lang/String;DD)Ljava/util/Set;
+#zRangeWithScores(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRank(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#zRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#zRemRange(Ljava/lang/String;JJ)Ljava/lang/Long;
+#zRemRangeByScore(Ljava/lang/String;DD)Ljava/lang/Long;
+#zRevRange(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRevRangeWithScores(Ljava/lang/String;JJ)Ljava/util/Set;
+#zRevRank(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#zScore(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Double;
+#zUnionStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#zUnionStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#closePipeline()Ljava/util/List;
+#isPipelined()Z
+#openPipeline()V
@1.0.1.RELEASE
+#sDiffStore([B[[B)Ljava/lang/Long;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sUnionStore([B[[B)Ljava/lang/Long;
+#execute(Ljava/lang/String;)Ljava/lang/Object;
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;
+#execute(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;
-#sDiffStore([B[[B)V
-#sInterStore([B[[B)V
-#sUnionStore([B[[B)V
@1.1.0.M1
+#hIncrBy([B[BD)Ljava/lang/Double;
+#incrBy([BD)Ljava/lang/Double;
+#info(Ljava/lang/String;)Ljava/util/Properties;
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#sRandMember([BJ)Ljava/util/List;
+#bitCount([B)Ljava/lang/Long;
+#bitCount([BJJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
+#pExpire([BJ)Ljava/lang/Boolean;
+#pExpireAt([BJ)Ljava/lang/Boolean;
+#pTtl([B)Ljava/lang/Long;
+#dump([B)[B
+#restore([BJ[B)V
+#scriptFlush()V
+#scriptKill()V
+#scriptLoad([B)Ljava/lang/String;
+#scriptExists([Ljava/lang/String;)Ljava/util/List;
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#hIncrBy(Ljava/lang/String;Ljava/lang/String;D)Ljava/lang/Double;
+#incrBy(Ljava/lang/String;D)Ljava/lang/Double;
+#mSetNXString(Ljava/util/Map;)Ljava/lang/Boolean;
+#sRandMember(Ljava/lang/String;J)Ljava/util/List;
+#bitCount(Ljava/lang/String;)Ljava/lang/Long;
+#bitCount(Ljava/lang/String;JJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#pExpire(Ljava/lang/String;J)Ljava/lang/Boolean;
+#pExpireAt(Ljava/lang/String;J)Ljava/lang/Boolean;
+#pTtl(Ljava/lang/String;)Ljava/lang/Long;
+#scriptLoad(Ljava/lang/String;)Ljava/lang/String;
+#eval(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[Ljava/lang/String;)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[Ljava/lang/String;)Ljava/lang/Object;
-#mSetNX(Ljava/util/Map;)V
-#mSetNXString(Ljava/util/Map;)V
@1.1.0.M2
+#hDel([B[[B)Ljava/lang/Long;
+#lPush([B[[B)Ljava/lang/Long;
+#rPush([B[[B)Ljava/lang/Long;
+#sAdd([B[[B)Ljava/lang/Long;
+#sRem([B[[B)Ljava/lang/Long;
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;
+#zRem([B[[B)Ljava/lang/Long;
+#hDel(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#lPush(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#rPush(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sAdd(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sDiffStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sInterStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sRem(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#sUnionStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zAdd(Ljava/lang/String;Ljava/util/Set;)Ljava/lang/Long;
+#zRem(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zRevRangeByScore(Ljava/lang/String;DD)Ljava/util/Set;
+#zRevRangeByScoreWithScores(Ljava/lang/String;DD)Ljava/util/Set;
+#zRevRangeByScore(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores(Ljava/lang/String;DDJJ)Ljava/util/Set;
+#setDeserializePipelineAndTxResults(Z)V
-#hDel([B[B)Ljava/lang/Boolean;
-#lPush([B[B)Ljava/lang/Long;
-#rPush([B[B)Ljava/lang/Long;
-#sAdd([B[B)Ljava/lang/Boolean;
-#sRem([B[B)Ljava/lang/Boolean;
-#zRem([B[B)Ljava/lang/Boolean;
-#hDel(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
-#lPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
-#rPush(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
-#sAdd(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
-#sDiffStore(Ljava/lang/String;[Ljava/lang/String;)V
-#sInterStore(Ljava/lang/String;[Ljava/lang/String;)V
-#sRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
-#sUnionStore(Ljava/lang/String;[Ljava/lang/String;)V
-#zRem(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
@1.2.0.RELEASE
+#time()Ljava/lang/Long;
@1.3.0.RELEASE
+#bgReWriteAof()V
*#bgWriteAof()V[deprecated]
+#setBit([BJZ)Ljava/lang/Boolean;
+#pSetEx([BJ[B)V
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
+#setBit(Ljava/lang/String;JZ)Ljava/lang/Boolean;
+#pSetEx(Ljava/lang/String;JLjava/lang/String;)V
+#getClientList()Ljava/util/List;
+#slaveOf(Ljava/lang/String;I)V
+#slaveOfNoOne()V
+#setClientName([B)V
+#setClientName(Ljava/lang/String;)V
+#killClient(Ljava/lang/String;I)V
+#getClientName()Ljava/lang/String;
-#setBit([BJZ)V
-#setBit(Ljava/lang/String;JZ)V
@1.4.0.RELEASE
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan(Ljava/lang/String;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan(Ljava/lang/String;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan(Ljava/lang/String;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
@1.5.0.RELEASE
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#zRangeByScore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfAdd(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfCount([Ljava/lang/String;)Ljava/lang/Long;
+#pfMerge([B[[B)V
+#pfMerge(Ljava/lang/String;[Ljava/lang/String;)V
@1.6.0.RELEASE
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByLex([B)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@1.7.0.RELEASE
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
+#set(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
+#getDelegate()Lorg/springframework/data/redis/connection/RedisConnection;
@1.8.0.RELEASE
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#ttl(Ljava/lang/String;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Lorg/springframework/data/geo/Point;Ljava/lang/String;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/Long;
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
+#geoDist(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/geo/Distance;
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoDist(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([B[[B)Ljava/util/List;
+#geoHash(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#geoPos([B[[B)Ljava/util/List;
+#geoPos(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#geoRadius(Ljava/lang/String;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius(Ljava/lang/String;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/String;Ljava/lang/String;D)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([B[[B)Ljava/lang/Long;
+#geoRemove(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#pTtl(Ljava/lang/String;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
@2.0.0.RELEASE
+#getConfig(Ljava/lang/String;)Ljava/util/Properties;
+#mSet(Ljava/util/Map;)Ljava/lang/Boolean;
+#set([B[B)Ljava/lang/Boolean;
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Ljava/lang/Boolean;
+#setEx([BJ[B)Ljava/lang/Boolean;
+#pSetEx([BJ[B)Ljava/lang/Boolean;
+#sPop([BJ)Ljava/util/List;
+#mSetString(Ljava/util/Map;)Ljava/lang/Boolean;
+#set(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#set(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)Ljava/lang/Boolean;
+#setEx(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/Boolean;
+#pSetEx(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/Boolean;
+#sPop(Ljava/lang/String;J)Ljava/util/List;
-#getConfig(Ljava/lang/String;)Ljava/util/List;
-#mSet(Ljava/util/Map;)V
-#set([B[B)V
-#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
-#setEx([BJ[B)V
-#pSetEx([BJ[B)V
-#mSetString(Ljava/util/Map;)V
-#set(Ljava/lang/String;Ljava/lang/String;)V
-#set(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
-#setEx(Ljava/lang/String;JLjava/lang/String;)V
-#pSetEx(Ljava/lang/String;JLjava/lang/String;)V
@2.1.0.RELEASE
+#unlink([[B)Ljava/lang/Long;
+#exists([Ljava/lang/String;)Ljava/lang/Long;
+#exists([[B)Ljava/lang/Long;
+#encodingOf([B)Lorg/springframework/data/redis/connection/ValueEncoding;
+#idletime([B)Ljava/time/Duration;
+#refcount([B)Ljava/lang/Long;
+#bitPos([BZLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#touch([[B)Ljava/lang/Long;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
+#restore([BJ[BZ)V
+#unlink([Ljava/lang/String;)Ljava/lang/Long;
+#encodingOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ValueEncoding;
+#idletime(Ljava/lang/String;)Ljava/time/Duration;
+#refcount(Ljava/lang/String;)Ljava/lang/Long;
+#bitPos(Ljava/lang/String;ZLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#touch([Ljava/lang/String;)Ljava/lang/Long;
+#hStrLen([B[B)Ljava/lang/Long;
+#hStrLen(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Long;
+#bitField([BLorg/springframework/data/redis/connection/BitFieldSubCommands;)Ljava/util/List;
+#bitfield(Ljava/lang/String;Lorg/springframework/data/redis/connection/BitFieldSubCommands;)Ljava/util/List;
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#restore([BJ[B)V
@2.2.0.RELEASE
+#xAck(Ljava/lang/String;Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xAdd(Lorg/springframework/data/redis/connection/stream/StringRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xDel(Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xGroupCreate(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;)Ljava/lang/String;
+#xGroupDelConsumer(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/Consumer;)Ljava/lang/Boolean;
+#xGroupDestroy(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#xLen(Ljava/lang/String;)Ljava/lang/Long;
+#xRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xReadAsString(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroupAsString(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xRevRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xTrim(Ljava/lang/String;J)Ljava/lang/Long;
+#xAck([BLjava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xDel([B[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xGroupCreate([BLjava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Ljava/lang/String;
+#xGroupDelConsumer([BLorg/springframework/data/redis/connection/stream/Consumer;)Ljava/lang/Boolean;
+#xGroupDestroy([BLjava/lang/String;)Ljava/lang/Boolean;
+#xLen([B)Ljava/lang/Long;
+#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xRead(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroup(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xTrim([BJ)Ljava/lang/Long;
@2.3.0.RELEASE
+#xAdd(Lorg/springframework/data/redis/connection/stream/StringRecord;Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xClaimJustId(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xClaim(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xGroupCreate(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;Z)Ljava/lang/String;
+#xInfo(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoStream;
+#xInfoGroups(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups;
+#xInfoConsumers(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers;
+#xPending(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/PendingMessagesSummary;
+#xPending(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xClaimJustId([BLjava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xClaim([BLjava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xGroupCreate([BLjava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Z)Ljava/lang/String;
+#xInfo([B)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoStream;
+#xInfoGroups([B)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups;
+#xInfoConsumers([BLjava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers;
+#xPending([BLjava/lang/String;)Lorg/springframework/data/redis/connection/stream/PendingMessagesSummary;
+#xPending([BLjava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
-#xAdd(Lorg/springframework/data/redis/connection/stream/StringRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;
-#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;
@2.4.0
+#lPos([B[BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;
+#zLexCount(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#lPos(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;
+#zLexCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#xTrim(Ljava/lang/String;JZ)Ljava/lang/Long;
+#xTrim([BJZ)Ljava/lang/Long;
@2.5.0
+#rewriteConfig()V
+#zAdd([BD[BLorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Boolean;
+#zAdd([BLjava/util/Set;Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Long;
+#zRemRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zAdd(Ljava/lang/String;DLjava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Boolean;
+#zAdd(Ljava/lang/String;Ljava/util/Set;Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;)Ljava/lang/Long;
+#zRemRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#time(Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
-#zAdd([BD[B)Ljava/lang/Boolean;
-#zAdd([BLjava/util/Set;)Ljava/lang/Long;
@2.6.0
+#copy([B[BZ)Ljava/lang/Boolean;
+#getDel([B)[B
+#getDel(Ljava/lang/String;)Ljava/lang/String;
+#getEx([BLorg/springframework/data/redis/core/types/Expiration;)[B
+#getEx(Ljava/lang/String;Lorg/springframework/data/redis/core/types/Expiration;)Ljava/lang/String;
+#lMove([B[BLorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)[B
+#bLMove([B[BLorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;D)[B
+#lMove(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/String;
+#bLMove(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;D)Ljava/lang/String;
+#lPop([BJ)Ljava/util/List;
+#rPop([BJ)Ljava/util/List;
+#sMIsMember([B[[B)Ljava/util/List;
+#zDiff([[B)Ljava/util/Set;
+#zDiffWithScores([[B)Ljava/util/Set;
+#zDiffStore([B[[B)Ljava/lang/Long;
+#zDiff([Ljava/lang/String;)Ljava/util/Set;
+#zDiffWithScores([Ljava/lang/String;)Ljava/util/Set;
+#zDiffStore(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#zInter([[B)Ljava/util/Set;
+#zInterWithScores([[B)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
+#zInter([Ljava/lang/String;)Ljava/util/Set;
+#zInterWithScores([Ljava/lang/String;)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
+#zMScore([B[[B)Ljava/util/List;
+#zUnion([[B)Ljava/util/Set;
+#zUnionWithScores([[B)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
+#zUnion([Ljava/lang/String;)Ljava/util/Set;
+#zUnionWithScores([Ljava/lang/String;)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
+#copy(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/Boolean;
+#hRandField([B)[B
+#hRandFieldWithValues([B)Ljava/util/Map$Entry;
+#hRandField([BJ)Ljava/util/List;
+#hRandFieldWithValues([BJ)Ljava/util/List;
+#hRandField(Ljava/lang/String;)Ljava/lang/String;
+#hRandFieldWithValues(Ljava/lang/String;)Ljava/util/Map$Entry;
+#hRandField(Ljava/lang/String;J)Ljava/util/List;
+#hRandFieldWithValues(Ljava/lang/String;J)Ljava/util/List;
+#lPop(Ljava/lang/String;J)Ljava/util/List;
+#rPop(Ljava/lang/String;J)Ljava/util/List;
+#sMIsMember(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#zPopMin([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zPopMin(Ljava/lang/String;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zPopMin([BJ)Ljava/util/Set;
+#zPopMin(Ljava/lang/String;J)Ljava/util/Set;
+#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#bZPopMin(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zPopMax([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zPopMax(Ljava/lang/String;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zPopMax([BJ)Ljava/util/Set;
+#zPopMax(Ljava/lang/String;J)Ljava/util/Set;
+#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#bZPopMax(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zRandMember([B)[B
+#zRandMember([BJ)Ljava/util/List;
+#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
+#zRandMemberWithScore([BJ)Ljava/util/List;
+#zRandMember(Ljava/lang/String;)Ljava/lang/String;
+#zRandMember(Ljava/lang/String;J)Ljava/util/List;
+#zRandMemberWithScore(Ljava/lang/String;)Lorg/springframework/data/redis/connection/StringRedisConnection$StringTuple;
+#zRandMemberWithScores(Ljava/lang/String;J)Ljava/util/List;
+#zMScore(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
+#geoSearch([BLorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoSearchStore([B[BLorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
+#geoSearch(Ljava/lang/String;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoSearchStore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/domain/geo/GeoReference;Lorg/springframework/data/redis/domain/geo/GeoShape;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Ljava/lang/Long;
+#zPopMin(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
@2.7.0
+#flushAll(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V
+#flushDb(Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)V
@3.0.0
+#commands()Lorg/springframework/data/redis/connection/RedisCommands;
+#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
+#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
+#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
+#scriptingCommands()Lorg/springframework/data/redis/connection/RedisScriptingCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
+#streamCommands()Lorg/springframework/data/redis/connection/RedisStreamCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;
+#zCount([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/util/Set;
+#zInterWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[Ljava/lang/String;)Ljava/util/Set;
+#zInterStore([BLorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([BLorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/lang/Long;
+#zRangeByScore([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRemRangeByLex([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zRemRangeByScore([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/util/Set;
+#zUnionWithScores(Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[Ljava/lang/String;)Ljava/util/Set;
+#zUnionStore([BLorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;[[B)Ljava/lang/Long;
+#zUnionStore([BLorg/springframework/data/redis/connection/zset/Aggregate;[I[[B)Ljava/lang/Long;
+#zLexCount(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zLexCount([BLorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zPopMin([B)Lorg/springframework/data/redis/connection/zset/Tuple;
+#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/zset/Tuple;
+#zPopMax([B)Lorg/springframework/data/redis/connection/zset/Tuple;
+#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/zset/Tuple;
+#zInterStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/zset/Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/zset/Tuple;
+#zRemRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#zUnionStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/zset/Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
+#replicaOf(Ljava/lang/String;I)V
+#replicaOfNoOne()V
+#zRangeByLex([BLorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByLex([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#zRangeStoreByLex([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreByLex(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByLex([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByLex(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreByScore([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreByScore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByScore([B[BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#zRangeStoreRevByScore(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#xRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#xRevRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#zPopMin(Ljava/lang/String;)Lorg/springframework/data/redis/connection/zset/Tuple;
-#bgWriteAof()V[deprecated]
-#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
-#zInterWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRemRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/util/Set;
-#zUnionWithScores(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[Ljava/lang/String;)Ljava/util/Set;
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;[[B)Ljava/lang/Long;
-#zLexCount(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zLexCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zPopMin([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#bZPopMin([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#zPopMax([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#bZPopMax([BJLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#zInterStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
-#zRandMemberWithScore([B)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;
-#zRemRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zUnionStore(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[Ljava/lang/String;)Ljava/lang/Long;
-#slaveOf(Ljava/lang/String;I)V
-#slaveOfNoOne()V
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByLex(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#xRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#xRevRange(Ljava/lang/String;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#zPopMin(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;

+###org/springframework/data/redis/ClusterRedirectException
@1.7.0.RELEASE
+#<init>(ILjava/lang/String;ILjava/lang/Throwable;)V
+#getSlot()I
+#getTargetHost()Ljava/lang/String;
+#getTargetPort()I

+###org/springframework/data/redis/repository/cdi/RedisRepositoryExtension
@1.7.0.RELEASE
+#<init>()V

+###org/springframework/data/redis/serializer/Jackson2JsonRedisSerializer
@1.2.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#deserialize([B)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)[B
+#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V
@1.4.2.RELEASE
+#<init>(Lcom/fasterxml/jackson/databind/JavaType;)V
@3.0.0
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/Class;)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;Lcom/fasterxml/jackson/databind/JavaType;)V
+#<init>(Lcom/fasterxml/jackson/databind/ObjectMapper;Lcom/fasterxml/jackson/databind/JavaType;Lorg/springframework/data/redis/serializer/JacksonObjectReader;Lorg/springframework/data/redis/serializer/JacksonObjectWriter;)V
*#setObjectMapper(Lcom/fasterxml/jackson/databind/ObjectMapper;)V[deprecated]

+###org/springframework/data/redis/listener/adapter/MessageListenerAdapter
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#setDelegate(Ljava/lang/Object;)V
+#getDelegate()Ljava/lang/Object;
+#setDefaultListenerMethod(Ljava/lang/String;)V
+#setSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#setStringSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#afterPropertiesSet()V
+#onMessage(Lorg/springframework/data/redis/connection/Message;[B)V
@1.0.5.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;)V

+###org/springframework/data/redis/core/RedisKeyValueTemplate$RedisKeyValueCallback
@1.7.0.RELEASE
+#<init>()V
+#doInKeyValue(Lorg/springframework/data/keyvalue/core/KeyValueAdapter;)Ljava/lang/Object;
+#doInRedis(Lorg/springframework/data/redis/core/RedisKeyValueAdapter;)Ljava/lang/Object;

+###org/springframework/data/redis/core/BoundZSetOperations
@1.0.0.RELEASE
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;)V
+#range(JJ)Ljava/util/Set;
+#rangeByScore(DD)Ljava/util/Set;
+#reverseRange(JJ)Ljava/util/Set;
+#reverseRangeByScore(DD)Ljava/util/Set;
+#rangeWithScores(JJ)Ljava/util/Set;
+#rangeByScoreWithScores(DD)Ljava/util/Set;
+#reverseRangeWithScores(JJ)Ljava/util/Set;
+#reverseRangeByScoreWithScores(DD)Ljava/util/Set;
+#removeRange(JJ)V
+#removeRangeByScore(DD)V
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;)V
+#add(Ljava/lang/Object;D)Ljava/lang/Boolean;
+#incrementScore(Ljava/lang/Object;D)Ljava/lang/Double;
+#rank(Ljava/lang/Object;)Ljava/lang/Long;
+#reverseRank(Ljava/lang/Object;)Ljava/lang/Long;
+#remove(Ljava/lang/Object;)Ljava/lang/Boolean;
+#count(DD)Ljava/lang/Long;
+#size()Ljava/lang/Long;
+#score(Ljava/lang/Object;)Ljava/lang/Double;
@1.1.0.M2
+#add(Ljava/util/Set;)Ljava/lang/Long;
+#remove([Ljava/lang/Object;)Ljava/lang/Long;
-#remove(Ljava/lang/Object;)Ljava/lang/Boolean;
@1.3.0.RELEASE
+#zCard()Ljava/lang/Long;
@1.4.0.RELEASE
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.7.0.RELEASE
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.1.0.RELEASE
+#removeRange(JJ)Ljava/lang/Long;
+#removeRangeByScore(DD)Ljava/lang/Long;
+#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
+#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
-#removeRange(JJ)V
-#removeRangeByScore(DD)V
-#unionAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
-#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;)V
-#intersectAndStore(Ljava/lang/Object;Ljava/lang/Object;)V
-#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;)V
@2.4.0
+#lexCount(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@2.5.0
+#addIfAbsent(Ljava/lang/Object;D)Ljava/lang/Boolean;
+#addIfAbsent(Ljava/util/Set;)Ljava/lang/Long;
+#removeRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
@2.6.0
+#randomMember()Ljava/lang/Object;
+#distinctRandomMembers(J)Ljava/util/Set;
+#randomMembers(J)Ljava/util/List;
+#randomMemberWithScore()Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#distinctRandomMembersWithScore(J)Ljava/util/Set;
+#randomMembersWithScore(J)Ljava/util/List;
+#popMin()Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMin(J)Ljava/util/Set;
+#popMin(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMin(Ljava/time/Duration;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMax()Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMax(J)Ljava/util/Set;
+#popMax(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#popMax(Ljava/time/Duration;)Lorg/springframework/data/redis/core/ZSetOperations$TypedTuple;
+#score([Ljava/lang/Object;)Ljava/util/List;
+#difference(Ljava/lang/Object;)Ljava/util/Set;
+#difference(Ljava/util/Collection;)Ljava/util/Set;
+#differenceWithScores(Ljava/lang/Object;)Ljava/util/Set;
+#differenceWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#differenceAndStore(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#differenceAndStore(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Long;
+#intersect(Ljava/lang/Object;)Ljava/util/Set;
+#intersect(Ljava/util/Collection;)Ljava/util/Set;
+#intersectWithScores(Ljava/lang/Object;)Ljava/util/Set;
+#intersectWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#intersectWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
+#union(Ljava/lang/Object;)Ljava/util/Set;
+#union(Ljava/util/Collection;)Ljava/util/Set;
+#unionWithScores(Ljava/lang/Object;)Ljava/util/Set;
+#unionWithScores(Ljava/util/Collection;)Ljava/util/Set;
+#unionWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/util/Set;
+#unionWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
@3.0.0
*#lexCount(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#lexCount(Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
*#removeRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;[deprecated]
+#removeRangeByLex(Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/lang/Long;
+#intersectWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/util/Set;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;)Ljava/lang/Long;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/lang/Long;
+#unionWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;)Ljava/util/Set;
+#unionWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/zset/Aggregate;Lorg/springframework/data/redis/connection/zset/Weights;)Ljava/util/Set;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/zset/Aggregate;)Ljava/lang/Long;
*#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;[deprecated]
+#rangeByLex(Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#rangeByLex(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
*#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;[deprecated]
+#reverseRangeByLex(Lorg/springframework/data/domain/Range;)Ljava/util/Set;
+#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;[deprecated]
+#reverseRangeByLex(Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/Set;
+#rangeAndStoreByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#rangeAndStoreByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#reverseRangeAndStoreByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#reverseRangeAndStoreByLex(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#rangeAndStoreByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#rangeAndStoreByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
+#reverseRangeAndStoreByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/lang/Long;
+#reverseRangeAndStoreByScore(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/lang/Long;
-#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
-#intersectWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
-#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
-#intersectAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/lang/Long;
-#unionWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/util/Set;
-#unionWithScores(Ljava/util/Collection;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Ljava/util/Set;
-#unionAndStore(Ljava/util/Collection;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Ljava/lang/Long;
-#rangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#reverseRangeByLex(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;

+###org/springframework/data/redis/core/index/IndexDefinitionRegistry
@1.7.0.RELEASE
+#addIndexDefinition(Lorg/springframework/data/redis/core/index/IndexDefinition;)V

+###org/springframework/data/redis/core/index/IndexConfiguration
@1.7.0.RELEASE
+#<init>()V
+#hasIndexFor(Ljava/io/Serializable;)Z
+#hasIndexFor(Ljava/io/Serializable;Ljava/lang/String;)Z
+#getIndexDefinitionsFor(Ljava/io/Serializable;Ljava/lang/String;)Ljava/util/Set;
+#getIndexDefinitionsFor(Ljava/io/Serializable;)Ljava/util/Set;
+#addIndexDefinition(Lorg/springframework/data/redis/core/index/IndexDefinition;)V

+###org/springframework/data/redis/core/RedisKeyValueAdapter$EnableKeyspaceEvents
@1.7.2.RELEASE
+#values()[Lorg/springframework/data/redis/core/RedisKeyValueAdapter$EnableKeyspaceEvents;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/core/RedisKeyValueAdapter$EnableKeyspaceEvents;

+###org/springframework/data/redis/core/Cursor
@1.4.0.RELEASE
+#getCursorId()J
+#isClosed()Z
+#open()Lorg/springframework/data/redis/core/Cursor;
+#getPosition()J
@2.5.0
*#open()Lorg/springframework/data/redis/core/Cursor;[deprecated]
@3.0.0
-#open()Lorg/springframework/data/redis/core/Cursor;[deprecated]

+###org/springframework/data/redis/core/ReactiveRedisCallback
@2.0.0.RELEASE
+#doInRedis(Lorg/springframework/data/redis/connection/ReactiveRedisConnection;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/redis/core/convert/RedisData
@1.7.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Map;)V
+#<init>(Lorg/springframework/data/redis/core/convert/Bucket;)V
+#setId(Ljava/lang/String;)V
+#getId()Ljava/lang/String;
+#getTimeToLive()Ljava/lang/Long;
+#addIndexedData(Lorg/springframework/data/redis/core/convert/IndexedData;)V
+#getIndexedData()Ljava/util/Set;
+#getKeyspace()Ljava/lang/String;
+#setKeyspace(Ljava/lang/String;)V
+#getBucket()Lorg/springframework/data/redis/core/convert/Bucket;
+#setTimeToLive(Ljava/lang/Long;)V
+#setTimeToLive(Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)V
+#toString()Ljava/lang/String;
@1.8.0.RELEASE
+#addIndexedData(Ljava/util/Collection;)V

+###org/springframework/data/redis/core/convert/IndexedData
@1.7.0.RELEASE
+#getIndexName()Ljava/lang/String;
+#getKeyspace()Ljava/lang/String;

+###org/springframework/data/redis/core/convert/GeoIndexedPropertyValue
@1.8.0.RELEASE
+#getIndexName()Ljava/lang/String;
+#getKeyspace()Ljava/lang/String;
+#getPoint()Lorg/springframework/data/geo/Point;
+#geoIndexName(Ljava/lang/String;)Ljava/lang/String;
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/geo/Point;)V
+#getValue()Lorg/springframework/data/geo/Point;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/cache/CacheKeyPrefix
@2.0.4.RELEASE
+#compute(Ljava/lang/String;)Ljava/lang/String;
+#simple()Lorg/springframework/data/redis/cache/CacheKeyPrefix;
@2.3.0.RELEASE
+#prefixed(Ljava/lang/String;)Lorg/springframework/data/redis/cache/CacheKeyPrefix;

+###org/springframework/data/redis/connection/lettuce/AuthenticatingRedisClient
@1.1.0.M1
+#<init>(Ljava/lang/String;ILjava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#connect(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/RedisConnection;
+#connectAsync(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/RedisAsyncConnection;
+#connectPubSub(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/pubsub/RedisPubSubConnection;
@1.8.0.RELEASE
+#connect(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/api/StatefulRedisConnection;
+#connectAsync(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/api/async/RedisAsyncCommands;
+#connectPubSub(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/pubsub/StatefulRedisPubSubConnection;
-#connect(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/RedisConnection;
-#connectAsync(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/RedisAsyncConnection;
-#connectPubSub(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/pubsub/RedisPubSubConnection;
@2.0.0.RELEASE
+#connect(Lio/lettuce/core/codec/RedisCodec;)Lio/lettuce/core/api/StatefulRedisConnection;
+#connectPubSub(Lio/lettuce/core/codec/RedisCodec;)Lio/lettuce/core/pubsub/StatefulRedisPubSubConnection;
-#connect(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/api/StatefulRedisConnection;
-#connectAsync(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/api/async/RedisAsyncCommands;
-#connectPubSub(Lcom/lambdaworks/redis/codec/RedisCodec;)Lcom/lambdaworks/redis/pubsub/StatefulRedisPubSubConnection;
@3.0.0
-###org/springframework/data/redis/connection/lettuce/AuthenticatingRedisClient

+###org/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfAddCommand
@2.0.0.RELEASE
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfAddCommand;
+#values(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfAddCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfAddCommand;
+#getValues()Ljava/util/List;

+###org/springframework/data/redis/connection/stream/StreamRecords$RecordBuilder
@2.2.0.RELEASE
+#in(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/StreamRecords$RecordBuilder;
+#withId(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamRecords$RecordBuilder;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/StreamRecords$RecordBuilder;
+#ofMap(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#ofStrings(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/StringRecord;
+#ofObject(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#ofBytes(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/ByteRecord;
+#ofBuffer(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;

+###org/springframework/data/redis/connection/stream/ByteRecord
@2.2.0.RELEASE
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/ByteRecord;
+#withStreamKey([B)Lorg/springframework/data/redis/connection/stream/ByteRecord;
+#deserialize(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#deserialize(Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#of(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/ByteRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/Record;

+###org/springframework/data/redis/connection/stream/StreamRecords
@2.2.0.RELEASE
+#rawBytes(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/ByteRecord;
+#rawBuffer(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;
+#string(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/StringRecord;
+#mapBacked(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#objectBacked(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#newRecord()Lorg/springframework/data/redis/connection/stream/StreamRecords$RecordBuilder;

+###org/springframework/data/redis/connection/stream/ObjectRecord
@2.2.0.RELEASE
+#create(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#withStreamKey(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#toMapRecord(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#withStreamKey(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/Record;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/Record;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand
@2.2.0.RELEASE
+#<init>(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand$GroupCommandAction;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;)V
+#createGroup(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#destroyGroup(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#deleteConsumer(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#deleteConsumer(Lorg/springframework/data/redis/connection/stream/Consumer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#at(Lorg/springframework/data/redis/connection/stream/ReadOffset;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#forStream(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#fromGroup(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#getReadOffset()Lorg/springframework/data/redis/connection/stream/ReadOffset;
+#getGroupName()Ljava/lang/String;
+#getConsumerName()Ljava/lang/String;
+#getAction()Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand$GroupCommandAction;
@2.3.0.RELEASE
+#<init>(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand$GroupCommandAction;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Z)V
+#makeStream(Z)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$GroupCommand;
+#isMkStream()Z

+###org/springframework/data/redis/connection/ReactiveSubscription$Message
@2.1.0.RELEASE
+#getChannel()Ljava/lang/Object;
+#getMessage()Ljava/lang/Object;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZIncrByCommand
@2.0.0.RELEASE
+#scoreOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZIncrByCommand;
+#by(Ljava/lang/Number;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZIncrByCommand;
+#storedWithin(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZIncrByCommand;
+#getValue()Ljava/nio/ByteBuffer;
+#getIncrement()Ljava/lang/Number;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSet
@2.1.0.RELEASE
+#<init>()V
+#getCommand()Ljava/lang/String;
+#getValue()J
@2.5.2
+#create(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;J)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSet;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/RedisClusterConfiguration
@1.7.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#<init>(Lorg/springframework/core/env/PropertySource;)V
+#setClusterNodes(Ljava/lang/Iterable;)V
+#getClusterNodes()Ljava/util/Set;
+#addClusterNode(Lorg/springframework/data/redis/connection/RedisNode;)V
+#clusterNode(Lorg/springframework/data/redis/connection/RedisNode;)Lorg/springframework/data/redis/connection/RedisClusterConfiguration;
+#getMaxRedirects()Ljava/lang/Integer;
+#setMaxRedirects(I)V
+#clusterNode(Ljava/lang/String;Ljava/lang/Integer;)Lorg/springframework/data/redis/connection/RedisClusterConfiguration;
@2.0.0.RELEASE
+#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;
+#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
@2.4.0
+#setUsername(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
@2.5.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/convert/ListConverter
@1.1.0.M2
+#<init>(Lorg/springframework/core/convert/converter/Converter;)V
+#convert(Ljava/util/List;)Ljava/util/List;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/DefaultStringTuple
@1.0.0.RELEASE
+#<init>([BLjava/lang/String;Ljava/lang/Double;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;Ljava/lang/String;)V
+#getValueAsString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@1.0.4.RELEASE
+#toString()Ljava/lang/String;
@2.6.0
+#<init>(Ljava/lang/String;D)V
@3.0.0
+#<init>(Lorg/springframework/data/redis/connection/zset/Tuple;Ljava/lang/String;)V
-#<init>(Lorg/springframework/data/redis/connection/RedisZSetCommands$Tuple;Ljava/lang/String;)V

+###org/springframework/data/redis/hash/HashMapper
@1.0.0.RELEASE
+#toHash(Ljava/lang/Object;)Ljava/util/Map;
+#fromHash(Ljava/util/Map;)Ljava/lang/Object;

+###org/springframework/data/redis/support/collections/RedisSet
@1.0.0.RELEASE
+#intersect(Lorg/springframework/data/redis/support/collections/RedisSet;)Ljava/util/Set;
+#intersect(Ljava/util/Collection;)Ljava/util/Set;
+#union(Lorg/springframework/data/redis/support/collections/RedisSet;)Ljava/util/Set;
+#union(Ljava/util/Collection;)Ljava/util/Set;
+#diff(Lorg/springframework/data/redis/support/collections/RedisSet;)Ljava/util/Set;
+#diff(Ljava/util/Collection;)Ljava/util/Set;
+#intersectAndStore(Lorg/springframework/data/redis/support/collections/RedisSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#intersectAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#unionAndStore(Lorg/springframework/data/redis/support/collections/RedisSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#unionAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#diffAndStore(Lorg/springframework/data/redis/support/collections/RedisSet;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#diffAndStore(Ljava/util/Collection;Ljava/lang/String;)Lorg/springframework/data/redis/support/collections/RedisSet;
@1.4.0.RELEASE
+#scan()Ljava/util/Iterator;
@2.6.0
+#create(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)Lorg/springframework/data/redis/support/collections/RedisSet;
+#randomValue()Ljava/lang/Object;

+###org/springframework/data/redis/RedisConnectionFailureException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/data/redis/repository/cdi/RedisRepositoryBean
@1.7.0.RELEASE
+#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;)V
@3.0.0
+#<init>(Ljakarta/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljakarta/enterprise/inject/spi/BeanManager;Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;)V
-#<init>(Ljavax/enterprise/inject/spi/Bean;Ljava/util/Set;Ljava/lang/Class;Ljavax/enterprise/inject/spi/BeanManager;Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;)V

+###org/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder
@2.0.0.RELEASE
+#key(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#key(Lorg/springframework/data/redis/serializer/RedisElementReader;Lorg/springframework/data/redis/serializer/RedisElementWriter;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#key(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#value(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#value(Lorg/springframework/data/redis/serializer/RedisElementReader;Lorg/springframework/data/redis/serializer/RedisElementWriter;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#value(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#hashKey(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#hashKey(Lorg/springframework/data/redis/serializer/RedisElementReader;Lorg/springframework/data/redis/serializer/RedisElementWriter;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#hashKey(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#hashValue(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#hashValue(Lorg/springframework/data/redis/serializer/RedisElementReader;Lorg/springframework/data/redis/serializer/RedisElementWriter;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#hashValue(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#string(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#string(Lorg/springframework/data/redis/serializer/RedisElementReader;Lorg/springframework/data/redis/serializer/RedisElementWriter;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#string(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisSerializationContext$RedisSerializationContextBuilder;
+#build()Lorg/springframework/data/redis/serializer/RedisSerializationContext;

+###org/springframework/data/redis/core/RedisTemplate
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#execute(Lorg/springframework/data/redis/core/RedisCallback;)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/RedisCallback;Z)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/RedisCallback;ZZ)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/SessionCallback;)Ljava/lang/Object;
+#isExposeConnection()Z
+#setExposeConnection(Z)V
+#getDefaultSerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#setDefaultSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#setKeySerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#getKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#setValueSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#getValueSerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#getHashKeySerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#setHashKeySerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#getHashValueSerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#setHashValueSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#getStringSerializer()Lorg/springframework/data/redis/serializer/RedisSerializer;
+#setStringSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#exec()Ljava/util/List;
+#delete(Ljava/lang/Object;)V
+#delete(Ljava/util/Collection;)V
+#hasKey(Ljava/lang/Object;)Ljava/lang/Boolean;
+#expire(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/lang/Object;Ljava/util/Date;)Ljava/lang/Boolean;
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
+#getExpire(Ljava/lang/Object;)Ljava/lang/Long;
+#keys(Ljava/lang/Object;)Ljava/util/Set;
+#persist(Ljava/lang/Object;)Ljava/lang/Boolean;
+#move(Ljava/lang/Object;I)Ljava/lang/Boolean;
+#randomKey()Ljava/lang/Object;
+#rename(Ljava/lang/Object;Ljava/lang/Object;)V
+#renameIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#type(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/DataType;
+#multi()V
+#discard()V
+#watch(Ljava/lang/Object;)V
+#watch(Ljava/util/Collection;)V
+#unwatch()V
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Lorg/springframework/data/redis/core/BulkMapper;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Lorg/springframework/data/redis/core/BulkMapper;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#sort(Lorg/springframework/data/redis/core/query/SortQuery;Ljava/lang/Object;)Ljava/lang/Long;
+#boundValueOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundValueOperations;
+#opsForValue()Lorg/springframework/data/redis/core/ValueOperations;
+#opsForList()Lorg/springframework/data/redis/core/ListOperations;
+#boundListOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundListOperations;
+#boundSetOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundSetOperations;
+#opsForSet()Lorg/springframework/data/redis/core/SetOperations;
+#boundZSetOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundZSetOperations;
+#opsForZSet()Lorg/springframework/data/redis/core/ZSetOperations;
+#boundHashOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundHashOperations;
+#opsForHash()Lorg/springframework/data/redis/core/HashOperations;
@1.0.3.RELEASE
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Long;
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
@1.0.4.RELEASE
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Long;
@1.1.0.M1
+#dump(Ljava/lang/Object;)[B
+#restore(Ljava/lang/Object;[BJLjava/util/concurrent/TimeUnit;)V
@1.1.0.M2
+#executePipelined(Lorg/springframework/data/redis/core/SessionCallback;)Ljava/util/List;
+#executePipelined(Lorg/springframework/data/redis/core/SessionCallback;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#executePipelined(Lorg/springframework/data/redis/core/RedisCallback;)Ljava/util/List;
+#executePipelined(Lorg/springframework/data/redis/core/RedisCallback;Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;Ljava/util/List;[Ljava/lang/Object;)Ljava/lang/Object;
+#isEnableDefaultSerializer()Z
+#setEnableDefaultSerializer(Z)V
+#setScriptExecutor(Lorg/springframework/data/redis/core/script/ScriptExecutor;)V
+#exec(Lorg/springframework/data/redis/serializer/RedisSerializer;)Ljava/util/List;
@1.1.0.RC1
+#getExpire(Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;)Ljava/lang/Long;
@1.3.0.RELEASE
+#killClient(Ljava/lang/String;I)V
+#getClientList()Ljava/util/List;
+#slaveOf(Ljava/lang/String;I)V
+#slaveOfNoOne()V
+#setEnableTransactionSupport(Z)V
@1.5.0.RELEASE
+#opsForHyperLogLog()Lorg/springframework/data/redis/core/HyperLogLogOperations;
@1.7.0.RELEASE
+#opsForCluster()Lorg/springframework/data/redis/core/ClusterOperations;
@1.7.2.RELEASE
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
@1.8.0.RELEASE
+#executeWithStickyConnection(Lorg/springframework/data/redis/core/RedisCallback;)Ljava/io/Closeable;
+#opsForGeo()Lorg/springframework/data/redis/core/GeoOperations;
+#boundGeoOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundGeoOperations;
@2.0.0.RELEASE
+#delete(Ljava/lang/Object;)Ljava/lang/Boolean;
+#delete(Ljava/util/Collection;)Ljava/lang/Long;
-#delete(Ljava/lang/Object;)V
-#delete(Ljava/util/Collection;)V
@2.1.0.RELEASE
+#unlink(Ljava/lang/Object;)Ljava/lang/Boolean;
+#unlink(Ljava/util/Collection;)Ljava/lang/Long;
+#countExistingKeys(Ljava/util/Collection;)Ljava/lang/Long;
+#restore(Ljava/lang/Object;[BJLjava/util/concurrent/TimeUnit;Z)V
-#restore(Ljava/lang/Object;[BJLjava/util/concurrent/TimeUnit;)V
@2.2.0.RELEASE
+#opsForStream()Lorg/springframework/data/redis/core/StreamOperations;
+#opsForStream(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/core/StreamOperations;
+#boundStreamOps(Ljava/lang/Object;)Lorg/springframework/data/redis/core/BoundStreamOperations;
@2.6.0
+#copy(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Boolean;
@2.7.0
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@3.0.0
+#replicaOf(Ljava/lang/String;I)V
+#replicaOfNoOne()V
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Long;
-#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)V
-#slaveOf(Ljava/lang/String;I)V
-#slaveOfNoOne()V

+###org/springframework/data/redis/core/ReactiveSetOperationsExtensionsKt
@2.2.0.RELEASE
+#addAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#removeAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#popAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#popAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;J)Lkotlinx/coroutines/flow/Flow;
+#moveAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#sizeAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#isMemberAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#intersectAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/util/Collection;)Lkotlinx/coroutines/flow/Flow;
+#intersectAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/util/Collection;)Lkotlinx/coroutines/flow/Flow;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#intersectAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/util/Collection;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#unionAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/util/Collection;)Lkotlinx/coroutines/flow/Flow;
+#unionAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/util/Collection;)Lkotlinx/coroutines/flow/Flow;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#unionAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/util/Collection;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#differenceAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#differenceAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/util/Collection;)Lkotlinx/coroutines/flow/Flow;
+#differenceAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/util/Collection;)Lkotlinx/coroutines/flow/Flow;
+#differenceAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#differenceAndStoreAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/util/Collection;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#membersAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#scanAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lkotlinx/coroutines/flow/Flow;
+#scanAsFlow$default(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
+#randomMemberAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#distinctRandomMembersAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;J)Lkotlinx/coroutines/flow/Flow;
+#randomMembersAsFlow(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;J)Lkotlinx/coroutines/flow/Flow;
+#deleteAndAwait(Lorg/springframework/data/redis/core/ReactiveSetOperations;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/data/redis/core/RedisHash
@1.7.0.RELEASE
+#value()Ljava/lang/String;
+#timeToLive()J

+###org/springframework/data/redis/core/HashMapperProvider
@2.2.0.RELEASE
+#getHashMapper(Ljava/lang/Class;)Lorg/springframework/data/redis/hash/HashMapper;

+###org/springframework/data/redis/core/index/GeoIndexDefinition
@1.8.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/data/redis/core/ListOperations
@1.0.0.RELEASE
+#range(Ljava/lang/Object;JJ)Ljava/util/List;
+#trim(Ljava/lang/Object;JJ)V
+#size(Ljava/lang/Object;)Ljava/lang/Long;
+#leftPush(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#leftPushIfPresent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#leftPush(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#rightPush(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#rightPushIfPresent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#rightPush(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#set(Ljava/lang/Object;JLjava/lang/Object;)V
+#remove(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Long;
+#index(Ljava/lang/Object;J)Ljava/lang/Object;
+#leftPop(Ljava/lang/Object;)Ljava/lang/Object;
+#leftPop(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#rightPop(Ljava/lang/Object;)Ljava/lang/Object;
+#rightPop(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#rightPopAndLeftPush(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#rightPopAndLeftPush(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@1.1.0.M2
+#leftPushAll(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
+#rightPushAll(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
@1.5.0.RELEASE
+#leftPushAll(Ljava/lang/Object;Ljava/util/Collection;)Ljava/lang/Long;
+#rightPushAll(Ljava/lang/Object;Ljava/util/Collection;)Ljava/lang/Long;
@2.3.0.RELEASE
+#leftPop(Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Object;
+#rightPop(Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Object;
+#rightPopAndLeftPush(Ljava/lang/Object;Ljava/lang/Object;Ljava/time/Duration;)Ljava/lang/Object;
@2.4.0
+#indexOf(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
+#lastIndexOf(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
@2.6.0
+#move(Lorg/springframework/data/redis/core/ListOperations$MoveFrom;Lorg/springframework/data/redis/core/ListOperations$MoveTo;)Ljava/lang/Object;
+#move(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)Ljava/lang/Object;
+#move(Lorg/springframework/data/redis/core/ListOperations$MoveFrom;Lorg/springframework/data/redis/core/ListOperations$MoveTo;Ljava/time/Duration;)Ljava/lang/Object;
+#move(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/time/Duration;)Ljava/lang/Object;
+#move(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#leftPop(Ljava/lang/Object;J)Ljava/util/List;
+#rightPop(Ljava/lang/Object;J)Ljava/util/List;

+###org/springframework/data/redis/core/convert/RemoveIndexedData
@1.8.0.RELEASE
+#getIndexName()Ljava/lang/String;
+#getKeyspace()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder
@2.0.0.RELEASE
+#fromConnectionFactory(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#fromCacheWriter(Lorg/springframework/data/redis/cache/RedisCacheWriter;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#cacheDefaults(Lorg/springframework/data/redis/cache/RedisCacheConfiguration;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#transactionAware()Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#initialCacheNames(Ljava/util/Set;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#withInitialCacheConfigurations(Ljava/util/Map;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#build()Lorg/springframework/data/redis/cache/RedisCacheManager;
@2.0.4.RELEASE
+#disableCreateOnMissingCache()Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
@2.2.0.RELEASE
+#withCacheConfiguration(Ljava/lang/String;Lorg/springframework/data/redis/cache/RedisCacheConfiguration;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#getConfiguredCaches()Ljava/util/Set;
+#getCacheConfigurationFor(Ljava/lang/String;)Ljava/util/Optional;
@2.3.0.RELEASE
+#cacheWriter(Lorg/springframework/data/redis/cache/RedisCacheWriter;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
@2.4.0
+#enableStatistics()Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;

+###org/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingSslClientConfigurationBuilder
@2.0.0.RELEASE
@2.0.3.RELEASE
+#and()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder;
+#disablePeerVerification()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingSslClientConfigurationBuilder;
+#startTls()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration$LettucePoolingSslClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/lettuce/LettucePoolingClientConfiguration;
+#build()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;
+#and()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#startTls()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceSslClientConfigurationBuilder;
+#disablePeerVerification()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceSslClientConfigurationBuilder;

+###org/springframework/data/redis/connection/util/ByteArraySet
@1.7.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#size()I
+#contains(Ljava/lang/Object;)Z
+#add(Lorg/springframework/data/redis/connection/util/ByteArrayWrapper;)Z
+#add([B)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#addAll(Ljava/lang/Iterable;)Z
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#clear()V
+#asRawSet()Ljava/util/Set;
+#add(Ljava/lang/Object;)Z

+###org/springframework/data/redis/connection/ReactiveClusterNumberCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/RedisZSetCommands$Aggregate
@1.0.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;
@3.0.0
-###org/springframework/data/redis/connection/RedisZSetCommands$Aggregate

+###org/springframework/data/redis/connection/stream/Consumer
@2.2.0.RELEASE
+#from(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/Consumer;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getGroup()Ljava/lang/String;
+#getName()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/MapRecord
@2.2.0.RELEASE
+#create(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#withStreamKey(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#mapEntries(Ljava/util/function/Function;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#map(Ljava/util/function/Function;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#serialize(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/connection/stream/ByteRecord;
+#serialize(Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/connection/stream/ByteRecord;
+#toObjectRecord(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#withStreamKey(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/Record;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/Record;

+###org/springframework/data/redis/connection/ReactiveSubscription$ChannelMessage
@2.1.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getChannel()Ljava/lang/Object;
+#getMessage()Ljava/lang/Object;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/RedisStreamCommands
@2.2.0.RELEASE
+#xAck([BLjava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#xAck([BLjava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xAdd([BLjava/util/Map;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xDel([B[Ljava/lang/String;)Ljava/lang/Long;
+#xDel([B[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#xGroupCreate([BLjava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;)Ljava/lang/String;
+#xGroupDelConsumer([BLjava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;
+#xGroupDelConsumer([BLorg/springframework/data/redis/connection/stream/Consumer;)Ljava/lang/Boolean;
+#xGroupDestroy([BLjava/lang/String;)Ljava/lang/Boolean;
+#xLen([B)Ljava/lang/Long;
+#xRange([BLorg/springframework/data/domain/Range;)Ljava/util/List;
+#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xRead([Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xRead(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroup(Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xReadGroup(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#xRevRange([BLorg/springframework/data/domain/Range;)Ljava/util/List;
+#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#xTrim([BJ)Ljava/lang/Long;
@2.3.0.RELEASE
+#xAdd(Lorg/springframework/data/redis/connection/stream/MapRecord;Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#xClaimJustId([BLjava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xClaim([BLjava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/util/List;
+#xClaim([BLjava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
+#xGroupCreate([BLjava/lang/String;Lorg/springframework/data/redis/connection/stream/ReadOffset;Z)Ljava/lang/String;
+#xInfo([B)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoStream;
+#xInfoGroups([B)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups;
+#xInfoConsumers([BLjava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers;
+#xPending([BLjava/lang/String;)Lorg/springframework/data/redis/connection/stream/PendingMessagesSummary;
+#xPending([BLorg/springframework/data/redis/connection/stream/Consumer;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending([BLjava/lang/String;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending([BLjava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending([BLorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending([BLjava/lang/String;Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#xPending([BLjava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
@2.4.0
+#xTrim([BJZ)Ljava/lang/Long;
@3.0.0
+#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
-#xRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#xRevRange([BLorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveStringCommands$BitPosCommand
@2.1.0.RELEASE
+#in(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitPosCommand;
+#within(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$BitPosCommand;
+#getBit()Z
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand
@2.0.0.RELEASE
+#within(Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withinMeters(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withinKilometers(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withinMiles(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withinFeet(D)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#within(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#from(Lorg/springframework/data/geo/Point;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withFlag(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs$Flag;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withCoord()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withDist()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#withArgs(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#limitTo(J)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#sort(Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#orderByDistanceAsc()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#orderByDistanceDesc()Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#storeAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#storeDistAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoRadiusCommand;
+#getDirection()Ljava/util/Optional;
+#getDistance()Lorg/springframework/data/geo/Distance;
+#getFlags()Ljava/util/Set;
+#getLimit()Ljava/util/Optional;
+#getPoint()Lorg/springframework/data/geo/Point;
+#getStore()Ljava/util/Optional;
+#getStoreDist()Ljava/util/Optional;
+#getArgs()Ljava/util/Optional;

+###org/springframework/data/redis/connection/BitFieldSubCommands
@2.1.0.RELEASE
+#create()Lorg/springframework/data/redis/connection/BitFieldSubCommands;
+#get(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldGetBuilder;
+#set(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSetBuilder;
+#incr(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrByBuilder;
+#getSubCommands()Ljava/util/List;
+#iterator()Ljava/util/Iterator;
@2.5.2
+#create([Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldSubCommand;)Lorg/springframework/data/redis/connection/BitFieldSubCommands;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/ReactiveRedisConnection$Command
@2.0.0.RELEASE
+#getKey()Ljava/nio/ByteBuffer;
+#getName()Ljava/lang/String;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand
@2.0.0.RELEASE
+#scoresWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand;
+#reverseScoresWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand;
+#withScores()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand;
+#limitTo(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand;
+#getRange()Lorg/springframework/data/domain/Range;
+#isWithScores()Z
+#getDirection()Lorg/springframework/data/domain/Sort$Direction;
+#getLimit()Ljava/util/Optional;
@3.0.0
+#limitTo(Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand;
-#limitTo(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByScoreCommand;

+###org/springframework/data/redis/connection/ReactiveKeyCommands
@2.0.0.RELEASE
+#exists(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#exists(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#type(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#type(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#keys(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#keys(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#randomKey()Lreactor/core/publisher/Mono;
+#rename(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#rename(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#renameNX(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#renameNX(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#del(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#del(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mDel(Ljava/util/List;)Lreactor/core/publisher/Mono;
+#mDel(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#expire(Ljava/nio/ByteBuffer;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#expire(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#pExpire(Ljava/nio/ByteBuffer;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#pExpire(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#expireAt(Ljava/nio/ByteBuffer;Ljava/time/Instant;)Lreactor/core/publisher/Mono;
+#expireAt(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#pExpireAt(Ljava/nio/ByteBuffer;Ljava/time/Instant;)Lreactor/core/publisher/Mono;
+#pExpireAt(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#persist(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#persist(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#ttl(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#ttl(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#pTtl(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#pTtl(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#move(Ljava/nio/ByteBuffer;I)Lreactor/core/publisher/Mono;
+#move(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
@2.1.0.RELEASE
+#touch(Ljava/util/Collection;)Lreactor/core/publisher/Mono;
+#touch(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#scan()Lreactor/core/publisher/Flux;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
+#unlink(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#unlink(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#mUnlink(Ljava/util/List;)Lreactor/core/publisher/Mono;
+#mUnlink(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#encodingOf(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#idletime(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#refcount(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
@2.6.0
+#copy(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Z)Lreactor/core/publisher/Mono;
+#copy(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#scan(Lorg/springframework/data/redis/core/KeyScanOptions;)Lreactor/core/publisher/Flux;

+###org/springframework/data/redis/connection/ReactivePubSubCommands
@2.1.0.RELEASE
+#createSubscription()Lreactor/core/publisher/Mono;
+#publish(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#publish(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
+#subscribe([Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#pSubscribe([Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
@2.6.0
+#createSubscription(Lorg/springframework/data/redis/connection/SubscriptionListener;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrByBuilder
@2.1.0.RELEASE
+#forType(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrByBuilder;
+#valueAt(J)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrByBuilder;
+#valueAt(Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrByBuilder;
+#overflow(Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrBy$Overflow;)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldIncrByBuilder;
+#by(J)Lorg/springframework/data/redis/connection/BitFieldSubCommands;

+###org/springframework/data/redis/connection/ReactiveHashCommands$HStrLenCommand
@2.1.0.RELEASE
+#lengthOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HStrLenCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HStrLenCommand;
+#getField()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisPoolingClientConfigurationBuilder
@2.0.0.RELEASE
+#poolConfig(Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisPoolingClientConfigurationBuilder;
+#and()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration$JedisClientConfigurationBuilder;
+#build()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;

+###org/springframework/data/redis/connection/ReactiveClusterStreamCommands
@2.2.0.RELEASE

+###org/springframework/data/redis/connection/RedisServerCommands$MigrateOption
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;

+###org/springframework/data/redis/connection/convert/StringToDataTypeConverter
@1.1.0.M2
+#<init>()V
+#convert(Ljava/lang/String;)Lorg/springframework/data/redis/connection/DataType;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/SortParameters$Range
@1.0.0.RELEASE
+#<init>(JJ)V
+#getStart()J
+#getCount()J

+###org/springframework/data/redis/stream/Cancelable
@2.2.0.RELEASE
+#cancel()V

+###org/springframework/data/redis/support/atomic/RedisAtomicDouble
@1.1.0.M2
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisConnectionFactory;D)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;D)V
+#get()D
+#set(D)V
+#getAndSet(D)D
+#compareAndSet(DD)Z
+#getAndIncrement()D
+#getAndDecrement()D
+#getAndAdd(D)D
+#incrementAndGet()D
+#decrementAndGet()D
+#addAndGet(D)D
+#toString()Ljava/lang/String;
+#getKey()Ljava/lang/String;
+#getType()Lorg/springframework/data/redis/connection/DataType;
+#getExpire()Ljava/lang/Long;
+#expire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/util/Date;)Ljava/lang/Boolean;
+#persist()Ljava/lang/Boolean;
+#rename(Ljava/lang/String;)V
+#doubleValue()D
+#floatValue()F
+#intValue()I
+#longValue()J
+#rename(Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
@2.2.0.RELEASE
+#getAndUpdate(Ljava/util/function/DoubleUnaryOperator;)D
+#getAndAccumulate(DLjava/util/function/DoubleBinaryOperator;)D
+#updateAndGet(Ljava/util/function/DoubleUnaryOperator;)D
+#accumulateAndGet(DLjava/util/function/DoubleBinaryOperator;)D

+###org/springframework/data/redis/repository/support/RedisRepositoryFactoryBean
@1.7.0.RELEASE
+#<init>()V
@1.8.0.RELEASE
+#<init>(Ljava/lang/Class;)V
-#<init>()V

+###org/springframework/data/redis/serializer/RedisElementReader
@2.0.0.RELEASE
+#read(Ljava/nio/ByteBuffer;)Ljava/lang/Object;
+#from(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisElementReader;

+###org/springframework/data/redis/listener/adapter/RedisListenerExecutionFailedException
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/springframework/data/redis/core/ReactiveStringRedisTemplate
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;)V
+#<init>(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;Lorg/springframework/data/redis/serializer/RedisSerializationContext;)V
+#<init>(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;Lorg/springframework/data/redis/serializer/RedisSerializationContext;Z)V

+###org/springframework/data/redis/core/BoundKeyOperations
@1.0.0.RELEASE
+#getKey()Ljava/lang/Object;
+#getType()Lorg/springframework/data/redis/connection/DataType;
+#getExpire()Ljava/lang/Long;
+#expire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/util/Date;)Ljava/lang/Boolean;
+#persist()Ljava/lang/Boolean;
+#rename(Ljava/lang/Object;)V
@2.3.0.RELEASE
+#expire(Ljava/time/Duration;)Ljava/lang/Boolean;
+#expireAt(Ljava/time/Instant;)Ljava/lang/Boolean;

+###org/springframework/data/redis/core/index/IndexDefinition$Condition
@1.7.0.RELEASE
+#matches(Ljava/lang/Object;Lorg/springframework/data/redis/core/index/IndexDefinition$IndexingContext;)Z

+###org/springframework/data/redis/core/index/GeoIndexed
@1.8.0.RELEASE

+###org/springframework/data/redis/core/StreamOperations
@2.2.0.RELEASE
+#acknowledge(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Long;
+#acknowledge(Ljava/lang/Object;Ljava/lang/String;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#acknowledge(Ljava/lang/String;Lorg/springframework/data/redis/connection/stream/Record;)Ljava/lang/Long;
+#add(Ljava/lang/Object;Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#add(Lorg/springframework/data/redis/connection/stream/MapRecord;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#add(Lorg/springframework/data/redis/connection/stream/Record;)Lorg/springframework/data/redis/connection/stream/RecordId;
+#delete(Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Long;
+#delete(Lorg/springframework/data/redis/connection/stream/Record;)Ljava/lang/Long;
+#delete(Ljava/lang/Object;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/lang/Long;
+#createGroup(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#createGroup(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/ReadOffset;Ljava/lang/String;)Ljava/lang/String;
+#deleteConsumer(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/Consumer;)Ljava/lang/Boolean;
+#destroyGroup(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Boolean;
+#size(Ljava/lang/Object;)Ljava/lang/Long;
+#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#read([Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#read(Ljava/lang/Class;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#read(Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#read(Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/connection/stream/Consumer;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#read(Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#read(Ljava/lang/Class;Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/redis/connection/stream/StreamReadOptions;[Lorg/springframework/data/redis/connection/stream/StreamOffset;)Ljava/util/List;
+#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;)Ljava/util/List;
+#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
+#trim(Ljava/lang/Object;J)Ljava/lang/Long;
+#getHashMapper(Ljava/lang/Class;)Lorg/springframework/data/redis/hash/HashMapper;
@2.3.0.RELEASE
+#consumers(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers;
+#groups(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups;
+#info(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoStream;
+#pending(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/PendingMessagesSummary;
+#pending(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/Consumer;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#pending(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/data/domain/Range;J)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#pending(Ljava/lang/Object;Lorg/springframework/data/redis/connection/stream/Consumer;Lorg/springframework/data/domain/Range;J)Lorg/springframework/data/redis/connection/stream/PendingMessages;
@2.4.0
+#trim(Ljava/lang/Object;JZ)Ljava/lang/Long;
@2.4.2
+#map(Lorg/springframework/data/redis/connection/stream/MapRecord;Ljava/lang/Class;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#map(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
+#deserializeRecord(Lorg/springframework/data/redis/connection/stream/ByteRecord;)Lorg/springframework/data/redis/connection/stream/MapRecord;
@2.7.9
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/util/List;
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
@3.0.0
+#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
+#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/Limit;)Ljava/util/List;
-#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/util/List;
-#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;
-#range(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#range(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#reverseRange(Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
-#reverseRange(Ljava/lang/Class;Ljava/lang/Object;Lorg/springframework/data/domain/Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/List;
@3.0.3
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;[Lorg/springframework/data/redis/connection/stream/RecordId;)Ljava/util/List;
+#claim(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;)Ljava/util/List;

+###org/springframework/data/redis/core/StringRedisTemplate
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V

+###org/springframework/data/redis/core/query/SortQuery
@1.0.0.RELEASE
+#getOrder()Lorg/springframework/data/redis/connection/SortParameters$Order;
+#isAlphabetic()Ljava/lang/Boolean;
+#getLimit()Lorg/springframework/data/redis/connection/SortParameters$Range;
+#getKey()Ljava/lang/Object;
+#getBy()Ljava/lang/String;
+#getGetPattern()Ljava/util/List;

+###org/springframework/data/redis/core/convert/Bucket$BucketPropertyPath
@2.1.0.RELEASE
+#from(Lorg/springframework/data/redis/core/convert/Bucket;)Lorg/springframework/data/redis/core/convert/Bucket$BucketPropertyPath;
+#from(Lorg/springframework/data/redis/core/convert/Bucket;Ljava/lang/String;)Lorg/springframework/data/redis/core/convert/Bucket$BucketPropertyPath;
+#get(Ljava/lang/String;)[B
+#put(Ljava/lang/String;[B)V
+#getBucket()Lorg/springframework/data/redis/core/convert/Bucket;
+#getPrefix()Ljava/lang/String;

+###org/springframework/data/redis/core/convert/KeyspaceConfiguration
@1.7.0.RELEASE
+#<init>()V
+#hasSettingsFor(Ljava/lang/Class;)Z
+#getKeyspaceSettings(Ljava/lang/Class;)Lorg/springframework/data/redis/core/convert/KeyspaceConfiguration$KeyspaceSettings;
+#addKeyspaceSettings(Lorg/springframework/data/redis/core/convert/KeyspaceConfiguration$KeyspaceSettings;)V

+###org/springframework/data/redis/connection/ReactiveListCommands$LInsertCommand
@2.0.0.RELEASE
+#value(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LInsertCommand;
+#before(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LInsertCommand;
+#after(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LInsertCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LInsertCommand;
+#getValue()Ljava/nio/ByteBuffer;
+#getPosition()Lorg/springframework/data/redis/connection/RedisListCommands$Position;
+#getPivot()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRemCommand
@2.0.0.RELEASE
+#values(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemCommand;
+#values(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemCommand;
+#getValues()Ljava/util/List;

+###org/springframework/data/redis/connection/RedisClusterNode$SlotRange
@1.7.0.RELEASE
+#<init>(Ljava/lang/Integer;Ljava/lang/Integer;)V
+#<init>(Ljava/util/Collection;)V
+#toString()Ljava/lang/String;
+#contains(I)Z
+#getSlots()Ljava/util/Set;
+#getSlotsArray()[I
@2.0.0.RELEASE
+#empty()Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;

+###org/springframework/data/redis/connection/lettuce/LettuceSentinelConnection
@1.6.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisNode;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Lcom/lambdaworks/redis/RedisClient;)V
+#failover(Lorg/springframework/data/redis/connection/NamedNode;)V
+#masters()Ljava/util/List;
+#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/List;
+#slaves(Ljava/lang/String;)Ljava/util/List;
+#remove(Lorg/springframework/data/redis/connection/NamedNode;)V
+#remove(Ljava/lang/String;)V
+#monitor(Lorg/springframework/data/redis/connection/RedisServer;)V
+#close()V
+#isOpen()Z
+#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;
+#masters()Ljava/util/Collection;
@1.7.0.RELEASE
+#<init>(Ljava/lang/String;ILcom/lambdaworks/redis/resource/ClientResources;)V
@2.0.0.RELEASE
+#<init>(Ljava/lang/String;ILio/lettuce/core/resource/ClientResources;)V
+#<init>(Lio/lettuce/core/RedisClient;)V
+#<init>(Lorg/springframework/data/redis/connection/lettuce/LettuceConnectionProvider;)V
-#<init>(Ljava/lang/String;ILcom/lambdaworks/redis/resource/ClientResources;)V
-#<init>(Lcom/lambdaworks/redis/RedisClient;)V
@3.0.0
+#replicas(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/List;
+#replicas(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;
-#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/List;
-#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;

+###org/springframework/data/redis/connection/lettuce/LettuceExceptionConverter
@1.1.0.M2
+#<init>()V
+#convert(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/lettuce/LettuceClientConfiguration
@2.0.0.RELEASE
+#isUseSsl()Z
+#isVerifyPeer()Z
+#isStartTls()Z
+#getClientResources()Ljava/util/Optional;
+#getClientOptions()Ljava/util/Optional;
+#getCommandTimeout()Ljava/time/Duration;
+#getShutdownTimeout()Ljava/time/Duration;
+#builder()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration$LettuceClientConfigurationBuilder;
+#defaultConfiguration()Lorg/springframework/data/redis/connection/lettuce/LettuceClientConfiguration;
@2.1.0.RELEASE
+#getClientName()Ljava/util/Optional;
+#getReadFrom()Ljava/util/Optional;
@2.2.0.RELEASE
+#getShutdownQuietPeriod()Ljava/time/Duration;
@3.0.0
+#getRedisCredentialsProviderFactory()Ljava/util/Optional;

+###org/springframework/data/redis/connection/lettuce/LettuceConnection
@1.0.3.RELEASE
+#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;)V
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;
+#close()V
+#isClosed()Z
+#getNativeConnection()Lcom/lambdaworks/redis/RedisAsyncConnection;
+#isQueueing()Z
+#isPipelined()Z
+#openPipeline()V
+#closePipeline()Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#dbSize()Ljava/lang/Long;
+#flushDb()V
+#flushAll()V
+#bgSave()V
+#bgWriteAof()V
+#save()V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#info()Ljava/util/Properties;
+#lastSave()Ljava/lang/Long;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
+#shutdown()V
+#echo([B)[B
+#ping()Ljava/lang/String;
+#del([[B)Ljava/lang/Long;
+#discard()V
+#exec()Ljava/util/List;
+#exists([B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#keys([B)Ljava/util/Set;
+#multi()V
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#select(I)V
+#ttl([B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#unwatch()V
+#watch([[B)V
+#get([B)[B
+#set([B[B)V
+#getSet([B[B)[B
+#append([B[B)Ljava/lang/Long;
+#mGet([[B)Ljava/util/List;
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)V
+#setEx([BJ[B)V
+#setNX([B[B)Ljava/lang/Boolean;
+#getRange([BJJ)[B
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#getBit([BJ)Ljava/lang/Boolean;
+#setBit([BJZ)V
+#setRange([B[BJ)V
+#strLen([B)Ljava/lang/Long;
+#lPush([B[B)Ljava/lang/Long;
+#rPush([B[B)Ljava/lang/Long;
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#lIndex([BJ)[B
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#lLen([B)Ljava/lang/Long;
+#lPop([B)[B
+#lRange([BJJ)Ljava/util/List;
+#lRem([BJ[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lTrim([BJJ)V
+#rPop([B)[B
+#rPopLPush([B[B)[B
+#bRPopLPush(I[B[B)[B
+#lPushX([B[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#sAdd([B[B)Ljava/lang/Boolean;
+#sCard([B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)Ljava/lang/Long;
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sMembers([B)Ljava/util/Set;
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sPop([B)[B
+#sRandMember([B)[B
+#sRem([B[B)Ljava/lang/Boolean;
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)Ljava/lang/Long;
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zCard([B)Ljava/lang/Long;
+#zCount([BDD)Ljava/lang/Long;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRank([B[B)Ljava/lang/Long;
+#zRem([B[B)Ljava/lang/Boolean;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRank([B[B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hDel([B[B)Ljava/lang/Boolean;
+#hExists([B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hGetAll([B)Ljava/util/Map;
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hLen([B)Ljava/lang/Long;
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hVals([B)Ljava/util/List;
+#publish([B[B)Ljava/lang/Long;
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#isSubscribed()Z
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#getNativeConnection()Ljava/lang/Object;
@1.0.4.RELEASE
+#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;Z)V
@1.1.0.M1
+#<init>(JLcom/lambdaworks/redis/RedisClient;)V
+#<init>(JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V
+#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V
+#info(Ljava/lang/String;)Ljava/util/Properties;
+#pExpire([BJ)Ljava/lang/Boolean;
+#pExpireAt([BJ)Ljava/lang/Boolean;
+#pTtl([B)Ljava/lang/Long;
+#dump([B)[B
+#restore([BJ[B)V
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#incrBy([BD)Ljava/lang/Double;
+#bitCount([B)Ljava/lang/Long;
+#bitCount([BJJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
+#sRandMember([BJ)Ljava/util/List;
+#hIncrBy([B[BD)Ljava/lang/Double;
+#scriptFlush()V
+#scriptKill()V
+#scriptLoad([B)Ljava/lang/String;
+#scriptExists([Ljava/lang/String;)Ljava/util/List;
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;Z)V
-#mSetNX(Ljava/util/Map;)V
@1.1.0.M2
+#lPush([B[[B)Ljava/lang/Long;
+#rPush([B[[B)Ljava/lang/Long;
+#sAdd([B[[B)Ljava/lang/Long;
+#sRem([B[[B)Ljava/lang/Long;
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;
+#zRem([B[[B)Ljava/lang/Long;
+#hDel([B[[B)Ljava/lang/Long;
+#setConvertPipelineAndTxResults(Z)V
-#lPush([B[B)Ljava/lang/Long;
-#rPush([B[B)Ljava/lang/Long;
-#sAdd([B[B)Ljava/lang/Boolean;
-#sRem([B[B)Ljava/lang/Boolean;
-#zRem([B[B)Ljava/lang/Boolean;
-#hDel([B[B)Ljava/lang/Boolean;
@1.2.0.RELEASE
+#time()Ljava/lang/Long;
@1.2.1.RELEASE
+#execute(Ljava/lang/String;Lcom/lambdaworks/redis/protocol/CommandOutput;[[B)Ljava/lang/Object;
@1.3.0.RELEASE
+#bgReWriteAof()V
*#bgWriteAof()V[deprecated]
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
+#pSetEx([BJ[B)V
+#setBit([BJZ)Ljava/lang/Boolean;
+#killClient(Ljava/lang/String;I)V
+#setClientName([B)V
+#slaveOf(Ljava/lang/String;I)V
+#getClientName()Ljava/lang/String;
+#getClientList()Ljava/util/List;
+#slaveOfNoOne()V
-#setBit([BJZ)V
@1.4.0.RELEASE
+#scan()Lorg/springframework/data/redis/core/Cursor;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#scan(JLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.5.0.RELEASE
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V
@1.6.0.RELEASE
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByLex([B)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@1.6.1.RELEASE
+#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V
@1.7.0.RELEASE
+#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/AbstractRedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
-#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V
@1.8.0.RELEASE
+#<init>(Lcom/lambdaworks/redis/api/StatefulRedisConnection;JLcom/lambdaworks/redis/RedisClient;)V
+#<init>(Lcom/lambdaworks/redis/api/StatefulRedisConnection;JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V
+#<init>(Lcom/lambdaworks/redis/api/StatefulRedisConnection;JLcom/lambdaworks/redis/AbstractRedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V
+#execute(Ljava/lang/String;Lcom/lambdaworks/redis/output/CommandOutput;[[B)Ljava/lang/Object;
+#getNativeConnection()Lcom/lambdaworks/redis/cluster/api/async/RedisClusterAsyncCommands;
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([B[[B)Ljava/util/List;
+#geoPos([B[[B)Ljava/util/List;
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([B[[B)Ljava/lang/Long;
-#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;)V
-#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V
-#<init>(Lcom/lambdaworks/redis/RedisAsyncConnection;JLcom/lambdaworks/redis/AbstractRedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V
-#execute(Ljava/lang/String;Lcom/lambdaworks/redis/protocol/CommandOutput;[[B)Ljava/lang/Object;
-#getNativeConnection()Lcom/lambdaworks/redis/RedisAsyncConnection;
@2.0.0.RELEASE
+#<init>(JLio/lettuce/core/RedisClient;)V
+#<init>(JLio/lettuce/core/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V[deprecated]
+#<init>(Lio/lettuce/core/api/StatefulRedisConnection;JLio/lettuce/core/RedisClient;)V
+#<init>(Lio/lettuce/core/api/StatefulRedisConnection;JLio/lettuce/core/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V[deprecated]
+#<init>(Lio/lettuce/core/api/StatefulRedisConnection;JLio/lettuce/core/AbstractRedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V[deprecated]
+#<init>(Lio/lettuce/core/api/StatefulRedisConnection;Lorg/springframework/data/redis/connection/lettuce/LettuceConnectionProvider;JI)V
+#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
+#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
+#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
+#scriptingCommands()Lorg/springframework/data/redis/connection/RedisScriptingCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;
+#execute(Ljava/lang/String;Lio/lettuce/core/output/CommandOutput;[[B)Ljava/lang/Object;
+#getNativeConnection()Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
-#<init>(JLcom/lambdaworks/redis/RedisClient;)V
-#<init>(JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V
-#<init>(Lcom/lambdaworks/redis/api/StatefulRedisConnection;JLcom/lambdaworks/redis/RedisClient;)V
-#<init>(Lcom/lambdaworks/redis/api/StatefulRedisConnection;JLcom/lambdaworks/redis/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V
-#<init>(Lcom/lambdaworks/redis/api/StatefulRedisConnection;JLcom/lambdaworks/redis/AbstractRedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V
-#execute(Ljava/lang/String;Lcom/lambdaworks/redis/output/CommandOutput;[[B)Ljava/lang/Object;
-#getNativeConnection()Lcom/lambdaworks/redis/cluster/api/async/RedisClusterAsyncCommands;
-#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
-#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
-#dbSize()Ljava/lang/Long;
-#flushDb()V
-#flushAll()V
-#bgSave()V
-#bgReWriteAof()V
-#bgWriteAof()V[deprecated]
-#save()V
-#getConfig(Ljava/lang/String;)Ljava/util/List;
-#info()Ljava/util/Properties;
-#info(Ljava/lang/String;)Ljava/util/Properties;
-#lastSave()Ljava/lang/Long;
-#setConfig(Ljava/lang/String;Ljava/lang/String;)V
-#resetConfigStats()V
-#shutdown()V
-#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
-#del([[B)Ljava/lang/Long;
-#exists([B)Ljava/lang/Boolean;
-#expire([BJ)Ljava/lang/Boolean;
-#expireAt([BJ)Ljava/lang/Boolean;
-#pExpire([BJ)Ljava/lang/Boolean;
-#pExpireAt([BJ)Ljava/lang/Boolean;
-#pTtl([B)Ljava/lang/Long;
-#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
-#dump([B)[B
-#restore([BJ[B)V
-#keys([B)Ljava/util/Set;
-#persist([B)Ljava/lang/Boolean;
-#move([BI)Ljava/lang/Boolean;
-#randomKey()[B
-#rename([B[B)V
-#renameNX([B[B)Ljava/lang/Boolean;
-#ttl([B)Ljava/lang/Long;
-#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
-#type([B)Lorg/springframework/data/redis/connection/DataType;
-#get([B)[B
-#set([B[B)V
-#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
-#getSet([B[B)[B
-#append([B[B)Ljava/lang/Long;
-#mGet([[B)Ljava/util/List;
-#mSet(Ljava/util/Map;)V
-#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
-#setEx([BJ[B)V
-#pSetEx([BJ[B)V
-#setNX([B[B)Ljava/lang/Boolean;
-#getRange([BJJ)[B
-#decr([B)Ljava/lang/Long;
-#decrBy([BJ)Ljava/lang/Long;
-#incr([B)Ljava/lang/Long;
-#incrBy([BJ)Ljava/lang/Long;
-#incrBy([BD)Ljava/lang/Double;
-#getBit([BJ)Ljava/lang/Boolean;
-#setBit([BJZ)Ljava/lang/Boolean;
-#setRange([B[BJ)V
-#strLen([B)Ljava/lang/Long;
-#bitCount([B)Ljava/lang/Long;
-#bitCount([BJJ)Ljava/lang/Long;
-#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
-#lPush([B[[B)Ljava/lang/Long;
-#rPush([B[[B)Ljava/lang/Long;
-#bLPop(I[[B)Ljava/util/List;
-#bRPop(I[[B)Ljava/util/List;
-#lIndex([BJ)[B
-#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
-#lLen([B)Ljava/lang/Long;
-#lPop([B)[B
-#lRange([BJJ)Ljava/util/List;
-#lRem([BJ[B)Ljava/lang/Long;
-#lSet([BJ[B)V
-#lTrim([BJJ)V
-#rPop([B)[B
-#rPopLPush([B[B)[B
-#bRPopLPush(I[B[B)[B
-#lPushX([B[B)Ljava/lang/Long;
-#rPushX([B[B)Ljava/lang/Long;
-#sAdd([B[[B)Ljava/lang/Long;
-#sCard([B)Ljava/lang/Long;
-#sDiff([[B)Ljava/util/Set;
-#sDiffStore([B[[B)Ljava/lang/Long;
-#sInter([[B)Ljava/util/Set;
-#sInterStore([B[[B)Ljava/lang/Long;
-#sIsMember([B[B)Ljava/lang/Boolean;
-#sMembers([B)Ljava/util/Set;
-#sMove([B[B[B)Ljava/lang/Boolean;
-#sPop([B)[B
-#sRandMember([B)[B
-#sRandMember([BJ)Ljava/util/List;
-#sRem([B[[B)Ljava/lang/Long;
-#sUnion([[B)Ljava/util/Set;
-#sUnionStore([B[[B)Ljava/lang/Long;
-#zAdd([BD[B)Ljava/lang/Boolean;
-#zAdd([BLjava/util/Set;)Ljava/lang/Long;
-#zCard([B)Ljava/lang/Long;
-#zCount([BDD)Ljava/lang/Long;
-#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zIncrBy([BD[B)Ljava/lang/Double;
-#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zInterStore([B[[B)Ljava/lang/Long;
-#zRange([BJJ)Ljava/util/Set;
-#zRangeWithScores([BJJ)Ljava/util/Set;
-#zRangeByScore([BDD)Ljava/util/Set;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRangeByScoreWithScores([BDD)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeWithScores([BJJ)Ljava/util/Set;
-#zRangeByScore([BDDJJ)Ljava/util/Set;
-#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
-#zRevRangeByScore([BDDJJ)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScore([BDD)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
-#zRank([B[B)Ljava/lang/Long;
-#zRem([B[[B)Ljava/lang/Long;
-#zRemRange([BJJ)Ljava/lang/Long;
-#zRemRangeByScore([BDD)Ljava/lang/Long;
-#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
-#zRevRange([BJJ)Ljava/util/Set;
-#zRevRank([B[B)Ljava/lang/Long;
-#zScore([B[B)Ljava/lang/Double;
-#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
-#zUnionStore([B[[B)Ljava/lang/Long;
-#hSet([B[B[B)Ljava/lang/Boolean;
-#hSetNX([B[B[B)Ljava/lang/Boolean;
-#hDel([B[[B)Ljava/lang/Long;
-#hExists([B[B)Ljava/lang/Boolean;
-#hGet([B[B)[B
-#hGetAll([B)Ljava/util/Map;
-#hIncrBy([B[BJ)Ljava/lang/Long;
-#hIncrBy([B[BD)Ljava/lang/Double;
-#hKeys([B)Ljava/util/Set;
-#hLen([B)Ljava/lang/Long;
-#hMGet([B[[B)Ljava/util/List;
-#hMSet([BLjava/util/Map;)V
-#hVals([B)Ljava/util/List;
-#scriptFlush()V
-#scriptKill()V
-#scriptLoad([B)Ljava/lang/String;
-#scriptExists([Ljava/lang/String;)Ljava/util/List;
-#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
-#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
-#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
-#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
-#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
-#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
-#geoHash([B[[B)Ljava/util/List;
-#geoPos([B[[B)Ljava/util/List;
-#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
-#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
-#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
-#geoRemove([B[[B)Ljava/lang/Long;
-#time()Ljava/lang/Long;
-#killClient(Ljava/lang/String;I)V
-#setClientName([B)V
-#slaveOf(Ljava/lang/String;I)V
-#getClientName()Ljava/lang/String;
-#getClientList()Ljava/util/List;
-#slaveOfNoOne()V
-#scan()Lorg/springframework/data/redis/core/Cursor;
-#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#scan(JLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#hScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#sScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zScan([BJLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
-#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
-#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
-#pfAdd([B[[B)Ljava/lang/Long;
-#pfCount([[B)Ljava/lang/Long;
-#pfMerge([B[[B)V
-#zRangeByLex([B)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
-#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
-#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
-#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
@2.2.0.RELEASE
+#streamCommands()Lorg/springframework/data/redis/connection/RedisStreamCommands;
@2.3.0.RELEASE
+#setPipeliningFlushPolicy(Lorg/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushPolicy;)V
@3.0.0
+#<init>(Lio/lettuce/core/api/StatefulRedisConnection;JLio/lettuce/core/AbstractRedisClient;I)V
+#commands()Lorg/springframework/data/redis/connection/RedisCommands;
-#<init>(JLio/lettuce/core/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V[deprecated]
-#<init>(Lio/lettuce/core/api/StatefulRedisConnection;JLio/lettuce/core/RedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;)V[deprecated]
-#<init>(Lio/lettuce/core/api/StatefulRedisConnection;JLio/lettuce/core/AbstractRedisClient;Lorg/springframework/data/redis/connection/lettuce/LettucePool;I)V[deprecated]

+###org/springframework/data/redis/connection/RedisConfiguration$WithPassword
@2.1.0.RELEASE
+#setPassword(Ljava/lang/String;)V
+#setPassword([C)V
+#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
+#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;
@2.4.0
-#setPassword(Ljava/lang/String;)V
-#setPassword([C)V
-#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
-#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;

+###org/springframework/data/redis/connection/ReactiveClusterHyperLogLogCommands
@2.0.0.RELEASE

+###org/springframework/data/redis/connection/stream/ReadOffset
@2.2.0.RELEASE
+#latest()Lorg/springframework/data/redis/connection/stream/ReadOffset;
+#lastConsumed()Lorg/springframework/data/redis/connection/stream/ReadOffset;
+#from(Ljava/lang/String;)Lorg/springframework/data/redis/connection/stream/ReadOffset;
+#from(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/ReadOffset;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getOffset()Ljava/lang/String;

+###org/springframework/data/redis/connection/BitFieldSubCommands$Offset
@2.1.0.RELEASE
+#offset(J)Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;
+#multipliedByTypeLength()Lorg/springframework/data/redis/connection/BitFieldSubCommands$Offset;
+#isZeroBased()Z
+#getValue()J
+#asString()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.5.2
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/ReactiveRedisConnection$BooleanResponse
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Boolean;)V

+###org/springframework/data/redis/connection/ReactiveHashCommands$HGetCommand
@2.0.0.RELEASE
+#field(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HGetCommand;
+#fields(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HGetCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HGetCommand;
+#getFields()Ljava/util/List;

+###org/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType
@2.1.0.RELEASE
+#signed(I)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;
+#unsigned(I)Lorg/springframework/data/redis/connection/BitFieldSubCommands$BitFieldType;
+#isSigned()Z
+#getBits()I
+#asString()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.5.2
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/ValueEncoding
@2.1.0.RELEASE
+#raw()Ljava/lang/String;
+#of(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ValueEncoding;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRankCommand
@2.0.0.RELEASE
+#indexOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRankCommand;
+#reverseIndexOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRankCommand;
+#storedWithin(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRankCommand;
+#getValue()Ljava/nio/ByteBuffer;
+#getDirection()Lorg/springframework/data/domain/Sort$Direction;

+###org/springframework/data/redis/connection/RedisConnectionCommands
@1.0.0.RELEASE
+#select(I)V
+#echo([B)[B
+#ping()Ljava/lang/String;

+###org/springframework/data/redis/connection/RedisSentinelConfiguration
@1.4.0.RELEASE
+#<init>()V
+#setSentinels(Ljava/lang/Iterable;)V
+#getSentinels()Ljava/util/Set;
+#addSentinel(Lorg/springframework/data/redis/connection/RedisNode;)V
+#setMaster(Ljava/lang/String;)V
+#setMaster(Lorg/springframework/data/redis/connection/NamedNode;)V
+#getMaster()Lorg/springframework/data/redis/connection/NamedNode;
+#master(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;
+#master(Lorg/springframework/data/redis/connection/NamedNode;)Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;
+#sentinel(Lorg/springframework/data/redis/connection/RedisNode;)Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;
+#sentinel(Ljava/lang/String;Ljava/lang/Integer;)Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;
@1.4.3.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/Set;)V
+#<init>(Lorg/springframework/core/env/PropertySource;)V
@2.0.0.RELEASE
+#getDatabase()I
+#setDatabase(I)V
+#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;
+#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
@2.1.0.RELEASE
-#setMaster(Ljava/lang/String;)V
@2.2.2.RELEASE
+#setSentinelPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
+#getSentinelPassword()Lorg/springframework/data/redis/connection/RedisPassword;
@2.4.0
+#setUsername(Ljava/lang/String;)V
+#getUsername()Ljava/lang/String;
@2.5.3
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.7.0
+#getSentinelUsername()Ljava/lang/String;
+#setSentinelUsername(Ljava/lang/String;)V

+###org/springframework/data/redis/connection/StringRedisConnection$StringTuple
@1.0.0.RELEASE
+#getValueAsString()Ljava/lang/String;

+###org/springframework/data/redis/connection/jedis/JedisSentinelConnection
@1.4.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisNode;)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Lredis/clients/jedis/Jedis;)V
+#failover(Lorg/springframework/data/redis/connection/NamedNode;)V
+#masters()Ljava/util/List;
+#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/List;
+#slaves(Ljava/lang/String;)Ljava/util/List;
+#remove(Lorg/springframework/data/redis/connection/NamedNode;)V
+#remove(Ljava/lang/String;)V
+#monitor(Lorg/springframework/data/redis/connection/RedisServer;)V
+#close()V
+#isOpen()Z
+#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;
+#masters()Ljava/util/Collection;
@3.0.0
+#replicas(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/List;
+#replicas(Ljava/lang/String;)Ljava/util/List;
+#replicas(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;
-#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/List;
-#slaves(Ljava/lang/String;)Ljava/util/List;
-#slaves(Lorg/springframework/data/redis/connection/NamedNode;)Ljava/util/Collection;

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoPosCommand
@2.0.0.RELEASE
+#member(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoPosCommand;
+#members(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoPosCommand;
+#of(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoPosCommand;
+#getMembers()Ljava/util/List;

+###org/springframework/data/redis/connection/RedisListCommands
@1.0.0.RELEASE
+#rPush([B[B)Ljava/lang/Long;
+#lPush([B[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#lPushX([B[B)Ljava/lang/Long;
+#lLen([B)Ljava/lang/Long;
+#lRange([BJJ)Ljava/util/List;
+#lTrim([BJJ)V
+#lIndex([BJ)[B
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lRem([BJ[B)Ljava/lang/Long;
+#lPop([B)[B
+#rPop([B)[B
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#rPopLPush([B[B)[B
+#bRPopLPush(I[B[B)[B
@1.1.0.M2
+#rPush([B[[B)Ljava/lang/Long;
+#lPush([B[[B)Ljava/lang/Long;
-#rPush([B[B)Ljava/lang/Long;
-#lPush([B[B)Ljava/lang/Long;
@2.4.0
+#lPos([B[B)Ljava/lang/Long;
+#lPos([B[BLjava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;
@2.6.0
+#lMove([B[BLorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;)[B
+#bLMove([B[BLorg/springframework/data/redis/connection/RedisListCommands$Direction;Lorg/springframework/data/redis/connection/RedisListCommands$Direction;D)[B
+#lPop([BJ)Ljava/util/List;
+#rPop([BJ)Ljava/util/List;

+###org/springframework/data/redis/connection/convert/StringToRedisClientInfoConverter
@1.3.0.RELEASE
+#<init>()V
+#convert([Ljava/lang/String;)Ljava/util/List;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/stream/Task$State
@2.2.0.RELEASE
+#values()[Lorg/springframework/data/redis/stream/Task$State;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/stream/Task$State;

+###org/springframework/data/redis/repository/support/QueryByExampleRedisExecutor
@2.1.0.RELEASE
+#<init>(Lorg/springframework/data/repository/core/EntityInformation;Lorg/springframework/data/redis/core/RedisKeyValueTemplate;)V
+#<init>(Lorg/springframework/data/repository/core/EntityInformation;Lorg/springframework/data/redis/core/RedisKeyValueTemplate;Lorg/springframework/data/redis/core/convert/IndexResolver;)V
+#findOne(Lorg/springframework/data/domain/Example;)Ljava/util/Optional;
+#findAll(Lorg/springframework/data/domain/Example;)Ljava/lang/Iterable;
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
+#findAll(Lorg/springframework/data/domain/Example;Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
+#count(Lorg/springframework/data/domain/Example;)J
+#exists(Lorg/springframework/data/domain/Example;)Z
@2.6.0
+#setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V
+#setBeanClassLoader(Ljava/lang/ClassLoader;)V
+#findBy(Lorg/springframework/data/domain/Example;Ljava/util/function/Function;)Ljava/lang/Object;

+###org/springframework/data/redis/serializer/RedisElementWriter
@2.0.0.RELEASE
+#write(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
+#from(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/serializer/RedisElementWriter;

+###org/springframework/data/redis/core/ReactiveRedisTemplate
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;Lorg/springframework/data/redis/serializer/RedisSerializationContext;)V
+#<init>(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;Lorg/springframework/data/redis/serializer/RedisSerializationContext;Z)V
+#getConnectionFactory()Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;
+#opsForValue()Lorg/springframework/data/redis/core/ReactiveValueOperations;
+#opsForValue(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveValueOperations;
+#opsForList()Lorg/springframework/data/redis/core/ReactiveListOperations;
+#opsForList(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveListOperations;
+#opsForSet()Lorg/springframework/data/redis/core/ReactiveSetOperations;
+#opsForSet(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveSetOperations;
+#opsForZSet()Lorg/springframework/data/redis/core/ReactiveZSetOperations;
+#opsForZSet(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveZSetOperations;
+#opsForHyperLogLog()Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;
+#opsForHyperLogLog(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveHyperLogLogOperations;
+#opsForHash()Lorg/springframework/data/redis/core/ReactiveHashOperations;
+#opsForHash(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveHashOperations;
+#opsForGeo()Lorg/springframework/data/redis/core/ReactiveGeoOperations;
+#opsForGeo(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveGeoOperations;
+#execute(Lorg/springframework/data/redis/core/ReactiveRedisCallback;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/ReactiveRedisCallback;Z)Lreactor/core/publisher/Flux;
+#createFlux(Lorg/springframework/data/redis/core/ReactiveRedisCallback;)Lreactor/core/publisher/Flux;
+#createMono(Lorg/springframework/data/redis/core/ReactiveRedisCallback;)Lreactor/core/publisher/Mono;
+#hasKey(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#type(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#keys(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
+#randomKey()Lreactor/core/publisher/Mono;
+#rename(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#renameIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#delete([Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#delete(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#expire(Ljava/lang/Object;Ljava/time/Duration;)Lreactor/core/publisher/Mono;
+#expireAt(Ljava/lang/Object;Ljava/time/Instant;)Lreactor/core/publisher/Mono;
+#persist(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#getExpire(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#move(Ljava/lang/Object;I)Lreactor/core/publisher/Mono;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;)Lreactor/core/publisher/Flux;
+#execute(Lorg/springframework/data/redis/core/script/RedisScript;Ljava/util/List;Ljava/util/List;Lorg/springframework/data/redis/serializer/RedisElementWriter;Lorg/springframework/data/redis/serializer/RedisElementReader;)Lreactor/core/publisher/Flux;
+#getSerializationContext()Lorg/springframework/data/redis/serializer/RedisSerializationContext;
@2.1.0.RELEASE
+#convertAndSend(Ljava/lang/String;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#listenTo([Lorg/springframework/data/redis/listener/Topic;)Lreactor/core/publisher/Flux;
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lreactor/core/publisher/Flux;
+#unlink([Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#unlink(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
@2.2.0.RELEASE
+#opsForStream()Lorg/springframework/data/redis/core/ReactiveStreamOperations;
+#opsForStream(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/core/ReactiveStreamOperations;
+#opsForStream(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/core/ReactiveStreamOperations;
@2.6.0
+#executeInSession(Lorg/springframework/data/redis/core/ReactiveRedisSessionCallback;)Lreactor/core/publisher/Flux;
+#listenToLater([Lorg/springframework/data/redis/listener/Topic;)Lreactor/core/publisher/Mono;
+#copy(Ljava/lang/Object;Ljava/lang/Object;Z)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/core/index/RedisIndexDefinition$OrCondition
@1.7.0.RELEASE
+#<init>(Ljava/util/Collection;)V
+#matches(Ljava/lang/Object;Lorg/springframework/data/redis/core/index/IndexDefinition$IndexingContext;)Z

+###org/springframework/data/redis/core/index/RedisIndexDefinition$LowercaseIndexValueTransformer
@1.7.0.RELEASE
+#values()[Lorg/springframework/data/redis/core/index/RedisIndexDefinition$LowercaseIndexValueTransformer;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/core/index/RedisIndexDefinition$LowercaseIndexValueTransformer;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/core/query/SortCriterion
@1.0.0.RELEASE
+#limit(JJ)Lorg/springframework/data/redis/core/query/SortCriterion;
+#limit(Lorg/springframework/data/redis/connection/SortParameters$Range;)Lorg/springframework/data/redis/core/query/SortCriterion;
+#order(Lorg/springframework/data/redis/connection/SortParameters$Order;)Lorg/springframework/data/redis/core/query/SortCriterion;
+#alphabetical(Z)Lorg/springframework/data/redis/core/query/SortCriterion;
+#get(Ljava/lang/String;)Lorg/springframework/data/redis/core/query/SortCriterion;
+#build()Lorg/springframework/data/redis/core/query/SortQuery;

+###org/springframework/data/redis/core/HashOperations
@1.0.0.RELEASE
+#delete(Ljava/lang/Object;Ljava/lang/Object;)V
+#hasKey(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#get(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#multiGet(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;
+#increment(Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Long;
+#keys(Ljava/lang/Object;)Ljava/util/Set;
+#size(Ljava/lang/Object;)Ljava/lang/Long;
+#putAll(Ljava/lang/Object;Ljava/util/Map;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
+#values(Ljava/lang/Object;)Ljava/util/Collection;
+#entries(Ljava/lang/Object;)Ljava/util/Map;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@1.0.1.RELEASE
+#multiGet(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/List;
+#values(Ljava/lang/Object;)Ljava/util/List;
-#multiGet(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;
-#values(Ljava/lang/Object;)Ljava/util/Collection;
@1.1.0.M1
+#increment(Ljava/lang/Object;Ljava/lang/Object;D)Ljava/lang/Double;
@1.1.0.M2
+#delete(Ljava/lang/Object;[Ljava/lang/Object;)V
-#delete(Ljava/lang/Object;Ljava/lang/Object;)V
@1.4.0.RELEASE
+#scan(Ljava/lang/Object;Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.7.0.RELEASE
+#delete(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
-#delete(Ljava/lang/Object;[Ljava/lang/Object;)V
@2.1.0.RELEASE
+#lengthOfValue(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Long;
@2.6.0
+#randomKey(Ljava/lang/Object;)Ljava/lang/Object;
+#randomEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#randomKeys(Ljava/lang/Object;J)Ljava/util/List;
+#randomEntries(Ljava/lang/Object;J)Ljava/util/Map;

+###org/springframework/data/redis/cache/RedisCacheManager
@1.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisTemplate;)V
+#getCache(Ljava/lang/String;)Lorg/springframework/cache/Cache;
+#getCacheNames()Ljava/util/Collection;
+#setCachePrefix(Lorg/springframework/data/redis/cache/RedisCachePrefix;)V
@1.0.2.RELEASE
+#setUsePrefix(Z)V
+#setDefaultExpiration(J)V
+#setExpires(Ljava/util/Map;)V
@1.2.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisTemplate;Ljava/util/Collection;)V
+#setCacheNames(Ljava/util/Collection;)V
+#setLoadRemoteCachesOnStartup(Z)V
-#getCacheNames()Ljava/util/Collection;
@1.3.6.RELEASE
+#afterPropertiesSet()V
@1.4.0.RELEASE
-#afterPropertiesSet()V
@1.4.3.RELEASE
+#afterPropertiesSet()V
@1.6.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;Ljava/util/Collection;)V
-#<init>(Lorg/springframework/data/redis/core/RedisTemplate;)V
-#<init>(Lorg/springframework/data/redis/core/RedisTemplate;Ljava/util/Collection;)V
@1.8.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisOperations;Ljava/util/Collection;Z)V
-#getCache(Ljava/lang/String;)Lorg/springframework/cache/Cache;
-#afterPropertiesSet()V
@2.0.0.RELEASE
+#<init>(Lorg/springframework/data/redis/cache/RedisCacheWriter;Lorg/springframework/data/redis/cache/RedisCacheConfiguration;)V
+#<init>(Lorg/springframework/data/redis/cache/RedisCacheWriter;Lorg/springframework/data/redis/cache/RedisCacheConfiguration;[Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/redis/cache/RedisCacheWriter;Lorg/springframework/data/redis/cache/RedisCacheConfiguration;Ljava/util/Map;)V
+#create(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/cache/RedisCacheManager;
+#builder(Lorg/springframework/data/redis/connection/RedisConnectionFactory;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#builder(Lorg/springframework/data/redis/cache/RedisCacheWriter;)Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;
+#getCacheConfigurations()Ljava/util/Map;
-#<init>(Lorg/springframework/data/redis/core/RedisOperations;)V
-#<init>(Lorg/springframework/data/redis/core/RedisOperations;Ljava/util/Collection;)V
-#<init>(Lorg/springframework/data/redis/core/RedisOperations;Ljava/util/Collection;Z)V
-#setCacheNames(Ljava/util/Collection;)V
-#setUsePrefix(Z)V
-#setCachePrefix(Lorg/springframework/data/redis/cache/RedisCachePrefix;)V
-#setDefaultExpiration(J)V
-#setExpires(Ljava/util/Map;)V
-#setLoadRemoteCachesOnStartup(Z)V
@2.0.4.RELEASE
+#<init>(Lorg/springframework/data/redis/cache/RedisCacheWriter;Lorg/springframework/data/redis/cache/RedisCacheConfiguration;Z[Ljava/lang/String;)V
+#<init>(Lorg/springframework/data/redis/cache/RedisCacheWriter;Lorg/springframework/data/redis/cache/RedisCacheConfiguration;Ljava/util/Map;Z)V
@2.3.0.RELEASE
+#builder()Lorg/springframework/data/redis/cache/RedisCacheManager$RedisCacheManagerBuilder;

+###org/springframework/data/redis/connection/ReactiveClusterServerCommands
@2.0.0.RELEASE
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#lastSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#dbSize(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#info(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#getConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#setConfig(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/String;Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#resetConfigStats(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#time(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#getClientList(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Flux;
@2.7.0
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)Lreactor/core/publisher/Mono;
+#flushAll(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;)Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/connection/SortParameters
@1.0.0.RELEASE
+#getOrder()Lorg/springframework/data/redis/connection/SortParameters$Order;
+#isAlphabetic()Ljava/lang/Boolean;
+#getByPattern()[B
+#getGetPattern()[[B
+#getLimit()Lorg/springframework/data/redis/connection/SortParameters$Range;

+###org/springframework/data/redis/connection/RedisPipelineException
@1.0.1.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/List;)V
+#<init>(Ljava/lang/Exception;Ljava/util/List;)V
+#<init>(Ljava/lang/Exception;)V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getPipelineResult()Ljava/util/List;

+###org/springframework/data/redis/connection/lettuce/LettuceConnectionProvider
@2.0.0.RELEASE
+#getConnection(Ljava/lang/Class;)Lio/lettuce/core/api/StatefulConnection;
+#release(Lio/lettuce/core/api/StatefulConnection;)V
@2.2.0.RELEASE
+#getConnectionAsync(Ljava/lang/Class;)Ljava/util/concurrent/CompletionStage;
+#releaseAsync(Lio/lettuce/core/api/StatefulConnection;)Ljava/util/concurrent/CompletableFuture;

+###org/springframework/data/redis/connection/ReactiveRedisConnection$AbsentByteBufferResponse
@2.0.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#isPresent()Z

+###org/springframework/data/redis/connection/RedisStringCommands$BitOperation
@1.1.0.M1
+#values()[Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;

+###org/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfMergeCommand
@2.0.0.RELEASE
+#valuesIn(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfMergeCommand;
+#into(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHyperLogLogCommands$PfMergeCommand;
+#getSourceKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/stream/StreamReadOptions
@2.2.0.RELEASE
+#empty()Lorg/springframework/data/redis/connection/stream/StreamReadOptions;
+#noack()Lorg/springframework/data/redis/connection/stream/StreamReadOptions;
+#block(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/stream/StreamReadOptions;
+#count(J)Lorg/springframework/data/redis/connection/stream/StreamReadOptions;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getBlock()Ljava/lang/Long;
+#getCount()Ljava/lang/Long;
+#isNoack()Z
@2.2.5.RELEASE
+#autoAcknowledge()Lorg/springframework/data/redis/connection/stream/StreamReadOptions;
@2.3.0.RELEASE
+#isBlocking()Z

+###org/springframework/data/redis/connection/stream/Record
@2.2.0.RELEASE
+#getStream()Ljava/lang/Object;
+#getId()Lorg/springframework/data/redis/connection/stream/RecordId;
+#getValue()Ljava/lang/Object;
+#of(Ljava/util/Map;)Lorg/springframework/data/redis/connection/stream/MapRecord;
+#of(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/ObjectRecord;
+#withId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/stream/Record;
+#withStreamKey(Ljava/lang/Object;)Lorg/springframework/data/redis/connection/stream/Record;
@3.0.0
+#getRequiredStream()Ljava/lang/Object;

+###org/springframework/data/redis/connection/ReactiveSetCommands$SInterStoreCommand
@2.0.0.RELEASE
+#keys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SInterStoreCommand;
+#storeAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SInterStoreCommand;
+#getKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByLexCommand
@2.0.0.RELEASE
+#stringsWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByLexCommand;
+#reverseStringsWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByLexCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByLexCommand;
+#limitTo(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByLexCommand;
+#getRange()Lorg/springframework/data/domain/Range;
+#getLimit()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
+#getDirection()Lorg/springframework/data/domain/Sort$Direction;
@3.0.0
+#limitTo(Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByLexCommand;
+#getLimit()Lorg/springframework/data/redis/connection/Limit;
-#limitTo(Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeByLexCommand;
-#getLimit()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;

+###org/springframework/data/redis/connection/RedisZSetCommands$Tuple
@1.0.0.RELEASE
+#getValue()[B
+#getScore()Ljava/lang/Double;
@3.0.0
-###org/springframework/data/redis/connection/RedisZSetCommands$Tuple

+###org/springframework/data/redis/connection/RedisConfiguration$WithHostAndPort
@2.1.0.RELEASE
+#setHostName(Ljava/lang/String;)V
+#getHostName()Ljava/lang/String;
+#setPort(I)V
+#getPort()I

+###org/springframework/data/redis/connection/RedisTxCommands
@1.0.0.RELEASE
+#multi()V
+#exec()Ljava/util/List;
+#discard()V
+#watch([[B)V
+#unwatch()V

+###org/springframework/data/redis/connection/RedisConfiguration$ClusterConfiguration
@2.1.0.RELEASE
+#getClusterNodes()Ljava/util/Set;
+#getMaxRedirects()Ljava/lang/Integer;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZScoreCommand
@2.0.0.RELEASE
+#scoreOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZScoreCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZScoreCommand;
+#getValue()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord
@2.2.0.RELEASE
+#of(Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#body(Ljava/util/Map;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#getBody()Ljava/util/Map;
+#getRecord()Lorg/springframework/data/redis/connection/stream/ByteBufferRecord;
@2.3.0.RELEASE
+#maxlen(J)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#getMaxlen()Ljava/lang/Long;
+#hasMaxlen()Z
@2.6.0
+#makeNoStream()Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#makeNoStream(Z)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#isNoMkStream()Z
@2.7.0
+#minId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#approximateTrimming(Z)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$AddStreamRecord;
+#isApproximateTrimming()Z
+#getMinId()Lorg/springframework/data/redis/connection/stream/RecordId;
+#hasMinId()Z

+###org/springframework/data/redis/connection/DefaultMessage
@1.0.0.RELEASE
+#<init>([B[B)V
+#getChannel()[B
+#getBody()[B
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/jedis/JedisConnectionFactory
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lredis/clients/jedis/JedisShardInfo;)V
+#<init>(Lredis/clients/jedis/JedisPoolConfig;)V
+#afterPropertiesSet()V
+#destroy()V
+#getConnection()Lorg/springframework/data/redis/connection/jedis/JedisConnection;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getShardInfo()Lredis/clients/jedis/JedisShardInfo;
+#setShardInfo(Lredis/clients/jedis/JedisShardInfo;)V
+#getTimeout()I
+#setTimeout(I)V
+#getUsePool()Z
+#setUsePool(Z)V
+#getPoolConfig()Lredis/clients/jedis/JedisPoolConfig;
+#setPoolConfig(Lredis/clients/jedis/JedisPoolConfig;)V
+#getDatabase()I
+#setDatabase(I)V
+#getConnection()Lorg/springframework/data/redis/connection/RedisConnection;
@1.1.0.M2
+#getConvertPipelineAndTxResults()Z
+#setConvertPipelineAndTxResults(Z)V
@1.4.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;Lredis/clients/jedis/JedisPoolConfig;)V
+#isRedisSentinelAware()Z
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterConfiguration;Lredis/clients/jedis/JedisPoolConfig;)V
+#getClusterConnection()Lorg/springframework/data/redis/connection/RedisClusterConnection;
-#getConnection()Lorg/springframework/data/redis/connection/jedis/JedisConnection;
@1.8.0.RELEASE
+#setUseSsl(Z)V
+#isUseSsl()Z
+#getClientName()Ljava/lang/String;
+#setClientName(Ljava/lang/String;)V
@2.0.0.RELEASE
*#<init>(Lredis/clients/jedis/JedisShardInfo;)V[deprecated]
+#<init>(Lorg/springframework/data/redis/connection/RedisStandaloneConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisStandaloneConfiguration;Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;)V
+#<init>(Lorg/springframework/data/redis/connection/RedisClusterConfiguration;Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;)V
*#setHostName(Ljava/lang/String;)V[deprecated]
*#setUseSsl(Z)V[deprecated]
*#setPassword(Ljava/lang/String;)V[deprecated]
*#setPort(I)V[deprecated]
*#getShardInfo()Lredis/clients/jedis/JedisShardInfo;[deprecated]
*#setShardInfo(Lredis/clients/jedis/JedisShardInfo;)V[deprecated]
*#setTimeout(I)V[deprecated]
*#setUsePool(Z)V[deprecated]
+#getPoolConfig()Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;
*#setPoolConfig(Lredis/clients/jedis/JedisPoolConfig;)V[deprecated]
*#setDatabase(I)V[deprecated]
*#setClientName(Ljava/lang/String;)V[deprecated]
+#getClientConfiguration()Lorg/springframework/data/redis/connection/jedis/JedisClientConfiguration;
+#getStandaloneConfiguration()Lorg/springframework/data/redis/connection/RedisStandaloneConfiguration;
+#getSentinelConfiguration()Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;
+#getClusterConfiguration()Lorg/springframework/data/redis/connection/RedisClusterConfiguration;
+#isRedisClusterAware()Z
-#getPoolConfig()Lredis/clients/jedis/JedisPoolConfig;
@3.0.0
-#<init>(Lredis/clients/jedis/JedisShardInfo;)V[deprecated]
-#getShardInfo()Lredis/clients/jedis/JedisShardInfo;[deprecated]
-#setShardInfo(Lredis/clients/jedis/JedisShardInfo;)V[deprecated]

+###org/springframework/data/redis/connection/jedis/JedisUtils
@1.0.0.RELEASE
+#<init>()V
+#convertJedisAccessException(Lredis/clients/jedis/exceptions/JedisException;)Lorg/springframework/dao/DataAccessException;
+#convertJedisAccessException(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
@3.0.0
-###org/springframework/data/redis/connection/jedis/JedisUtils

+###org/springframework/data/redis/connection/jedis/JedisExceptionConverter
@1.1.0.M2
+#<init>()V
+#convert(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/connection/RedisZSetCommands$Limit
@1.6.0.RELEASE
+#<init>()V
+#limit()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
+#offset(I)Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
+#count(I)Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
+#getCount()I
+#getOffset()I
@2.0.0.RELEASE
+#isUnlimited()Z
+#unlimited()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
@3.0.0
-#limit()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
-#offset(I)Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
-#count(I)Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;
-#getCount()I
-#getOffset()I
-#isUnlimited()Z
-#unlimited()Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand
@2.0.0.RELEASE
+#sets(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
+#applyWeights(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
+#storeAs(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
+#getSourceKeys()Ljava/util/List;
+#getWeights()Ljava/util/List;
+#getAggregateFunction()Ljava/util/Optional;
@2.1.0.RELEASE
+#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
@2.6.0
+#storeAs(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#getSourceKeys()Ljava/util/List;
-#getWeights()Ljava/util/List;
-#getAggregateFunction()Ljava/util/Optional;
@3.0.0
+#applyWeights(Lorg/springframework/data/redis/connection/zset/Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/zset/Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/zset/Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Lorg/springframework/data/redis/connection/zset/Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
-#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZInterStoreCommand;
-#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;

+###org/springframework/data/redis/connection/convert/MapConverter
@1.1.0.M2
+#<init>(Lorg/springframework/core/convert/converter/Converter;)V
+#convert(Ljava/util/Map;)Ljava/util/Map;
+#convert(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder
@2.2.0.RELEASE
+#pollTimeout(Ljava/time/Duration;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#batchSize(I)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#serializer(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#serializer(Lorg/springframework/data/redis/serializer/RedisSerializationContext;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#keySerializer(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#hashKeySerializer(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#hashValueSerializer(Lorg/springframework/data/redis/serializer/RedisSerializationContext$SerializationPair;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#targetType(Ljava/lang/Class;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#objectMapper(Lorg/springframework/data/redis/hash/HashMapper;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;
+#build()Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptions;
@2.4.2
+#onErrorResume(Ljava/util/function/Function;)Lorg/springframework/data/redis/stream/StreamReceiver$StreamReceiverOptionsBuilder;

+###org/springframework/data/redis/support/atomic/RedisAtomicInteger
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisConnectionFactory;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/connection/RedisConnectionFactory;I)V
+#get()I
+#set(I)V
+#getAndSet(I)I
+#compareAndSet(II)Z
+#getAndIncrement()I
+#getAndDecrement()I
+#getAndAdd(I)I
+#incrementAndGet()I
+#decrementAndGet()I
+#addAndGet(I)I
+#toString()Ljava/lang/String;
+#intValue()I
+#longValue()J
+#floatValue()F
+#doubleValue()D
+#getKey()Ljava/lang/String;
+#expire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/util/Date;)Ljava/lang/Boolean;
+#getExpire()Ljava/lang/Long;
+#persist()Ljava/lang/Boolean;
+#rename(Ljava/lang/String;)V
+#getType()Lorg/springframework/data/redis/connection/DataType;
+#rename(Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
@1.0.3.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;I)V
@2.2.0.RELEASE
+#getAndUpdate(Ljava/util/function/IntUnaryOperator;)I
+#getAndAccumulate(ILjava/util/function/IntBinaryOperator;)I
+#updateAndGet(Ljava/util/function/IntUnaryOperator;)I
+#accumulateAndGet(ILjava/util/function/IntBinaryOperator;)I

+###org/springframework/data/redis/support/collections/DefaultRedisMap
@1.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisOperations;)V
+#<init>(Lorg/springframework/data/redis/core/BoundHashOperations;)V
+#increment(Ljava/lang/Object;J)Ljava/lang/Long;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
+#values()Ljava/util/Collection;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#expire(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Boolean;
+#expireAt(Ljava/util/Date;)Ljava/lang/Boolean;
+#getExpire()Ljava/lang/Long;
+#persist()Ljava/lang/Boolean;
+#getKey()Ljava/lang/String;
+#rename(Ljava/lang/String;)V
+#getType()Lorg/springframework/data/redis/connection/DataType;
+#rename(Ljava/lang/Object;)V
+#getKey()Ljava/lang/Object;
@1.1.0.M1
+#increment(Ljava/lang/Object;D)Ljava/lang/Double;
@1.4.0.RELEASE
+#scan()Lorg/springframework/data/redis/core/Cursor;
+#scan()Ljava/util/Iterator;
@2.6.0
+#randomKey()Ljava/lang/Object;
+#randomEntry()Ljava/util/Map$Entry;

+###org/springframework/data/redis/core/RedisConnectionUtils$RedisConnectionProxy
@2.4.7
+#getTargetConnection()Lorg/springframework/data/redis/connection/RedisConnection;

+###org/springframework/data/redis/core/KeyScanOptions
@2.6.0
+#scanOptions(Lorg/springframework/data/redis/connection/DataType;)Lorg/springframework/data/redis/core/ScanOptions$ScanOptionsBuilder;
+#getType()Ljava/lang/String;
+#toOptionString()Ljava/lang/String;

+###org/springframework/data/redis/core/script/RedisScriptExtensionsKt
@2.6.1
+#RedisScript(Ljava/lang/String;)Lorg/springframework/data/redis/core/script/RedisScript;
+#RedisScript(Lorg/springframework/core/io/Resource;)Lorg/springframework/data/redis/core/script/RedisScript;

+###org/springframework/data/redis/core/ListOperations$MoveTo
@2.6.0
+#toHead(Ljava/lang/Object;)Lorg/springframework/data/redis/core/ListOperations$MoveTo;
+#toTail(Ljava/lang/Object;)Lorg/springframework/data/redis/core/ListOperations$MoveTo;

+###org/springframework/data/redis/core/ListOperations$MoveFrom
@2.6.0
+#fromHead(Ljava/lang/Object;)Lorg/springframework/data/redis/core/ListOperations$MoveFrom;
+#fromTail(Ljava/lang/Object;)Lorg/springframework/data/redis/core/ListOperations$MoveFrom;

+###org/springframework/data/redis/core/PartialUpdateExtensionsKt
@2.6.1
+#PartialUpdate(Ljava/lang/Object;)Lorg/springframework/data/redis/core/PartialUpdate;

+###org/springframework/data/redis/core/RedisKeyValueAdapter$ShadowCopy
@2.4.0
+#values()[Lorg/springframework/data/redis/core/RedisKeyValueAdapter$ShadowCopy;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/core/RedisKeyValueAdapter$ShadowCopy;

+###org/springframework/data/redis/core/ReactiveRedisSessionCallback
@2.6.0
+#doWithOperations(Lorg/springframework/data/redis/core/ReactiveRedisOperations;)Lorg/reactivestreams/Publisher;

+###org/springframework/data/redis/cache/CacheStatisticsCollector
@2.4.0
+#incPuts(Ljava/lang/String;)V
+#incGets(Ljava/lang/String;)V
+#incHits(Ljava/lang/String;)V
+#incMisses(Ljava/lang/String;)V
+#incDeletes(Ljava/lang/String;)V
+#incDeletesBy(Ljava/lang/String;I)V
+#incLockTime(Ljava/lang/String;J)V
+#reset(Ljava/lang/String;)V
+#none()Lorg/springframework/data/redis/cache/CacheStatisticsCollector;
+#create()Lorg/springframework/data/redis/cache/CacheStatisticsCollector;

+###org/springframework/data/redis/cache/CacheStatistics
@2.4.0
+#getCacheName()Ljava/lang/String;
+#getPuts()J
+#getGets()J
+#getHits()J
+#getMisses()J
+#getPending()J
+#getDeletes()J
+#getLockWaitDuration(Ljava/util/concurrent/TimeUnit;)J
+#getSince()Ljava/time/Instant;
+#getLastReset()Ljava/time/Instant;
+#getTime()Ljava/time/Instant;

+###org/springframework/data/redis/cache/CacheStatisticsProvider
@2.4.0
+#getCacheStatistics(Ljava/lang/String;)Lorg/springframework/data/redis/cache/CacheStatistics;

+###org/springframework/data/redis/cache/BatchStrategy
@2.6.0
+#cleanCache(Lorg/springframework/data/redis/connection/RedisConnection;Ljava/lang/String;[B)J

+###org/springframework/data/redis/cache/BatchStrategies
@2.6.0
+#keys()Lorg/springframework/data/redis/cache/BatchStrategy;
+#scan(I)Lorg/springframework/data/redis/cache/BatchStrategy;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$XInfoCommand
@2.3.0.RELEASE
+#of(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$XInfoCommand;
+#consumersIn(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$XInfoCommand;
+#getGroupName()Ljava/lang/String;

+###org/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs
@2.5.0
+#empty()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#ifNotExists()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#ifExists()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#nx()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#xx()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#lt()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#gt()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#ch()Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs;
+#contains(Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs$Flag;)Z
+#isEmpty()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByLexCommand
@2.5.0
+#lexWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByLexCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRemRangeByLexCommand;
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchStoreCommand
@2.6.0
+#within(Lorg/springframework/data/redis/domain/geo/GeoShape;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchStoreCommand;
+#at(Lorg/springframework/data/redis/domain/geo/GeoReference;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchStoreCommand;
+#in(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchStoreCommand;
+#storeAt(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchStoreCommand;
+#with(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchStoreCommand;
+#getDestKey()Ljava/nio/ByteBuffer;
+#getArgs()Ljava/util/Optional;
+#getReference()Lorg/springframework/data/redis/domain/geo/GeoReference;
+#getShape()Lorg/springframework/data/redis/domain/geo/GeoShape;

+###org/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushState
@2.3.0.RELEASE
+#onOpen(Lio/lettuce/core/api/StatefulConnection;)V
+#onCommand(Lio/lettuce/core/api/StatefulConnection;)V
+#onClose(Lio/lettuce/core/api/StatefulConnection;)V

+###org/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushPolicy
@2.3.0.RELEASE
+#flushEachCommand()Lorg/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushPolicy;
+#flushOnClose()Lorg/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushPolicy;
+#buffered(I)Lorg/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushPolicy;
+#newPipeline()Lorg/springframework/data/redis/connection/lettuce/LettuceConnection$PipeliningFlushState;

+###org/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs
@2.6.0
+#newGeoSearchArgs()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#includeCoordinates()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#includeDistance()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#sort(Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#sortAscending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#sortDescending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#limit(J)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#limit(JZ)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;
+#getFlags()Ljava/util/Set;
+#getLimit()Ljava/lang/Long;
+#getSortDirection()Lorg/springframework/data/domain/Sort$Direction;
+#hasAnyLimit()Z

+###org/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs
@2.6.0
+#newGeoSearchStoreArgs()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;
+#storeDistance()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;
+#sort(Lorg/springframework/data/domain/Sort$Direction;)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;
+#sortAscending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;
+#sortDescending()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;
+#limit(J)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;
+#limit(JZ)Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchStoreCommandArgs;
+#getFlags()Ljava/util/Set;
+#getLimit()Ljava/lang/Long;
+#getSortDirection()Lorg/springframework/data/domain/Sort$Direction;
+#isStoreDistance()Z
+#hasAnyLimit()Z

+###org/springframework/data/redis/connection/RedisStreamCommands$XAddOptions
@2.3.0.RELEASE
+#none()Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;
+#maxlen(J)Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;
+#getMaxlen()Ljava/lang/Long;
+#hasMaxlen()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.6.0
+#makeNoStream()Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;
+#makeNoStream(Z)Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;
+#isNoMkStream()Z
@2.7.0
+#minId(Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;
+#approximateTrimming(Z)Lorg/springframework/data/redis/connection/RedisStreamCommands$XAddOptions;
+#isApproximateTrimming()Z
+#getMinId()Lorg/springframework/data/redis/connection/stream/RecordId;
+#hasMinId()Z

+###org/springframework/data/redis/connection/ReactiveSetCommands$SMIsMemberCommand
@2.6.0
+#values(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SMIsMemberCommand;
+#of(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveSetCommands$SMIsMemberCommand;
+#getValues()Ljava/util/List;

+###org/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions
@2.3.0.RELEASE
+#unbounded()Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;
+#unbounded(Ljava/lang/Long;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;
+#range(Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;
+#consumer(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XPendingOptions;
+#getRange()Lorg/springframework/data/domain/Range;
+#getCount()Ljava/lang/Long;
+#getConsumerName()Ljava/lang/String;
+#hasConsumer()Z
+#isLimited()Z

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand
@2.6.0
+#sets(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#storeAs(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#getSourceKeys()Ljava/util/List;
+#getWeights()Ljava/util/List;
+#getAggregateFunction()Ljava/util/Optional;
@3.0.0
+#applyWeights(Lorg/springframework/data/redis/connection/zset/Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/zset/Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;
-#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateStoreCommand;

+###org/springframework/data/redis/connection/ReactiveListCommands$BLMoveCommand
@2.6.0
+#getTimeout()Ljava/time/Duration;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRandMemberCommand
@2.6.0
+#valueCount(J)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRandMemberCommand;
+#singleValue()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRandMemberCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRandMemberCommand;
+#getCount()J

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZLexCountCommand
@2.4.0
+#stringsWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZLexCountCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZLexCountCommand;
+#getRange()Lorg/springframework/data/domain/Range;

+###org/springframework/data/redis/connection/stream/StreamInfo$XInfoStream
@2.3.0.RELEASE
+#fromList(Ljava/util/List;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoStream;
+#streamLength()Ljava/lang/Long;
+#radixTreeKeySize()Ljava/lang/Long;
+#radixTreeNodesSize()Ljava/lang/Long;
+#groupCount()Ljava/lang/Long;
+#lastGeneratedId()Ljava/lang/String;
+#firstEntryId()Ljava/lang/String;
+#getFirstEntry()Ljava/util/Map;
+#lastEntryId()Ljava/lang/String;
+#getLastEntry()Ljava/util/Map;
@3.0.0
+#streamLength()J
+#radixTreeKeySize()J
+#radixTreeNodesSize()J
+#groupCount()J
-#streamLength()Ljava/lang/Long;
-#radixTreeKeySize()Ljava/lang/Long;
-#radixTreeNodesSize()Ljava/lang/Long;
-#groupCount()Ljava/lang/Long;

+###org/springframework/data/redis/connection/stream/StreamInfo$XInfoGroup
@2.3.0.RELEASE
+#fromList(Ljava/util/List;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroup;
+#groupName()Ljava/lang/String;
+#consumerCount()Ljava/lang/Long;
+#pendingCount()Ljava/lang/Long;
+#lastDeliveredId()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/StreamInfo
@2.3.0.RELEASE
+#<init>()V

+###org/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumer
@2.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#groupName()Ljava/lang/String;
+#consumerName()Ljava/lang/String;
+#idleTimeMs()Ljava/lang/Long;
+#idleTime()Ljava/time/Duration;
+#pendingCount()Ljava/lang/Long;
@3.0.0
+#idleTimeMs()J
+#pendingCount()J
-#idleTimeMs()Ljava/lang/Long;
-#pendingCount()Ljava/lang/Long;

+###org/springframework/data/redis/connection/stream/PendingMessages
@2.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#<init>(Ljava/lang/String;Lorg/springframework/data/domain/Range;Ljava/util/List;)V
+#withinRange(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/stream/PendingMessages;
+#getGroupName()Ljava/lang/String;
+#getRange()Lorg/springframework/data/domain/Range;
+#isEmpty()Z
+#size()I
+#get(I)Lorg/springframework/data/redis/connection/stream/PendingMessage;
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers
@2.3.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#fromList(Ljava/lang/String;Ljava/util/List;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumers;
+#getConsumerCount()I
+#size()I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#get(I)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoConsumer;
+#stream()Ljava/util/stream/Stream;
+#forEach(Ljava/util/function/Consumer;)V
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/PendingMessage
@2.3.0.RELEASE
+#<init>(Lorg/springframework/data/redis/connection/stream/RecordId;Lorg/springframework/data/redis/connection/stream/Consumer;Ljava/time/Duration;J)V
+#getId()Lorg/springframework/data/redis/connection/stream/RecordId;
+#getIdAsString()Ljava/lang/String;
+#getConsumer()Lorg/springframework/data/redis/connection/stream/Consumer;
+#getConsumerName()Ljava/lang/String;
+#getGroupName()Ljava/lang/String;
+#getElapsedTimeSinceLastDelivery()Ljava/time/Duration;
+#getTotalDeliveryCount()J
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups
@2.3.0.RELEASE
+#fromList(Ljava/util/List;)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroups;
+#groupCount()I
+#size()I
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#get(I)Lorg/springframework/data/redis/connection/stream/StreamInfo$XInfoGroup;
+#stream()Ljava/util/stream/Stream;
+#forEach(Ljava/util/function/Consumer;)V
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/StreamInfo$XInfoObject
@2.3.0.RELEASE
+#getRaw()Ljava/util/Map;
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/stream/PendingMessagesSummary
@2.3.0.RELEASE
+#<init>(Ljava/lang/String;JLorg/springframework/data/domain/Range;Ljava/util/Map;)V
+#getIdRange()Lorg/springframework/data/domain/Range;
+#minRecordId()Lorg/springframework/data/redis/connection/stream/RecordId;
+#maxRecordId()Lorg/springframework/data/redis/connection/stream/RecordId;
+#minMessageId()Ljava/lang/String;
+#maxMessageId()Ljava/lang/String;
+#getTotalPendingMessages()J
+#getGroupName()Ljava/lang/String;
+#getPendingMessagesPerConsumer()Ljava/util/Map;
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/connection/RedisGeoCommands$GeoCommandArgs$GeoCommandFlag
@2.6.0
+#any()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoCommandArgs$GeoCommandFlag;
+#withCord()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoCommandArgs$GeoCommandFlag;
+#withDist()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoCommandArgs$GeoCommandFlag;
+#storeDist()Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoCommandArgs$GeoCommandFlag;

+###org/springframework/data/redis/connection/ReactiveStreamCommands$XClaimCommand
@2.3.0.RELEASE
+#getOptions()Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;
+#getNewOwner()Ljava/lang/String;
+#getGroupName()Ljava/lang/String;

+###org/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchCommand
@2.6.0
+#within(Lorg/springframework/data/redis/domain/geo/GeoShape;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchCommand;
+#at(Lorg/springframework/data/redis/domain/geo/GeoReference;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchCommand;
+#in(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchCommand;
+#with(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoSearchCommandArgs;)Lorg/springframework/data/redis/connection/ReactiveGeoCommands$GeoSearchCommand;
+#getArgs()Ljava/util/Optional;
+#getReference()Lorg/springframework/data/redis/domain/geo/GeoReference;
+#getShape()Lorg/springframework/data/redis/domain/geo/GeoShape;

+###org/springframework/data/redis/connection/ReactiveStringCommands$GetExCommand
@2.6.0
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$GetExCommand;
+#withExpiration(Lorg/springframework/data/redis/core/types/Expiration;)Lorg/springframework/data/redis/connection/ReactiveStringCommands$GetExCommand;
+#getExpiration()Lorg/springframework/data/redis/core/types/Expiration;

+###org/springframework/data/redis/connection/SubscriptionListener
@2.6.0
+#onChannelSubscribed([BJ)V
+#onChannelUnsubscribed([BJ)V
+#onPatternSubscribed([BJ)V
+#onPatternUnsubscribed([BJ)V

+###org/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions
@2.3.0.RELEASE
+#minIdle(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions$XClaimOptionsBuilder;
+#minIdleMs(J)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions$XClaimOptionsBuilder;
+#idle(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;
+#time(Ljava/time/Instant;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;
+#retryCount(J)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;
+#force()Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;
+#getIds()Ljava/util/List;
+#getIdsAsStringArray()[Ljava/lang/String;
+#getMinIdleTime()Ljava/time/Duration;
+#getIdleTime()Ljava/time/Duration;
+#getUnixTime()Ljava/time/Instant;
+#getRetryCount()Ljava/lang/Long;
+#isForce()Z

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand
@2.6.0
+#sets(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;
+#applyWeights(Ljava/util/List;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;
+#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;
+#getKey()Ljava/nio/ByteBuffer;
+#getSourceKeys()Ljava/util/List;
+#getWeights()Ljava/util/List;
+#getAggregateFunction()Ljava/util/Optional;
@3.0.0
+#applyWeights(Lorg/springframework/data/redis/connection/zset/Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;
+#aggregateUsing(Lorg/springframework/data/redis/connection/zset/Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;
-#applyWeights(Lorg/springframework/data/redis/connection/RedisZSetCommands$Weights;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;
-#aggregateUsing(Lorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZAggregateCommand;

+###org/springframework/data/redis/connection/RedisServerCommands$FlushOption
@2.7.0
+#values()[Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisServerCommands$FlushOption;

+###org/springframework/data/redis/connection/ReactiveListCommands$LMoveCommand
@2.6.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;)V
+#from(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LMoveCommand;
+#to(Ljava/nio/ByteBuffer;Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LMoveCommand;
+#timeout(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/ReactiveListCommands$BLMoveCommand;
+#getDestinationKey()Ljava/nio/ByteBuffer;
+#getFrom()Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;
+#getTo()Lorg/springframework/data/redis/connection/ReactiveListCommands$Direction;

+###org/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions$XClaimOptionsBuilder
@2.3.0.RELEASE
+#ids(Ljava/util/List;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;
+#ids([Lorg/springframework/data/redis/connection/stream/RecordId;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;
+#ids([Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisStreamCommands$XClaimOptions;

+###org/springframework/data/redis/connection/ReactiveKeyCommands$CopyCommand
@2.6.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ZLjava/lang/Integer;)V
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$CopyCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$CopyCommand;
+#replace(Z)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$CopyCommand;
+#database(I)Lorg/springframework/data/redis/connection/ReactiveKeyCommands$CopyCommand;
+#getTarget()Ljava/nio/ByteBuffer;
+#isReplace()Z
+#getDatabase()Ljava/lang/Integer;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZDiffStoreCommand
@2.6.0
+#sourceKeys(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZDiffStoreCommand;
+#storeAs(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZDiffStoreCommand;
+#getSourceKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$PopDirection
@2.6.0
+#values()[Lorg/springframework/data/redis/connection/ReactiveZSetCommands$PopDirection;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$PopDirection;

+###org/springframework/data/redis/connection/ReactiveClusterCommands$AddSlots
@2.3.2.RELEASE
+#values()[Lorg/springframework/data/redis/connection/ReactiveClusterCommands$AddSlots;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveClusterCommands$AddSlots;

+###org/springframework/data/redis/connection/RedisGeoCommands$GeoCommandArgs
@2.6.0
+#getSortDirection()Lorg/springframework/data/domain/Sort$Direction;
+#getLimit()Ljava/lang/Long;
+#getFlags()Ljava/util/Set;
+#hasLimit()Z
+#hasSortDirection()Z
+#hasFlags()Z

+###org/springframework/data/redis/connection/ReactiveStreamCommands$PendingRecordsCommand
@2.3.0.RELEASE
+#range(Lorg/springframework/data/domain/Range;Ljava/lang/Long;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$PendingRecordsCommand;
+#consumer(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveStreamCommands$PendingRecordsCommand;
+#getGroupName()Ljava/lang/String;
+#getConsumerName()Ljava/lang/String;
+#getRange()Lorg/springframework/data/domain/Range;
+#getCount()Ljava/lang/Long;
+#hasConsumer()Z
+#isLimited()Z

+###org/springframework/data/redis/connection/ReactiveZSetCommands$BZPopCommand
@2.6.0
+#min()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$BZPopCommand;
+#max()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$BZPopCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$BZPopCommand;
+#count(J)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$BZPopCommand;
+#blockingFor(Ljava/time/Duration;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$BZPopCommand;
+#blockingFor(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$BZPopCommand;
+#getDirection()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$PopDirection;
+#getTimeout()Ljava/lang/Long;
+#getTimeUnit()Ljava/util/concurrent/TimeUnit;
+#getCount()J

+###org/springframework/data/redis/connection/ReactiveHashCommands$HRandFieldCommand
@2.6.0
+#key(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HRandFieldCommand;
+#count(J)Lorg/springframework/data/redis/connection/ReactiveHashCommands$HRandFieldCommand;
+#getCount()J

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZDiffCommand
@2.6.0
+#sets(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZDiffCommand;
+#getKey()Ljava/nio/ByteBuffer;
+#getKeys()Ljava/util/List;

+###org/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs$Flag
@2.5.0
+#values()[Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs$Flag;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisZSetCommands$ZAddArgs$Flag;

+###org/springframework/data/redis/connection/ReactiveListCommands$LPosCommand
@2.4.0
+#lPosOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LPosCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LPosCommand;
+#count(Ljava/lang/Integer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LPosCommand;
+#rank(Ljava/lang/Integer;)Lorg/springframework/data/redis/connection/ReactiveListCommands$LPosCommand;
+#getCount()Ljava/lang/Integer;
+#getRank()Ljava/lang/Integer;
+#getElement()Ljava/nio/ByteBuffer;

+###org/springframework/data/redis/connection/ReactiveClusterCommands
@2.3.2.RELEASE
+#clusterGetNodes()Lreactor/core/publisher/Flux;
+#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Flux;
+#clusterGetMasterSlaveMap()Lreactor/core/publisher/Mono;
+#clusterGetSlotForKey(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#clusterGetNodeForSlot(I)Lreactor/core/publisher/Mono;
+#clusterGetNodeForKey(Ljava/nio/ByteBuffer;)Lreactor/core/publisher/Mono;
+#clusterGetClusterInfo()Lreactor/core/publisher/Mono;
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)Lreactor/core/publisher/Mono;
+#clusterAddSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)Lreactor/core/publisher/Mono;
+#clusterCountKeysInSlot(I)Lreactor/core/publisher/Mono;
+#clusterDeleteSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)Lreactor/core/publisher/Mono;
+#clusterDeleteSlotsInRange(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)Lreactor/core/publisher/Mono;
+#clusterForget(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#clusterMeet(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
+#clusterSetSlot(Lorg/springframework/data/redis/connection/RedisClusterNode;ILorg/springframework/data/redis/connection/ReactiveClusterCommands$AddSlots;)Lreactor/core/publisher/Mono;
+#clusterGetKeysInSlot(II)Lreactor/core/publisher/Flux;
+#clusterReplicate(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Mono;
@3.0.0
+#clusterGetReplicas(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Flux;
+#clusterGetMasterReplicaMap()Lreactor/core/publisher/Mono;
-#clusterGetSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Lreactor/core/publisher/Flux;
-#clusterGetMasterSlaveMap()Lreactor/core/publisher/Mono;

+###org/springframework/data/redis/connection/RedisConfiguration$WithAuthentication
@2.4.0
+#setUsername(Ljava/lang/String;)V
+#setPassword(Ljava/lang/String;)V
+#setPassword([C)V
+#setPassword(Lorg/springframework/data/redis/connection/RedisPassword;)V
+#getUsername()Ljava/lang/String;
+#getPassword()Lorg/springframework/data/redis/connection/RedisPassword;

+###org/springframework/data/redis/connection/RedisListCommands$Direction
@2.6.0
+#values()[Lorg/springframework/data/redis/connection/RedisListCommands$Direction;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/RedisListCommands$Direction;
+#first()Lorg/springframework/data/redis/connection/RedisListCommands$Direction;
+#last()Lorg/springframework/data/redis/connection/RedisListCommands$Direction;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZMScoreCommand
@2.6.0
+#scoreOf(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZMScoreCommand;
+#scoreOf(Ljava/util/Collection;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZMScoreCommand;
+#forKey(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZMScoreCommand;
+#getValues()Ljava/util/Collection;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZPopCommand
@2.6.0
+#min()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZPopCommand;
+#max()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZPopCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZPopCommand;
+#count(J)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZPopCommand;
+#getDirection()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$PopDirection;
+#getCount()J

+###org/springframework/data/redis/hash/HashObjectReader
@2.7.0
+#fromHash(Ljava/lang/Class;Ljava/util/Map;)Ljava/lang/Object;
@3.0.0
-###org/springframework/data/redis/hash/HashObjectReader

+###org/springframework/data/redis/domain/geo/RadiusShape
@2.6.0
+#<init>(Lorg/springframework/data/geo/Distance;)V
+#getRadius()Lorg/springframework/data/geo/Distance;
+#getMetric()Lorg/springframework/data/geo/Metric;

+###org/springframework/data/redis/domain/geo/BoxShape
@2.6.0
+#<init>(Lorg/springframework/data/redis/domain/geo/BoundingBox;)V
+#getBoundingBox()Lorg/springframework/data/redis/domain/geo/BoundingBox;
+#getMetric()Lorg/springframework/data/geo/Metric;

+###org/springframework/data/redis/domain/geo/GeoShape
@2.6.0
+#byRadius(Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/redis/domain/geo/GeoShape;
+#byBox(DDLorg/springframework/data/redis/connection/RedisGeoCommands$DistanceUnit;)Lorg/springframework/data/redis/domain/geo/GeoShape;
+#byBox(Lorg/springframework/data/redis/domain/geo/BoundingBox;)Lorg/springframework/data/redis/domain/geo/GeoShape;
+#getMetric()Lorg/springframework/data/geo/Metric;

+###org/springframework/data/redis/domain/geo/BoundingBox
@2.6.0
+#<init>(Lorg/springframework/data/geo/Distance;Lorg/springframework/data/geo/Distance;)V
+#<init>(DDLorg/springframework/data/geo/Metric;)V
+#getWidth()Lorg/springframework/data/geo/Distance;
+#getHeight()Lorg/springframework/data/geo/Distance;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/domain/geo/GeoLocation
@2.6.0
+#<init>(Ljava/lang/Object;Lorg/springframework/data/geo/Point;)V
+#getName()Ljava/lang/Object;
+#getPoint()Lorg/springframework/data/geo/Point;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/domain/geo/GeoReference$GeoCoordinateReference
@2.6.0
+#<init>(DD)V
+#getLongitude()D
+#getLatitude()D
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/domain/geo/GeoReference$GeoMemberReference
@2.6.0
+#<init>(Ljava/lang/Object;)V
+#getMember()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/springframework/data/redis/domain/geo/Metrics
@2.6.0
+#values()[Lorg/springframework/data/redis/domain/geo/Metrics;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/domain/geo/Metrics;
+#getMultiplier()D
+#getAbbreviation()Ljava/lang/String;

+###org/springframework/data/redis/domain/geo/GeoReference
@2.6.0
+#fromMember(Ljava/lang/Object;)Lorg/springframework/data/redis/domain/geo/GeoReference;
+#fromMember(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Lorg/springframework/data/redis/domain/geo/GeoReference;
+#fromCircle(Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/redis/domain/geo/GeoReference;
+#fromCoordinate(DD)Lorg/springframework/data/redis/domain/geo/GeoReference;
+#fromCoordinate(Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Lorg/springframework/data/redis/domain/geo/GeoReference;
+#fromCoordinate(Lorg/springframework/data/geo/Point;)Lorg/springframework/data/redis/domain/geo/GeoReference;

+###org/springframework/data/redis/connection/lettuce/RedisCredentialsProviderFactory
@3.0.0
+#createCredentialsProvider(Lorg/springframework/data/redis/connection/RedisConfiguration;)Lio/lettuce/core/RedisCredentialsProvider;
+#createSentinelCredentialsProvider(Lorg/springframework/data/redis/connection/RedisSentinelConfiguration;)Lio/lettuce/core/RedisCredentialsProvider;

+###org/springframework/data/redis/connection/lettuce/RedisCredentialsProviderFactory$AbsentRedisCredentials
@3.0.0
+#values()[Lorg/springframework/data/redis/connection/lettuce/RedisCredentialsProviderFactory$AbsentRedisCredentials;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/lettuce/RedisCredentialsProviderFactory$AbsentRedisCredentials;
+#getUsername()Ljava/lang/String;
+#hasUsername()Z
+#getPassword()[C
+#hasPassword()Z

+###org/springframework/data/redis/connection/lettuce/observability/MicrometerTracingAdapter
@3.0.0
+#<init>(Lio/micrometer/observation/ObservationRegistry;Ljava/lang/String;)V
+#<init>(Lio/micrometer/observation/ObservationRegistry;Ljava/lang/String;Z)V
+#getTracerProvider()Lio/lettuce/core/tracing/TracerProvider;
+#initialTraceContextProvider()Lio/lettuce/core/tracing/TraceContextProvider;
+#isEnabled()Z
+#includeCommandArgsInSpanTags()Z
+#createEndpoint(Ljava/net/SocketAddress;)Lio/lettuce/core/tracing/Tracing$Endpoint;

+###org/springframework/data/redis/connection/RedisCommandsProvider
@3.0.0
+#commands()Lorg/springframework/data/redis/connection/RedisCommands;
+#geoCommands()Lorg/springframework/data/redis/connection/RedisGeoCommands;
+#hashCommands()Lorg/springframework/data/redis/connection/RedisHashCommands;
+#hyperLogLogCommands()Lorg/springframework/data/redis/connection/RedisHyperLogLogCommands;
+#keyCommands()Lorg/springframework/data/redis/connection/RedisKeyCommands;
+#listCommands()Lorg/springframework/data/redis/connection/RedisListCommands;
+#setCommands()Lorg/springframework/data/redis/connection/RedisSetCommands;
+#scriptingCommands()Lorg/springframework/data/redis/connection/RedisScriptingCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;
+#streamCommands()Lorg/springframework/data/redis/connection/RedisStreamCommands;
+#stringCommands()Lorg/springframework/data/redis/connection/RedisStringCommands;
+#zSetCommands()Lorg/springframework/data/redis/connection/RedisZSetCommands;

+###org/springframework/data/redis/connection/zset/DefaultTuple
@3.0.0
+#<init>([BLjava/lang/Double;)V
+#getScore()Ljava/lang/Double;
+#getValue()[B
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Double;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/springframework/data/redis/connection/zset/Weights
@2.7.6
+#of([I)Lorg/springframework/data/redis/connection/zset/Weights;
+#of([D)Lorg/springframework/data/redis/connection/zset/Weights;
+#fromSetCount(I)Lorg/springframework/data/redis/connection/zset/Weights;
+#multiply(I)Lorg/springframework/data/redis/connection/zset/Weights;
+#multiply(D)Lorg/springframework/data/redis/connection/zset/Weights;
+#apply(Ljava/util/function/Function;)Lorg/springframework/data/redis/connection/zset/Weights;
+#getWeight(I)D
+#size()I
+#toArray()[D
+#toList()Ljava/util/List;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/data/redis/connection/zset/Aggregate
@3.0.0
+#values()[Lorg/springframework/data/redis/connection/zset/Aggregate;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/zset/Aggregate;

+###org/springframework/data/redis/connection/zset/Tuple
@3.0.0
+#getValue()[B
+#getScore()Ljava/lang/Double;
+#of([BLjava/lang/Double;)Lorg/springframework/data/redis/connection/zset/Tuple;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand
@3.0.0
+#scoreWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand;
+#reverseScoreWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand;
+#valueWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand;
+#reverseValueWithin(Lorg/springframework/data/domain/Range;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand;
+#from(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand;
+#to(Ljava/nio/ByteBuffer;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand;
+#limit(Lorg/springframework/data/redis/connection/Limit;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand;
+#getDestKey()Ljava/nio/ByteBuffer;
+#getRangeMode()Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand$RangeMode;
+#getRange()Lorg/springframework/data/domain/Range;
+#getDirection()Lorg/springframework/data/domain/Sort$Direction;
+#getLimit()Lorg/springframework/data/redis/connection/Limit;

+###org/springframework/data/redis/connection/Limit
@3.0.0
+#<init>()V
+#limit()Lorg/springframework/data/redis/connection/Limit;
+#offset(I)Lorg/springframework/data/redis/connection/Limit;
+#count(I)Lorg/springframework/data/redis/connection/Limit;
+#getCount()I
+#getOffset()I
+#isUnlimited()Z
+#isLimited()Z
+#unlimited()Lorg/springframework/data/redis/connection/Limit;

+###org/springframework/data/redis/connection/RedisClusterCommandsProvider
@3.0.0
+#clusterCommands()Lorg/springframework/data/redis/connection/RedisClusterCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisClusterServerCommands;
+#serverCommands()Lorg/springframework/data/redis/connection/RedisServerCommands;

+###org/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand$RangeMode
@3.0.0
+#values()[Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand$RangeMode;
+#valueOf(Ljava/lang/String;)Lorg/springframework/data/redis/connection/ReactiveZSetCommands$ZRangeStoreCommand$RangeMode;

+###org/springframework/data/redis/aot/RedisRuntimeHints
@3.0.0
+#<init>()V
+#redisHints(Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/RuntimeHints;
+#registerHints(Lorg/springframework/aot/hint/RuntimeHints;Ljava/lang/ClassLoader;)V

+###org/springframework/data/redis/serializer/JacksonObjectWriter
@3.0.0
+#write(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/Object;)[B
+#create()Lorg/springframework/data/redis/serializer/JacksonObjectWriter;

+###org/springframework/data/redis/serializer/JacksonObjectReader
@3.0.0
+#read(Lcom/fasterxml/jackson/databind/ObjectMapper;[BLcom/fasterxml/jackson/databind/JavaType;)Ljava/lang/Object;
+#create()Lorg/springframework/data/redis/serializer/JacksonObjectReader;

+###org/springframework/data/redis/connection/HyperLogLogCommands
@1.5.0.RELEASE
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/HyperLogLogCommands

+###org/springframework/data/redis/core/DefaultHyperLogLogOperations
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisTemplate;)V
+#add(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
+#size([Ljava/lang/Object;)Ljava/lang/Long;
+#union(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
+#delete(Ljava/lang/Object;)V
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@2.0.0.RELEASE
-###org/springframework/data/redis/core/DefaultHyperLogLogOperations

+###org/springframework/data/redis/cache/RedisCacheElement
@1.5.0.RELEASE
+#<init>(Lorg/springframework/data/redis/cache/RedisCacheKey;Ljava/lang/Object;)V
+#getKeyBytes()[B
+#getKey()Lorg/springframework/data/redis/cache/RedisCacheKey;
+#setTimeToLive(J)V
+#getTimeToLive()J
+#hasKeyPrefix()Z
+#isEternal()Z
+#expireAfter(J)Lorg/springframework/data/redis/cache/RedisCacheElement;
@2.0.0.RELEASE
-###org/springframework/data/redis/cache/RedisCacheElement

+###org/springframework/data/redis/cache/RedisCacheKey
@1.5.0.RELEASE
+#<init>(Ljava/lang/Object;)V
+#getKeyBytes()[B
+#getKeyElement()Ljava/lang/Object;
+#setSerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)V
+#hasPrefix()Z
+#usePrefix([B)Lorg/springframework/data/redis/cache/RedisCacheKey;
+#withKeySerializer(Lorg/springframework/data/redis/serializer/RedisSerializer;)Lorg/springframework/data/redis/cache/RedisCacheKey;
@2.0.0.RELEASE
-###org/springframework/data/redis/cache/RedisCacheKey

+###org/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult
@1.7.0.RELEASE
+#<init>()V
+#getResults()Ljava/util/List;
+#resultsAsList()Ljava/util/List;
+#resultsAsListSortBy([[B)Ljava/util/List;
+#getFirstNonNullNotEmptyOrDefault(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/ClusterCommandExecutor$MulitNodeResult

+###org/springframework/data/redis/connection/jredis/JredisUtils
@1.0.0.RELEASE
+#<init>()V
+#convertJredisAccessException(Lorg/jredis/RedisException;)Lorg/springframework/dao/DataAccessException;
+#convertJredisAccessException(Lorg/jredis/ClientRuntimeException;)Lorg/springframework/dao/DataAccessException;
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/jredis/JredisUtils

+###org/springframework/data/redis/connection/jredis/JredisConnection
@1.0.0.RELEASE
+#<init>(Lorg/jredis/JRedis;)V
+#close()V
+#getNativeConnection()Lorg/jredis/JRedis;
+#isClosed()Z
+#isQueueing()Z
+#isPipelined()Z
+#openPipeline()V
+#closePipeline()Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#dbSize()Ljava/lang/Long;
+#flushDb()V
+#flushAll()V
+#echo([B)[B
+#ping()Ljava/lang/String;
+#bgSave()V
+#bgWriteAof()V
+#save()V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#info()Ljava/util/Properties;
+#lastSave()Ljava/lang/Long;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
+#shutdown()V
+#del([[B)Ljava/lang/Long;
+#discard()V
+#exec()Ljava/util/List;
+#exists([B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#keys([B)Ljava/util/Set;
+#multi()V
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#select(I)V
+#ttl([B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#unwatch()V
+#watch([[B)V
+#get([B)[B
+#set([B[B)V
+#getSet([B[B)[B
+#append([B[B)Ljava/lang/Long;
+#mGet([[B)Ljava/util/List;
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)V
+#setEx([BJ[B)V
+#setNX([B[B)Ljava/lang/Boolean;
+#getRange([BJJ)[B
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#getBit([BJ)Ljava/lang/Boolean;
+#setBit([BJZ)V
+#setRange([B[BJ)V
+#strLen([B)Ljava/lang/Long;
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#lIndex([BJ)[B
+#lLen([B)Ljava/lang/Long;
+#lPop([B)[B
+#lPush([B[B)Ljava/lang/Long;
+#lRange([BJJ)Ljava/util/List;
+#lRem([BJ[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lTrim([BJJ)V
+#rPop([B)[B
+#rPopLPush([B[B)[B
+#rPush([B[B)Ljava/lang/Long;
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#bRPopLPush(I[B[B)[B
+#lPushX([B[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#sAdd([B[B)Ljava/lang/Boolean;
+#sCard([B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)V
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)V
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sMembers([B)Ljava/util/Set;
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sPop([B)[B
+#sRandMember([B)[B
+#sRem([B[B)Ljava/lang/Boolean;
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)V
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zCard([B)Ljava/lang/Long;
+#zCount([BDD)Ljava/lang/Long;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRank([B[B)Ljava/lang/Long;
+#zRem([B[B)Ljava/lang/Boolean;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRevRank([B[B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#hDel([B[B)Ljava/lang/Boolean;
+#hExists([B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hGetAll([B)Ljava/util/Map;
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hLen([B)Ljava/lang/Long;
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hVals([B)Ljava/util/List;
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#isSubscribed()Z
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#publish([B[B)Ljava/lang/Long;
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#getNativeConnection()Ljava/lang/Object;
@1.0.1.RELEASE
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;
+#sDiffStore([B[[B)Ljava/lang/Long;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sUnionStore([B[[B)Ljava/lang/Long;
-#sDiffStore([B[[B)V
-#sInterStore([B[[B)V
-#sUnionStore([B[[B)V
@1.1.0.M1
+#<init>(Lorg/jredis/JRedis;Lorg/springframework/data/redis/connection/Pool;)V
+#info(Ljava/lang/String;)Ljava/util/Properties;
+#pExpire([BJ)Ljava/lang/Boolean;
+#pExpireAt([BJ)Ljava/lang/Boolean;
+#pTtl([B)Ljava/lang/Long;
+#dump([B)[B
+#restore([BJ[B)V
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#incrBy([BD)Ljava/lang/Double;
+#bitCount([B)Ljava/lang/Long;
+#bitCount([BJJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
+#sRandMember([BJ)Ljava/util/List;
+#hIncrBy([B[BD)Ljava/lang/Double;
+#scriptFlush()V
+#scriptKill()V
+#scriptLoad([B)Ljava/lang/String;
+#scriptExists([Ljava/lang/String;)Ljava/util/List;
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#mSetNX(Ljava/util/Map;)V
@1.1.0.M2
+#lPush([B[[B)Ljava/lang/Long;
+#rPush([B[[B)Ljava/lang/Long;
+#sAdd([B[[B)Ljava/lang/Long;
+#sRem([B[[B)Ljava/lang/Long;
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;
+#zRem([B[[B)Ljava/lang/Long;
+#hDel([B[[B)Ljava/lang/Long;
-#lPush([B[B)Ljava/lang/Long;
-#rPush([B[B)Ljava/lang/Long;
-#sAdd([B[B)Ljava/lang/Boolean;
-#sRem([B[B)Ljava/lang/Boolean;
-#zRem([B[B)Ljava/lang/Boolean;
-#hDel([B[B)Ljava/lang/Boolean;
@1.2.0.RELEASE
+#time()Ljava/lang/Long;
@1.3.0.RELEASE
+#bgReWriteAof()V
*#bgWriteAof()V[deprecated]
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
+#pSetEx([BJ[B)V
+#setBit([BJZ)Ljava/lang/Boolean;
+#killClient(Ljava/lang/String;I)V
+#setClientName([B)V
+#slaveOf(Ljava/lang/String;I)V
+#getClientName()Ljava/lang/String;
+#getClientList()Ljava/util/List;
+#slaveOfNoOne()V
-#setBit([BJZ)V
@1.4.0.RELEASE
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.5.0.RELEASE
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V
@1.6.0.RELEASE
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByLex([B)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
@1.7.0.RELEASE
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
@1.8.0.RELEASE
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([B[[B)Ljava/util/List;
+#geoPos([B[[B)Ljava/util/List;
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([B[[B)Ljava/lang/Long;
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/jredis/JredisConnection

+###org/springframework/data/redis/core/DefaultClusterOperations
@1.7.0.RELEASE
+#<init>(Lorg/springframework/data/redis/core/RedisTemplate;)V
+#keys(Lorg/springframework/data/redis/connection/RedisClusterNode;Ljava/lang/Object;)Ljava/util/Set;
+#randomKey(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/Object;
+#ping(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/lang/String;
+#addSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;[I)V
+#addSlots(Lorg/springframework/data/redis/connection/RedisClusterNode;Lorg/springframework/data/redis/connection/RedisClusterNode$SlotRange;)V
+#bgReWriteAof(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#bgSave(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#meet(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#forget(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#flushDb(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#getSlaves(Lorg/springframework/data/redis/connection/RedisClusterNode;)Ljava/util/Collection;
+#save(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#shutdown(Lorg/springframework/data/redis/connection/RedisClusterNode;)V
+#reshard(Lorg/springframework/data/redis/connection/RedisClusterNode;ILorg/springframework/data/redis/connection/RedisClusterNode;)V
+#execute(Lorg/springframework/data/redis/core/RedisClusterCallback;)Ljava/lang/Object;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@2.0.0.RELEASE
-###org/springframework/data/redis/core/DefaultClusterOperations

+###org/springframework/data/redis/cache/RedisCachePrefix
@1.0.0.RELEASE
+#prefix(Ljava/lang/String;)[B
@2.0.0.RELEASE
-###org/springframework/data/redis/cache/RedisCachePrefix

+###org/springframework/data/redis/connection/jredis/JredisConnectionFactory
@1.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/jredis/connector/ConnectionSpec;)V
+#afterPropertiesSet()V
+#destroy()V
+#getConnection()Lorg/springframework/data/redis/connection/RedisConnection;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getUsePool()Z
+#setUsePool(Z)V
+#getPoolSize()I
+#setPoolSize(I)V
+#getDatabase()I
+#setDatabase(I)V
@1.1.0.M1
+#<init>(Lorg/springframework/data/redis/connection/Pool;)V
-#getUsePool()Z
-#setUsePool(Z)V
-#getPoolSize()I
-#setPoolSize(I)V
@1.1.0.M2
+#getConvertPipelineAndTxResults()Z
@1.4.0.RELEASE
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
@1.7.0.RELEASE
+#getClusterConnection()Lorg/springframework/data/redis/connection/RedisClusterConnection;
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/jredis/JredisConnectionFactory

+###org/springframework/data/redis/connection/srp/SrpScriptReturnConverter
@1.1.0.M2
+#<init>(Lorg/springframework/data/redis/connection/ReturnType;)V
+#convert(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/srp/SrpScriptReturnConverter

+###org/springframework/data/redis/connection/srp/SrpConnection
@1.0.1.RELEASE
+#<init>(Ljava/lang/String;ILjava/util/concurrent/BlockingQueue;)V
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;
+#close()V
+#isClosed()Z
+#getNativeConnection()Lredis/client/RedisClient;
+#isQueueing()Z
+#isPipelined()Z
+#openPipeline()V
+#closePipeline()Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#dbSize()Ljava/lang/Long;
+#flushDb()V
+#flushAll()V
+#bgSave()V
+#bgWriteAof()V
+#save()V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#info()Ljava/util/Properties;
+#lastSave()Ljava/lang/Long;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
+#shutdown()V
+#echo([B)[B
+#ping()Ljava/lang/String;
+#del([[B)Ljava/lang/Long;
+#discard()V
+#exec()Ljava/util/List;
+#exists([B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#keys([B)Ljava/util/Set;
+#multi()V
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#select(I)V
+#ttl([B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#unwatch()V
+#watch([[B)V
+#get([B)[B
+#set([B[B)V
+#getSet([B[B)[B
+#append([B[B)Ljava/lang/Long;
+#mGet([[B)Ljava/util/List;
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)V
+#setEx([BJ[B)V
+#setNX([B[B)Ljava/lang/Boolean;
+#getRange([BJJ)[B
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#getBit([BJ)Ljava/lang/Boolean;
+#setBit([BJZ)V
+#setRange([B[BJ)V
+#strLen([B)Ljava/lang/Long;
+#lPush([B[B)Ljava/lang/Long;
+#rPush([B[B)Ljava/lang/Long;
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#lIndex([BJ)[B
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#lLen([B)Ljava/lang/Long;
+#lPop([B)[B
+#lRange([BJJ)Ljava/util/List;
+#lRem([BJ[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lTrim([BJJ)V
+#rPop([B)[B
+#rPopLPush([B[B)[B
+#bRPopLPush(I[B[B)[B
+#lPushX([B[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#sAdd([B[B)Ljava/lang/Boolean;
+#sCard([B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)Ljava/lang/Long;
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sMembers([B)Ljava/util/Set;
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sPop([B)[B
+#sRandMember([B)[B
+#sRem([B[B)Ljava/lang/Boolean;
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)Ljava/lang/Long;
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zCard([B)Ljava/lang/Long;
+#zCount([BDD)Ljava/lang/Long;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRank([B[B)Ljava/lang/Long;
+#zRem([B[B)Ljava/lang/Boolean;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRank([B[B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hDel([B[B)Ljava/lang/Boolean;
+#hExists([B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hGetAll([B)Ljava/util/Map;
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hLen([B)Ljava/lang/Long;
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hVals([B)Ljava/util/List;
+#publish([B[B)Ljava/lang/Long;
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#isSubscribed()Z
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#getNativeConnection()Ljava/lang/Object;
@1.1.0.M1
+#info(Ljava/lang/String;)Ljava/util/Properties;
+#pExpire([BJ)Ljava/lang/Boolean;
+#pExpireAt([BJ)Ljava/lang/Boolean;
+#pTtl([B)Ljava/lang/Long;
+#dump([B)[B
+#restore([BJ[B)V
+#mSetNX(Ljava/util/Map;)Ljava/lang/Boolean;
+#incrBy([BD)Ljava/lang/Double;
+#bitCount([B)Ljava/lang/Long;
+#bitCount([BJJ)Ljava/lang/Long;
+#bitOp(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;[B[[B)Ljava/lang/Long;
+#sRandMember([BJ)Ljava/util/List;
+#hIncrBy([B[BD)Ljava/lang/Double;
+#scriptFlush()V
+#scriptKill()V
+#scriptLoad([B)Ljava/lang/String;
+#scriptExists([Ljava/lang/String;)Ljava/util/List;
+#eval([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#evalSha(Ljava/lang/String;Lorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
-#mSetNX(Ljava/util/Map;)V
@1.1.0.M2
+#lPush([B[[B)Ljava/lang/Long;
+#rPush([B[[B)Ljava/lang/Long;
+#sAdd([B[[B)Ljava/lang/Long;
+#sRem([B[[B)Ljava/lang/Long;
+#zAdd([BLjava/util/Set;)Ljava/lang/Long;
+#zRem([B[[B)Ljava/lang/Long;
+#hDel([B[[B)Ljava/lang/Long;
+#setConvertPipelineAndTxResults(Z)V
-#lPush([B[B)Ljava/lang/Long;
-#rPush([B[B)Ljava/lang/Long;
-#sAdd([B[B)Ljava/lang/Boolean;
-#sRem([B[B)Ljava/lang/Boolean;
-#zRem([B[B)Ljava/lang/Boolean;
-#hDel([B[B)Ljava/lang/Boolean;
@1.1.0.RC1
+#<init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/concurrent/BlockingQueue;)V
@1.2.0.RELEASE
+#time()Ljava/lang/Long;
@1.3.0.RELEASE
+#bgReWriteAof()V
*#bgWriteAof()V[deprecated]
+#shutdown(Lorg/springframework/data/redis/connection/RedisServerCommands$ShutdownOption;)V
+#pSetEx([BJ[B)V
+#setBit([BJZ)Ljava/lang/Boolean;
+#killClient(Ljava/lang/String;I)V
+#setClientName([B)V
+#slaveOf(Ljava/lang/String;I)V
+#getClientName()Ljava/lang/String;
+#getClientList()Ljava/util/List;
+#slaveOfNoOne()V
-#setBit([BJZ)V
@1.4.0.RELEASE
+#scan(Lorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#zScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#sScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
+#hScan([BLorg/springframework/data/redis/core/ScanOptions;)Lorg/springframework/data/redis/core/Cursor;
@1.5.0.RELEASE
+#evalSha([BLorg/springframework/data/redis/connection/ReturnType;I[[B)Ljava/lang/Object;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;)Ljava/util/Set;
+#zRangeByScore([BLjava/lang/String;Ljava/lang/String;JJ)Ljava/util/Set;
+#pfAdd([B[[B)Ljava/lang/Long;
+#pfCount([[B)Ljava/lang/Long;
+#pfMerge([B[[B)V
@1.6.0.RELEASE
+#zCount([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
+#zRemRangeByScore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/lang/Long;
+#zRangeByLex([B)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;)Ljava/util/Set;
+#zRangeByLex([BLorg/springframework/data/redis/connection/RedisZSetCommands$Range;Lorg/springframework/data/redis/connection/RedisZSetCommands$Limit;)Ljava/util/Set;
@1.7.0.RELEASE
+#set([B[BLorg/springframework/data/redis/core/types/Expiration;Lorg/springframework/data/redis/connection/RedisStringCommands$SetOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;)V
+#migrate([BLorg/springframework/data/redis/connection/RedisNode;ILorg/springframework/data/redis/connection/RedisServerCommands$MigrateOption;J)V
@1.8.0.RELEASE
+#ttl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#pTtl([BLjava/util/concurrent/TimeUnit;)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/geo/Point;[B)Ljava/lang/Long;
+#geoAdd([BLorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd([BLjava/util/Map;)Ljava/lang/Long;
+#geoAdd([BLjava/lang/Iterable;)Ljava/lang/Long;
+#geoDist([B[B[B)Lorg/springframework/data/geo/Distance;
+#geoDist([B[B[BLorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash([B[[B)Ljava/util/List;
+#geoPos([B[[B)Ljava/util/List;
+#geoRadius([BLorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius([BLorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BD)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember([B[BLorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove([B[[B)Ljava/lang/Long;
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/srp/SrpConnection

+###org/springframework/data/redis/hash/JacksonHashMapper
@1.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#<init>(Ljava/lang/Class;Lorg/codehaus/jackson/map/ObjectMapper;)V
+#fromHash(Ljava/util/Map;)Ljava/lang/Object;
+#toHash(Ljava/lang/Object;)Ljava/util/Map;
@2.0.0.RELEASE
-###org/springframework/data/redis/hash/JacksonHashMapper

+###org/springframework/data/redis/serializer/JacksonJsonRedisSerializer
@1.0.0.RELEASE
+#<init>(Ljava/lang/Class;)V
+#deserialize([B)Ljava/lang/Object;
+#serialize(Ljava/lang/Object;)[B
+#setObjectMapper(Lorg/codehaus/jackson/map/ObjectMapper;)V
@1.4.2.RELEASE
+#<init>(Lorg/codehaus/jackson/type/JavaType;)V
@2.0.0.RELEASE
-###org/springframework/data/redis/serializer/JacksonJsonRedisSerializer

+###org/springframework/data/redis/core/DefaultGeoOperations
@1.8.0.RELEASE
+#geoAdd(Ljava/lang/Object;Lorg/springframework/data/geo/Point;Ljava/lang/Object;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/Object;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoLocation;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Long;
+#geoAdd(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/lang/Long;
+#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/geo/Distance;
+#geoDist(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Metric;)Lorg/springframework/data/geo/Distance;
+#geoHash(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#geoPos(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
+#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;)Lorg/springframework/data/geo/GeoResults;
+#geoRadius(Ljava/lang/Object;Lorg/springframework/data/geo/Circle;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;D)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;)Lorg/springframework/data/geo/GeoResults;
+#geoRadiusByMember(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/data/geo/Distance;Lorg/springframework/data/redis/connection/RedisGeoCommands$GeoRadiusCommandArgs;)Lorg/springframework/data/geo/GeoResults;
+#geoRemove(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Long;
+#getOperations()Lorg/springframework/data/redis/core/RedisOperations;
@2.0.0.RELEASE
-###org/springframework/data/redis/core/DefaultGeoOperations

+###org/springframework/data/redis/connection/srp/SrpConverters
@1.1.0.M2
+#<init>()V
+#repliesToBytesList()Lorg/springframework/core/convert/converter/Converter;
+#repliesToBytesSet()Lorg/springframework/core/convert/converter/Converter;
+#bytesToProperties()Lorg/springframework/core/convert/converter/Converter;
+#bytesToDouble()Lorg/springframework/core/convert/converter/Converter;
+#repliesToTupleSet()Lorg/springframework/core/convert/converter/Converter;
+#repliesToBytesMap()Lorg/springframework/core/convert/converter/Converter;
+#bytesToString()Lorg/springframework/core/convert/converter/Converter;
+#repliesToBooleanList()Lorg/springframework/core/convert/converter/Converter;
+#repliesToStringList()Lorg/springframework/core/convert/converter/Converter;
+#toBytesList([Lredis/reply/Reply;)Ljava/util/List;
+#toBytesSet([Lredis/reply/Reply;)Ljava/util/Set;
+#toProperties([B)Ljava/util/Properties;
+#toDouble([B)Ljava/lang/Double;
+#toTupleSet([Lredis/reply/Reply;)Ljava/util/Set;
+#toBytesMap([Lredis/reply/Reply;)Ljava/util/Map;
+#toString([B)Ljava/lang/String;
+#toBooleanList([Lredis/reply/Reply;)Ljava/util/List;
+#toStringList([Lredis/reply/Reply;)Ljava/util/List;
+#toBytes(Lorg/springframework/data/redis/connection/RedisStringCommands$BitOperation;)[B
+#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
+#toByteArrays(Ljava/util/Map;)[[B
+#toBytes(Lorg/springframework/data/redis/connection/RedisListCommands$Position;)[B
+#toStringList(Ljava/lang/String;)Ljava/util/List;
@1.2.0.RELEASE
+#repliesToTimeAsLong()Lorg/springframework/core/convert/converter/Converter;
+#toTimeAsLong([Lredis/reply/Reply;)Ljava/lang/Long;
@1.3.0.RELEASE
+#replyToString()Lorg/springframework/core/convert/converter/Converter;
+#toListOfRedisClientInformation(Lredis/reply/Reply;)Ljava/util/List;
+#longToBooleanConverter()Lorg/springframework/core/convert/converter/Converter;
+#toString(Lredis/reply/Reply;)Ljava/lang/String;
+#replyToListOfRedisClientInfo()Lorg/springframework/core/convert/converter/Converter;
+#toBoolean(Lredis/reply/IntegerReply;)Ljava/lang/Boolean;
@1.3.2.RELEASE
+#exceptionConverter()Lorg/springframework/core/convert/converter/Converter;
-#toDataAccessException(Ljava/lang/Exception;)Lorg/springframework/dao/DataAccessException;
@1.6.0.RELEASE
+#boundaryToBytesForZRange(Lorg/springframework/data/redis/connection/RedisZSetCommands$Range$Boundary;[B)[B
+#toBytes(Ljava/lang/String;)[B
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/srp/SrpConverters

+###org/springframework/data/redis/cache/DefaultRedisCachePrefix
@1.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#prefix(Ljava/lang/String;)[B
@2.0.0.RELEASE
-###org/springframework/data/redis/cache/DefaultRedisCachePrefix

+###org/springframework/data/redis/connection/jredis/JredisPool
@1.1.0.M1
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ILorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
+#<init>(Lorg/jredis/connector/ConnectionSpec;)V
+#<init>(Lorg/jredis/connector/ConnectionSpec;Lorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
+#<init>(Ljava/lang/String;IILjava/lang/String;I)V
+#<init>(Ljava/lang/String;IILjava/lang/String;ILorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
+#getResource()Lorg/jredis/JRedis;
+#returnBrokenResource(Lorg/jredis/JRedis;)V
+#returnResource(Lorg/jredis/JRedis;)V
+#destroy()V
+#returnResource(Ljava/lang/Object;)V
+#returnBrokenResource(Ljava/lang/Object;)V
+#getResource()Ljava/lang/Object;
@1.3.0.RELEASE
+#<init>(Ljava/lang/String;ILorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)V
+#<init>(Lorg/jredis/connector/ConnectionSpec;Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)V
+#<init>(Ljava/lang/String;IILjava/lang/String;ILorg/apache/commons/pool2/impl/GenericObjectPoolConfig;)V
-#<init>(Ljava/lang/String;ILorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
-#<init>(Lorg/jredis/connector/ConnectionSpec;Lorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
-#<init>(Ljava/lang/String;IILjava/lang/String;ILorg/apache/commons/pool/impl/GenericObjectPool$Config;)V
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/jredis/JredisPool

+###org/springframework/data/redis/connection/srp/SrpConnectionFactory
@1.0.1.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;I)V
+#afterPropertiesSet()V
+#destroy()V
+#getConnection()Lorg/springframework/data/redis/connection/RedisConnection;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
@1.1.0.M2
+#getConvertPipelineAndTxResults()Z
+#setConvertPipelineAndTxResults(Z)V
@1.1.0.RC1
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
@1.4.0.RELEASE
+#getSentinelConnection()Lorg/springframework/data/redis/connection/RedisSentinelConnection;
@1.7.0.RELEASE
+#getClusterConnection()Lorg/springframework/data/redis/connection/RedisClusterConnection;
@2.0.0.RELEASE
-###org/springframework/data/redis/connection/srp/SrpConnectionFactory

+###org/springframework/data/redis/connection/rjc/RjcUtils
@1.0.0.RELEASE
+#<init>()V
+#convertRjcAccessException(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#convertRjcAccessException(Lorg/idevlab/rjc/RedisException;)Lorg/springframework/dao/DataAccessException;
@1.1.0.M1
-###org/springframework/data/redis/connection/rjc/RjcUtils

+###org/springframework/data/redis/connection/rjc/RjcConnection
@1.0.0.RELEASE
+#<init>(Lorg/idevlab/rjc/ds/RedisConnection;I)V
+#close()V
+#isClosed()Z
+#getNativeConnection()Lorg/idevlab/rjc/Session;
+#isQueueing()Z
+#isPipelined()Z
+#openPipeline()V
+#closePipeline()Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;)Ljava/util/List;
+#sort([BLorg/springframework/data/redis/connection/SortParameters;[B)Ljava/lang/Long;
+#dbSize()Ljava/lang/Long;
+#flushDb()V
+#flushAll()V
+#bgSave()V
+#bgWriteAof()V
+#save()V
+#getConfig(Ljava/lang/String;)Ljava/util/List;
+#info()Ljava/util/Properties;
+#lastSave()Ljava/lang/Long;
+#setConfig(Ljava/lang/String;Ljava/lang/String;)V
+#resetConfigStats()V
+#shutdown()V
+#echo([B)[B
+#ping()Ljava/lang/String;
+#del([[B)Ljava/lang/Long;
+#discard()V
+#exec()Ljava/util/List;
+#exists([B)Ljava/lang/Boolean;
+#expire([BJ)Ljava/lang/Boolean;
+#expireAt([BJ)Ljava/lang/Boolean;
+#keys([B)Ljava/util/Set;
+#multi()V
+#persist([B)Ljava/lang/Boolean;
+#move([BI)Ljava/lang/Boolean;
+#randomKey()[B
+#rename([B[B)V
+#renameNX([B[B)Ljava/lang/Boolean;
+#select(I)V
+#ttl([B)Ljava/lang/Long;
+#type([B)Lorg/springframework/data/redis/connection/DataType;
+#unwatch()V
+#watch([[B)V
+#get([B)[B
+#set([B[B)V
+#getSet([B[B)[B
+#append([B[B)Ljava/lang/Long;
+#mGet([[B)Ljava/util/List;
+#mSet(Ljava/util/Map;)V
+#mSetNX(Ljava/util/Map;)V
+#setEx([BJ[B)V
+#setNX([B[B)Ljava/lang/Boolean;
+#getRange([BJJ)[B
+#decr([B)Ljava/lang/Long;
+#decrBy([BJ)Ljava/lang/Long;
+#incr([B)Ljava/lang/Long;
+#incrBy([BJ)Ljava/lang/Long;
+#getBit([BJ)Ljava/lang/Boolean;
+#setBit([BJZ)V
+#setRange([B[BJ)V
+#strLen([B)Ljava/lang/Long;
+#lPush([B[B)Ljava/lang/Long;
+#rPush([B[B)Ljava/lang/Long;
+#bLPop(I[[B)Ljava/util/List;
+#bRPop(I[[B)Ljava/util/List;
+#lIndex([BJ)[B
+#lInsert([BLorg/springframework/data/redis/connection/RedisListCommands$Position;[B[B)Ljava/lang/Long;
+#lLen([B)Ljava/lang/Long;
+#lPop([B)[B
+#lRange([BJJ)Ljava/util/List;
+#lRem([BJ[B)Ljava/lang/Long;
+#lSet([BJ[B)V
+#lTrim([BJJ)V
+#rPop([B)[B
+#rPopLPush([B[B)[B
+#bRPopLPush(I[B[B)[B
+#lPushX([B[B)Ljava/lang/Long;
+#rPushX([B[B)Ljava/lang/Long;
+#sAdd([B[B)Ljava/lang/Boolean;
+#sCard([B)Ljava/lang/Long;
+#sDiff([[B)Ljava/util/Set;
+#sDiffStore([B[[B)V
+#sInter([[B)Ljava/util/Set;
+#sInterStore([B[[B)V
+#sIsMember([B[B)Ljava/lang/Boolean;
+#sMembers([B)Ljava/util/Set;
+#sMove([B[B[B)Ljava/lang/Boolean;
+#sPop([B)[B
+#sRandMember([B)[B
+#sRem([B[B)Ljava/lang/Boolean;
+#sUnion([[B)Ljava/util/Set;
+#sUnionStore([B[[B)V
+#zAdd([BD[B)Ljava/lang/Boolean;
+#zCard([B)Ljava/lang/Long;
+#zCount([BDD)Ljava/lang/Long;
+#zIncrBy([BD[B)Ljava/lang/Double;
+#zInterStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zInterStore([B[[B)Ljava/lang/Long;
+#zRange([BJJ)Ljava/util/Set;
+#zRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDDJJ)Ljava/util/Set;
+#zRevRangeByScore([BDD)Ljava/util/Set;
+#zRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRevRangeWithScores([BJJ)Ljava/util/Set;
+#zRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDDJJ)Ljava/util/Set;
+#zRevRangeByScoreWithScores([BDD)Ljava/util/Set;
+#zRank([B[B)Ljava/lang/Long;
+#zRem([B[B)Ljava/lang/Boolean;
+#zRemRange([BJJ)Ljava/lang/Long;
+#zRemRangeByScore([BDD)Ljava/lang/Long;
+#zRevRange([BJJ)Ljava/util/Set;
+#zRevRank([B[B)Ljava/lang/Long;
+#zScore([B[B)Ljava/lang/Double;
+#zUnionStore([BLorg/springframework/data/redis/connection/RedisZSetCommands$Aggregate;[I[[B)Ljava/lang/Long;
+#zUnionStore([B[[B)Ljava/lang/Long;
+#hSet([B[B[B)Ljava/lang/Boolean;
+#hSetNX([B[B[B)Ljava/lang/Boolean;
+#hDel([B[B)Ljava/lang/Boolean;
+#hExists([B[B)Ljava/lang/Boolean;
+#hGet([B[B)[B
+#hGetAll([B)Ljava/util/Map;
+#hIncrBy([B[BJ)Ljava/lang/Long;
+#hKeys([B)Ljava/util/Set;
+#hLen([B)Ljava/lang/Long;
+#hMGet([B[[B)Ljava/util/List;
+#hMSet([BLjava/util/Map;)V
+#hVals([B)Ljava/util/List;
+#publish([B[B)Ljava/lang/Long;
+#getSubscription()Lorg/springframework/data/redis/connection/Subscription;
+#isSubscribed()Z
+#pSubscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#subscribe(Lorg/springframework/data/redis/connection/MessageListener;[[B)V
+#getNativeConnection()Ljava/lang/Object;
@1.0.1.RELEASE
+#execute(Ljava/lang/String;[[B)Ljava/lang/Object;
+#sDiffStore([B[[B)Ljava/lang/Long;
+#sInterStore([B[[B)Ljava/lang/Long;
+#sUnionStore([B[[B)Ljava/lang/Long;
-#sDiffStore([B[[B)V
-#sInterStore([B[[B)V
-#sUnionStore([B[[B)V
@1.0.4.RELEASE
+#<init>(Lorg/idevlab/rjc/ds/RedisConnection;ILorg/idevlab/rjc/message/RedisNodeSubscriber;)V
@1.1.0.M1
-###org/springframework/data/redis/connection/rjc/RjcConnection

+###org/springframework/data/redis/connection/rjc/RjcConnectionFactory
@1.0.0.RELEASE
+#<init>()V
+#afterPropertiesSet()V
+#destroy()V
+#getConnection()Lorg/springframework/data/redis/connection/RedisConnection;
+#translateExceptionIfPossible(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
+#getHostName()Ljava/lang/String;
+#setHostName(Ljava/lang/String;)V
+#getPassword()Ljava/lang/String;
+#setPassword(Ljava/lang/String;)V
+#getPort()I
+#setPort(I)V
+#getTimeout()I
+#setTimeout(I)V
+#getUsePool()Z
+#setUsePool(Z)V
+#getDatabase()I
+#setDatabase(I)V
@1.1.0.M1
-###org/springframework/data/redis/connection/rjc/RjcConnectionFactory

+###org/springframework/data/redis/support/collections/CollectionUtils
@2.7.9
+#<init>()V
+#nullSafeList(Ljava/util/List;)Ljava/util/List;
@3.0.0
-###org/springframework/data/redis/support/collections/CollectionUtils

+###org/springframework/data/redis/config/RedisCollectionParser
@1.0.0.RELEASE
+#<init>()V
@1.0.1.RELEASE
-###org/springframework/data/redis/config/RedisCollectionParser
