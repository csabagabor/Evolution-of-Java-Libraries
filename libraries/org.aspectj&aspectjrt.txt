
+###org/aspectj/internal/lang/annotation/ajcDeclareAnnotation
@1.5.4
+#pattern()Ljava/lang/String;
+#annotation()Ljava/lang/String;
+#kind()Ljava/lang/String;

+###org/aspectj/internal/lang/annotation/ajcDeclareEoW
@1.5.4
+#message()Ljava/lang/String;
+#pointcut()Ljava/lang/String;
+#isError()Z

+###org/aspectj/internal/lang/annotation/ajcDeclareParents
@1.5.4
+#targetTypePattern()Ljava/lang/String;
+#parentTypes()Ljava/lang/String;
+#isExtends()Z

+###org/aspectj/internal/lang/annotation/ajcDeclarePrecedence
@1.5.4
+#value()Ljava/lang/String;

+###org/aspectj/internal/lang/annotation/ajcDeclareSoft
@1.5.4
+#exceptionType()Ljava/lang/String;
+#pointcut()Ljava/lang/String;

+###org/aspectj/internal/lang/annotation/ajcITD
@1.5.4
+#modifiers()I
+#targetType()Ljava/lang/String;
+#name()Ljava/lang/String;

+###org/aspectj/internal/lang/annotation/ajcPrivileged
@1.5.4

+###org/aspectj/internal/lang/reflect/AdviceImpl
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getGenericParameterTypes()[Ljava/lang/reflect/Type;
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getKind()Lorg/aspectj/lang/reflect/AdviceKind;
+#getName()Ljava/lang/String;
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/AjTypeImpl
@1.5.4
+#<init>(Ljava/lang/Class;)V
+#getName()Ljava/lang/String;
+#getPackage()Ljava/lang/Package;
+#getInterfaces()[Lorg/aspectj/lang/reflect/AjType;
+#getModifiers()I
+#getJavaClass()Ljava/lang/Class;
+#getSupertype()Lorg/aspectj/lang/reflect/AjType;
+#getGenericSupertype()Ljava/lang/reflect/Type;
+#getEnclosingMethod()Ljava/lang/reflect/Method;
+#getEnclosingConstructor()Ljava/lang/reflect/Constructor;
+#getEnclosingType()Lorg/aspectj/lang/reflect/AjType;
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getPerClause()Lorg/aspectj/lang/reflect/PerClause;
+#isAnnotationPresent(Ljava/lang/Class;)Z
+#getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
+#getAnnotations()[Ljava/lang/annotation/Annotation;
+#getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;
+#getAjTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getDeclaredAjTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;
+#getConstructors()[Ljava/lang/reflect/Constructor;
+#getDeclaredConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;
+#getDeclaredConstructors()[Ljava/lang/reflect/Constructor;
+#getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getDeclaredFields()[Ljava/lang/reflect/Field;
+#getField(Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getFields()[Ljava/lang/reflect/Field;
+#getDeclaredMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;
+#getMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;
+#getDeclaredMethods()[Ljava/lang/reflect/Method;
+#getMethods()[Ljava/lang/reflect/Method;
+#getDeclaredPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;
+#getPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;
+#getDeclaredPointcuts()[Lorg/aspectj/lang/reflect/Pointcut;
+#getPointcuts()[Lorg/aspectj/lang/reflect/Pointcut;
+#getDeclaredAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;
+#getAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;
+#getAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;
+#getDeclaredAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;
+#getDeclaredITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getDeclaredITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getDeclaredITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getDeclaredITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getDeclaredITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getDeclaredITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getDeclareErrorOrWarnings()[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;
+#getDeclareParents()[Lorg/aspectj/lang/reflect/DeclareParents;
+#getDeclareSofts()[Lorg/aspectj/lang/reflect/DeclareSoft;
+#getDeclareAnnotations()[Lorg/aspectj/lang/reflect/DeclareAnnotation;
+#getDeclarePrecedence()[Lorg/aspectj/lang/reflect/DeclarePrecedence;
+#getEnumConstants()[Ljava/lang/Object;
+#getTypeParameters()[Ljava/lang/reflect/TypeVariable;
+#isEnum()Z
+#isInstance(Ljava/lang/Object;)Z
+#isInterface()Z
+#isLocalClass()Z
+#isMemberClass()Z
+#isArray()Z
+#isPrimitive()Z
+#isAspect()Z
+#isMemberAspect()Z
+#isPrivileged()Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/DeclareAnnotationImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;Ljava/lang/String;Ljava/lang/annotation/Annotation;Ljava/lang/String;)V
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getKind()Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;
+#getSignaturePattern()Lorg/aspectj/lang/reflect/SignaturePattern;
+#getTypePattern()Lorg/aspectj/lang/reflect/TypePattern;
+#getAnnotation()Ljava/lang/annotation/Annotation;
+#getAnnotationAsText()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/DeclareErrorOrWarningImpl
@1.5.4
+#<init>(Ljava/lang/String;Ljava/lang/String;ZLorg/aspectj/lang/reflect/AjType;)V
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;
+#getMessage()Ljava/lang/String;
+#isError()Z
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/DeclareParentsImpl
@1.5.4
+#<init>(Ljava/lang/String;Ljava/lang/String;ZLorg/aspectj/lang/reflect/AjType;)V
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getTargetTypesPattern()Lorg/aspectj/lang/reflect/TypePattern;
+#isExtends()Z
+#isImplements()Z
+#getParentTypes()[Ljava/lang/reflect/Type;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/DeclarePrecedenceImpl
@1.5.4
+#<init>(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)V
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getPrecedenceOrder()[Lorg/aspectj/lang/reflect/TypePattern;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/DeclareSoftImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;Ljava/lang/String;)V
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getSoftenedExceptionType()Lorg/aspectj/lang/reflect/AjType;
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/InterTypeConstructorDeclarationImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/reflect/Method;)V
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getGenericParameterTypes()[Ljava/lang/reflect/Type;
+#getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/InterTypeDeclarationImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;I)V
+#<init>(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;I)V
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getTargetType()Lorg/aspectj/lang/reflect/AjType;
+#getModifiers()I

+###org/aspectj/internal/lang/reflect/InterTypeFieldDeclarationImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/String;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Type;)V
+#<init>(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Field;)V
+#getName()Ljava/lang/String;
+#getType()Lorg/aspectj/lang/reflect/AjType;
+#getGenericType()Ljava/lang/reflect/Type;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/InterTypeMethodDeclarationImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/AjType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/reflect/Method;)V
+#<init>(Lorg/aspectj/lang/reflect/AjType;Lorg/aspectj/lang/reflect/AjType;Ljava/lang/reflect/Method;I)V
+#getName()Ljava/lang/String;
+#getReturnType()Lorg/aspectj/lang/reflect/AjType;
+#getGenericReturnType()Ljava/lang/reflect/Type;
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getGenericParameterTypes()[Ljava/lang/reflect/Type;
+#getTypeParameters()[Ljava/lang/reflect/TypeVariable;
+#getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/PerClauseImpl
@1.5.4
+#getKind()Lorg/aspectj/lang/reflect/PerClauseKind;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/PointcutBasedPerClauseImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/PerClauseKind;Ljava/lang/String;)V
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/PointcutExpressionImpl
@1.5.4
+#<init>(Ljava/lang/String;)V
+#asString()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/PointcutImpl
@1.5.4
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;
+#getName()Ljava/lang/String;
+#getModifiers()I
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getParameterNames()[Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/SignaturePatternImpl
@1.5.4
+#<init>(Ljava/lang/String;)V
+#asString()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/StringToType
@1.5.4
+#<init>()V
+#commaSeparatedListToTypeArray(Ljava/lang/String;Ljava/lang/Class;)[Ljava/lang/reflect/Type;
+#stringToType(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Type;

+###org/aspectj/internal/lang/reflect/TypePatternBasedPerClauseImpl
@1.5.4
+#<init>(Lorg/aspectj/lang/reflect/PerClauseKind;Ljava/lang/String;)V
+#getTypePattern()Lorg/aspectj/lang/reflect/TypePattern;
+#toString()Ljava/lang/String;

+###org/aspectj/internal/lang/reflect/TypePatternImpl
@1.5.4
+#<init>(Ljava/lang/String;)V
+#asString()Ljava/lang/String;
+#toString()Ljava/lang/String;

+###org/aspectj/lang/Aspects
@1.5.4
+#<init>()V
+#aspectOf(Ljava/lang/Class;)Ljava/lang/Object;
+#aspectOf(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#aspectOf(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
+#hasAspect(Ljava/lang/Class;)Z
+#hasAspect(Ljava/lang/Class;Ljava/lang/Object;)Z
+#hasAspect(Ljava/lang/Class;Ljava/lang/Class;)Z

+###org/aspectj/lang/annotation/AdviceName
@1.5.4
+#value()Ljava/lang/String;

+###org/aspectj/lang/annotation/After
@1.5.4
+#value()Ljava/lang/String;
+#argNames()Ljava/lang/String;

+###org/aspectj/lang/annotation/AfterReturning
@1.5.4
+#value()Ljava/lang/String;
+#pointcut()Ljava/lang/String;
+#returning()Ljava/lang/String;
+#argNames()Ljava/lang/String;

+###org/aspectj/lang/annotation/AfterThrowing
@1.5.4
+#value()Ljava/lang/String;
+#pointcut()Ljava/lang/String;
+#throwing()Ljava/lang/String;
+#argNames()Ljava/lang/String;

+###org/aspectj/lang/annotation/Around
@1.5.4
+#value()Ljava/lang/String;
+#argNames()Ljava/lang/String;

+###org/aspectj/lang/annotation/Aspect
@1.5.4
+#value()Ljava/lang/String;

+###org/aspectj/lang/annotation/Before
@1.5.4
+#value()Ljava/lang/String;
+#argNames()Ljava/lang/String;

+###org/aspectj/lang/annotation/DeclareAnnotation
@1.5.4
+#value()Ljava/lang/String;

+###org/aspectj/lang/annotation/DeclareError
@1.5.4
+#value()Ljava/lang/String;

+###org/aspectj/lang/annotation/DeclareMixin
@1.6.4
+#value()Ljava/lang/String;
+#interfaces()[Ljava/lang/Class;

+###org/aspectj/lang/annotation/DeclareParents
@1.5.4
+#value()Ljava/lang/String;
+#defaultImpl()Ljava/lang/Class;

+###org/aspectj/lang/annotation/DeclarePrecedence
@1.5.4
+#value()Ljava/lang/String;

+###org/aspectj/lang/annotation/DeclareWarning
@1.5.4
+#value()Ljava/lang/String;

+###org/aspectj/lang/annotation/Pointcut
@1.5.4
+#value()Ljava/lang/String;
+#argNames()Ljava/lang/String;

+###org/aspectj/lang/annotation/SuppressAjWarnings
@1.5.4
+#value()[Ljava/lang/String;

+###org/aspectj/lang/reflect/Advice
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getKind()Lorg/aspectj/lang/reflect/AdviceKind;
+#getName()Ljava/lang/String;
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getGenericParameterTypes()[Ljava/lang/reflect/Type;
+#getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;

+###org/aspectj/lang/reflect/AdviceKind
@1.5.4
+#values()[Lorg/aspectj/lang/reflect/AdviceKind;
+#valueOf(Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceKind;

+###org/aspectj/lang/reflect/AjType
@1.5.4
+#getName()Ljava/lang/String;
+#getPackage()Ljava/lang/Package;
+#getInterfaces()[Lorg/aspectj/lang/reflect/AjType;
+#getModifiers()I
+#getJavaClass()Ljava/lang/Class;
+#getSupertype()Lorg/aspectj/lang/reflect/AjType;
+#getGenericSupertype()Ljava/lang/reflect/Type;
+#getEnclosingMethod()Ljava/lang/reflect/Method;
+#getEnclosingConstructor()Ljava/lang/reflect/Constructor;
+#getEnclosingType()Lorg/aspectj/lang/reflect/AjType;
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getPerClause()Lorg/aspectj/lang/reflect/PerClause;
+#getAjTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getDeclaredAjTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;
+#getConstructors()[Ljava/lang/reflect/Constructor;
+#getDeclaredConstructor([Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Constructor;
+#getDeclaredConstructors()[Ljava/lang/reflect/Constructor;
+#getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getDeclaredFields()[Ljava/lang/reflect/Field;
+#getField(Ljava/lang/String;)Ljava/lang/reflect/Field;
+#getFields()[Ljava/lang/reflect/Field;
+#getDeclaredMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;
+#getMethod(Ljava/lang/String;[Lorg/aspectj/lang/reflect/AjType;)Ljava/lang/reflect/Method;
+#getDeclaredMethods()[Ljava/lang/reflect/Method;
+#getMethods()[Ljava/lang/reflect/Method;
+#getDeclaredPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;
+#getPointcut(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Pointcut;
+#getDeclaredPointcuts()[Lorg/aspectj/lang/reflect/Pointcut;
+#getPointcuts()[Lorg/aspectj/lang/reflect/Pointcut;
+#getDeclaredAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;
+#getAdvice([Lorg/aspectj/lang/reflect/AdviceKind;)[Lorg/aspectj/lang/reflect/Advice;
+#getAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;
+#getDeclaredAdvice(Ljava/lang/String;)Lorg/aspectj/lang/reflect/Advice;
+#getDeclaredITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getDeclaredITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getITDMethod(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getITDMethods()[Lorg/aspectj/lang/reflect/InterTypeMethodDeclaration;
+#getDeclaredITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getDeclaredITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getITDConstructor(Lorg/aspectj/lang/reflect/AjType;[Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getITDConstructors()[Lorg/aspectj/lang/reflect/InterTypeConstructorDeclaration;
+#getDeclaredITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getDeclaredITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getITDField(Ljava/lang/String;Lorg/aspectj/lang/reflect/AjType;)Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getITDFields()[Lorg/aspectj/lang/reflect/InterTypeFieldDeclaration;
+#getDeclareErrorOrWarnings()[Lorg/aspectj/lang/reflect/DeclareErrorOrWarning;
+#getDeclareParents()[Lorg/aspectj/lang/reflect/DeclareParents;
+#getDeclareSofts()[Lorg/aspectj/lang/reflect/DeclareSoft;
+#getDeclareAnnotations()[Lorg/aspectj/lang/reflect/DeclareAnnotation;
+#getDeclarePrecedence()[Lorg/aspectj/lang/reflect/DeclarePrecedence;
+#getEnumConstants()[Ljava/lang/Object;
+#getTypeParameters()[Ljava/lang/reflect/TypeVariable;
+#isEnum()Z
+#isInstance(Ljava/lang/Object;)Z
+#isInterface()Z
+#isLocalClass()Z
+#isMemberClass()Z
+#isArray()Z
+#isPrimitive()Z
+#isAspect()Z
+#isMemberAspect()Z
+#isPrivileged()Z

+###org/aspectj/lang/reflect/AjTypeSystem
@1.5.4
+#<init>()V
+#getAjType(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/AjType;

+###org/aspectj/lang/reflect/DeclareAnnotation$Kind
@1.5.4
+#values()[Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;
+#valueOf(Ljava/lang/String;)Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;

+###org/aspectj/lang/reflect/DeclareAnnotation
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getKind()Lorg/aspectj/lang/reflect/DeclareAnnotation$Kind;
+#getSignaturePattern()Lorg/aspectj/lang/reflect/SignaturePattern;
+#getTypePattern()Lorg/aspectj/lang/reflect/TypePattern;
+#getAnnotation()Ljava/lang/annotation/Annotation;
+#getAnnotationAsText()Ljava/lang/String;

+###org/aspectj/lang/reflect/DeclareErrorOrWarning
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;
+#getMessage()Ljava/lang/String;
+#isError()Z

+###org/aspectj/lang/reflect/DeclareParents
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getTargetTypesPattern()Lorg/aspectj/lang/reflect/TypePattern;
+#isExtends()Z
+#isImplements()Z
+#getParentTypes()[Ljava/lang/reflect/Type;

+###org/aspectj/lang/reflect/DeclarePrecedence
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getPrecedenceOrder()[Lorg/aspectj/lang/reflect/TypePattern;

+###org/aspectj/lang/reflect/DeclareSoft
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getSoftenedExceptionType()Lorg/aspectj/lang/reflect/AjType;
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;

+###org/aspectj/lang/reflect/InterTypeConstructorDeclaration
@1.5.4
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getGenericParameterTypes()[Ljava/lang/reflect/Type;
+#getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType;

+###org/aspectj/lang/reflect/InterTypeDeclaration
@1.5.4
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getTargetType()Lorg/aspectj/lang/reflect/AjType;
+#getModifiers()I

+###org/aspectj/lang/reflect/InterTypeFieldDeclaration
@1.5.4
+#getName()Ljava/lang/String;
+#getType()Lorg/aspectj/lang/reflect/AjType;
+#getGenericType()Ljava/lang/reflect/Type;

+###org/aspectj/lang/reflect/InterTypeMethodDeclaration
@1.5.4
+#getName()Ljava/lang/String;
+#getReturnType()Lorg/aspectj/lang/reflect/AjType;
+#getGenericReturnType()Ljava/lang/reflect/Type;
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getGenericParameterTypes()[Ljava/lang/reflect/Type;
+#getTypeParameters()[Ljava/lang/reflect/TypeVariable;
+#getExceptionTypes()[Lorg/aspectj/lang/reflect/AjType;

+###org/aspectj/lang/reflect/NoSuchAdviceException
@1.5.4
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/aspectj/lang/reflect/NoSuchPointcutException
@1.5.4
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/aspectj/lang/reflect/PerClause
@1.5.4
+#getKind()Lorg/aspectj/lang/reflect/PerClauseKind;

+###org/aspectj/lang/reflect/PerClauseKind
@1.5.4
+#values()[Lorg/aspectj/lang/reflect/PerClauseKind;
+#valueOf(Ljava/lang/String;)Lorg/aspectj/lang/reflect/PerClauseKind;

+###org/aspectj/lang/reflect/Pointcut
@1.5.4
+#getName()Ljava/lang/String;
+#getModifiers()I
+#getParameterTypes()[Lorg/aspectj/lang/reflect/AjType;
+#getParameterNames()[Ljava/lang/String;
+#getDeclaringType()Lorg/aspectj/lang/reflect/AjType;
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;

+###org/aspectj/lang/reflect/PointcutBasedPerClause
@1.5.4
+#getPointcutExpression()Lorg/aspectj/lang/reflect/PointcutExpression;

+###org/aspectj/lang/reflect/PointcutExpression
@1.5.4
+#asString()Ljava/lang/String;

+###org/aspectj/lang/reflect/SignaturePattern
@1.5.4
+#asString()Ljava/lang/String;

+###org/aspectj/lang/reflect/TypePattern
@1.5.4
+#asString()Ljava/lang/String;

+###org/aspectj/lang/reflect/TypePatternBasedPerClause
@1.5.4
+#getTypePattern()Lorg/aspectj/lang/reflect/TypePattern;

+###org/aspectj/lang/Aspects14
@1.5.4
+#<init>()V
+#aspectOf(Ljava/lang/Class;)Ljava/lang/Object;
+#aspectOf(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
+#aspectOf(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
+#hasAspect(Ljava/lang/Class;)Z
+#hasAspect(Ljava/lang/Class;Ljava/lang/Object;)Z
+#hasAspect(Ljava/lang/Class;Ljava/lang/Class;)Z

+###org/aspectj/lang/JoinPoint$EnclosingStaticPart
@1.5.4

+###org/aspectj/lang/JoinPoint$StaticPart
@1.5.4
+#getSignature()Lorg/aspectj/lang/Signature;
+#getSourceLocation()Lorg/aspectj/lang/reflect/SourceLocation;
+#getKind()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#toShortString()Ljava/lang/String;
+#toLongString()Ljava/lang/String;
@1.6.4
+#getId()I

+###org/aspectj/lang/JoinPoint
@1.5.4
+#toString()Ljava/lang/String;
+#toShortString()Ljava/lang/String;
+#toLongString()Ljava/lang/String;
+#getThis()Ljava/lang/Object;
+#getTarget()Ljava/lang/Object;
+#getArgs()[Ljava/lang/Object;
+#getSignature()Lorg/aspectj/lang/Signature;
+#getSourceLocation()Lorg/aspectj/lang/reflect/SourceLocation;
+#getKind()Ljava/lang/String;
+#getStaticPart()Lorg/aspectj/lang/JoinPoint$StaticPart;

+###org/aspectj/lang/NoAspectBoundException
@1.5.4
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>()V
+#getCause()Ljava/lang/Throwable;

+###org/aspectj/lang/ProceedingJoinPoint
@1.5.4
+#set$AroundClosure(Lorg/aspectj/runtime/internal/AroundClosure;)V
+#proceed()Ljava/lang/Object;
+#proceed([Ljava/lang/Object;)Ljava/lang/Object;
@1.9.3.RC1
+#stack$AroundClosure(Lorg/aspectj/runtime/internal/AroundClosure;)V

+###org/aspectj/lang/Signature
@1.5.4
+#toString()Ljava/lang/String;
+#toShortString()Ljava/lang/String;
+#toLongString()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getModifiers()I
+#getDeclaringType()Ljava/lang/Class;
+#getDeclaringTypeName()Ljava/lang/String;

+###org/aspectj/lang/SoftException
@1.5.4
+#<init>(Ljava/lang/Throwable;)V
+#getWrappedThrowable()Ljava/lang/Throwable;
+#getCause()Ljava/lang/Throwable;
+#printStackTrace()V
+#printStackTrace(Ljava/io/PrintStream;)V
+#printStackTrace(Ljava/io/PrintWriter;)V

+###org/aspectj/lang/reflect/AdviceSignature
@1.5.4
+#getReturnType()Ljava/lang/Class;
+#getAdvice()Ljava/lang/reflect/Method;

+###org/aspectj/lang/reflect/CatchClauseSignature
@1.5.4
+#getParameterType()Ljava/lang/Class;
+#getParameterName()Ljava/lang/String;

+###org/aspectj/lang/reflect/CodeSignature
@1.5.4
+#getParameterTypes()[Ljava/lang/Class;
+#getParameterNames()[Ljava/lang/String;
+#getExceptionTypes()[Ljava/lang/Class;

+###org/aspectj/lang/reflect/ConstructorSignature
@1.5.4
+#getConstructor()Ljava/lang/reflect/Constructor;

+###org/aspectj/lang/reflect/FieldSignature
@1.5.4
+#getFieldType()Ljava/lang/Class;
+#getField()Ljava/lang/reflect/Field;

+###org/aspectj/lang/reflect/InitializerSignature
@1.5.4
+#getInitializer()Ljava/lang/reflect/Constructor;

+###org/aspectj/lang/reflect/LockSignature
@1.5.4

+###org/aspectj/lang/reflect/MemberSignature
@1.5.4

+###org/aspectj/lang/reflect/MethodSignature
@1.5.4
+#getReturnType()Ljava/lang/Class;
+#getMethod()Ljava/lang/reflect/Method;

+###org/aspectj/lang/reflect/SourceLocation
@1.5.4
+#getWithinType()Ljava/lang/Class;
+#getFileName()Ljava/lang/String;
+#getLine()I
+#getColumn()I

+###org/aspectj/lang/reflect/UnlockSignature
@1.5.4

+###org/aspectj/runtime/CFlow
@1.5.4
+#<init>()V
+#<init>(Ljava/lang/Object;)V
+#getAspect()Ljava/lang/Object;
+#setAspect(Ljava/lang/Object;)V
+#get(I)Ljava/lang/Object;

+###org/aspectj/runtime/internal/AroundClosure
@1.5.4
+#<init>()V
+#<init>([Ljava/lang/Object;)V
+#getFlags()I
+#getState()[Ljava/lang/Object;
+#getPreInitializationState()[Ljava/lang/Object;
+#run([Ljava/lang/Object;)Ljava/lang/Object;
+#linkClosureAndJoinPoint()Lorg/aspectj/lang/ProceedingJoinPoint;
+#linkClosureAndJoinPoint(I)Lorg/aspectj/lang/ProceedingJoinPoint;
@1.9.3.RC1
+#linkStackClosureAndJoinPoint(I)Lorg/aspectj/lang/ProceedingJoinPoint;
+#unlink()V

+###org/aspectj/runtime/internal/CFlowCounter
@1.5.4
+#<init>()V
+#inc()V
+#dec()V
+#isValid()Z
+#getThreadStackFactoryClassName()Ljava/lang/String;

+###org/aspectj/runtime/internal/CFlowPlusState
@1.5.4
+#<init>([Ljava/lang/Object;)V
+#<init>([Ljava/lang/Object;Ljava/lang/Object;)V
+#get(I)Ljava/lang/Object;

+###org/aspectj/runtime/internal/CFlowStack
@1.5.4
+#<init>()V
+#push(Ljava/lang/Object;)V
+#pushInstance(Ljava/lang/Object;)V
+#push([Ljava/lang/Object;)V
+#pop()V
+#peek()Ljava/lang/Object;
+#get(I)Ljava/lang/Object;
+#peekInstance()Ljava/lang/Object;
+#peekCFlow()Lorg/aspectj/runtime/CFlow;
+#peekTopCFlow()Lorg/aspectj/runtime/CFlow;
+#isValid()Z
+#getThreadStackFactoryClassName()Ljava/lang/String;

+###org/aspectj/runtime/internal/Conversions
@1.5.4
+#intObject(I)Ljava/lang/Object;
+#shortObject(S)Ljava/lang/Object;
+#byteObject(B)Ljava/lang/Object;
+#charObject(C)Ljava/lang/Object;
+#longObject(J)Ljava/lang/Object;
+#floatObject(F)Ljava/lang/Object;
+#doubleObject(D)Ljava/lang/Object;
+#booleanObject(Z)Ljava/lang/Object;
+#voidObject()Ljava/lang/Object;
+#intValue(Ljava/lang/Object;)I
+#longValue(Ljava/lang/Object;)J
+#floatValue(Ljava/lang/Object;)F
+#doubleValue(Ljava/lang/Object;)D
+#byteValue(Ljava/lang/Object;)B
+#shortValue(Ljava/lang/Object;)S
+#charValue(Ljava/lang/Object;)C
+#booleanValue(Ljava/lang/Object;)Z
+#voidValue(Ljava/lang/Object;)Ljava/lang/Object;

+###org/aspectj/runtime/internal/PerObjectMap
@1.5.4
+#<init>()V

+###org/aspectj/runtime/internal/cflowstack/ThreadCounter
@1.5.4
+#inc()V
+#dec()V
+#isNotZero()Z
@1.7.3
+#removeThreadCounter()V

+###org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11
@1.5.4
+#<init>()V
+#inc()V
+#dec()V
+#isNotZero()Z
@1.7.3
+#removeThreadCounter()V

+###org/aspectj/runtime/internal/cflowstack/ThreadStack
@1.5.4
+#getThreadStack()Ljava/util/Stack;
@1.7.3
+#removeThreadStack()V

+###org/aspectj/runtime/internal/cflowstack/ThreadStackFactory
@1.5.4
+#getNewThreadStack()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;
+#getNewThreadCounter()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;

+###org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl
@1.5.4
+#<init>()V
+#getNewThreadStack()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;
+#getNewThreadCounter()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;

+###org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl11
@1.5.4
+#<init>()V
+#getNewThreadStack()Lorg/aspectj/runtime/internal/cflowstack/ThreadStack;
+#getNewThreadCounter()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;

+###org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11
@1.5.4
+#<init>()V
+#getThreadStack()Ljava/util/Stack;
@1.7.3
+#removeThreadStack()V

+###org/aspectj/runtime/reflect/Factory
@1.5.4
+#<init>(Ljava/lang/String;Ljava/lang/Class;)V
+#makeSJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeSJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;II)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeSJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeESJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;Lorg/aspectj/lang/reflect/SourceLocation;)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeESJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;II)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeESJP(Ljava/lang/String;Lorg/aspectj/lang/Signature;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeEncSJP(Ljava/lang/reflect/Member;)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;
+#makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;
+#makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;
+#makeJP(Lorg/aspectj/lang/JoinPoint$StaticPart;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/aspectj/lang/JoinPoint;
+#makeMethodSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/MethodSignature;
+#makeMethodSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/MethodSignature;
+#makeMethodSig(ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/MethodSignature;
+#makeConstructorSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/ConstructorSignature;
+#makeConstructorSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/ConstructorSignature;
+#makeConstructorSig(ILjava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;)Lorg/aspectj/lang/reflect/ConstructorSignature;
+#makeFieldSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/FieldSignature;
+#makeFieldSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/FieldSignature;
+#makeFieldSig(ILjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/FieldSignature;
+#makeAdviceSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceSignature;
+#makeAdviceSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/AdviceSignature;
+#makeAdviceSig(ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Lorg/aspectj/lang/reflect/AdviceSignature;
+#makeInitializerSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/InitializerSignature;
+#makeInitializerSig(Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/InitializerSignature;
+#makeInitializerSig(ILjava/lang/Class;)Lorg/aspectj/lang/reflect/InitializerSignature;
+#makeCatchClauseSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature;
+#makeCatchClauseSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature;
+#makeCatchClauseSig(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Lorg/aspectj/lang/reflect/CatchClauseSignature;
+#makeLockSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/LockSignature;
+#makeLockSig()Lorg/aspectj/lang/reflect/LockSignature;
+#makeLockSig(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/LockSignature;
+#makeUnlockSig(Ljava/lang/String;)Lorg/aspectj/lang/reflect/UnlockSignature;
+#makeUnlockSig()Lorg/aspectj/lang/reflect/UnlockSignature;
+#makeUnlockSig(Ljava/lang/Class;)Lorg/aspectj/lang/reflect/UnlockSignature;
+#makeSourceLoc(II)Lorg/aspectj/lang/reflect/SourceLocation;
@1.6.10
+#makeSJP(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeSJP(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
@1.9.0
+#makeMethodSJP(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeMethodESJP(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeConstructorSJP(Ljava/lang/String;ILjava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeConstructorESJP(Ljava/lang/String;ILjava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeCatchClauseSJP(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeCatchClauseESJP(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeFieldSJP(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeFieldESJP(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Class;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeInitializerSJP(Ljava/lang/String;ILjava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeInitializerESJP(Ljava/lang/String;ILjava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeLockSJP(Ljava/lang/String;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeLockESJP(Ljava/lang/String;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeUnlockSJP(Ljava/lang/String;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeUnlockESJP(Ljava/lang/String;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeAdviceSJP(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$StaticPart;
+#makeAdviceESJP(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;I)Lorg/aspectj/lang/JoinPoint$EnclosingStaticPart;
+#makeMethodSig(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/aspectj/lang/reflect/MethodSignature;

+###org/aspectj/runtime/reflect/FieldSignatureImpl
@1.5.4
+#getFieldType()Ljava/lang/Class;
+#getField()Ljava/lang/reflect/Field;
@1.9.3.RC1
+#setLookupClassLoader(Ljava/lang/ClassLoader;)V
+#getDeclaringTypeName()Ljava/lang/String;
+#getDeclaringType()Ljava/lang/Class;
+#getName()Ljava/lang/String;
+#getModifiers()I

+###org/aspectj/lang/annotation/control/CodeGenerationHint
@1.7.2
+#ifNameSuffix()Ljava/lang/String;

+###org/aspectj/lang/annotation/RequiredTypes
@1.8.3
+#value()[Ljava/lang/String;
