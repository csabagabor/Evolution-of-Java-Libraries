
+###org/apache/hadoop/hbase/backup/impl/BackupManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;)V
+#decorateMasterConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
+#decorateRegionServerConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
+#isBackupEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#close()V
+#createBackupInfo(Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupType;Ljava/util/List;Ljava/lang/String;IJ)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#initialize()V
+#setBackupInfo(Lorg/apache/hadoop/hbase/backup/BackupInfo;)V
+#getAncestors(Lorg/apache/hadoop/hbase/backup/BackupInfo;)Ljava/util/ArrayList;
+#getAncestors(Lorg/apache/hadoop/hbase/backup/BackupInfo;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/ArrayList;
+#updateBackupInfo(Lorg/apache/hadoop/hbase/backup/BackupInfo;)V
+#startBackupSession()V
+#finishBackupSession()V
+#readBackupStartCode()Ljava/lang/String;
+#writeBackupStartCode(Ljava/lang/Long;)V
+#readRegionServerLastLogRollResult()Ljava/util/HashMap;
+#readBulkloadRows(Ljava/util/List;)Lorg/apache/hadoop/hbase/util/Pair;
+#removeBulkLoadedRows(Ljava/util/List;Ljava/util/List;)V
+#writeBulkLoadedFiles(Ljava/util/List;[Ljava/util/Map;)V
+#getBackupHistory()Ljava/util/List;
+#getBackupHistory(Z)Ljava/util/ArrayList;
+#writeRegionServerLogTimestamp(Ljava/util/Set;Ljava/util/HashMap;)V
+#readLogTimestampMap()Ljava/util/HashMap;
+#getIncrementalBackupTableSet()Ljava/util/Set;
+#addIncrementalBackupTableSet(Ljava/util/Set;)V
+#recordWALFiles(Ljava/util/List;)V
+#getWALFilesFromBackupSystem()Ljava/util/Iterator;
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupManager

+###org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupRequest;)V
+#execute()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient

+###org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLorg/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedurePool;[B)V
+#acquireBarrier()V
+#insideBarrier()[B
+#cleanup(Ljava/lang/Exception;)V
+#releaseBarrier()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure

+###org/apache/hadoop/hbase/backup/RestoreRequest
@2.0.0-alpha-1
+#getBackupRootDir()Ljava/lang/String;
+#getBackupId()Ljava/lang/String;
+#isCheck()Z
+#getFromTables()[Lorg/apache/hadoop/hbase/TableName;
+#getToTables()[Lorg/apache/hadoop/hbase/TableName;
+#isOverwrite()Z
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/RestoreRequest

+###org/apache/hadoop/hbase/backup/util/RestoreTool
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#incrementalRestoreTable(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#fullRestoreTable(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/TableName;ZLjava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/util/RestoreTool

+###org/apache/hadoop/hbase/codec/MessageCodec
@0.95.0
+#<init>()V
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
@2.0.0-alpha-1
+#getDecoder(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;

+###org/apache/hadoop/hbase/constraint/ConstraintException
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/coordination/BaseCoordinatedStateManager
@0.99.0
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/Server;)V
+#start()V
+#stop()V
+#getServer()Lorg/apache/hadoop/hbase/Server;
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
+#getSplitLogWorkerCoordination()Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;
+#getSplitLogManagerCoordination()Lorg/apache/hadoop/hbase/coordination/SplitLogManagerCoordination;
+#getSplitTransactionCoordination()Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination;
+#getCloseRegionCoordination()Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;
+#getOpenRegionCoordination()Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;
+#getRegionMergeCoordination()Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination;
@1.7.0
-#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@1.7.1
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@2.0.0-alpha-1
+#getProcedureCoordinatorRpcs(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;
+#getProcedureMemberRpcs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;
-#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
-#getSplitTransactionCoordination()Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination;
-#getCloseRegionCoordination()Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;
-#getOpenRegionCoordination()Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;
-#getRegionMergeCoordination()Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/coordination/BaseCoordinatedStateManager

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$TaskFinisher
@0.99.0
+#finish(Lorg/apache/hadoop/hbase/ServerName;Ljava/lang/String;)Lorg/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$TaskFinisher$Status;

+###org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/coordination/ZkCoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#init(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker;)V
+#getDataSetWatchAsync()V
+#taskLoop()V
+#markCorrupted(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/fs/FileSystem;)V
+#isReady()Z
+#getTaskReadySeq()I
+#registerListener()V
+#removeListener()V
+#stopProcessingTasks()V
+#isStop()Z
+#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
+#endTask(Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;)V
@1.1.0
+#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
@2.0.0-alpha-1
+#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
@2.0.0-alpha3
+#endTask(Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/LongAdder;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;)V
-#endTask(Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#<init>(Lorg/apache/hadoop/hbase/coordination/ZkCoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;

+###org/apache/hadoop/hbase/coprocessor/WALObserver
@0.95.0
+#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
+#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@0.99.2
+#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
*#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z[deprecated]
+#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
*#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
@1.3.0
+#preWALRoll(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postWALRoll(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha-1
-#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z[deprecated]
-#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
@2.0.0-alpha3
+#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
+#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
-#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha4
+#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V[deprecated]
+#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V[deprecated]
-#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
-#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V

+###org/apache/hadoop/hbase/errorhandling/ForeignExceptionListener
@0.95.0
+#receive(Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V

+###org/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionListener;J)V
+#getMaxTime()J
+#complete()V
+#start()V
+#trigger()V

+###org/apache/hadoop/hbase/executor/ExecutorService
@0.95.0
+#<init>(Ljava/lang/String;)V
+#shutdown()V
+#startExecutorService(Lorg/apache/hadoop/hbase/executor/ExecutorType;I)V
+#submit(Lorg/apache/hadoop/hbase/executor/EventHandler;)V
+#registerListener(Lorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;)V
+#unregisterListener(Lorg/apache/hadoop/hbase/executor/EventType;)Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;
+#getAllExecutorStatuses()Ljava/util/Map;
@0.98.21-hadoop1
+#getExecutorThreadPool(Lorg/apache/hadoop/hbase/executor/ExecutorType;)Ljava/util/concurrent/ThreadPoolExecutor;
@0.99.0
-#getExecutorThreadPool(Lorg/apache/hadoop/hbase/executor/ExecutorType;)Ljava/util/concurrent/ThreadPoolExecutor;
@1.3.0
+#startExecutorService(Ljava/lang/String;I)V
+#getExecutorThreadPool(Lorg/apache/hadoop/hbase/executor/ExecutorType;)Ljava/util/concurrent/ThreadPoolExecutor;
@2.0.0-alpha-1
-#registerListener(Lorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;)V
-#unregisterListener(Lorg/apache/hadoop/hbase/executor/EventType;)Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;
@2.0.5
+#getExecutorLazily(Lorg/apache/hadoop/hbase/executor/ExecutorType;I)Ljava/util/concurrent/ThreadPoolExecutor;
@2.1.0
-#getExecutorLazily(Lorg/apache/hadoop/hbase/executor/ExecutorType;I)Ljava/util/concurrent/ThreadPoolExecutor;
@2.1.3
+#getExecutorLazily(Lorg/apache/hadoop/hbase/executor/ExecutorType;I)Ljava/util/concurrent/ThreadPoolExecutor;
@2.2.0
+#delayedSubmit(Lorg/apache/hadoop/hbase/executor/EventHandler;JLjava/util/concurrent/TimeUnit;)V
@2.5.0
+#startExecutorService(Lorg/apache/hadoop/hbase/executor/ExecutorService$ExecutorConfig;)V
+#getExecutorLazily(Lorg/apache/hadoop/hbase/executor/ExecutorService$ExecutorConfig;)Ljava/util/concurrent/ThreadPoolExecutor;
-#startExecutorService(Ljava/lang/String;I)V
-#startExecutorService(Lorg/apache/hadoop/hbase/executor/ExecutorType;I)V
-#getExecutorLazily(Lorg/apache/hadoop/hbase/executor/ExecutorType;I)Ljava/util/concurrent/ThreadPoolExecutor;

+###org/apache/hadoop/hbase/fs/HFileSystem
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#getNoChecksumFs()Lorg/apache/hadoop/fs/FileSystem;
+#getBackingFs()Lorg/apache/hadoop/fs/FileSystem;
+#useHBaseChecksum()Z
+#close()V
+#addLocationsOrderInterceptor(Lorg/apache/hadoop/conf/Configuration;)Z
+#get(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getLocalFs(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#createNonRecursive(Lorg/apache/hadoop/fs/Path;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;
@1.5.0
+#setStoragePolicy(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#getStoragePolicyName(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;

+###org/apache/hadoop/hbase/generated/master/table_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/http/lib/StaticUserWebFilter$StaticUserFilter
@0.99.0
+#<init>()V
+#destroy()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#init(Ljavax/servlet/FilterConfig;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/lib/StaticUserWebFilter$StaticUserFilter

+###org/apache/hadoop/hbase/http/NoCacheFilter
@0.99.0
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#destroy()V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/NoCacheFilter

+###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper
@2.0.0-alpha-1
+#createOutput(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLio/netty/channel/EventLoop;)Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput;
+#shouldRetryCreate(Lorg/apache/hadoop/ipc/RemoteException;)Z
@2.0.0-alpha2
+#createOutput(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput;
-#createOutput(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLio/netty/channel/EventLoop;)Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput;
@2.0.0-beta-1
+#createOutput(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput;
-#createOutput(Lorg/apache/hadoop/hdfs/DistributedFileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput;
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper

+###org/apache/hadoop/hbase/io/hfile/bucket/ByteBufferIOEngine
@0.95.0
+#<init>(JZ)V
+#isPersistent()Z
+#read(Ljava/nio/ByteBuffer;J)V
+#write(Ljava/nio/ByteBuffer;J)V
+#sync()V
+#shutdown()V
@0.98.1-hadoop1
+#read(Ljava/nio/ByteBuffer;J)I
-#read(Ljava/nio/ByteBuffer;J)V
@0.98.4-hadoop1
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
+#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#write(Lorg/apache/hadoop/hbase/nio/ByteBuff;J)V
-#read(Ljava/nio/ByteBuffer;J)I
@2.0.0-beta-1
+#<init>(J)V
-#<init>(JZ)V
@2.0.0
+#usesSharedMemory()Z
@2.3.0
+#read(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketEntry;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;

+###org/apache/hadoop/hbase/io/hfile/bucket/FileMmapEngine
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;J)V
+#toString()Ljava/lang/String;
+#isPersistent()Z
+#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#write(Ljava/nio/ByteBuffer;J)V
+#write(Lorg/apache/hadoop/hbase/nio/ByteBuff;J)V
+#sync()V
+#shutdown()V
@2.2.4
-###org/apache/hadoop/hbase/io/hfile/bucket/FileMmapEngine

+###org/apache/hadoop/hbase/io/hfile/CacheStats
@0.95.0
+#<init>()V
+#<init>(I)V
+#miss(Z)V
+#hit(Z)V
+#evict()V
+#evicted()V
+#getRequestCount()J
+#getRequestCachingCount()J
+#getMissCount()J
+#getMissCachingCount()J
+#getHitCount()J
+#getHitCachingCount()J
+#getEvictionCount()J
+#getEvictedCount()J
+#getHitRatio()D
+#getHitCachingRatio()D
+#getMissRatio()D
+#getMissCachingRatio()D
+#evictedPerEviction()D
+#rollMetricsPeriod()V
+#getSumHitCountsPastNPeriods()J
+#getSumRequestCountsPastNPeriods()J
+#getSumHitCachingCountsPastNPeriods()J
+#getSumRequestCachingCountsPastNPeriods()J
+#getHitRatioPastNPeriods()D
+#getHitCachingRatioPastNPeriods()D
@0.98.4-hadoop1
+#toString()Ljava/lang/String;
@0.98.17-hadoop1
+#failInsert()J
+#getFailedInserts()J
@0.98.19-hadoop1
+#miss(ZLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#hit(ZLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#getDataMissCount()J
+#getLeafIndexMissCount()J
+#getBloomChunkMissCount()J
+#getMetaMissCount()J
+#getRootIndexMissCount()J
+#getIntermediateIndexMissCount()J
+#getFileInfoMissCount()J
+#getGeneralBloomMetaMissCount()J
+#getDeleteFamilyBloomMissCount()J
+#getTrailerMissCount()J
+#getDataHitCount()J
+#getLeafIndexHitCount()J
+#getBloomChunkHitCount()J
+#getMetaHitCount()J
+#getRootIndexHitCount()J
+#getIntermediateIndexHitCount()J
+#getFileInfoHitCount()J
+#getGeneralBloomMetaHitCount()J
+#getDeleteFamilyBloomHitCount()J
+#getTrailerHitCount()J
-#hit(Z)V
@0.99.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#hit(Z)V
+#evicted(J)V
+#getAgeAtEvictionSnapshot()Lorg/apache/hadoop/hbase/io/hfile/AgeSnapshot;
-#<init>()V
-#<init>(I)V
-#miss(ZLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#hit(ZLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#evicted()V
-#failInsert()J
-#getDataMissCount()J
-#getLeafIndexMissCount()J
-#getBloomChunkMissCount()J
-#getMetaMissCount()J
-#getRootIndexMissCount()J
-#getIntermediateIndexMissCount()J
-#getFileInfoMissCount()J
-#getGeneralBloomMetaMissCount()J
-#getDeleteFamilyBloomMissCount()J
-#getTrailerMissCount()J
-#getDataHitCount()J
-#getLeafIndexHitCount()J
-#getBloomChunkHitCount()J
-#getMetaHitCount()J
-#getRootIndexHitCount()J
-#getIntermediateIndexHitCount()J
-#getFileInfoHitCount()J
-#getGeneralBloomMetaHitCount()J
-#getDeleteFamilyBloomHitCount()J
-#getTrailerHitCount()J
-#getFailedInserts()J
@1.2.0
+#miss(ZZ)V
+#hit(ZZ)V
+#evicted(JZ)V
+#failInsert()J
+#getPrimaryMissCount()J
+#getPrimaryHitCount()J
+#getPrimaryEvictedCount()J
+#getFailedInserts()J
-#miss(Z)V
-#evicted(J)V
@1.3.0
+#miss(ZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#hit(ZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#getDataMissCount()J
+#getLeafIndexMissCount()J
+#getBloomChunkMissCount()J
+#getMetaMissCount()J
+#getRootIndexMissCount()J
+#getIntermediateIndexMissCount()J
+#getFileInfoMissCount()J
+#getGeneralBloomMetaMissCount()J
+#getDeleteFamilyBloomMissCount()J
+#getTrailerMissCount()J
+#getDataHitCount()J
+#getLeafIndexHitCount()J
+#getBloomChunkHitCount()J
+#getMetaHitCount()J
+#getRootIndexHitCount()J
+#getIntermediateIndexHitCount()J
+#getFileInfoHitCount()J
+#getGeneralBloomMetaHitCount()J
+#getDeleteFamilyBloomHitCount()J
+#getTrailerHitCount()J
-#miss(ZZ)V
-#hit(Z)V
-#hit(ZZ)V

+###org/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader
@0.95.0
+#readBlock(JJZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@0.98.3-hadoop1
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#readBlock(JJZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@0.99.0
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@2.0.0-alpha-1
+#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;)V
@2.3.0
-#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;)V
@2.4.15
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@2.5.0
-#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@2.5.1
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@3.0.0-alpha-1
-#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;

+###org/apache/hadoop/hbase/io/hfile/HFileBlockIndex
@0.95.0
+#<init>()V
+#getMaxChunkSize(Lorg/apache/hadoop/conf/Configuration;)I
@0.98.21-hadoop1
+#getMinIndexNumEntries(Lorg/apache/hadoop/conf/Configuration;)I
@0.99.0
-#getMinIndexNumEntries(Lorg/apache/hadoop/conf/Configuration;)I
@1.1.6
+#getMinIndexNumEntries(Lorg/apache/hadoop/conf/Configuration;)I
@1.2.0
-#getMinIndexNumEntries(Lorg/apache/hadoop/conf/Configuration;)I
@1.2.3
+#getMinIndexNumEntries(Lorg/apache/hadoop/conf/Configuration;)I

+###org/apache/hadoop/hbase/io/hfile/HFileReaderImpl
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;Lorg/apache/hadoop/conf/Configuration;)V[deprecated]
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;ZLorg/apache/hadoop/conf/Configuration;)V
+#toString()Ljava/lang/String;
+#length()J
+#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;)V
+#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
+#getFirstRowKey()[B
+#getLastRowKey()[B
+#getEntries()J
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getCompressionAlgorithm()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#indexSize()J
+#getName()Ljava/lang/String;
+#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexReader;
+#getTrailer()Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;
+#isPrimaryReplicaReader()Z
+#loadFileInfo()Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;
+#getPath()Lorg/apache/hadoop/fs/Path;
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isDecodeMemstoreTS()Z
+#shouldIncludeMemstoreTS()Z
+#getMetaBlock(Ljava/lang/String;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#hasMVCCInfo()Z
+#getLastKey()Lorg/apache/hadoop/hbase/Cell;
+#midkey()Lorg/apache/hadoop/hbase/Cell;
+#close()V
+#close(Z)V
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getUncachedBlockReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$FSReader;
+#getGeneralBloomFilterMetadata()Ljava/io/DataInput;
+#getDeleteBloomFilterMetadata()Ljava/io/DataInput;
+#isFileInfoLoaded()Z
+#getFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
+#prefetchComplete()Z
+#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getMajorVersion()I
+#unbufferStream()V
+#loadFileInfo()Ljava/util/Map;
@2.0.0-alpha4
+#getFirstKey()Ljava/util/Optional;
+#getFirstRowKey()Ljava/util/Optional;
+#getLastRowKey()Ljava/util/Optional;
+#isDecodeMemStoreTS()Z
+#shouldIncludeMemStoreTS()Z
+#getLastKey()Ljava/util/Optional;
+#midKey()Ljava/util/Optional;
-#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
-#getFirstRowKey()[B
-#getLastRowKey()[B
-#isDecodeMemstoreTS()Z
-#shouldIncludeMemstoreTS()Z
-#getLastKey()Lorg/apache/hadoop/hbase/Cell;
-#midkey()Lorg/apache/hadoop/hbase/Cell;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
+#setDataBlockEncoder(Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)V
+#setDataBlockIndexReader(Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$CellBasedKeyBlockIndexReader;)V
+#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$CellBasedKeyBlockIndexReader;
+#setMetaBlockIndexReader(Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$ByteArrayKeyBlockIndexReader;)V
+#getMetaBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$ByteArrayKeyBlockIndexReader;
+#getContext()Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;
+#getHFileInfo()Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;Lorg/apache/hadoop/conf/Configuration;)V[deprecated]
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;ZLorg/apache/hadoop/conf/Configuration;)V
-#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;)V
-#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexReader;
-#loadFileInfo()Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;
-#isDecodeMemStoreTS()Z
-#shouldIncludeMemStoreTS()Z
-#close(Z)V
-#loadFileInfo()Ljava/util/Map;
@2.4.15
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@2.5.0
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
@2.5.1
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@3.0.0-alpha-1
+#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
@3.0.0-alpha-2
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;

+###org/apache/hadoop/hbase/io/WALLink
@0.98.24-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@0.99.0
-###org/apache/hadoop/hbase/io/WALLink

+###org/apache/hadoop/hbase/ipc/RpcCallContext
@0.95.0
+#throwExceptionIfCallerDisconnected()V
@0.95.2-hadoop1
+#throwExceptionIfCallerDisconnected(Ljava/lang/String;)V
-#throwExceptionIfCallerDisconnected()V
@0.96.0-hadoop1
+#isClientCellBlockSupport()Z
@0.96.1-hadoop1
+#disconnectSince()J
-#throwExceptionIfCallerDisconnected(Ljava/lang/String;)V
@0.98.12-hadoop1
+#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
+#getRequestUserName()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetAddress;
@0.99.0
-#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
-#getRequestUserName()Ljava/lang/String;
-#getRemoteAddress()Ljava/net/InetAddress;
@1.0.3
+#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
@1.1.0
+#getRequestUserName()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetAddress;
+#getClientVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$VersionInfo;
@1.2.0
+#isClientCellBlockSupported()Z
+#getClientVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$VersionInfo;
+#isRetryImmediatelySupported()Z
+#getResponseCellSize()J
+#incrementResponseCellSize(J)V
+#getResponseBlockSize()J
+#incrementResponseBlockSize(J)V
-#isClientCellBlockSupport()Z
-#getClientVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$VersionInfo;
@1.3.1
+#getResponseExceptionSize()J
+#incrementResponseExceptionSize(J)V
@1.4.0
+#getDeadline()J
@2.0.0-alpha-1
+#getClientVersionInfo()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$VersionInfo;
+#setCallBack(Lorg/apache/hadoop/hbase/ipc/RpcCallback;)V
-#getClientVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$VersionInfo;
-#getDeadline()J
@2.0.0-alpha4
+#getRequestUser()Ljava/util/Optional;
+#getRequestUserName()Ljava/util/Optional;
-#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
-#getRequestUserName()Ljava/lang/String;

+###org/apache/hadoop/hbase/ipc/RpcServer
@0.95.0
+#setSocketSendBufSize(I)V
+#start()V
+#stop()V
+#join()V
+#getListenerAddress()Ljava/net/InetSocketAddress;
+#call(Ljava/lang/Class;Ljava/lang/reflect/Method;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#setErrorHandler(Lorg/apache/hadoop/hbase/ipc/HBaseRPCErrorHandler;)V
+#openServer()V
+#startThreads()V
+#getMetrics()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServer;
+#setQosFunction(Lcom/google/common/base/Function;)V
@0.95.1-hadoop1
+#<init>(Lcom/google/protobuf/BlockingService;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;IILorg/apache/hadoop/conf/Configuration;I)V
+#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
+#getSecretManager()Lorg/apache/hadoop/security/token/SecretManager;
+#setSecretManager(Lorg/apache/hadoop/security/token/SecretManager;)V
+#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#authorize(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$ConnectionHeader;Ljava/net/InetAddress;)V
+#getCurrentCall()Lorg/apache/hadoop/hbase/ipc/RpcCallContext;
+#getRemoteIp()Ljava/net/InetAddress;
+#getRemoteAddress()Ljava/lang/String;
+#get()Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;
+#bind(Ljava/net/ServerSocket;Ljava/net/InetSocketAddress;I)V
-#call(Ljava/lang/Class;Ljava/lang/reflect/Method;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
+#isStarted()Z
+#getErrorHandler()Lorg/apache/hadoop/hbase/ipc/HBaseRPCErrorHandler;
+#addCallSize(J)V
+#getScheduler()Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
-#setQosFunction(Lcom/google/common/base/Function;)V
-#<init>(Lcom/google/protobuf/BlockingService;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;IILorg/apache/hadoop/conf/Configuration;I)V
-#get()Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;
@0.98.12-hadoop1
+#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
+#getRequestUserName()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetAddress;
-#getRemoteAddress()Ljava/lang/String;
@0.98.13-hadoop1
+#isInRpcCallContext()Z
@0.99.0
-#openServer()V
-#startThreads()V
-#isInRpcCallContext()Z
-#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
-#getRequestUserName()Ljava/lang/String;
-#getRemoteAddress()Ljava/net/InetAddress;
@1.0.3
+#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
@1.1.0
+#isInRpcCallContext()Z
+#getRequestUserName()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetAddress;
@1.1.8
+#setRsRpcServices(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
@1.2.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#setRsRpcServices(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
@1.2.5
+#setRsRpcServices(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
@1.3.0
+#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
@1.4.14
+#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
@1.5.0
+#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
@1.7.0
+#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
+#setNamedQueueRecorder(Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;)V
@2.0.0-alpha-1
+#call(Lorg/apache/hadoop/hbase/ipc/RpcCall;Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#authorize(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$ConnectionHeader;Ljava/net/InetAddress;)V
+#getCurrentCall()Lorg/apache/hadoop/hbase/ipc/RpcCall;
+#getNumOpenConnections()I
-#setSocketSendBufSize(I)V
-#start()V
-#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
-#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
-#stop()V
-#join()V
-#getListenerAddress()Ljava/net/InetSocketAddress;
-#authorize(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$ConnectionHeader;Ljava/net/InetAddress;)V
-#getCurrentCall()Lorg/apache/hadoop/hbase/ipc/RpcCallContext;
-#bind(Ljava/net/ServerSocket;Ljava/net/InetSocketAddress;I)V
-#setNamedQueueRecorder(Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;)V
@2.0.0-alpha4
+#getCurrentCall()Ljava/util/Optional;
+#getRequestUser()Ljava/util/Optional;
+#getRequestUserName()Ljava/util/Optional;
+#getRemoteAddress()Ljava/util/Optional;
-#getCurrentCall()Lorg/apache/hadoop/hbase/ipc/RpcCall;
-#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
-#getRequestUserName()Ljava/lang/String;
-#getRemoteAddress()Ljava/net/InetAddress;
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
@2.2.5
+#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
@2.3.0
+#unsetCurrentCall()Ljava/util/Optional;
+#setCurrentCall(Lorg/apache/hadoop/hbase/ipc/RpcCall;)V
+#getByteBuffAllocator()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;
+#setSlowLogRecorder(Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;)V
+#getSlowLogRecorder()Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;
@2.4.0
+#setNamedQueueRecorder(Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;)V
-#setSlowLogRecorder(Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;)V
-#getSlowLogRecorder()Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;
@3.0.0-alpha-3
+#getCurrentServerCallWithCellScanner()Ljava/util/Optional;

+###org/apache/hadoop/hbase/mapred/GroupingTableMap
@0.95.0
+#<init>()V
+#initJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;)V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/GroupingTableMap

+###org/apache/hadoop/hbase/mapred/TableMap
@0.95.0
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableMap

+###org/apache/hadoop/hbase/mapred/TableReduce
@0.95.0
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableReduce

+###org/apache/hadoop/hbase/mapreduce/CellCounter$CellCounterMapper$Counters
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/mapreduce/CellCounter$CellCounterMapper$Counters;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/mapreduce/CellCounter$CellCounterMapper$Counters;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/CellCounter$CellCounterMapper$Counters

+###org/apache/hadoop/hbase/mapreduce/CellCreator
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#create([BII[BII[BIIJ[BII)Lorg/apache/hadoop/hbase/Cell;
+#create([BII[BII[BIIJ[BIILjava/lang/String;)Lorg/apache/hadoop/hbase/Cell;
@0.98.9-hadoop1
*#create([BII[BII[BIIJ[BIILjava/lang/String;)Lorg/apache/hadoop/hbase/Cell;[deprecated]
+#create([BII[BII[BIIJ[BIILjava/util/List;)Lorg/apache/hadoop/hbase/Cell;
+#getVisibilityExpressionResolver()Lorg/apache/hadoop/hbase/mapreduce/VisibilityExpressionResolver;
@0.99.0
-#create([BII[BII[BIIJ[BIILjava/util/List;)Lorg/apache/hadoop/hbase/Cell;
-#getVisibilityExpressionResolver()Lorg/apache/hadoop/hbase/mapreduce/VisibilityExpressionResolver;
@1.0.0
*#create([BII[BII[BIIJ[BIILjava/lang/String;)Lorg/apache/hadoop/hbase/Cell;[deprecated]
+#create([BII[BII[BIIJ[BIILjava/util/List;)Lorg/apache/hadoop/hbase/Cell;
+#getVisibilityExpressionResolver()Lorg/apache/hadoop/hbase/mapreduce/VisibilityExpressionResolver;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/CellCreator

+###org/apache/hadoop/hbase/mapreduce/HashTable$HashMapper
@0.98.14-hadoop1
+#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/HashTable$HashMapper

+###org/apache/hadoop/hbase/mapreduce/HashTable
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/HashTable

+###org/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparable$KeyValueWritableComparator
@0.98.14-hadoop1
+#<init>()V
+#compare([BII[BII)I
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparable$KeyValueWritableComparator

+###org/apache/hadoop/hbase/mapreduce/Import
@0.95.0
+#<init>()V
+#configureCfRenaming(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;)V
+#addFilterAndArguments(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;Ljava/util/List;)V
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
@0.98.0-hadoop1
+#instantiateFilter(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/filter/Filter;
+#filterKv(Lorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#flushRegionsIfNecessary(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha-1
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/Import

+###org/apache/hadoop/hbase/mapreduce/MultiTableInputFormat
@0.95.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/MultiTableInputFormat

+###org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat$MultiTableRecordWriter
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
+#close(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#write(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Mutation;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat$MultiTableRecordWriter

+###org/apache/hadoop/hbase/mapreduce/SimpleTotalOrderPartitioner
@0.95.0
+#<init>()V
+#setStartKey(Lorg/apache/hadoop/conf/Configuration;[B)V
+#setEndKey(Lorg/apache/hadoop/conf/Configuration;[B)V
+#getPartition(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Ljava/lang/Object;I)I
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/SimpleTotalOrderPartitioner

+###org/apache/hadoop/hbase/mapreduce/TableMapper
@0.95.0
+#<init>()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableMapper

+###org/apache/hadoop/hbase/mapreduce/TableOutputFormat
@0.95.0
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableOutputFormat

+###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormat
@0.96.2-hadoop1
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#setInput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
@1.3.2
+#setInput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha-1
-#setInput(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormat

+###org/apache/hadoop/hbase/mapreduce/TextSortReducer
@0.95.2-hadoop1
+#<init>()V
+#getTs()J
+#getSkipBadLines()Z
+#getBadLineCount()Lorg/apache/hadoop/mapreduce/Counter;
+#incrementBadLineCount(I)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TextSortReducer

+###org/apache/hadoop/hbase/master/assignment/GCRegionProcedure
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>()V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;)V

+###org/apache/hadoop/hbase/master/assignment/RegionStates$ServerState
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerState;
@2.2.0
-###org/apache/hadoop/hbase/master/assignment/RegionStates$ServerState

+###org/apache/hadoop/hbase/master/assignment/RegionStateStore$RegionStateVisitor
@2.0.0-alpha-1
+#visitRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;J)V
@2.0.0-alpha4
+#visitRegionState(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;J)V
-#visitRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;J)V
@2.0.1
+#visitRegionState(Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;J)V
-#visitRegionState(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;J)V

+###org/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#isMeta()Z
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getRegionState(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
+#remoteCallCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;)V
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
+#getServer(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/ServerName;
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
+#remoteCallCompleted(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;)V
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.3
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
-#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
+#remoteOperationCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
+#remoteOperationFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationFailed(Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationCompleted(Ljava/lang/Object;)V
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#remoteCallCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;)V
-#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
-#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z
-#remoteCallCompleted(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;)V
@2.1.1
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.2
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z
-#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
-#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
@2.1.4
+#storeInDispatchedQueue()Z
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRegionState(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#getRegionState(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
-#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
-#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
-#storeInDispatchedQueue()Z
-#getServer(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/ServerName;
-#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z
-#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
@2.3.0
+#setRegionInfo(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getProcName()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action$Type;)V
+#undoAction()Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action

+###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster
@0.95.1-hadoop1
+#moveOrSwapRegion(IIII)V
+#toString()Ljava/lang/String;
@0.99.0
+#doAction(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;)V
-#moveOrSwapRegion(IIII)V
@1.4.0
+#serverHasTooFewRegions(I)Z
+#getOrComputeRackLocalities()[[F
+#getOrComputeRegionsToMostLocalEntities(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)[I
+#getOrComputeLocality(IILorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)F
+#getOrComputeWeightedLocality(IILorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)D
+#getRegionSizeMB(I)I
+#getRackForRegion(I)I
@2.0.0-alpha-1
-#serverHasTooFewRegions(I)Z
-#getOrComputeRackLocalities()[[F
-#getOrComputeRegionsToMostLocalEntities(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)[I
-#getOrComputeLocality(IILorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)F
-#getOrComputeWeightedLocality(IILorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)D
-#getRegionSizeMB(I)I
-#getRackForRegion(I)I
@2.0.0-alpha2
+#serverHasTooFewRegions(I)Z
+#getOrComputeRackLocalities()[[F
+#getOrComputeRegionsToMostLocalEntities(Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)[I
+#getOrComputeLocality(IILorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)F
+#getOrComputeWeightedLocality(IILorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$LocalityType;)D
+#getRegionSizeMB(I)I
+#getRackForRegion(I)I
@2.4.9
+#getNumRegionsComparator()Ljava/util/Comparator;
@2.5.0
-###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster

+###org/apache/hadoop/hbase/master/CatalogJanitor
@0.95.0
+#setEnabled(Z)Z
+#cleanMergeQualifier(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@2.0.0-alpha4
+#cleanMergeQualifier(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#cleanMergeQualifier(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@2.0.6
+#getLastReport()Lorg/apache/hadoop/hbase/master/CatalogJanitor$Report;
+#main([Ljava/lang/String;)V
-#setEnabled(Z)Z
@2.1.0
+#setEnabled(Z)Z
-#getLastReport()Lorg/apache/hadoop/hbase/master/CatalogJanitor$Report;
-#main([Ljava/lang/String;)V
@2.1.6
+#getLastReport()Lorg/apache/hadoop/hbase/master/CatalogJanitor$Report;
+#main([Ljava/lang/String;)V
-#setEnabled(Z)Z
@2.2.0
+#setEnabled(Z)Z
-#getLastReport()Lorg/apache/hadoop/hbase/master/CatalogJanitor$Report;
-#main([Ljava/lang/String;)V
@2.2.1
+#getLastReport()Lorg/apache/hadoop/hbase/master/CatalogJanitor$Report;
+#main([Ljava/lang/String;)V
-#setEnabled(Z)Z
@2.3.2
+#scan()I
-#cleanMergeQualifier(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.4.0
-###org/apache/hadoop/hbase/master/CatalogJanitor

+###org/apache/hadoop/hbase/master/cleaner/TimeToLiveLogCleaner
@0.95.0
+#<init>()V
+#isLogDeletable(Lorg/apache/hadoop/fs/Path;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
@0.95.2-hadoop1
+#isLogDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isLogDeletable(Lorg/apache/hadoop/fs/Path;)Z
@2.0.0-beta-2
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isLogDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@2.3.0
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#stop(Ljava/lang/String;)V
-#isStopped()Z

+###org/apache/hadoop/hbase/master/ExpiredMobFileCleanerChore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
@2.5.0
-###org/apache/hadoop/hbase/master/ExpiredMobFileCleanerChore

+###org/apache/hadoop/hbase/master/LoadBalancer
@0.95.0
+#setClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
+#roundRobinAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#retainAssignment(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;
+#immediateAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
@0.96.0-hadoop1
+#initialize()V
@0.98.1-hadoop1
+#regionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.0.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.3.0
+#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@1.3.3
+#postMasterStartupInitialize()V
+#updateBalancerStatus(Z)V
@1.4.0
-#postMasterStartupInitialize()V
-#updateBalancerStatus(Z)V
@1.4.5
+#postMasterStartupInitialize()V
@1.4.8
+#updateBalancerStatus(Z)V
@2.0.0-alpha-1
+#setClusterLoad(Ljava/util/Map;)V
-#immediateAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
-#postMasterStartupInitialize()V
-#updateBalancerStatus(Z)V
@2.0.0-alpha2
+#isTablesOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z
+#isSystemTablesOnlyOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z
@2.0.0-alpha4
+#randomAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#regionOnline(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionOffline(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
-#regionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-beta-1
+#setClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#setClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
@2.0.1
+#postMasterStartupInitialize()V
@2.0.3
+#isMasterCanHostUserRegions(Lorg/apache/hadoop/conf/Configuration;)Z
@2.1.0
-#isMasterCanHostUserRegions(Lorg/apache/hadoop/conf/Configuration;)Z
@2.1.1
+#updateBalancerStatus(Z)V
+#isMasterCanHostUserRegions(Lorg/apache/hadoop/conf/Configuration;)Z
@2.2.5
+#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#setClusterLoad(Ljava/util/Map;)V
-#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@2.4.0
*#isTablesOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z[deprecated]
*#isSystemTablesOnlyOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z[deprecated]
*#isMasterCanHostUserRegions(Lorg/apache/hadoop/conf/Configuration;)Z[deprecated]
@2.5.0
+#updateClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
+#updateBalancerLoadInfo(Ljava/util/Map;)V
-#setClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/LoadBalancer

+###org/apache/hadoop/hbase/master/locking/LockProcedure$LockType
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/master/locking/LockProcedure$LockType

+###org/apache/hadoop/hbase/master/MasterDumpServlet
@0.95.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.5.0
-###org/apache/hadoop/hbase/master/MasterDumpServlet

+###org/apache/hadoop/hbase/master/MasterStatusServlet
@0.95.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.5.0
-###org/apache/hadoop/hbase/master/MasterStatusServlet

+###org/apache/hadoop/hbase/master/MetricsSnapshot
@0.96.0-hadoop1
+#<init>()V
+#addSnapshot(J)V
+#addSnapshotRestore(J)V
+#addSnapshotClone(J)V

+###org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#toString()Ljava/lang/String;
+#execute(Lorg/apache/hadoop/hbase/client/Admin;)V
@1.3.0
+#getType()Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.3.0
+#submit(Lorg/apache/hadoop/hbase/master/MasterServices;)J
-#execute(Lorg/apache/hadoop/hbase/client/Admin;)V
@2.3.1
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.4.0
-###org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan

+###org/apache/hadoop/hbase/master/normalizer/RegionNormalizerChore
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
@2.4.0
-###org/apache/hadoop/hbase/master/normalizer/RegionNormalizerChore

+###org/apache/hadoop/hbase/master/procedure/AbstractStateMachineRegionProcedure
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>()V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.2.0
+#getRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>()V

+###org/apache/hadoop/hbase/master/procedure/CreateTableProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V

+###org/apache/hadoop/hbase/master/procedure/MasterDDLOperationHelper
@1.1.0
+#isOnlineSchemaChangeAllowed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#checkTableModifiable(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;)V
+#deleteColumnFamilyFromFileSystem(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;[B)V
+#reOpenAllRegions(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;)Z
@2.0.0-alpha-1
+#deleteColumnFamilyFromFileSystem(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;[BZ)V
-#isOnlineSchemaChangeAllowed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#checkTableModifiable(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;)V
-#deleteColumnFamilyFromFileSystem(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;[B)V
-#reOpenAllRegions(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;)Z

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$CompatRemoteProcedureResolver
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#call()Ljava/lang/Void;
+#dispatchOpenRequests(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/util/List;)V
+#dispatchCloseRequests(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/util/List;)V
+#call()Ljava/lang/Object;
@2.0.3
-###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$CompatRemoteProcedureResolver

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$ServerOperation
@2.0.0-alpha-1
@2.0.0-beta-1
-###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$ServerOperation

+###org/apache/hadoop/hbase/master/procedure/ServerProcedureInterface
@1.2.0
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;

+###org/apache/hadoop/hbase/master/procedure/TruncateTableProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Z)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;ZLorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V

+###org/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#prepare()Lorg/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler;
+#process()V
+#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
+#cancel(Ljava/lang/String;)V
+#isFinished()Z
+#getSnapshot()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#getExceptionIfFailed()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;
+#rethrowException()V
+#hasException()Z
+#getException()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#getCompletionTimestamp()J
+#rethrowExceptionIfFailed()V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
@1.2.10
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
@1.3.3
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
@1.4.6
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.4.9
+#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)V
-#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
+#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
+#getSnapshot()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)V
-#getSnapshot()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
@2.2.0
+#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)V
-#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@2.3.0
-#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)V

+###org/apache/hadoop/hbase/mob/compactions/MobCompactionRequest$CompactionType
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/mob/compactions/MobCompactionRequest$CompactionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/compactions/MobCompactionRequest$CompactionType;
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/MobCompactionRequest$CompactionType

+###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionDelPartitionId
@2.0.0-alpha-1
+#<init>()V
+#<init>([B[B)V
+#getStartKey()[B
+#setStartKey([B)V
+#getEndKey()[B
+#setEndKey([B)V
+#compareTo(Lorg/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionDelPartitionId;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionDelPartitionId

+###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactor
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/util/concurrent/ExecutorService;)V
+#compact(Ljava/util/List;Z)Ljava/util/List;
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/util/concurrent/ExecutorService;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/util/concurrent/ExecutorService;)V
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactor

+###org/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager$FlushTableSubprocedureBuilder
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager;)V
+#buildSubprocedure(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/procedure/Subprocedure;

+###org/apache/hadoop/hbase/procedure/MasterProcedureManagerHost
@0.98.1-hadoop1
+#<init>()V
+#loadProcedures(Lorg/apache/hadoop/conf/Configuration;)V
+#initialize(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#stop(Ljava/lang/String;)V
+#getProcedureManager(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/MasterProcedureManager;

+###org/apache/hadoop/hbase/procedure/ProcedureManagerHost
@0.98.1-hadoop1
+#<init>()V
+#loadInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/procedure/ProcedureManager;
+#register(Lorg/apache/hadoop/hbase/procedure/ProcedureManager;)V
+#getProcedureManagers()Ljava/util/Set;
+#loadProcedures(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/procedure/ZKProcedureCoordinator
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)V
+#sendGlobalBarrierAcquire(Lorg/apache/hadoop/hbase/procedure/Procedure;[BLjava/util/List;)V
+#sendGlobalBarrierReached(Lorg/apache/hadoop/hbase/procedure/Procedure;Ljava/util/List;)V
+#resetMembers(Lorg/apache/hadoop/hbase/procedure/Procedure;)V
+#start(Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;)Z
+#sendAbortToMembers(Lorg/apache/hadoop/hbase/procedure/Procedure;Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#close()V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Ljava/lang/String;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/quotas/MasterSpaceQuotaObserver
@2.0.0-alpha-1
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
@2.0.0-alpha4
+#getMasterObserver()Ljava/util/Optional;
@2.0.2
-###org/apache/hadoop/hbase/quotas/MasterSpaceQuotaObserver

+###org/apache/hadoop/hbase/quotas/policies/NoWritesCompactionsViolationPolicyEnforcement
@2.0.0-alpha-1
+#<init>()V
+#enable()V
+#disable()V
+#getPolicyName()Ljava/lang/String;
+#areCompactionsDisabled()Z

+###org/apache/hadoop/hbase/quotas/QuotaCache
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start()V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#getUserLimiter(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
+#getUserQuotaState(Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/hbase/quotas/UserQuotaState;
+#getTableLimiter(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
+#getNamespaceLimiter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
+#isTEST_FORCE_REFRESH()Z
+#setTEST_FORCE_REFRESH(Z)V
@2.0.0-alpha-1
-#isTEST_FORCE_REFRESH()Z
-#setTEST_FORCE_REFRESH(Z)V
@2.2.0
+#getRegionServerQuotaLimiter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;

+###org/apache/hadoop/hbase/quotas/RegionServerSpaceQuotaManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start()V
+#stop()V
+#isStarted()Z
+#copyQuotaSnapshots()Ljava/util/Map;
+#updateQuotaSnapshot(Ljava/util/Map;)V
+#getActiveEnforcements()Lorg/apache/hadoop/hbase/quotas/ActivePolicyEnforcement;
+#getActivePoliciesAsMap()Ljava/util/Map;
+#enforceViolationPolicy(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#disableViolationPolicyEnforcement(Lorg/apache/hadoop/hbase/TableName;)V
+#areCompactionsDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
@2.1.8
+#getRegionSizeStore()Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;
+#buildFileArchiveRequest(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;
@2.2.0
-#getRegionSizeStore()Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;
-#buildFileArchiveRequest(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;
@2.2.3
+#getRegionSizeStore()Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;
+#buildFileArchiveRequest(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;

+###org/apache/hadoop/hbase/regionserver/AbstractMultiFileWriter$WriterFactory
@0.98.19-hadoop1
+#createWriter()Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/AbstractMultiFileWriter$WriterFactory

+###org/apache/hadoop/hbase/regionserver/BusyRegionSplitPolicy
@1.3.1
+#<init>()V
@2.4.3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/CellSet
@2.0.0-alpha-1
+#ceiling(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#descendingIterator()Ljava/util/Iterator;
+#descendingSet()Ljava/util/NavigableSet;
+#floor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#headSet(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#headSet(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableSet;
+#higher(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#iterator()Ljava/util/Iterator;
+#lower(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#pollFirst()Lorg/apache/hadoop/hbase/Cell;
+#pollLast()Lorg/apache/hadoop/hbase/Cell;
+#subSet(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#subSet(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableSet;
+#tailSet(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#tailSet(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableSet;
+#comparator()Ljava/util/Comparator;
+#first()Lorg/apache/hadoop/hbase/Cell;
+#last()Lorg/apache/hadoop/hbase/Cell;
+#add(Lorg/apache/hadoop/hbase/Cell;)Z
+#addAll(Ljava/util/Collection;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#get(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#size()I
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
+#pollLast()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#higher(Ljava/lang/Object;)Ljava/lang/Object;
+#ceiling(Ljava/lang/Object;)Ljava/lang/Object;
+#floor(Ljava/lang/Object;)Ljava/lang/Object;
+#lower(Ljava/lang/Object;)Ljava/lang/Object;
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
@2.0.0-beta-1
+#getNumUniqueKeys()I
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;)V

+###org/apache/hadoop/hbase/regionserver/CompactingMemStore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;Lorg/apache/hadoop/hbase/MemoryCompactionPolicy;)V
+#size()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#preFlushSeqIDEstimation()J
+#isSloppy()Z
+#snapshot()Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#updateLowestUnflushedSequenceIdInWAL(Z)V
+#startReplayingFromWAL()V
+#stopReplayingFromWAL()V
+#setCompositeSnapshot(Z)V
+#isCompositeSnapshot()Z
+#swapCompactedSegments(Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;Z)Z
+#flattenOneSegment(J)V
+#hasImmutableSegments()Z
+#getImmutableSegments()Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;
+#getSmallestReadPoint()J
+#getStore()Lorg/apache/hadoop/hbase/regionserver/Store;
+#getFamilyName()Ljava/lang/String;
+#getScanners(J)Ljava/util/List;
+#debug()V
@2.0.0-alpha4
+#size()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#setIndexType()V
+#getIndexType()Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
+#getStore()Lorg/apache/hadoop/hbase/regionserver/HStore;
-#size()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getStore()Lorg/apache/hadoop/hbase/regionserver/Store;
@2.0.0-beta-1
+#flattenOneSegment(JLorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;)V
-#isCompositeSnapshot()Z
-#flattenOneSegment(J)V
-#setIndexType()V
@2.2.0
+#setInMemoryCompactionCompleted()V

+###org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy
@0.98.17-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
+#selectCompaction(Ljava/util/Collection;Ljava/util/List;ZZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#isMajorCompaction(Ljava/util/Collection;)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
@0.98.19-hadoop1
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#isMajorCompaction(Ljava/util/Collection;)Z
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/FIFOCompactionPolicy

+###org/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider
@0.98.0-hadoop1
+#getStorefiles()Ljava/util/Collection;
+#getStartRow(I)[B
+#getEndRow(I)[B
+#getLevel0Files()Ljava/util/List;
+#getStripeBoundaries()Ljava/util/List;
+#getStripes()Ljava/util/ArrayList;
+#getStripeCount()I

+###org/apache/hadoop/hbase/regionserver/CompactionTool
@0.95.0
+#<init>()V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/regionserver/CompactionTool

+###org/apache/hadoop/hbase/regionserver/DateTieredStoreEngine
@0.98.19-hadoop1
+#<init>()V
+#needsCompaction(Ljava/util/List;)Z
+#createCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/DateTieredStoreEngine

+###org/apache/hadoop/hbase/regionserver/DefaultStoreFlusher
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#flushSnapshot(Ljava/util/SortedSet;JLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
@0.99.0
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
-#flushSnapshot(Ljava/util/SortedSet;JLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
@1.3.0
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
@2.5.0
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
@3.0.0-alpha-1
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
@3.0.0-alpha-3
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/FlushPolicyFactory
@1.1.0
+#<init>()V
+#create(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/FlushPolicy;
+#getFlushPolicyClass(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
@2.0.0-alpha2
+#getFlushPolicyClass(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#getFlushPolicyClass(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;

+###org/apache/hadoop/hbase/regionserver/handler/RegionReplicaFlushHandler
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;Lorg/apache/hadoop/hbase/ipc/RpcControllerFactory;ILorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#process()V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;Lorg/apache/hadoop/hbase/ipc/RpcControllerFactory;ILorg/apache/hadoop/hbase/regionserver/HRegion;)V

+###org/apache/hadoop/hbase/regionserver/HeapMemoryManager
@0.98.10-hadoop1
+#create(Lorg/apache/hadoop/hbase/Server;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
+#start()V
+#stop()V
+#getHeapOccupancyPercent()F
@0.99.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/FlushRequester;Lorg/apache/hadoop/hbase/Server;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
-#create(Lorg/apache/hadoop/hbase/Server;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
-#getHeapOccupancyPercent()F
@1.0.0
+#getHeapOccupancyPercent()F
@1.1.0
+#start(Lorg/apache/hadoop/hbase/ChoreService;)V
-#start()V
@1.2.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/FlushRequester;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerAccounting;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/FlushRequester;Lorg/apache/hadoop/hbase/Server;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
@2.0.0-alpha-1
+#registerTuneObserver(Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager$HeapMemoryTuneObserver;)V
@2.2.0
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/FlushRequester;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerAccounting;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;

+###org/apache/hadoop/hbase/regionserver/ImmutableMemStoreLAB
@2.0.0-alpha-1
+#<init>(Ljava/util/List;)V
+#copyCellInto(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#close()V
+#incScannerCount()V
+#decScannerCount()V
@2.0.0-alpha4
+#getNewExternalChunk()Lorg/apache/hadoop/hbase/regionserver/Chunk;
@2.0.0-beta-1
+#forceCopyOfBigCellInto(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#getNewExternalJumboChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
@2.0.0-beta-2
+#getNewExternalChunk(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
+#getNewExternalChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
+#isOnHeap()Z
+#isOffHeap()Z
-#getNewExternalChunk()Lorg/apache/hadoop/hbase/regionserver/Chunk;
-#getNewExternalJumboChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;

+###org/apache/hadoop/hbase/regionserver/ImmutableSegment
@2.0.0-alpha-1
+#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
+#getMinTimestamp()J
+#getNumOfSegments()I
+#getAllSegments()Ljava/util/List;
+#flatten(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)Z
@2.0.0-alpha3
+#shouldSeek(Lorg/apache/hadoop/hbase/io/TimeRange;J)Z
-#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
@2.0.0-alpha4
-#shouldSeek(Lorg/apache/hadoop/hbase/io/TimeRange;J)Z
-#getMinTimestamp()J
-#flatten(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)Z
@2.0.0-beta-1
+#getNumUniqueKeys()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/KeyValueScanner
@0.95.0
+#peek()Lorg/apache/hadoop/hbase/KeyValue;
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#getSequenceID()J
+#close()V
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
+#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
+#realSeekDone()Z
+#enforceSeek()V
+#isFileScanner()Z
@0.98.0-hadoop1
+#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#seekToLastRow()Z
@0.98.12-hadoop1
+#getNextIndexedKey()[B
@0.99.0
+#peek()Lorg/apache/hadoop/hbase/Cell;
+#next()Lorg/apache/hadoop/hbase/Cell;
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#requestSeek(Lorg/apache/hadoop/hbase/Cell;ZZ)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
-#peek()Lorg/apache/hadoop/hbase/KeyValue;
-#next()Lorg/apache/hadoop/hbase/KeyValue;
-#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
-#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#getNextIndexedKey()[B
@1.0.1
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
@1.2.0
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
@1.4.0
+#getScannerOrder()J
-#getSequenceID()J
@2.0.0-alpha-1
+#getFilePath()Lorg/apache/hadoop/fs/Path;
@2.0.0-alpha4
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/HStore;J)Z
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z

+###org/apache/hadoop/hbase/regionserver/Leases$LeaseStillHeldException
@0.95.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
@2.3.0
-###org/apache/hadoop/hbase/regionserver/Leases$LeaseStillHeldException

+###org/apache/hadoop/hbase/regionserver/MemStore
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#upsert(Ljava/lang/Iterable;J)J
+#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
+#getSnapshotTimeRangeTracker()Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#heapSize()J
+#keySize()J
+#main([Ljava/lang/String;)V
@0.99.0
+#snapshot()Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;
+#clearSnapshot(J)V
+#getFlushableSize()J
+#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
+#timeOfOldestEdit()J
+#rollback(Lorg/apache/hadoop/hbase/Cell;)V
+#delete(Lorg/apache/hadoop/hbase/Cell;)J
+#getRowKeyAtOrBefore(Lorg/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker;)V
+#updateColumnValue([B[B[BJJ)J
+#getScanners(J)Ljava/util/List;
+#size()J
-#<init>()V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
-#getSnapshotTimeRangeTracker()Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
-#heapSize()J
-#keySize()J
-#main([Ljava/lang/String;)V
@1.1.0
+#getSnapshotSize()J
@1.2.0
+#add(Lorg/apache/hadoop/hbase/Cell;)J
-#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
@1.3.3
+#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
-#upsert(Ljava/lang/Iterable;J)J
@1.4.0
+#add(Ljava/lang/Iterable;)J
@2.0.0-alpha-1
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#size()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#preFlushSeqIDEstimation()J
+#isSloppy()Z
+#startReplayingFromWAL()V
+#stopReplayingFromWAL()V
-#getFlushableSize()J
-#getSnapshotSize()J
-#add(Lorg/apache/hadoop/hbase/Cell;)J
-#add(Ljava/lang/Iterable;)J
-#rollback(Lorg/apache/hadoop/hbase/Cell;)V
-#delete(Lorg/apache/hadoop/hbase/Cell;)J
-#getRowKeyAtOrBefore(Lorg/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker;)V
-#updateColumnValue([B[B[BJJ)J
-#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
-#size()J
@2.0.0-alpha4
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#size()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
-#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#size()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;

+###org/apache/hadoop/hbase/regionserver/MemStoreCompactor
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore;Lorg/apache/hadoop/hbase/MemoryCompactionPolicy;)V
+#start()Z
+#stop()V
+#isIndexCompaction()Z
@2.0.0-beta-1
+#resetStats()V
-#isIndexCompaction()Z
@2.0.0
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/MemStoreLABImpl
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#copyCellInto(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#close()V
+#incScannerCount()V
+#decScannerCount()V
@2.0.0-alpha4
+#getNewExternalChunk()Lorg/apache/hadoop/hbase/regionserver/Chunk;
@2.0.0-beta-1
+#forceCopyOfBigCellInto(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#getNewExternalJumboChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
@2.0.0-beta-2
+#getNewExternalChunk(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
+#getNewExternalChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
+#isOnHeap()Z
+#isOffHeap()Z
-#getNewExternalChunk()Lorg/apache/hadoop/hbase/regionserver/Chunk;
-#getNewExternalJumboChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;

+###org/apache/hadoop/hbase/regionserver/MetricsRegionServer
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
+#getMetricsSource()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerSource;
+#getRegionServerWrapper()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;
+#updatePut(J)V
+#updateDelete(J)V
+#updateGet(J)V
+#updateIncrement(J)V
+#updateAppend(J)V
@0.95.1-hadoop1
+#updateReplay(J)V
@0.98.8-hadoop1
+#updateSplitTime(J)V
+#updateFlushTime(J)V
@0.98.10-hadoop1
+#incrSplitRequest()V
+#incrSplitSuccess()V
@0.98.13-hadoop1
+#updateScannerNext(J)V
@0.99.0
-#updateScannerNext(J)V
-#updateSplitTime(J)V
-#incrSplitRequest()V
-#incrSplitSuccess()V
-#updateFlushTime(J)V
@0.99.2
+#updateSplitTime(J)V
+#updateFlushTime(J)V
@1.0.0
+#incrSplitRequest()V
+#incrSplitSuccess()V
@1.1.0
+#updateScannerNext(J)V
@1.3.0
+#updateScanSize(J)V
+#updateScanTime(J)V
+#updateFlush(JJJ)V
+#updateCompaction(ZJIIJJ)V
-#updateScannerNext(J)V
-#updateFlushTime(J)V
@1.3.2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/conf/Configuration;)V
+#updatePut(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateDelete(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateGet(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateIncrement(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateAppend(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateScanSize(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateScanTime(Lorg/apache/hadoop/hbase/TableName;J)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
-#updatePut(J)V
-#updateDelete(J)V
-#updateGet(J)V
-#updateIncrement(J)V
-#updateAppend(J)V
-#updateScanSize(J)V
-#updateScanTime(J)V
@1.4.0
+#updatePutBatch(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateDeleteBatch(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateCheckAndDelete(J)V
+#updateCheckAndPut(J)V
+#updateBulkLoad(J)V
@1.4.11
+#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
+#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@1.6.0
+#getMetricsUserAggregate()Lorg/apache/hadoop/hbase/regionserver/MetricsUserAggregate;
@1.7.0
+#updateCheckAndDelete(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateCheckAndPut(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateCheckAndDelete(J)V
-#updateCheckAndPut(J)V
-#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
+#updatePut(J)V
+#updateDelete(J)V
+#updateGet(J)V
+#updateIncrement(J)V
+#updateAppend(J)V
+#updateScanSize(J)V
+#updateScanTime(J)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/conf/Configuration;)V
-#getMetricsUserAggregate()Lorg/apache/hadoop/hbase/regionserver/MetricsUserAggregate;
-#updatePutBatch(Lorg/apache/hadoop/hbase/TableName;J)V
-#updatePut(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateDelete(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateDeleteBatch(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateCheckAndDelete(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateCheckAndPut(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateGet(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateIncrement(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateAppend(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateScanSize(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateScanTime(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.0.0-alpha2
+#updatePutBatch(J)V
+#updateDeleteBatch(J)V
+#updateCheckAndDelete(J)V
+#updateCheckAndPut(J)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/conf/Configuration;)V
+#updatePutBatch(Lorg/apache/hadoop/hbase/TableName;J)V
+#updatePut(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateDelete(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateDeleteBatch(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateGet(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateIncrement(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateAppend(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateScanSize(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateScanTime(Lorg/apache/hadoop/hbase/TableName;J)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
-#updatePutBatch(J)V
-#updatePut(J)V
-#updateDelete(J)V
-#updateDeleteBatch(J)V
-#updateGet(J)V
-#updateIncrement(J)V
-#updateAppend(J)V
-#updateScanSize(J)V
-#updateScanTime(J)V
@2.1.7
+#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
+#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.1.8
+#incrementNumRegionSizeReportsSent(J)V
+#incrementRegionSizeReportingChoreTime(J)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/MetricsTable;)V
+#updateFlush(Ljava/lang/String;JJJ)V
+#updateCompaction(Ljava/lang/String;ZJIIJJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/conf/Configuration;)V
-#updateFlush(JJJ)V
-#updateCompaction(ZJIIJJ)V
-#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
-#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
-#incrementNumRegionSizeReportsSent(J)V
-#incrementRegionSizeReportingChoreTime(J)V
@2.2.2
+#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
+#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.2.3
+#incrementNumRegionSizeReportsSent(J)V
+#incrementRegionSizeReportingChoreTime(J)V
@2.2.7
+#updateCheckAndDelete(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateCheckAndPut(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateCheckAndDelete(J)V
-#updateCheckAndPut(J)V
@2.3.0
+#getMetricsUserAggregate()Lorg/apache/hadoop/hbase/regionserver/MetricsUserAggregate;
+#updateCheckAndDelete(J)V
+#updateCheckAndPut(J)V
-#updateCheckAndDelete(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateCheckAndPut(Lorg/apache/hadoop/hbase/TableName;J)V
@2.3.3
+#updateCheckAndDelete(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateCheckAndPut(Lorg/apache/hadoop/hbase/TableName;J)V
-#updateCheckAndDelete(J)V
-#updateCheckAndPut(J)V
@2.3.5
-#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.4.0
+#updateCheckAndMutate(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.4.3
-#updateReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.5.0
+#incrScannerLeaseExpired()V
@3.0.0-alpha-1
-#incrScannerLeaseExpired()V
@3.0.0-alpha-3
+#incrScannerLeaseExpired()V

+###org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperImpl
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#getTableName()Ljava/lang/String;
+#getRegionName()Ljava/lang/String;
+#getNumStores()J
+#getNumStoreFiles()J
+#getMemstoreSize()J
+#getStoreFileSize()J
+#getReadRequestCount()J
+#getWriteRequestCount()J
+#close()V
@0.96.0-hadoop1
+#getNamespace()Ljava/lang/String;
+#getNumFilesCompacted()J
+#getNumBytesCompacted()J
+#getNumCompactionsCompleted()J
@0.98.5-hadoop1
+#getCoprocessorExecutionStatistics()Ljava/util/Map;
@0.98.18-hadoop1
+#getMaxStoreFileAge()J
+#getMinStoreFileAge()J
+#getAvgStoreFileAge()J
+#getNumReferenceFiles()J
@0.98.21-hadoop1
+#getNumCompactionsFailed()J
@0.99.0
-#getNumCompactionsFailed()J
-#getMaxStoreFileAge()J
-#getMinStoreFileAge()J
-#getAvgStoreFileAge()J
-#getNumReferenceFiles()J
@1.2.0
+#getRegionHashCode()I
+#getReplicaId()I
-#getCoprocessorExecutionStatistics()Ljava/util/Map;
@1.3.0
+#getLastMajorCompactionAge()J
+#getNumCompactionsFailed()J
+#getMaxStoreFileAge()J
+#getMinStoreFileAge()J
+#getAvgStoreFileAge()J
+#getNumReferenceFiles()J
@1.3.3
+#getNumCompactionsQueued()J
+#getNumFlushesQueued()J
+#getMaxCompactionQueueSize()J
+#getMaxFlushQueueSize()J
@1.5.0
+#getStoreRefCount()J
@1.6.0
+#getMaxCompactedStoreFileRefCount()I
@2.0.0-alpha-1
+#getFilteredReadRequestCount()J
-#getStoreRefCount()J
-#getMaxCompactedStoreFileRefCount()I
-#getNumCompactionsQueued()J
-#getNumFlushesQueued()J
-#getMaxCompactionQueueSize()J
-#getMaxFlushQueueSize()J
@2.0.0-alpha2
+#getNumCompactionsQueued()J
+#getNumFlushesQueued()J
+#getMaxCompactionQueueSize()J
+#getMaxFlushQueueSize()J
@2.0.0-alpha4
+#getMemStoreSize()J
-#getMemstoreSize()J
@2.2.0
+#getTotalRequestCount()J
@2.2.6
+#getMemstoreOnlyRowReadsCount()Ljava/util/Map;
+#getMixedRowReadsCount()Ljava/util/Map;
@2.3.0
+#getStoreRefCount()J
+#getMaxCompactedStoreFileRefCount()J
@3.0.0-alpha-1
+#getCpRequestCount()J

+###org/apache/hadoop/hbase/regionserver/MetricsTableWrapperAggregateImpl
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getReadRequestsCount(Ljava/lang/String;)J
+#getWriteRequestsCount(Ljava/lang/String;)J
+#getTotalRequestsCount(Ljava/lang/String;)J
+#getMemstoresSize(Ljava/lang/String;)J
+#getStoreFilesSize(Ljava/lang/String;)J
+#getTableSize(Ljava/lang/String;)J
+#close()V
@1.7.0
+#getNumRegions(Ljava/lang/String;)J
+#getAvgRegionSize(Ljava/lang/String;)J
@2.0.0-alpha-1
-#getNumRegions(Ljava/lang/String;)J
-#getAvgRegionSize(Ljava/lang/String;)J
@2.0.0-alpha4
+#getMemStoresSize(Ljava/lang/String;)J
-#getMemstoresSize(Ljava/lang/String;)J
@2.2.0
+#getReadRequestCount(Ljava/lang/String;)J
+#getFilteredReadRequestCount(Ljava/lang/String;)J
+#getWriteRequestCount(Ljava/lang/String;)J
+#getMemStoreSize(Ljava/lang/String;)J
+#getStoreFileSize(Ljava/lang/String;)J
+#getNumRegions(Ljava/lang/String;)J
+#getNumStores(Ljava/lang/String;)J
+#getNumStoreFiles(Ljava/lang/String;)J
+#getMaxStoreFileAge(Ljava/lang/String;)J
+#getMinStoreFileAge(Ljava/lang/String;)J
+#getAvgStoreFileAge(Ljava/lang/String;)J
+#getNumReferenceFiles(Ljava/lang/String;)J
+#getAvgRegionSize(Ljava/lang/String;)J
+#getCpRequestCount(Ljava/lang/String;)J
-#getReadRequestsCount(Ljava/lang/String;)J
-#getWriteRequestsCount(Ljava/lang/String;)J
-#getMemStoresSize(Ljava/lang/String;)J
-#getStoreFilesSize(Ljava/lang/String;)J
@2.2.6
+#getMemstoreOnlyRowReadsCount(Ljava/lang/String;)Ljava/util/Map;
+#getMixedRowReadsCount(Ljava/lang/String;)Ljava/util/Map;
+#getCpRequestsCount(Ljava/lang/String;)J
@2.4.14
+#getMaxStoreFiles(Ljava/lang/String;)J
@2.5.0
+#getStaticIndexSize(Ljava/lang/String;)J
+#getStaticBloomSize(Ljava/lang/String;)J
+#getBloomFilterRequestsCount(Ljava/lang/String;)J
+#getBloomFilterNegativeResultsCount(Ljava/lang/String;)J
+#getBloomFilterEligibleRequestsCount(Ljava/lang/String;)J
@3.0.0-alpha-1
-#getMaxStoreFiles(Ljava/lang/String;)J
-#getStaticIndexSize(Ljava/lang/String;)J
-#getStaticBloomSize(Ljava/lang/String;)J
-#getBloomFilterRequestsCount(Ljava/lang/String;)J
-#getBloomFilterNegativeResultsCount(Ljava/lang/String;)J
-#getBloomFilterEligibleRequestsCount(Ljava/lang/String;)J

+###org/apache/hadoop/hbase/regionserver/NonLazyKeyValueScanner
@0.95.0
+#<init>()V
+#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
+#realSeekDone()Z
+#enforceSeek()V
+#doRealSeek(Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/KeyValue;Z)Z
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
+#isFileScanner()Z
@0.98.12-hadoop1
+#getNextIndexedKey()[B
@0.99.0
+#requestSeek(Lorg/apache/hadoop/hbase/Cell;ZZ)Z
+#doRealSeek(Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
-#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
-#doRealSeek(Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/KeyValue;Z)Z
-#getNextIndexedKey()[B
@1.0.1
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
@1.2.0
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
@2.0.0-alpha-1
+#getFilePath()Lorg/apache/hadoop/fs/Path;
+#shipped()V
@2.0.0-alpha4
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/HStore;J)Z
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z

+###org/apache/hadoop/hbase/regionserver/OnheapChunk
@2.0.0-alpha-1

+###org/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteCompare
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteCompare;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteCompare;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteCompare

+###org/apache/hadoop/hbase/regionserver/querymatcher/StripeCompactionScanQueryMatcher
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;JJJJ[B[B)V
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;JJJJ[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;JJJJ[B[B)V
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;JJJJ[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;JJJJ[B[B)V

+###org/apache/hadoop/hbase/regionserver/Region
@1.1.0
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getTableDesc()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#isAvailable()Z
+#isClosed()Z
+#isClosing()Z
+#isRecovering()Z
+#isReadOnly()Z
+#getStores()Ljava/util/List;
+#getStore([B)Lorg/apache/hadoop/hbase/regionserver/Store;
+#getStoreFileList([[B)Ljava/util/List;
+#refreshStoreFiles()Z
+#getOpenSeqNum()J
+#getMaxFlushedSeqId()J
+#getOldestSeqIdOfStore([B)J
+#getOldestHfileTs(Z)J
+#getMaxStoreSeqId()Ljava/util/Map;
+#isLoadingCfsOnDemandDefault()Z
+#getReadpoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J
+#getEarliestFlushTimeForAllStores()J
+#getReadRequestsCount()J
+#updateReadRequestsCount(J)V
+#getWriteRequestsCount()J
+#updateWriteRequestsCount(J)V
+#getMemstoreSize()J
+#getNumMutationsWithoutWAL()J
+#getDataInMemoryWithoutWAL()J
+#getBlockedRequestsCount()J
+#getCheckAndMutateChecksPassed()J
+#getCheckAndMutateChecksFailed()J
+#getMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegion;
+#getHDFSBlocksDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#startRegionOperation()V
+#startRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
+#closeRegionOperation()V
+#getRowLock([BZ)Lorg/apache/hadoop/hbase/regionserver/Region$RowLock;
+#releaseRowLocks(Ljava/util/List;)V
+#append(Lorg/apache/hadoop/hbase/client/Append;JJ)Lorg/apache/hadoop/hbase/client/Result;
+#batchMutate([Lorg/apache/hadoop/hbase/client/Mutation;JJ)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#batchReplay([Lorg/apache/hadoop/hbase/wal/WALSplitter$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
+#delete(Lorg/apache/hadoop/hbase/client/Delete;)V
+#get(Lorg/apache/hadoop/hbase/client/Get;)Lorg/apache/hadoop/hbase/client/Result;
+#get(Lorg/apache/hadoop/hbase/client/Get;Z)Ljava/util/List;
+#getClosestRowBefore([B[B)Lorg/apache/hadoop/hbase/client/Result;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#increment(Lorg/apache/hadoop/hbase/client/Increment;JJ)Lorg/apache/hadoop/hbase/client/Result;
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
+#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;JJ)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJ)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJJ)V
+#put(Lorg/apache/hadoop/hbase/client/Put;)V
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;
+#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
+#registerService(Lcom/google/protobuf/Service;)Z
+#checkFamilies(Ljava/util/Collection;)V
+#checkTimestamps(Ljava/util/Map;J)V
+#prepareDelete(Lorg/apache/hadoop/hbase/client/Delete;)V
+#prepareDeleteTimestamps(Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/Map;[B)V
+#updateCellTimestamps(Ljava/lang/Iterable;[B)V
+#flush(Z)Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult;
+#compact(Z)V
+#triggerMajorCompaction()V
+#getCompactionState()Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
+#waitForFlushesAndCompactions()V
@1.2.0
*#getOldestSeqIdOfStore([B)J[deprecated]
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
@1.3.0
+#get(Lorg/apache/hadoop/hbase/client/Get;ZJJ)Ljava/util/List;
@1.3.6
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
*#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z[deprecated]
@1.4.0
+#closeRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
+#waitForFlushes()V
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
@1.4.11
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
*#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z[deprecated]
@2.0.0-alpha-1
+#isSplittable()Z
+#isMergeable()Z
+#getReadPoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J
*#getReadpoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J[deprecated]
+#getFilteredReadRequestsCount()J
+#getRegionServicesForStores()Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;
+#getCellComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Ljava/util/Map;
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Z)Ljava/util/Map;
+#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
+#getCompactionState()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
-#closeRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
-#getClosestRowBefore([B[B)Lorg/apache/hadoop/hbase/client/Result;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z[deprecated]
-#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
-#getCompactionState()Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
@2.0.0-alpha2
+#getTableDescriptor()Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#closeRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
-#getTableDesc()Lorg/apache/hadoop/hbase/HTableDescriptor;
@2.0.0-alpha3
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
+#requestCompaction(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction([BLjava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
-#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
-#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
@2.0.0-alpha4
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getMemStoreSize()J
+#append(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#batchMutate([Lorg/apache/hadoop/hbase/client/Mutation;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#increment(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#getCompactionState()Lorg/apache/hadoop/hbase/client/CompactionState;
+#requestCompaction(Ljava/lang/String;IZLorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#requestCompaction([BLjava/lang/String;IZLorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#waitForFlushes(J)Z
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#getOpenSeqNum()J
-#getOldestSeqIdOfStore([B)J[deprecated]
-#isLoadingCfsOnDemandDefault()Z
-#getReadPoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J
-#getReadpoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J[deprecated]
-#updateReadRequestsCount(J)V
-#updateWriteRequestsCount(J)V
-#getMemstoreSize()J
-#getRegionServicesForStores()Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;
-#getMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegion;
-#getHDFSBlocksDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
-#releaseRowLocks(Ljava/util/List;)V
-#append(Lorg/apache/hadoop/hbase/client/Append;JJ)Lorg/apache/hadoop/hbase/client/Result;
-#batchMutate([Lorg/apache/hadoop/hbase/client/Mutation;JJ)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#batchReplay([Lorg/apache/hadoop/hbase/wal/WALSplitter$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#get(Lorg/apache/hadoop/hbase/client/Get;ZJJ)Ljava/util/List;
-#increment(Lorg/apache/hadoop/hbase/client/Increment;JJ)Lorg/apache/hadoop/hbase/client/Result;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Ljava/util/Map;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Z)Ljava/util/Map;
-#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;
-#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
-#registerService(Lcom/google/protobuf/Service;)Z
-#checkFamilies(Ljava/util/Collection;)V
-#checkTimestamps(Ljava/util/Map;J)V
-#prepareDelete(Lorg/apache/hadoop/hbase/client/Delete;)V
-#prepareDeleteTimestamps(Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/Map;[B)V
-#updateCellTimestamps(Ljava/lang/Iterable;[B)V
-#flush(Z)Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult;
-#compact(Z)V
-#triggerMajorCompaction()V
-#getCompactionState()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
-#requestCompaction(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
-#requestCompaction([BLjava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
-#waitForFlushesAndCompactions()V
-#waitForFlushes()V
@2.0.0-beta-1
*#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)V[deprecated]
*#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJ)V[deprecated]
*#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJJ)V[deprecated]
-#isRecovering()Z
@2.0.0-beta-2
+#getMemStoreDataSize()J
+#getMemStoreHeapSize()J
+#getMemStoreOffHeapSize()J
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
-#getMemStoreSize()J
-#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
@2.0.0
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;)Z
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
-#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
@2.3.0
+#checkAndMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Mutation;)Z
+#checkAndMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z
+#checkAndRowMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
+#checkAndRowMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
@2.3.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.0
*#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;)Z[deprecated]
*#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z[deprecated]
*#checkAndMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Mutation;)Z[deprecated]
*#checkAndMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z[deprecated]
*#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;)Z[deprecated]
*#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z[deprecated]
*#checkAndRowMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/RowMutations;)Z[deprecated]
*#checkAndRowMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z[deprecated]
+#checkAndMutate(Lorg/apache/hadoop/hbase/client/CheckAndMutate;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)Lorg/apache/hadoop/hbase/client/Result;
-#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@3.0.0-alpha-1
+#getCpRequestsCount()J
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)V[deprecated]
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJ)V[deprecated]
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJJ)V[deprecated]
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@3.0.0-alpha-2
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/hbase/regionserver/RegionScanner
@0.95.0
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#isFilterDone()Z
+#reseek([B)Z
+#getMaxResultSize()J
+#getMvccReadPoint()J
+#nextRaw(Ljava/util/List;)Z
+#nextRaw(Ljava/util/List;ILjava/lang/String;)Z
@0.95.1-hadoop1
+#nextRaw(Ljava/util/List;I)Z
-#nextRaw(Ljava/util/List;ILjava/lang/String;)Z
@1.1.0
+#getBatch()I
+#nextRaw(Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScannerContext;)Z
-#nextRaw(Ljava/util/List;I)Z
@2.0.0-alpha-1
+#shipped()V
@2.0.0-alpha4
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#shipped()V
@2.5.0
+#getOperationId()Ljava/lang/String;
@3.0.0-alpha-1
-#getOperationId()Ljava/lang/String;
@3.0.0-alpha-2
+#getOperationId()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)V
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost$RegionServerEnvironment;
+#preStop(Ljava/lang/String;)V
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@0.98.0-hadoop1
+#preMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Z
+#postMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)Z
+#postMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@0.98.7-hadoop1
+#preRollWALWriterRequest()V
+#postRollWALWriterRequest()V
@0.98.9-hadoop1
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@0.98.10-hadoop1
+#preReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@0.99.0
-#preReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@0.99.1
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@1.0.0
+#preReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@1.5.0
+#preMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)Z
+#postMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z
+#postMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
-#preMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Z
-#postMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)Z
-#postMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@2.0.0-alpha-1
+#preClearCompactionQueues()V
+#postClearCompactionQueues()V
@2.0.0-alpha2
+#preStop(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;)V
-#preStop(Ljava/lang/String;)V
@2.0.0-alpha4
+#createEnvironment(Lorg/apache/hadoop/hbase/coprocessor/RegionServerCoprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost$RegionServerEnvironment;
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/coprocessor/RegionServerCoprocessor;
+#preReplicateLogEntries()V
+#postReplicateLogEntries()V
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/Coprocessor;
+#createEnvironment(Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost$RegionServerEnvironment;
-#preMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)Z
-#postMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
-#preMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z
-#postMergeCommit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
-#preRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
-#postRollBackMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
-#preReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postReplicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@2.1.0
+#preExecuteProcedures()V
+#postExecuteProcedures()V
@2.4.16
+#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
+#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
@2.5.0
-#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
-#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
@2.5.3
+#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
+#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
@3.0.0-alpha-1
-#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
-#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V

+###org/apache/hadoop/hbase/regionserver/RpcSchedulerFactory
@0.98.0-hadoop1
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@0.99.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@1.0.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
*#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;[deprecated]
@3.0.0-alpha-1
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;[deprecated]

+###org/apache/hadoop/hbase/regionserver/ScannerContext$Builder
@1.1.0
+#setKeepProgress(Z)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
+#setSizeLimit(Lorg/apache/hadoop/hbase/regionserver/ScannerContext$LimitScope;J)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
+#setTimeLimit(Lorg/apache/hadoop/hbase/regionserver/ScannerContext$LimitScope;J)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
+#setBatchLimit(I)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
+#build()Lorg/apache/hadoop/hbase/regionserver/ScannerContext;
@1.2.0
+#setTrackMetrics(Z)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
@2.0.0-alpha-1
+#setSizeLimit(Lorg/apache/hadoop/hbase/regionserver/ScannerContext$LimitScope;JJ)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
-#setSizeLimit(Lorg/apache/hadoop/hbase/regionserver/ScannerContext$LimitScope;J)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;

+###org/apache/hadoop/hbase/regionserver/ScannerIdGenerator
@1.1.11
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
+#generateNewScannerId()J
@1.2.0
-###org/apache/hadoop/hbase/regionserver/ScannerIdGenerator

+###org/apache/hadoop/hbase/regionserver/StoreConfigInformation
@0.95.0
+#getMemstoreFlushSize()J
+#getStoreFileTtl()J
@0.95.1-hadoop1
+#getCompactionCheckMultiplier()J
+#getBlockingFileCount()J
@2.0.0-alpha4
+#getMemStoreFlushSize()J
-#getMemstoreFlushSize()J
@2.2.6
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getColumnFamilyName()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$BoundaryMultiWriter
@0.98.0-hadoop1
+#<init>(Ljava/util/List;[B[B)V
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;[B[B)V
-#<init>(Ljava/util/List;[B[B)V
@0.99.0
+#<init>(Ljava/util/List;[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;[B[B)V
@0.99.1
+#append(Lorg/apache/hadoop/hbase/Cell;)V
-#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;[B[B)V
-#<init>(Ljava/util/List;[B[B)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;Ljava/util/List;[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;[B[B)V

+###org/apache/hadoop/hbase/regionserver/StripeStoreFlusher$SizeStripeFlushRequest
@0.98.0-hadoop1
+#<init>(IJ)V
+#createWriter()Lorg/apache/hadoop/hbase/regionserver/StripeMultiFileWriter;
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ)V
-#<init>(IJ)V
@0.99.0
+#<init>(IJ)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ)V
-#<init>(IJ)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;IJ)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ)V

+###org/apache/hadoop/hbase/regionserver/throttle/FlushThroughputControllerFactory
@1.3.0
+#create(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;
+#getThroughputControllerClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;

+###org/apache/hadoop/hbase/regionserver/throttle/PressureAwareCompactionThroughputController
@1.3.0
+#<init>()V
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL
@2.0.0-alpha-1
+#getFilenum()J
+#registerWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
+#unregisterWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)Z
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost;
+#startCacheFlush([BLjava/util/Set;)Ljava/lang/Long;
+#startCacheFlush([BLjava/util/Map;)Ljava/lang/Long;
+#completeCacheFlush([B)V
+#abortCacheFlush([B)V
+#getEarliestMemstoreSeqNum([B)J
+#getEarliestMemstoreSeqNum([B[B)J
+#rollWriter()[[B
+#getCurrentFileName()Lorg/apache/hadoop/fs/Path;
+#getNumRolledLogFiles()I
+#getNumLogFiles()I
+#getWALArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#rollWriter(Z)[[B
+#getLogFileSize()J
+#requestLogRoll()V
+#shutdown()V
+#close()V
+#updateStore([B[BLjava/lang/Long;Z)V
+#toString()Ljava/lang/String;
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
@2.0.0-alpha3
+#getLogFileSizeIfBeingWritten(Lorg/apache/hadoop/fs/Path;)Ljava/util/OptionalLong;
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
@2.0.0-alpha4
+#getEarliestMemStoreSeqNum([B)J
+#getEarliestMemStoreSeqNum([B[B)J
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#getEarliestMemstoreSeqNum([B)J
-#getEarliestMemstoreSeqNum([B[B)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.0.0-beta-1
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
+#checkLogLowReplication(J)V
+#main([Ljava/lang/String;)V
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.1.6
+#init()V
@2.1.8
+#appendData(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
+#appendMarker(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.2.0
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#init()V
-#appendData(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
-#appendMarker(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
@2.2.1
+#init()V
@2.2.3
+#appendData(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
+#appendMarker(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.2.6
+#completeCacheFlush([BJ)V
-#completeCacheFlush([B)V
@2.3.0
+#completeCacheFlush([B)V
-#completeCacheFlush([BJ)V
@2.3.1
+#completeCacheFlush([BJ)V
-#completeCacheFlush([B)V
@2.4.0
+#rollWriter()Ljava/util/Map;
+#rollWriter(Z)Ljava/util/Map;
-#rollWriter()[[B
-#rollWriter(Z)[[B
@2.4.4
+#getInflightWALCloseCount()I
@2.5.0
+#sync()V
+#sync(J)V
+#sync(Z)V
+#sync(JZ)V

+###org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/client/HConnection;)V
+#replayEntries(Ljava/util/List;)V
+#getStats()Ljava/lang/String;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/HConnection;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/client/HConnection;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ClusterConnection;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/HConnection;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink

+###org/apache/hadoop/hbase/replication/regionserver/MetricsSource
@0.95.0
+#<init>(Ljava/lang/String;)V
+#setAgeOfLastShippedOp(J)V
+#refreshAgeOfLastShippedOp()V
+#setSizeOfLogQueue(I)V
+#incrLogEditsRead()V
+#incrLogEditsFiltered()V
+#shipBatch(J)V
+#clear()V
@0.98.0-hadoop1
+#incrLogReadInBytes(J)V
@0.98.3-hadoop1
+#shipBatch(JI)V
-#shipBatch(J)V
@0.98.11-hadoop1
+#getAgeOfLastShippedOp()Ljava/lang/Long;
+#getSizeOfLogQueue()I
+#getTimeStampOfLastShippedOp()J
+#getPeerID()Ljava/lang/String;
@0.98.22-hadoop1
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;)V
+#init()V
+#setGauge(Ljava/lang/String;J)V
+#incGauge(Ljava/lang/String;J)V
+#decGauge(Ljava/lang/String;J)V
+#removeMetric(Ljava/lang/String;)V
+#incCounters(Ljava/lang/String;J)V
+#updateHistogram(Ljava/lang/String;J)V
+#updateQuantile(Ljava/lang/String;J)V
+#getMetricsContext()Ljava/lang/String;
+#getMetricsDescription()Ljava/lang/String;
+#getMetricsJmxContext()Ljava/lang/String;
+#getMetricsName()Ljava/lang/String;
@0.98.23-hadoop1
+#incrUnknownFileLengthForClosedWAL()V
+#incrUncleanlyClosedWALs()V
+#incrBytesSkippedInUncleanlyClosedWALs(J)V
+#incrRestartedWALReading()V
+#incrRepeatedFileBytes(J)V
+#incrCompletedWAL()V
+#incrCompletedRecoveryQueue()V
@0.99.0
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;)V
-#getAgeOfLastShippedOp()Ljava/lang/Long;
-#getSizeOfLogQueue()I
-#getTimeStampOfLastShippedOp()J
-#getPeerID()Ljava/lang/String;
-#incrUnknownFileLengthForClosedWAL()V
-#incrUncleanlyClosedWALs()V
-#incrBytesSkippedInUncleanlyClosedWALs(J)V
-#incrRestartedWALReading()V
-#incrRepeatedFileBytes(J)V
-#incrCompletedWAL()V
-#incrCompletedRecoveryQueue()V
-#init()V
-#setGauge(Ljava/lang/String;J)V
-#incGauge(Ljava/lang/String;J)V
-#decGauge(Ljava/lang/String;J)V
-#removeMetric(Ljava/lang/String;)V
-#incCounters(Ljava/lang/String;J)V
-#updateHistogram(Ljava/lang/String;J)V
-#updateQuantile(Ljava/lang/String;J)V
-#getMetricsContext()Ljava/lang/String;
-#getMetricsDescription()Ljava/lang/String;
-#getMetricsJmxContext()Ljava/lang/String;
-#getMetricsName()Ljava/lang/String;
@1.0.0
+#getAgeOfLastShippedOp()Ljava/lang/Long;
+#getSizeOfLogQueue()I
+#getTimeStampOfLastShippedOp()J
+#getPeerID()Ljava/lang/String;
@1.1.0
+#incrLogEditsFiltered(J)V
@1.1.7
+#incrUnknownFileLengthForClosedWAL()V
+#incrUncleanlyClosedWALs()V
+#incrBytesSkippedInUncleanlyClosedWALs(J)V
+#incrRestartedWALReading()V
+#incrRepeatedFileBytes(J)V
+#incrCompletedWAL()V
+#incrCompletedRecoveryQueue()V
@1.2.0
+#setAgeOfLastShippedOp(JLjava/lang/String;)V
+#refreshAgeOfLastShippedOp(Ljava/lang/String;)V
-#setAgeOfLastShippedOp(J)V
-#refreshAgeOfLastShippedOp()V
-#incrUnknownFileLengthForClosedWAL()V
-#incrUncleanlyClosedWALs()V
-#incrBytesSkippedInUncleanlyClosedWALs(J)V
-#incrRestartedWALReading()V
-#incrRepeatedFileBytes(J)V
-#incrCompletedWAL()V
-#incrCompletedRecoveryQueue()V
@1.2.4
+#incrUnknownFileLengthForClosedWAL()V
+#incrUncleanlyClosedWALs()V
+#incrBytesSkippedInUncleanlyClosedWALs(J)V
+#incrRestartedWALReading()V
+#incrRepeatedFileBytes(J)V
+#incrCompletedWAL()V
+#incrCompletedRecoveryQueue()V
@1.3.0
+#incrSizeOfLogQueue()V
+#decrSizeOfLogQueue()V
+#shipBatch(JIJ)V
+#incrSizeOfHFileRefsQueue(J)V
+#decrSizeOfHFileRefsQueue(I)V
-#setSizeOfLogQueue(I)V
@1.3.3
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Ljava/util/Map;)V
+#setAgeOfLastShippedOpByTable(JLjava/lang/String;)V
+#incrFailedRecoveryQueue()V
+#getSingleSourceSourceByTable()Ljava/util/Map;
@1.4.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;)V
+#init()V
+#setGauge(Ljava/lang/String;J)V
+#incGauge(Ljava/lang/String;J)V
+#decGauge(Ljava/lang/String;J)V
+#removeMetric(Ljava/lang/String;)V
+#incCounters(Ljava/lang/String;J)V
+#updateHistogram(Ljava/lang/String;J)V
+#getMetricsContext()Ljava/lang/String;
+#getMetricsDescription()Ljava/lang/String;
+#getMetricsJmxContext()Ljava/lang/String;
+#getMetricsName()Ljava/lang/String;
+#getMetricRegistryInfo()Lorg/apache/hadoop/hbase/metrics/MetricRegistryInfo;
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Ljava/util/Map;)V
-#setAgeOfLastShippedOpByTable(JLjava/lang/String;)V
-#incrFailedRecoveryQueue()V
-#getSingleSourceSourceByTable()Ljava/util/Map;
@1.4.8
+#incrFailedRecoveryQueue()V
@1.4.10
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Ljava/util/Map;)V
+#setAgeOfLastShippedOpByTable(JLjava/lang/String;)V
+#getSingleSourceSourceByTable()Ljava/util/Map;
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;)V
@1.5.0
+#getLastTimeStampOfWalGroup(Ljava/lang/String;)J
+#getAgeofLastShippedOp(Ljava/lang/String;)J
@1.7.0
+#updateTableLevelMetrics(Ljava/util/List;)V
+#getAgeOfLastShippedOp(Ljava/lang/String;)J
+#incrSourceInitializing()V
+#decrSourceInitializing()V
+#getSourceInitializing()I
+#setOldestWalAge(J)V
+#getOldestWalAge()J
-#getAgeofLastShippedOp(Ljava/lang/String;)J
@1.7.1
+#getUncleanlyClosedWALs()J
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;)V
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Ljava/util/Map;)V
-#updateTableLevelMetrics(Ljava/util/List;)V
-#setAgeOfLastShippedOpByTable(JLjava/lang/String;)V
-#getLastTimeStampOfWalGroup(Ljava/lang/String;)J
-#getAgeOfLastShippedOp(Ljava/lang/String;)J
-#incrSourceInitializing()V
-#decrSourceInitializing()V
-#getUncleanlyClosedWALs()J
-#getSourceInitializing()I
-#incrFailedRecoveryQueue()V
-#setOldestWalAge(J)V
-#getOldestWalAge()J
-#getSingleSourceSourceByTable()Ljava/util/Map;
-#getMetricRegistryInfo()Lorg/apache/hadoop/hbase/metrics/MetricRegistryInfo;
@2.0.0
*#getTimeStampOfLastShippedOp()J[deprecated]
+#getTimestampOfLastShippedOp()J
@2.1.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Ljava/util/Map;)V
+#setAgeOfLastShippedOpByTable(JLjava/lang/String;)V
+#getLastTimeStampOfWalGroup(Ljava/lang/String;)J
+#getAgeofLastShippedOp(Ljava/lang/String;)J
+#getSingleSourceSourceByTable()Ljava/util/Map;
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;)V
@2.1.1
+#incrFailedRecoveryQueue()V
@2.2.7
+#updateTableLevelMetrics(Ljava/util/List;)V
+#setWALReaderEditsBufferUsage(J)V
+#getWALReaderEditsBufferUsage()J
@2.3.0
+#getEditsFiltered()J
+#getReplicableEdits()J
+#getOpsShipped()J
+#getTimeStampNextToReplicate()J
+#setTimeStampNextToReplicate(J)V
+#getReplicationDelay()J
-#updateTableLevelMetrics(Ljava/util/List;)V
-#getLastTimeStampOfWalGroup(Ljava/lang/String;)J
-#setWALReaderEditsBufferUsage(J)V
-#getWALReaderEditsBufferUsage()J
@2.3.4
+#updateTableLevelMetrics(Ljava/util/List;)V
+#setWALReaderEditsBufferUsage(J)V
+#getWALReaderEditsBufferUsage()J
@2.4.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;Ljava/util/Map;)V
+#getAgeOfLastShippedOp(Ljava/lang/String;)J
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource;Ljava/util/Map;)V
-#getAgeofLastShippedOp(Ljava/lang/String;)J
@2.4.2
+#setOldestWalAge(J)V
+#getOldestWalAge()J
@2.4.3
+#incrSourceInitializing()V
+#decrSourceInitializing()V
+#getSourceInitializing()I
@2.4.4
+#getUncleanlyClosedWALs()J
@2.4.12
+#incrementFailedBatches()V
@3.0.0-alpha-1
-#incrementFailedBatches()V
-#getTimeStampOfLastShippedOp()J[deprecated]
@3.0.0-alpha-3
+#incrementFailedBatches()V

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceFactory
@2.0.0-alpha-1
+#<init>()V
@2.4.0
-#<init>()V

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReaderThread
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Ljava/util/concurrent/PriorityBlockingQueue;JLorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#run()V
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#take()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReaderThread$WALEntryBatch;
+#isReaderRunning()Z
+#setReaderRunning(Z)V
@1.4.13
+#poll(J)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReaderThread$WALEntryBatch;
+#getLastReadPosition()J
@1.5.0
+#getEntrySizeExcludeBulkLoad(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)J
-#getLastReadPosition()J
@1.6.0
+#getLastReadPosition()J
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;JLorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Ljava/util/concurrent/PriorityBlockingQueue;JLorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Ljava/util/concurrent/PriorityBlockingQueue;JLorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;JLorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;Ljava/lang/String;)V
-#getCurrentPath()Lorg/apache/hadoop/fs/Path;
-#poll(J)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReaderThread$WALEntryBatch;
-#getEntrySizeExcludeBulkLoad(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)J
-#getLastReadPosition()J
@2.0.0-alpha2
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReaderThread

+###org/apache/hadoop/hbase/replication/SystemTableWALEntryFilter
@0.98.9-hadoop1
+#<init>()V
+#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@0.99.2
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
-#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;

+###org/apache/hadoop/hbase/security/access/AccessController
@0.95.0
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
+#postBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
+#preShutdown(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preStopMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postStartMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;)V
+#preGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
+#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#preExists(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Z)Z
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZ)J
+#preAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#postScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preScannerNext(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;IZ)Z
+#preScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#postScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#preBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
+#grant(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$GrantRequest;Lcom/google/protobuf/RpcCallback;)V
+#revoke(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$RevokeRequest;Lcom/google/protobuf/RpcCallback;)V
+#getUserPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$UserPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V
+#checkPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$CheckPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V
+#getService()Lcom/google/protobuf/Service;
+#preClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#preStopRegionServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.95.1-hadoop1
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@0.95.2-hadoop1
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
@0.96.0-hadoop1
+#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preGetOp(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#getUserPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$GetUserPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V
-#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
-#getUserPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$UserPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V
@0.96.2-hadoop1
+#postLogReplay(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.98.0-hadoop1
+#getRegion()Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getAuthManager()Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
+#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#preEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message;
+#postEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;Lcom/google/protobuf/Message$Builder;)V
+#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)V
+#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@0.98.4-hadoop1
+#preBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preAppendAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrementAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
-#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;)V
@0.98.6-hadoop1
-#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#postBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
-#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@0.98.7-hadoop1
+#preRollWALWriterRequest(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postRollWALWriterRequest(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.98.8-hadoop1
+#preTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
@0.98.9-hadoop1
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$PrepareBulkLoadRequest;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$CleanupBulkLoadRequest;)V
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
-#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
-#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
@0.98.10-hadoop1
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@0.98.12-hadoop1
+#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
@0.98.14-hadoop1
+#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
+#isCellAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
@0.98.19-hadoop1
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@0.99.0
+#preTableFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
-#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
-#isCellAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
-#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$PrepareBulkLoadRequest;)V
-#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$CleanupBulkLoadRequest;)V
-#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
-#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@0.99.1
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@0.99.2
+#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$PrepareBulkLoadRequest;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$CleanupBulkLoadRequest;)V
-#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
-#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
@1.0.0
+#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableNames(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/lang/String;)V
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
@1.0.1
+#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
@1.1.0
+#getRegion()Lorg/apache/hadoop/hbase/regionserver/Region;
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/util/List;)V
+#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#getRegion()Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)V
-#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@1.1.3
+#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)V
+#postAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.2.0
+#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
+#isCellAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
@1.3.0
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
+#preDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.3.5
+#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireTablePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireAccess(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
+#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
@1.4.0
+#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#preMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#preAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireTablePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireAccess(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
-#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
@1.4.1
+#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireTablePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireAccess(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
+#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
-#preGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@1.5.0
+#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireTablePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireAccess(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#preListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireTablePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireAccess(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requirePermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
-#requireGlobalPermission(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
-#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireNamespacePermission(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
@2.0.0-alpha-1
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#preSplitRegion(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preClearCompactionQueues(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preAddReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#preRemoveReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preEnableReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preDisableReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetReplicationPeerConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preUpdateReplicationPeerConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#preListReplicationPeers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
+#preLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
-#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireTablePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireAccess(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
-#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
-#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
-#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
-#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#preListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
-#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$PrepareBulkLoadRequest;)V
-#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$CleanupBulkLoadRequest;)V
-#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
@2.0.0-alpha2
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@2.0.0-alpha3
+#preGetProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preGetLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
-#preListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
-#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
-#preIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZ)J
-#preDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
@2.0.0-alpha4
+#getRegionObserver()Ljava/util/Optional;
+#getMasterObserver()Ljava/util/Optional;
+#getEndpointObserver()Ljava/util/Optional;
+#getBulkLoadObserver()Ljava/util/Optional;
+#getRegionServerObserver()Ljava/util/Optional;
+#getServices()Ljava/lang/Iterable;
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;J)V
+#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
+#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#preDecommissionRegionServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Z)V
+#preListDecommissionedRegionServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preRecommissionRegionServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;)V
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)V
+#preLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
-#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#postDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)V
-#postGetProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
-#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
-#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
-#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)V
-#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)V
-#getService()Lcom/google/protobuf/Service;
-#preMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/util/List;)V
-#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
-#preLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
@2.0.0-beta-1
+#requireAccess(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireTablePermission(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#checkLockPermissions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)V
+#getActiveUser(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)Lorg/apache/hadoop/hbase/security/User;
-#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
-#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
-#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
-#postLogReplay(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
-#preMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
-#preMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
-#preAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#preRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
@2.1.0
+#preExecuteProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#getActiveUser(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)Lorg/apache/hadoop/hbase/security/User;
@2.2.0
+#getAuthManager()Lorg/apache/hadoop/hbase/security/access/AuthManager;
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#postIncrementBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
+#postAppendBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
*#grant(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$GrantRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
*#revoke(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$RevokeRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
*#getUserPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$GetUserPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
*#checkPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$CheckPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
+#preSetRegionServerQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSwitchRpcThrottle(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#preIsRpcThrottleEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSwitchExceedThrottleQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#hasPermission(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$HasPermissionRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
+#preGrant(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;Z)V
+#preRevoke(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;)V
+#preGetUserPermissions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B)V
+#preHasUserPermissions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/util/List;)V
-#getAuthManager()Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.2.7
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.3.0
+#postListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.3.4
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.4.0
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
-#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#preAppendAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
-#preIncrementAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
@2.4.1
*#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z[deprecated]
@2.5.0
+#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
+#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
-#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z[deprecated]
@3.0.0-alpha-1
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;Ljava/lang/String;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;
+#postEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;Ljava/lang/String;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message$Builder;)V
+#grant(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$GrantRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V[deprecated]
+#revoke(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$RevokeRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V[deprecated]
+#getUserPermissions(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$GetUserPermissionsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V[deprecated]
+#checkPermissions(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$CheckPermissionsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V[deprecated]
+#preTransitReplicationPeerSyncReplicationState(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
+#hasPermission(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$HasPermissionRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V[deprecated]
+#preMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#preGetRSGroupInfo(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetRSGroupInfoOfTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preListRSGroups(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preListTablesInRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetConfiguredNamespacesAndTablesInRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetRSGroupInfoOfServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/net/Address;)V
+#preRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
-#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
-#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
-#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message;
-#postEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;Lcom/google/protobuf/Message$Builder;)V
-#grant(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$GrantRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
-#revoke(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$RevokeRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
-#getUserPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$GetUserPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
-#checkPermissions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$CheckPermissionsRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
-#hasPermission(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AccessControlProtos$HasPermissionRequest;Lcom/google/protobuf/RpcCallback;)V[deprecated]
@3.0.0-alpha-2
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#preUpdateRSGroupConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/util/Map;)V
-#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
@3.0.0-alpha-3
+#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
+#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;

+###org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil
@0.95.0
+#getLogsDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getRecoveredEditsDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getRecoveredEdits(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#visitReferencedFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$FileVisitor;)V
+#visitTableStoreFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$StoreFileVisitor;)V
+#visitRegionStoreFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$StoreFileVisitor;)V
+#visitRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor;)V
+#visitLogFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$LogFileVisitor;)V
+#getSnapshotRegionNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
+#getRegionHFileReferences(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
+#getHFileNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
+#getHLogNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
@0.96.2-hadoop1
+#verifySnapshot(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
@0.98.6-hadoop1
+#visitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$SnapshotVisitor;)V
+#visitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$SnapshotVisitor;)V
+#verifySnapshot(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;)V
+#concurrentVisitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$StoreFileVisitor;)V
+#getHFileNames(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
-#getRecoveredEditsDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#getRecoveredEdits(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#visitReferencedFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$FileVisitor;)V
-#visitTableStoreFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$StoreFileVisitor;)V
-#visitRegionStoreFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$StoreFileVisitor;)V
-#visitRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor;)V
-#getSnapshotRegionNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
-#getRegionHFileReferences(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
-#getHFileNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
@0.99.2
+#getWALNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
-#getHLogNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
@1.3.0
+#concurrentVisitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Ljava/lang/String;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$StoreFileVisitor;)V
+#concurrentVisitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$StoreFileVisitor;)V
-#getLogsDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#visitLogFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$LogFileVisitor;)V
-#concurrentVisitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$StoreFileVisitor;)V
-#getWALNames(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;
@2.0.0-alpha-1
+#visitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$SnapshotVisitor;)V
+#verifySnapshot(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#visitReferencedFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$SnapshotVisitor;)V
-#verifySnapshot(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
@3.0.0-alpha-3
+#visitRegionStoreFiles(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$StoreFileVisitor;)V
+#verifySnapshot(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$StoreFileVisitor;)V
+#verifyStoreFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile;)V

+###org/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl
@0.98.4-hadoop1
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@2.2.0
+#makeRenderer(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/RegionListTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/RegionListTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/regionserver/RegionListTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tool/Canary$RegionServerStdOutSink
@0.96.1-hadoop1
+#<init>()V
+#publishReadFailure(Ljava/lang/String;Ljava/lang/String;)V
+#publishReadTiming(Ljava/lang/String;Ljava/lang/String;J)V
@1.3.6
-###org/apache/hadoop/hbase/tool/Canary$RegionServerStdOutSink

+###org/apache/hadoop/hbase/util/BloomFilterUtil
@2.0.0-alpha-1
+#computeBitSize(JD)J
+#setFakeLookupMode(Z)V
+#idealMaxKeys(JD)J
+#computeMaxKeys(JDI)J
+#actualErrorRate(JJI)D
+#computeFoldableByteSize(JI)I
+#optimalFunctionCount(IJ)I
+#createBySize(IDIILorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/util/BloomFilterChunk;
+#contains([BIILorg/apache/hadoop/hbase/nio/ByteBuff;IILorg/apache/hadoop/hbase/util/Hash;I)Z
+#contains(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/nio/ByteBuff;IILorg/apache/hadoop/hbase/util/Hash;ILorg/apache/hadoop/hbase/regionserver/BloomType;)Z
+#formatStats(Lorg/apache/hadoop/hbase/util/BloomFilterBase;)Ljava/lang/String;
+#toString(Lorg/apache/hadoop/hbase/util/BloomFilterChunk;)Ljava/lang/String;
@2.1.1
+#setRandomGeneratorForTest(Ljava/util/Random;)V
-#setFakeLookupMode(Z)V
@2.2.0
+#getBloomFilterParam(Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/conf/Configuration;)[B

+###org/apache/hadoop/hbase/util/EncryptionTest
@0.98.9-hadoop1
+#testKeyProvider(Lorg/apache/hadoop/conf/Configuration;)V
+#testCipherProvider(Lorg/apache/hadoop/conf/Configuration;)V
+#testEncryption(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;[B)V
@0.99.0
-###org/apache/hadoop/hbase/util/EncryptionTest

+###org/apache/hadoop/hbase/util/FSUtils$FamilyDirFilter
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.98.21-hadoop1
-#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.99.0
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@1.4.0
-#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/util/FSUtils$ReferenceFileFilter
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.98.21-hadoop1
-#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.99.0
-###org/apache/hadoop/hbase/util/FSUtils$ReferenceFileFilter

+###org/apache/hadoop/hbase/util/HashedBytes
@0.95.0
+#<init>([B)V
+#getBytes()[B
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/hbck/ReplicationChecker
@1.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
+#hasUnDeletedQueues()Z
+#checkUnDeletedQueues()V
+#fixUnDeletedQueues()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.0.6
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
@2.1.6
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
@2.2.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V

+###org/apache/hadoop/hbase/util/IdReadWriteLock
@1.2.0
+#<init>()V
+#getLock(J)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#waitForWaiters(JI)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType;)V
+#getReferenceType()Lorg/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType;
@2.0.2
+#getLock(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#waitForWaiters(Ljava/lang/Object;I)V
-#getLock(J)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
-#waitForWaiters(JI)V
@2.1.0
+#getLock(J)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#waitForWaiters(JI)V
-#getLock(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
-#waitForWaiters(Ljava/lang/Object;I)V
@2.1.1
+#getLock(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#waitForWaiters(Ljava/lang/Object;I)V
-#getLock(J)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
-#waitForWaiters(JI)V
@3.0.0-alpha-1
-#<init>(Lorg/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType;)V
-#getReferenceType()Lorg/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType;

+###org/apache/hadoop/hbase/util/JvmVersion
@0.95.0
+#<init>()V
+#isBadJvmVersion()Z
@1.7.0
+#getVersion()Ljava/lang/String;
@2.0.0-alpha-1
-#getVersion()Ljava/lang/String;
@2.2.6
+#getVersion()Ljava/lang/String;
@2.3.0
-#getVersion()Ljava/lang/String;
@2.3.1
+#getVersion()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/MapreduceDependencyClasspathTool
@0.96.1-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/util/MapreduceDependencyClasspathTool

+###org/apache/hadoop/hbase/util/ModifyRegionUtils$RegionEditTask
@0.98.6-hadoop1
+#editRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha4
+#editRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#editRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V

+###org/apache/hadoop/hbase/util/RegionSplitter
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
+#newSplitAlgoInstance(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;

+###org/apache/hadoop/hbase/wal/FSHLogProvider$Writer
@2.0.0-alpha-1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
@2.0.1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
@2.5.0
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
@3.0.0-alpha-1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
@3.0.0-alpha-3
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V

+###org/apache/hadoop/hbase/wal/RegionGroupingProvider$RegionGroupingStrategy
@1.0.0
+#group([B)[B
+#init(Lorg/apache/hadoop/conf/Configuration;)V
@1.3.0
+#group([B[B)Ljava/lang/String;
+#init(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
-#group([B)[B
-#init(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/wal/WAL$Reader
@0.99.2
+#next()Lorg/apache/hadoop/hbase/wal/WAL$Entry;
+#next(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
+#seek(J)V
+#getPosition()J
+#reset()V

+###org/apache/hadoop/hbase/wal/WALKey
@0.99.2
+#<init>()V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/UUID;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;J)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJ)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJ)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJJ)V
+#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#getEncodedRegionName()[B
+#getTablename()Lorg/apache/hadoop/hbase/TableName;
+#getLogSeqNum()J
+#setLogSeqNum(J)V
+#setOrigLogSeqNum(J)V
+#getOrigLogSeqNum()J
+#getSequenceId()J
+#getWriteTime()J
+#getScopes()Ljava/util/NavigableMap;
+#getNonceGroup()J
+#getNonce()J
+#setScopes(Ljava/util/NavigableMap;)V
+#readOlderScopes(Ljava/util/NavigableMap;)V
+#addClusterId(Ljava/util/UUID;)V
+#getClusterIds()Ljava/util/List;
+#getOriginatingClusterId()Ljava/util/UUID;
+#toString()Ljava/lang/String;
+#toStringMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/wal/WALKey;)I
+#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey$Builder;
+#readFieldsFromPb(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
+#compareTo(Ljava/lang/Object;)I
@1.1.3
+#getSequenceId(J)J
@1.2.0
+#getMvcc()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;
+#getWriteEntry()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
+#setWriteEntry(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJ)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJ)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJJ)V
@1.3.2
+#estimatedSerializedSizeOf()J
@1.4.0
-#setLogSeqNum(J)V
-#getSequenceId(J)J
@1.5.0
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/Map;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/Map;)V
+#addExtendedAttribute(Ljava/lang/String;[B)V
+#getExtendedAttribute(Ljava/lang/String;)[B
+#getExtendedAttributes()Ljava/util/Map;
@2.0.0-alpha-1
+#<init>(Ljava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
*#getLogSeqNum()J[deprecated]
+#getReplicationScopes()Ljava/util/NavigableMap;
+#serializeReplicationScope(Z)V
+#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
+#readFieldsFromPb(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/Map;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/Map;)V
-#getScopes()Ljava/util/NavigableMap;
-#setScopes(Ljava/util/NavigableMap;)V
-#readOlderScopes(Ljava/util/NavigableMap;)V
-#addExtendedAttribute(Ljava/lang/String;[B)V
-#getExtendedAttribute(Ljava/lang/String;)[B
-#getExtendedAttributes()Ljava/util/Map;
-#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey$Builder;
-#readFieldsFromPb(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
@2.0.0-alpha3
+#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALEdit$Builder;
+#readFieldsFromPb(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALEdit;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
-#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
-#readFieldsFromPb(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
@2.0.0-alpha4
+#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
+#readFieldsFromPb(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
-#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALEdit$Builder;
-#readFieldsFromPb(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALEdit;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
@2.0.0-beta-1
-#getMvcc()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;
-#getWriteEntry()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
-#setWriteEntry(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
-#<init>()V
-#<init>(Ljava/util/NavigableMap;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/UUID;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;J)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/NavigableMap;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
-#getLogSeqNum()J[deprecated]
-#setOrigLogSeqNum(J)V
-#getSequenceId()J
-#getReplicationScopes()Ljava/util/NavigableMap;
-#serializeReplicationScope(Z)V
-#addClusterId(Ljava/util/UUID;)V
-#getClusterIds()Ljava/util/List;
-#toString()Ljava/lang/String;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#compareTo(Lorg/apache/hadoop/hbase/wal/WALKey;)I
-#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
-#readFieldsFromPb(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
-#compareTo(Ljava/lang/Object;)I
@2.0.0-beta-2
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#getTablename()Lorg/apache/hadoop/hbase/TableName;
@2.3.0
+#addExtendedAttribute(Ljava/lang/String;[B)V
+#getExtendedAttribute(Ljava/lang/String;)[B
+#getExtendedAttributes()Ljava/util/Map;

+###org/apache/hadoop/hbase/ZNodeClearer
@0.95.0
+#writeMyEphemeralNodeOnDisk(Ljava/lang/String;)V
+#readMyEphemeralNodeOnDisk()Ljava/lang/String;
+#getMyEphemeralNodeFileName()Ljava/lang/String;
+#deleteMyEphemeralNodeOnDisk()V
+#clear(Lorg/apache/hadoop/conf/Configuration;)Z
@2.0.0-alpha-1
+#parseMasterServerName(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/hadoop/hbase/zookeeper/RecoveringRegionWatcher
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/RecoveringRegionWatcher

+###org/apache/hadoop/hbase/zookeeper/SplitOrMergeTracker
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#start()V
+#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#setSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
@2.0.0-alpha-1
+#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#setSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
-#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
-#setSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/SplitOrMergeTracker

+###org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer
@0.95.2-hadoop1
+#<init>()V
+#parse(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer

+###org/apache/hadoop/hbase/backup/BackupInfo$BackupState
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupState;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupInfo$BackupState

+###org/apache/hadoop/hbase/backup/BackupInfo$Filter
@2.0.0-alpha-1
+#apply(Lorg/apache/hadoop/hbase/backup/BackupInfo;)Z
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupInfo$Filter

+###org/apache/hadoop/hbase/backup/BackupRequest
@2.0.0-alpha-1
+#getBackupType()Lorg/apache/hadoop/hbase/backup/BackupType;
+#getTableList()Ljava/util/List;
+#getTargetRootDir()Ljava/lang/String;
+#getTotalTasks()I
+#getBandwidth()J
+#getBackupSetName()Ljava/lang/String;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupRequest

+###org/apache/hadoop/hbase/backup/BackupTableInfo
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)V
+#getSnapshotName()Ljava/lang/String;
+#setSnapshotName(Ljava/lang/String;)V
+#getTable()Lorg/apache/hadoop/hbase/TableName;
+#convert(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/BackupProtos$BackupTableInfo;)Lorg/apache/hadoop/hbase/backup/BackupTableInfo;
+#toProto()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/BackupProtos$BackupTableInfo;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupTableInfo

+###org/apache/hadoop/hbase/backup/FailedArchiveException
@1.3.0
+#<init>(Ljava/lang/String;Ljava/util/Collection;)V
+#getFailedFiles()Ljava/util/Collection;
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/hbase/backup/HBackupFileSystem
@2.0.0-alpha-1
+#getTableBackupDir(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#getTableBackupPath(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getLogBackupDir(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getLogBackupPath(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getManifest(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/impl/BackupManifest;
+#checkImageManifestExist(Ljava/util/HashMap;[Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
@2.0.0-alpha2
+#getTableBackupDataDir(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#getBackupPath(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getManifest(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/impl/BackupManifest;
-#getManifest(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/impl/BackupManifest;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/HBackupFileSystem

+###org/apache/hadoop/hbase/backup/impl/BackupAdminImpl
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;)V
+#close()V
+#getBackupInfo(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#deleteBackups([Ljava/lang/String;)I
+#getHistory(I)Ljava/util/List;
+#getHistory(I[Lorg/apache/hadoop/hbase/backup/BackupInfo$Filter;)Ljava/util/List;
+#listBackupSets()Ljava/util/List;
+#getBackupSet(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/util/BackupSet;
+#deleteBackupSet(Ljava/lang/String;)Z
+#addToBackupSet(Ljava/lang/String;[Lorg/apache/hadoop/hbase/TableName;)V
+#removeFromBackupSet(Ljava/lang/String;[Lorg/apache/hadoop/hbase/TableName;)V
+#restore(Lorg/apache/hadoop/hbase/backup/RestoreRequest;)V
+#backupTables(Lorg/apache/hadoop/hbase/backup/BackupRequest;)Ljava/lang/String;
@2.0.0-alpha2
+#mergeBackups([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupAdminImpl

+###org/apache/hadoop/hbase/backup/impl/FullTableBackupClient
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupRequest;)V
+#execute()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/FullTableBackupClient

+###org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob
@2.0.0-alpha-1
+#<init>()V
+#run([Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/TableName;Z)V
+#createLoader(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles;
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha2
-#createLoader(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob

+###org/apache/hadoop/hbase/backup/RestoreDriver
@2.0.0-alpha-1
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/RestoreDriver

+###org/apache/hadoop/hbase/client/locking/EntityLock
@2.0.0-alpha-1
+#toString()Ljava/lang/String;
+#isLocked()Z
+#requestLock()V
+#await(JLjava/util/concurrent/TimeUnit;)Z
+#await()V
+#unlock()V

+###org/apache/hadoop/hbase/conf/ConfigurationObserver
@0.99.2
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.7.0
-###org/apache/hadoop/hbase/conf/ConfigurationObserver

+###org/apache/hadoop/hbase/constraint/ConstraintProcessor
@0.95.0
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@0.95.1-hadoop1
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@2.0.0-alpha-1
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.0.0-alpha3
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
@2.0.0-alpha4
+#getRegionObserver()Ljava/util/Optional;
@2.2.7
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.3.0
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.3.4
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.4.0
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.4.1
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$DeleteAsyncCallback
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination;)V
+#processResult(ILjava/lang/String;Ljava/lang/Object;)V

+###org/apache/hadoop/hbase/coordination/ZkSplitLogWorkerCoordination$ZkSplitTaskDetails
@0.99.0
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/commons/lang/mutable/MutableInt;)V
+#getTaskNode()Ljava/lang/String;
+#setTaskNode(Ljava/lang/String;)V
+#getCurTaskZKVersion()Lorg/apache/commons/lang/mutable/MutableInt;
+#setCurTaskZKVersion(Lorg/apache/commons/lang/mutable/MutableInt;)V
+#getWALFile()Ljava/lang/String;
@2.0.0-alpha3
+#<init>(Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;)V
+#getCurTaskZKVersion()Lorg/apache/commons/lang3/mutable/MutableInt;
+#setCurTaskZKVersion(Lorg/apache/commons/lang3/mutable/MutableInt;)V
-#<init>(Ljava/lang/String;Lorg/apache/commons/lang/mutable/MutableInt;)V
-#getCurTaskZKVersion()Lorg/apache/commons/lang/mutable/MutableInt;
-#setCurTaskZKVersion(Lorg/apache/commons/lang/mutable/MutableInt;)V

+###org/apache/hadoop/hbase/coprocessor/MasterCoprocessorEnvironment
@0.95.0
+#getMasterServices()Lorg/apache/hadoop/hbase/master/MasterServices;
@1.4.0
+#getMetricRegistryForMaster()Lorg/apache/hadoop/hbase/metrics/MetricRegistry;
@2.0.0-alpha4
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
-#getMasterServices()Lorg/apache/hadoop/hbase/master/MasterServices;
@2.0.0-beta-1
+#createConnection(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Connection;

+###org/apache/hadoop/hbase/coprocessor/ObserverContext
@0.95.0
+#<init>()V
+#getEnvironment()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
+#prepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#bypass()V
+#complete()V
+#shouldBypass()Z
+#shouldComplete()Z
+#createAndPrepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;
@1.5.0
+#<init>(Lorg/apache/hadoop/hbase/security/User;)V
+#getCaller()Lorg/apache/hadoop/hbase/security/User;
*#createAndPrepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[deprecated]
+#createAndPrepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;
-#<init>()V
@2.0.0-alpha4
+#getCaller()Ljava/util/Optional;
-#<init>(Lorg/apache/hadoop/hbase/security/User;)V
-#prepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
-#shouldBypass()Z
-#shouldComplete()Z
-#getCaller()Lorg/apache/hadoop/hbase/security/User;
-#createAndPrepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[deprecated]
-#createAndPrepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;
@2.0.0-beta-1
-#complete()V

+###org/apache/hadoop/hbase/coprocessor/RegionObserver
@0.95.0
+#preOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
+#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;)V[deprecated]
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;)V[deprecated]
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
+#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V[deprecated]
+#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postCompleteSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#postClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#preGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
+#postGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
+#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#postGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#preExists(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Z)Z
+#postExists(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Z)Z
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#postBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#postCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#postCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZ)J[deprecated]
+#postIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZJ)J[deprecated]
+#preAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#postAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#postIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
+#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#postScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preScannerNext(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;IZ)Z
+#postScannerNext(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;IZ)Z
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BZ)Z
+#preScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#postScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#preBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Z)Z
@0.95.1-hadoop1
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@0.96.0-hadoop1
+#preGetOp(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
*#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
+#postGetOp(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
*#postGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
@0.96.2-hadoop1
+#postLogReplay(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BISZ)Z
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BZ)Z
@0.98.0-hadoop1
+#preSplitBeforePONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
+#preSplitAfterPONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postStartRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
+#postCloseRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
+#postBatchMutateIndispensably(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;Z)V
+#preStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#postStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@0.98.2-hadoop1
+#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;
@0.98.4-hadoop1
+#prePrepareTimeStampForDeleteVersion(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;[BLorg/apache/hadoop/hbase/client/Get;)V
+#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preAppendAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrementAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
@0.99.0
-#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
-#postGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
@0.99.2
+#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
*#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
+#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
*#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
@1.1.0
+#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postStartRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
+#postCloseRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
-#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postStartRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
-#postCloseRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
@1.4.0
*#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
*#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCommitStoreFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
+#postCommitStoreFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@1.5.0
+#preWALAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha-1
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
*#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
*#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
*#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
*#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V[deprecated]
*#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V[deprecated]
*#preSplitBeforePONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V[deprecated]
*#preSplitAfterPONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
*#preRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
*#postRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
*#postCompleteSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
*#preStoreScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;[deprecated]
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
*#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BISZ)Z[deprecated]
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
+#preReplayWALs(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#postReplayWALs(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/Map;Z)Z
+#preStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
+#postStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
+#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;
-#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
-#preGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
-#postGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
-#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
-#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
-#preStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#postStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;
-#preWALAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha2
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;)V[deprecated]
*#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Z)Z[deprecated]
-#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;)V[deprecated]
@2.0.0-alpha3
+#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#postCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#postCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
*#preStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;[deprecated]
*#postStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;[deprecated]
-#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
-#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;)V[deprecated]
-#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;)V[deprecated]
-#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[deprecated]
-#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V[deprecated]
-#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
-#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V[deprecated]
-#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V[deprecated]
-#preSplitBeforePONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V[deprecated]
-#preSplitAfterPONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
-#preRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
-#postRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
-#postCompleteSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
-#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#postCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
-#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
-#postCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
-#preIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZ)J[deprecated]
-#postIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZJ)J[deprecated]
-#preStoreScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;[deprecated]
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BISZ)Z[deprecated]
-#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Z)Z[deprecated]
@2.0.0-alpha4
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanOptions;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/ScanOptions;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
*#prePrepareTimeStampForDeleteVersion(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;[BLorg/apache/hadoop/hbase/client/Get;)V[deprecated]
+#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;)V
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanOptions;)V
+#preReplayWALs(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#postReplayWALs(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V[deprecated]
+#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V[deprecated]
*#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;[deprecated]
-#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
-#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
-#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
-#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
-#preStoreScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#preReplayWALs(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
-#postReplayWALs(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
-#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
@2.0.0-beta-1
+#preMemStoreCompaction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#preMemStoreCompactionCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanOptions;)V
+#preMemStoreCompactionCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postMemStoreCompaction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/Map;)V
-#postLogReplay(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/Map;Z)Z
@2.2.0
*#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;[deprecated]
+#postIncrementBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
+#postAppendBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
@2.3.0
+#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#postCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#postCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preWALAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
@2.4.0
*#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z[deprecated]
*#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z[deprecated]
*#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z[deprecated]
*#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z[deprecated]
*#postCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z[deprecated]
*#postCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z[deprecated]
*#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z[deprecated]
*#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z[deprecated]
*#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z[deprecated]
*#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z[deprecated]
*#postCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z[deprecated]
*#postCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z[deprecated]
+#preCheckAndMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/CheckAndMutate;Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
+#preCheckAndMutateAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/CheckAndMutate;Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
+#postCheckAndMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/CheckAndMutate;Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
@2.4.2
*#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V[deprecated]
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
*#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V[deprecated]
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
*#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V[deprecated]
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
*#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V[deprecated]
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
*#preAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
+#preAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;
*#preAppendAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
*#postAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
+#postAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;
*#preIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
+#preIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;
*#preIncrementAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
*#postIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
+#postIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;

+###org/apache/hadoop/hbase/favored/FavoredNodesPromoter
@2.0.0-alpha-1
+#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha4
+#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.6
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.0
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.6
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.0
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.1
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/favored/FavoredNodesPromoter

+###org/apache/hadoop/hbase/generated/master/snapshot_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight$WeightComparator
@0.95.0
+#<init>()V
+#compare(Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight$WeightComparator

+###org/apache/hadoop/hbase/HealthCheckChore
@0.95.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/http/AdminAuthorizedServlet
@0.99.0
+#<init>()V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/AdminAuthorizedServlet

+###org/apache/hadoop/hbase/http/FilterInitializer
@0.99.0
+#<init>()V
+#initFilter(Lorg/apache/hadoop/hbase/http/FilterContainer;Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/FilterInitializer

+###org/apache/hadoop/hbase/http/HttpRequestLogAppender
@0.99.0
+#<init>()V
+#setRetainDays(I)V
+#getRetainDays()I
+#setFilename(Ljava/lang/String;)V
+#getFilename()Ljava/lang/String;
+#append(Lorg/apache/log4j/spi/LoggingEvent;)V
+#close()V
+#requiresLayout()Z
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpRequestLogAppender

+###org/apache/hadoop/hbase/http/HttpServer$QuotingInputFilter
@0.99.0
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpServer$QuotingInputFilter

+###org/apache/hadoop/hbase/http/lib/StaticUserWebFilter
@0.99.0
+#<init>()V
+#initFilter(Lorg/apache/hadoop/hbase/http/FilterContainer;Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/lib/StaticUserWebFilter

+###org/apache/hadoop/hbase/io/FSDataInputStreamWrapper
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;)V
+#prepareForBlockReader(Z)V
+#<init>(Lorg/apache/hadoop/fs/FSDataInputStream;)V
+#<init>(Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;)V
+#shouldUseHBaseChecksum()Z
+#getStream(Z)Lorg/apache/hadoop/fs/FSDataInputStream;
+#fallbackToFsChecksum(I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#checksumOk()V
+#close()V
+#getHfs()Lorg/apache/hadoop/hbase/fs/HFileSystem;
@0.98.15-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;Z)V
@0.99.0
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;Z)V
@1.1.12
+#unbuffer()V
@1.2.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;Z)V
-#unbuffer()V
@1.2.7
+#unbuffer()V
@1.3.0
-#unbuffer()V
@1.3.2
+#unbuffer()V
@1.7.0
+#getTotalBytesRead()J
+#getLocalBytesRead()J
+#getShortCircuitBytesRead()J
+#getZeroCopyBytesRead()J
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJ)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;ZJ)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/FileLink;Z)V
-#getTotalBytesRead()J
-#getLocalBytesRead()J
-#getShortCircuitBytesRead()J
-#getZeroCopyBytesRead()J
@2.2.5
+#getTotalBytesRead()J
+#getLocalBytesRead()J
+#getShortCircuitBytesRead()J
+#getZeroCopyBytesRead()J

+###org/apache/hadoop/hbase/io/hfile/BlockWithScanInfo
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;[B)V
+#getHFileBlock()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#getNextIndexedKey()[B
@1.0.1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;Lorg/apache/hadoop/hbase/Cell;)V
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;[B)V
-#getNextIndexedKey()[B

+###org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocatorException
@0.95.0

+###org/apache/hadoop/hbase/io/hfile/bucket/UniqueIndexMap
@0.95.0
+#<init>()V
@2.3.0
-###org/apache/hadoop/hbase/io/hfile/bucket/UniqueIndexMap

+###org/apache/hadoop/hbase/io/hfile/ChecksumUtil
@0.95.0
+#<init>()V
+#generateExceptionForChecksumFailureForTest(Z)V

+###org/apache/hadoop/hbase/io/hfile/HFile$Reader
@0.95.0
+#getName()Ljava/lang/String;
+#getComparator()Lorg/apache/hadoop/io/RawComparator;
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getMetaBlock(Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
+#loadFileInfo()Ljava/util/Map;
+#getLastKey()[B
+#midkey()[B
+#length()J
+#getEntries()J
+#getFirstKey()[B
+#indexSize()J
+#getFirstRowKey()[B
+#getLastRowKey()[B
+#getTrailer()Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;
+#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexReader;
+#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getCompressionAlgorithm()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#getGeneralBloomFilterMetadata()Ljava/io/DataInput;
+#getDeleteBloomFilterMetadata()Ljava/io/DataInput;
+#getPath()Lorg/apache/hadoop/fs/Path;
+#close(Z)V
+#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
@0.96.0-hadoop1
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparator()Lorg/apache/hadoop/io/RawComparator;
@0.96.1-hadoop1
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#hasMVCCInfo()Z
-#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
@0.98.0-hadoop1
+#getFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
@1.1.12
+#unbufferStream()V
@1.2.0
+#isPrimaryReplicaReader()Z
+#setPrimaryReplicaReader(Z)V
-#unbufferStream()V
@1.2.7
+#unbufferStream()V
@1.3.0
-#unbufferStream()V
@1.3.2
+#unbufferStream()V
@2.0.0-alpha-1
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getMetaBlock(Ljava/lang/String;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#getLastKey()Lorg/apache/hadoop/hbase/Cell;
+#midkey()Lorg/apache/hadoop/hbase/Cell;
+#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
+#shouldIncludeMemstoreTS()Z
+#isDecodeMemstoreTS()Z
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getUncachedBlockReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$FSReader;
+#prefetchComplete()Z
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getMetaBlock(Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
-#getLastKey()[B
-#midkey()[B
-#getFirstKey()[B
-#setPrimaryReplicaReader(Z)V
@2.0.0-alpha4
+#getLastKey()Ljava/util/Optional;
+#midKey()Ljava/util/Optional;
+#getFirstKey()Ljava/util/Optional;
+#getFirstRowKey()Ljava/util/Optional;
+#getLastRowKey()Ljava/util/Optional;
+#shouldIncludeMemStoreTS()Z
+#isDecodeMemStoreTS()Z
-#getLastKey()Lorg/apache/hadoop/hbase/Cell;
-#midkey()Lorg/apache/hadoop/hbase/Cell;
-#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
-#getFirstRowKey()[B
-#getLastRowKey()[B
-#shouldIncludeMemstoreTS()Z
-#isDecodeMemstoreTS()Z
@2.3.0
+#setDataBlockIndexReader(Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$CellBasedKeyBlockIndexReader;)V
+#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$CellBasedKeyBlockIndexReader;
+#setMetaBlockIndexReader(Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$ByteArrayKeyBlockIndexReader;)V
+#getMetaBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$ByteArrayKeyBlockIndexReader;
+#getContext()Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;
+#getHFileInfo()Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;
+#setDataBlockEncoder(Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)V
-#loadFileInfo()Ljava/util/Map;
-#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexReader;
-#getCompressionAlgorithm()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
-#shouldIncludeMemStoreTS()Z
-#isDecodeMemStoreTS()Z
@2.5.0
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
@3.0.0-alpha-1
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
@3.0.0-alpha-2
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getScanner(Lorg/apache/hadoop/conf/Configuration;ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
-#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;

+###org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter
@0.95.0
+#<init>()V
+#parseOptions([Ljava/lang/String;)Z
+#run([Ljava/lang/String;)I
@0.98.7-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#main([Ljava/lang/String;)V
@0.98.21-hadoop1
+#setPrintStreams(Ljava/io/PrintStream;Ljava/io/PrintStream;)V
+#processFile(Lorg/apache/hadoop/fs/Path;)I
@0.99.0
-#setPrintStreams(Ljava/io/PrintStream;Ljava/io/PrintStream;)V
-#processFile(Lorg/apache/hadoop/fs/Path;)I
@1.2.2
+#setPrintStreams(Ljava/io/PrintStream;Ljava/io/PrintStream;)V
+#processFile(Lorg/apache/hadoop/fs/Path;)I
@2.0.6
+#processFile(Lorg/apache/hadoop/fs/Path;Z)I
-#processFile(Lorg/apache/hadoop/fs/Path;)I
@2.1.0
+#processFile(Lorg/apache/hadoop/fs/Path;)I
-#processFile(Lorg/apache/hadoop/fs/Path;Z)I
@2.1.6
+#processFile(Lorg/apache/hadoop/fs/Path;Z)I
-#processFile(Lorg/apache/hadoop/fs/Path;)I
@2.2.0
+#processFile(Lorg/apache/hadoop/fs/Path;)I
-#processFile(Lorg/apache/hadoop/fs/Path;Z)I
@2.2.1
+#processFile(Lorg/apache/hadoop/fs/Path;Z)I
-#processFile(Lorg/apache/hadoop/fs/Path;)I

+###org/apache/hadoop/hbase/io/hfile/LruCachedBlockQueue
@0.98.4-hadoop1
+#<init>(JJ)V
+#add(Lorg/apache/hadoop/hbase/io/hfile/LruCachedBlock;)V
+#poll()Lorg/apache/hadoop/hbase/io/hfile/LruCachedBlock;
+#pollLast()Lorg/apache/hadoop/hbase/io/hfile/LruCachedBlock;
+#heapSize()J

+###org/apache/hadoop/hbase/io/HFileLink
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#getOriginPath()Lorg/apache/hadoop/fs/Path;
+#getArchivePath()Lorg/apache/hadoop/fs/Path;
+#isHFileLink(Lorg/apache/hadoop/fs/Path;)Z
+#isHFileLink(Ljava/lang/String;)Z
+#getReferencedHFileName(Ljava/lang/String;)Ljava/lang/String;
+#getReferencedRegionName(Ljava/lang/String;)Ljava/lang/String;
+#getReferencedTableName(Ljava/lang/String;)Ljava/lang/String;
+#createHFileLinkName(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)Ljava/lang/String;
+#createHFileLinkName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#getHFileFromBackReference(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getHFileFromBackReference(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
@0.95.2-hadoop1
+#getReferencedTableName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
+#createHFileLinkName(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Z
-#getReferencedTableName(Ljava/lang/String;)Ljava/lang/String;
-#createHFileLinkName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
@0.96.0-hadoop1
+#createPath(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/HFileLink;
+#exists(Lorg/apache/hadoop/fs/FileSystem;)Z
@0.98.8-hadoop1
-#exists(Lorg/apache/hadoop/fs/FileSystem;)Z
@0.98.14-hadoop1
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Z)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z
@0.99.0
+#exists(Lorg/apache/hadoop/fs/FileSystem;)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Z)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
-#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z
@0.99.2
-#exists(Lorg/apache/hadoop/fs/FileSystem;)Z
@1.0.2
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Z)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z
@1.1.0
+#buildFromHFileLinkPattern(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/HFileLink;
+#buildFromHFileLinkPattern(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/HFileLink;
+#build(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/HFileLink;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/HFileLink;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Z)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
-#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z
@1.1.3
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Z)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#getMobPath()Lorg/apache/hadoop/fs/Path;
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha4
+#createHFileLinkName(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Z)Z
-#createHFileLinkName(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Z)Z
@2.1.9
+#parseBackReferenceName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Pair;
@2.2.0
-#parseBackReferenceName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Pair;
@2.2.3
+#parseBackReferenceName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Pair;
@2.4.9
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
@2.5.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Z)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Z)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
-#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
-#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z
@3.0.0-alpha-1
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Z)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Z
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Z)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
-#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Ljava/lang/String;
@3.0.0-alpha-2
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
@3.0.0-alpha-3
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Z)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
+#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Ljava/lang/String;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Z)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;Z)Z
-#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
-#createFromHFileLink(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Z)Z

+###org/apache/hadoop/hbase/ipc/QosPriority
@1.1.0
+#priority()I

+###org/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer
@0.98.9-hadoop1
+#<init>()V
+#getNextQueue()I
@0.99.0
-###org/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer

+###org/apache/hadoop/hbase/ipc/RpcServer$BlockingServiceAndInterface
@0.95.1-hadoop1
+#<init>(Lcom/google/protobuf/BlockingService;Ljava/lang/Class;)V
+#getServiceInterface()Ljava/lang/Class;
+#getBlockingService()Lcom/google/protobuf/BlockingService;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Ljava/lang/Class;)V
+#getBlockingService()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;
-#<init>(Lcom/google/protobuf/BlockingService;Ljava/lang/Class;)V
-#getBlockingService()Lcom/google/protobuf/BlockingService;
@2.0.0-beta-1
+#<init>(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Ljava/lang/Class;)V
+#getBlockingService()Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;
-#<init>(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Ljava/lang/Class;)V
-#getBlockingService()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;

+###org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor
@0.98.4-hadoop1
+#<init>(Ljava/lang/String;IIFI)V
+#<init>(Ljava/lang/String;IIFILjava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;IIIILjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
+#getQueueLength()I
@0.98.10-hadoop1
+#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;IIIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/String;IIFILjava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/String;IIIILjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V
@0.99.0
+#<init>(Ljava/lang/String;IIFFI)V
+#<init>(Ljava/lang/String;IIFILjava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;IIFFILjava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;IIIILjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;IIIIFLjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
-#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/String;IIIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V
@1.0.0
+#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;IIFFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
+#<init>(Ljava/lang/String;IIFFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/String;IIFI)V
-#<init>(Ljava/lang/String;IIFILjava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/String;IIFFILjava/lang/Class;[Ljava/lang/Object;)V
@1.2.0
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
-#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
@1.3.0
+#<init>(Ljava/lang/String;IIFFLjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V
@1.4.0
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
*#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
*#<init>(Ljava/lang/String;IIFFI)V[deprecated]
*#<init>(Ljava/lang/String;IIFFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
*#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;IIFFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;IIFFLjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;IIIILjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;IIIIFLjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
+#getWriteQueueLength()I
+#getReadQueueLength()I
+#getScanQueueLength()I
+#getActiveHandlerCount()I
+#getActiveWriteHandlerCount()I
+#getActiveReadHandlerCount()I
+#getActiveScanHandlerCount()I
-#getQueueLength()I
@2.0.0-alpha-1
-#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
-#<init>(Ljava/lang/String;IIFFI)V[deprecated]
-#<init>(Ljava/lang/String;IIFFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
-#<init>(Ljava/lang/String;IIFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
-#<init>(Ljava/lang/String;IIFFILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
-#<init>(Ljava/lang/String;IIFFLjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
-#<init>(Ljava/lang/String;IIIILjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
-#<init>(Ljava/lang/String;IIIIFLjava/lang/Class;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
@2.5.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-3
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/ipc/SimpleRpcServer
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
+#setSocketSendBufSize(I)V
+#start()V
+#stop()V
+#join()V
+#getListenerAddress()Ljava/net/InetSocketAddress;
+#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
+#bind(Ljava/net/ServerSocket;Ljava/net/InetSocketAddress;I)V
+#getNumOpenConnections()I
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;Z)V
+#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
-#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
-#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
-#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
@3.0.0-alpha-1
-#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
-#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;

+###org/apache/hadoop/hbase/LocalHBaseCluster
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;I)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;II)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;IILjava/lang/Class;Ljava/lang/Class;)V
+#addRegionServer()Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#addRegionServer(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#addRegionServer(Lorg/apache/hadoop/conf/Configuration;ILorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#addMaster()Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#addMaster(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#addMaster(Lorg/apache/hadoop/conf/Configuration;ILorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#getRegionServer(I)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#getRegionServers()Ljava/util/List;
+#getLiveRegionServers()Ljava/util/List;
+#waitOnRegionServer(I)Ljava/lang/String;
+#waitOnRegionServer(Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;)Ljava/lang/String;
+#getMaster(I)Lorg/apache/hadoop/hbase/master/HMaster;
+#getActiveMaster()Lorg/apache/hadoop/hbase/master/HMaster;
+#getMasters()Ljava/util/List;
+#getLiveMasters()Ljava/util/List;
+#waitOnMaster(I)Ljava/lang/String;
+#waitOnMaster(Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;)Ljava/lang/String;
+#join()V
+#startup()V
+#shutdown()V
+#isLocal(Lorg/apache/hadoop/conf/Configuration;)Z
+#main([Ljava/lang/String;)V
@0.98.12-hadoop1
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
@0.99.0
-#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
@1.0.1
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIILjava/lang/Class;Ljava/lang/Class;)V

+###org/apache/hadoop/hbase/mapreduce/DefaultVisibilityExpressionResolver
@0.98.6-hadoop1
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#init()V
+#createVisibilityExpTags(Ljava/lang/String;)Ljava/util/List;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/DefaultVisibilityExpressionResolver

+###org/apache/hadoop/hbase/mapreduce/Import$Importer
@0.98.0-hadoop1
+#<init>()V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#setup(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/Import$Importer

+###org/apache/hadoop/hbase/mapreduce/ImportTsv$TsvParser$BadTsvLineException
@0.95.0
+#<init>(Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/ImportTsv$TsvParser$BadTsvLineException

+###org/apache/hadoop/hbase/mapreduce/KeyValueSerialization$KeyValueDeserializer
@0.95.0
+#<init>()V
+#close()V
+#deserialize(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#open(Ljava/io/InputStream;)V
+#deserialize(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/KeyValueSerialization$KeyValueDeserializer

+###org/apache/hadoop/hbase/mapreduce/RowCounter
@0.95.0
+#<init>()V
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/RowCounter

+###org/apache/hadoop/hbase/mapreduce/TableOutputCommitter
@0.95.0
+#<init>()V
+#abortTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#cleanupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#commitTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#needsTaskCommit(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Z
+#setupJob(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#setupTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
@0.96.1-hadoop1
+#isRecoverySupported()Z
+#recoverTask(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableOutputCommitter

+###org/apache/hadoop/hbase/mapreduce/TableRecordReader
@0.95.0
+#<init>()V
+#restart([B)V
+#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
+#setScan(Lorg/apache/hadoop/hbase/client/Scan;)V
+#close()V
+#getCurrentKey()Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;
+#getCurrentValue()Lorg/apache/hadoop/hbase/client/Result;
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#nextKeyValue()Z
+#getProgress()F
+#getCurrentValue()Ljava/lang/Object;
+#getCurrentKey()Ljava/lang/Object;
@0.99.0
+#setHTable(Lorg/apache/hadoop/hbase/client/Table;)V
-#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
@0.99.1
*#setHTable(Lorg/apache/hadoop/hbase/client/Table;)V[deprecated]
+#setTable(Lorg/apache/hadoop/hbase/client/Table;)V
@2.0.0-alpha-1
-#setHTable(Lorg/apache/hadoop/hbase/client/Table;)V[deprecated]
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableRecordReader

+###org/apache/hadoop/hbase/mapreduce/TableSplit
@0.95.0
+#<init>()V
+#<init>([BLorg/apache/hadoop/hbase/client/Scan;[B[BLjava/lang/String;)V
+#<init>([B[B[BLjava/lang/String;)V
+#getScan()Lorg/apache/hadoop/hbase/client/Scan;
+#getTableName()[B
+#getStartRow()[B
+#getEndRow()[B
+#getRegionLocation()Ljava/lang/String;
+#getLocations()[Ljava/lang/String;
+#getLength()J
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/hadoop/hbase/mapreduce/TableSplit;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/Scan;[B[BLjava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/String;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#<init>([BLorg/apache/hadoop/hbase/client/Scan;[B[BLjava/lang/String;)V
-#<init>([B[B[BLjava/lang/String;)V
-#getTableName()[B
@0.96.0-hadoop1
+#<init>([BLorg/apache/hadoop/hbase/client/Scan;[B[BLjava/lang/String;)V[deprecated]
+#<init>([B[B[BLjava/lang/String;)V[deprecated]
+#getTableName()[B
+#getTable()Lorg/apache/hadoop/hbase/TableName;
-#getTableName()Lorg/apache/hadoop/hbase/TableName;
@0.98.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/Scan;[B[BLjava/lang/String;J)V
+#<init>(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/String;J)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/Scan;[B[BLjava/lang/String;Ljava/lang/String;J)V
+#getEncodedRegionName()Ljava/lang/String;
@1.7.0
+#getScanAsString()Ljava/lang/String;
@2.0.0-alpha-1
-#<init>([BLorg/apache/hadoop/hbase/client/Scan;[B[BLjava/lang/String;)V[deprecated]
-#<init>([B[B[BLjava/lang/String;)V[deprecated]
-#getScanAsString()Ljava/lang/String;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableSplit

+###org/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;[Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#setRegionStateToMerging(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
+#getMergedRegion()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;[Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#getMergedRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;[Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#getMergedRegion()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.6
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#getMergedRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#getMergedRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;
@2.1.6
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#getMergedRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#getMergedRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#setRegionStateToMerging(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
@2.2.1
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#getMergedRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;

+###org/apache/hadoop/hbase/master/AssignmentVerificationReport
@0.96.0-hadoop1
+#<init>()V
+#fillUp(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;Ljava/util/Map;)V
+#fillUpDispersion(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
+#getDispersionInformation()Ljava/util/List;
+#print(Z)V
@2.0.0-alpha-1
+#fillUpDispersion(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;)V
-#fillUpDispersion(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/AssignmentVerificationReport

+###org/apache/hadoop/hbase/master/cleaner/CleanerChore
@0.95.0
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#newFileCleaner(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/cleaner/FileCleanerDelegate;
+#checkAndDeleteDirectory(Lorg/apache/hadoop/fs/Path;)Z
+#cleanup()V
@0.96.0-hadoop1
-#newFileCleaner(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/cleaner/FileCleanerDelegate;
-#checkAndDeleteDirectory(Lorg/apache/hadoop/fs/Path;)Z
@1.2.10
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
@1.3.0
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
@1.3.3
+#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
+#shutDownChorePool()V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#runCleaner()Ljava/lang/Boolean;
+#setEnabled(Z)Z
+#getEnabled()Z
@1.4.0
-#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
-#shutDownChorePool()V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.4.4
+#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.4.6
+#shutDownChorePool()V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
@1.4.11
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
+#runCleaner()Z
-#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
-#shutDownChorePool()V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#runCleaner()Ljava/lang/Boolean;
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
+#runCleaner()Ljava/lang/Boolean;
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#runCleaner()Z
@2.0.0-beta-1
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@2.1.0
+#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
+#shutDownChorePool()V
@2.1.6
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
+#runCleaner()Z
-#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
-#shutDownChorePool()V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#runCleaner()Ljava/lang/Boolean;
@2.2.0
+#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
+#shutDownChorePool()V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#runCleaner()Ljava/lang/Boolean;
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#runCleaner()Z
@2.2.1
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
+#runCleaner()Z
-#initChorePool(Lorg/apache/hadoop/conf/Configuration;)V
-#shutDownChorePool()V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/util/Map;)V
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#runCleaner()Ljava/lang/Boolean;
@2.5.0
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
@3.0.0-alpha-1
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
@3.0.0-alpha-3
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V

+###org/apache/hadoop/hbase/master/DeadServer
@0.95.0
+#<init>()V
+#cleanPreviousInstance(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isDeadServer(Lorg/apache/hadoop/hbase/ServerName;)Z
+#areDeadServersInProgress()Z
+#copyServerNames()Ljava/util/Set;
+#add(Lorg/apache/hadoop/hbase/ServerName;)V
+#finish(Lorg/apache/hadoop/hbase/ServerName;)V
+#size()I
+#isEmpty()Z
+#cleanAllPreviousInstances(Lorg/apache/hadoop/hbase/ServerName;)V
+#toString()Ljava/lang/String;
+#copyDeadServersSince(J)Ljava/util/List;
@0.95.2-hadoop1
+#getTimeOfDeath(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Date;
@1.2.0
+#notifyServer(Lorg/apache/hadoop/hbase/ServerName;)V
@1.3.3
+#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@1.4.0
+#removeDeadServer(Lorg/apache/hadoop/hbase/ServerName;)Z
-#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@1.4.9
+#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.0.0-alpha-1
-#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
-#removeDeadServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.0.0-alpha3
+#removeDeadServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.0.3
+#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.1.0
-#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.1.1
+#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
+#add(Lorg/apache/hadoop/hbase/ServerName;Z)V
@2.2.0
-#add(Lorg/apache/hadoop/hbase/ServerName;Z)V
@2.3.0
+#processing(Lorg/apache/hadoop/hbase/ServerName;)V
-#cleanPreviousInstance(Lorg/apache/hadoop/hbase/ServerName;)Z
-#isProcessingServer(Lorg/apache/hadoop/hbase/ServerName;)Z
-#areDeadServersInProgress()Z
-#add(Lorg/apache/hadoop/hbase/ServerName;)V
-#notifyServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#isEmpty()Z
-#cleanAllPreviousInstances(Lorg/apache/hadoop/hbase/ServerName;)V
-#copyDeadServersSince(J)Ljava/util/List;
@3.0.0-alpha-1
-#processing(Lorg/apache/hadoop/hbase/ServerName;)V
-#finish(Lorg/apache/hadoop/hbase/ServerName;)V

+###org/apache/hadoop/hbase/master/locking/LockManager$MasterLock
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;[Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
+#acquire()Z
+#tryAcquire(J)Z
+#release()V
+#toString()Ljava/lang/String;
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;[Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;[Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/master/MasterWalManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#stop()V
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#splitLog(Lorg/apache/hadoop/hbase/ServerName;)V
+#splitMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
+#splitMetaLog(Ljava/util/Set;)V
+#prepareLogReplay(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#splitLog(Ljava/util/Set;)V
+#splitLog(Ljava/util/Set;Lorg/apache/hadoop/fs/PathFilter;)V
@2.0.0-alpha2
+#getFailedServersFromLogFolders()Ljava/util/Set;
@2.0.0-beta-1
-#prepareLogReplay(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
@2.0.2
+#getLiveServersFromWALDir()Ljava/util/Set;
*#getFailedServersFromLogFolders()Ljava/util/Set;[deprecated]
@2.0.3
+#getSplittingServersFromWALDir()Ljava/util/Set;
+#getServerNamesFromWALDirPath(Lorg/apache/hadoop/fs/PathFilter;)Ljava/util/Set;
+#getWALDirPaths(Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
@2.0.4
+#archiveMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.6
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@2.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#getSplittingServersFromWALDir()Ljava/util/Set;
-#getServerNamesFromWALDirPath(Lorg/apache/hadoop/fs/PathFilter;)Ljava/util/Set;
-#getWALDirPaths(Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
-#archiveMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
@2.1.1
+#getSplittingServersFromWALDir()Ljava/util/Set;
+#getServerNamesFromWALDirPath(Lorg/apache/hadoop/fs/PathFilter;)Ljava/util/Set;
+#getWALDirPaths(Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
@2.1.2
+#archiveMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
@2.1.5
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/master/MasterServices;)V

+###org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#setRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getSplitPoint()[B
+#setSplitPoint([B)V
+#toString()Ljava/lang/String;
+#execute(Lorg/apache/hadoop/hbase/client/Admin;)V
@1.3.0
+#getType()Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;[B)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#setRegionInfo(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#setRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.3.0
+#submit(Lorg/apache/hadoop/hbase/master/MasterServices;)J
-#execute(Lorg/apache/hadoop/hbase/client/Admin;)V
@2.3.1
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;[B)V
-#setRegionInfo(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#getSplitPoint()[B
-#setSplitPoint([B)V
@2.4.0
-###org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan

+###org/apache/hadoop/hbase/master/procedure/AddColumnFamilyProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/master/procedure/AddColumnFamilyProcedure

+###org/apache/hadoop/hbase/master/procedure/DeleteTableProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv$WALStoreLeaseRecovery
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
@2.3.0
-###org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv$WALStoreLeaseRecovery

+###org/apache/hadoop/hbase/master/procedure/ModifyTableProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)V

+###org/apache/hadoop/hbase/master/procedure/ServerCrashException
@2.0.0-alpha-1
+#<init>(JLorg/apache/hadoop/hbase/ServerName;)V
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/procedure/TableProcedureInterface
@1.1.0
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;

+###org/apache/hadoop/hbase/master/RegionPlacementMaintainer$RandomizedMatrix
@0.96.0-hadoop1
+#<init>(II)V
+#transform([[F)[[F
+#invert([[F)[[F
+#invertIndices([I)[I

+###org/apache/hadoop/hbase/master/ServerListener
@0.98.3-hadoop1
+#serverAdded(Lorg/apache/hadoop/hbase/ServerName;)V
+#serverRemoved(Lorg/apache/hadoop/hbase/ServerName;)V
@1.4.0
+#waiting()V

+###org/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
+#prepare()Lorg/apache/hadoop/hbase/master/snapshot/EnabledTableSnapshotHandler;
+#prepare()Lorg/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler;
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V

+###org/apache/hadoop/hbase/master/snapshot/SnapshotManager
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
+#getCompletedSnapshots()Ljava/util/List;
+#deleteSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#isSnapshotDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Z
+#takeSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#setSnapshotHandlerForTesting(Lorg/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler;)V
+#restoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#isRestoringTable(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Z
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#checkSnapshotSupport()V
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
+#setSnapshotHandlerForTesting(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/SnapshotSentinel;)V
+#isRestoreDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Z
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
-#setSnapshotHandlerForTesting(Lorg/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler;)V
-#isRestoringTable(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Z
@0.95.2-hadoop1
+#setSnapshotHandlerForTesting(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotSentinel;)V
-#setSnapshotHandlerForTesting(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/SnapshotSentinel;)V
@0.98.1-hadoop1
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#getProcedureSignature()Ljava/lang/String;
+#execProcedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)V
+#isProcedureDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
@1.2.10
+#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
+#isTakingAnySnapshot()Z
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
-#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
-#isTakingAnySnapshot()Z
@1.3.3
+#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
+#isTakingAnySnapshot()Z
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
*#restoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V[deprecated]
+#restoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Z)V
-#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
-#isTakingAnySnapshot()Z
@1.4.6
+#getLocks()Lorg/apache/hadoop/hbase/util/KeyLocker;
@1.4.9
+#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
+#isTakingAnySnapshot()Z
-#getLocks()Lorg/apache/hadoop/hbase/util/KeyLocker;
@1.4.10
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
+#deleteSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#isSnapshotDone(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)Z
+#takeSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#restoreOrCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/util/NonceKey;Z)J
+#execProcedure(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)V
+#isProcedureDone(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
+#getLocks()Lorg/apache/hadoop/hbase/util/KeyLocker;
-#deleteSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#isSnapshotDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Z
-#takeSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
-#isTakingAnySnapshot()Z
-#restoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V[deprecated]
-#restoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Z)V
-#isRestoreDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Z
-#execProcedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)V
-#isProcedureDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
@2.0.0
+#checkPermissions(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;Lorg/apache/hadoop/hbase/security/access/AccessChecker;Lorg/apache/hadoop/hbase/security/User;)V
@2.0.3
+#isTakingSnapshot(Lorg/apache/hadoop/hbase/TableName;)Z
+#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
+#isTakingAnySnapshot()Z
-#getLocks()Lorg/apache/hadoop/hbase/util/KeyLocker;
@2.0.4
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
+#getLocks()Lorg/apache/hadoop/hbase/util/KeyLocker;
-#isTakingSnapshot(Lorg/apache/hadoop/hbase/TableName;)Z
-#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
-#isTakingAnySnapshot()Z
@2.1.2
+#isTakingSnapshot(Lorg/apache/hadoop/hbase/TableName;)Z
+#getTakingSnapshotLock()Ljava/util/concurrent/locks/ReadWriteLock;
+#isTakingAnySnapshot()Z
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
-#getLocks()Lorg/apache/hadoop/hbase/util/KeyLocker;
@2.5.0
+#restoreOrCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/util/NonceKey;ZLjava/lang/String;)J
-#restoreOrCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/util/NonceKey;Z)J
@3.0.0-alpha-1
+#restoreOrCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/util/NonceKey;Z)J
-#restoreOrCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/util/NonceKey;ZLjava/lang/String;)J
@3.0.0-alpha-3
+#isTableTakingAnySnapshot(Lorg/apache/hadoop/hbase/TableName;)Z
+#prepareWorkingDirectory(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#takeSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJ)J
+#restoreOrCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/util/NonceKey;ZLjava/lang/String;)J
+#registerSnapshotProcedure(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;J)V
+#unregisterSnapshotProcedure(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;J)V
+#snapshotProcedureEnabled()Z
+#acquireSnapshotVerifyWorker(Lorg/apache/hadoop/hbase/master/procedure/SnapshotVerifyProcedure;)Lorg/apache/hadoop/hbase/ServerName;
+#releaseSnapshotVerifyWorker(Lorg/apache/hadoop/hbase/master/procedure/SnapshotVerifyProcedure;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;)V
+#getAvailableWorker(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/Integer;
-#restoreOrCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/util/NonceKey;Z)J

+###org/apache/hadoop/hbase/mob/ExpiredMobFileCleaner
@2.0.0-alpha-1
+#<init>()V
+#cleanExpiredMobFiles(Ljava/lang/String;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
+#cleanExpiredMobFiles(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#cleanExpiredMobFiles(Ljava/lang/String;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V

+###org/apache/hadoop/hbase/monitoring/MemoryBoundedLogMessageBuffer
@0.95.0
+#<init>(J)V
+#add(Ljava/lang/String;)V
+#dumpTo(Ljava/io/PrintWriter;)V

+###org/apache/hadoop/hbase/monitoring/StateDumpServlet
@0.95.0
+#<init>()V

+###org/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager
@0.99.0
+#<init>()V
+#start()V
+#stop(Z)V
+#buildSubprocedure(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/Subprocedure;
+#initialize(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#getProcedureSignature()Ljava/lang/String;
@2.4.0
+#buildSubprocedure(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/Subprocedure;
-#buildSubprocedure(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/Subprocedure;

+###org/apache/hadoop/hbase/procedure/SubprocedureFactory
@0.95.0
+#buildSubprocedure(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/procedure/Subprocedure;

+###org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil
@0.95.0
+#<init>()V
+#toHLogEntries(Ljava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#replicateWALEntry(Lorg/apache/hadoop/hbase/client/AdminProtocol;[Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
+#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;
@0.95.1-hadoop1
+#replicateWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
-#replicateWALEntry(Lorg/apache/hadoop/hbase/client/AdminProtocol;[Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
@0.95.2-hadoop1
+#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/util/Pair;
-#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;
@0.96.0-hadoop1
-#toHLogEntries(Ljava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@0.99.2
+#replicateWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
+#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/util/Pair;
-#replicateWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
-#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/util/Pair;
@1.1.0
+#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/wal/WAL$Entry;[B)Lorg/apache/hadoop/hbase/util/Pair;
@1.3.0
+#replicateWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/wal/WAL$Entry;[BLjava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/util/Pair;
-#replicateWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
-#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/wal/WAL$Entry;[B)Lorg/apache/hadoop/hbase/util/Pair;
@2.0.0-alpha-1
+#replicateWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#replicateWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.2.3
+#replicateWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;I)V
-#replicateWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/protobuf/ReplicationProtbufUtil

+###org/apache/hadoop/hbase/quotas/OperationQuota$OperationType
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;

+###org/apache/hadoop/hbase/quotas/policies/DefaultViolationPolicyEnforcement
@2.0.0-alpha-1
+#<init>()V
+#enable()V
+#disable()V
+#getPolicyName()Ljava/lang/String;
+#check(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#shouldCheckBulkLoads()Z
+#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
@2.1.8
+#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
-#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
@2.2.0
+#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
-#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
@2.2.3
+#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
-#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V

+###org/apache/hadoop/hbase/quotas/QuotaSnapshotStore$ViolationState
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/quotas/QuotaSnapshotStore$ViolationState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/quotas/QuotaSnapshotStore$ViolationState;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/quotas/QuotaSnapshotStore$ViolationState

+###org/apache/hadoop/hbase/quotas/RegionServerRpcQuotaManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start(Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
+#stop()V
+#isQuotaEnabled()Z
+#getQuota(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/OperationQuota;
+#checkQuota(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)Lorg/apache/hadoop/hbase/quotas/OperationQuota;
+#checkQuota(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/util/List;)Lorg/apache/hadoop/hbase/quotas/OperationQuota;
@2.2.0
+#switchRpcThrottle(Z)V
-#isQuotaEnabled()Z

+###org/apache/hadoop/hbase/quotas/TableSpaceQuotaSnapshotNotifier
@2.0.0-alpha-1
+#<init>()V
+#transitionTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#initialize(Lorg/apache/hadoop/hbase/client/Connection;)V

+###org/apache/hadoop/hbase/regionserver/BaseRowProcessor
@0.95.0
+#<init>()V
+#preProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#getClusterId()Ljava/util/UUID;
+#getName()Ljava/lang/String;
@0.95.1-hadoop1
+#useDurability()Lorg/apache/hadoop/hbase/client/Durability;
@0.96.0-hadoop1
+#getClusterIds()Ljava/util/List;
-#getClusterId()Ljava/util/UUID;
@0.98.4-hadoop1
+#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha3
+#preProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)V
-#preProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/BaseRowProcessor

+###org/apache/hadoop/hbase/regionserver/CellSink
@2.0.0-alpha-1
+#append(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/regionserver/CompactedHFilesDischargeHandler
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#process()V

+###org/apache/hadoop/hbase/regionserver/CompactionPipeline
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;)V
+#pushHead(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;)Z
+#getVersionedList()Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;
+#getVersionedTail()Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;
+#swap(Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;ZZ)Z
+#flattenYoungestSegment(J)Z
+#isEmpty()Z
+#getSegments()Ljava/util/List;
+#size()J
+#getMinSequenceId()J
+#getTailSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#getPipelineSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#getTail()Lorg/apache/hadoop/hbase/regionserver/Segment;
@2.0.0-alpha4
+#flattenOneSegment(JLorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;)Z
+#getTailSizing()Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
+#getPipelineSizing()Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
-#flattenYoungestSegment(J)Z
-#getTailSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getPipelineSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
@2.0.0-beta-1
+#flattenOneSegment(JLorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;)Z
-#flattenOneSegment(JLorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;)Z
@2.0.1
+#getTailSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getPipelineSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
-#getTailSizing()Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;
-#getPipelineSizing()Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;

+###org/apache/hadoop/hbase/regionserver/compactions/Compactor$InternalScannerFactory
@0.98.19-hadoop1
+#getScanType(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/ScanType;
+#createScanner(Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/Compactor$FileDetails;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/Compactor$InternalScannerFactory

+###org/apache/hadoop/hbase/regionserver/compactions/DateTieredCompactor
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/DateTieredCompactor

+###org/apache/hadoop/hbase/regionserver/compactions/SortedCompactionPolicy
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
+#preSelectCompactionForCoprocessor(Ljava/util/Collection;Ljava/util/List;)Ljava/util/List;
+#selectCompaction(Ljava/util/Collection;Ljava/util/List;ZZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
+#getNextMajorCompactTime(Ljava/util/Collection;)J
+#throttleCompaction(J)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/SortedCompactionPolicy

+###org/apache/hadoop/hbase/regionserver/DefaultMemStore
@0.99.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#snapshot()Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;
+#clearSnapshot(J)V
+#getFlushableSize()J
+#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
+#timeOfOldestEdit()J
+#rollback(Lorg/apache/hadoop/hbase/Cell;)V
+#delete(Lorg/apache/hadoop/hbase/Cell;)J
+#getRowKeyAtOrBefore(Lorg/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker;)V
+#updateColumnValue([B[B[BJJ)J
+#upsert(Ljava/lang/Iterable;J)J
+#getScanners(J)Ljava/util/List;
+#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
+#heapSize()J
+#size()J
+#main([Ljava/lang/String;)V
@1.1.0
+#getSnapshotSize()J
@1.2.0
+#add(Lorg/apache/hadoop/hbase/Cell;)J
+#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
-#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
-#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
@1.3.3
+#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
-#upsert(Ljava/lang/Iterable;J)J
@1.4.0
+#add(Ljava/lang/Iterable;)J
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)V
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#updateLowestUnflushedSequenceIdInWAL(Z)V
+#size()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#preFlushSeqIDEstimation()J
+#isSloppy()Z
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#clearSnapshot(J)V
-#getFlushableSize()J
-#getSnapshotSize()J
-#add(Lorg/apache/hadoop/hbase/Cell;)J
-#add(Ljava/lang/Iterable;)J
-#timeOfOldestEdit()J
-#rollback(Lorg/apache/hadoop/hbase/Cell;)V
-#delete(Lorg/apache/hadoop/hbase/Cell;)J
-#getRowKeyAtOrBefore(Lorg/apache/hadoop/hbase/regionserver/GetClosestRowBeforeTracker;)V
-#updateColumnValue([B[B[BJJ)J
-#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
-#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
-#heapSize()J
-#size()J
@2.0.0-alpha4
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#size()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
-#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#size()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
@2.0.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;)V
@2.1.0
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;)V
@2.1.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;)V

+###org/apache/hadoop/hbase/regionserver/FifoRpcSchedulerFactory
@1.4.0
+#<init>()V
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;[deprecated]
@3.0.0-alpha-1
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;[deprecated]

+###org/apache/hadoop/hbase/regionserver/FlushRequester
@0.95.0
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@0.95.1-hadoop1
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;J)V
@0.99.0
+#registerFlushRequestListener(Lorg/apache/hadoop/hbase/regionserver/FlushRequestListener;)V
+#unregisterFlushRequestListener(Lorg/apache/hadoop/hbase/regionserver/FlushRequestListener;)Z
+#setGlobalMemstoreLimit(J)V
@1.1.0
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)V
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;J)V
@1.3.3
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)Z
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)Z
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)V
@1.4.0
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)V
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)Z
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)Z
@1.4.8
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)Z
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)Z
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)V
@2.0.0-alpha-1
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)V
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)Z
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)Z
@2.0.0-alpha4
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;ZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;JZ)V
+#setGlobalMemStoreLimit(J)V
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/Region;JZ)V
-#setGlobalMemstoreLimit(J)V
@2.1.1
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;ZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Z
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;JZ)Z
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;ZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;JZ)V
@2.4.0
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Z
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Z
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;J)Z
-#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;ZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Z
-#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;JZ)Z

+###org/apache/hadoop/hbase/regionserver/handler/CloseRegionHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZI)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZILorg/apache/hadoop/hbase/ServerName;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZILorg/apache/hadoop/hbase/executor/EventType;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#process()V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;Lorg/apache/hadoop/hbase/ServerName;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;Lorg/apache/hadoop/hbase/executor/EventType;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZI)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZILorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZILorg/apache/hadoop/hbase/executor/EventType;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;Lorg/apache/hadoop/hbase/executor/EventType;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/client/RegionInfo;ZLorg/apache/hadoop/hbase/ServerName;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/ServerName;)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;

+###org/apache/hadoop/hbase/regionserver/HeapMemoryManager$TunerContext
@0.99.0
+#<init>()V
+#getBlockedFlushCount()J
+#setBlockedFlushCount(J)V
+#getUnblockedFlushCount()J
+#setUnblockedFlushCount(J)V
+#getEvictCount()J
+#setEvictCount(J)V
+#getCurMemStoreSize()F
+#setCurMemStoreSize(F)V
+#getCurBlockCacheSize()F
+#setCurBlockCacheSize(F)V
@1.2.0
+#getCacheMissCount()J
+#setCacheMissCount(J)V
+#getCurBlockCacheUsed()F
+#setCurBlockCacheUsed(F)V
+#getCurMemStoreUsed()F
+#setCurMemStoreUsed(F)V
@2.0.0-alpha-1
+#setOffheapMemstore(Z)V
+#isOffheapMemstore()Z
@2.0.0-alpha4
+#setOffheapMemStore(Z)V
+#isOffheapMemStore()Z
-#setOffheapMemstore(Z)V
-#isOffheapMemstore()Z

+###org/apache/hadoop/hbase/regionserver/HRegion
@0.95.0
+#getSmallestReadPoint()J
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#initialize()J[deprecated]
+#hasReferences()Z
+#getHDFSBlocksDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#getMemstoreSize()Ljava/util/concurrent/atomic/AtomicLong;
+#addAndGetGlobalMemstoreSize(J)J
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#isClosed()Z
+#isClosing()Z
+#isAvailable()Z
+#isSplittable()Z
+#isMergeable()Z
+#areWritesEnabled()Z
+#getMVCC()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl;
+#isLoadingCfsOnDemandDefault()Z
+#close()Ljava/util/Map;
+#close(Z)Ljava/util/Map;
+#waitForFlushesAndCompactions()V
+#getStartKey()[B
+#getEndKey()[B
+#getRegionId()J
+#getRegionName()[B
+#getRegionNameAsString()Ljava/lang/String;
+#getTableDesc()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getLog()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#getFilesystem()Lorg/apache/hadoop/fs/FileSystem;
+#getRegionFileSystem()Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
+#getLastFlushTime()J
+#getLargestHStoreSize()J
+#compactStores(Z)V
+#compactStores()V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;)Z
+#flushcache()Z
+#getClosestRowBefore([B[B)Lorg/apache/hadoop/hbase/client/Result;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#delete(Lorg/apache/hadoop/hbase/client/Delete;Z)V
+#put(Lorg/apache/hadoop/hbase/client/Put;)V
+#put(Lorg/apache/hadoop/hbase/client/Put;Z)V
+#put([Lorg/apache/hadoop/hbase/client/Put;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#batchMutate([Lorg/apache/hadoop/hbase/util/Pair;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
+#addRegionToSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;)V
+#getStore([B)Lorg/apache/hadoop/hbase/regionserver/Store;
+#getStores()Ljava/util/Map;
+#getStoreFileList([[B)Ljava/util/List;
+#obtainRowLock([B)Ljava/lang/Integer;
+#releaseRowLock(Ljava/lang/Integer;)V
+#getLock(Ljava/lang/Integer;[BZ)Ljava/lang/Integer;
+#bulkLoadHFiles(Ljava/util/List;Z)Z
+#bulkLoadHFiles(Ljava/util/List;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#closeHRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#addRegionToMETA(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#rowIsInRange(Lorg/apache/hadoop/hbase/HRegionInfo;[B)Z
+#mergeAdjacent(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#merge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#get(Lorg/apache/hadoop/hbase/client/Get;)Lorg/apache/hadoop/hbase/client/Result;
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
+#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;J)V
+#append(Lorg/apache/hadoop/hbase/client/Append;Z)Lorg/apache/hadoop/hbase/client/Result;
+#increment(Lorg/apache/hadoop/hbase/client/Increment;Z)Lorg/apache/hadoop/hbase/client/Result;
+#heapSize()J
+#registerService(Lcom/google/protobuf/Service;)Z
+#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
+#checkSplit()[B
+#getCompactPriority()I
+#needsCompaction()Z
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;
+#setCoprocessorHost(Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
+#startRegionOperation()V
+#closeRegionOperation()V
+#main([Ljava/lang/String;)V
+#getOpenSeqNum()J
+#getCompactionState()Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
+#reportCompactionRequestStart(Z)V
+#reportCompactionRequestEnd(Z)V
@0.95.1-hadoop1
+#setRecovering(Z)V
+#isRecovering()Z
+#delete(Lorg/apache/hadoop/hbase/client/Delete;)V
+#append(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#increment(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#getMaxStoreSeqIdForLogReplay()Ljava/util/Map;
-#delete(Lorg/apache/hadoop/hbase/client/Delete;Z)V
-#put(Lorg/apache/hadoop/hbase/client/Put;Z)V
-#append(Lorg/apache/hadoop/hbase/client/Append;Z)Lorg/apache/hadoop/hbase/client/Result;
-#increment(Lorg/apache/hadoop/hbase/client/Increment;Z)Lorg/apache/hadoop/hbase/client/Result;
@0.95.2-hadoop1
+#batchMutate([Lorg/apache/hadoop/hbase/client/Mutation;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#getRowLock([BZ)Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLock;
+#getRowLock([B)Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLock;
+#releaseRowLocks(Ljava/util/List;)V
-#put([Lorg/apache/hadoop/hbase/client/Put;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#batchMutate([Lorg/apache/hadoop/hbase/util/Pair;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#obtainRowLock([B)Ljava/lang/Integer;
-#releaseRowLock(Ljava/lang/Integer;)V
-#getLock(Ljava/lang/Integer;[BZ)Ljava/lang/Integer;
@0.96.0-hadoop1
+#reportCompactionRequestEnd(ZIJ)V
-#reportCompactionRequestEnd(Z)V
@0.96.2-hadoop1
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@0.98.0-hadoop1
+#getReadpoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
+#batchMutate([Lorg/apache/hadoop/hbase/client/Mutation;JJ)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#batchReplay([Lorg/apache/hadoop/hbase/regionserver/wal/HLogSplitter$MutationReplay;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;JJ)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJ)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJJ)V
+#append(Lorg/apache/hadoop/hbase/client/Append;JJ)Lorg/apache/hadoop/hbase/client/Result;
+#increment(Lorg/apache/hadoop/hbase/client/Increment;JJ)Lorg/apache/hadoop/hbase/client/Result;
+#closeRegionOperation(Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
+#getSequenceId()Ljava/util/concurrent/atomic/AtomicLong;
+#updatesLock()V
+#updatesUnlock()V
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)V
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;J)V
@0.98.2-hadoop1
+#flushcache()Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult;
-#flushcache()Z
@0.98.4-hadoop1
+#get(Lorg/apache/hadoop/hbase/client/Get;Z)Ljava/util/List;
@0.98.5-hadoop1
+#getMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegion;
@0.98.7-hadoop1
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
@0.98.9-hadoop1
+#getBlockedRequestsCount()J
+#getSplitPolicy()Lorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;
@0.98.10-hadoop1
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
+#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
+#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;JJ)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
+#getRegionStats()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
-#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
-#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;)V
-#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;JJ)V
@0.98.10.1-hadoop1
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
+#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;)V
+#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;JJ)V
-#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
-#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
-#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;JJ)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
@0.98.11-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Z
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;)Z
@0.98.13-hadoop1
+#abortRegionServer(Ljava/lang/String;)V
@0.98.14-hadoop1
+#setClosing(Z)V
@0.98.16-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Z
@0.98.17-hadoop1
+#rowIsInRange(Lorg/apache/hadoop/hbase/HRegionInfo;[BIS)Z
@0.98.19-hadoop1
+#getLoadStatistics()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
-#getRegionStats()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
@0.98.20-hadoop1
+#getLockedRows()Ljava/util/concurrent/ConcurrentHashMap;
@0.98.21-hadoop1
+#reportCompactionRequestFailure()V
@0.99.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;)Z
+#batchReplay([Lorg/apache/hadoop/hbase/regionserver/wal/HLogSplitter$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#setReadsEnabled(Z)V
+#syncWal()V
-#getBlockedRequestsCount()J
-#getSplitPolicy()Lorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;
-#setClosing(Z)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Z
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Z
-#batchReplay([Lorg/apache/hadoop/hbase/regionserver/wal/HLogSplitter$MutationReplay;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
-#rowIsInRange(Lorg/apache/hadoop/hbase/HRegionInfo;[BIS)Z
-#getLoadStatistics()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
-#needsCompaction()Z
-#abortRegionServer(Ljava/lang/String;)V
-#reportCompactionRequestFailure()V
-#updatesLock()V
-#updatesUnlock()V
-#getLockedRows()Ljava/util/concurrent/ConcurrentHashMap;
@0.99.1
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
@0.99.2
+#getBlockedRequestsCount()J
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#getWAL()Lorg/apache/hadoop/hbase/wal/WAL;
+#batchReplay([Lorg/apache/hadoop/hbase/wal/WALSplitter$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#registerChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#deregisterChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V[deprecated]
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
-#getLog()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
-#batchReplay([Lorg/apache/hadoop/hbase/regionserver/wal/HLogSplitter$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@1.0.0
+#getRegionStats()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
+#getSplitPolicy()Lorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;
@1.0.2
+#setClosing(Z)V
@1.0.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/security/User;)Z
@1.1.0
+#getReadRequestsCount()J
+#updateReadRequestsCount(J)V
+#getWriteRequestsCount()J
+#updateWriteRequestsCount(J)V
+#getMemstoreSize()J
+#getNumMutationsWithoutWAL()J
+#getDataInMemoryWithoutWAL()J
+#getCheckAndMutateChecksPassed()J
+#getCheckAndMutateChecksFailed()J
+#isReadOnly()Z
+#getMaxFlushedSeqId()J
+#getEarliestFlushTimeForAllStores()J
+#getOldestHfileTs(Z)J
+#triggerMajorCompaction()V
+#compact(Z)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Z
+#flush(Z)Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult;
+#flushcache(ZZ)Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult;
+#prepareDelete(Lorg/apache/hadoop/hbase/client/Delete;)V
+#prepareDeleteTimestamps(Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/Map;[B)V
+#updateCellTimestamps(Ljava/lang/Iterable;[B)V
+#checkFamilies(Ljava/util/Collection;)V
+#checkTimestamps(Ljava/util/Map;J)V
+#refreshStoreFiles()Z
+#getStores()Ljava/util/List;
+#getRowLock([BZ)Lorg/apache/hadoop/hbase/regionserver/Region$RowLock;
+#getRowLock([B)Lorg/apache/hadoop/hbase/regionserver/Region$RowLock;
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z
+#openHRegion(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/Region;
+#warmupHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)V
+#startRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
+#closeRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
+#getMaxStoreSeqId()Ljava/util/Map;
+#getOldestSeqIdOfStore([B)J
-#getMemstoreSize()Ljava/util/concurrent/atomic/AtomicLong;
-#setClosing(Z)V
-#getStartKey()[B
-#getEndKey()[B
-#getRegionId()J
-#getRegionName()[B
-#getRegionNameAsString()Ljava/lang/String;
-#getLastFlushTime()J
-#compactStores(Z)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;)Z
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/security/User;)Z
-#flushcache()Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult;
-#getStores()Ljava/util/Map;
-#getRowLock([BZ)Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLock;
-#getRowLock([B)Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLock;
-#bulkLoadHFiles(Ljava/util/List;Z)Z
-#bulkLoadHFiles(Ljava/util/List;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;)Z
-#closeRegionOperation(Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
-#getMaxStoreSeqIdForLogReplay()Ljava/util/Map;
-#syncWal()V
@1.1.1
+#setClosing(Z)V
@1.1.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Z
@1.1.5
+#getLockedRows()Ljava/util/concurrent/ConcurrentHashMap;
@1.2.0
+#getMVCC()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#rowIsInRange(Lorg/apache/hadoop/hbase/HRegionInfo;[BIS)Z
+#getSequenceId()J
-#getMVCC()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl;
-#getLockedRows()Ljava/util/concurrent/ConcurrentHashMap;
-#getSequenceId()Ljava/util/concurrent/atomic/AtomicLong;
@1.2.2
+#getLockedRows()Ljava/util/concurrent/ConcurrentHashMap;
@1.2.7
+#waitForFlushes()V
+#getRowLock([BZZ)Lorg/apache/hadoop/hbase/regionserver/Region$RowLock;
@1.3.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Z
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Z
+#get(Lorg/apache/hadoop/hbase/client/Get;ZJJ)Ljava/util/List;
+#getLoadStatistics()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
+#reportCompactionRequestFailure()V
-#waitForFlushes()V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Z
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Z
-#getRowLock([BZZ)Lorg/apache/hadoop/hbase/regionserver/Region$RowLock;
-#getRegionStats()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
@1.3.2
+#waitForFlushes()V
+#getRowLock([BZZ)Lorg/apache/hadoop/hbase/regionserver/Region$RowLock;
@1.3.3
+#getWALRegionDir()Lorg/apache/hadoop/fs/Path;
+#incrementCompactionsQueuedCount()V
+#decrementCompactionsQueuedCount()V
+#incrementFlushesQueuedCount()V
@1.3.6
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
*#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z[deprecated]
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
@1.4.0
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#getWALRegionDir()Lorg/apache/hadoop/fs/Path;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
@1.4.1
+#openReadOnlyFileSystemHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@1.4.8
+#getWALRegionDir()Lorg/apache/hadoop/fs/Path;
@1.4.11
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
*#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z[deprecated]
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
@1.7.2
+#setRegionServerServices(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
@2.0.0-alpha-1
+#blockUpdates()V
+#unblockUpdates()V
+#addAndGetMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)J
+#decrMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#getFilteredReadRequestsCount()J
+#getRegionServicesForStores()Lorg/apache/hadoop/hbase/regionserver/RegionServicesForStores;
+#getReadPoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J
+#setTimeoutForWriteLock(J)V
+#addRegionToSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;)V
+#getHStore([B)Lorg/apache/hadoop/hbase/regionserver/HStore;
+#getReadLockCount()I
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Ljava/util/Map;
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Z)Ljava/util/Map;
+#getReplicationScope()Ljava/util/NavigableMap;
+#createDaughterRegionFromSplits(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getLoadStatistics()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$RegionLoadStats;
+#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
+#getCompactionState()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
+#getReadPoint()J
+#getCellComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getMemstoreFlushSize()J
-#addAndGetGlobalMemstoreSize(J)J
-#getWALRegionDir()Lorg/apache/hadoop/fs/Path;
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getClosestRowBefore([B[B)Lorg/apache/hadoop/hbase/client/Result;
-#addRegionToSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;)V
-#getRowLock([BZZ)Lorg/apache/hadoop/hbase/regionserver/Region$RowLock;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Ljava/util/List;)Z
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Z[deprecated]
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#closeHRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openReadOnlyFileSystemHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#mergeAdjacent(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#merge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#getLoadStatistics()Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$RegionLoadStats;
-#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
-#main([Ljava/lang/String;)V
-#getCompactionState()Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
-#incrementCompactionsQueuedCount()V
-#decrementCompactionsQueuedCount()V
-#incrementFlushesQueuedCount()V
-#getSequenceId()J
-#setRegionServerServices(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#getTableDescriptor()Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#warmupHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#incrementCompactionsQueuedCount()V
+#decrementCompactionsQueuedCount()V
+#incrementFlushesQueuedCount()V
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V[deprecated]
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
-#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
-#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
-#getTableDesc()Lorg/apache/hadoop/hbase/HTableDescriptor;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#warmupHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
-#addRegionToMETA(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@2.0.0-alpha3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Z
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Z
+#flushcache(ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResultImpl;
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
+#getStore([B)Lorg/apache/hadoop/hbase/regionserver/HStore;
+#requestCompaction(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction([BLjava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Z
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Z
-#flushcache(ZZ)Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult;
-#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
-#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
-#getHStore([B)Lorg/apache/hadoop/hbase/regionserver/HStore;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V[deprecated]
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#addAndGetMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)J
+#decrMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getMemStoreSize()J
+#waitForFlushes(J)Z
+#flush(Z)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult;
+#flushcache(ZZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResultImpl;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/HRegion$RegionScannerImpl;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/HRegion$RegionScannerImpl;
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;)Ljava/util/Map;
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;Z)Ljava/util/Map;
+#createHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#createHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#createDaughterRegionFromSplits(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#rowIsInRange(Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Z
+#rowIsInRange(Lorg/apache/hadoop/hbase/client/RegionInfo;[BIS)Z
+#getCompactionState()Lorg/apache/hadoop/hbase/client/CompactionState;
+#getMemStoreFlushSize()J
+#requestCompaction(Ljava/lang/String;IZLorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#requestCompaction([BLjava/lang/String;IZLorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V[deprecated]
-#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
-#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
-#addAndGetMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)J
-#decrMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#getMemstoreSize()J
-#getReadpoint(Lorg/apache/hadoop/hbase/client/IsolationLevel;)J
-#getLargestHStoreSize()J
-#triggerMajorCompaction()V
-#flush(Z)Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult;
-#flushcache(ZZ)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResultImpl;
-#releaseRowLocks(Ljava/util/List;)V
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;)Ljava/util/Map;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/Region$BulkLoadListener;Z)Ljava/util/Map;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#createHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#warmupHRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
-#createDaughterRegionFromSplits(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#rowIsInRange(Lorg/apache/hadoop/hbase/HRegionInfo;[B)Z
-#rowIsInRange(Lorg/apache/hadoop/hbase/HRegionInfo;[BIS)Z
-#getCompactionState()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
-#getMemstoreFlushSize()J
-#requestCompaction(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
-#requestCompaction([BLjava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
@2.0.0-beta-1
+#batchMutate([Lorg/apache/hadoop/hbase/client/Mutation;ZJJ)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#updateReadRequestsCount(J)V
-#updateWriteRequestsCount(J)V
-#setRecovering(Z)V
-#isRecovering()Z
-#createDaughterRegionFromSplits(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#mutateRowsWithLocks(Ljava/util/Collection;Ljava/util/Collection;)V
@2.0.0-beta-2
+#incMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#getMemStoreDataSize()J
+#getMemStoreHeapSize()J
+#getMemStoreOffHeapSize()J
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
+#openReadOnlyFileSystemHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#addAndGetMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)J
-#getMemStoreSize()J
-#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;Z)Z
@2.0.0
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z
+#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
-#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Mutation;Z)Z
-#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
@2.0.1
-#incMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#decrMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#updateCellTimestamps(Ljava/lang/Iterable;[B)V
@2.0.2
+#dropMemStoreContents()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
@2.0.4
+#getWALRegionDir()Lorg/apache/hadoop/fs/Path;
@2.0.6
+#createRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
@2.1.0
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#getWALRegionDir()Lorg/apache/hadoop/fs/Path;
-#dropMemStoreContents()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
-#createRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
@2.1.1
+#getWALRegionDir()Lorg/apache/hadoop/fs/Path;
+#dropMemStoreContents()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
@2.1.6
+#createRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
@2.1.7
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;ZLjava/util/List;)Ljava/util/Map;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;Z)Ljava/util/Map;
@2.1.8
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;ZLjava/util/List;Z)Ljava/util/Map;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;ZLjava/util/List;)Ljava/util/Map;
@2.2.0
+#setRestoredRegion(Z)V
+#getBlockCache()Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
+#setBlockCache(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#getMobFileCache()Lorg/apache/hadoop/hbase/mob/MobFileCache;
+#setMobFileCache(Lorg/apache/hadoop/hbase/mob/MobFileCache;)V
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;Z)Ljava/util/Map;
+#newHRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;ZLjava/util/List;Z)Ljava/util/Map;
-#createRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
@2.2.1
+#batchReplay([Lorg/apache/hadoop/hbase/wal/WALSplitUtil$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#createRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
-#batchReplay([Lorg/apache/hadoop/hbase/wal/WALSplitter$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;[deprecated]
@2.2.2
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;ZLjava/util/List;)Ljava/util/Map;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;Z)Ljava/util/Map;
@2.2.3
+#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;ZLjava/util/List;Z)Ljava/util/Map;
-#bulkLoadHFiles(Ljava/util/Collection;ZLorg/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener;ZLjava/util/List;)Ljava/util/Map;
@2.2.5
+#setReadRequestsCount(J)V
+#setWriteRequestsCount(J)V
@2.3.0
+#checkAndMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z
+#checkAndRowMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z
+#createHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#openHRegionFromTableDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#openHRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@2.3.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.0
+#flushcache(Ljava/util/List;ZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResultImpl;
*#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z[deprecated]
*#checkAndMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/Mutation;)Z[deprecated]
*#checkAndRowMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z[deprecated]
*#checkAndRowMutate([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/io/TimeRange;Lorg/apache/hadoop/hbase/client/RowMutations;)Z[deprecated]
+#checkAndMutate(Lorg/apache/hadoop/hbase/client/CheckAndMutate;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
+#createHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;ZLorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)Lorg/apache/hadoop/hbase/client/Result;
+#checkSplit()Ljava/util/Optional;
+#checkSplit(Z)Ljava/util/Optional;
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#getSplitPolicy()Lorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;
-#batchMutate([Lorg/apache/hadoop/hbase/client/Mutation;JJ)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
-#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
-#checkSplit()[B
@2.4.3
+#checkAndMutate(Lorg/apache/hadoop/hbase/client/CheckAndMutate;JJ)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;JJ)Lorg/apache/hadoop/hbase/client/Result;
@2.4.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.16
+#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
@2.5.0
+#setTableDescriptor(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScannerImpl;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/RegionScannerImpl;
+#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#addReadRequestsCount(J)V
+#addWriteRequestsCount(J)V
-#flushcache(ZZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResultImpl;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/HRegion$RegionScannerImpl;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/HRegion$RegionScannerImpl;
-#prepareDelete(Lorg/apache/hadoop/hbase/client/Delete;)V
-#prepareDeleteTimestamps(Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/Map;[B)V
-#dropMemStoreContents()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
-#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#get(Lorg/apache/hadoop/hbase/client/Get;ZJJ)Ljava/util/List;
-#getReadPoint()J
-#setReadRequestsCount(J)V
-#setWriteRequestsCount(J)V
@2.5.3
+#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
@3.0.0-alpha-1
+#getCpRequestsCount()J
+#close(ZZ)Ljava/util/Map;
+#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#registerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;)Z
+#execService(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#checkFamilies(Ljava/util/Collection;)V
-#warmupHRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)V
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJ)V
-#processRowsWithLocks(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;JJJ)V
-#registerService(Lcom/google/protobuf/Service;)Z
-#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceCall;)Lcom/google/protobuf/Message;
@3.0.0-alpha-2
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@3.0.0-alpha-3
+#flushcache(ZZLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResultImpl;
+#getRegionReplicationSink()Ljava/util/Optional;
-#batchReplay([Lorg/apache/hadoop/hbase/wal/WALSplitUtil$MutationReplay;J)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;

+###org/apache/hadoop/hbase/regionserver/ReversedKeyValueHeap
@0.98.0-hadoop1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#seekToLastRow()Z
@0.99.0
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#requestSeek(Lorg/apache/hadoop/hbase/Cell;ZZ)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
+#next()Lorg/apache/hadoop/hbase/Cell;
-#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
-#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#next()Lorg/apache/hadoop/hbase/KeyValue;
@2.0.0-alpha-1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/CellComparator;)V
-#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V

+###org/apache/hadoop/hbase/regionserver/ScanInfo
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/HColumnDescriptor;JJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#<init>([BIIJZJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#getFamily()[B
+#getMinVersions()I
+#getMaxVersions()I
+#getTtl()J
+#getKeepDeletedCells()Z
+#getTimeToPurgeDeletes()J
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
@0.98.8-hadoop1
+#<init>([BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#getKeepDeletedCells()Lorg/apache/hadoop/hbase/KeepDeletedCells;
-#<init>([BIIJZJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#getKeepDeletedCells()Z
@0.99.0
+#<init>([BIIJZJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#getKeepDeletedCells()Z
-#<init>([BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#getKeepDeletedCells()Lorg/apache/hadoop/hbase/KeepDeletedCells;
@0.99.2
+#<init>([BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#getKeepDeletedCells()Lorg/apache/hadoop/hbase/KeepDeletedCells;
-#<init>([BIIJZJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#getKeepDeletedCells()Z
@1.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;[BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#<init>(Lorg/apache/hadoop/hbase/HColumnDescriptor;JJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>([BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#getFamily()[B
-#getMinVersions()I
-#getKeepDeletedCells()Lorg/apache/hadoop/hbase/KeepDeletedCells;
@1.4.0
+#getFamily()[B
+#getMinVersions()I
+#getKeepDeletedCells()Lorg/apache/hadoop/hbase/KeepDeletedCells;
@1.7.2
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJLorg/apache/hadoop/hbase/CellComparator;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;[BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JJLorg/apache/hadoop/hbase/CellComparator;)V
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;[BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#toString()Ljava/lang/String;
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;JJLorg/apache/hadoop/hbase/CellComparator;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;[BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JJLorg/apache/hadoop/hbase/CellComparator;Z)V
+#isNewVersionBehavior()Z
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJLorg/apache/hadoop/hbase/CellComparator;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;[BIIJLorg/apache/hadoop/hbase/KeepDeletedCells;JJLorg/apache/hadoop/hbase/CellComparator;)V
@2.0.0-alpha4
-#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.11
+#toString()Ljava/lang/String;
@3.0.0-alpha-1
-#toString()Ljava/lang/String;
@3.0.0-alpha-3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/ScanType
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/ScanType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/ScanType;

+###org/apache/hadoop/hbase/regionserver/Segment
@2.0.0-alpha-1
+#getScanner(JJ)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#getScanners(JJ)Ljava/util/List;
+#isEmpty()Z
+#getCellsCount()I
+#getFirstAfter(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#close()V
+#maybeCloneWithAllocator(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
+#getMinTimestamp()J
+#isTagsPresent()Z
+#incScannerCount()V
+#decScannerCount()V
+#keySize()J
+#heapSize()J
+#getMinSequenceId()J
+#getTimeRangeTracker()Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#last()Lorg/apache/hadoop/hbase/Cell;
+#iterator()Ljava/util/Iterator;
+#headSet(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#toString()Ljava/lang/String;
@2.0.0-alpha3
+#shouldSeek(Lorg/apache/hadoop/hbase/io/TimeRange;J)Z
-#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
@2.0.0-alpha4
-#getMinTimestamp()J
@2.0.0-beta-1
+#maybeCloneWithAllocator(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/Cell;
-#maybeCloneWithAllocator(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-2
+#getMemStoreSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#offHeapSize()J
-#getFirstAfter(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.1
+#getDataSize()J
+#getHeapSize()J
+#getOffHeapSize()J
+#incMemStoreSize(JJJ)J
-#keySize()J
-#heapSize()J
-#offHeapSize()J
@2.0.5
+#incMemStoreSize(JJJI)J
-#incMemStoreSize(JJJ)J
@2.1.0
+#getScanners(J)Ljava/util/List;
+#incMemStoreSize(JJJ)J
-#getScanner(JJ)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#getScanners(JJ)Ljava/util/List;
-#incMemStoreSize(JJJI)J
@2.1.3
+#incMemStoreSize(JJJI)J
-#incMemStoreSize(JJJ)J
@2.2.0
+#sharedLock()Z
+#sharedUnlock()V
+#waitForUpdates()V
+#compareAndSetDataSize(JJ)Z

+###org/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start()V
+#stop(Z)V
+#buildSubprocedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/procedure/Subprocedure;
@0.98.1-hadoop1
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#getProcedureSignature()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
@2.0.0-alpha-1
+#buildSubprocedure(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/procedure/Subprocedure;
-#buildSubprocedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/procedure/Subprocedure;

+###org/apache/hadoop/hbase/regionserver/StoreFileInfo
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;)V
+#isReference()Z
+#isTopReference()Z
+#isLink()Z
+#getHDFSBlockDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#getPath()Lorg/apache/hadoop/fs/Path;
+#getFileStatus()Lorg/apache/hadoop/fs/FileStatus;
+#getModificationTime()J
+#toString()Ljava/lang/String;
+#isHFile(Lorg/apache/hadoop/fs/Path;)Z
+#isHFile(Ljava/lang/String;)Z
+#isReference(Lorg/apache/hadoop/fs/Path;)Z
+#isReference(Ljava/lang/String;)Z
+#getReferredToFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#validateStoreFileName(Ljava/lang/String;)Z
+#isValid(Lorg/apache/hadoop/fs/FileStatus;)Z
@0.96.1-hadoop1
+#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
@0.98.0-hadoop1
+#setRegionCoprocessorHost(Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
@0.98.6-hadoop1
+#getReference()Lorg/apache/hadoop/hbase/io/Reference;
+#getReferencedFileStatus(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/FileStatus;
@0.98.15-hadoop1
+#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
@0.98.18-hadoop1
+#getCreatedTimestamp()J
@0.99.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/io/HFileLink;)V
+#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#equals(Ljava/lang/Object;)Z
+#compareTo(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)I
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
-#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#getCreatedTimestamp()J
@1.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/io/Reference;)V
-#compareTo(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)I
-#compareTo(Ljava/lang/Object;)I
@1.2.0
+#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
@1.3.0
+#getCreatedTimestamp()J
@1.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/HFileLink;)V
@2.0.0-alpha-1
+#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZJZLjava/util/concurrent/atomic/AtomicInteger;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
+#isDelFile(Lorg/apache/hadoop/fs/Path;)Z
+#isDelFile(Ljava/lang/String;)Z
+#getActiveFileName()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/HFileLink;)V
-#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
@2.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/HFileLink;)V
@2.1.8
+#getSize()J
@2.2.0
-#getSize()J
@2.2.2
+#getSize()J
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
+#initHFileInfo(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#open(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZJZLjava/util/concurrent/atomic/AtomicInteger;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
@2.4.10
+#getReferredToRegionAndFile(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Pair;
@2.5.0
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isMobFile(Lorg/apache/hadoop/fs/Path;)Z
+#isMobRefFile(Lorg/apache/hadoop/fs/Path;)Z
-#isDelFile(Lorg/apache/hadoop/fs/Path;)Z
-#isDelFile(Ljava/lang/String;)Z
-#getReferredToRegionAndFile(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Pair;
@3.0.0-alpha-1
-#getConf()Lorg/apache/hadoop/conf/Configuration;
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-2
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-3
+#getReferredToRegionAndFile(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Pair;

+###org/apache/hadoop/hbase/regionserver/StoreScanner
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJ)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;JJ[B[B)V
+#peek()Lorg/apache/hadoop/hbase/KeyValue;
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#close()V
+#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#next(Ljava/util/List;I)Z
+#next(Ljava/util/List;ILjava/lang/String;)Z
+#next(Ljava/util/List;)Z
+#next(Ljava/util/List;Ljava/lang/String;)Z
+#updateReaders()V
+#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#getSequenceID()J
@0.95.1-hadoop1
+#getEstimatedNumberOfKvsScanned()J
-#next(Ljava/util/List;ILjava/lang/String;)Z
-#next(Ljava/util/List;Ljava/lang/String;)Z
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)V
@0.98.12-hadoop1
+#getNextIndexedKey()[B
@0.99.0
+#peek()Lorg/apache/hadoop/hbase/Cell;
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#next()Lorg/apache/hadoop/hbase/Cell;
-#peek()Lorg/apache/hadoop/hbase/KeyValue;
-#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#getNextIndexedKey()[B
@1.0.1
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
@1.1.0
+#next(Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScannerContext;)Z
-#next(Ljava/util/List;I)Z
@1.3.0
+#updateReaders(Ljava/util/List;)V
-#updateReaders()V
@1.3.2
+#getReadPoint()J
+#updateReaders(Ljava/util/List;Ljava/util/List;)V
-#updateReaders(Ljava/util/List;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/ScanType;Ljava/util/NavigableSet;Ljava/util/List;JJ)V
+#getScannerOrder()J
-#getSequenceID()J
@2.0.0-alpha-1
+#shipped()V
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/OptionalInt;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJ)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/OptionalInt;Ljava/util/List;JJ[B[B)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/ScanType;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/List;JJ[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/ScanType;Ljava/util/NavigableSet;Ljava/util/List;JJ)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJ)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/List;JJ[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/OptionalInt;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/OptionalInt;Ljava/util/List;JJ[B[B)V
-#next(Ljava/util/List;)Z
@2.1.0
-#getScannerOrder()J

+###org/apache/hadoop/hbase/regionserver/throttle/PressureAwareFlushThroughputController
@1.3.0
+#<init>()V
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/wal/DamagedWALException
@1.1.3
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/regionserver/wal/FSHLog
@0.99.2
+#registerWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
+#unregisterWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)Z
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost;
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;)V
+#rollWriter()[[B
+#rollWriter(Z)[[B
+#getWALArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getCurrentFileName()Lorg/apache/hadoop/fs/Path;
+#toString()Ljava/lang/String;
+#close()V
+#shutdown()V
+#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/concurrent/atomic/AtomicLong;ZLjava/util/List;)J
+#sync()V
+#sync(J)V
+#requestLogRoll()V
+#getNumRolledLogFiles()I
+#getNumLogFiles()I
+#getLogFileSize()J
+#startCacheFlush([B)Z
+#completeCacheFlush([B)V
+#abortCacheFlush([B)V
+#getEarliestMemstoreSeqNum([B)J
+#main([Ljava/lang/String;)V
@1.1.0
+#startCacheFlush([BLjava/util/Set;)Z
+#getEarliestMemstoreSeqNum([B[B)J
-#startCacheFlush([B)Z
@1.1.1
+#startCacheFlush([BLjava/util/Set;)Ljava/lang/Long;
-#startCacheFlush([BLjava/util/Set;)Z
@1.2.0
+#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/concurrent/atomic/AtomicLong;ZLjava/util/List;)J
@1.2.7
+#checkLogRoll()V
+#getLastTimeCheckLowReplication()J
@1.3.0
-#checkLogRoll()V
-#getLastTimeCheckLowReplication()J
@1.3.2
+#checkLogRoll()V
+#getLastTimeCheckLowReplication()J
@1.4.0
+#getFilenum()J
@1.5.0
+#sync(Z)V
+#sync(JZ)V
@1.7.1
+#publishSyncOnRingBuffer(Lorg/apache/htrace/Span;Z)Lorg/apache/hadoop/hbase/regionserver/wal/SyncFuture;
@2.0.0-alpha-1
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
-#registerWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
-#unregisterWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)Z
-#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost;
-#rollWriter()[[B
-#rollWriter(Z)[[B
-#getWALArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getCurrentFileName()Lorg/apache/hadoop/fs/Path;
-#getFilenum()J
-#toString()Ljava/lang/String;
-#close()V
-#shutdown()V
-#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
-#publishSyncOnRingBuffer(Lorg/apache/htrace/Span;Z)Lorg/apache/hadoop/hbase/regionserver/wal/SyncFuture;
-#sync(Z)V
-#sync(JZ)V
-#requestLogRoll()V
-#getNumRolledLogFiles()I
-#getNumLogFiles()I
-#getLogFileSize()J
-#startCacheFlush([BLjava/util/Set;)Ljava/lang/Long;
-#completeCacheFlush([B)V
-#abortCacheFlush([B)V
-#getEarliestMemstoreSeqNum([B)J
-#getEarliestMemstoreSeqNum([B[B)J
@2.0.0-alpha3
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
@2.0.0-alpha4
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.0.0-beta-1
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#checkLogRoll()V
-#main([Ljava/lang/String;)V
-#getLastTimeCheckLowReplication()J
@2.1.0
+#sync(Z)V
+#sync(JZ)V
@2.1.8
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.2.0
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.2.3
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.4.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;)V
@2.5.0
-#sync()V
-#sync(Z)V
-#sync(J)V
-#sync(JZ)V

+###org/apache/hadoop/hbase/regionserver/wal/WALActionsListener
@0.95.0
+#preLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#preLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#logRollRequested()V
+#logCloseRequested()V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@0.98.9-hadoop1
+#logRollRequested(Z)V
-#logRollRequested()V
@0.99.0
+#logRollRequested()V
-#logRollRequested(Z)V
@0.99.2
+#logRollRequested(Z)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postAppend(JJ)V
+#postSync(JI)V
-#logRollRequested()V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@1.3.0
+#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postAppend(JJ)V
@1.5.0
+#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#logRollRequested(Z)V
@2.0.0-alpha-1
+#logRollRequested(Z)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha3
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-beta-1
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
@2.3.0
+#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#logRollRequested(Z)V
@2.5.0
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
@3.0.0-alpha-1
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
@3.0.0-alpha-3
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V

+###org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$EnsureKvEncoder
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec;Ljava/io/OutputStream;)V
+#write(Lorg/apache/hadoop/hbase/Cell;)V
@1.0.0
+#<init>(Ljava/io/OutputStream;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec;Ljava/io/OutputStream;)V

+###org/apache/hadoop/hbase/replication/ClusterMarkingEntryFilter
@1.4.0
+#<init>(Ljava/util/UUID;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)V
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;

+###org/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSource
@2.0.0-alpha-1
+#<init>()V
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#locateRecoveredPaths(Ljava/util/concurrent/PriorityBlockingQueue;)V
+#tryFinish()V
+#getPeerId()Ljava/lang/String;
@2.0.0-alpha3
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.0.0-alpha4
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getServerWALsBelongTo()Lorg/apache/hadoop/hbase/ServerName;
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.1.0
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#isRecovered()Z
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#tryFinish()V
@2.4.2
+#locateRecoveredPaths(Ljava/lang/String;)V
-#locateRecoveredPaths(Ljava/util/concurrent/PriorityBlockingQueue;)V

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;)V
+#getRegionServer()Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;)V
+#getRegionServer()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;)V
-#getRegionServer()Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface
@0.95.0
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/Stoppable;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/String;)V
+#enqueueLog(Lorg/apache/hadoop/fs/Path;)V
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#startup()V
+#terminate(Ljava/lang/String;)V
+#terminate(Ljava/lang/String;Ljava/lang/Exception;)V
+#getPeerClusterZnode()Ljava/lang/String;
+#getPeerClusterId()Ljava/lang/String;
+#getStats()Ljava/lang/String;
@0.95.2-hadoop1
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;)V
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/Stoppable;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/String;)V
@0.98.9-hadoop1
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;)V
@1.3.0
+#addHFileRefs(Lorg/apache/hadoop/hbase/TableName;[BLjava/util/List;)V
@1.3.2
+#getSourceMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
@1.5.0
+#getWalGroupStatus()Ljava/util/Map;
@2.0.0-alpha-1
+#getPeerId()Ljava/lang/String;
+#isPeerEnabled()Z
+#isSourceActive()Z
+#getReplicationEndpoint()Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
+#getSourceManager()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
+#tryThrottle(I)V
+#postShipEdits(Ljava/util/List;I)V
-#getPeerClusterId()Ljava/lang/String;
-#getWalGroupStatus()Ljava/util/Map;
@2.0.0-alpha3
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getWALFileLengthProvider()Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.0.0-alpha4
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getServerWALsBelongTo()Lorg/apache/hadoop/hbase/ServerName;
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.1.0
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getQueueId()Ljava/lang/String;
+#getWalGroupStatus()Ljava/util/Map;
+#isRecovered()Z
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#getPeerClusterZnode()Ljava/lang/String;
@2.1.8
+#terminate(Ljava/lang/String;Ljava/lang/Exception;Z)V
@2.2.0
-#terminate(Ljava/lang/String;Ljava/lang/Exception;Z)V
@2.2.3
+#terminate(Ljava/lang/String;Ljava/lang/Exception;Z)V
@2.4.0
+#startup()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
+#getReplicationQueueStorage()Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;
+#logPositionAndCleanOldLogs(Lorg/apache/hadoop/hbase/replication/regionserver/WALEntryBatch;)V
-#startup()V
@3.0.0-alpha-1
+#getPeer()Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
+#isSyncReplication()Z

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSyncUp
@0.96.2-hadoop1
+#<init>()V
+#setConfigure(Lorg/apache/hadoop/conf/Configuration;)V
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@2.0.0-beta-2
-#setConfigure(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext
@0.98.9-hadoop1
+#<init>()V
+#setEntries(Ljava/util/List;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;
+#setSize(I)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;
+#getEntries()Ljava/util/List;
+#getSize()I
@1.2.0
+#setWalGroupId(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;
+#getWalGroupId()Ljava/lang/String;
@2.2.3
+#setTimeout(I)V
+#getTimeout()I

+###org/apache/hadoop/hbase/replication/WALEntryFilter
@0.98.9-hadoop1
+#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@0.99.2
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
-#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;

+###org/apache/hadoop/hbase/security/access/AuthResult$Params
@1.1.0
+#<init>()V
+#setNamespace(Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/access/AuthResult$Params;
+#setTableName(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/security/access/AuthResult$Params;
+#setFamilies(Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult$Params;
+#setFamily([B)Lorg/apache/hadoop/hbase/security/access/AuthResult$Params;
+#setQualifier([B)Lorg/apache/hadoop/hbase/security/access/AuthResult$Params;
+#toString()Ljava/lang/String;
@2.2.0
+#addExtraParam(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/access/AuthResult$Params;

+###org/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;JJ)V
+#start()V
+#stop()V
+#isMaster()Z
+#getName()Ljava/lang/String;
+#retrievePassword(Lorg/apache/hadoop/hbase/security/token/AuthenticationTokenIdentifier;)[B
+#createIdentifier()Lorg/apache/hadoop/hbase/security/token/AuthenticationTokenIdentifier;
+#generateToken(Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
+#addKey(Lorg/apache/hadoop/hbase/security/token/AuthenticationKey;)V
+#createSecretKey([B)Ljavax/crypto/SecretKey;
+#createIdentifier()Lorg/apache/hadoop/security/token/TokenIdentifier;
+#retrievePassword(Lorg/apache/hadoop/security/token/TokenIdentifier;)[B
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Ljava/lang/String;JJ)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;JJ)V

+###org/apache/hadoop/hbase/security/visibility/expression/ExpressionNode
@0.98.0-hadoop1
+#isSingleNode()Z
+#deepClone()Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;

+###org/apache/hadoop/hbase/security/visibility/expression/Operator
@0.98.0-hadoop1
+#values()[Lorg/apache/hadoop/hbase/security/visibility/expression/Operator;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/visibility/expression/Operator;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/security/visibility/ScanLabelGenerator
@0.98.0-hadoop1
+#getLabels(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Ljava/util/List;

+###org/apache/hadoop/hbase/security/visibility/VisibilityController
@0.98.0-hadoop1
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#postStartMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
+#postBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
+#preShutdown(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preStopMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postLogReplay(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#postBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#postScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preScannerNext(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;IZ)Z
+#preScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#postScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#preGetOp(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#getService()Lcom/google/protobuf/Service;
+#addLabels(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$VisibilityLabelsRequest;Lcom/google/protobuf/RpcCallback;)V
+#setAuths(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$SetAuthsRequest;Lcom/google/protobuf/RpcCallback;)V
+#getAuths(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$GetAuthsRequest;Lcom/google/protobuf/RpcCallback;)V
+#clearAuths(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$SetAuthsRequest;Lcom/google/protobuf/RpcCallback;)V
@0.98.4-hadoop1
+#prePrepareTimeStampForDeleteVersion(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;[BLorg/apache/hadoop/hbase/client/Get;)V
+#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;
+#preAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
@0.98.6-hadoop1
-#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
-#postBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
-#preShutdown(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preStopMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
-#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
@0.98.8-hadoop1
+#preTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
@0.98.9-hadoop1
+#listLabels(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$ListLabelsRequest;Lcom/google/protobuf/RpcCallback;)V
@0.98.14-hadoop1
+#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
+#isCellAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
@0.99.0
-#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
-#isCellAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
-#listLabels(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$ListLabelsRequest;Lcom/google/protobuf/RpcCallback;)V
-#preTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
@1.0.0
+#listLabels(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$ListLabelsRequest;Lcom/google/protobuf/RpcCallback;)V
@1.2.0
+#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
+#isCellAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
@1.3.0
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
@2.0.0-alpha-1
+#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
+#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
-#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
-#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
-#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;
@2.0.0-alpha2
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
@2.0.0-alpha4
+#getRegionObserver()Ljava/util/Optional;
+#getMasterObserver()Ljava/util/Optional;
+#getServices()Ljava/lang/Iterable;
+#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;)V
-#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
-#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
-#getService()Lcom/google/protobuf/Service;
@2.0.0-beta-1
-#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
-#postLogReplay(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@2.2.0
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#postIncrementBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
+#postAppendBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.2.7
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.3.0
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.3.4
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
@2.4.0
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z
-#preAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
-#preIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
@2.4.1
*#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z[deprecated]
@2.5.0
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;Z)Z[deprecated]
@3.0.0-alpha-1
+#addLabels(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/VisibilityLabelsProtos$VisibilityLabelsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
+#setAuths(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/VisibilityLabelsProtos$SetAuthsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
+#getAuths(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/VisibilityLabelsProtos$GetAuthsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
+#clearAuths(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/VisibilityLabelsProtos$SetAuthsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
+#listLabels(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/VisibilityLabelsProtos$ListLabelsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
-#addLabels(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$VisibilityLabelsRequest;Lcom/google/protobuf/RpcCallback;)V
-#setAuths(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$SetAuthsRequest;Lcom/google/protobuf/RpcCallback;)V
-#getAuths(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$GetAuthsRequest;Lcom/google/protobuf/RpcCallback;)V
-#clearAuths(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$SetAuthsRequest;Lcom/google/protobuf/RpcCallback;)V
-#listLabels(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$ListLabelsRequest;Lcom/google/protobuf/RpcCallback;)V

+###org/apache/hadoop/hbase/snapshot/SnapshotDescriptionUtils
@0.95.0
+#getMaxMasterTimeout(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription$Type;J)J
+#getSnapshotRootDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getCompletedSnapshotDir(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getCompletedSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getSnapshotsDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#validate(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#writeSnapshotInfo(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
+#readSnapshotInfo(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#completeSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@0.98.6-hadoop1
+#getDefaultSnapshotLayoutFormat(Lorg/apache/hadoop/conf/Configuration;)I
@0.98.22-hadoop1
+#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@0.99.0
-#getDefaultSnapshotLayoutFormat(Lorg/apache/hadoop/conf/Configuration;)I
-#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@1.1.0
+#isSnapshotOwner(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/security/User;)Z
@1.1.6
+#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@1.2.0
-#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@1.2.3
+#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@1.4.0
+#isSecurityAvailable(Lorg/apache/hadoop/conf/Configuration;)Z
@1.4.9
+#getWorkingSnapshotDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#isSubDirectoryOf(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#isWithinDefaultWorkingDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Z
+#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)V
-#getWorkingSnapshotDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getWorkingSnapshotDir(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getWorkingSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
-#completeSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@2.0.0-alpha-1
+#getMaxMasterTimeout(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription$Type;J)J
+#getCompletedSnapshotDir(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#validate(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;
+#writeSnapshotInfo(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
+#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
+#readSnapshotInfo(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;
+#completeSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
+#isSnapshotOwner(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/security/User;)Z
-#getMaxMasterTimeout(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription$Type;J)J
-#getCompletedSnapshotDir(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getWorkingSnapshotDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#getWorkingSnapshotDir(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#getWorkingSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#isSubDirectoryOf(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
-#isWithinDefaultWorkingDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Z
-#validate(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
-#writeSnapshotInfo(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
-#readSnapshotInfo(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
-#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)V
-#isSnapshotOwner(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/security/User;)Z
@2.0.0-alpha4
+#isSnapshotOwner(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/security/User;)Z
-#isSnapshotOwner(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/security/User;)Z
@2.0.3
-#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@2.1.0
+#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@2.1.2
-#createInProgressTag(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@2.2.0
+#getWorkingSnapshotDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getWorkingSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#isSubDirectoryOf(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#isWithinDefaultWorkingDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Z
-#getWorkingSnapshotDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getWorkingSnapshotDir(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getWorkingSnapshotDir(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
@2.3.0
+#completeSnapshot(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)V
-#completeSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)V
@3.0.0-alpha-3
+#getCorruptedFlagFileForSnapshot(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/hbase/snapshot/SnapshotManifestV2
@0.98.6-hadoop1
+#<init>()V
@1.3.0
-#<init>()V

+###org/apache/hadoop/hbase/SplitLogTask$Resigned
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V

+###org/apache/hadoop/hbase/tmpl/common/TaskMonitorTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V
@1.1.4
+#encodeFilter()Ljava/lang/String;
@1.1.6
-#encodeFilter()Ljava/lang/String;
@1.2.0
+#encodeFilter()Ljava/lang/String;
@1.2.3
-#encodeFilter()Ljava/lang/String;

+###org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/master/RegionServerListTmpl$ImplData
@0.95.0
+#<init>()V
+#setMaster(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getMaster()Lorg/apache/hadoop/hbase/master/HMaster;
+#setServers(Ljava/util/List;)V
+#getServers()Ljava/util/List;
+#getServers__IsNotDefault()Z

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl$ImplData
@0.98.4-hadoop1
+#<init>()V
+#setCacheConfig(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
+#getCacheConfig()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
+#setConfig(Lorg/apache/hadoop/conf/Configuration;)V
+#getConfig()Lorg/apache/hadoop/conf/Configuration;
@2.2.0
+#setBc(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#getBc()Lorg/apache/hadoop/hbase/io/hfile/BlockCache;

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheViewTmpl$Intf
@0.98.4-hadoop1
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/util/BloomFilter
@0.95.0
+#contains([BIILjava/nio/ByteBuffer;)Z
+#supportsAutoLoading()Z
@2.0.0-alpha-1
+#contains(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/hbase/regionserver/BloomType;)Z
+#contains([BIILorg/apache/hadoop/hbase/nio/ByteBuff;)Z
-#contains([BIILjava/nio/ByteBuffer;)Z

+###org/apache/hadoop/hbase/util/BloomFilterWriter
@0.95.0
+#allocBloom()V
+#compactBloom()V
+#getMetaWriter()Lorg/apache/hadoop/io/Writable;
+#getDataWriter()Lorg/apache/hadoop/io/Writable;
+#add([BII)V
@2.0.0-alpha-1
+#getPrevCell()Lorg/apache/hadoop/hbase/Cell;
-#allocBloom()V
-#add([BII)V

+###org/apache/hadoop/hbase/util/CompressionTest
@0.95.0
+#<init>()V
+#testCompression(Ljava/lang/String;)Z
+#testCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
+#usage()V
+#doSmokeTest(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/util/FSUtils$HFileFilter
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.98.21-hadoop1
-#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.99.0
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@1.4.0
-#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/util/FSVisitor$StoreFileVisitor
@0.95.0
+#storeFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;
@2.0.6
-###org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE

+###org/apache/hadoop/hbase/util/HBaseFsck$RegionRepairException
@0.95.0
+#<init>(Ljava/lang/String;Ljava/io/IOException;)V
@2.0.6
-###org/apache/hadoop/hbase/util/HBaseFsck$RegionRepairException

+###org/apache/hadoop/hbase/util/hbck/OfflineMetaRepair
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
@2.0.6
-#<init>()V
@2.1.0
+#<init>()V
@2.1.6
-#<init>()V
@2.2.0
+#<init>()V
@2.2.1
-#<init>()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/hbck/OfflineMetaRepair

+###org/apache/hadoop/hbase/util/IdLock$Entry
@0.95.0
+#toString()Ljava/lang/String;
@2.0.2
-###org/apache/hadoop/hbase/util/IdLock$Entry

+###org/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/IdReadWriteLock$ReferenceType

+###org/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;I)V
+#getMaster()Lorg/apache/hadoop/hbase/master/HMaster;

+###org/apache/hadoop/hbase/util/RegionSplitter$HexStringSplit
@0.95.0
+#<init>()V
+#split([B[B)[B
+#split(I)[[B
+#firstRow()[B
+#lastRow()[B
+#setFirstRow(Ljava/lang/String;)V
+#setLastRow(Ljava/lang/String;)V
+#strToRow(Ljava/lang/String;)[B
+#rowToStr([B)Ljava/lang/String;
+#separator()Ljava/lang/String;
+#split2(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#convertToBytes([Ljava/math/BigInteger;)[[B
+#convertToByte(Ljava/math/BigInteger;I)[B
+#convertToByte(Ljava/math/BigInteger;)[B
+#convertToBigInteger([B)Ljava/math/BigInteger;
+#toString()Ljava/lang/String;
@0.95.2-hadoop1
+#setFirstRow([B)V
+#setLastRow([B)V
@1.3.2
+#split([B[BIZ)[[B
@1.4.0
-#split([B[B)[B
-#split(I)[[B
-#split([B[BIZ)[[B
-#firstRow()[B
-#lastRow()[B
-#setFirstRow(Ljava/lang/String;)V
-#setLastRow(Ljava/lang/String;)V
-#strToRow(Ljava/lang/String;)[B
-#rowToStr([B)Ljava/lang/String;
-#separator()Ljava/lang/String;
-#setFirstRow([B)V
-#setLastRow([B)V
-#split2(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
-#convertToBytes([Ljava/math/BigInteger;)[[B
-#convertToByte(Ljava/math/BigInteger;I)[B
-#convertToByte(Ljava/math/BigInteger;)[B
-#convertToBigInteger([B)Ljava/math/BigInteger;
-#toString()Ljava/lang/String;
@2.0.0-alpha-1
+#split([B[B)[B
+#split(I)[[B
+#firstRow()[B
+#lastRow()[B
+#setFirstRow(Ljava/lang/String;)V
+#setLastRow(Ljava/lang/String;)V
+#strToRow(Ljava/lang/String;)[B
+#rowToStr([B)Ljava/lang/String;
+#separator()Ljava/lang/String;
+#setFirstRow([B)V
+#setLastRow([B)V
+#split2(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#convertToBytes([Ljava/math/BigInteger;)[[B
+#convertToByte(Ljava/math/BigInteger;I)[B
+#convertToByte(Ljava/math/BigInteger;)[B
+#convertToBigInteger([B)Ljava/math/BigInteger;
+#toString()Ljava/lang/String;
@2.0.0-alpha4
-#split([B[B)[B
-#split(I)[[B
-#firstRow()[B
-#lastRow()[B
-#setFirstRow(Ljava/lang/String;)V
-#setLastRow(Ljava/lang/String;)V
-#strToRow(Ljava/lang/String;)[B
-#rowToStr([B)Ljava/lang/String;
-#separator()Ljava/lang/String;
-#setFirstRow([B)V
-#setLastRow([B)V
-#split2(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
-#convertToBytes([Ljava/math/BigInteger;)[[B
-#convertToByte(Ljava/math/BigInteger;I)[B
-#convertToByte(Ljava/math/BigInteger;)[B
-#convertToBigInteger([B)Ljava/math/BigInteger;
-#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/RowColBloomContext
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;Lorg/apache/hadoop/hbase/CellComparator;)V
+#addLastBloomKey(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V

+###org/apache/hadoop/hbase/wal/AsyncFSWALProvider
@2.0.0-alpha-1
+#<init>()V
+#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLio/netty/channel/EventLoop;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
@2.0.0-alpha2
+#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
-#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLio/netty/channel/EventLoop;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
@2.0.0-beta-1
+#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
-#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZLorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
@2.0.1
+#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
@2.0.2
+#load()Z
@2.5.0
+#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
-#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
@3.0.0-alpha-1
+#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
-#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
@3.0.0-alpha-3
+#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;
-#createAsyncWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter;

+###org/apache/hadoop/hbase/wal/WAL$Entry
@0.99.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#getEdit()Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getKey()Lorg/apache/hadoop/hbase/wal/WALKey;
+#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
+#hasSerialReplicationScope()Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#getEdit()Lorg/apache/hadoop/hbase/wal/WALEdit;
-#<init>(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#getEdit()Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#getKey()Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
-#<init>(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#getKey()Lorg/apache/hadoop/hbase/wal/WALKey;
@2.0.0-beta-2
-#hasSerialReplicationScope()Z
@2.1.0
*#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V[deprecated]
@3.0.0-alpha-1
-#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V[deprecated]

+###org/apache/hadoop/hbase/wal/WALProvider$AsyncWriter
@2.0.0-alpha-1
+#sync()Ljava/util/concurrent/CompletableFuture;
+#append(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
+#getLength()J
@2.0.0-alpha3
-#getLength()J
@2.1.9
+#sync(Z)Ljava/util/concurrent/CompletableFuture;
-#sync()Ljava/util/concurrent/CompletableFuture;
@2.2.0
+#sync()Ljava/util/concurrent/CompletableFuture;
-#sync(Z)Ljava/util/concurrent/CompletableFuture;
@2.2.3
+#sync(Z)Ljava/util/concurrent/CompletableFuture;
-#sync()Ljava/util/concurrent/CompletableFuture;

+###org/apache/hadoop/hbase/ZKNamespaceManager
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#start()V
+#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor;
+#update(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#remove(Ljava/lang/String;)V
+#list()Ljava/util/NavigableSet;
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
@2.0.0-beta-2
+#stop()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/ZKNamespaceManager

+###org/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
+#isNormalizerOn()Z
+#setNormalizerOn(Z)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker

+###org/apache/hadoop/hbase/backup/impl/TableBackupClient
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupRequest;)V
+#init(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupRequest;)V
+#cleanupAndRestoreBackupSystem(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/backup/BackupInfo;Lorg/apache/hadoop/conf/Configuration;)V
+#execute()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/TableBackupClient

+###org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager$BackupSubprocedureBuilder
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager;)V
+#buildSubprocedure(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/procedure/Subprocedure;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager$BackupSubprocedureBuilder

+###org/apache/hadoop/hbase/backup/RestoreJob
@2.0.0-alpha-1
+#run([Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/TableName;Z)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/RestoreJob

+###org/apache/hadoop/hbase/client/coprocessor/RowProcessorClient
@0.95.0
+#<init>()V
+#getRowProcessorPB(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)Lorg/apache/hadoop/hbase/protobuf/generated/RowProcessorProtos$RowProcessorRequest;
@0.96.0-hadoop1
+#getRowProcessorPB(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)Lorg/apache/hadoop/hbase/protobuf/generated/RowProcessorProtos$ProcessRequest;
-#getRowProcessorPB(Lorg/apache/hadoop/hbase/regionserver/RowProcessor;)Lorg/apache/hadoop/hbase/protobuf/generated/RowProcessorProtos$RowProcessorRequest;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/client/coprocessor/RowProcessorClient

+###org/apache/hadoop/hbase/client/locking/EntityLock$LockHeartbeatWorker
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/locking/EntityLock;Ljava/lang/String;)V
+#run()V

+###org/apache/hadoop/hbase/client/VersionInfoUtil
@1.1.7
+#currentClientHasMinimumVersion(II)Z
+#hasMinimumVersion(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$VersionInfo;II)Z
@1.2.0
+#hasMinimumVersion(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$VersionInfo;II)Z
-#hasMinimumVersion(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$VersionInfo;II)Z
@2.0.0-alpha-1
+#hasMinimumVersion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$VersionInfo;II)Z
+#getCurrentClientVersionNumber()I
+#versionNumberToString(I)Ljava/lang/String;
-#hasMinimumVersion(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$VersionInfo;II)Z
@2.0.2
+#getVersionNumber(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$VersionInfo;)I
@2.1.0
+#getCurrentClientVersionInfo()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$VersionInfo;
-#getCurrentClientVersionNumber()I
@3.0.0-alpha-1
+#callWithVersion(Lorg/apache/hadoop/hbase/client/VersionInfoUtil$ServiceCallFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/constraint/Constraint
@0.95.0
+#check(Lorg/apache/hadoop/hbase/client/Put;)V

+###org/apache/hadoop/hbase/coordination/SplitLogManagerCoordination
@0.99.0
+#setDetails(Lorg/apache/hadoop/hbase/coordination/SplitLogManagerCoordination$SplitLogManagerDetails;)V
+#getDetails()Lorg/apache/hadoop/hbase/coordination/SplitLogManagerCoordination$SplitLogManagerDetails;
+#prepareTask(Ljava/lang/String;)Ljava/lang/String;
+#markRegionsRecovering(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#checkTasks()V
+#removeRecoveringRegions(Ljava/util/Set;Ljava/lang/Boolean;)V
+#remainingTasksInCoordination()I
+#checkTaskStillAvailable(Ljava/lang/String;)V
+#setRecoveryMode(Z)V
+#removeStaleRecoveringRegions(Ljava/util/Set;)V
+#resubmitTask(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/SplitLogManager$Task;Lorg/apache/hadoop/hbase/master/SplitLogManager$ResubmitDirective;)Z
+#submitTask(Ljava/lang/String;)V
+#deleteTask(Ljava/lang/String;)V
+#isReplaying()Z
+#isSplitting()Z
+#getLastRecoveryTime()J
+#getRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
+#init()V
@2.0.0-alpha-1
+#getRecoveryMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
-#getRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@2.0.0-beta-1
-#markRegionsRecovering(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
-#removeRecoveringRegions(Ljava/util/Set;Ljava/lang/Boolean;)V
-#setRecoveryMode(Z)V
-#removeStaleRecoveringRegions(Ljava/util/Set;)V
-#isReplaying()Z
-#isSplitting()Z
-#getLastRecoveryTime()J
-#getRecoveryMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$CreateRescanAsyncCallback
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination;)V
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/coprocessor/CoprocessorHost
@0.95.0
+#<init>()V
+#getLoadedCoprocessors()Ljava/util/Set;
+#getCoprocessors()Ljava/util/Set;
+#load(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
+#load(Ljava/lang/Class;ILorg/apache/hadoop/conf/Configuration;)V
+#loadInstance(Ljava/lang/Class;ILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
+#shutdown(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#findCoprocessor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/Coprocessor;
+#findCoprocessorEnvironment(Ljava/lang/String;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Abortable;)V
-#<init>()V
@0.98.9-hadoop1
+#findCoprocessors(Ljava/lang/Class;)Ljava/util/List;
@0.98.20-hadoop1
+#load(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@0.99.0
-#load(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
-#findCoprocessors(Ljava/lang/Class;)Ljava/util/List;
@0.99.2
+#findCoprocessors(Ljava/lang/Class;)Ljava/util/List;
@1.4.0
+#load(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@2.0.0-alpha-1
+#findCoprocessorEnvironment(Ljava/lang/Class;)Ljava/util/List;
@2.0.0-alpha4
+#checkAndLoadInstance(Ljava/lang/Class;ILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
+#createEnvironment(Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/Coprocessor;
+#findCoprocessor(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/Coprocessor;
-#loadInstance(Ljava/lang/Class;ILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
-#findCoprocessorEnvironment(Ljava/lang/Class;)Ljava/util/List;

+###org/apache/hadoop/hbase/DaemonThreadFactory
@0.95.0
+#<init>(Ljava/lang/String;)V
+#newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/DaemonThreadFactory

+###org/apache/hadoop/hbase/favored/FavoredNodesPlan$Position
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan$Position;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan$Position;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/favored/FavoredNodesPlan$Position

+###org/apache/hadoop/hbase/generated/master/snapshotsStats_jsp
@1.3.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/generated/regionserver/storeFile_jsp
@1.2.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/http/FilterContainer
@0.99.0
+#addFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#addGlobalFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/FilterContainer

+###org/apache/hadoop/hbase/http/HttpServer$QuotingInputFilter$RequestQuoter
@0.99.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getParameterNames()Ljava/util/Enumeration;
+#getParameter(Ljava/lang/String;)Ljava/lang/String;
+#getParameterValues(Ljava/lang/String;)[Ljava/lang/String;
+#getParameterMap()Ljava/util/Map;
+#getRequestURL()Ljava/lang/StringBuffer;
+#getServerName()Ljava/lang/String;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpServer$QuotingInputFilter$RequestQuoter

+###org/apache/hadoop/hbase/http/log/LogLevel$Servlet
@0.99.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/log/LogLevel$Servlet

+###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput
@2.0.0-alpha-1
+#writeInt(I)V
+#write(Ljava/nio/ByteBuffer;)V
+#write([B)V
+#write([BII)V
+#buffered()I
+#getPipeline()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#flush(Z)Ljava/util/concurrent/CompletableFuture;
+#recoverAndClose(Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#close()V
@2.0.0-beta-1
+#isBroken()Z
@2.2.6
+#getSyncedLength()J
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput

+###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper
@2.0.0-alpha-1
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper

+###org/apache/hadoop/hbase/io/hfile/BlockCacheUtil
@0.98.4-hadoop1
+#<init>()V
+#toString(Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;J)Ljava/lang/String;
+#toJSON(Ljava/lang/String;Ljava/util/NavigableSet;)Ljava/lang/String;
+#toJSON(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheUtil$CachedBlocksByFile;)Ljava/lang/String;
+#toJSON(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)Ljava/lang/String;
+#toStringMinusFileName(Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;J)Ljava/lang/String;
+#getLoadedCachedBlocksByFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)Lorg/apache/hadoop/hbase/io/hfile/BlockCacheUtil$CachedBlocksByFile;
@1.4.0
+#compareCacheBlock(Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)I
@1.4.5
+#validateBlockAddition(Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
-#compareCacheBlock(Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)I
@1.4.6
+#shouldReplaceExistingCacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)Z
@2.0.0-alpha-1
-#validateBlockAddition(Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
-#shouldReplaceExistingCacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)Z
@2.0.0-alpha3
+#compareCacheBlock(Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)I
@2.0.2
+#validateBlockAddition(Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
+#shouldReplaceExistingCacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)Z
-#compareCacheBlock(Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)I
@2.4.14
+#getMaxCachedBlocksByFile(Lorg/apache/hadoop/conf/Configuration;)I
@3.0.0-alpha-1
-#getMaxCachedBlocksByFile(Lorg/apache/hadoop/conf/Configuration;)I

+###org/apache/hadoop/hbase/io/hfile/bucket/BucketCacheStats
@0.95.0
+#<init>()V
+#ioHit(J)V
+#getIOHitsPerSecond()J
+#getIOTimePerHit()D
+#reset()V
@0.98.4-hadoop1
+#toString()Ljava/lang/String;
@0.99.0
-#<init>()V
@2.4.8
+#getAllocationFailCount()J
+#allocationFailed()V
@3.0.0-alpha-1
-#getAllocationFailCount()J
-#allocationFailed()V
@3.0.0-alpha-2
+#getAllocationFailCount()J
+#allocationFailed()V

+###org/apache/hadoop/hbase/io/hfile/bucket/CachedEntryQueue
@0.95.0
+#<init>(JJ)V
+#add(Ljava/util/Map$Entry;)V
+#poll()Ljava/util/Map$Entry;
+#pollLast()Ljava/util/Map$Entry;
+#cacheSize()J
@2.3.0
-#cacheSize()J

+###org/apache/hadoop/hbase/io/hfile/bucket/IOEngine
@0.95.0
+#isPersistent()Z
+#read(Ljava/nio/ByteBuffer;J)V
+#write(Ljava/nio/ByteBuffer;J)V
+#sync()V
+#shutdown()V
@0.98.1-hadoop1
+#read(Ljava/nio/ByteBuffer;J)I
-#read(Ljava/nio/ByteBuffer;J)V
@2.0.0-alpha-1
+#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#write(Lorg/apache/hadoop/hbase/nio/ByteBuff;J)V
-#read(Ljava/nio/ByteBuffer;J)I
@2.0.0
+#usesSharedMemory()Z
@2.3.0
+#read(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketEntry;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;

+###org/apache/hadoop/hbase/io/hfile/CacheableDeserializer
@0.95.0
+#deserialize(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#deserialize(Ljava/nio/ByteBuffer;Z)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#getDeserialiserIdentifier()I
@2.0.0-alpha-1
+#deserialize(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#deserialize(Lorg/apache/hadoop/hbase/nio/ByteBuff;ZLorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#deserialize(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#deserialize(Ljava/nio/ByteBuffer;Z)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@2.3.0
+#deserialize(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#getDeserializerIdentifier()I
-#deserialize(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#deserialize(Lorg/apache/hadoop/hbase/nio/ByteBuff;ZLorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getDeserialiserIdentifier()I

+###org/apache/hadoop/hbase/io/hfile/CacheConfig
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
+#isBlockCacheEnabled()Z
+#getBlockCache()Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
+#shouldCacheDataOnRead()Z
+#shouldCacheBlockOnRead(Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;)Z
+#isInMemory()Z
+#shouldCacheDataOnWrite()Z
+#setCacheDataOnWrite(Z)V
+#shouldCacheIndexesOnWrite()Z
+#shouldCacheBloomsOnWrite()Z
+#shouldEvictOnClose()Z
+#setEvictOnClose(Z)V
+#shouldCacheCompressed()Z
+#toString()Ljava/lang/String;
@0.98.3-hadoop1
+#shouldPrefetchOnOpen()Z
@0.98.7-hadoop1
+#shouldCacheDataCompressed()Z
+#shouldCacheCompressed(Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;)Z
-#shouldCacheCompressed()Z
@0.98.14-hadoop1
+#shouldReadBlockFromCache(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
+#shouldLockOnCacheMiss(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@0.98.15-hadoop1
+#shouldDropBehindCompaction()Z
@0.99.0
+#isCacheDataInL1()Z
+#setCacheDataInL1(Z)V
+#instantiateBlockCache(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#shouldDropBehindCompaction()Z
-#shouldReadBlockFromCache(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
-#shouldLockOnCacheMiss(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@1.0.2
+#shouldReadBlockFromCache(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
+#shouldLockOnCacheMiss(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@1.1.0
-#shouldReadBlockFromCache(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
-#shouldLockOnCacheMiss(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@1.1.2
+#shouldReadBlockFromCache(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
+#shouldLockOnCacheMiss(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@1.2.0
+#shouldDropBehindCompaction()Z
@1.4.0
+#getL1Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#getL2Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
@1.7.0
+#shouldCacheCompactedBlocksOnWrite()Z
+#enableCacheOnWrite()V
+#getCacheCompactedBlocksOnWriteThreshold()J
@2.0.0-alpha-1
+#getL1(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
-#shouldCacheCompactedBlocksOnWrite()Z
-#enableCacheOnWrite()V
-#getCacheCompactedBlocksOnWriteThreshold()J
-#getL1Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
-#getL2Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
@2.0.0-alpha3
+#getL1Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#getL2Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
@2.0.0-beta-1
+#getOnHeapCache(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
+#getOnHeapCacheStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#getL2CacheStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
-#isCacheDataInL1()Z
-#setCacheDataInL1(Z)V
-#getL1(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
-#getL1Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
-#getL2Stats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
@2.0.3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.0.4
-#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.1.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.1.2
-#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#getBlockCache()Ljava/util/Optional;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#isBlockCacheEnabled()Z
-#getBlockCache()Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#getOnHeapCache(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
-#getOnHeapCacheStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
-#getL2CacheStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
-#instantiateBlockCache(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)V
+#enableCacheOnWrite()V
+#shouldCacheCompactedBlocksOnWrite()Z
+#getCacheCompactedBlocksOnWriteThreshold()J
+#isCombinedBlockCache()Z
+#getByteBuffAllocator()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V

+###org/apache/hadoop/hbase/io/hfile/HFile
@0.95.0
+#<init>()V
+#offerReadLatency(JZ)V
+#offerWriteLatency(J)V
+#getReadLatenciesNanos()Ljava/util/Collection;
+#getPreadLatenciesNanos()Ljava/util/Collection;
+#getWriteLatenciesNanos()Ljava/util/Collection;
+#getReadOps()I
+#getReadTimeMs()J
+#getPreadOps()I
+#getPreadTimeMs()J
+#getWriteOps()I
+#getWriteTimeMs()J
+#getChecksumFailuresCount()J
+#getFormatVersion(Lorg/apache/hadoop/conf/Configuration;)I
+#getWriterFactoryNoCache(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#getWriterFactory(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#createReaderWithEncoding(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#createReaderWithEncoding(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#isReservedFileInfoKey([B)Z
+#getSupportedCompressionAlgorithms()[Ljava/lang/String;
+#main([Ljava/lang/String;)V
+#checkFormatVersion(I)V
@0.95.1-hadoop1
+#createReaderWithEncoding(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
-#createReaderWithEncoding(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
@0.96.1-hadoop1
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
-#createReaderWithEncoding(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
-#createReaderWithEncoding(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
@0.98.0-hadoop1
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
-#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
-#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
@0.98.5-hadoop1
-#offerReadLatency(JZ)V
-#offerWriteLatency(J)V
-#getReadLatenciesNanos()Ljava/util/Collection;
-#getPreadLatenciesNanos()Ljava/util/Collection;
-#getWriteLatenciesNanos()Ljava/util/Collection;
-#getReadOps()I
-#getReadTimeMs()J
-#getPreadOps()I
-#getPreadTimeMs()J
-#getWriteOps()I
-#getWriteTimeMs()J
@0.98.11-hadoop1
+#isHFileFormat(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#isHFileFormat(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;)Z
@0.99.0
-#isHFileFormat(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#isHFileFormat(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;)Z
@1.0.0
+#isHFileFormat(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#isHFileFormat(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;)Z
@1.4.0
+#getAndResetChecksumFailuresCount()J
+#updateReadLatency(JZ)V
+#updateWriteLatency(J)V
@2.0.0-alpha-1
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#checkHFileVersion(Lorg/apache/hadoop/conf/Configuration;)V
-#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
-#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
@2.3.0
+#createReader(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#getStoreFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
-#<init>()V
-#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
-#isReservedFileInfoKey([B)Z

+###org/apache/hadoop/hbase/io/hfile/HFileReaderImpl$EncodedScanner
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#isSeeked()Z
+#setNonSeekedState()V
+#next()Z
+#getKey()Lorg/apache/hadoop/hbase/Cell;
+#getValue()Ljava/nio/ByteBuffer;
+#getCell()Lorg/apache/hadoop/hbase/Cell;
+#getKeyString()Ljava/lang/String;
+#getValueString()Ljava/lang/String;
+#compareKey(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;)I
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V

+###org/apache/hadoop/hbase/io/hfile/InvalidHFileException
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/io/MetricsIO
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/io/MetricsIOWrapper;)V
+#getMetricsSource()Lorg/apache/hadoop/hbase/io/MetricsIOSource;
+#getWrapper()Lorg/apache/hadoop/hbase/io/MetricsIOWrapper;
+#updateFsReadTime(J)V
+#updateFsPreadTime(J)V
+#updateFsWriteTime(J)V

+###org/apache/hadoop/hbase/io/util/MemorySizeUtil
@2.0.0-alpha-1
+#<init>()V
+#safeGetHeapMemoryUsage()Ljava/lang/management/MemoryUsage;
+#checkForClusterFreeHeapMemoryLimit(Lorg/apache/hadoop/conf/Configuration;)V
+#getGlobalMemStoreHeapPercent(Lorg/apache/hadoop/conf/Configuration;Z)F
+#getGlobalMemStoreHeapLowerMark(Lorg/apache/hadoop/conf/Configuration;Z)F
+#getGlobalMemstoreSize(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
+#getOnheapGlobalMemstoreSize(Lorg/apache/hadoop/conf/Configuration;)J
+#getBlockCacheHeapPercent(Lorg/apache/hadoop/conf/Configuration;)F
+#getL2BlockCacheHeapPercent(Lorg/apache/hadoop/conf/Configuration;)F
+#getLruCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
+#getBucketCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
@2.0.0-alpha4
+#getGlobalMemStoreSize(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
+#getOnheapGlobalMemStoreSize(Lorg/apache/hadoop/conf/Configuration;)J
-#getGlobalMemstoreSize(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
-#getOnheapGlobalMemstoreSize(Lorg/apache/hadoop/conf/Configuration;)J
@2.0.0-beta-1
+#getOnHeapCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
-#getL2BlockCacheHeapPercent(Lorg/apache/hadoop/conf/Configuration;)F
-#getLruCacheSize(Lorg/apache/hadoop/conf/Configuration;)J

+###org/apache/hadoop/hbase/ipc/FifoRpcScheduler
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;I)V
+#init(Lorg/apache/hadoop/hbase/ipc/RpcScheduler$Context;)V
+#start()V
+#stop()V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
+#getGeneralQueueLength()I
+#getPriorityQueueLength()I
+#getReplicationQueueLength()I
@0.98.3-hadoop1
+#getActiveRpcHandlerCount()I
@1.2.0
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
-#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
@1.3.0
+#getNumGeneralCallsDropped()J
+#getNumLifoModeSwitches()J
@1.4.0
+#getWriteQueueLength()I
+#getReadQueueLength()I
+#getScanQueueLength()I
+#getActiveWriteRpcHandlerCount()I
+#getActiveReadRpcHandlerCount()I
+#getActiveScanRpcHandlerCount()I
@1.5.0
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I
@2.0.0-alpha-1
-#getActiveGeneralRpcHandlerCount()I
-#getActivePriorityRpcHandlerCount()I
-#getActiveReplicationRpcHandlerCount()I
@2.0.0-alpha4
+#getCallQueueInfo()Lorg/apache/hadoop/hbase/ipc/CallQueueInfo;
@2.0.5
+#getMetaPriorityQueueLength()I
@2.1.0
-#getMetaPriorityQueueLength()I
@2.1.3
+#getMetaPriorityQueueLength()I
@2.2.0
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I
+#getActiveMetaPriorityRpcHandlerCount()I

+###org/apache/hadoop/hbase/ipc/RpcExecutor
@0.98.4-hadoop1
+#<init>(Ljava/lang/String;I)V
+#start(I)V
+#stop()V
+#getActiveHandlerCount()I
+#getQueueLength()I
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
@0.98.9-hadoop1
+#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer;
@0.98.10-hadoop1
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
@0.99.0
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
-#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer;
@0.99.2
+#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer;
@1.0.0
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
@1.2.0
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
-#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
@1.3.0
+#resizeQueues(Lorg/apache/hadoop/conf/Configuration;)V
@1.4.0
+#<init>(Ljava/lang/String;II)V[deprecated]
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;ILjava/lang/String;ILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#getQueues()Ljava/util/List;
+#isDeadlineQueueType(Ljava/lang/String;)Z
+#isCodelQueueType(Ljava/lang/String;)Z
+#isFifoQueueType(Ljava/lang/String;)Z
+#getNumGeneralCallsDropped()J
+#getNumLifoModeSwitches()J
+#getActiveWriteHandlerCount()I
+#getActiveReadHandlerCount()I
+#getActiveScanHandlerCount()I
+#getReadQueueLength()I
+#getScanQueueLength()I
+#getWriteQueueLength()I
+#getName()Ljava/lang/String;
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Ljava/lang/String;I)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
@2.0.0-alpha-1
-#<init>(Ljava/lang/String;II)V[deprecated]
-#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
-#getQueues()Ljava/util/List;
@2.0.0-alpha4
+#getCallQueueCountsSummary()Ljava/util/Map;
+#getCallQueueSizeSummary()Ljava/util/Map;
@2.4.6
+#isPluggableQueueType(Ljava/lang/String;)Z
@2.4.10
+#isPluggableQueueWithFastPath(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z
@2.5.0
+#getBalancer(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;)Lorg/apache/hadoop/hbase/ipc/QueueBalancer;
-#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer;
@3.0.0-alpha-1
+#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer;
-#getBalancer(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;)Lorg/apache/hadoop/hbase/ipc/QueueBalancer;
-#isPluggableQueueType(Ljava/lang/String;)Z
-#isPluggableQueueWithFastPath(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z
@3.0.0-alpha-2
+#isPluggableQueueType(Ljava/lang/String;)Z
@3.0.0-alpha-3
+#getBalancer(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;)Lorg/apache/hadoop/hbase/ipc/QueueBalancer;
+#isPluggableQueueWithFastPath(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z
-#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/RpcExecutor$QueueBalancer;

+###org/apache/hadoop/hbase/JMXListener
@0.98.4-hadoop1
+#<init>()V
+#buildJMXServiceURL(II)Ljavax/management/remote/JMXServiceURL;
+#startConnectorServer(II)V
+#stopConnectorServer()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V

+###org/apache/hadoop/hbase/mapred/MultiTableSnapshotInputFormat
@0.98.14-hadoop1
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;
+#setInput(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;Lorg/apache/hadoop/fs/Path;)V
@0.99.0
-###org/apache/hadoop/hbase/mapred/MultiTableSnapshotInputFormat

+###org/apache/hadoop/hbase/mapred/TableMapReduceUtil
@0.95.0
+#<init>()V
+#initTableMapJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;)V
+#initTableMapJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;Z)V
+#initTableReduceJob(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;)V
+#initTableReduceJob(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;)V
+#initTableReduceJob(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/Class;Z)V
+#initCredentials(Lorg/apache/hadoop/mapred/JobConf;)V
+#limitNumReduceTasks(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobConf;)V
+#limitNumMapTasks(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobConf;)V
+#setNumReduceTasks(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobConf;)V
+#setNumMapTasks(Ljava/lang/String;Lorg/apache/hadoop/mapred/JobConf;)V
+#setScannerCaching(Lorg/apache/hadoop/mapred/JobConf;I)V
+#addDependencyJars(Lorg/apache/hadoop/mapred/JobConf;)V
@0.98.3-hadoop1
+#initTableMapJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;ZLjava/lang/Class;)V
+#initTableSnapshotMapJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;ZLorg/apache/hadoop/fs/Path;)V
@0.98.14-hadoop1
+#initMultiTableSnapshotMapperJob(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;ZLorg/apache/hadoop/fs/Path;)V
@0.99.0
-#initMultiTableSnapshotMapperJob(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;ZLorg/apache/hadoop/fs/Path;)V
@1.2.0
+#initMultiTableSnapshotMapperJob(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;ZLorg/apache/hadoop/fs/Path;)V
@1.3.2
+#initTableSnapshotMapJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha-1
-#initTableSnapshotMapJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableMapReduceUtil

+###org/apache/hadoop/hbase/mapreduce/Driver
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/Driver

+###org/apache/hadoop/hbase/mapreduce/HashTable$TableHash$Reader
@0.98.14-hadoop1
+#next()Z
+#getCurrentKey()Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;
+#getCurrentHash()Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;
+#close()V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/HashTable$TableHash$Reader

+###org/apache/hadoop/hbase/mapreduce/HFileInputFormat
@2.0.0-alpha-1
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/HFileInputFormat

+###org/apache/hadoop/hbase/mapreduce/IdentityTableReducer
@0.95.0
+#<init>()V
+#reduce(Lorg/apache/hadoop/io/Writable;Ljava/lang/Iterable;Lorg/apache/hadoop/mapreduce/Reducer$Context;)V
+#reduce(Ljava/lang/Object;Ljava/lang/Iterable;Lorg/apache/hadoop/mapreduce/Reducer$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/IdentityTableReducer

+###org/apache/hadoop/hbase/mapreduce/Import$KeyValueImporter
@0.98.0-hadoop1
+#<init>()V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#setup(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/Import$KeyValueImporter

+###org/apache/hadoop/hbase/mapreduce/ImportTsv
@0.95.0
+#<init>()V
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@1.3.0
-#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/ImportTsv

+###org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat
@0.95.0
+#<init>()V
+#checkOutputSpecs(Lorg/apache/hadoop/mapreduce/JobContext;)V
+#getOutputCommitter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/OutputCommitter;
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/MultiTableOutputFormat

+###org/apache/hadoop/hbase/mapreduce/MutationSerialization
@0.95.0
+#<init>()V
+#accept(Ljava/lang/Class;)Z
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/MutationSerialization

+###org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication
@0.95.0
+#<init>()V
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
@0.96.2-hadoop1
+#run([Ljava/lang/String;)I
@0.98.0-hadoop1
-#run([Ljava/lang/String;)I
@0.98.1-hadoop1
+#run([Ljava/lang/String;)I
@2.0.0-alpha-1
+#doCommandLine([Ljava/lang/String;)Z
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication

+###org/apache/hadoop/hbase/mapreduce/TableOutputFormat$TableRecordWriter
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/client/HTable;)V
+#close(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#write(Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/Mutation;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/client/Table;)V
-#<init>(Lorg/apache/hadoop/hbase/client/HTable;)V
@0.99.2
-#<init>(Lorg/apache/hadoop/hbase/client/Table;)V
@1.0.0
+#<init>(Lorg/apache/hadoop/hbase/mapreduce/TableOutputFormat;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableOutputFormat$TableRecordWriter

+###org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl
@0.95.0
+#<init>()V
+#restart([B)V
+#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
+#setScan(Lorg/apache/hadoop/hbase/client/Scan;)V
+#initialize(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#close()V
+#getCurrentKey()Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;
+#getCurrentValue()Lorg/apache/hadoop/hbase/client/Result;
+#nextKeyValue()Z
+#getProgress()F
@0.99.0
+#setHTable(Lorg/apache/hadoop/hbase/client/Table;)V
-#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl

+###org/apache/hadoop/hbase/mapreduce/TsvImporterTextMapper
@0.95.2-hadoop1
+#<init>()V
+#getSkipBadLines()Z
+#getBadLineCount()Lorg/apache/hadoop/mapreduce/Counter;
+#incrementBadLineCount(I)V
+#map(Lorg/apache/hadoop/io/LongWritable;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TsvImporterTextMapper

+###org/apache/hadoop/hbase/master/ActiveMasterManager
@0.95.2-hadoop1
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#isActiveMaster()Z
+#stop()V
@0.99.0
-#isActiveMaster()Z
@1.0.0
+#setInfoPort(I)V
@1.7.0
+#nodeChildrenChanged(Ljava/lang/String;)V
+#getActiveMasterServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getBackupMasters()Ljava/util/List;
@2.0.0-alpha-1
-#nodeChildrenChanged(Ljava/lang/String;)V
-#getActiveMasterServerName()Lorg/apache/hadoop/hbase/ServerName;
-#getBackupMasters()Ljava/util/List;
@2.3.0
+#getActiveMasterServerName()Ljava/util/Optional;
@2.4.0
+#nodeChildrenChanged(Ljava/lang/String;)V
+#getBackupMasters()Ljava/util/List;
@2.5.0
+#getActiveMasterInfoPort()I
+#getBackupMasterInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I
@3.0.0-alpha-1
-#getActiveMasterInfoPort()I
-#getBackupMasterInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I
@3.0.0-alpha-2
+#getActiveMasterInfoPort()I
+#getBackupMasterInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I

+###org/apache/hadoop/hbase/master/assignment/GCMergedRegionsProcedure
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>()V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V

+###org/apache/hadoop/hbase/master/assignment/RegionStates$RegionFailedOpen
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#getRegionNode()Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#incrementAndGetRetries()I
+#getRetries()I
+#setException(Ljava/lang/Exception;)V
+#getException()Ljava/lang/Exception;
@2.0.0-alpha4
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-beta-1
+#getRegionStateNode()Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
-#getRegionNode()Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)V
+#getRegionStateNode()Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;
-#<init>(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#getRegionStateNode()Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;

+###org/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getState()Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerState;
+#getVersionNumber()I
+#getReportEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
+#isInState([Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerState;)Z
+#setState(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerState;)V
+#setVersionNumber(I)V
+#getRegions()Ljava/util/Set;
+#getRegionCount()I
+#getRegionInfoList()Ljava/util/ArrayList;
+#addRegion(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#removeRegion(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#compareTo(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@2.0.1
-#getVersionNumber()I
-#setState(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerState;)V
-#setVersionNumber(I)V
@2.2.0
-###org/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode

+###org/apache/hadoop/hbase/master/assignment/UnassignProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;Z)V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getServer(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/ServerName;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;Z)V
@2.0.0-beta-2
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;ZZ)V
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;ZZ)V
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
@2.2.0
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;ZZ)V
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;ZZ)V
-#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
-#getServer(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/ServerName;
-#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;

+###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$MoveRegionAction
@0.99.0
+#<init>(III)V
+#undoAction()Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$MoveRegionAction

+###org/apache/hadoop/hbase/master/balancer/ClusterStatusChore
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/master/LoadBalancer;)V

+###org/apache/hadoop/hbase/master/balancer/MetricsStochasticBalancer
@1.3.0
+#<init>()V
+#balanceCluster(J)V
+#incrMiscInvocations()V
+#updateMetricsSize(I)V
+#updateStochasticCost(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Double;)V
@1.3.3
+#balancerStatus(Z)V
@1.4.0
-#balancerStatus(Z)V
@1.4.8
+#balancerStatus(Z)V
@2.0.0-alpha-1
-#balancerStatus(Z)V
@2.1.1
+#balancerStatus(Z)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/MetricsStochasticBalancer

+###org/apache/hadoop/hbase/master/cleaner/LogCleaner
@0.95.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
@1.3.3
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#cleanup()V
+#cancel(Z)V
@1.4.0
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#cleanup()V
-#cancel(Z)V
@1.4.4
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#cleanup()V
+#cancel(Z)V
@1.4.11
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
@1.7.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
@2.0.0-alpha-1
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#cleanup()V
-#cancel(Z)V
@2.0.0-beta-1
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#cleanup()V
@2.0.0-beta-2
+#cancel(Z)V
@2.1.6
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
@2.2.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
@2.2.1
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
@2.4.16
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V

+###org/apache/hadoop/hbase/master/cleaner/ReplicationZKNodeCleaner
@1.4.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
+#getUnDeletedQueues()Ljava/util/Map;
+#getUnDeletedHFileRefsQueues()Ljava/util/Set;
+#removeQueues(Ljava/util/Map;)V
+#removeHFileRefsQueues(Ljava/util/Set;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
@2.1.0
-###org/apache/hadoop/hbase/master/cleaner/ReplicationZKNodeCleaner

+###org/apache/hadoop/hbase/master/HMaster$RedirectServlet
@0.99.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@1.1.10
+#<init>(Lorg/apache/hadoop/hbase/http/InfoServer;Ljava/lang/String;)V
-#<init>()V
@1.2.0
+#<init>()V
-#<init>(Lorg/apache/hadoop/hbase/http/InfoServer;Ljava/lang/String;)V
@1.2.5
+#<init>(Lorg/apache/hadoop/hbase/http/InfoServer;Ljava/lang/String;)V
-#<init>()V
@1.3.0
+#<init>()V
-#<init>(Lorg/apache/hadoop/hbase/http/InfoServer;Ljava/lang/String;)V
@1.3.1
+#<init>(Lorg/apache/hadoop/hbase/http/InfoServer;Ljava/lang/String;)V
-#<init>()V
@2.4.0
-###org/apache/hadoop/hbase/master/HMaster$RedirectServlet

+###org/apache/hadoop/hbase/master/MobCompactionChore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;I)V
@2.5.0
-###org/apache/hadoop/hbase/master/MobCompactionChore

+###org/apache/hadoop/hbase/master/procedure/CloneSnapshotProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Z)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Z)V
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.4.9
+#getRestoreAcl()Z
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;ZLjava/lang/String;)V
@3.0.0-alpha-1
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;ZLjava/lang/String;)V
-#getRestoreAcl()Z
@3.0.0-alpha-2
+#getRestoreAcl()Z
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;ZLjava/lang/String;)V

+###org/apache/hadoop/hbase/master/procedure/DisableTableProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Z)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;ZLorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
+#getMasterServices()Lorg/apache/hadoop/hbase/master/MasterServices;
+#getMasterConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getMasterCoprocessorHost()Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost;
+#getProcedureQueue()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureQueue;
+#isRunning()Z
+#isInitialized()Z
@1.2.0
+#getProcedureQueue()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;
+#waitInitialized(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#waitServerCrashProcessingEnabled(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#wake(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
+#suspend(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
+#setEventReady(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;Z)V
-#getProcedureQueue()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureQueue;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher;)V
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;
+#getProcedureScheduler()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;
+#getRemoteDispatcher()Lorg/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher;
+#waitFailoverCleanup(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#setEventReady(Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;Z)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#getProcedureQueue()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;
-#wake(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
-#suspend(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
-#setEventReady(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;Z)V
@2.0.2
-#waitServerCrashProcessingEnabled(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
-#waitFailoverCleanup(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
@2.0.6
+#getMasterFileSystem()Lorg/apache/hadoop/hbase/master/MasterFileSystem;
@2.1.0
+#getReplicationPeerManager()Lorg/apache/hadoop/hbase/master/replication/ReplicationPeerManager;
-#getMasterFileSystem()Lorg/apache/hadoop/hbase/master/MasterFileSystem;
@2.1.6
+#getMasterFileSystem()Lorg/apache/hadoop/hbase/master/MasterFileSystem;
@2.2.0
-#getMasterFileSystem()Lorg/apache/hadoop/hbase/master/MasterFileSystem;
@2.2.1
+#getMasterFileSystem()Lorg/apache/hadoop/hbase/master/MasterFileSystem;

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureUtil
@1.1.0
+#toProtoUserInfo(Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;
+#toUserInfo(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;)Lorg/apache/hadoop/security/UserGroupInformation;
@1.1.9
+#submitProcedure(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureUtil$NonceProcedureRunnable;)J
@1.2.0
-#submitProcedure(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureUtil$NonceProcedureRunnable;)J
@1.2.5
+#submitProcedure(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureUtil$NonceProcedureRunnable;)J
@1.5.0
+#toProtoUserInfo(Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;
+#toUserInfo(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;)Lorg/apache/hadoop/hbase/security/User;
-#toProtoUserInfo(Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;
-#toUserInfo(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;)Lorg/apache/hadoop/security/UserGroupInformation;
@2.0.0-alpha-1
+#toProtoUserInfo(Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$UserInformation;
+#toUserInfo(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$UserInformation;)Lorg/apache/hadoop/hbase/security/User;
-#toProtoUserInfo(Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;
-#toUserInfo(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$UserInformation;)Lorg/apache/hadoop/hbase/security/User;
@2.0.0-alpha4
+#validateProcedureWALFilename(Ljava/lang/String;)Z
@2.0.0-beta-2
+#getTablePriority(Lorg/apache/hadoop/hbase/TableName;)I
+#getTablePriorityLevels()I
@2.0.2
+#getServerPriority(Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface;)I
-#getTablePriorityLevels()I
@2.0.3
+#unwrapRemoteIOException(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Ljava/io/IOException;
@2.1.0
-#unwrapRemoteIOException(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Ljava/io/IOException;
@2.1.1
+#unwrapRemoteIOException(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Ljava/io/IOException;
@3.0.0-alpha-1
+#checkGroupNotEmpty(Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;Ljava/util/function/Supplier;)V
+#checkGroupExists(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureUtil$RSGroupGetter;Ljava/util/Optional;Ljava/util/function/Supplier;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;
+#getNamespaceGroup(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Ljava/util/Optional;

+###org/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch$CompatibilityLatch
@1.1.0
+#await()V

+###org/apache/hadoop/hbase/master/procedure/ProcedureSyncWait
@1.1.0
+#submitAndWaitProcedure(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;Lorg/apache/hadoop/hbase/procedure2/Procedure;)[B
+#waitForProcedureToComplete(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)[B
+#waitFor(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/procedure/ProcedureSyncWait$Predicate;)Ljava/lang/Object;
+#waitFor(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;JJLjava/lang/String;Lorg/apache/hadoop/hbase/master/procedure/ProcedureSyncWait$Predicate;)Ljava/lang/Object;
@2.0.0-alpha-1
+#submitProcedure(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;Lorg/apache/hadoop/hbase/procedure2/Procedure;)Ljava/util/concurrent/Future;
+#waitForProcedureToCompleteIOE(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;JJ)[B
+#waitForProcedureToComplete(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;JJ)[B
-#waitForProcedureToComplete(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)[B
@2.0.0-alpha4
+#waitForProcedureToCompleteIOE(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;Lorg/apache/hadoop/hbase/procedure2/Procedure;J)[B
+#waitForProcedureToComplete(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;Lorg/apache/hadoop/hbase/procedure2/Procedure;J)[B
-#waitForProcedureToCompleteIOE(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;JJ)[B
-#waitForProcedureToComplete(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;JJ)[B
@2.2.0
+#waitFor(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;JLjava/lang/String;Lorg/apache/hadoop/hbase/master/procedure/ProcedureSyncWait$Predicate;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType
@1.2.0
+#values()[Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;

+###org/apache/hadoop/hbase/master/RackManager
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getRack(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/String;
@0.99.0
+#<init>()V
+#getRack(Ljava/util/List;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RackManager

+###org/apache/hadoop/hbase/master/replication/ReplicationManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#removeReplicationPeer(Ljava/lang/String;)V
+#enableReplicationPeer(Ljava/lang/String;)V
+#disableReplicationPeer(Ljava/lang/String;)V
+#getPeerConfig(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
+#updatePeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#listReplicationPeers(Ljava/util/regex/Pattern;)Ljava/util/List;
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
-#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@2.1.0
-###org/apache/hadoop/hbase/master/replication/ReplicationManager

+###org/apache/hadoop/hbase/master/snapshot/SnapshotHFileCleaner
@0.95.0
+#<init>()V
+#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#getFileCacheForTesting()Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache;
@0.95.2-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
@0.98.5-hadoop1
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@0.98.6-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@0.98.10-hadoop1
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@0.99.0
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.0.0
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@1.2.10
+#init(Ljava/util/Map;)V
@1.3.0
-#init(Ljava/util/Map;)V
@1.3.3
+#init(Ljava/util/Map;)V
@1.4.0
-#init(Ljava/util/Map;)V
@1.4.6
+#init(Ljava/util/Map;)V

+###org/apache/hadoop/hbase/master/SnapshotSentinel
@0.95.0
+#isFinished()Z
+#cancel(Ljava/lang/String;)V
+#getSnapshot()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#getExceptionIfFailed()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;
@0.95.1-hadoop1
+#getCompletionTimestamp()J
+#rethrowExceptionIfFailed()V
@2.0.0-alpha-1
+#getSnapshot()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;
-#getSnapshot()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;

+###org/apache/hadoop/hbase/mob/compactions/MobCompactor
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/util/concurrent/ExecutorService;)V
+#compact()Ljava/util/List;
+#compact(Z)Ljava/util/List;
+#compact(Ljava/util/List;Z)Ljava/util/List;
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/util/concurrent/ExecutorService;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/util/concurrent/ExecutorService;)V
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/MobCompactor

+###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartitionId
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#setThreshold(J)V
+#getThreshold()J
+#getStartKey()Ljava/lang/String;
+#setStartKey(Ljava/lang/String;)V
+#getDate()Ljava/lang/String;
+#setDate(Ljava/lang/String;)V
+#getLatestDate()Ljava/lang/String;
+#updateLatestDate(Ljava/lang/String;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartitionId

+###org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;

+###org/apache/hadoop/hbase/monitoring/MonitoredRPCHandler
@0.95.0
+#getRPC()Ljava/lang/String;
+#getRPC(Z)Ljava/lang/String;
+#getRPCPacketLength()J
+#getClient()Ljava/lang/String;
+#getRPCStartTime()J
+#getRPCQueueTime()J
+#isRPCRunning()Z
+#isOperationRunning()Z
+#setRPC(Ljava/lang/String;[Ljava/lang/Object;J)V
+#setRPCPacket(Lcom/google/protobuf/Message;)V
+#setConnection(Ljava/lang/String;I)V
@2.0.0-alpha-1
+#setRPCPacket(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)V
-#setRPCPacket(Lcom/google/protobuf/Message;)V
@2.0.0-beta-1
+#setRPCPacket(Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)V
-#setRPCPacket(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)V

+###org/apache/hadoop/hbase/procedure/flush/FlushTableSubprocedure
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLjava/util/List;Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager$FlushTableSubprocedurePool;)V
+#acquireBarrier()V
+#insideBarrier()[B
+#cleanup(Ljava/lang/Exception;)V
+#releaseBarrier()V
@2.4.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLjava/util/List;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager$FlushTableSubprocedurePool;)V
-#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLjava/util/List;Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure/flush/RegionServerFlushTableProcedureManager$FlushTableSubprocedurePool;)V

+###org/apache/hadoop/hbase/procedure/Procedure
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLjava/lang/String;[BLjava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;JJLjava/lang/String;[BLjava/util/List;)V
+#getName()Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#getErrorMonitor()Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;
+#call()Ljava/lang/Void;
+#sendGlobalBarrierStart()V
+#sendGlobalBarrierReached()V
+#sendGlobalBarrierComplete()V
+#barrierAcquiredByMember(Ljava/lang/String;)V
+#barrierReleasedByMember(Ljava/lang/String;)V
+#waitForCompleted()V
+#receive(Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#waitForLatch(Ljava/util/concurrent/CountDownLatch;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;JLjava/lang/String;)V
+#call()Ljava/lang/Object;
@0.99.0
+#barrierReleasedByMember(Ljava/lang/String;[B)V
+#waitForCompletedWithRet()Ljava/util/HashMap;
+#isCompleted()Z
-#barrierReleasedByMember(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)V
+#getZkController()Lorg/apache/hadoop/hbase/procedure/ZKProcedureUtil;
+#getMemberName()Ljava/lang/String;
+#sendMemberAcquired(Lorg/apache/hadoop/hbase/procedure/Subprocedure;)V
+#sendMemberCompleted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;)V
+#sendMemberAborted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#start(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;)V
+#close()V
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)V
+#start(Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure/ProcedureMember;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)V
-#start(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;)V
@0.99.0
+#sendMemberCompleted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;[B)V
-#sendMemberCompleted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/quotas/OperationQuota
@1.1.0
+#checkQuota(III)V
+#close()V
+#addGetResult(Lorg/apache/hadoop/hbase/client/Result;)V
+#addScanResult(Ljava/util/List;)V
+#addMutation(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getReadAvailable()J
+#getWriteAvailable()J
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.1.8
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.0
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.4
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@2.4.3
-#getWriteAvailable()J

+###org/apache/hadoop/hbase/quotas/policies/NoInsertsViolationPolicyEnforcement
@2.0.0-alpha-1
+#<init>()V
+#enable()V
+#disable()V
+#check(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getPolicyName()Ljava/lang/String;

+###org/apache/hadoop/hbase/quotas/QuotaObserverChore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#getTableQuotaSnapshots()Ljava/util/Map;
+#getNamespaceQuotaSnapshots()Ljava/util/Map;

+###org/apache/hadoop/hbase/quotas/SpaceQuotaSnapshotNotifierFactory
@2.0.0-alpha-1
+#getInstance()Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshotNotifierFactory;
+#create(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshotNotifier;

+###org/apache/hadoop/hbase/regionserver/AbstractMemStore
@2.0.0-alpha-1
+#addToScanners(Ljava/util/List;JJLjava/util/List;)J
+#updateLowestUnflushedSequenceIdInWAL(Z)V
+#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#timeOfOldestEdit()J
+#clearSnapshot(J)V
+#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#toString()Ljava/lang/String;
@2.0.0-alpha4
+#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
-#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
@2.1.0
+#addToScanners(Ljava/util/List;JLjava/util/List;)V
-#addToScanners(Ljava/util/List;JJLjava/util/List;)J

+###org/apache/hadoop/hbase/regionserver/ChangedReadersObserver
@0.95.0
+#updateReaders()V
@1.3.0
+#updateReaders(Ljava/util/List;)V
-#updateReaders()V
@1.3.2
+#getReadPoint()J
+#updateReaders(Ljava/util/List;Ljava/util/List;)V
-#updateReaders(Ljava/util/List;)V

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionProgress
@0.95.0
+#<init>(J)V
+#getProgressPct()F
@0.95.2-hadoop1
+#cancel()V
+#complete()V
@0.98.6-hadoop1
+#getTotalCompactingKvs()J
+#getCurrentCompactedKvs()J
+#getTotalCompactedSize()J
+#toString()Ljava/lang/String;
@2.0.0-beta-2
+#getTotalCompactingKVs()J
-#getTotalCompactingKvs()J

+###org/apache/hadoop/hbase/regionserver/compactions/DateTieredCompactionPolicy
@0.98.18-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
+#isMajorCompaction(Ljava/util/Collection;)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;J)Z
+#applyCompactionPolicy(Ljava/util/ArrayList;ZZ)Ljava/util/ArrayList;
+#applyCompactionPolicy(Ljava/util/ArrayList;ZZJ)Ljava/util/ArrayList;
@0.98.19-hadoop1
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
+#selectMajorCompaction(Ljava/util/ArrayList;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#selectMinorCompaction(Ljava/util/ArrayList;ZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#isMajorCompaction(Ljava/util/Collection;)Z
-#needsCompaction(Ljava/util/Collection;Ljava/util/List;J)Z
-#applyCompactionPolicy(Ljava/util/ArrayList;ZZ)Ljava/util/ArrayList;
-#applyCompactionPolicy(Ljava/util/ArrayList;ZZJ)Ljava/util/ArrayList;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/DateTieredCompactionPolicy

+###org/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;Lorg/apache/hadoop/hbase/regionserver/StripeStoreConfig;)V
+#preSelectFilesForCoprocessor(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;Ljava/util/List;)Ljava/util/List;
+#createEmptyRequest(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeCompactionRequest;
+#selectFlush(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
+#selectCompaction(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;Ljava/util/List;Z)Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeCompactionRequest;
+#needsCompactions(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;Ljava/util/List;)Z
+#isMajorCompaction(Ljava/util/Collection;)Z
+#throttleCompaction(J)Z
+#getTotalFileSize(Ljava/util/Collection;)J
@0.98.19-hadoop1
+#selectFlush(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#selectFlush(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
-#isMajorCompaction(Ljava/util/Collection;)Z
@0.99.0
+#selectFlush(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
+#isMajorCompaction(Ljava/util/Collection;)Z
-#selectFlush(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
-#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
@1.3.0
+#selectFlush(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#selectFlush(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
-#isMajorCompaction(Ljava/util/Collection;)Z
@2.0.0-alpha-1
+#selectFlush(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
-#selectFlush(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;I)Lorg/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest;
@2.0.0-alpha4
+#createEmptyRequest(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;)Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeCompactionRequest;
-#createEmptyRequest(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeInformationProvider;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeCompactionRequest;

+###org/apache/hadoop/hbase/regionserver/DateTieredMultiFileWriter
@0.98.19-hadoop1
+#<init>(Ljava/util/List;Z)V
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.99.0
-###org/apache/hadoop/hbase/regionserver/DateTieredMultiFileWriter

+###org/apache/hadoop/hbase/regionserver/FlushPolicy
@1.1.0
+#<init>()V
+#selectStoresToFlush()Ljava/util/Collection;

+###org/apache/hadoop/hbase/regionserver/handler/CloseMetaHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZI)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZI)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V

+###org/apache/hadoop/hbase/regionserver/handler/ParallelSeekHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/KeyValue;JLjava/util/concurrent/CountDownLatch;)V
+#process()V
+#getErr()Ljava/lang/Throwable;
+#setErr(Ljava/lang/Throwable;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/Cell;JLjava/util/concurrent/CountDownLatch;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/KeyValue;JLjava/util/concurrent/CountDownLatch;)V

+###org/apache/hadoop/hbase/regionserver/HRegionFileSystem
@0.95.0
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getTableDir()Lorg/apache/hadoop/fs/Path;
+#getRegionDir()Lorg/apache/hadoop/fs/Path;
+#getStoreFiles([B)Ljava/util/Collection;
+#getStoreFiles(Ljava/lang/String;)Ljava/util/Collection;
+#hasReferences(Ljava/lang/String;)Z
+#hasReferences(Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
+#getFamilies()Ljava/util/Collection;
+#deleteFamily(Ljava/lang/String;)V
+#createTempName()Lorg/apache/hadoop/fs/Path;
+#createTempName(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#commitStoreFile(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#removeStoreFile(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
+#removeStoreFiles(Ljava/lang/String;Ljava/util/Collection;)V
+#loadRegionInfoFileContent(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HRegionInfo;
+#createRegionOnFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
+#openRegionFromFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Z)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
+#deleteRegionFromFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.98.6-hadoop1
+#getStoreDir(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getStoreFiles(Ljava/lang/String;Z)Ljava/util/Collection;
@1.1.0
+#getRegionInfoForFS()Lorg/apache/hadoop/hbase/HRegionInfo;
@1.4.0
+#getStoreFilesLocatedStatus(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;Ljava/lang/String;Z)Ljava/util/List;
@1.5.0
+#setStoragePolicy(Ljava/lang/String;Ljava/lang/String;)V
+#getStoragePolicyName(Ljava/lang/String;)Ljava/lang/String;
@2.0.0-alpha-1
+#getSplitsDir(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
+#commitDaughterRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
+#createSplitsDir()V
+#splitStoreFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/StoreFile;[BZLorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;)Lorg/apache/hadoop/fs/Path;
+#getMergesDir()Lorg/apache/hadoop/fs/Path;
+#cleanupMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#createMergesDir()V
+#mergeStoreFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#commitMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha3
+#hasReferences(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Z
-#hasReferences(Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
@2.0.0-alpha4
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getRegionInfoForFS()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getSplitsDir(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#commitDaughterRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#splitStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;[BZLorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;)Lorg/apache/hadoop/fs/Path;
+#cleanupMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#mergeStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#commitMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#loadRegionInfoFileContent(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/client/RegionInfo;
+#createRegionOnFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
+#openRegionFromFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
+#deleteRegionFromFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#getRegionInfoForFS()Lorg/apache/hadoop/hbase/HRegionInfo;
-#getSplitsDir(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
-#commitDaughterRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
-#splitStoreFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/StoreFile;[BZLorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;)Lorg/apache/hadoop/fs/Path;
-#cleanupMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#mergeStoreFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#commitMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#loadRegionInfoFileContent(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#createRegionOnFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
-#openRegionFromFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Z)Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
-#deleteRegionFromFileSystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.6
+#createSplitsDir(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#createSplitsDir()V
@2.1.0
+#createSplitsDir()V
-#createSplitsDir(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.6
+#createSplitsDir(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#createSplitsDir()V
@2.2.0
+#createSplitsDir()V
-#createSplitsDir(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.1
+#createSplitsDir(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#createSplitsDir()V
@2.3.6
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)Lorg/apache/hadoop/fs/Path;
@2.4.0
-#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;
-#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)Lorg/apache/hadoop/fs/Path;
@2.4.3
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)Lorg/apache/hadoop/fs/Path;
@2.5.0
+#getTempDir()Lorg/apache/hadoop/fs/Path;
+#setStoragePolicy(Ljava/lang/String;)V
+#getStoreFiles(Ljava/lang/String;)Ljava/util/List;
+#getStoreFiles(Ljava/lang/String;Z)Ljava/util/List;
+#commitDaughterRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/fs/Path;
+#mergeStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;)Lorg/apache/hadoop/fs/Path;
+#commitMergedRegion(Ljava/util/List;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
-#getStoreFiles([B)Ljava/util/Collection;
-#getStoreFiles(Ljava/lang/String;)Ljava/util/Collection;
-#getStoreFiles(Ljava/lang/String;Z)Ljava/util/Collection;
-#commitDaughterRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getMergesDir()Lorg/apache/hadoop/fs/Path;
-#createMergesDir()V
-#mergeStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#commitMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@3.0.0-alpha-1
+#getStoreFiles([B)Ljava/util/Collection;
+#getStoreFiles(Ljava/lang/String;)Ljava/util/Collection;
+#getStoreFiles(Ljava/lang/String;Z)Ljava/util/Collection;
+#commitDaughterRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getMergesDir()Lorg/apache/hadoop/fs/Path;
+#createMergesDir()V
+#mergeStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#commitMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#getTempDir()Lorg/apache/hadoop/fs/Path;
-#setStoragePolicy(Ljava/lang/String;)V
-#getStoreFiles(Ljava/lang/String;)Ljava/util/List;
-#getStoreFiles(Ljava/lang/String;Z)Ljava/util/List;
-#commitDaughterRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/fs/Path;
-#mergeStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;)Lorg/apache/hadoop/fs/Path;
-#commitMergedRegion(Ljava/util/List;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
@3.0.0-alpha-2
+#mergeStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;)Lorg/apache/hadoop/fs/Path;
+#commitMergedRegion()V
-#getMergesDir()Lorg/apache/hadoop/fs/Path;
-#createMergesDir()V
-#mergeStoreFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#commitMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@3.0.0-alpha-3
+#getTempDir()Lorg/apache/hadoop/fs/Path;
+#getStoreFiles(Ljava/lang/String;)Ljava/util/List;
+#getStoreFiles(Ljava/lang/String;Z)Ljava/util/List;
+#commitDaughterRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/fs/Path;
+#commitMergedRegion(Ljava/util/List;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
-#getStoreFiles([B)Ljava/util/Collection;
-#getStoreFiles(Ljava/lang/String;)Ljava/util/Collection;
-#getStoreFiles(Ljava/lang/String;Z)Ljava/util/Collection;
-#commitDaughterRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#commitMergedRegion()V

+###org/apache/hadoop/hbase/regionserver/InternalScan
@0.98.10-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/Get;)V
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;)V
+#checkOnlyMemStore()V
+#checkOnlyStoreFiles()V
+#isCheckOnlyMemStore()Z
+#isCheckOnlyStoreFiles()Z
@0.99.0
-###org/apache/hadoop/hbase/regionserver/InternalScan

+###org/apache/hadoop/hbase/regionserver/KeyPrefixRegionSplitPolicy
@0.95.0
+#<init>()V
@2.4.3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/LastSequenceId
@0.95.0
+#getLastSequenceId([B)J
@1.1.0
+#getLastSequenceId([B)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getLastSequenceId([B)J
@2.0.0-alpha-1
+#getLastSequenceId([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getLastSequenceId([B)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;

+###org/apache/hadoop/hbase/regionserver/MemStoreCompactorSegmentsIterator
@2.0.0-alpha-1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/CellComparator;ILorg/apache/hadoop/hbase/regionserver/Store;)V
+#hasNext()Z
+#next()Lorg/apache/hadoop/hbase/Cell;
+#close()V
+#remove()V
+#next()Ljava/lang/Object;
@2.0.0-alpha4
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/CellComparator;ILorg/apache/hadoop/hbase/regionserver/HStore;)V
-#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/CellComparator;ILorg/apache/hadoop/hbase/regionserver/Store;)V

+###org/apache/hadoop/hbase/regionserver/MemStoreMergerSegmentsIterator
@2.0.0-alpha-1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/CellComparator;I)V
+#hasNext()Z
+#next()Lorg/apache/hadoop/hbase/Cell;
+#close()V
+#remove()V
+#next()Ljava/lang/Object;

+###org/apache/hadoop/hbase/regionserver/MemStoreSnapshot
@0.99.0
+#<init>(JIJLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)V
+#getId()J
+#getCellsCount()I
+#getSize()J
+#getTimeRangeTracker()Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#getScanner()Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
@1.2.0
+#<init>(JIJLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Z)V
+#isTagsPresent()Z
-#<init>(JIJLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)V
@2.0.0-alpha-1
+#<init>(JLorg/apache/hadoop/hbase/regionserver/ImmutableSegment;)V
+#getDataSize()J
+#getHeapSize()J
+#getScanners()Ljava/util/List;
-#<init>(JIJLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Z)V
-#getSize()J
-#getScanner()Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
@2.0.0-beta-2
+#getMemStoreSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#close()V
-#getHeapSize()J
@2.4.10
-#close()V
@3.0.0-alpha-1
+#close()V
@3.0.0-alpha-2
-#close()V

+###org/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl$RegionServerMetricsWrapperRunnable
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapperImpl;)V
+#run()V

+###org/apache/hadoop/hbase/regionserver/MutableSegment
@2.0.0-alpha-1
+#add(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#upsert(Lorg/apache/hadoop/hbase/Cell;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
+#getMinTimestamp()J
@2.0.0-alpha3
+#shouldSeek(Lorg/apache/hadoop/hbase/io/TimeRange;J)Z
-#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
@2.0.0-alpha4
+#add(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#upsert(Lorg/apache/hadoop/hbase/Cell;JLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
-#add(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#upsert(Lorg/apache/hadoop/hbase/Cell;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#shouldSeek(Lorg/apache/hadoop/hbase/io/TimeRange;J)Z
-#getMinTimestamp()J
@2.2.0
+#add(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;Z)V
+#upsert(Lorg/apache/hadoop/hbase/Cell;JLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;Z)V
+#setInMemoryFlushed()Z
-#add(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
-#upsert(Lorg/apache/hadoop/hbase/Cell;JLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V

+###org/apache/hadoop/hbase/regionserver/NoOpHeapMemoryTuner
@0.99.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#tune(Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager$TunerContext;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager$TunerResult;
@2.1.0
-###org/apache/hadoop/hbase/regionserver/NoOpHeapMemoryTuner

+###org/apache/hadoop/hbase/regionserver/querymatcher/CompactionScanQueryMatcher
@1.4.0
+#hasNullColumnInQuery()Z
+#isUserScan()Z
+#moreRowsMayExistAfter(Lorg/apache/hadoop/hbase/Cell;)Z
+#getFilter()Lorg/apache/hadoop/hbase/filter/Filter;
+#getNextKeyHint(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#create(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/CompactionScanQueryMatcher;
@2.0.0-alpha-1
+#beforeShipped()V

+###org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher
@1.4.0
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#getStartKey()Lorg/apache/hadoop/hbase/Cell;
+#hasNullColumnInQuery()Z
+#currentRow()Lorg/apache/hadoop/hbase/Cell;
+#clearCurrentRow()V
+#setToNewRow(Lorg/apache/hadoop/hbase/Cell;)V
+#isUserScan()Z
+#moreRowsMayExistAfter(Lorg/apache/hadoop/hbase/Cell;)Z
+#getKeyForNextColumn(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#compareKeyForNextRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareKeyForNextColumn(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#getFilter()Lorg/apache/hadoop/hbase/filter/Filter;
+#getNextKeyHint(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha-1
+#beforeShipped()V

+###org/apache/hadoop/hbase/regionserver/ReplicationService
@0.95.0
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#startReplicationService()V
+#stopReplicationService()V
@0.98.11-hadoop1
+#refreshAndGetReplicationLoad()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationLoad;
@0.99.0
-#refreshAndGetReplicationLoad()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationLoad;
@1.0.0
+#refreshAndGetReplicationLoad()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationLoad;
@2.0.0-alpha3
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
-#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-beta-2
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WALProvider;)V
-#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
@2.4.0
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WALFactory;)V
-#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WALProvider;)V

+###org/apache/hadoop/hbase/regionserver/ScannerContext$LimitScope
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/ScannerContext$LimitScope;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$LimitScope;

+###org/apache/hadoop/hbase/regionserver/SequenceId
@0.99.0
+#getSequenceId()J

+###org/apache/hadoop/hbase/regionserver/ServerNonceManager
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#setConflictWaitIterationMs(I)V
+#startOperation(JJLorg/apache/hadoop/hbase/Stoppable;)Z
+#endOperation(JJZ)V
+#reportOperationFromWal(JJJ)V
+#createCleanupChore(Lorg/apache/hadoop/hbase/Stoppable;)Lorg/apache/hadoop/hbase/Chore;
@1.1.0
+#createCleanupScheduledChore(Lorg/apache/hadoop/hbase/Stoppable;)Lorg/apache/hadoop/hbase/ScheduledChore;
-#createCleanupChore(Lorg/apache/hadoop/hbase/Stoppable;)Lorg/apache/hadoop/hbase/Chore;
@1.3.0
+#addMvccToOperationContext(JJJ)V
+#getMvccFromOperationContext(JJ)J

+###org/apache/hadoop/hbase/regionserver/Store
@0.95.0
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
+#getStorefiles()Ljava/util/Collection;
+#close()Ljava/util/Collection;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#getScanners(ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
+#getScanInfo()Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#upsert(Ljava/lang/Iterable;J)J
+#add(Lorg/apache/hadoop/hbase/KeyValue;)J
+#rollback(Lorg/apache/hadoop/hbase/KeyValue;)V
+#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/KeyValue;
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#throttleCompaction(J)Z
+#getCompactionProgress()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionProgress;
+#requestCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
+#cancelRequestedCompaction(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;
+#isMajorCompaction()Z
+#triggerMajorCompaction()V
+#needsCompaction()Z
+#getCompactPriority()I
+#getStoreFlusher(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlusher;
+#canSplit()Z
+#getSplitPoint()[B
+#assertBulkLoadHFileOk(Lorg/apache/hadoop/fs/Path;)V
+#bulkLoadHFile(Ljava/lang/String;J)V
+#hasReferences()Z
+#getMemStoreSize()J
+#getFamily()Lorg/apache/hadoop/hbase/HColumnDescriptor;
+#getMaxMemstoreTS()J
+#getDataBlockEncoder()Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
+#getLastCompactSize()J
+#getSize()J
+#getStorefilesCount()I
+#getStoreSizeUncompressed()J
+#getStorefilesSize()J
+#getStorefilesIndexSize()J
+#getTotalStaticIndexSize()J
+#getTotalStaticBloomSize()J
+#getCacheConfig()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;
+#areWritesEnabled()Z
+#getSmallestReadPoint()J
+#getColumnFamilyName()Ljava/lang/String;
+#getTableName()Ljava/lang/String;
+#addChangedReaderObserver(Lorg/apache/hadoop/hbase/regionserver/ChangedReadersObserver;)V
+#deleteChangedReaderObserver(Lorg/apache/hadoop/hbase/regionserver/ChangedReadersObserver;)V
+#hasTooManyStoreFiles()Z
@0.95.1-hadoop1
+#timeOfOldestEdit()J
+#createFlushContext(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlushContext;
+#completeCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)V
-#getStoreFlusher(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlusher;
@0.95.2-hadoop1
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#getTableName()Ljava/lang/String;
@0.96.0-hadoop1
+#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
-#getScanners(ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
@0.96.2-hadoop1
+#getFlushableSize()J
@0.98.0-hadoop1
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJ)Ljava/util/List;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#getFlushableSize()J
@0.98.1-hadoop1
+#getFlushableSize()J
@0.98.6-hadoop1
+#getFlushedCellsCount()J
+#getFlushedCellsSize()J
+#getCompactedCellsCount()J
+#getCompactedCellsSize()J
+#getMajorCompactedCellsCount()J
+#getMajorCompactedCellsSize()J
@0.98.11-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
+#getCompactionPressure()D
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;
@0.98.15-hadoop1
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@0.98.16-hadoop1
*#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;[deprecated]
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
*#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;[deprecated]
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@0.98.18-hadoop1
+#getMaxStoreFileAge()J
+#getMinStoreFileAge()J
+#getAvgStoreFileAge()J
+#getNumReferenceFiles()J
+#getNumHFiles()J
@0.98.19-hadoop1
+#getMaxSequenceId()J
@0.98.21-hadoop1
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@0.99.0
+#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
+#rollback(Lorg/apache/hadoop/hbase/Cell;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;
+#refreshStoreFiles()V
-#add(Lorg/apache/hadoop/hbase/KeyValue;)J
-#rollback(Lorg/apache/hadoop/hbase/KeyValue;)V
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;[deprecated]
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#getMaxSequenceId()J
-#getMaxStoreFileAge()J
-#getMinStoreFileAge()J
-#getAvgStoreFileAge()J
-#getNumReferenceFiles()J
-#getNumHFiles()J
-#getCompactionPressure()D
@0.99.1
+#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/Cell;
-#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/KeyValue;
@1.0.3
*#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;[deprecated]
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
*#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;[deprecated]
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
+#replayCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;ZZ)V
+#bulkLoadHFile(Ljava/lang/String;J)Lorg/apache/hadoop/fs/Path;
+#getSnapshotSize()J
+#getMaxSequenceId()J
+#getCompactionPressure()D
+#refreshStoreFiles(Ljava/util/Collection;)V
+#bulkLoadHFile(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)V
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;[deprecated]
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#completeCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)V
-#bulkLoadHFile(Ljava/lang/String;J)V
@1.1.3
*#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;[deprecated]
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
*#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;[deprecated]
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.2.0
+#add(Lorg/apache/hadoop/hbase/Cell;)J
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#isPrimaryReplicaStore()Z
-#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
@1.3.0
+#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;[deprecated]
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#getMaxStoreFileAge()J
+#getMinStoreFileAge()J
+#getAvgStoreFileAge()J
+#getNumReferenceFiles()J
+#getNumHFiles()J
+#getFlushedOutputFileSize()J
+#closeAndArchiveCompactedFiles()V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;[deprecated]
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.3.3
+#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
-#upsert(Ljava/lang/Iterable;J)J
@1.4.0
+#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJ)Ljava/util/List;
+#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
+#add(Ljava/lang/Iterable;)J
+#bulkLoadHFile([BLjava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJ)Ljava/util/List;
-#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
-#bulkLoadHFile(Ljava/lang/String;J)Lorg/apache/hadoop/fs/Path;
@1.7.0
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;J)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@2.0.0-alpha-1
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getScanners(ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJ)Ljava/util/List;
+#getScanners(Ljava/util/List;ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJZ)Ljava/util/List;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
*#getMemStoreSize()J[deprecated]
+#getSizeOfMemStore()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
*#getFlushableSize()J[deprecated]
+#getSizeToFlush()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
*#getSnapshotSize()J[deprecated]
+#getSizeOfSnapshot()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#isSloppyMemstore()Z
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
-#add(Lorg/apache/hadoop/hbase/Cell;)J
-#add(Ljava/lang/Iterable;)J
-#rollback(Lorg/apache/hadoop/hbase/Cell;)V
-#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/Cell;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;J)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#replayCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;ZZ)V
-#assertBulkLoadHFileOk(Lorg/apache/hadoop/fs/Path;)V
-#bulkLoadHFile([BLjava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#bulkLoadHFile(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)V
@2.0.0-alpha2
+#getCompactedFiles()Ljava/util/Collection;
+#recreateScanners(Ljava/util/List;ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJZ)Ljava/util/List;
+#getColumnFamilyDescriptor()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
+#getCompactedFilesCount()I
+#getHFilesSize()J
-#getFamily()Lorg/apache/hadoop/hbase/HColumnDescriptor;
@2.0.0-alpha3
+#requestCompaction()Ljava/util/Optional;
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/Optional;
-#requestCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;[deprecated]
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@2.0.0-alpha4
+#shouldPerformMajorCompaction()Z
+#getMemStoreSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getMaxSequenceId()Ljava/util/OptionalLong;
+#getMaxMemStoreTS()Ljava/util/OptionalLong;
+#getMaxStoreFileAge()Ljava/util/OptionalLong;
+#getMinStoreFileAge()Ljava/util/OptionalLong;
+#getAvgStoreFileAge()Ljava/util/OptionalDouble;
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#isSloppyMemStore()Z
-#close()Ljava/util/Collection;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJ)Ljava/util/List;
-#getScanners(ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJ)Ljava/util/List;
-#recreateScanners(Ljava/util/List;ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJZ)Ljava/util/List;
-#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
-#getScanners(Ljava/util/List;ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJZ)Ljava/util/List;
-#getScanInfo()Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#throttleCompaction(J)Z
-#getCompactionProgress()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionProgress;
-#requestCompaction()Ljava/util/Optional;
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/Optional;
-#cancelRequestedCompaction(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;[deprecated]
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#isMajorCompaction()Z
-#triggerMajorCompaction()V
-#createFlushContext(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlushContext;
-#getSplitPoint()[B
-#getMemStoreSize()J[deprecated]
-#getSizeOfMemStore()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getFlushableSize()J[deprecated]
-#getSizeToFlush()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getSnapshotSize()J[deprecated]
-#getSizeOfSnapshot()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getMaxSequenceId()J
-#getMaxMemstoreTS()J
-#getDataBlockEncoder()Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
-#getMaxStoreFileAge()J
-#getMinStoreFileAge()J
-#getAvgStoreFileAge()J
-#getCacheConfig()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;
-#addChangedReaderObserver(Lorg/apache/hadoop/hbase/regionserver/ChangedReadersObserver;)V
-#deleteChangedReaderObserver(Lorg/apache/hadoop/hbase/regionserver/ChangedReadersObserver;)V
-#refreshStoreFiles(Ljava/util/Collection;)V
-#closeAndArchiveCompactedFiles()V
-#isSloppyMemstore()Z
@2.0.0-beta-1
+#getStorefilesRootLevelIndexSize()J
-#getStorefilesIndexSize()J
@2.1.0
+#getCurrentParallelPutCount()I
@2.2.6
+#getMemstoreOnlyRowReadsCount()J
+#getMixedRowReadsCount()J
@2.3.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.0
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.5.0
+#getBloomFilterRequestsCount()J
+#getBloomFilterNegativeResultsCount()J
+#getBloomFilterEligibleRequestsCount()J
@3.0.0-alpha-1
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#getBloomFilterRequestsCount()J
-#getBloomFilterNegativeResultsCount()J
-#getBloomFilterEligibleRequestsCount()J
@3.0.0-alpha-2
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/hbase/regionserver/StoreFileScanner
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;Z)V
+#getScannersForStoreFiles(Ljava/util/Collection;ZZ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;)Ljava/util/List;
+#toString()Ljava/lang/String;
+#peek()Lorg/apache/hadoop/hbase/KeyValue;
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#close()V
+#seekAtOrAfter(Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;Lorg/apache/hadoop/hbase/KeyValue;)Z
+#getSequenceID()J
+#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
+#realSeekDone()Z
+#enforceSeek()V
+#setScanQueryMatcher(Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;)V
+#isFileScanner()Z
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
@0.96.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;ZZ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;Z)V
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;ZZJ)V
+#getScannersForStoreFiles(Ljava/util/Collection;ZZJ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZJ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;J)Ljava/util/List;
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#seekToLastRow()Z
+#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;ZZ)V
-#getScannersForStoreFiles(Ljava/util/Collection;ZZ)Ljava/util/List;
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZ)Ljava/util/List;
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;)Ljava/util/List;
@0.98.12-hadoop1
+#getNextIndexedKey()[B
@0.98.15-hadoop1
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZZJ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;J)Ljava/util/List;
@0.99.0
+#peek()Lorg/apache/hadoop/hbase/Cell;
+#next()Lorg/apache/hadoop/hbase/Cell;
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekAtOrAfter(Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;Lorg/apache/hadoop/hbase/Cell;)Z
+#requestSeek(Lorg/apache/hadoop/hbase/Cell;ZZ)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZZJ)Ljava/util/List;
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;J)Ljava/util/List;
-#peek()Lorg/apache/hadoop/hbase/KeyValue;
-#next()Lorg/apache/hadoop/hbase/KeyValue;
-#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#seekAtOrAfter(Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;Lorg/apache/hadoop/hbase/KeyValue;)Z
-#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
-#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#getNextIndexedKey()[B
@1.0.1
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
@1.2.0
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZZJ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;JZ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;J)Ljava/util/List;
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZJ)Ljava/util/List;
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;J)Ljava/util/List;
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;ZZJJZ)V
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;JZ)Ljava/util/List;
+#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;J)Ljava/util/List;
+#getScannerOrder()J
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;ZZJ)V
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;JZ)Ljava/util/List;
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;J)Ljava/util/List;
-#getSequenceID()J
-#setScanQueryMatcher(Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;ZZJJZ)V
+#getScannersForCompaction(Ljava/util/Collection;ZJ)Ljava/util/List;
+#getFilePath()Lorg/apache/hadoop/fs/Path;
+#shipped()V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;ZZJJZ)V
-#getScannersForStoreFiles(Ljava/util/Collection;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;JZ)Ljava/util/List;
@2.0.0-alpha4
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/HStore;J)Z
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
@2.3.0
-#getScannersForStoreFiles(Ljava/util/Collection;ZZJ)Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$SizeMultiWriter
@0.98.0-hadoop1
+#<init>(IJ[B[B)V
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ[B[B)V
-#<init>(IJ[B[B)V
@0.99.0
+#<init>(IJ[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ[B[B)V
@0.99.1
+#append(Lorg/apache/hadoop/hbase/Cell;)V
-#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ[B[B)V
-#<init>(IJ[B[B)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;IJ[B[B)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;IJ[B[B)V

+###org/apache/hadoop/hbase/regionserver/throttle/ThroughputController
@1.3.0
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start(Ljava/lang/String;)V
+#control(Ljava/lang/String;J)J
+#finish(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/regionserver/VersionedSegmentsList
@2.0.0-alpha-1
+#<init>(Ljava/util/List;J)V
+#getStoreSegments()Ljava/util/List;
+#getVersion()J
+#getNumOfCells()I
+#getNumOfSegments()I

+###org/apache/hadoop/hbase/regionserver/wal/Compressor
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/regionserver/wal/SecureProtobufLogWriter
@0.98.0-hadoop1
+#<init>()V

+###org/apache/hadoop/hbase/replication/BaseWALEntryFilter
@1.1.0
+#<init>()V
@2.1.0
-###org/apache/hadoop/hbase/replication/BaseWALEntryFilter

+###org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint$PeerRegionServerListener
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/replication/HBaseReplicationEndpoint;)V
+#nodeChildrenChanged(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/replication/regionserver/DefaultSourceFSConfigurationProvider
@1.3.0
+#<init>()V
+#getConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint$Replicator
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint;Ljava/util/List;I)V
+#call()Ljava/lang/Integer;
+#call()Ljava/lang/Object;
@2.1.0
-###org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint$Replicator

+###org/apache/hadoop/hbase/replication/regionserver/RegionReplicaReplicationEndpoint
@1.1.0
+#<init>()V
+#getWALEntryfilter()Lorg/apache/hadoop/hbase/replication/WALEntryFilter;
+#init(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$Context;)V
+#replicate(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;)Z
+#canReplicateToSameCluster()Z
@2.0.0-beta-1
-#getWALEntryfilter()Lorg/apache/hadoop/hbase/replication/WALEntryFilter;
@3.0.0-alpha-3
-###org/apache/hadoop/hbase/replication/regionserver/RegionReplicaReplicationEndpoint

+###org/apache/hadoop/hbase/replication/ReplicationEndpoint$Context
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getFilesystem()Lorg/apache/hadoop/fs/FileSystem;
+#getClusterId()Ljava/util/UUID;
+#getPeerId()Ljava/lang/String;
+#getPeerConfig()Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
+#getReplicationPeer()Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
+#getMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@1.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;)V
+#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
+#getAbortable()Lorg/apache/hadoop/hbase/Abortable;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
+#getLocalConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
-#getLocalConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
+#getLocalConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V
+#getServer()Lorg/apache/hadoop/hbase/Server;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Lorg/apache/hadoop/hbase/TableDescriptors;Lorg/apache/hadoop/hbase/Abortable;)V

+###org/apache/hadoop/hbase/replication/WALCellFilter
@1.3.0
+#filterCell(Lorg/apache/hadoop/hbase/wal/WAL$Entry;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/security/access/TableAuthManager
@0.95.0
+#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
+#refreshCacheFromWritable([B[B)V
+#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorize(Lorg/apache/hadoop/hbase/security/User;[BLorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Ljava/lang/String;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Ljava/lang/String;[B[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeGroup(Ljava/lang/String;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorize(Lorg/apache/hadoop/hbase/security/User;[B[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorize(Lorg/apache/hadoop/hbase/security/User;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#matchPermission(Lorg/apache/hadoop/hbase/security/User;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#matchPermission(Lorg/apache/hadoop/hbase/security/User;[B[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#remove([B)V
+#setUserPermissions(Ljava/lang/String;[BLjava/util/List;)V
+#setGroupPermissions(Ljava/lang/String;[BLjava/util/List;)V
+#writeToZooKeeper([BLorg/apache/hadoop/hbase/security/access/TableAuthManager$PermissionCache;)V
+#get(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
@0.95.2-hadoop1
+#refreshTableCacheFromWritable(Lorg/apache/hadoop/hbase/TableName;[B)V
+#refreshNamespaceCacheFromWritable(Ljava/lang/String;[B)V
+#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorize(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#matchPermission(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#matchPermission(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#removeNamespace([B)V
+#removeTable(Lorg/apache/hadoop/hbase/TableName;)V
+#setTableUserPermissions(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;)V
+#setTableGroupPermissions(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;)V
+#setNamespaceUserPermissions(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#setNamespaceGroupPermissions(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
+#writeTableToZooKeeper(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/TableAuthManager$PermissionCache;)V
+#writeNamespaceToZooKeeper(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/TableAuthManager$PermissionCache;)V
-#refreshCacheFromWritable([B[B)V
-#authorize(Lorg/apache/hadoop/hbase/security/User;[BLorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeUser(Ljava/lang/String;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeUser(Ljava/lang/String;[B[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeGroup(Ljava/lang/String;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorize(Lorg/apache/hadoop/hbase/security/User;[B[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorize(Lorg/apache/hadoop/hbase/security/User;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#matchPermission(Lorg/apache/hadoop/hbase/security/User;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#matchPermission(Lorg/apache/hadoop/hbase/security/User;[B[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#remove([B)V
-#setUserPermissions(Ljava/lang/String;[BLjava/util/List;)V
-#setGroupPermissions(Ljava/lang/String;[BLjava/util/List;)V
-#writeToZooKeeper([BLorg/apache/hadoop/hbase/security/access/TableAuthManager$PermissionCache;)V
@0.98.0-hadoop1
+#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#getMTime()J
-#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeUser(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeUser(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeUser(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@0.98.2-hadoop1
+#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorize(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@0.98.10-hadoop1
+#userHasAccess(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#groupHasAccess(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#hasAccess(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@0.98.12-hadoop1
+#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@0.98.13-hadoop1
-#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@0.98.15-hadoop1
+#close()V
+#getOrCreate(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
+#release(Lorg/apache/hadoop/hbase/security/access/TableAuthManager;)V
-#get(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
@0.99.0
+#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#get(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
-#close()V
-#userHasAccess(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#groupHasAccess(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#hasAccess(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#getOrCreate(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
-#release(Lorg/apache/hadoop/hbase/security/access/TableAuthManager;)V
@1.0.0
+#userHasAccess(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#groupHasAccess(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#hasAccess(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@1.0.1
+#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
-#authorizeGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@1.0.2
-#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@1.1.0
+#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@1.1.1
-#authorizeUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
@1.3.0
+#close()V
+#getOrCreate(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
+#release(Lorg/apache/hadoop/hbase/security/access/TableAuthManager;)V
-#get(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
@1.3.5
+#getTotalRefCount()I
@1.4.0
-#getTotalRefCount()I
@1.4.1
+#getTotalRefCount()I
@2.0.0-alpha-1
-#getTotalRefCount()I
@2.0.0-beta-1
+#getOrCreate(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
+#getTotalRefCount()I
-#getOrCreate(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
@2.2.0
-###org/apache/hadoop/hbase/security/access/TableAuthManager

+###org/apache/hadoop/hbase/security/token/TokenProvider
@0.95.0
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#getService()Lcom/google/protobuf/Service;
+#getAuthenticationToken(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$TokenRequest;Lcom/google/protobuf/RpcCallback;)V
+#whoami(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$WhoAmIRequest;Lcom/google/protobuf/RpcCallback;)V
@0.95.2-hadoop1
+#whoAmI(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$WhoAmIRequest;Lcom/google/protobuf/RpcCallback;)V
-#whoami(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$WhoAmIRequest;Lcom/google/protobuf/RpcCallback;)V
@0.96.0-hadoop1
+#getAuthenticationToken(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$GetAuthenticationTokenRequest;Lcom/google/protobuf/RpcCallback;)V
-#getAuthenticationToken(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$TokenRequest;Lcom/google/protobuf/RpcCallback;)V
@2.0.0-alpha4
+#getServices()Ljava/lang/Iterable;
-#getService()Lcom/google/protobuf/Service;
@3.0.0-alpha-1
+#getAuthenticationToken(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AuthenticationProtos$GetAuthenticationTokenRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
+#whoAmI(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AuthenticationProtos$WhoAmIRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
-#getAuthenticationToken(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$GetAuthenticationTokenRequest;Lcom/google/protobuf/RpcCallback;)V
-#whoAmI(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AuthenticationProtos$WhoAmIRequest;Lcom/google/protobuf/RpcCallback;)V

+###org/apache/hadoop/hbase/security/visibility/expression/LeafExpressionNode
@0.98.0-hadoop1
+#<init>(Ljava/lang/String;)V
+#getIdentifier()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#isSingleNode()Z
+#deepClone()Lorg/apache/hadoop/hbase/security/visibility/expression/LeafExpressionNode;
+#deepClone()Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;

+###org/apache/hadoop/hbase/security/visibility/ExpressionParser
@0.98.0-hadoop1
+#<init>()V
+#parse(Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;

+###org/apache/hadoop/hbase/security/visibility/VisibilityLabelServiceManager
@0.98.6-hadoop1
+#getInstance()Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelServiceManager;
+#getVisibilityLabelService(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelService;
+#getVisibilityLabelService()Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelService;

+###org/apache/hadoop/hbase/Server
@0.99.0
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
+#getShortCircuitConnection()Lorg/apache/hadoop/hbase/client/HConnection;
+#getMetaTableLocator()Lorg/apache/hadoop/hbase/zookeeper/MetaTableLocator;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getCoordinatedStateManager()Lorg/apache/hadoop/hbase/CoordinatedStateManager;
@0.99.2
+#getConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;
-#getShortCircuitConnection()Lorg/apache/hadoop/hbase/client/HConnection;
@1.1.0
+#getChoreService()Lorg/apache/hadoop/hbase/ChoreService;
@2.0.0-alpha-1
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
+#getClusterConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;
-#getConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;
@2.0.0-alpha4
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#isStopping()Z
@2.0.0-beta-1
+#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
+#createConnection(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Connection;
-#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
@2.2.0
-#getMetaTableLocator()Lorg/apache/hadoop/hbase/zookeeper/MetaTableLocator;
@3.0.0-alpha-1
+#getAsyncConnection()Lorg/apache/hadoop/hbase/client/AsyncConnection;
+#getAsyncClusterConnection()Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;
-#getClusterConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;

+###org/apache/hadoop/hbase/snapshot/CreateSnapshot
@0.98.10-hadoop1
+#<init>()V
+#main([Ljava/lang/String;)V
@0.99.0
-###org/apache/hadoop/hbase/snapshot/CreateSnapshot

+###org/apache/hadoop/hbase/SplitLogTask$Unassigned
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V

+###org/apache/hadoop/hbase/TableDescriptors
@0.95.0
+#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#get([B)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getAll()Ljava/util/Map;
+#add(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#remove(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.95.2-hadoop1
+#get(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getByNamespace(Ljava/lang/String;)Ljava/util/Map;
+#remove(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#get([B)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#remove(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.98.8-hadoop1
+#setCacheOn()V
+#setCacheOff()V
@0.99.0
-#setCacheOn()V
-#setCacheOff()V
@0.99.2
+#setCacheOn()V
+#setCacheOff()V
@1.7.0
+#getDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableDescriptor;
+#getAllDescriptors()Ljava/util/Map;
+#add(Lorg/apache/hadoop/hbase/TableDescriptor;)V
@1.7.1
-#getDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableDescriptor;
-#getAllDescriptors()Ljava/util/Map;
-#add(Lorg/apache/hadoop/hbase/TableDescriptor;)V
@2.0.0-alpha-1
+#getAllDescriptors()Ljava/util/Map;
@2.0.0-alpha3
+#get(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#add(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#remove(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
-#get(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#add(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#remove(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
@2.0.0-beta-2
-#getAllDescriptors()Ljava/util/Map;
@2.3.0
+#update(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#add(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.4.0
+#exists(Lorg/apache/hadoop/hbase/TableName;)Z
+#update(Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)V
-#setCacheOn()V
-#setCacheOff()V
@3.0.0-alpha-3
+#close()V

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl$ImplData
@0.95.2-hadoop1
+#<init>()V
+#setMaster(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getMaster()Lorg/apache/hadoop/hbase/master/HMaster;

+###org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl$ImplData
@0.95.0
+#<init>()V
+#setMaster(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getMaster()Lorg/apache/hadoop/hbase/master/HMaster;
+#setAdmin(Lorg/apache/hadoop/hbase/client/HBaseAdmin;)V
+#getAdmin()Lorg/apache/hadoop/hbase/client/HBaseAdmin;
+#setDeadServers(Ljava/util/Set;)V
+#getDeadServers()Ljava/util/Set;
+#getDeadServers__IsNotDefault()Z
+#setFilter(Ljava/lang/String;)V
+#getFilter()Ljava/lang/String;
+#getFilter__IsNotDefault()Z
+#setShowAppendWarning(Z)V
+#getShowAppendWarning()Z
+#getShowAppendWarning__IsNotDefault()Z
+#setCatalogJanitorEnabled(Z)V
+#getCatalogJanitorEnabled()Z
+#getCatalogJanitorEnabled__IsNotDefault()Z
+#setMetaLocation(Lorg/apache/hadoop/hbase/ServerName;)V
+#getMetaLocation()Lorg/apache/hadoop/hbase/ServerName;
+#getMetaLocation__IsNotDefault()Z
+#setFrags(Ljava/util/Map;)V
+#getFrags()Ljava/util/Map;
+#getFrags__IsNotDefault()Z
+#setFormat(Ljava/lang/String;)V
+#getFormat()Ljava/lang/String;
+#getFormat__IsNotDefault()Z
+#setServers(Ljava/util/List;)V
+#getServers()Ljava/util/List;
+#getServers__IsNotDefault()Z
@0.95.1-hadoop1
-#setShowAppendWarning(Z)V
-#getShowAppendWarning()Z
-#getShowAppendWarning__IsNotDefault()Z
@0.95.2-hadoop1
+#setAssignmentManager(Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;
+#getAssignmentManager__IsNotDefault()Z
+#setServerManager(Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#getServerManager()Lorg/apache/hadoop/hbase/master/ServerManager;
+#getServerManager__IsNotDefault()Z
@0.99.2
-#setAdmin(Lorg/apache/hadoop/hbase/client/HBaseAdmin;)V
-#getAdmin()Lorg/apache/hadoop/hbase/client/HBaseAdmin;
@2.0.0-alpha-1
+#setAssignmentManager(Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;)V
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;
-#setAssignmentManager(Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
-#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;

+###org/apache/hadoop/hbase/tmpl/master/RegionServerListTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/master/RegionServerListTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/RegionListTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/regionserver/RegionListTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/util/List;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/util/List;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/util/List;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;

+###org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@0.98.17-hadoop1
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
@0.99.0
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
@1.2.0
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
@2.3.0
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V

+###org/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType
@0.98.14-hadoop1
+#values()[Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;
@0.99.0
-###org/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType

+###org/apache/hadoop/hbase/tool/Canary$StdOutSink
@0.95.0
+#<init>()V
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#publishReadTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@0.95.2-hadoop1
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
@0.98.14-hadoop1
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@0.98.18-hadoop1
+#getReadFailureCount()J
+#incReadFailureCount()J
+#getWriteFailureCount()J
@0.98.22-hadoop1
+#updateReadFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
+#getReadFailures()Ljava/util/Map;
+#getWriteFailures()Ljava/util/Map;
+#updateWriteFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
@0.99.0
-#getReadFailureCount()J
-#incReadFailureCount()J
-#updateReadFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
-#getReadFailures()Ljava/util/Map;
-#getWriteFailures()Ljava/util/Map;
-#getWriteFailureCount()J
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
-#updateWriteFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
@1.2.0
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@1.2.1
+#getReadFailureCount()J
+#incReadFailureCount()J
+#getWriteFailureCount()J
@1.3.3
+#getReadFailures()Ljava/util/Map;
+#updateReadFailures(Ljava/lang/String;Ljava/lang/String;)V
+#incWriteFailureCount()J
+#getWriteFailures()Ljava/util/Map;
+#updateWriteFailures(Ljava/lang/String;Ljava/lang/String;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishReadTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@1.3.6
-###org/apache/hadoop/hbase/tool/Canary$StdOutSink

+###org/apache/hadoop/hbase/util/BloomFilterBase
@0.95.0
+#getKeyCount()J
+#getMaxKeys()J
+#getByteSize()J
+#createBloomKey([BII[BII)[B
+#getComparator()Lorg/apache/hadoop/io/RawComparator;
@0.96.0-hadoop1
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparator()Lorg/apache/hadoop/io/RawComparator;
@2.0.0-alpha-1
-#createBloomKey([BII[BII)[B
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;

+###org/apache/hadoop/hbase/util/CancelableProgressable
@0.95.0
+#progress()Z
@2.3.0
-###org/apache/hadoop/hbase/util/CancelableProgressable

+###org/apache/hadoop/hbase/util/CollectionBackedScanner
@0.95.0
+#<init>(Ljava/util/SortedSet;)V
+#<init>(Ljava/util/SortedSet;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#<init>(Ljava/util/List;)V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[Lorg/apache/hadoop/hbase/KeyValue;)V
+#peek()Lorg/apache/hadoop/hbase/KeyValue;
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#getSequenceID()J
+#close()V
@0.99.0
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#next()Lorg/apache/hadoop/hbase/Cell;
+#peek()Lorg/apache/hadoop/hbase/Cell;
-#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
@0.99.1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[Lorg/apache/hadoop/hbase/Cell;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[Lorg/apache/hadoop/hbase/KeyValue;)V
-#peek()Lorg/apache/hadoop/hbase/KeyValue;
-#next()Lorg/apache/hadoop/hbase/KeyValue;
@1.4.0
+#getScannerOrder()J
-#getSequenceID()J
@2.0.0-alpha-1
+#<init>(Ljava/util/SortedSet;Lorg/apache/hadoop/hbase/CellComparator;)V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/CellComparator;)V
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;[Lorg/apache/hadoop/hbase/Cell;)V
-#<init>(Ljava/util/SortedSet;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[Lorg/apache/hadoop/hbase/Cell;)V
@2.1.0
-#getScannerOrder()J

+###org/apache/hadoop/hbase/util/FSHDFSUtils
@0.95.0
+#<init>()V
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@0.95.1-hadoop1
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
-#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@0.96.2-hadoop1
+#isSameHdfs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)Z
@0.98.0-hadoop1
-#isSameHdfs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)Z
@0.98.1-hadoop1
+#isSameHdfs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)Z
@2.3.0
-###org/apache/hadoop/hbase/util/FSHDFSUtils

+###org/apache/hadoop/hbase/util/GetJavaProperty
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
@2.0.0
-#<init>()V

+###org/apache/hadoop/hbase/util/HBaseFsck$TableInfo
@0.95.0
+#addRegionInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#addServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#getName()Ljava/lang/String;
+#getNumRegions()I
+#checkRegionChain(Lorg/apache/hadoop/hbase/util/hbck/TableIntegrityErrorHandler;)Z
@0.95.2-hadoop1
+#getName()Lorg/apache/hadoop/hbase/TableName;
-#getName()Ljava/lang/String;
@0.98.12-hadoop1
+#getRegionsFromMeta()Lcom/google/common/collect/ImmutableList;
@0.99.0
-#getRegionsFromMeta()Lcom/google/common/collect/ImmutableList;
@1.1.0
+#getRegionsFromMeta()Lcom/google/common/collect/ImmutableList;
@2.0.0-alpha2
+#getRegionsFromMeta()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;
-#getRegionsFromMeta()Lcom/google/common/collect/ImmutableList;
@2.0.0-beta-1
+#getRegionsFromMeta()Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableList;
-#getRegionsFromMeta()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;
@2.0.6
-###org/apache/hadoop/hbase/util/HBaseFsck$TableInfo

+###org/apache/hadoop/hbase/util/hbck/TableIntegrityErrorHandlerImpl
@0.95.0
+#<init>()V
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleRegionEndKeyNotEmpty([B)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleHoleInRegionChain([B[B)V
+#handleOverlapGroup(Ljava/util/Collection;)V
@2.0.6
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
@2.1.0
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
@2.1.6
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
@2.2.0
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
@2.2.1
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V

+###org/apache/hadoop/hbase/util/HttpServerUtil
@0.96.2-hadoop1
+#<init>()V
+#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;)V
@1.2.7
+#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;Z)V
-#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;)V
@1.3.0
+#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;)V
-#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;Z)V
@1.3.3
+#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;Z)V
-#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;)V
@1.4.0
+#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;)V
-#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;Z)V
@1.4.5
+#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;Z)V
-#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;)V
@2.0.0-alpha-1
+#constrainHttpMethods(Lorg/eclipse/jetty/servlet/ServletContextHandler;)V
-#constrainHttpMethods(Lorg/mortbay/jetty/servlet/Context;Z)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/util/HttpServerUtil

+###org/apache/hadoop/hbase/util/IdLock
@0.95.0
+#<init>()V
+#getLockEntry(J)Lorg/apache/hadoop/hbase/util/IdLock$Entry;
+#releaseLockEntry(Lorg/apache/hadoop/hbase/util/IdLock$Entry;)V
@0.98.13-hadoop1
+#waitForWaiters(JI)V
@0.99.0
-#waitForWaiters(JI)V
@1.0.1
+#waitForWaiters(JI)V
@2.0.2
-###org/apache/hadoop/hbase/util/IdLock

+###org/apache/hadoop/hbase/util/JVMClusterUtil
@0.95.0
+#<init>()V
+#createRegionServerThread(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#createMasterThread(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
+#startup(Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
+#shutdown(Ljava/util/List;Ljava/util/List;)V
@0.99.0
+#createRegionServerThread(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#createMasterThread(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
-#createRegionServerThread(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
-#createMasterThread(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
@2.0.0-alpha4
+#createRegionServerThread(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
+#createMasterThread(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;
-#createRegionServerThread(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread;
-#createMasterThread(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Ljava/lang/Class;I)Lorg/apache/hadoop/hbase/util/JVMClusterUtil$MasterThread;

+###org/apache/hadoop/hbase/util/MunkresAssignment
@0.96.0-hadoop1
+#<init>([[F)V
+#solve()[I

+###org/apache/hadoop/hbase/util/RegionSplitter$UniformSplit
@0.95.0
+#<init>()V
+#split([B[B)[B
+#split(I)[[B
+#firstRow()[B
+#lastRow()[B
+#setFirstRow(Ljava/lang/String;)V
+#setLastRow(Ljava/lang/String;)V
+#strToRow(Ljava/lang/String;)[B
+#rowToStr([B)Ljava/lang/String;
+#separator()Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.95.2-hadoop1
+#setFirstRow([B)V
+#setLastRow([B)V
@1.3.2
+#split([B[BIZ)[[B
@2.0.0-alpha-1
-#split([B[BIZ)[[B
@2.0.0-alpha4
+#split([B[BIZ)[[B

+###org/apache/hadoop/hbase/util/ShutdownHookManager
@0.95.0
+#<init>()V
+#addShutdownHook(Ljava/lang/Thread;I)V
+#removeShutdownHook(Ljava/lang/Runnable;)Z
+#affixShutdownHook(Ljava/lang/Thread;I)V
+#deleteShutdownHook(Ljava/lang/Runnable;)Z

+###org/apache/hadoop/hbase/util/YammerHistogramUtils
@0.98.18-hadoop1
+#newHistogram(Lcom/yammer/metrics/stats/Sample;)Lcom/yammer/metrics/core/Histogram;
+#getShortHistogramReport(Lcom/yammer/metrics/core/Histogram;)Ljava/lang/String;
+#getHistogramReport(Lcom/yammer/metrics/core/Histogram;)Ljava/lang/String;
@0.98.19-hadoop1
+#getPrettyHistogramReport(Lcom/yammer/metrics/core/Histogram;)Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/util/YammerHistogramUtils

+###org/apache/hadoop/hbase/wal/BoundedGroupingStrategy
@1.3.0
+#<init>()V
+#group([B[B)Ljava/lang/String;
+#init(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/wal/NamespaceGroupingStrategy
@1.3.0
+#<init>()V
+#group([B[B)Ljava/lang/String;
+#init(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/wal/RegionGroupingProvider
@1.3.0
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
+#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
+#shutdown()V
+#close()V
+#getNumLogFiles()J
+#getLogFileSize()J
@1.4.0
+#getWALs()Ljava/util/List;
@2.0.0-beta-1
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
@2.0.0-beta-2
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#addWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
-#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
@2.4.0
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)V
-#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/wal/WALSplitter$EntryBuffers
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;J)V
+#appendEntry(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
+#waitUntilDrained()V
@1.3.3
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
@1.4.0
-#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
@1.4.1
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
@2.0.0-alpha-1
-#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
@2.2.1
-###org/apache/hadoop/hbase/wal/WALSplitter$EntryBuffers

+###org/apache/hadoop/hbase/wal/WALSplitter$PipelineController
@1.1.0
+#<init>()V

+###org/apache/hadoop/hbase/wal/WALSplitter$WriterThread
@1.1.0
+#run()V
@2.2.1
-###org/apache/hadoop/hbase/wal/WALSplitter$WriterThread

+###org/apache/hadoop/hbase/zookeeper/DeletionListener
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
+#hasException()Z
+#getException()Ljava/lang/Throwable;
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/DeletionListener

+###org/apache/hadoop/hbase/zookeeper/MasterMaintenanceModeTracker
@0.98.24-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#isInMaintenanceMode()Z
+#start()V
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@0.99.0
-###org/apache/hadoop/hbase/zookeeper/MasterMaintenanceModeTracker

+###org/apache/hadoop/hbase/zookeeper/RegionServerTracker
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#start()V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#getOnlineServers()Ljava/util/List;
@0.96.2-hadoop1
+#getRegionServerInfo(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$RegionServerInfo;
@0.99.1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/hbase/master/ServerManager;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#getRegionServerInfo(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionServerInfo;
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;)V
-#getRegionServerInfo(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$RegionServerInfo;
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/RegionServerTracker

+###org/apache/hadoop/hbase/backup/BackupAdmin
@2.0.0-alpha-1
+#backupTables(Lorg/apache/hadoop/hbase/backup/BackupRequest;)Ljava/lang/String;
+#restore(Lorg/apache/hadoop/hbase/backup/RestoreRequest;)V
+#getBackupInfo(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#deleteBackups([Ljava/lang/String;)I
+#getHistory(I)Ljava/util/List;
+#getHistory(I[Lorg/apache/hadoop/hbase/backup/BackupInfo$Filter;)Ljava/util/List;
+#listBackupSets()Ljava/util/List;
+#getBackupSet(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/util/BackupSet;
+#deleteBackupSet(Ljava/lang/String;)Z
+#addToBackupSet(Ljava/lang/String;[Lorg/apache/hadoop/hbase/TableName;)V
+#removeFromBackupSet(Ljava/lang/String;[Lorg/apache/hadoop/hbase/TableName;)V
@2.0.0-alpha2
+#mergeBackups([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupAdmin

+###org/apache/hadoop/hbase/backup/BackupDriver
@2.0.0-alpha-1
+#<init>()V
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupDriver

+###org/apache/hadoop/hbase/backup/BackupInfo
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupType;[Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#getWorkers()I
+#setWorkers(I)V
+#getBandwidth()J
+#setBandwidth(J)V
+#setBackupTableInfoMap(Ljava/util/Map;)V
+#getTableSetTimestampMap()Ljava/util/HashMap;
+#setTableSetTimestampMap(Ljava/util/HashMap;)V
+#setType(Lorg/apache/hadoop/hbase/backup/BackupType;)V
+#setBackupRootDir(Ljava/lang/String;)V
+#setTotalBytesCopied(J)V
+#setProgress(I)V
+#getProgress()I
+#getBackupId()Ljava/lang/String;
+#setBackupId(Ljava/lang/String;)V
+#getBackupTableInfo(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/backup/BackupTableInfo;
+#getFailedMsg()Ljava/lang/String;
+#setFailedMsg(Ljava/lang/String;)V
+#getStartTs()J
+#setStartTs(J)V
+#getCompleteTs()J
+#setCompleteTs(J)V
+#getTotalBytesCopied()J
+#getState()Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupState;
+#setState(Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupState;)V
+#getPhase()Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupPhase;
+#setPhase(Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupPhase;)V
+#getType()Lorg/apache/hadoop/hbase/backup/BackupType;
+#setSnapshotName(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#getSnapshotName(Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#getSnapshotNames()Ljava/util/List;
+#getTables()Ljava/util/Set;
+#getTableNames()Ljava/util/List;
+#addTables([Lorg/apache/hadoop/hbase/TableName;)V
+#setTables(Ljava/util/List;)V
+#getBackupRootDir()Ljava/lang/String;
+#getTableBackupDir(Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#setHLogTargetDir(Ljava/lang/String;)V
+#getHLogTargetDir()Ljava/lang/String;
+#getIncrBackupFileList()Ljava/util/List;
+#setIncrBackupFileList(Ljava/util/List;)V
+#setIncrTimestampMap(Ljava/util/HashMap;)V
+#getIncrTimestampMap()Ljava/util/HashMap;
+#getTableBySnapshot(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
+#toProtosBackupInfo()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/BackupProtos$BackupInfo;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toByteArray()[B
+#fromByteArray([B)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#fromStream(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#fromProto(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/BackupProtos$BackupInfo;)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#getShortDescription()Ljava/lang/String;
+#getStatusAndProgressAsString()Ljava/lang/String;
+#getTableListAsString()Ljava/lang/String;
+#compareTo(Lorg/apache/hadoop/hbase/backup/BackupInfo;)I
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha2
+#toString()Ljava/lang/String;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupInfo

+###org/apache/hadoop/hbase/backup/HFileArchiver
@0.95.0
+#archiveRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#archiveRegion(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#archiveFamily(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[B)V
+#archiveStoreFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)V
+#archiveStoreFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[BLorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha-1
+#exists(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#archiveFamilyByFamilyDir(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[B)V
@2.0.0-alpha4
+#exists(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#archiveRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#archiveFamily(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;[B)V
+#archiveFamilyByFamilyDir(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;[B)V
+#archiveStoreFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)V
+#archiveStoreFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;[BLorg/apache/hadoop/fs/Path;)V
-#exists(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#archiveRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#archiveFamily(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[B)V
-#archiveFamilyByFamilyDir(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[B)V
-#archiveStoreFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)V
-#archiveStoreFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[BLorg/apache/hadoop/fs/Path;)V
@2.1.4
+#archiveRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/List;)V
@2.1.9
+#archiveRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;[BLjava/util/Collection;)V
@2.2.0
-#archiveRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;[BLjava/util/Collection;)V
@2.2.3
+#archiveRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;[BLjava/util/Collection;)V

+###org/apache/hadoop/hbase/backup/impl/BackupSystemTable
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;)V
+#close()V
+#updateBackupInfo(Lorg/apache/hadoop/hbase/backup/BackupInfo;)V
+#readBulkLoadedFiles(Ljava/lang/String;Ljava/util/List;)[Ljava/util/Map;
+#deleteBackupInfo(Ljava/lang/String;)V
+#writePathsPostBulkLoad(Lorg/apache/hadoop/hbase/TableName;[BLjava/util/Map;)V
+#writeFilesForBulkLoadPreCommit(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/util/List;)V
+#removeBulkLoadedRows(Ljava/util/List;Ljava/util/List;)V
+#readBulkloadRows(Ljava/util/List;)Lorg/apache/hadoop/hbase/util/Pair;
+#writeBulkLoadedFiles(Ljava/util/List;[Ljava/util/Map;Ljava/lang/String;)V
+#readBackupInfo(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#readBackupStartCode(Ljava/lang/String;)Ljava/lang/String;
+#writeBackupStartCode(Ljava/lang/Long;Ljava/lang/String;)V
+#startBackupSession()V
+#finishBackupSession()V
+#readRegionServerLastLogRollResult(Ljava/lang/String;)Ljava/util/HashMap;
+#writeRegionServerLastLogRollResult(Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;)V
+#getBackupHistory(Z)Ljava/util/ArrayList;
+#getBackupHistory()Ljava/util/List;
+#getHistory(I)Ljava/util/List;
+#getBackupHistory(I[Lorg/apache/hadoop/hbase/backup/BackupInfo$Filter;)Ljava/util/List;
+#getTablesForBackupType(Lorg/apache/hadoop/hbase/backup/BackupType;)Ljava/util/List;
+#getBackupHistory(Ljava/lang/String;)Ljava/util/List;
+#getBackupHistoryForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getBackupHistoryForTableSet(Ljava/util/Set;Ljava/lang/String;)Ljava/util/Map;
+#getBackupInfos(Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupState;)Ljava/util/ArrayList;
+#writeRegionServerLogTimestamp(Ljava/util/Set;Ljava/util/HashMap;Ljava/lang/String;)V
+#readLogTimestampMap(Ljava/lang/String;)Ljava/util/HashMap;
+#getIncrementalBackupTableSet(Ljava/lang/String;)Ljava/util/Set;
+#addIncrementalBackupTableSet(Ljava/util/Set;Ljava/lang/String;)V
+#deleteIncrementalBackupTableSet(Ljava/lang/String;)V
+#addWALFiles(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V
+#getWALFilesIterator(Ljava/lang/String;)Ljava/util/Iterator;
+#isWALFileDeletable(Ljava/lang/String;)Z
+#hasBackupSessions()Z
+#listBackupSets()Ljava/util/List;
+#describeBackupSet(Ljava/lang/String;)Ljava/util/List;
+#addToBackupSet(Ljava/lang/String;[Ljava/lang/String;)V
+#removeFromBackupSet(Ljava/lang/String;[Ljava/lang/String;)V
+#deleteBackupSet(Ljava/lang/String;)V
+#getSystemTableDescriptor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableName(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/TableName;
+#getTableNameAsString(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getSnapshotName(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#snapshot(Lorg/apache/hadoop/hbase/client/Connection;)V
+#restoreFromSnapshot(Lorg/apache/hadoop/hbase/client/Connection;)V
+#snapshotExists(Lorg/apache/hadoop/hbase/client/Connection;)Z
+#deleteSnapshot(Lorg/apache/hadoop/hbase/client/Connection;)V
+#createDeleteForOrigBulkLoad(Ljava/util/List;)Ljava/util/List;
+#startDeleteOperation([Ljava/lang/String;)V
+#finishDeleteOperation()V
+#getListOfBackupIdsFromDeleteOperation()[Ljava/lang/String;
@2.0.0-alpha2
+#startBackupExclusiveOperation()V
+#finishBackupExclusiveOperation()V
+#isMergeInProgress()Z
+#startMergeOperation([Ljava/lang/String;)V
+#updateProcessedTablesForMerge(Ljava/util/List;)V
+#finishMergeOperation()V
+#getListOfBackupIdsFromMergeOperation()[Ljava/lang/String;
-#startBackupSession()V
-#finishBackupSession()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupSystemTable

+###org/apache/hadoop/hbase/conf/ConfigurationManager
@0.99.2
+#<init>()V
+#registerObserver(Lorg/apache/hadoop/hbase/conf/ConfigurationObserver;)V
+#deregisterObserver(Lorg/apache/hadoop/hbase/conf/ConfigurationObserver;)V
+#notifyAllObservers(Lorg/apache/hadoop/conf/Configuration;)V
+#getNumObservers()I
@1.7.0
-###org/apache/hadoop/hbase/conf/ConfigurationManager

+###org/apache/hadoop/hbase/CoordinatedStateManagerFactory
@0.99.0
+#<init>()V
+#getCoordinatedStateManager(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoordinatedStateManager;
@2.0.0-alpha-1
-#<init>()V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/CoordinatedStateManagerFactory

+###org/apache/hadoop/hbase/coordination/ZkCoordinatedStateManager
@0.99.0
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/Server;)V
+#getServer()Lorg/apache/hadoop/hbase/Server;
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
+#getSplitLogWorkerCoordination()Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;
+#getSplitLogManagerCoordination()Lorg/apache/hadoop/hbase/coordination/SplitLogManagerCoordination;
+#getSplitTransactionCoordination()Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination;
+#getCloseRegionCoordination()Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;
+#getOpenRegionCoordination()Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;
+#getRegionMergeCoordination()Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination;
@1.7.0
-#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@1.7.1
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@2.0.0-alpha-1
+#getProcedureCoordinatorRpcs(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;
+#getProcedureMemberRpcs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;
-#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
-#getSplitTransactionCoordination()Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination;
-#getCloseRegionCoordination()Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination;
-#getOpenRegionCoordination()Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;
-#getRegionMergeCoordination()Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/Server;)V
-#<init>()V
-#initialize(Lorg/apache/hadoop/hbase/Server;)V
-#getServer()Lorg/apache/hadoop/hbase/Server;
@2.2.0
-#getProcedureCoordinatorRpcs(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;
-#getProcedureMemberRpcs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#init()V
+#prepareTask(Ljava/lang/String;)Ljava/lang/String;
+#remainingTasksInCoordination()I
+#deleteTask(Ljava/lang/String;)V
+#resubmitTask(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/SplitLogManager$Task;Lorg/apache/hadoop/hbase/master/SplitLogManager$ResubmitDirective;)Z
+#checkTasks()V
+#submitTask(Ljava/lang/String;)V
+#checkTaskStillAvailable(Ljava/lang/String;)V
+#removeRecoveringRegions(Ljava/util/Set;Ljava/lang/Boolean;)V
+#markRegionsRecovering(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#removeStaleRecoveringRegions(Ljava/util/Set;)V
+#isReplaying()Z
+#isSplitting()Z
+#setRecoveryMode(Z)V
+#setDetails(Lorg/apache/hadoop/hbase/coordination/SplitLogManagerCoordination$SplitLogManagerDetails;)V
+#getDetails()Lorg/apache/hadoop/hbase/coordination/SplitLogManagerCoordination$SplitLogManagerDetails;
+#getRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
+#getLastRecoveryTime()J
+#setIgnoreDeleteForTesting(Z)V
@2.0.0-alpha-1
+#getRecoveryMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
-#getRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#<init>(Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#removeRecoveringRegions(Ljava/util/Set;Ljava/lang/Boolean;)V
-#markRegionsRecovering(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
-#removeStaleRecoveringRegions(Ljava/util/Set;)V
-#isReplaying()Z
-#isSplitting()Z
-#setRecoveryMode(Z)V
-#getRecoveryMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
-#getLastRecoveryTime()J

+###org/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare
@0.95.0
+#rethrowException()V
+#hasException()Z
+#getException()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;

+###org/apache/hadoop/hbase/executor/ExecutorService$ExecutorStatus
@0.95.0
+#dumpTo(Ljava/io/Writer;Ljava/lang/String;)V
@1.6.0
+#getQueuedEvents()Ljava/util/List;
+#getRunning()Ljava/util/List;
@2.0.0-alpha-1
-#getQueuedEvents()Ljava/util/List;
-#getRunning()Ljava/util/List;
@3.0.0-alpha-1
+#getQueuedEvents()Ljava/util/List;
+#getRunning()Ljava/util/List;

+###org/apache/hadoop/hbase/favored/FavoredNodesManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#initialize(Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;)V
+#getDataNodePort()I
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#isFavoredNodeApplicable(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#filterNonFNApplicableRegions(Ljava/util/Collection;)Ljava/util/Set;
+#getFavoredNodesWithDNPort(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#updateFavoredNodes(Ljava/util/Map;)V
+#getReplicaLoad(Ljava/util/List;)Ljava/util/Map;
+#deleteFavoredNodesForRegions(Ljava/util/Collection;)V
+#getRackManager()Lorg/apache/hadoop/hbase/master/RackManager;
@2.0.0-alpha4
+#getFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
+#isFavoredNodeApplicable(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#getFavoredNodesWithDNPort(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
-#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
-#isFavoredNodeApplicable(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#getFavoredNodesWithDNPort(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
@2.0.0-beta-1
+#getRegionsOfFavoredNode(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Set;
@2.0.6
+#deleteFavoredNodesForRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.0
-#deleteFavoredNodesForRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.6
+#deleteFavoredNodesForRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/favored/FavoredNodesManager

+###org/apache/hadoop/hbase/generated/master/tablesDetailed_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/http/conf/ConfServlet$BadFormatException
@0.99.0
+#<init>(Ljava/lang/String;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/conf/ConfServlet$BadFormatException

+###org/apache/hadoop/hbase/http/HttpConfig$Policy
@0.99.0
+#values()[Lorg/apache/hadoop/hbase/http/HttpConfig$Policy;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpConfig$Policy;
+#fromString(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpConfig$Policy;
+#isHttpEnabled()Z
+#isHttpsEnabled()Z
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpConfig$Policy

+###org/apache/hadoop/hbase/http/InfoServer
@0.99.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;)V
+#addServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#start()V
+#getPort()I[deprecated]
+#stop()V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/InfoServer

+###org/apache/hadoop/hbase/http/ServerConfigurationKeys
@0.99.0
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/ServerConfigurationKeys

+###org/apache/hadoop/hbase/io/hfile/AgeSnapshot
@0.99.0
+#get75thPercentile()D
+#get95thPercentile()D
+#get98thPercentile()D
+#get999thPercentile()D
+#get99thPercentile()D
+#getMean()D
+#getMax()D
+#getMin()D
+#getStdDev()D
@1.3.0
-#getStdDev()D

+###org/apache/hadoop/hbase/io/hfile/BlockPriority
@0.98.4-hadoop1
+#values()[Lorg/apache/hadoop/hbase/io/hfile/BlockPriority;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/BlockPriority;

+###org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator
@0.95.0
+#roundUpToBucketSizeInfo(I)Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$BucketSizeInfo;
+#getInfo()Ljava/lang/String;
+#getUsedSize()J
+#getFreeSize()J
+#getTotalSize()J
+#allocateBlock(I)J
+#freeBlock(J)I
+#sizeIndexOfAllocation(J)I
+#sizeOfAllocation(J)I
+#getMaximumAllocationIndex()I
+#dumpToLog()V
+#logStatistics()V
+#getIndexStatistics(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$IndexStatistics;)[Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$IndexStatistics;
+#getIndexStatistics()[Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$IndexStatistics;
+#freeBlock([J)J
@0.98.4-hadoop1
+#toString()Ljava/lang/String;
+#getBuckets()[Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$Bucket;
-#getInfo()Ljava/lang/String;
-#getMaximumAllocationIndex()I
@0.99.0
-#dumpToLog()V
-#logStatistics()V
-#getIndexStatistics(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$IndexStatistics;)[Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$IndexStatistics;
-#getIndexStatistics()[Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$IndexStatistics;
@1.2.6
+#getBucketIndex(J)I
+#getLeastFilledBuckets(Ljava/util/Set;I)Ljava/util/Set;
@1.3.0
-#getBucketIndex(J)I
-#getLeastFilledBuckets(Ljava/util/Set;I)Ljava/util/Set;
@1.3.1
+#getBucketIndex(J)I
+#getLeastFilledBuckets(Ljava/util/Set;I)Ljava/util/Set;
@2.4.14
+#freeBlock(JI)I
-#freeBlock(J)I
-#freeBlock([J)J
@3.0.0-alpha-1
+#freeBlock(J)I
+#freeBlock([J)J
-#freeBlock(JI)I

+###org/apache/hadoop/hbase/io/hfile/bucket/FileIOEngine
@0.95.0
+#<init>(Ljava/lang/String;J)V
+#isPersistent()Z
+#read(Ljava/nio/ByteBuffer;J)V
+#write(Ljava/nio/ByteBuffer;J)V
+#sync()V
+#shutdown()V
@0.98.1-hadoop1
+#read(Ljava/nio/ByteBuffer;J)I
-#read(Ljava/nio/ByteBuffer;J)V
@0.98.4-hadoop1
+#toString()Ljava/lang/String;
@1.3.1
+#<init>(J[Ljava/lang/String;)V
-#<init>(Ljava/lang/String;J)V
@1.4.11
+#verifyFileIntegrity([BLjava/lang/String;)Z
+#calculateChecksum(Ljava/lang/String;)[B
@2.0.0-alpha-1
+#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#write(Lorg/apache/hadoop/hbase/nio/ByteBuff;J)V
-#verifyFileIntegrity([BLjava/lang/String;)Z
-#read(Ljava/nio/ByteBuffer;J)I
-#calculateChecksum(Ljava/lang/String;)[B
@2.0.0-alpha2
+#<init>(JZ[Ljava/lang/String;)V
-#<init>(J[Ljava/lang/String;)V
@2.3.0
+#read(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketEntry;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;

+###org/apache/hadoop/hbase/io/hfile/CompoundBloomFilterBase
@2.0.0-alpha-1
+#<init>()V
+#getMaxKeys()J
+#getKeyCount()J
+#getByteSize()J

+###org/apache/hadoop/hbase/io/hfile/FixedFileTrailer
@0.95.0
+#getTrailerSize()I
+#toString()Ljava/lang/String;
+#readFromStream(Lorg/apache/hadoop/fs/FSDataInputStream;J)Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;
+#expectMajorVersion(I)V
+#expectMinorVersion(I)V
+#expectAtLeastMajorVersion(I)V
+#getFileInfoOffset()J
+#setFileInfoOffset(J)V
+#getLoadOnOpenDataOffset()J
+#setLoadOnOpenOffset(J)V
+#getDataIndexCount()I
+#setDataIndexCount(I)V
+#getMetaIndexCount()I
+#setMetaIndexCount(I)V
+#getTotalUncompressedBytes()J
+#setTotalUncompressedBytes(J)V
+#getEntryCount()J
+#setEntryCount(J)V
+#getCompressionCodec()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#setCompressionCodec(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
+#getNumDataIndexLevels()I
+#setNumDataIndexLevels(I)V
+#getLastDataBlockOffset()J
+#setLastDataBlockOffset(J)V
+#getFirstDataBlockOffset()J
+#setFirstDataBlockOffset(J)V
+#getComparatorClassName()Ljava/lang/String;
+#getMajorVersion()I
+#setComparatorClass(Ljava/lang/Class;)V
+#createComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/RawComparator;
+#getUncompressedDataIndexSize()J
+#setUncompressedDataIndexSize(J)V
@0.95.1-hadoop1
+#getMinorVersion()I
@0.96.0-hadoop1
+#createComparator(Ljava/lang/String;)Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#createComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/RawComparator;
@0.98.0-hadoop1
+#getEncryptionKey()[B
+#setEncryptionKey([B)V
@2.0.0-alpha-1
+#createComparator(Ljava/lang/String;)Lorg/apache/hadoop/hbase/CellComparator;
-#createComparator(Ljava/lang/String;)Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
@2.3.0
-#createComparator(Ljava/lang/String;)Lorg/apache/hadoop/hbase/CellComparator;

+###org/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexWriter
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$Writer;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;Ljava/lang/String;)V
+#setMaxChunkSize(I)V
+#writeIndexBlocks(Lorg/apache/hadoop/fs/FSDataOutputStream;)J
+#writeSingleLevelIndex(Ljava/io/DataOutput;Ljava/lang/String;)V
+#getNumRootEntries()I
+#getNumLevels()I
+#shouldWriteBlock(Z)Z
+#writeInlineBlock(Ljava/io/DataOutput;)V
+#blockWritten(JII)V
+#getInlineBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#addEntry([BJI)V
+#ensureSingleLevel()V
+#getCacheOnWrite()Z
+#getTotalUncompressedSize()J
@0.98.7-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$Writer;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;Ljava/lang/String;)V
@0.98.21-hadoop1
+#setMinIndexNumEntries(I)V
@0.99.0
-#setMinIndexNumEntries(I)V
@1.1.6
+#setMinIndexNumEntries(I)V
@1.2.0
-#setMinIndexNumEntries(I)V
@1.2.3
+#setMinIndexNumEntries(I)V
@2.5.1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Ljava/lang/String;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder;)V

+###org/apache/hadoop/hbase/io/hfile/HFileWriterImpl
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#appendFileInfo([B[B)V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#toString()Ljava/lang/String;
+#compressionByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#getMidpoint(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#appendMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/Writable;)V
+#close()V
+#addInlineBlockWriter(Lorg/apache/hadoop/hbase/io/hfile/InlineBlockWriter;)V
+#addGeneralBloomFilter(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;)V
+#addDeleteFamilyBloomFilter(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;)V
+#getFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
+#append(Lorg/apache/hadoop/hbase/Cell;)V
+#beforeShipped()V
@2.0.6
+#getLastCell()Lorg/apache/hadoop/hbase/Cell;
@2.1.0
-#getLastCell()Lorg/apache/hadoop/hbase/Cell;
@2.1.6
+#getLastCell()Lorg/apache/hadoop/hbase/Cell;
@2.2.0
-#getLastCell()Lorg/apache/hadoop/hbase/Cell;
@2.2.1
+#getLastCell()Lorg/apache/hadoop/hbase/Cell;
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@2.5.0
+#getPos()J

+###org/apache/hadoop/hbase/io/Reference
@0.95.0
+#createTopReference([B)Lorg/apache/hadoop/hbase/io/Reference;
+#createBottomReference([B)Lorg/apache/hadoop/hbase/io/Reference;
+#<init>()V[deprecated]
+#getFileRegion()Lorg/apache/hadoop/hbase/io/Reference$Range;
+#getSplitKey()[B
+#toString()Ljava/lang/String;
+#isTopFileRegion(Lorg/apache/hadoop/hbase/io/Reference$Range;)Z
+#readFields(Ljava/io/DataInput;)V[deprecated]
+#write(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#read(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/Reference;
@0.98.6-hadoop1
+#convert()Lorg/apache/hadoop/hbase/protobuf/generated/FSProtos$Reference;
+#convert(Lorg/apache/hadoop/hbase/protobuf/generated/FSProtos$Reference;)Lorg/apache/hadoop/hbase/io/Reference;
@1.1.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.0.0-alpha-1
+#convert()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference;
+#convert(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/FSProtos$Reference;)Lorg/apache/hadoop/hbase/io/Reference;
-#convert()Lorg/apache/hadoop/hbase/protobuf/generated/FSProtos$Reference;
-#convert(Lorg/apache/hadoop/hbase/protobuf/generated/FSProtos$Reference;)Lorg/apache/hadoop/hbase/io/Reference;

+###org/apache/hadoop/hbase/ipc/MetricsHBaseServer
@0.95.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
+#getMetricsSource()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerSource;
@0.98.13-hadoop1
+#exception(Ljava/lang/Throwable;)V
@0.98.17-hadoop1
+#getHBaseServerWrapper()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;
@0.99.0
-#exception(Ljava/lang/Throwable;)V
-#getHBaseServerWrapper()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;
@1.1.0
+#exception(Ljava/lang/Throwable;)V
@1.2.0
+#getHBaseServerWrapper()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;

+###org/apache/hadoop/hbase/ipc/RpcScheduler$Context
@0.98.0-hadoop1
+#getListenerAddress()Ljava/net/InetSocketAddress;
@0.98.4-hadoop1
-###org/apache/hadoop/hbase/ipc/RpcScheduler$Context

+###org/apache/hadoop/hbase/mapred/HRegionPartitioner
@0.95.0
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#getPartition(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Ljava/lang/Object;I)I
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/HRegionPartitioner

+###org/apache/hadoop/hbase/mapred/TableOutputFormat$TableRecordWriter
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/client/HTable;)V
+#close(Lorg/apache/hadoop/mapred/Reporter;)V
+#write(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Put;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/client/Table;)V
-#<init>(Lorg/apache/hadoop/hbase/client/HTable;)V
@1.0.0
+#<init>(Lorg/apache/hadoop/hbase/client/BufferedMutator;)V
-#<init>(Lorg/apache/hadoop/hbase/client/Table;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/mapred/JobConf;)V
@2.0.0-alpha-1
*#<init>(Lorg/apache/hadoop/hbase/client/BufferedMutator;)V[deprecated]
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableOutputFormat$TableRecordWriter

+###org/apache/hadoop/hbase/mapred/TableSnapshotInputFormat$TableSnapshotRegionSplit
@0.98.5-hadoop1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl$InputSplit;)V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getLength()J
+#getLocations()[Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#<init>(Ljava/lang/String;Ljava/util/List;)V
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/fs/Path;)V
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableSnapshotInputFormat$TableSnapshotRegionSplit

+###org/apache/hadoop/hbase/mapreduce/CellCounter
@0.95.0
+#<init>()V
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/CellCounter

+###org/apache/hadoop/hbase/mapreduce/HashTable$TableHash
@0.98.14-hadoop1
+#<init>()V
+#read(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/mapreduce/HashTable$TableHash;
+#toString()Ljava/lang/String;
+#newReader(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)Lorg/apache/hadoop/hbase/mapreduce/HashTable$TableHash$Reader;
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/HashTable$TableHash

+###org/apache/hadoop/hbase/mapreduce/Import$KeyValueSortImporter
@0.98.14-hadoop1
+#<init>()V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#setup(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/Import$KeyValueSortImporter

+###org/apache/hadoop/hbase/mapreduce/KeyValueSerialization$KeyValueSerializer
@0.95.0
+#<init>()V
+#close()V
+#open(Ljava/io/OutputStream;)V
+#serialize(Lorg/apache/hadoop/hbase/KeyValue;)V
+#serialize(Ljava/lang/Object;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/KeyValueSerialization$KeyValueSerializer

+###org/apache/hadoop/hbase/mapreduce/MultiTableSnapshotInputFormat
@0.98.14-hadoop1
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#setInput(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;Lorg/apache/hadoop/fs/Path;)V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/MultiTableSnapshotInputFormat

+###org/apache/hadoop/hbase/mapreduce/PutSortReducer
@0.95.0
+#<init>()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/PutSortReducer

+###org/apache/hadoop/hbase/mapreduce/RowCounter$RowCounterMapper$Counters
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/mapreduce/RowCounter$RowCounterMapper$Counters;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/mapreduce/RowCounter$RowCounterMapper$Counters;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/RowCounter$RowCounterMapper$Counters

+###org/apache/hadoop/hbase/mapreduce/SyncTable$SyncMapper$Counter
@0.98.14-hadoop1
+#values()[Lorg/apache/hadoop/hbase/mapreduce/SyncTable$SyncMapper$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/mapreduce/SyncTable$SyncMapper$Counter;
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/SyncTable$SyncMapper$Counter

+###org/apache/hadoop/hbase/mapreduce/TableInputFormatBase
@0.95.0
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#getScan()Lorg/apache/hadoop/hbase/client/Scan;
+#setScan(Lorg/apache/hadoop/hbase/client/Scan;)V
@0.98.7-hadoop1
+#reverseDNS(Ljava/net/InetAddress;)Ljava/lang/String;
@0.98.12-hadoop1
+#calculateRebalancedSplits(Ljava/util/List;Lorg/apache/hadoop/mapreduce/JobContext;J)Ljava/util/List;
+#getSplitKey([B[BZ)[B
@0.99.0
-#reverseDNS(Ljava/net/InetAddress;)Ljava/lang/String;
-#calculateRebalancedSplits(Ljava/util/List;Lorg/apache/hadoop/mapreduce/JobContext;J)Ljava/util/List;
-#getSplitKey([B[BZ)[B
@0.99.1
+#reverseDNS(Ljava/net/InetAddress;)Ljava/lang/String;
@1.0.0
*#reverseDNS(Ljava/net/InetAddress;)Ljava/lang/String;[deprecated]
@1.0.1
+#calculateRebalancedSplits(Ljava/util/List;Lorg/apache/hadoop/mapreduce/JobContext;J)Ljava/util/List;
+#getSplitKey([B[BZ)[B
@1.4.0
*#calculateRebalancedSplits(Ljava/util/List;Lorg/apache/hadoop/mapreduce/JobContext;J)Ljava/util/List;[deprecated]
+#calculateAutoBalancedSplits(Ljava/util/List;J)Ljava/util/List;
*#getSplitKey([B[BZ)[B[deprecated]
@2.0.0-alpha-1
-#calculateRebalancedSplits(Ljava/util/List;Lorg/apache/hadoop/mapreduce/JobContext;J)Ljava/util/List;[deprecated]
-#calculateAutoBalancedSplits(Ljava/util/List;J)Ljava/util/List;
-#reverseDNS(Ljava/net/InetAddress;)Ljava/lang/String;[deprecated]
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableInputFormatBase

+###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl
@0.98.3-hadoop1
+#<init>()V
+#getSplits(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
+#getBestLocations(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;)Ljava/util/List;
+#setInput(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
@0.98.14-hadoop1
+#getRegionInfosFromManifest(Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;)Ljava/util/List;
+#getSnapshotManifest(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
+#extractScanFromConf(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Scan;
+#getSplits(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Ljava/util/List;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.99.0
-#getRegionInfosFromManifest(Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;)Ljava/util/List;
-#getSnapshotManifest(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
-#extractScanFromConf(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Scan;
-#getSplits(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Ljava/util/List;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@1.2.0
+#getRegionInfosFromManifest(Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;)Ljava/util/List;
+#getSnapshotManifest(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
+#extractScanFromConf(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Scan;
+#getSplits(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Ljava/util/List;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@1.3.2
+#getSplitAlgo(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;
+#getSplits(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Ljava/util/List;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)Ljava/util/List;
+#setInput(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha-1
-#getSplitAlgo(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;
-#getSplits(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Ljava/util/List;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)Ljava/util/List;
-#setInput(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl

+###org/apache/hadoop/hbase/mapreduce/WALPlayer$WALMapper
@1.0.0
+#map(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#setup(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/WALPlayer$WALMapper

+###org/apache/hadoop/hbase/master/assignment/FailedRemoteDispatchException
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;)V
@2.0.1
-###org/apache/hadoop/hbase/master/assignment/FailedRemoteDispatchException

+###org/apache/hadoop/hbase/master/assignment/MoveRegionProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/RegionPlan;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.2
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/RegionPlan;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/RegionPlan;)V
@2.2.0
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/RegionPlan;Z)V

+###org/apache/hadoop/hbase/master/assignment/RegionStateStore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#start()V
+#stop()V
+#visitMeta(Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore$RegionStateVisitor;)V
+#updateRegionLocation(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;JJ)V
+#updateRegionState(JJLorg/apache/hadoop/hbase/master/RegionState;Lorg/apache/hadoop/hbase/master/RegionState;)V
+#splitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#mergeRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#deleteRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#deleteRegions(Ljava/util/List;)V
@2.0.0-alpha4
+#updateRegionLocation(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;JJ)V
+#splitRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#deleteRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#updateRegionLocation(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;JJ)V
-#splitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#mergeRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#deleteRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-beta-1
+#updateRegionLocation(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#getRegionState(Lorg/apache/hadoop/hbase/client/Result;I)Lorg/apache/hadoop/hbase/master/RegionState$State;
-#updateRegionLocation(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;JJ)V
-#updateRegionState(JJLorg/apache/hadoop/hbase/master/RegionState;Lorg/apache/hadoop/hbase/master/RegionState;)V
@2.0.0-beta-2
-#start()V
-#stop()V
@2.0.6
+#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.1.0
+#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.1.6
+#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.2.0
+#updateRegionLocation(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)V
+#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#updateRegionLocation(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.2.1
+#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.2.3
+#getRegionState(Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState$State;
-#getRegionState(Lorg/apache/hadoop/hbase/client/Result;I)Lorg/apache/hadoop/hbase/master/RegionState$State;
@2.3.0
+#visitMetaForRegion(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore$RegionStateVisitor;)V
-#updateRegionLocation(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)V
@2.4.0
+#removeRegionReplicas(Lorg/apache/hadoop/hbase/TableName;II)V
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/region/MasterRegion;)V
+#visitMetaEntry(Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore$RegionStateVisitor;Lorg/apache/hadoop/hbase/client/Result;)V
+#getStateColumn(I)[B
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#splitRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#hasMergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#getMergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
+#deleteMergeQualifiers(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#overwriteRegions(Ljava/util/List;I)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/region/MasterRegion;)V
-#visitMetaEntry(Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore$RegionStateVisitor;Lorg/apache/hadoop/hbase/client/Result;)V
-#splitRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#mergeRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#getStateColumn(I)[B
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/region/MasterRegion;)V
+#visitMetaEntry(Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore$RegionStateVisitor;Lorg/apache/hadoop/hbase/client/Result;)V
+#getStateColumn(I)[B
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V

+###org/apache/hadoop/hbase/master/AssignmentListener
@0.98.3-hadoop1
+#regionOpened(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionClosed(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha4
+#regionOpened(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionClosed(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#regionOpened(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#regionClosed(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.2.0
-###org/apache/hadoop/hbase/master/AssignmentListener

+###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$AssignRegionAction
@0.99.0
+#<init>(II)V
+#undoAction()Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$AssignRegionAction

+###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer
@0.95.0
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#roundRobinAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#immediateAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#retainAssignment(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;
@0.96.0-hadoop1
+#initialize()V
+#isStopped()Z
+#stop(Ljava/lang/String;)V
@0.98.1-hadoop1
+#regionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.99.0
+#excludeServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#getExcludedServers()Ljava/util/Set;
+#setRackManager(Lorg/apache/hadoop/hbase/master/RackManager;)V
@0.99.1
+#tablesOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z
+#shouldBeOnMaster(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#excludeServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#getExcludedServers()Ljava/util/Set;
@1.0.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.3.0
+#userTablesOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z
-#<init>()V
@1.3.3
+#postMasterStartupInitialize()V
+#updateBalancerStatus(Z)V
@1.4.0
-#postMasterStartupInitialize()V
-#updateBalancerStatus(Z)V
@1.4.5
+#postMasterStartupInitialize()V
@1.4.8
+#updateBalancerStatus(Z)V
@2.0.0-alpha-1
+#setClusterLoad(Ljava/util/Map;)V
-#postMasterStartupInitialize()V
-#immediateAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
-#updateBalancerStatus(Z)V
@2.0.0-alpha2
-#tablesOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z
-#userTablesOnMaster(Lorg/apache/hadoop/conf/Configuration;)Z
@2.0.0-alpha4
+#shouldBeOnMaster(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#randomAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#regionOnline(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionOffline(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#shouldBeOnMaster(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
-#regionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-beta-1
+#setClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#setClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
@2.0.1
+#postMasterStartupInitialize()V
@2.1.1
+#updateBalancerStatus(Z)V
@2.2.5
+#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
-#setClusterLoad(Ljava/util/Map;)V
@2.4.0
*#shouldBeOnMaster(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z[deprecated]
@2.5.0
+#updateClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#getConf()Lorg/apache/hadoop/conf/Configuration;
-#setClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#setRackManager(Lorg/apache/hadoop/hbase/master/RackManager;)V
-#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer

+###org/apache/hadoop/hbase/master/cleaner/BaseFileCleanerDelegate
@0.96.0-hadoop1
+#<init>()V
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.2.10
+#init(Ljava/util/Map;)V
@1.3.0
-#init(Ljava/util/Map;)V
@1.3.3
+#init(Ljava/util/Map;)V
@1.4.0
-#init(Ljava/util/Map;)V
@1.4.6
+#init(Ljava/util/Map;)V

+###org/apache/hadoop/hbase/master/cleaner/TimeToLiveHFileCleaner
@0.95.0
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
@0.95.2-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
@2.3.0
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z

+###org/apache/hadoop/hbase/master/ClusterSchemaService
@2.0.0-alpha-1

+###org/apache/hadoop/hbase/master/ClusterStatusPublisher
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
@2.2.6
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/HMasterCommandLine
@0.95.0
+#<init>(Ljava/lang/Class;)V
+#run([Ljava/lang/String;)I

+###org/apache/hadoop/hbase/master/MetricsMaster
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/MetricsMasterWrapper;)V
+#getMetricsSource()Lorg/apache/hadoop/hbase/master/MetricsMasterSource;
+#addSplit(JJ)V
+#incrementRequests(I)V
+#updateRITCount(I)V
+#updateRITCountOverThreshold(I)V
+#updateRITOldestAge(J)V
@0.95.1-hadoop1
+#addMetaWALSplit(JJ)V
+#addSnapshot(J)V
+#addSnapshotRestore(J)V
+#addSnapshotClone(J)V
@0.96.0-hadoop1
-#addSplit(JJ)V
-#addMetaWALSplit(JJ)V
-#updateRITCount(I)V
-#updateRITCountOverThreshold(I)V
-#updateRITOldestAge(J)V
-#addSnapshot(J)V
-#addSnapshotRestore(J)V
-#addSnapshotClone(J)V
@1.1.0
+#incrementRequests(J)V
-#incrementRequests(I)V
@1.3.0
+#getMetricsProcSource()Lorg/apache/hadoop/hbase/master/MetricsMasterProcSource;
@2.0.0-alpha-1
+#getMetricsQuotaSource()Lorg/apache/hadoop/hbase/master/MetricsMasterQuotaSource;
+#setNumSpaceQuotas(J)V
+#setNumTableInSpaceQuotaViolation(J)V
+#setNumNamespacesInSpaceQuotaViolation(J)V
+#setNumRegionSizeReports(J)V
+#incrementQuotaObserverTime(J)V
+#getServerCrashProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
+#convertToProcedureMetrics(Lorg/apache/hadoop/hbase/metrics/OperationMetrics;)Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
@2.0.0-alpha2
+#incrementSnapshotObserverTime(J)V
+#incrementSnapshotSizeComputationTime(J)V
+#incrementSnapshotFetchTime(J)V
@3.0.0-alpha-1
+#incrementReadRequests(J)V
+#incrementWriteRequests(J)V

+###org/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType
@1.3.0
+#values()[Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;

+###org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer
@1.2.0
+#<init>()V
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@1.3.0
+#setMasterRpcServices(Lorg/apache/hadoop/hbase/master/MasterRpcServices;)V
@1.7.0
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isSplitEnabled()Z
+#isMergeEnabled()Z
+#getMinRegionCount()I
+#getMergeMinRegionAge()I
+#getMergeMinRegionSizeMb()I
+#computePlansForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@2.0.0-alpha-1
+#planSkipped(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)V
+#getSkippedCount(Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)J
+#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#getConf()Lorg/apache/hadoop/conf/Configuration;
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#isSplitEnabled()Z
-#isMergeEnabled()Z
-#getMinRegionCount()I
-#getMergeMinRegionAge()I
-#getMergeMinRegionSizeMb()I
-#computePlansForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@2.0.0-alpha4
+#planSkipped(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)V
-#planSkipped(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)V
@2.3.0
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isSplitEnabled()Z
+#isMergeEnabled()Z
+#getMinRegionCount()I
+#getMergeMinRegionAge()Ljava/time/Period;
+#getMergeMinRegionSizeMb()I
+#computePlansForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#setMasterRpcServices(Lorg/apache/hadoop/hbase/master/MasterRpcServices;)V
-#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@2.4.0
-###org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer

+###org/apache/hadoop/hbase/master/procedure/CreateTableProcedure$CreateHdfsRegions
@1.1.0
+#createHdfsRegions(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;)Ljava/util/List;

+###org/apache/hadoop/hbase/master/procedure/DeleteNamespaceProcedure
@1.3.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/lang/String;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-beta-2
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureConstants
@1.1.0

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ServerQueue
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
+#requireExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#size()I
+#isEmpty()Z
+#poll()Lorg/apache/hadoop/hbase/procedure2/Procedure;
+#peek()Lorg/apache/hadoop/hbase/procedure2/Procedure;
+#add(Lorg/apache/hadoop/hbase/procedure2/Procedure;Z)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$Queue;)I
+#isAvailable()Z
+#releaseExclusiveLock()V
+#tryExclusiveLock(J)Z
+#releaseSharedLock()V
+#trySharedLock()Z
+#hasExclusiveLock()Z
+#isLocked()Z
+#isSuspended()Z
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/procedure2/LockStatus;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
-#releaseExclusiveLock()V
-#tryExclusiveLock(J)Z
-#releaseSharedLock()V
-#trySharedLock()Z
-#hasExclusiveLock()Z
-#isLocked()Z
-#isSuspended()Z
@2.0.0-beta-2
-###org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ServerQueue

+###org/apache/hadoop/hbase/master/procedure/ModifyNamespaceProcedure
@1.3.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-beta-2
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V

+###org/apache/hadoop/hbase/master/procedure/ProcedureSyncWait$Predicate
@1.1.0
+#evaluate()Ljava/lang/Object;

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$AbstractRSRemoteCall
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher;Lorg/apache/hadoop/hbase/ServerName;)V
+#call()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@2.0.5
-#call()Ljava/lang/Void;
-#call()Ljava/lang/Object;
@2.1.0
+#call()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@2.1.4
-#call()Ljava/lang/Void;
-#call()Ljava/lang/Object;
@2.2.0
-###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$AbstractRSRemoteCall

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$RegionOpenOperation
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Z)V
+#isFailedOpen()Z
+#buildRegionOpenInfoRequest(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionRequest$RegionOpenInfo;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;Z)V
-#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Z)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
-#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;Z)V
-#isFailedOpen()Z

+###org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;ZZ)V
+#<init>()V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;
@1.2.4
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;ZZ)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;ZZ)V
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.2.0
+#isInRecoverMetaState()Z
+#updateProgress(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;J)V
@2.3.0
+#getProcName()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/snapshot/SnapshotFileCache$RefreshCacheTask
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache;)V
+#run()V

+###org/apache/hadoop/hbase/master/SplitLogManager$ResubmitDirective
@0.99.0
+#values()[Lorg/apache/hadoop/hbase/master/SplitLogManager$ResubmitDirective;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/SplitLogManager$ResubmitDirective;

+###org/apache/hadoop/hbase/master/SplitLogManager$TaskBatch
@0.99.0
+#<init>()V
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/mob/CachedMobFile
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/mob/CachedMobFile;
+#access(J)V
+#compareTo(Lorg/apache/hadoop/hbase/mob/CachedMobFile;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#open()V
+#close()V
+#getReferenceCount()J
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HStoreFile;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V

+###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionDelPartition
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionDelPartitionId;)V
+#getId()Lorg/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionDelPartitionId;
+#addStoreFile(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
+#getStoreFiles()Ljava/util/List;
@2.0.0-alpha4
+#addStoreFile(Lorg/apache/hadoop/hbase/regionserver/HStoreFile;)V
-#addStoreFile(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionDelPartition

+###org/apache/hadoop/hbase/mob/MobFile
@2.0.0-alpha-1
+#getScanner()Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#readCell(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/Cell;
+#readCell(Lorg/apache/hadoop/hbase/Cell;ZJ)Lorg/apache/hadoop/hbase/Cell;
+#getFileName()Ljava/lang/String;
+#open()V
+#close()V
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/mob/MobFile;
@2.3.0
+#readCell(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/mob/MobCell;
+#readCell(Lorg/apache/hadoop/hbase/Cell;ZJ)Lorg/apache/hadoop/hbase/mob/MobCell;
-#readCell(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/Cell;
-#readCell(Lorg/apache/hadoop/hbase/Cell;ZJ)Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/monitoring/MonitoredTask$State
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/monitoring/MonitoredTask$State;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/monitoring/MonitoredTask$State;

+###org/apache/hadoop/hbase/namespace/NamespaceAuditor
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#start()V
+#checkQuotaToCreateTable(Lorg/apache/hadoop/hbase/TableName;I)V
+#checkQuotaToSplitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#updateQuotaForRegionMerge(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#addNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#deleteNamespace(Ljava/lang/String;)V
+#removeFromNamespaceUsage(Lorg/apache/hadoop/hbase/TableName;)V
+#removeRegionFromNamespaceUsage(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#isInitialized()Z
@1.1.1
+#checkQuotaToUpdateRegion(Lorg/apache/hadoop/hbase/TableName;I)V
@1.1.5
+#getRegionCountOfTable(Lorg/apache/hadoop/hbase/TableName;)I
@1.2.0
+#getState(Ljava/lang/String;)Lorg/apache/hadoop/hbase/namespace/NamespaceTableAndRegionInfo;
-#getRegionCountOfTable(Lorg/apache/hadoop/hbase/TableName;)I
@1.2.1
+#getRegionCountOfTable(Lorg/apache/hadoop/hbase/TableName;)I
@2.0.0-alpha4
+#checkQuotaToSplitRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#updateQuotaForRegionMerge(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#removeRegionFromNamespaceUsage(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#checkQuotaToSplitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#updateQuotaForRegionMerge(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#removeRegionFromNamespaceUsage(Lorg/apache/hadoop/hbase/HRegionInfo;)V

+###org/apache/hadoop/hbase/procedure/MasterProcedureManager
@0.98.1-hadoop1
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#execProcedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)V
+#isProcedureDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
@0.99.0
+#execProcedureWithRet(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)[B
@2.0.0-alpha-1
+#execProcedure(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)V
+#execProcedureWithRet(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)[B
+#isProcedureDone(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
-#execProcedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)V
-#execProcedureWithRet(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)[B
-#isProcedureDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
@2.0.0
+#checkPermissions(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;Lorg/apache/hadoop/hbase/security/access/AccessChecker;Lorg/apache/hadoop/hbase/security/User;)V

+###org/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs
@0.95.0
+#start(Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;)Z
+#sendAbortToMembers(Lorg/apache/hadoop/hbase/procedure/Procedure;Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#sendGlobalBarrierAcquire(Lorg/apache/hadoop/hbase/procedure/Procedure;[BLjava/util/List;)V
+#sendGlobalBarrierReached(Lorg/apache/hadoop/hbase/procedure/Procedure;Ljava/util/List;)V
+#resetMembers(Lorg/apache/hadoop/hbase/procedure/Procedure;)V

+###org/apache/hadoop/hbase/procedure/ProcedureMember
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/hbase/procedure/SubprocedureFactory;)V
+#defaultPool(JJILjava/lang/String;)Ljava/util/concurrent/ThreadPoolExecutor;
+#createSubprocedure(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/procedure/Subprocedure;
+#submitSubprocedure(Lorg/apache/hadoop/hbase/procedure/Subprocedure;)Z
+#receivedReachedGlobalBarrier(Ljava/lang/String;)V
+#close()V
+#controllerConnectionFailure(Ljava/lang/String;Ljava/io/IOException;)V
+#receiveAbortProcedure(Ljava/lang/String;Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
@0.95.2-hadoop1
+#defaultPool(Ljava/lang/String;I)Ljava/util/concurrent/ThreadPoolExecutor;
+#defaultPool(Ljava/lang/String;IJ)Ljava/util/concurrent/ThreadPoolExecutor;
-#defaultPool(JJILjava/lang/String;)Ljava/util/concurrent/ThreadPoolExecutor;
@0.98.13-hadoop1
+#controllerConnectionFailure(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V
-#controllerConnectionFailure(Ljava/lang/String;Ljava/io/IOException;)V
@0.99.0
+#controllerConnectionFailure(Ljava/lang/String;Ljava/io/IOException;)V
-#controllerConnectionFailure(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V
@1.0.2
+#controllerConnectionFailure(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V
-#controllerConnectionFailure(Ljava/lang/String;Ljava/io/IOException;)V
@1.1.0
+#controllerConnectionFailure(Ljava/lang/String;Ljava/io/IOException;)V
-#controllerConnectionFailure(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V
@1.1.1
+#controllerConnectionFailure(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V
-#controllerConnectionFailure(Ljava/lang/String;Ljava/io/IOException;)V

+###org/apache/hadoop/hbase/quotas/AverageIntervalRateLimiter
@1.1.1
+#<init>()V
+#refill(J)J
+#getWaitInterval(JJJ)J
+#setNextRefillTime(J)V
+#getNextRefillTime()J

+###org/apache/hadoop/hbase/quotas/FixedIntervalRateLimiter
@1.1.1
+#<init>()V
+#refill(J)J
+#getWaitInterval(JJJ)J
+#setNextRefillTime(J)V
+#getNextRefillTime()J

+###org/apache/hadoop/hbase/quotas/NamespaceQuotaSnapshotStore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/quotas/QuotaObserverChore;Ljava/util/Map;)V
+#getSpaceQuota(Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;
+#getCurrentState(Ljava/lang/String;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#getTargetState(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#filterBySubject(Ljava/lang/String;)Ljava/lang/Iterable;
+#setCurrentState(Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#setRegionUsage(Ljava/util/Map;)V
+#setCurrentState(Ljava/lang/Object;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#filterBySubject(Ljava/lang/Object;)Ljava/lang/Iterable;
+#getTargetState(Ljava/lang/Object;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#getCurrentState(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#getSpaceQuota(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;

+###org/apache/hadoop/hbase/quotas/policies/NoWritesViolationPolicyEnforcement
@2.0.0-alpha-1
+#<init>()V
+#enable()V
+#disable()V
+#check(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getPolicyName()Ljava/lang/String;

+###org/apache/hadoop/hbase/quotas/QuotaLimiterFactory
@1.1.0
+#fromThrottle(Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Throttle;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
+#update(Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
@2.0.0-alpha-1
+#<init>()V
+#fromThrottle(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Throttle;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
-#fromThrottle(Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Throttle;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;

+###org/apache/hadoop/hbase/quotas/QuotaState
@1.1.0
+#<init>()V
+#<init>(J)V
+#getLastUpdate()J
+#getLastQuery()J
+#toString()Ljava/lang/String;
+#isBypass()Z
+#setQuotas(Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#update(Lorg/apache/hadoop/hbase/quotas/QuotaState;)V
+#getGlobalLimiter()Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
+#setLastQuery(J)V
@2.0.0-alpha-1
+#setQuotas(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#setQuotas(Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#setLastQuery(J)V

+###org/apache/hadoop/hbase/quotas/SpaceQuotaSnapshotNotifier
@2.0.0-alpha-1
+#initialize(Lorg/apache/hadoop/hbase/client/Connection;)V
+#transitionTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V

+###org/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcementFactory
@2.0.0-alpha-1
+#getInstance()Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcementFactory;
+#create(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcement;
+#createWithoutViolation(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcement;

+###org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;Ljava/lang/Class;)V
+#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)J
@2.0.0-alpha-1
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)J
-#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getDeadline(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)J
@2.0.0-beta-1
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)J
-#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)J
@3.0.0-alpha-2
-###org/apache/hadoop/hbase/regionserver/AnnotationReadingPriorityFunction

+###org/apache/hadoop/hbase/regionserver/compactions/AbstractMultiOutputCompactor
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/AbstractMultiOutputCompactor

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionWindowFactory
@0.98.19-hadoop1
+#<init>()V
+#newIncomingWindow(J)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionWindow;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/CompactionWindowFactory

+###org/apache/hadoop/hbase/regionserver/compactions/DateTieredCompactionRequest
@0.98.19-hadoop1
+#<init>(Ljava/util/Collection;Ljava/util/List;)V
+#getBoundaries()Ljava/util/List;
+#toString()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/DateTieredCompactionRequest

+###org/apache/hadoop/hbase/regionserver/CompositeImmutableSegment
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;Ljava/util/List;)V
+#getAllSegments()Ljava/util/List;
+#getNumOfSegments()I
+#isEmpty()Z
+#getCellsCount()I
+#getFirstAfter(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#close()V
+#maybeCloneWithAllocator(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
+#getMinTimestamp()J
+#getScanner(J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#getScanner(JJ)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#getScanners(JJ)Ljava/util/List;
+#isTagsPresent()Z
+#incScannerCount()V
+#decScannerCount()V
+#keySize()J
+#heapSize()J
+#getMinSequenceId()J
+#getTimeRangeTracker()Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#last()Lorg/apache/hadoop/hbase/Cell;
+#iterator()Ljava/util/Iterator;
+#headSet(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#toString()Ljava/lang/String;
@2.0.0-alpha3
+#shouldSeek(Lorg/apache/hadoop/hbase/io/TimeRange;J)Z
-#shouldSeek(Lorg/apache/hadoop/hbase/client/Scan;J)Z
@2.0.0-alpha4
-#getMinTimestamp()J
@2.0.0-beta-1
+#maybeCloneWithAllocator(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/Cell;
-#maybeCloneWithAllocator(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-2
-#getFirstAfter(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.1
+#getDataSize()J
+#getHeapSize()J
+#incMemStoreSize(JJJ)J
-#keySize()J
-#heapSize()J
@2.0.5
+#incMemStoreSize(JJJI)J
-#incMemStoreSize(JJJ)J
@2.1.0
+#getScanners(J)Ljava/util/List;
+#incMemStoreSize(JJJ)J
-#getScanner(JJ)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#getScanners(JJ)Ljava/util/List;
-#incMemStoreSize(JJJI)J
@2.1.3
+#incMemStoreSize(JJJI)J
-#incMemStoreSize(JJJ)J

+###org/apache/hadoop/hbase/regionserver/DelimitedKeyPrefixRegionSplitPolicy
@0.95.0
+#<init>()V
@2.4.3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/FlushAllStoresPolicy
@1.1.0
+#<init>()V
+#selectStoresToFlush()Ljava/util/Collection;
@2.4.3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/FlushRequestListener
@0.99.0
+#flushRequested(Lorg/apache/hadoop/hbase/regionserver/FlushType;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@1.1.0
+#flushRequested(Lorg/apache/hadoop/hbase/regionserver/FlushType;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#flushRequested(Lorg/apache/hadoop/hbase/regionserver/FlushType;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V

+###org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler
@0.98.21-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;IJ)V
@0.99.0
-###org/apache/hadoop/hbase/regionserver/handler/OpenPriorityRegionHandler

+###org/apache/hadoop/hbase/regionserver/handler/WALSplitterHandler
@0.99.2
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
+#process()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V

+###org/apache/hadoop/hbase/regionserver/HRegion$FlushResultImpl
@1.1.0
+#isFlushSucceeded()Z
+#isCompactionNeeded()Z
+#toString()Ljava/lang/String;
+#getResult()Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult$Result;
@2.0.0-alpha4
+#getResult()Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult$Result;
-#getResult()Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult$Result;

+###org/apache/hadoop/hbase/regionserver/ImmutableSegment$Type
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment$Type;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/regionserver/ImmutableSegment$Type

+###org/apache/hadoop/hbase/regionserver/IncreasingToUpperBoundRegionSplitPolicy
@0.95.0
+#<init>()V
@2.4.3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/LeaseListener
@0.95.0
+#leaseExpired()V

+###org/apache/hadoop/hbase/regionserver/Leases
@0.95.0
+#<init>(I)V
+#run()V
+#closeAfterLeasesExpire()V
+#close()V
+#createLease(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/LeaseListener;)V
+#addLease(Lorg/apache/hadoop/hbase/regionserver/Leases$Lease;)V
+#renewLease(Ljava/lang/String;)V
+#cancelLease(Ljava/lang/String;)V
@2.0.0-alpha-1
+#createLease(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/LeaseListener;)Lorg/apache/hadoop/hbase/regionserver/Leases$Lease;
-#createLease(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/LeaseListener;)V
@2.3.0
-###org/apache/hadoop/hbase/regionserver/Leases

+###org/apache/hadoop/hbase/regionserver/MetricsTable
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsTableWrapperAggregate;)V
+#getTableWrapperAgg()Lorg/apache/hadoop/hbase/regionserver/MetricsTableWrapperAggregate;
+#getTableSourceAgg()Lorg/apache/hadoop/hbase/regionserver/MetricsTableAggregateSource;
@2.2.0
+#incrSplitRequest(Ljava/lang/String;)V
+#incrSplitSuccess(Ljava/lang/String;)V
+#updateSplitTime(Ljava/lang/String;J)V
+#updateFlushTime(Ljava/lang/String;J)V
+#updateFlushMemstoreSize(Ljava/lang/String;J)V
+#updateFlushOutputSize(Ljava/lang/String;J)V
+#updateCompactionTime(Ljava/lang/String;ZJ)V
+#updateCompactionInputFileCount(Ljava/lang/String;ZJ)V
+#updateCompactionInputSize(Ljava/lang/String;ZJ)V
+#updateCompactionOutputFileCount(Ljava/lang/String;ZJ)V
+#updateCompactionOutputSize(Ljava/lang/String;ZJ)V

+###org/apache/hadoop/hbase/regionserver/MetricsTableWrapperAggregateImpl$TableMetricsWrapperRunnable
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsTableWrapperAggregateImpl;)V
+#run()V

+###org/apache/hadoop/hbase/regionserver/OperationStatus
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/HConstants$OperationStatusCode;)V
+#<init>(Lorg/apache/hadoop/hbase/HConstants$OperationStatusCode;Ljava/lang/String;)V
+#getOperationStatusCode()Lorg/apache/hadoop/hbase/HConstants$OperationStatusCode;
+#getExceptionMsg()Ljava/lang/String;
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/HConstants$OperationStatusCode;Ljava/lang/Exception;)V
@2.4.0
+#<init>(Lorg/apache/hadoop/hbase/HConstants$OperationStatusCode;Lorg/apache/hadoop/hbase/client/Result;)V
+#getResult()Lorg/apache/hadoop/hbase/client/Result;

+###org/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker
@2.0.0-alpha-1
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult;
+#isEmpty()Z
+#update()V
+#reset()V
@2.0.0-alpha4
+#getCellComparator()Lorg/apache/hadoop/hbase/CellComparator;

+###org/apache/hadoop/hbase/regionserver/querymatcher/MajorCompactionScanQueryMatcher
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;JJJJ)V
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;JJJJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;JJJJ)V
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;JJJJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;JJJJ)V

+###org/apache/hadoop/hbase/regionserver/querymatcher/RawScanQueryMatcher
@1.4.0
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#create(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;ZJJ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/RawScanQueryMatcher;

+###org/apache/hadoop/hbase/regionserver/querymatcher/ScanWildcardColumnTracker
@1.4.0
+#<init>(IIJ)V
+#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#reset()V
+#getColumnHint()Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnCount;
+#done()Z
+#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#isDone(J)Z
@2.0.0-alpha-1
+#checkColumn(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#checkVersions(Lorg/apache/hadoop/hbase/Cell;JBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#getNextRowOrNextColumn(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#beforeShipped()V
-#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
-#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
-#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
@2.0.0-beta-1
+#<init>(IIJLorg/apache/hadoop/hbase/CellComparator;)V
-#<init>(IIJ)V

+###org/apache/hadoop/hbase/regionserver/Region$Operation
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/Region$Operation;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region$Operation;

+###org/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;J)V
+#getRegion()Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getMasterSystemTime()J
@0.99.0
-###org/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext

+###org/apache/hadoop/hbase/regionserver/RegionSplitPolicy
@0.95.0
+#<init>()V
+#create(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionSplitPolicy;
@0.98.9-hadoop1
+#getSplitPolicyClass(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
@2.0.0-alpha2
+#getSplitPolicyClass(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#getSplitPolicyClass(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;

+###org/apache/hadoop/hbase/regionserver/RowTooBigException
@0.99.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/regionserver/RSStatusServlet
@0.95.0
+#<init>()V
@2.5.0
-###org/apache/hadoop/hbase/regionserver/RSStatusServlet

+###org/apache/hadoop/hbase/regionserver/ScannerContext$NextState
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/ScannerContext$NextState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$NextState;
+#hasMoreValues()Z
+#limitReached()Z
+#isValidState(Lorg/apache/hadoop/hbase/regionserver/ScannerContext$NextState;)Z
+#hasMoreValues(Lorg/apache/hadoop/hbase/regionserver/ScannerContext$NextState;)Z

+###org/apache/hadoop/hbase/regionserver/SegmentScanner
@2.0.0-alpha-1
+#peek()Lorg/apache/hadoop/hbase/Cell;
+#next()Lorg/apache/hadoop/hbase/Cell;
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToLastRow()Z
+#getScannerOrder()J
+#close()V
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
+#requestSeek(Lorg/apache/hadoop/hbase/Cell;ZZ)Z
+#realSeekDone()Z
+#enforceSeek()V
+#isFileScanner()Z
+#getFilePath()Lorg/apache/hadoop/fs/Path;
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
+#shipped()V
+#toString()Ljava/lang/String;
@2.0.0-alpha4
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/HStore;J)Z
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
@2.1.0
-#getScannerOrder()J

+###org/apache/hadoop/hbase/regionserver/ShutdownHook
@0.95.0
+#<init>()V
+#install(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/Thread;)V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/regionserver/SplitLogWorker
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
+#run()V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#start()V
+#stop()V
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
@0.96.1-hadoop1
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
+#stopTask()V
+#getTaskReadySeq()I
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
-#nodeDataChanged(Ljava/lang/String;)V
-#nodeChildrenChanged(Ljava/lang/String;)V
@0.99.2
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/wal/WALFactory;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/wal/WALFactory;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/wal/WALFactory;)V

+###org/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
+#withTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withOutputDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withFilePath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withFavoredNodes([Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withComparator(Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withBloomType(Lorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withMaxKeyCount(J)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withFileContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#withShouldDropCacheBehind(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
+#build()Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
@2.0.0-alpha4
-#withTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
@2.2.0
+#withCompactedFilesSupplier(Ljava/util/function/Supplier;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
@2.3.0
-#withComparator(Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
@2.4.0
+#withFileStoragePolicy(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
@2.5.0
+#withWriterCreationTracker(Ljava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
@3.0.0-alpha-1
-#withWriterCreationTracker(Ljava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;
@3.0.0-alpha-3
+#withWriterCreationTracker(Ljava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter$Builder;

+###org/apache/hadoop/hbase/regionserver/StoreUtils
@0.95.0
+#<init>()V
+#getDeterministicRandomSeed(Ljava/util/Collection;)Ljava/lang/Integer;
+#hasReferences(Ljava/util/Collection;)Z
+#getLowestTimestamp(Ljava/util/Collection;)J
@2.0.0-alpha-1
+#getDeterministicRandomSeed(Ljava/util/Collection;)Ljava/util/OptionalInt;
+#getMaxMemstoreTSInList(Ljava/util/Collection;)J
+#getMaxSequenceIdInList(Ljava/util/Collection;)J
-#getDeterministicRandomSeed(Ljava/util/Collection;)Ljava/lang/Integer;
@2.0.0-alpha4
+#getMaxMemStoreTSInList(Ljava/util/Collection;)Ljava/util/OptionalLong;
+#getMaxSequenceIdInList(Ljava/util/Collection;)Ljava/util/OptionalLong;
-#getMaxMemstoreTSInList(Ljava/util/Collection;)J
-#getMaxSequenceIdInList(Ljava/util/Collection;)J
@2.3.7
+#createStoreConfiguration(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/conf/Configuration;
@2.4.0
-#createStoreConfiguration(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/conf/Configuration;
@2.4.1
+#getChecksumType(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/ChecksumType;
+#getBytesPerChecksum(Lorg/apache/hadoop/conf/Configuration;)I
@2.4.7
+#createStoreConfiguration(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/conf/Configuration;
@2.5.0
+#toStoreFileInfo(Ljava/util/Collection;)Ljava/util/List;
+#getTotalUncompressedBytes(Ljava/util/List;)J
+#getStorefilesSize(Ljava/util/Collection;Ljava/util/function/Predicate;)J
+#getStorefileFieldSize(Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Ljava/util/function/ToLongFunction;)J
-#<init>()V
@3.0.0-alpha-1
+#<init>()V
-#createStoreConfiguration(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/conf/Configuration;
-#toStoreFileInfo(Ljava/util/Collection;)Ljava/util/List;
-#getTotalUncompressedBytes(Ljava/util/List;)J
-#getStorefilesSize(Ljava/util/Collection;Ljava/util/function/Predicate;)J
-#getStorefileFieldSize(Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Ljava/util/function/ToLongFunction;)J
@3.0.0-alpha-2
+#createStoreConfiguration(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/conf/Configuration;
@3.0.0-alpha-3
+#toStoreFileInfo(Ljava/util/Collection;)Ljava/util/List;
+#getTotalUncompressedBytes(Ljava/util/List;)J
+#getStorefilesSize(Ljava/util/Collection;Ljava/util/function/Predicate;)J
+#getStorefileFieldSize(Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Ljava/util/function/ToLongFunction;)J
-#<init>()V

+###org/apache/hadoop/hbase/regionserver/StripeStoreEngine
@0.98.0-hadoop1
+#<init>()V
+#needsCompaction(Ljava/util/List;)Z
+#createCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;

+###org/apache/hadoop/hbase/regionserver/StripeStoreFileManager
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StripeStoreConfig;)V
+#loadFiles(Ljava/util/List;)V
+#getStorefiles()Ljava/util/Collection;
+#insertNewFiles(Ljava/util/Collection;)V
+#clearFiles()Lcom/google/common/collect/ImmutableCollection;
+#getStorefileCount()I
+#getCandidateFilesForRowKeyBefore(Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/Iterator;
+#updateCandidateFilesForRowKeyBefore(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/Iterator;
+#getSplitPoint()[B
+#getFilesForScanOrGet(Z[B[B)Ljava/util/Collection;
+#addCompactionResults(Ljava/util/Collection;Ljava/util/Collection;)V
+#getStoreCompactionPriority()I
+#getStartRow(I)[B
+#getEndRow(I)[B
+#getLevel0Files()Ljava/util/List;
+#getStripeBoundaries()Ljava/util/List;
+#getStripes()Ljava/util/ArrayList;
+#getStripeCount()I
@0.98.7-hadoop1
+#getUnneededFiles(JLjava/util/List;)Ljava/util/Collection;
@0.98.11-hadoop1
+#getCompactionPressure()D
@0.98.19-hadoop1
+#getStoreFileComparator()Ljava/util/Comparator;
@0.99.0
-#getCompactionPressure()D
-#getStoreFileComparator()Ljava/util/Comparator;
@0.99.1
+#updateCandidateFilesForRowKeyBefore(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Iterator;
-#updateCandidateFilesForRowKeyBefore(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/Iterator;
@1.1.0
+#getCompactionPressure()D
@1.3.0
+#getCompactedfiles()Ljava/util/Collection;
+#clearCompactedFiles()Lcom/google/common/collect/ImmutableCollection;
+#removeCompactedFiles(Ljava/util/Collection;)V
+#getStoreFileComparator()Ljava/util/Comparator;
+#clearCompactedFiles()Ljava/util/Collection;
@1.4.0
+#getFilesForScanOrGet([BZ[BZ)Ljava/util/Collection;
-#getFilesForScanOrGet(Z[B[B)Ljava/util/Collection;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StripeStoreConfig;)V
+#getFilesForScan([BZ[BZ)Ljava/util/Collection;
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StripeStoreConfig;)V
-#getFilesForScanOrGet([BZ[BZ)Ljava/util/Collection;
@2.0.0-alpha2
+#getCompactedFilesCount()I
+#clearFiles()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;
+#clearCompactedFiles()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;
-#clearFiles()Lcom/google/common/collect/ImmutableCollection;
-#clearCompactedFiles()Lcom/google/common/collect/ImmutableCollection;
@2.0.0-alpha4
+#getSplitPoint()Ljava/util/Optional;
-#getSplitPoint()[B
@2.0.0-beta-1
+#clearFiles()Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableCollection;
+#clearCompactedFiles()Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableCollection;
-#clearFiles()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;
-#clearCompactedFiles()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;

+###org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter
@2.0.0-alpha-1
+#<init>(Lio/netty/channel/EventLoop;)V
+#append(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
+#sync()Ljava/util/concurrent/CompletableFuture;
+#close()V
+#getOutput()Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)V
-#<init>(Lio/netty/channel/EventLoop;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
-#<init>(Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)V
@2.1.9
+#sync(Z)Ljava/util/concurrent/CompletableFuture;
-#sync()Ljava/util/concurrent/CompletableFuture;
@2.2.0
+#sync()Ljava/util/concurrent/CompletableFuture;
-#sync(Z)Ljava/util/concurrent/CompletableFuture;
@2.2.3
+#sync(Z)Ljava/util/concurrent/CompletableFuture;
-#sync()Ljava/util/concurrent/CompletableFuture;
@2.2.6
+#getSyncedLength()J
@2.3.0
-#getSyncedLength()J
@2.3.1
+#getSyncedLength()J

+###org/apache/hadoop/hbase/regionserver/wal/MetricsWAL
@0.95.0
+#<init>()V
+#finishSync(J)V
+#finishAppend(JJ)V
@0.98.9-hadoop1
+#logRollRequested(Z)V
+#preLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#preLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#logCloseRequested()V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@0.99.0
-#logRollRequested(Z)V
-#preLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#preLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#postLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#logCloseRequested()V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@0.99.2
+#postSync(JI)V
+#postAppend(JJ)V
+#logRollRequested(Z)V
-#finishSync(J)V
-#finishAppend(JJ)V
@1.3.0
+#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postAppend(JJ)V
@1.5.0
+#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#logRollRequested(Z)V
@1.7.0
+#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha-1
+#logRollRequested(Z)V
-#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha3
+#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.3.0
+#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#logRollRequested(Z)V
@2.3.6
+#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.4.0
-#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.4.3
+#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter
@0.95.1-hadoop1
+#<init>()V
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#append(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
+#close()V
+#sync()V
+#getLength()J
+#getStream()Lorg/apache/hadoop/fs/FSDataOutputStream;
+#setWALTrailer(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;)V
@0.96.1-hadoop1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@0.99.2
+#append(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
-#append(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
-#setWALTrailer(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;)V
@1.5.0
+#sync(Z)V
-#sync()V
@2.0.0-alpha-1
+#sync()V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
-#sync(Z)V
-#getLength()J
@2.1.0
+#sync(Z)V
-#sync()V
@2.2.6
+#getSyncedLength()J
@2.3.0
-#getSyncedLength()J
@2.3.1
+#getSyncedLength()J

+###org/apache/hadoop/hbase/regionserver/wal/WALActionsListener$Base
@0.99.2
+#<init>()V
+#preLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#preLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#logRollRequested(Z)V
+#logCloseRequested()V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postAppend(JJ)V
+#postSync(JI)V
@1.3.0
+#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postAppend(JJ)V
@1.5.0
+#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#logRollRequested(Z)V
@2.0.0-alpha-1
+#logRollRequested(Z)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#logRollRequested(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha3
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/regionserver/wal/WALActionsListener$Base

+###org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor
@0.95.1-hadoop1
+#uncompress(Lcom/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/regionserver/wal/Dictionary;)[B
@0.98.0-hadoop1
+#uncompress(Lcom/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/io/util/Dictionary;)[B
-#uncompress(Lcom/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/regionserver/wal/Dictionary;)[B
@2.0.0-alpha-1
+#uncompress(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/io/util/Dictionary;)[B
-#uncompress(Lcom/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/io/util/Dictionary;)[B
@2.0.0-beta-1
+#uncompress(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/io/util/Dictionary;)[B
-#uncompress(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/io/util/Dictionary;)[B
@2.1.0
+#uncompress(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;Ljava/lang/Enum;)[B
-#uncompress(Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;Lorg/apache/hadoop/hbase/io/util/Dictionary;)[B

+###org/apache/hadoop/hbase/regionserver/wal/WALEdit
@0.95.0
+#<init>()V
+#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#add(Lorg/apache/hadoop/hbase/KeyValue;)V
+#isEmpty()Z
+#size()I
+#getKeyValues()Ljava/util/List;
+#getScopes()Ljava/util/NavigableMap;
+#setScopes(Ljava/util/NavigableMap;)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#heapSize()J
+#toString()Ljava/lang/String;
@0.95.1-hadoop1
+#<init>(Z)V
+#isMetaEditFamily([B)Z
+#isReplay()Z
+#add(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getAndRemoveScopes()Ljava/util/NavigableMap;
+#readFromCells(Lorg/apache/hadoop/hbase/codec/Codec$Decoder;I)I
+#createCompaction(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getCompaction(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;
-#add(Lorg/apache/hadoop/hbase/KeyValue;)V
-#getScopes()Ljava/util/NavigableMap;
-#setScopes(Ljava/util/NavigableMap;)V
@0.96.1-hadoop1
+#getKeyValues()Ljava/util/ArrayList;
-#getKeyValues()Ljava/util/List;
@0.98.4-hadoop1
+#createCompaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getCompaction(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;
-#createCompaction(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
-#getCompaction(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;
@0.98.7-hadoop1
*#add(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;[deprecated]
+#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
*#getKeyValues()Ljava/util/ArrayList;[deprecated]
+#getCells()Ljava/util/ArrayList;
@0.99.0
+#isMetaEditFamily(Lorg/apache/hadoop/hbase/Cell;)Z
+#createFlushWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getFlushDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;
+#createRegionEventWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getRegionEventDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;
-#add(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;[deprecated]
-#getKeyValues()Ljava/util/ArrayList;[deprecated]
@1.1.0
+#isMetaEdit()Z
+#createBulkLoadEvent(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getBulkLoadDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;
@1.2.0
+#setCells(Ljava/util/ArrayList;)V
@1.2.1
+#getRowForRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)[B
@1.2.4
+#isCompactionMarker(Lorg/apache/hadoop/hbase/Cell;)Z
@1.3.0
+#<init>(I)V
+#<init>(IZ)V
@1.3.2
+#estimatedSerializedSizeOf()J
@2.0.0-alpha-1
+#createFlushWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getFlushDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;
+#createRegionEventWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getRegionEventDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;
+#createCompaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getCompaction(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;
+#createBulkLoadEvent(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getBulkLoadDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;
-#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
-#getAndRemoveScopes()Ljava/util/NavigableMap;
-#readFields(Ljava/io/DataInput;)V
-#write(Ljava/io/DataOutput;)V
-#createFlushWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
-#getFlushDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;
-#createRegionEventWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
-#getRegionEventDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;
-#createCompaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
-#getCompaction(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;
-#createBulkLoadEvent(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
-#getBulkLoadDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/regionserver/wal/WALEdit

+###org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint
@0.98.9-hadoop1
+#<init>()V
+#getPeerUUID()Ljava/util/UUID;
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
+#getRegionServers()Ljava/util/List;
+#setRegionServers(Ljava/util/List;)V
+#getLastRegionServerUpdate()J
@2.0.0-alpha3
+#start()V
+#stop()V
@3.0.0-alpha-1
+#init(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$Context;)V
-#getRegionServers()Ljava/util/List;
-#setRegionServers(Ljava/util/List;)V
-#getLastRegionServerUpdate()J

+###org/apache/hadoop/hbase/replication/regionserver/HFileReplicator
@1.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
+#replicate()Ljava/lang/Void;
@1.3.6
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
@1.4.11
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
@2.1.7
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
@2.2.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
@2.2.6
+#close()V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationObserver
@1.4.0
+#<init>()V
+#preCommitStoreFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
@2.0.0-alpha4
+#getRegionObserver()Ljava/util/Optional;

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource
@0.95.0
+#<init>()V
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/Stoppable;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/String;)V
+#enqueueLog(Lorg/apache/hadoop/fs/Path;)V
+#run()V
+#startup()V
+#terminate(Ljava/lang/String;)V
+#terminate(Ljava/lang/String;Ljava/lang/Exception;)V
+#isSlaveDown()Z
+#getPeerClusterZnode()Ljava/lang/String;
+#getPeerClusterId()Ljava/lang/String;
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#getStats()Ljava/lang/String;
@0.95.2-hadoop1
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;)V
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/Stoppable;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/String;)V
-#isSlaveDown()Z
@0.98.9-hadoop1
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#terminate(Ljava/lang/String;Ljava/lang/Exception;Z)V
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;)V
@0.98.11-hadoop1
+#getSourceMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
@0.99.0
-#getSourceMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
@1.0.0
+#getSourceMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
@1.3.0
+#addHFileRefs(Lorg/apache/hadoop/hbase/TableName;[BLjava/util/List;)V
@1.4.13
+#getLastLoggedPath()Lorg/apache/hadoop/fs/Path;
+#getLastLoggedPosition()J
@1.5.0
+#getWalGroupStatus()Ljava/util/Map;
-#getLastLoggedPath()Lorg/apache/hadoop/fs/Path;
-#getLastLoggedPosition()J
@1.6.0
+#getLastLoggedPath()Lorg/apache/hadoop/fs/Path;
+#getLastLoggedPosition()J
@1.7.0
+#getQueues()Ljava/util/Map;
+#isSourceActive()Z
@2.0.0-alpha-1
+#getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
+#getReplicationEndpoint()Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
+#getSourceManager()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
+#tryThrottle(I)V
+#isPeerEnabled()Z
+#getPeerId()Ljava/lang/String;
+#postShipEdits(Ljava/util/List;I)V
-#getQueues()Ljava/util/Map;
-#getPeerClusterId()Ljava/lang/String;
-#getLastLoggedPath()Lorg/apache/hadoop/fs/Path;
-#getLastLoggedPosition()J
-#getWalGroupStatus()Ljava/util/Map;
@2.0.0-alpha3
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getWALFileLengthProvider()Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.0.0-alpha4
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getServerWALsBelongTo()Lorg/apache/hadoop/hbase/ServerName;
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.1.0
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeer;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#getWalGroupStatus()Ljava/util/Map;
+#getQueueId()Ljava/lang/String;
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#run()V
-#getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
-#getPeerClusterZnode()Ljava/lang/String;
@2.1.8
+#terminate(Ljava/lang/String;Ljava/lang/Exception;ZZ)V
@2.2.0
-#terminate(Ljava/lang/String;Ljava/lang/Exception;ZZ)V
@2.2.3
+#terminate(Ljava/lang/String;Ljava/lang/Exception;ZZ)V
@2.3.0
+#getPeerClusterUUID()Ljava/util/UUID;
+#getReplicationQueueInfo()Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;
+#isWorkerRunning()Z
@2.4.0
+#startup()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
+#getReplicationQueueStorage()Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;
-#<init>()V
-#startup()V
-#getPeerClusterUUID()Ljava/util/UUID;
@2.4.2
+#getQueues()Ljava/util/Map;
+#logPeerId()Ljava/lang/String;
@3.0.0-alpha-1
+#getPeer()Lorg/apache/hadoop/hbase/replication/ReplicationPeer;
-#isPeerEnabled()Z
-#getPeerId()Ljava/lang/String;

+###org/apache/hadoop/hbase/replication/ReplicationEndpoint
@0.98.9-hadoop1
+#init(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$Context;)V
+#canReplicateToSameCluster()Z
+#getPeerUUID()Ljava/util/UUID;
+#getWALEntryfilter()Lorg/apache/hadoop/hbase/replication/WALEntryFilter;
+#replicate(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;)Z
@2.0.0-alpha3
+#isRunning()Z
+#isStarting()Z
+#start()V
+#awaitRunning()V
+#awaitRunning(JLjava/util/concurrent/TimeUnit;)V
+#stop()V
+#awaitTerminated()V
+#awaitTerminated(JLjava/util/concurrent/TimeUnit;)V
+#failureCause()Ljava/lang/Throwable;

+###org/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy
@0.98.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/access/AccessControlFilter$Strategy;

+###org/apache/hadoop/hbase/security/access/ZKPermissionWatcher
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/access/TableAuthManager;Lorg/apache/hadoop/conf/Configuration;)V
+#start()V
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#writeToZookeeper([B[B)V
@0.98.9-hadoop1
+#deleteTableACLNode(Lorg/apache/hadoop/hbase/TableName;)V
@0.98.12-hadoop1
+#deleteNamespaceACLNode(Ljava/lang/String;)V
@0.98.15-hadoop1
+#close()V
@0.99.0
-#close()V
-#deleteTableACLNode(Lorg/apache/hadoop/hbase/TableName;)V
-#deleteNamespaceACLNode(Ljava/lang/String;)V
@1.0.0
+#deleteTableACLNode(Lorg/apache/hadoop/hbase/TableName;)V
@1.0.1
+#deleteNamespaceACLNode(Ljava/lang/String;)V
@1.3.0
+#close()V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/security/access/TableAuthManager;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/access/TableAuthManager;Lorg/apache/hadoop/conf/Configuration;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/security/access/AuthManager;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/security/access/TableAuthManager;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/security/token/FsDelegationToken
@0.96.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/security/UserProvider;Ljava/lang/String;)V
+#acquireDelegationToken(Lorg/apache/hadoop/fs/FileSystem;)V
+#releaseDelegationToken()V
+#getUserProvider()Lorg/apache/hadoop/hbase/security/UserProvider;
+#getRenewer()Ljava/lang/String;
+#getUserToken()Lorg/apache/hadoop/security/token/Token;
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/security/token/FsDelegationToken

+###org/apache/hadoop/hbase/security/visibility/EnforcingScanLabelGenerator
@0.98.2-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getLabels(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Ljava/util/List;

+###org/apache/hadoop/hbase/security/visibility/expression/NonLeafExpressionNode
@0.98.0-hadoop1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/security/visibility/expression/Operator;)V
+#<init>(Lorg/apache/hadoop/hbase/security/visibility/expression/Operator;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/security/visibility/expression/Operator;[Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;)V
+#getOperator()Lorg/apache/hadoop/hbase/security/visibility/expression/Operator;
+#getChildExps()Ljava/util/List;
+#addChildExp(Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;)V
+#addChildExps(Ljava/util/List;)V
+#toString()Ljava/lang/String;
+#isSingleNode()Z
+#deepClone()Lorg/apache/hadoop/hbase/security/visibility/expression/NonLeafExpressionNode;
+#deepClone()Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;

+###org/apache/hadoop/hbase/security/visibility/VisibilityController$VisibilityReplication
@0.98.9-hadoop1
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@0.99.0
-###org/apache/hadoop/hbase/security/visibility/VisibilityController$VisibilityReplication

+###org/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache
@0.98.6-hadoop1
+#createAndGet(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache;
+#get()Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache;
+#refreshLabelsCache([B)V
+#refreshUserAuthsCache([B)V
+#getLabelOrdinal(Ljava/lang/String;)I
+#getLabel(I)Ljava/lang/String;
+#getLabelsCount()I
+#getAuths(Ljava/lang/String;)Ljava/util/List;
+#getAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
+#writeToZookeeper([BZ)V
@0.98.10-hadoop1
+#getUserAuths(Ljava/lang/String;)Ljava/util/List;
+#getGroupAuths([Ljava/lang/String;)Ljava/util/List;
+#getUserAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
+#getGroupAuthsAsOrdinals([Ljava/lang/String;)Ljava/util/Set;
-#getAuths(Ljava/lang/String;)Ljava/util/List;
-#getAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
@0.99.0
+#getAuths(Ljava/lang/String;)Ljava/util/List;
+#getAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
-#getUserAuths(Ljava/lang/String;)Ljava/util/List;
-#getGroupAuths([Ljava/lang/String;)Ljava/util/List;
-#getUserAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
-#getGroupAuthsAsOrdinals([Ljava/lang/String;)Ljava/util/Set;
@1.0.0
+#getUserAuths(Ljava/lang/String;)Ljava/util/List;
+#getGroupAuths([Ljava/lang/String;)Ljava/util/List;
+#getUserAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
+#getGroupAuthsAsOrdinals([Ljava/lang/String;)Ljava/util/Set;
-#getAuths(Ljava/lang/String;)Ljava/util/List;
-#getAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
@2.0.0-beta-1
+#createAndGet(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache;
-#createAndGet(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache;

+###org/apache/hadoop/hbase/snapshot/SnapshotDescriptionUtils$CompletedSnaphotDirectoriesFilter
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.98.0-hadoop1
-#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/snapshot/SnapshotInfo$SnapshotStats
@0.95.1-hadoop1
+#getSnapshotDescription()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#isSnapshotCorrupted()Z
+#getStoreFilesCount()I
+#getArchivedStoreFilesCount()I
+#getLogsCount()I
+#getMissingStoreFilesCount()I
+#getMissingLogsCount()I
+#getStoreFilesSize()J
+#getSharedStoreFilesSize()J
+#getArchivedStoreFileSize()J
+#getSharedStoreFilePercentage()F
+#getLogsSize()J
@0.98.6-hadoop1
+#getCorruptedStoreFilesCount()I
@1.3.0
+#getNonSharedArchivedStoreFilesSize()J
@2.0.0-alpha-1
+#getSnapshotDescription()Lorg/apache/hadoop/hbase/client/SnapshotDescription;
+#getMobStoreFilesCount()I
+#getMobStoreFilesSize()J
+#getMobStoreFilePercentage()F
-#getSnapshotDescription()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;

+###org/apache/hadoop/hbase/SplitLogTask$Owned
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
@2.0.0-beta-1
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V

+###org/apache/hadoop/hbase/SslRMIServerSocketFactorySecure
@0.98.23-hadoop1
+#<init>()V
+#createServerSocket(I)Ljava/net/ServerSocket;
@0.99.0
-###org/apache/hadoop/hbase/SslRMIServerSocketFactorySecure

+###org/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl$ImplData;
+#setFilter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl;
+#setTaskMonitor(Lorg/apache/hadoop/hbase/monitoring/TaskMonitor;)Lorg/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl;
+#setFormat(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer()Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;)V
+#renderNoFlush(Ljava/io/Writer;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@2.1.5
+#setParent(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl;

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmplImpl
@0.95.2-hadoop1
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheViewTmpl$ImplData
@0.98.4-hadoop1
+#<init>()V
+#setCacheConfig(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
+#getCacheConfig()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setBcn(Ljava/lang/String;)V
+#getBcn()Ljava/lang/String;
+#setBcv(Ljava/lang/String;)V
+#getBcv()Ljava/lang/String;
@2.2.0
+#setBlockCache(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#getBlockCache()Lorg/apache/hadoop/hbase/io/hfile/BlockCache;

+###org/apache/hadoop/hbase/tmpl/regionserver/RegionListTmpl$ImplData
@0.95.0
+#<init>()V
+#setRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getRegionServer()Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#setOnlineRegions(Ljava/util/List;)V
+#getOnlineRegions()Ljava/util/List;

+###org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl$ImplData
@0.95.0
+#<init>()V
+#setRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getRegionServer()Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#setFilter(Ljava/lang/String;)V
+#getFilter()Ljava/lang/String;
+#getFilter__IsNotDefault()Z
+#setFormat(Ljava/lang/String;)V
+#getFormat()Ljava/lang/String;
+#getFormat__IsNotDefault()Z
@0.98.4-hadoop1
+#setBcn(Ljava/lang/String;)V
+#getBcn()Ljava/lang/String;
+#getBcn__IsNotDefault()Z
+#setBcv(Ljava/lang/String;)V
+#getBcv()Ljava/lang/String;
+#getBcv__IsNotDefault()Z

+###org/apache/hadoop/hbase/util/AbstractFileStatusFilter
@0.98.21-hadoop1
+#<init>()V
+#accept(Lorg/apache/hadoop/fs/FileStatus;)Z
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.99.0
-###org/apache/hadoop/hbase/util/AbstractFileStatusFilter

+###org/apache/hadoop/hbase/util/ConfigurationUtil
@0.98.14-hadoop1
+#setKeyValues(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/Collection;)V
+#setKeyValues(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/Collection;C)V
+#getKeyValues(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;
+#getKeyValues(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;C)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/util/ConfigurationUtil

+###org/apache/hadoop/hbase/util/FSMapRUtils
@0.95.0
+#<init>()V
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@0.95.1-hadoop1
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
-#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@2.1.0
-###org/apache/hadoop/hbase/util/FSMapRUtils

+###org/apache/hadoop/hbase/util/FSUtils$RegionDirFilter
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.98.21-hadoop1
-#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.99.0
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@1.4.0
-#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/util/HBaseFsck$HbckInfo
@0.95.0
+#addServer(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#toString()Ljava/lang/String;
+#getStartKey()[B
+#getEndKey()[B
+#getTableName()[B
+#getRegionNameAsString()Ljava/lang/String;
+#getRegionName()[B
+#setSkipChecks(Z)V
+#isSkipChecks()Z
@0.95.2-hadoop1
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#getTableName()[B
@0.96.2-hadoop1
+#setMerged(Z)V
+#isMerged()Z
@1.1.0
+#getReplicaId()I
+#getPrimaryHRIForDeployedReplica()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-alpha4
+#addServer(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#getPrimaryHRIForDeployedReplica()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#addServer(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#getPrimaryHRIForDeployedReplica()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.6
-###org/apache/hadoop/hbase/util/HBaseFsck$HbckInfo

+###org/apache/hadoop/hbase/util/HBaseFsck
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;)V
+#connect()V
+#offlineHdfsIntegrityRepair()V
+#onlineConsistencyRepair()I
+#onlineHbck()I
+#getErrors()Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
+#fixEmptyMetaCells()V
+#fixOrphanTables()V
+#rebuildMeta(Z)Z
+#loadHdfsRegionDirs()V
+#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)I
+#dumpOverlapProblems(Lcom/google/common/collect/Multimap;)V
+#dumpSidelinedRegions(Ljava/util/Map;)V
+#getOverlapGroups(Ljava/lang/String;)Lcom/google/common/collect/Multimap;
+#setDisplayFullReport()V
+#setFixAssignments(Z)V
+#setFixMeta(Z)V
+#setFixEmptyMetaCells(Z)V
+#setCheckHdfs(Z)V
+#setFixHdfsHoles(Z)V
+#setFixTableOrphans(Z)V
+#setFixHdfsOverlaps(Z)V
+#setFixHdfsOrphans(Z)V
+#setFixVersionFile(Z)V
+#shouldFixVersionFile()Z
+#setSidelineBigOverlaps(Z)V
+#shouldSidelineBigOverlaps()Z
+#setFixSplitParents(Z)V
+#setFixReferenceFiles(Z)V
+#shouldIgnorePreCheckPermission()Z
+#setIgnorePreCheckPermission(Z)V
+#setMaxMerge(I)V
+#getMaxMerge()I
+#setMaxOverlapsToSideline(I)V
+#getMaxOverlapsToSideline()I
+#includeTable(Ljava/lang/String;)V
+#setTimeLag(J)V
+#setSidelineDir(Ljava/lang/String;)V
+#getHFilecorruptionChecker()Lorg/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker;
+#setHFileCorruptionChecker(Lorg/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker;)V
+#setRetCode(I)V
+#getRetCode()I
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
+#exec(Ljava/util/concurrent/ExecutorService;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/HBaseFsck;
+#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@0.95.1-hadoop1
+#setFixTableLocks(Z)V
@0.95.2-hadoop1
+#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lcom/google/common/collect/Multimap;
+#includeTable(Lorg/apache/hadoop/hbase/TableName;)V
-#getOverlapGroups(Ljava/lang/String;)Lcom/google/common/collect/Multimap;
-#includeTable(Ljava/lang/String;)V
@0.96.1-hadoop1
-#run([Ljava/lang/String;)I
@0.96.2-hadoop1
+#keyOnly([B)[B
+#checkRegionBoundaries()V
@0.98.11-hadoop1
+#setFixTableZNodes(Z)V
@0.99.0
-#setFixTableZNodes(Z)V
@1.0.0
+#close()V
+#setFixTableZNodes(Z)V
@1.2.0
+#setForceExclusive()V
+#isExclusive()Z
+#setDisableBalancer()V
+#shouldDisableBalancer()Z
@1.2.6
+#setRemoveParents(Z)V
@1.3.0
+#setDisableSplitAndMerge()V
+#shouldDisableSplitAndMerge()Z
+#setFixReplication(Z)V
-#setRemoveParents(Z)V
@1.3.1
+#setRemoveParents(Z)V
@1.4.0
+#setFixHFileLinks(Z)V
-#setDisableBalancer()V
-#setDisableSplitAndMerge()V
-#shouldDisableBalancer()Z
-#shouldDisableSplitAndMerge()Z
@2.0.0-alpha-1
-#setFixTableLocks(Z)V
-#setFixTableZNodes(Z)V
@2.0.0-alpha2
+#dumpOverlapProblems(Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;)V
+#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;
-#dumpOverlapProblems(Lcom/google/common/collect/Multimap;)V
-#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lcom/google/common/collect/Multimap;
@2.0.0-beta-1
+#dumpOverlapProblems(Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;)V
+#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
-#dumpOverlapProblems(Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;)V
-#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;
@2.0.2
+#createLockRetryCounterFactory(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/RetryCounterFactory;
+#getTmpDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#checkAndMarkRunningHbck(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/RetryCounter;)Lorg/apache/hadoop/hbase/util/Pair;
@2.0.6
+#getErrors()Lorg/apache/hadoop/hbase/util/HbckErrorReporter;
+#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)I
+#shouldDisplayFullReport()Z
+#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#getErrors()Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
-#rebuildMeta(Z)Z
-#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)I
-#dumpOverlapProblems(Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;)V
-#dumpSidelinedRegions(Ljava/util/Map;)V
-#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
-#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.1.0
+#getErrors()Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
+#rebuildMeta(Z)Z
+#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)I
+#dumpOverlapProblems(Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;)V
+#dumpSidelinedRegions(Ljava/util/Map;)V
+#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
+#setCleanReplicationBarrier(Z)V
+#shouldRerun()Z
+#setCleanReplicationBarrierTable(Ljava/lang/String;)V
+#cleanReplicationBarrier()V
+#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#createLockRetryCounterFactory(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/RetryCounterFactory;
-#getTmpDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#checkAndMarkRunningHbck(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/RetryCounter;)Lorg/apache/hadoop/hbase/util/Pair;
-#getErrors()Lorg/apache/hadoop/hbase/util/HbckErrorReporter;
-#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)I
-#shouldDisplayFullReport()Z
-#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
@2.1.1
+#createLockRetryCounterFactory(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/RetryCounterFactory;
+#getTmpDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#checkAndMarkRunningHbck(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/RetryCounter;)Lorg/apache/hadoop/hbase/util/Pair;
@2.1.6
+#getErrors()Lorg/apache/hadoop/hbase/util/HbckErrorReporter;
+#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)I
+#shouldDisplayFullReport()Z
+#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#getErrors()Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
-#rebuildMeta(Z)Z
-#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)I
-#dumpOverlapProblems(Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;)V
-#dumpSidelinedRegions(Ljava/util/Map;)V
-#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
-#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.2.0
+#getErrors()Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
+#rebuildMeta(Z)Z
+#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)I
+#dumpOverlapProblems(Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;)V
+#dumpSidelinedRegions(Ljava/util/Map;)V
+#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
+#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#getErrors()Lorg/apache/hadoop/hbase/util/HbckErrorReporter;
-#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)I
-#shouldDisplayFullReport()Z
-#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
@2.2.1
+#getErrors()Lorg/apache/hadoop/hbase/util/HbckErrorReporter;
+#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)I
+#shouldDisplayFullReport()Z
+#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#getErrors()Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;
-#rebuildMeta(Z)Z
-#mergeRegionDirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)I
-#dumpOverlapProblems(Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;)V
-#dumpSidelinedRegions(Ljava/util/Map;)V
-#getOverlapGroups(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
-#debugLsr(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V

+###org/apache/hadoop/hbase/wal/WALSplitter$SinkWriter
@1.1.0
+#<init>()V
@2.3.0
-###org/apache/hadoop/hbase/wal/WALSplitter$SinkWriter

+###org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#setDefaultClientPort(I)V
+#setTickTime(I)V
+#getBackupZooKeeperServerNum()I
+#getZooKeeperServerNum()I
+#startup(Ljava/io/File;)I
+#startup(Ljava/io/File;I)I
+#shutdown()V
+#killCurrentActiveZooKeeperServer()I
+#killOneBackupZooKeeperServer()V
+#getClientPort()I
@1.1.0
+#addClientPort(I)V
+#getClientPortList()Ljava/util/List;
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster

+###org/apache/hadoop/hbase/backup/BackupCopyJob
@2.0.0-alpha-1
+#copy(Lorg/apache/hadoop/hbase/backup/BackupInfo;Lorg/apache/hadoop/hbase/backup/impl/BackupManager;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/backup/BackupType;[Ljava/lang/String;)I
+#cancel(Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupCopyJob

+###org/apache/hadoop/hbase/backup/BackupHFileCleaner
@2.0.0-alpha-1
+#<init>()V
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupHFileCleaner

+###org/apache/hadoop/hbase/backup/BackupRestoreConstants$BackupCommand
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/backup/BackupRestoreConstants$BackupCommand;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupRestoreConstants$BackupCommand;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupRestoreConstants$BackupCommand

+###org/apache/hadoop/hbase/backup/impl/BackupCommands$CreateCommand
@2.0.0-alpha-1
+#execute()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupCommands$CreateCommand

+###org/apache/hadoop/hbase/backup/impl/BackupException
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupInfo;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;Lorg/apache/hadoop/hbase/backup/BackupInfo;)V
+#<init>(Ljava/lang/String;Ljava/lang/Exception;)V
+#getBackupInfo()Lorg/apache/hadoop/hbase/backup/BackupInfo;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupException

+###org/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage
@2.0.0-alpha-1
+#<init>()V
+#getBackupId()Ljava/lang/String;
+#getType()Lorg/apache/hadoop/hbase/backup/BackupType;
+#getRootDir()Ljava/lang/String;
+#getTableNames()Ljava/util/List;
+#getStartTs()J
+#getCompleteTs()J
+#getAncestors()Ljava/util/ArrayList;
+#hasAncestor(Ljava/lang/String;)Z
+#hasTable(Lorg/apache/hadoop/hbase/TableName;)Z
+#compareTo(Lorg/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getIncrTimeRanges()Ljava/util/HashMap;
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha2
+#removeAncestors(Ljava/util/List;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage

+###org/apache/hadoop/hbase/backup/impl/TableBackupClient$Stage
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/backup/impl/TableBackupClient$Stage;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/impl/TableBackupClient$Stage;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/TableBackupClient$Stage

+###org/apache/hadoop/hbase/backup/mapreduce/HFileSplitterJob
@2.0.0-alpha-1
+#<init>()V
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@2.0.0-alpha2
-###org/apache/hadoop/hbase/backup/mapreduce/HFileSplitterJob

+###org/apache/hadoop/hbase/backup/master/LogRollMasterProcedureManager
@2.0.0-alpha-1
+#<init>()V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#initialize(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#getProcedureSignature()Ljava/lang/String;
+#execProcedure(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)V
+#isProcedureDone(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/master/LogRollMasterProcedureManager

+###org/apache/hadoop/hbase/backup/util/BackupSet
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getName()Ljava/lang/String;
+#getTables()Ljava/util/List;
+#toString()Ljava/lang/String;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/util/BackupSet

+###org/apache/hadoop/hbase/client/ClientSideRegionScanner
@0.96.2-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/client/metrics/ScanMetrics;)V
+#next()Lorg/apache/hadoop/hbase/client/Result;
+#close()V
@0.98.13-hadoop1
+#renewLease()Z
@0.99.0
-#renewLease()Z
@1.0.2
+#renewLease()Z
@1.1.0
-#renewLease()Z
@1.1.1
+#renewLease()Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/client/metrics/ScanMetrics;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/client/metrics/ScanMetrics;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/client/metrics/ScanMetrics;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/client/metrics/ScanMetrics;)V

+###org/apache/hadoop/hbase/client/locking/LockServiceClient
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockService$BlockingInterface;Lorg/apache/hadoop/hbase/client/NonceGenerator;)V
+#tableLock(Lorg/apache/hadoop/hbase/TableName;ZLjava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/client/locking/EntityLock;
+#namespaceLock(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/client/locking/EntityLock;
+#regionLock(Ljava/util/List;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/client/locking/EntityLock;
+#buildLockRequest(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockType;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;Ljava/lang/String;JJ)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockRequest;

+###org/apache/hadoop/hbase/conf/PropagatingConfigurationObserver
@0.99.2
+#registerChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#deregisterChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
@1.7.0
-###org/apache/hadoop/hbase/conf/PropagatingConfigurationObserver

+###org/apache/hadoop/hbase/CoordinatedStateManager
@0.99.0
+#initialize(Lorg/apache/hadoop/hbase/Server;)V
+#start()V
+#stop()V
+#getServer()Lorg/apache/hadoop/hbase/Server;
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@1.7.0
-#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@1.7.1
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@2.0.0-alpha-1
-#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@2.0.0-alpha4
+#getSplitLogWorkerCoordination()Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;
+#getSplitLogManagerCoordination()Lorg/apache/hadoop/hbase/coordination/SplitLogManagerCoordination;
+#getProcedureCoordinatorRpcs(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;
+#getProcedureMemberRpcs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;
-#initialize(Lorg/apache/hadoop/hbase/Server;)V
-#start()V
-#stop()V
-#getServer()Lorg/apache/hadoop/hbase/Server;
@2.2.0
-#getProcedureCoordinatorRpcs(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;
-#getProcedureMemberRpcs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;

+###org/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails
@0.99.0
+#getWALFile()Ljava/lang/String;

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$GetDataAsyncCallback
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination;)V
+#processResult(ILjava/lang/String;Ljava/lang/Object;[BLorg/apache/zookeeper/data/Stat;)V

+###org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint
@0.95.0
+#<init>()V
+#process(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RowProcessorProtos$RowProcessorRequest;Lcom/google/protobuf/RpcCallback;)V
+#getService()Lcom/google/protobuf/Service;
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
@0.96.0-hadoop1
+#process(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RowProcessorProtos$ProcessRequest;Lcom/google/protobuf/RpcCallback;)V
-#process(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RowProcessorProtos$RowProcessorRequest;Lcom/google/protobuf/RpcCallback;)V
@2.0.0-alpha4
+#getServices()Ljava/lang/Iterable;
-#getService()Lcom/google/protobuf/Service;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/BaseRowProcessorEndpoint

+###org/apache/hadoop/hbase/coprocessor/MultiRowMutationEndpoint
@0.95.0
+#<init>()V
+#mutateRows(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MultiRowMutation$MultiMutateRequest;Lcom/google/protobuf/RpcCallback;)V
+#getService()Lcom/google/protobuf/Service;
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
@0.96.0-hadoop1
+#mutateRows(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MultiRowMutationProtos$MutateRowsRequest;Lcom/google/protobuf/RpcCallback;)V
-#mutateRows(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MultiRowMutation$MultiMutateRequest;Lcom/google/protobuf/RpcCallback;)V
@2.0.0-alpha4
+#getServices()Ljava/lang/Iterable;
-#getService()Lcom/google/protobuf/Service;
@3.0.0-alpha-1
+#mutateRows(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MultiRowMutationProtos$MutateRowsRequest;Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcCallback;)V
-#mutateRows(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MultiRowMutationProtos$MutateRowsRequest;Lcom/google/protobuf/RpcCallback;)V

+###org/apache/hadoop/hbase/coprocessor/SingletonCoprocessorService
@0.98.8-hadoop1
+#getService()Lcom/google/protobuf/Service;
@0.99.0
-###org/apache/hadoop/hbase/coprocessor/SingletonCoprocessorService

+###org/apache/hadoop/hbase/errorhandling/ForeignException
@0.95.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getSource()Ljava/lang/String;
+#isRemote()Z
+#toString()Ljava/lang/String;
+#serialize(Ljava/lang/String;Ljava/lang/Throwable;)[B
+#deserialize([B)Lorg/apache/hadoop/hbase/errorhandling/ForeignException;

+###org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper
@2.0.0-alpha-1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/master/RackManager;)V
+#initialize()V
+#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Connection;)V
+#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;)V
+#getFavoredNodesList([B)[Lorg/apache/hadoop/hbase/ServerName;
+#getFavoredNodes(Ljava/util/List;)[B
+#placePrimaryRSAsRoundRobin(Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)V
+#placeSecondaryAndTertiaryRS(Ljava/util/Map;)Ljava/util/Map;
+#getSecondaryAndTertiary(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)[Lorg/apache/hadoop/hbase/ServerName;
+#placeSecondaryAndTertiaryWithRestrictions(Ljava/util/Map;)Ljava/util/Map;
+#canPlaceFavoredNodes()Z
+#getFavoredNodesAsString(Ljava/util/List;)Ljava/lang/String;
+#generateMissingFavoredNode(Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#generateMissingFavoredNode(Ljava/util/List;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#generateFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#generateFavoredNodesRoundRobin(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;
@2.0.0-alpha4
+#getSecondaryAndTertiary(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)[Lorg/apache/hadoop/hbase/ServerName;
+#generateFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
-#getSecondaryAndTertiary(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)[Lorg/apache/hadoop/hbase/ServerName;
-#generateFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper

+###org/apache/hadoop/hbase/generated/regionserver/regionserver_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/HDFSBlocksDistribution
@0.95.0
+#<init>()V
+#toString()Ljava/lang/String;
+#addHostsAndBlockWeight([Ljava/lang/String;J)V
+#getHostAndWeights()Ljava/util/Map;
+#getWeight(Ljava/lang/String;)J
+#getUniqueBlocksTotalWeight()J
+#getBlockLocalityIndex(Ljava/lang/String;)F
+#add(Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;)V
+#getTopHosts()Ljava/util/List;
@0.96.2-hadoop1
+#getTopHostsWithWeights()[Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;
@2.4.0
+#addHostsAndBlockWeight([Ljava/lang/String;J[Lorg/apache/hadoop/fs/StorageType;)V
+#getBlockLocalityIndexForSsd(Ljava/lang/String;)F
+#getBlocksLocalWeight(Ljava/lang/String;)J
+#getBlocksLocalWithSsdWeight(Ljava/lang/String;)J
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/HDFSBlocksDistribution

+###org/apache/hadoop/hbase/http/HtmlQuoting
@0.99.0
+#<init>()V
+#needsQuoting([BII)Z
+#needsQuoting(Ljava/lang/String;)Z
+#quoteHtmlChars(Ljava/io/OutputStream;[BII)V
+#quoteHtmlChars(Ljava/lang/String;)Ljava/lang/String;
+#quoteOutputStream(Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#unquoteHtmlChars(Ljava/lang/String;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HtmlQuoting

+###org/apache/hadoop/hbase/http/HttpServer$StackServlet
@0.99.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpServer$StackServlet

+###org/apache/hadoop/hbase/http/log/LogLevel
@0.99.0
+#<init>()V
+#main([Ljava/lang/String;)V
@1.4.10
+#isValidProtocol(Ljava/lang/String;)Z
@2.0.0-alpha-1
-#isValidProtocol(Ljava/lang/String;)Z
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/log/LogLevel

+###org/apache/hadoop/hbase/io/hfile/BlockCacheKey
@0.95.0
+#<init>(Ljava/lang/String;JLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#<init>(Ljava/lang/String;J)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#heapSize()J
+#getHfileName()Ljava/lang/String;
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
@0.96.1-hadoop1
+#getOffset()J
@0.98.19-hadoop1
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
@0.99.0
-#<init>(Ljava/lang/String;JLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
@1.2.0
+#<init>(Ljava/lang/String;JZ)V
+#isPrimary()Z
@1.3.0
+#<init>(Ljava/lang/String;JZLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
-#<init>(Ljava/lang/String;JZ)V

+###org/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator$Bucket
@0.98.4-hadoop1
+#<init>(J)V
+#isUninstantiated()Z
+#sizeIndex()I
+#getItemAllocationSize()I
+#hasFreeSpace()Z
+#isCompletelyFree()Z
+#freeCount()I
+#usedCount()I
+#getFreeBytes()I
+#getUsedBytes()I
+#getBaseOffset()J
+#allocate()J
+#addAllocation(J)V

+###org/apache/hadoop/hbase/io/hfile/bucket/CacheFullException
@0.95.0
+#bucketIndex()I
+#requestedSize()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;
@2.3.0
-###org/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType

+###org/apache/hadoop/hbase/io/hfile/CachedBlock
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;J)V
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;JZ)V
+#access(J)V
+#heapSize()J
+#compareTo(Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;)I
+#equals(Ljava/lang/Object;)Z
+#getBuffer()Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#getCacheKey()Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;
+#getPriority()Lorg/apache/hadoop/hbase/io/hfile/CachedBlock$BlockPriority;
+#compareTo(Ljava/lang/Object;)I
@0.98.4-hadoop1
+#getBlockPriority()Lorg/apache/hadoop/hbase/io/hfile/BlockPriority;
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#getOffset()J
+#getSize()J
+#getCachedTime()J
+#getFilename()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;J)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;JZ)V
-#access(J)V
-#heapSize()J
-#compareTo(Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;)I
-#equals(Ljava/lang/Object;)Z
-#getBuffer()Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getCacheKey()Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;
-#getPriority()Lorg/apache/hadoop/hbase/io/hfile/CachedBlock$BlockPriority;
-#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/io/hfile/CombinedBlockCache$CombinedCacheStats
@1.0.3
+#getRequestCount()J
+#getRequestCachingCount()J
+#getMissCount()J
+#getMissCachingCount()J
+#getHitCount()J
+#getHitCachingCount()J
+#getEvictionCount()J
+#getEvictedCount()J
+#rollMetricsPeriod()V
+#getSumHitCountsPastNPeriods()J
+#getSumRequestCountsPastNPeriods()J
+#getSumHitCachingCountsPastNPeriods()J
+#getSumRequestCachingCountsPastNPeriods()J
@1.1.0
-###org/apache/hadoop/hbase/io/hfile/CombinedBlockCache$CombinedCacheStats

+###org/apache/hadoop/hbase/io/hfile/CompoundBloomFilterWriter
@2.0.0-alpha-1
+#<init>(IFIIZLorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V
+#shouldWriteBlock(Z)Z
+#append(Lorg/apache/hadoop/hbase/Cell;)V
+#beforeShipped()V
+#getPrevCell()Lorg/apache/hadoop/hbase/Cell;
+#writeInlineBlock(Ljava/io/DataOutput;)V
+#blockWritten(JII)V
+#getInlineBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#compactBloom()V
+#getMetaWriter()Lorg/apache/hadoop/io/Writable;
+#getDataWriter()Lorg/apache/hadoop/io/Writable;
+#getCacheOnWrite()Z

+###org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder
@0.95.0
+#diskToCacheFormat(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#beforeWriteToDisk(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#useEncodedScanner(Z)Z
+#saveMetadata(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V
+#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getEncodingInCache()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#newOnDiskDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newOnDiskDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.96.1-hadoop1
+#useEncodedScanner()Z
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#diskToCacheFormat(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#useEncodedScanner(Z)Z
-#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getEncodingInCache()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#newOnDiskDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newOnDiskDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.98.0-hadoop1
+#beforeWriteToDisk(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#beforeWriteToDisk(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.99.0
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[BLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#beforeWriteToDisk(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
@0.99.1
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@2.3.0
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@2.5.0
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-1
+#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-2
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;

+###org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter$Builder
@2.0.0-alpha-1
+#outputTo(Ljava/io/PrintStream;)Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter$Builder;
+#filter(Lcom/codahale/metrics/MetricFilter;)Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter$Builder;
+#build()Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter;
@2.5.1
+#addStats(Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$KeyValueStats;)Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter$Builder;
-#filter(Lcom/codahale/metrics/MetricFilter;)Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter$Builder;
@3.0.0-alpha-1
+#filter(Lcom/codahale/metrics/MetricFilter;)Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter$Builder;
-#addStats(Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$KeyValueStats;)Lorg/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter$SimpleReporter$Builder;

+###org/apache/hadoop/hbase/io/hfile/HFileReaderImpl$BlockIndexNotLoadedException
@2.0.0-alpha-1
+#<init>()V
@2.1.5
+#<init>(Lorg/apache/hadoop/fs/Path;)V
-#<init>()V

+###org/apache/hadoop/hbase/io/hfile/InlineBlockWriter
@0.95.0
+#shouldWriteBlock(Z)Z
+#writeInlineBlock(Ljava/io/DataOutput;)V
+#blockWritten(JII)V
+#getInlineBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#getCacheOnWrite()Z

+###org/apache/hadoop/hbase/io/hfile/LruBlockCache
@0.95.0
+#<init>(JJ)V
+#<init>(JJZ)V
+#<init>(JJZLorg/apache/hadoop/conf/Configuration;)V
+#<init>(JJLorg/apache/hadoop/conf/Configuration;)V
+#<init>(JJZIFIFFFFF)V
+#setMaxSize(J)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#containsBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getMaxSize()J
+#getCurrentSize()J
+#getFreeSize()J
+#size()J
+#getBlockCount()J
+#getEvictionCount()J
+#getEvictedCount()J
+#logStats()V
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#heapSize()J
+#calculateOverhead(JJI)J
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
+#shutdown()V
+#clearCache()V
+#getEncodingCountsForTest()Ljava/util/Map;
+#setVictimCache(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketCache;)V
@0.98.0-hadoop1
+#<init>(JJZIFIFFFFFZ)V
-#<init>(JJZIFIFFFFF)V
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#getEvictionCount()J
-#getEvictedCount()J
-#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.98.7-hadoop1
+#toString()Ljava/lang/String;
@0.98.17-hadoop1
+#<init>(JJZIFIFFFFFZJ)V
-#<init>(JJZIFIFFFFFZ)V
@0.99.0
+#<init>(JJZIFIFFFFFZ)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#<init>(JJZIFIFFFFFZJ)V
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
@1.1.0
+#setVictimCache(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
-#setVictimCache(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketCache;)V
@1.2.0
+#<init>(JJZIFIFFFFFZJ)V
-#<init>(JJZIFIFFFFFZ)V
@1.2.3
+#<init>(JJZIFIFFFFFFZJ)V
-#<init>(JJZIFIFFFFFZJ)V
@1.4.0
+#getCurrentDataSize()J
+#getDataBlockCount()J
@2.0.0-alpha-1
+#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
-#getCurrentDataSize()J
-#getDataBlockCount()J
-#calculateOverhead(JJI)J
@2.0.0-alpha3
+#getCurrentDataSize()J
+#getDataBlockCount()J
@2.0.0-beta-1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
@2.5.0
+#getCurrentIndexSize()J
+#getCurrentBloomSize()J
+#getIndexBlockCount()J
+#getBloomBlockCount()J
@3.0.0-alpha-1
-#getCurrentIndexSize()J
-#getCurrentBloomSize()J
-#getIndexBlockCount()J
-#getBloomBlockCount()J

+###org/apache/hadoop/hbase/ipc/FastPathBalancedQueueRpcExecutor
@1.3.0
+#<init>(Ljava/lang/String;IIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
@1.4.0
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;ILjava/lang/String;ILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
-#<init>(Ljava/lang/String;IIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
-#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V

+###org/apache/hadoop/hbase/ipc/NettyRpcServer
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
+#start()V
+#stop()V
+#join()V
+#getListenerAddress()Ljava/net/InetSocketAddress;
+#setSocketSendBufSize(I)V
+#getNumOpenConnections()I
+#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;Z)V
+#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
-#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
-#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
-#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
@3.0.0-alpha-1
-#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
-#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;

+###org/apache/hadoop/hbase/ipc/RpcServerFactory
@2.0.0-alpha-1
+#createRpcServer(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)Lorg/apache/hadoop/hbase/ipc/RpcServer;
@2.0.0-beta-1
+#createRpcServer(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Ljava/util/List;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/RpcScheduler;Z)Lorg/apache/hadoop/hbase/ipc/RpcServer;

+###org/apache/hadoop/hbase/ipc/UnknownServiceException
@0.95.1-hadoop1

+###org/apache/hadoop/hbase/mapred/Driver
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/Driver

+###org/apache/hadoop/hbase/mapred/IdentityTableMap
@0.95.0
+#<init>()V
+#initJob(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapred/JobConf;)V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/IdentityTableMap

+###org/apache/hadoop/hbase/mapred/RowCounter
@0.95.0
+#<init>()V
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapred/JobConf;
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/RowCounter

+###org/apache/hadoop/hbase/mapred/TableOutputFormat
@0.95.0
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/mapred/RecordWriter;
+#checkOutputSpecs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/mapred/JobConf;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableOutputFormat

+###org/apache/hadoop/hbase/mapred/TableSplit
@0.95.0
+#<init>()V
+#<init>([B[B[BLjava/lang/String;)V
+#getTableName()[B
+#getStartRow()[B
+#getEndRow()[B
+#getRegionLocation()Ljava/lang/String;
+#getLocations()[Ljava/lang/String;
+#getLength()J
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/hadoop/hbase/mapred/TableSplit;)I
+#equals(Ljava/lang/Object;)Z
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/String;)V
+#getTable()Lorg/apache/hadoop/hbase/TableName;
@0.99.0
+#hashCode()I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableSplit

+###org/apache/hadoop/hbase/mapreduce/GroupingTableMapper
@0.95.0
+#<init>()V
+#initJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;)V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/GroupingTableMapper

+###org/apache/hadoop/hbase/mapreduce/HRegionPartitioner
@0.95.0
+#<init>()V
+#getPartition(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Ljava/lang/Object;I)I
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/HRegionPartitioner

+###org/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparable
@0.98.14-hadoop1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/KeyValue;)V
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Lorg/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparable;)I
+#compareTo(Ljava/lang/Object;)I
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparable

+###org/apache/hadoop/hbase/mapreduce/KeyValueSortReducer
@0.95.0
+#<init>()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/KeyValueSortReducer

+###org/apache/hadoop/hbase/mapreduce/MultiTableSnapshotInputFormatImpl
@0.98.14-hadoop1
+#<init>()V
+#setInput(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;Lorg/apache/hadoop/fs/Path;)V
+#getSplits(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
+#getSnapshotsToScans(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Map;
+#setSnapshotToScans(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;)V
+#getSnapshotDirs(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Map;
+#setSnapshotDirs(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;)V
+#restoreSnapshots(Lorg/apache/hadoop/conf/Configuration;Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;)V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/MultiTableSnapshotInputFormatImpl

+###org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication$Verifier$Counters
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/mapreduce/replication/VerifyReplication$Verifier$Counters;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/mapreduce/replication/VerifyReplication$Verifier$Counters;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication$Verifier$Counters

+###org/apache/hadoop/hbase/mapreduce/TableMapReduceUtil
@0.95.0
+#<init>()V
+#initTableMapperJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;)V
+#initTableMapperJob([BLorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;)V
+#initTableMapperJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLjava/lang/Class;)V
+#initTableMapperJob([BLorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLjava/lang/Class;)V
+#initTableMapperJob([BLorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;Z)V
+#initTableMapperJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;Z)V
+#initTableMapperJob(Ljava/util/List;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;)V
+#initTableMapperJob(Ljava/util/List;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;Z)V
+#initCredentials(Lorg/apache/hadoop/mapreduce/Job;)V
+#initTableReducerJob(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;)V
+#initTableReducerJob(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#initTableReducerJob(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#initTableReducerJob(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
+#limitNumReduceTasks(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/Job;)V
+#setNumReduceTasks(Ljava/lang/String;Lorg/apache/hadoop/mapreduce/Job;)V
+#setScannerCaching(Lorg/apache/hadoop/mapreduce/Job;I)V
+#addDependencyJars(Lorg/apache/hadoop/mapreduce/Job;)V
+#addDependencyJars(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/Class;)V
@0.96.1-hadoop1
+#addHBaseDependencyJars(Lorg/apache/hadoop/conf/Configuration;)V
+#buildDependencyClasspath(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@0.96.2-hadoop1
+#initTableMapperJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZZLjava/lang/Class;)V
+#initTableSnapshotMapperJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLorg/apache/hadoop/fs/Path;)V
+#initCredentialsForCluster(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;)V
@0.98.3-hadoop1
+#resetCacheConfig(Lorg/apache/hadoop/conf/Configuration;)V
+#initTableMapperJob(Ljava/util/List;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZZ)V
@0.98.14-hadoop1
+#initMultiTableSnapshotMapperJob(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLorg/apache/hadoop/fs/Path;)V
@0.98.17-hadoop1
*#initCredentialsForCluster(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;)V[deprecated]
+#initCredentialsForCluster(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/conf/Configuration;)V
@0.99.0
-#initMultiTableSnapshotMapperJob(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLorg/apache/hadoop/fs/Path;)V
-#initCredentialsForCluster(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/conf/Configuration;)V
@0.99.1
+#initTableMapperJob(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;)V
@1.2.0
+#initMultiTableSnapshotMapperJob(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLorg/apache/hadoop/fs/Path;)V
*#initCredentialsForCluster(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/String;)V[deprecated]
+#initCredentialsForCluster(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/conf/Configuration;)V
@1.3.0
+#convertScanToString(Lorg/apache/hadoop/hbase/client/Scan;)Ljava/lang/String;
+#convertStringToScan(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Scan;
*#addDependencyJars(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/Class;)V[deprecated]
+#addDependencyJarsForClasses(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/Class;)V
@1.3.2
+#initTableSnapshotMapperJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha-1
-#initTableSnapshotMapperJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;ZLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableMapReduceUtil

+###org/apache/hadoop/hbase/mapreduce/WALInputFormat
@0.99.2
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/WALInputFormat

+###org/apache/hadoop/hbase/master/assignment/AssignProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getServer(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/ServerName;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-beta-1
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
@2.0.3
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
+#assign(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.1.0
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#assign(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.1.1
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
+#assign(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.2.0
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#assign(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
-#getServer(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Lorg/apache/hadoop/hbase/ServerName;
-#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
@2.3.0
+#setProcId(J)V

+###org/apache/hadoop/hbase/master/balancer/BalancerChore
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V

+###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$SwapRegionsAction
@0.99.0
+#<init>(IIII)V
+#undoAction()Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action;
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$SwapRegionsAction

+###org/apache/hadoop/hbase/master/balancer/ClusterLoadState
@0.95.0
+#<init>(Ljava/util/Map;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Collection;ILjava/util/Map;)V
-#<init>(Ljava/util/Map;)V
@0.99.1
+#<init>(Ljava/util/Map;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Collection;ILjava/util/Map;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/ClusterLoadState

+###org/apache/hadoop/hbase/master/balancer/MetricsBalancer
@0.96.0-hadoop1
+#<init>()V
+#balanceCluster(J)V
+#incrMiscInvocations()V
@1.3.3
+#balancerStatus(Z)V
@1.4.0
-#balancerStatus(Z)V
@1.4.8
+#balancerStatus(Z)V
@2.0.0-alpha-1
-#balancerStatus(Z)V
@2.1.1
+#balancerStatus(Z)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/MetricsBalancer

+###org/apache/hadoop/hbase/master/cleaner/BaseLogCleanerDelegate
@0.95.0
+#<init>()V
+#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
+#isLogDeletable(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
@0.95.2-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
+#isLogDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z[deprecated]
-#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
-#isLogDeletable(Lorg/apache/hadoop/fs/Path;)Z[deprecated]
@2.0.0-beta-2
-#isLogDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z[deprecated]

+###org/apache/hadoop/hbase/master/cleaner/HFileLinkCleaner
@0.95.0
+#<init>()V
+#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@0.95.2-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/master/cleaner/ReplicationZKNodeCleanerChore
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/Stoppable;ILorg/apache/hadoop/hbase/master/cleaner/ReplicationZKNodeCleaner;)V
@2.1.0
-###org/apache/hadoop/hbase/master/cleaner/ReplicationZKNodeCleanerChore

+###org/apache/hadoop/hbase/master/ClusterSchema
@2.0.0-alpha-1
+#getTableNamespaceManager()Lorg/apache/hadoop/hbase/master/TableNamespaceManager;
+#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/util/NonceKey;)J
+#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/util/NonceKey;)J
+#deleteNamespace(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
+#getNamespace(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor;
+#getNamespaces()Ljava/util/List;
@2.0.0-beta-2
+#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/util/NonceKey;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)J
+#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/util/NonceKey;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)J
+#deleteNamespace(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)J
-#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/util/NonceKey;)J
-#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/util/NonceKey;)J
-#deleteNamespace(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J

+###org/apache/hadoop/hbase/master/ClusterStatusPublisher$MulticastPublisher
@0.95.0
+#<init>()V
+#connect(Lorg/apache/hadoop/conf/Configuration;)V
+#publish(Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#close()V
@2.0.0-beta-1
+#publish(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#publish(Lorg/apache/hadoop/hbase/ClusterStatus;)V
@2.2.6
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/locking/LockManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#remoteLocks()Lorg/apache/hadoop/hbase/master/locking/LockManager$RemoteLocks;
+#createMasterLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
+#createMasterLock(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
+#createMasterLock([Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
@2.0.0-alpha3
+#createMasterLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
+#createMasterLock(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
-#createMasterLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
-#createMasterLock(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
@2.0.0-alpha4
+#createMasterLock([Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;
-#createMasterLock([Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;

+###org/apache/hadoop/hbase/master/locking/LockProcedure
@2.0.0-alpha-1
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
+#updateHeartBeat()V
+#unlock(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
+#getType()Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;
+#getDescription()Ljava/lang/String;
+#isLocked()Z
+#holdLock(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#hasLock(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#hasLock(Ljava/lang/Object;)Z
+#holdLock(Ljava/lang/Object;)Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
+#getType()Lorg/apache/hadoop/hbase/procedure2/LockType;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
-#getType()Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)V
@2.0.2
-#hasLock(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#hasLock(Ljava/lang/Object;)Z
@2.1.0
+#hasLock(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#hasLock(Ljava/lang/Object;)Z
@2.1.1
-#hasLock(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#hasLock(Ljava/lang/Object;)Z

+###org/apache/hadoop/hbase/master/MasterCoprocessorHost
@0.95.0
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost$MasterEnvironment;
+#preCreateTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preDeleteTable([B)V
+#postDeleteTable([B)V
+#preDeleteTableHandler([B)V
+#postDeleteTableHandler([B)V
+#preModifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postAddColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postAddColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postModifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postModifyColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postDeleteColumn([B[B)V
+#preDeleteColumnHandler([B[B)Z
+#postDeleteColumnHandler([B[B)V
+#preEnableTable([B)V
+#postEnableTable([B)V
+#preEnableTableHandler([B)V
+#postEnableTableHandler([B)V
+#preDisableTable([B)V
+#postDisableTable([B)V
+#preDisableTableHandler([B)V
+#postDisableTableHandler([B)V
+#preMove(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)Z
+#postMove(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@0.95.2-hadoop1
+#preDeleteTable(Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/TableName;)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[B)Z
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
+#preGetTableDescriptors(Ljava/util/List;Ljava/util/List;)Z
+#postGetTableDescriptors(Ljava/util/List;)V
-#preDeleteTable([B)V
-#postDeleteTable([B)V
-#preDeleteTableHandler([B)V
-#postDeleteTableHandler([B)V
-#preModifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preModifyTableHandler([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTableHandler([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postAddColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preAddColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postAddColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postModifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postModifyColumnHandler([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postDeleteColumn([B[B)V
-#preDeleteColumnHandler([B[B)Z
-#postDeleteColumnHandler([B[B)V
-#preEnableTable([B)V
-#postEnableTable([B)V
-#preEnableTableHandler([B)V
-#postEnableTableHandler([B)V
-#preDisableTable([B)V
-#postDisableTable([B)V
-#preDisableTableHandler([B)V
-#postDisableTableHandler([B)V
@0.96.0-hadoop1
+#preMasterInitialization()V
@0.98.0-hadoop1
+#preCreateNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Z
+#postCreateNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteNamespace(Ljava/lang/String;)Z
+#postDeleteNamespace(Ljava/lang/String;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Z
+#postModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)Z
+#preAssign(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#postAssign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)Z
+#postUnassign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preBalance()Z
+#postBalance(Ljava/util/List;)V
+#preBalanceSwitch(Z)Z
+#preShutdown()V
+#preStopMaster()V
+#postStartMaster()V
@0.98.6-hadoop1
+#postBalanceSwitch(ZZ)V
@0.98.8-hadoop1
+#preTruncateTable(Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTable(Lorg/apache/hadoop/hbase/TableName;)V
+#preTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
@0.98.11-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/conf/Configuration;)V
@0.98.19-hadoop1
+#preGetNamespaceDescriptor(Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Ljava/util/List;)Z
+#postListNamespaceDescriptors(Ljava/util/List;)V
@0.99.0
+#preTableFlush(Lorg/apache/hadoop/hbase/TableName;)V
+#postTableFlush(Lorg/apache/hadoop/hbase/TableName;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/conf/Configuration;)V
-#preGetNamespaceDescriptor(Ljava/lang/String;)V
-#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preListNamespaceDescriptors(Ljava/util/List;)Z
-#postListNamespaceDescriptors(Ljava/util/List;)V
@1.0.0
+#preGetNamespaceDescriptor(Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Ljava/util/List;)Z
+#postListNamespaceDescriptors(Ljava/util/List;)V
*#preGetTableDescriptors(Ljava/util/List;Ljava/util/List;)Z[deprecated]
*#postGetTableDescriptors(Ljava/util/List;)V[deprecated]
+#preGetTableDescriptors(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)Z
+#postGetTableDescriptors(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#preGetTableNames(Ljava/util/List;Ljava/lang/String;)Z
+#postGetTableNames(Ljava/util/List;Ljava/lang/String;)V
@1.0.1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/conf/Configuration;)V
@1.1.0
+#preListSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
@1.1.3
+#preAbortProcedure(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)Z
+#postAbortProcedure()V
+#preListProcedures()Z
+#postListProcedures(Ljava/util/List;)V
@1.3.0
+#preDispatchMerge(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postDispatchMerge(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
@1.4.0
+#preGetClusterStatus()V
+#postGetClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#preClearDeadServers()V
+#postClearDeadServers(Ljava/util/List;Ljava/util/List;)V
+#preMoveServers(Ljava/util/Set;Ljava/lang/String;)V
+#postMoveServers(Ljava/util/Set;Ljava/lang/String;)V
+#preMoveTables(Ljava/util/Set;Ljava/lang/String;)V
+#postMoveTables(Ljava/util/Set;Ljava/lang/String;)V
+#preMoveServersAndTables(Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveServersAndTables(Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#preRemoveServers(Ljava/util/Set;)V
+#postRemoveServers(Ljava/util/Set;)V
+#preAddRSGroup(Ljava/lang/String;)V
+#postAddRSGroup(Ljava/lang/String;)V
+#preRemoveRSGroup(Ljava/lang/String;)V
+#postRemoveRSGroup(Ljava/lang/String;)V
+#preBalanceRSGroup(Ljava/lang/String;)V
+#postBalanceRSGroup(Ljava/lang/String;Z)V
@1.5.0
+#preListNamespaces(Ljava/util/List;)Z
+#postListNamespaces(Ljava/util/List;)Z
+#preCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#postCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#preTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)Z
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#preCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
-#preTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
-#postTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[B)Z
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[B)V
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;)V
@1.7.0
+#preRenameRSGroup(Ljava/lang/String;Ljava/lang/String;)V
+#postRenameRSGroup(Ljava/lang/String;Ljava/lang/String;)V
@2.0.0-alpha-1
+#preCreateTableAction(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preDeleteTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedDeleteTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#preTruncateTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedTruncateTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#preModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)Z
+#postCompletedDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)V
+#preEnableTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedEnableTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#preDisableTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedDisableTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
+#preListLocks()Z
+#postListLocks(Ljava/util/List;)V
+#preMergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postMergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
+#preSplitRegion(Lorg/apache/hadoop/hbase/TableName;[B)V
+#preSplitRegionAction(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)V
+#postCompletedSplitRegionAction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preSplitBeforePONRAction([BLjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z
+#preSplitAfterPONRAction(Lorg/apache/hadoop/hbase/security/User;)V
+#postRollBackSplitRegionAction(Lorg/apache/hadoop/hbase/security/User;)V
+#preMergeRegionsAction([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompletedMergeRegionsAction([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preMergeRegionsCommit([Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z
+#postMergeRegionsCommit([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#postRollBackMergeRegionsAction([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preListSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preAddReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#postAddReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#preRemoveReplicationPeer(Ljava/lang/String;)V
+#postRemoveReplicationPeer(Ljava/lang/String;)V
+#preEnableReplicationPeer(Ljava/lang/String;)V
+#postEnableReplicationPeer(Ljava/lang/String;)V
+#preDisableReplicationPeer(Ljava/lang/String;)V
+#postDisableReplicationPeer(Ljava/lang/String;)V
+#preGetReplicationPeerConfig(Ljava/lang/String;)V
+#postGetReplicationPeerConfig(Ljava/lang/String;)V
+#preUpdateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#postUpdateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#preListReplicationPeers(Ljava/lang/String;)V
+#postListReplicationPeers(Ljava/lang/String;)V
+#preRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
+#postRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
+#preLockHeartbeat(Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
+#postLockHeartbeat(Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
-#preListNamespaces(Ljava/util/List;)Z
-#postListNamespaces(Ljava/util/List;)Z
-#preCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#postCreateTableHandler(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#preTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#postTruncateTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)Z
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)V
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/User;)V
-#preSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
-#postSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
-#preSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preListSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#postListSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preDeleteSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#postDeleteSnapshot(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#preGetTableDescriptors(Ljava/util/List;Ljava/util/List;)Z[deprecated]
-#postGetTableDescriptors(Ljava/util/List;)V[deprecated]
-#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preGetClusterStatus()V
-#postGetClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
-#preClearDeadServers()V
-#postClearDeadServers(Ljava/util/List;Ljava/util/List;)V
-#preRemoveServers(Ljava/util/Set;)V
-#postRemoveServers(Ljava/util/Set;)V
-#preRenameRSGroup(Ljava/lang/String;Ljava/lang/String;)V
-#postRenameRSGroup(Ljava/lang/String;Ljava/lang/String;)V
@2.0.0-alpha2
+#preCreateTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableAction(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Z
+#postAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Z
+#postModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preCreateTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preCreateTableAction(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
-#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Z
-#postModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
-#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preDispatchMerge(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postDispatchMerge(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@2.0.0-alpha3
+#preGetProcedures()Z
+#postGetProcedures(Ljava/util/List;)V
+#preGetLocks()Z
+#postGetLocks(Ljava/util/List;)V
+#preRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
+#postRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
+#preListDeadServers()V
+#postListDeadServers()V
+#preClearDeadServers()V
+#postClearDeadServers()V
-#preListProcedures()Z
-#postListProcedures(Ljava/util/List;)V
-#preListLocks()Z
-#postListLocks(Ljava/util/List;)V
-#preRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
-#postRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
@2.0.0-alpha4
+#createEnvironment(Lorg/apache/hadoop/hbase/coprocessor/MasterCoprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost$MasterEnvironment;
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/coprocessor/MasterCoprocessor;
+#preCreateNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteNamespace(Ljava/lang/String;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Ljava/util/List;)V
+#preCreateTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preCreateTableAction(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preAbortProcedure(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)V
+#preGetProcedures()V
+#preGetLocks()V
+#preMove(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#postMove(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preAssign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postAssign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#postUnassign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preMergeRegions([Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postMergeRegions([Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
+#postCompletedSplitRegionAction(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preSplitBeforeMETAAction([BLjava/util/List;Lorg/apache/hadoop/hbase/security/User;)V
+#preSplitAfterMETAAction(Lorg/apache/hadoop/hbase/security/User;)V
+#preMergeRegionsAction([Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedMergeRegionsAction([Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preMergeRegionsCommit([Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/security/User;)V
+#postMergeRegionsCommit([Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#postRollBackMergeRegionsAction([Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
+#preBalanceSwitch(Z)V
+#preSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preListSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#preGetTableDescriptors(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#preGetTableNames(Ljava/util/List;Ljava/lang/String;)V
+#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
+#postRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
+#preDecommissionRegionServers(Ljava/util/List;Z)V
+#postDecommissionRegionServers(Ljava/util/List;Z)V
+#preListDecommissionedRegionServers()V
+#postListDecommissionedRegionServers()V
+#preRecommissionRegionServer(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
+#postRecommissionRegionServer(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/Coprocessor;
+#createEnvironment(Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost$MasterEnvironment;
-#preCreateNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Z
-#preDeleteNamespace(Ljava/lang/String;)Z
-#preModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Z
-#preListNamespaceDescriptors(Ljava/util/List;)Z
-#preCreateTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preCreateTableAction(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#preAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Z
-#postAddColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
-#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Z
-#postModifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)Z
-#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preDeleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)Z
-#postDeleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)V
-#preDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)Z
-#postCompletedDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/User;)V
-#preAbortProcedure(Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)Z
-#preGetProcedures()Z
-#preGetLocks()Z
-#preMove(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)Z
-#postMove(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#preAssign(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#postAssign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preUnassign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)Z
-#postUnassign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#preRegionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postRegionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preMergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postMergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preSetSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
-#postCompletedSplitRegionAction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#preSplitBeforePONRAction([BLjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z
-#preSplitAfterPONRAction(Lorg/apache/hadoop/hbase/security/User;)V
-#preMergeRegionsAction([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)Z
-#postCompletedMergeRegionsAction([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#preMergeRegionsCommit([Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z
-#postMergeRegionsCommit([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#postRollBackMergeRegionsAction([Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/security/User;)V
-#preBalanceSwitch(Z)Z
-#preSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preListSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#postListSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preDeleteSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#postDeleteSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#preGetTableDescriptors(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)Z
-#preGetTableNames(Ljava/util/List;Ljava/lang/String;)Z
-#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
-#postRequestLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@2.0.0-beta-1
+#preRemoveServers(Ljava/util/Set;)V
+#postRemoveServers(Ljava/util/Set;)V
+#preGetClusterMetrics()V
+#postGetClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
+#postClearDeadServers(Ljava/util/List;Ljava/util/List;)V
-#preListDeadServers()V
-#postListDeadServers()V
-#postClearDeadServers()V
@2.0.1
+#preModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#preModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#postModifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
-#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
@2.2.0
+#preCreateTableRegionsInfos(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#preModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#preSetRegionServerQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetRegionServerQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSwitchRpcThrottle(Z)V
+#postSwitchRpcThrottle(ZZ)V
+#preIsRpcThrottleEnabled()V
+#postIsRpcThrottleEnabled(Z)V
+#preSwitchExceedThrottleQuota(Z)V
+#postSwitchExceedThrottleQuota(ZZ)V
+#preGrant(Lorg/apache/hadoop/hbase/security/access/UserPermission;Z)V
+#postGrant(Lorg/apache/hadoop/hbase/security/access/UserPermission;Z)V
+#preRevoke(Lorg/apache/hadoop/hbase/security/access/UserPermission;)V
+#postRevoke(Lorg/apache/hadoop/hbase/security/access/UserPermission;)V
+#preGetUserPermissions(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B)V
+#postGetUserPermissions(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B)V
+#preHasUserPermissions(Ljava/lang/String;Ljava/util/List;)V
+#postHasUserPermissions(Ljava/lang/String;Ljava/util/List;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.2.5
+#preRenameRSGroup(Ljava/lang/String;Ljava/lang/String;)V
+#postRenameRSGroup(Ljava/lang/String;Ljava/lang/String;)V
@2.3.0
+#preListNamespaces(Ljava/util/List;)V
+#postListNamespaces(Ljava/util/List;)V
+#postCompletedSnapshotAction(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.4.0
+#preUnassign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postUnassign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preUpdateRSGroupConfig(Ljava/lang/String;Ljava/util/Map;)V
+#postUpdateRSGroupConfig(Ljava/lang/String;Ljava/util/Map;)V
-#preUnassign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#postUnassign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
@2.5.0
+#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
+#postModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
+#postModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)V
+#preBalance(Lorg/apache/hadoop/hbase/client/BalanceRequest;)Z
+#postBalance(Lorg/apache/hadoop/hbase/client/BalanceRequest;Ljava/util/List;)V
+#preMasterStoreFlush()V
+#postMasterStoreFlush()V
+#preBalanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#postBalanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;Lorg/apache/hadoop/hbase/client/BalanceResponse;)V
-#preBalance()Z
-#postBalance(Ljava/util/List;)V
-#preBalanceRSGroup(Ljava/lang/String;)V
-#postBalanceRSGroup(Ljava/lang/String;Z)V
@3.0.0-alpha-1
+#preBalance()Z
+#postBalance(Ljava/util/List;)V
+#preBalanceRSGroup(Ljava/lang/String;)V
+#postBalanceRSGroup(Ljava/lang/String;Z)V
+#preGetRSGroupInfo(Ljava/lang/String;)V
+#postGetRSGroupInfo(Ljava/lang/String;)V
+#preGetRSGroupInfoOfTable(Lorg/apache/hadoop/hbase/TableName;)V
+#postGetRSGroupInfoOfTable(Lorg/apache/hadoop/hbase/TableName;)V
+#preListRSGroups()V
+#postListRSGroups()V
+#preListTablesInRSGroup(Ljava/lang/String;)V
+#postListTablesInRSGroup(Ljava/lang/String;)V
+#preGetConfiguredNamespacesAndTablesInRSGroup(Ljava/lang/String;)V
+#postGetConfiguredNamespacesAndTablesInRSGroup(Ljava/lang/String;)V
+#preGetRSGroupInfoOfServer(Lorg/apache/hadoop/hbase/net/Address;)V
+#postGetRSGroupInfoOfServer(Lorg/apache/hadoop/hbase/net/Address;)V
+#preTransitReplicationPeerSyncReplicationState(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
+#postTransitReplicationPeerSyncReplicationState(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
-#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
-#postModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
-#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
-#postModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)V
-#preBalance(Lorg/apache/hadoop/hbase/client/BalanceRequest;)Z
-#postBalance(Lorg/apache/hadoop/hbase/client/BalanceRequest;Ljava/util/List;)V
-#preMasterStoreFlush()V
-#postMasterStoreFlush()V
-#preBalanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
-#postBalanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;Lorg/apache/hadoop/hbase/client/BalanceResponse;)V
@3.0.0-alpha-2
+#preBalance(Lorg/apache/hadoop/hbase/client/BalanceRequest;)Z
+#postBalance(Lorg/apache/hadoop/hbase/client/BalanceRequest;Ljava/util/List;)V
+#preBalanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#postBalanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;Lorg/apache/hadoop/hbase/client/BalanceResponse;)V
-#preBalance()Z
-#postBalance(Ljava/util/List;)V
-#preBalanceRSGroup(Ljava/lang/String;)V
-#postBalanceRSGroup(Ljava/lang/String;Z)V
@3.0.0-alpha-3
+#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
+#postModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
+#postModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/security/User;)V
+#preMasterStoreFlush()V
+#postMasterStoreFlush()V
-#preSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V

+###org/apache/hadoop/hbase/master/normalizer/RegionNormalizer
@1.2.0
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@1.3.0
+#setMasterRpcServices(Lorg/apache/hadoop/hbase/master/MasterRpcServices;)V
@1.7.0
+#computePlansForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@2.0.0-alpha-1
+#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#planSkipped(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)V
+#getSkippedCount(Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)J
-#computePlansForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@2.0.0-alpha4
+#planSkipped(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)V
-#planSkipped(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)V
@2.3.0
+#computePlansForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#setMasterRpcServices(Lorg/apache/hadoop/hbase/master/MasterRpcServices;)V
-#computePlanForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@2.4.0
-###org/apache/hadoop/hbase/master/normalizer/RegionNormalizer

+###org/apache/hadoop/hbase/master/procedure/AbstractStateMachineNamespaceProcedure
@2.0.0-alpha-1
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
@3.0.0-alpha-1
+#createDirectory(Lorg/apache/hadoop/hbase/master/MasterFileSystem;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V

+###org/apache/hadoop/hbase/master/procedure/DispatchMergingRegionsProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
@2.0.0-alpha2
-###org/apache/hadoop/hbase/master/procedure/DispatchMergingRegionsProcedure

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler
@1.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
+#addFront(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#addBack(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#yield(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#poll()Lorg/apache/hadoop/hbase/procedure2/Procedure;
+#clear()V
+#signalAll()V
+#size()I
+#completionCleanup(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#getPollCalls()J
+#getNullPollCalls()J
+#waitEvent(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#waitEvent(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;Lorg/apache/hadoop/hbase/procedure2/Procedure;Z)Z
+#suspend(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
+#wake(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
+#tryAcquireTableExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)Z
+#releaseTableExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)V
+#tryAcquireTableSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)Z
+#releaseTableSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)V
+#tryAcquireServerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)Z
+#releaseServerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)V
+#tryAcquireServerSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)Z
+#releaseServerSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)V
@1.3.0
+#tryAcquireNamespaceExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)Z
+#releaseNamespaceExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#listLocks()Ljava/util/List;
+#getLockInfoForResource(Lorg/apache/hadoop/hbase/procedure2/LockInfo$ResourceType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure2/LockInfo;
+#waitTableExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)Z
+#wakeTableExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)V
+#waitTableSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)Z
+#wakeTableSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)V
+#waitRegion(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#waitRegions(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#wakeRegion(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#wakeRegions(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitNamespaceExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)Z
+#wakeNamespaceExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)V
+#waitServerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)Z
+#wakeServerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)V
+#dumpLocks()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
-#addFront(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
-#addBack(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
-#poll()Lorg/apache/hadoop/hbase/procedure2/Procedure;
-#signalAll()V
-#size()I
-#getPollCalls()J
-#getNullPollCalls()J
-#waitEvent(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
-#waitEvent(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;Lorg/apache/hadoop/hbase/procedure2/Procedure;Z)Z
-#suspend(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
-#wake(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;)V
-#tryAcquireTableExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)Z
-#releaseTableExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)V
-#tryAcquireTableSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)Z
-#releaseTableSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;)V
-#tryAcquireNamespaceExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)Z
-#releaseNamespaceExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)V
-#tryAcquireServerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)Z
-#releaseServerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)V
-#tryAcquireServerSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)Z
-#releaseServerSharedLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha3
+#getLocks()Ljava/util/List;
+#getLockResource(Lorg/apache/hadoop/hbase/procedure2/LockedResourceType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure2/LockedResource;
-#listLocks()Ljava/util/List;
-#getLockInfoForResource(Lorg/apache/hadoop/hbase/procedure2/LockInfo$ResourceType;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure2/LockInfo;
@2.0.0-alpha4
+#waitRegion(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#waitRegions(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#wakeRegion(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#wakeRegions(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#waitRegion(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#waitRegions(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#wakeRegion(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#wakeRegions(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-beta-2
+#<init>()V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.1
+#waitMetaExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#wakeMetaExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
@2.0.2
*#waitMetaExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z[deprecated]
*#wakeMetaExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V[deprecated]
@2.0.3
+#<init>(Ljava/util/function/Function;)V
-#<init>()V
@2.1.0
+#<init>()V
+#waitPeerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)Z
+#wakePeerExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;Ljava/lang/String;)V
-#<init>(Ljava/util/function/Function;)V
@2.1.2
+#<init>(Ljava/util/function/Function;)V
-#<init>()V

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$ExecuteProceduresRemoteCall
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#call()Ljava/lang/Void;
+#dispatchOpenRequests(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/util/List;)V
+#dispatchCloseRequests(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/util/List;)V
+#call()Ljava/lang/Object;
@2.0.5
+#run()V
-#call()Ljava/lang/Void;
-#call()Ljava/lang/Object;
@2.1.0
+#call()Ljava/lang/Void;
+#dispatchServerOperations(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Ljava/util/List;)V
+#call()Ljava/lang/Object;
-#run()V
@2.1.4
+#run()V
-#call()Ljava/lang/Void;
-#call()Ljava/lang/Object;

+###org/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;

+###org/apache/hadoop/hbase/master/RegionPlan$RegionPlanComparator
@0.95.0
+#<init>()V
+#compare(Lorg/apache/hadoop/hbase/master/RegionPlan;Lorg/apache/hadoop/hbase/master/RegionPlan;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RegionPlan$RegionPlanComparator

+###org/apache/hadoop/hbase/master/ServerManager
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#getLastFlushedSequenceId([B)J
+#getLoad(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/ServerLoad;
+#getAverageLoad()D
+#getOnlineServers()Ljava/util/Map;
+#getDeadServers()Lorg/apache/hadoop/hbase/master/DeadServer;
+#areDeadServersInProgress()Z
+#expireServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#processDeadServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#removeServerFromDrainList(Lorg/apache/hadoop/hbase/ServerName;)Z
+#addServerToDrainList(Lorg/apache/hadoop/hbase/ServerName;)Z
+#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;I)Lorg/apache/hadoop/hbase/regionserver/RegionOpeningState;
+#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)Ljava/util/List;
+#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;ILorg/apache/hadoop/hbase/ServerName;Z)Z
+#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;I)Z
+#sendRegionsMerge(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#waitForRegionServers(Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
+#getOnlineServersList()Ljava/util/List;
+#getDrainingServersList()Ljava/util/List;
+#isServerOnline(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isServerDead(Lorg/apache/hadoop/hbase/ServerName;)Z
+#shutdownCluster()V
+#isClusterShutdown()Z
+#stop()V
+#createDestinationServersList(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
+#createDestinationServersList()Ljava/util/List;
@0.95.1-hadoop1
+#processDeadServer(Lorg/apache/hadoop/hbase/ServerName;Z)V
+#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;ILjava/util/List;)Lorg/apache/hadoop/hbase/regionserver/RegionOpeningState;
-#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;I)Lorg/apache/hadoop/hbase/regionserver/RegionOpeningState;
@0.96.0-hadoop1
+#isServerReachable(Lorg/apache/hadoop/hbase/ServerName;)Z
@0.98.3-hadoop1
+#registerListener(Lorg/apache/hadoop/hbase/master/ServerListener;)V
+#unregisterListener(Lorg/apache/hadoop/hbase/master/ServerListener;)Z
@0.98.23-hadoop1
+#removeRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#removeRegions(Ljava/util/List;)V
@0.99.0
-#removeRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#removeRegions(Ljava/util/List;)V
@0.99.1
+#countOfRegionServers()I
@1.1.0
+#getLastFlushedSequenceId([B)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
+#sendRegionWarmup(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;J)V
-#getLastFlushedSequenceId([B)J
@1.1.7
+#removeRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#removeRegions(Ljava/util/List;)V
@1.1.11
+#isServerWithSameHostnamePortOnline(Lorg/apache/hadoop/hbase/ServerName;)Z
@1.2.0
+#moveFromOnelineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)V
-#processDeadServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#isServerWithSameHostnamePortOnline(Lorg/apache/hadoop/hbase/ServerName;)Z
-#removeRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#removeRegions(Ljava/util/List;)V
@1.2.4
+#removeRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#removeRegions(Ljava/util/List;)V
@1.2.7
+#isServerWithSameHostnamePortOnline(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isRegionInServerManagerStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.3.0
+#sendRegionsMerge(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/security/User;)V
-#sendRegionsMerge(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#isServerWithSameHostnamePortOnline(Lorg/apache/hadoop/hbase/ServerName;)Z
-#isRegionInServerManagerStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.3.2
+#isServerWithSameHostnamePortOnline(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isRegionInServerManagerStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.4.0
+#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)V
+#createDestinationServersList(Ljava/util/List;)Ljava/util/List;
-#moveFromOnelineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)V
-#createDestinationServersList(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#regionServerReport(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerLoad;)V
+#getLastFlushedSequenceId([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
+#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/RegionOpeningState;
+#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Z
+#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#getRsAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#getOnlineServersListWithPredicator(Ljava/util/List;Ljava/util/function/Predicate;)Ljava/util/List;
+#createDestinationServersList(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
+#sendFavoredNodes(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Map;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#getLastFlushedSequenceId([B)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;ILjava/util/List;)Lorg/apache/hadoop/hbase/regionserver/RegionOpeningState;
-#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;ILorg/apache/hadoop/hbase/ServerName;Z)Z
-#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;I)Z
-#isServerWithSameHostnamePortOnline(Lorg/apache/hadoop/hbase/ServerName;)Z
-#createDestinationServersList(Ljava/util/List;)Ljava/util/List;
-#isRegionInServerManagerStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@2.0.0-alpha2
+#createDestinationServersList(Ljava/util/List;)Ljava/util/List;
+#isRegionInServerManagerStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#sendRegionsMerge(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/security/User;)V
-#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/RegionOpeningState;
-#sendRegionOpen(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)Ljava/util/List;
-#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Z
-#sendRegionClose(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#isServerReachable(Lorg/apache/hadoop/hbase/ServerName;)Z
-#createDestinationServersList(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
-#sendFavoredNodes(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Map;)V
@2.0.0-alpha4
+#sendRegionWarmup(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#removeRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#isRegionInServerManagerStates(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#sendRegionWarmup(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;J)V
-#removeRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#isRegionInServerManagerStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@2.0.0-beta-2
+#regionServerReport(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerMetrics;)V
+#getLoad(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/ServerMetrics;
-#regionServerReport(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerLoad;)V
-#getLoad(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/ServerLoad;
-#isClusterShutdown()Z
@2.0.1
+#expireServer(Lorg/apache/hadoop/hbase/ServerName;)Z
+#getServerVersion(Lorg/apache/hadoop/hbase/ServerName;)I
-#expireServer(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.2
+#isClusterShutdown()Z
+#getInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I
-#processDeadServer(Lorg/apache/hadoop/hbase/ServerName;Z)V
@2.0.3
+#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)Z
-#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)V
@2.1.0
+#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)V
+#getVersionNumber(Lorg/apache/hadoop/hbase/ServerName;)I
+#getVersion(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/String;
-#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)Z
-#isClusterShutdown()Z
-#getServerVersion(Lorg/apache/hadoop/hbase/ServerName;)I
@2.1.1
+#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isClusterShutdown()Z
-#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)V
@2.2.0
+#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)V
-#moveFromOnlineToDeadServers(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.2.1
+#isServerKnownAndOnline(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/ServerManager$ServerLiveState;
@2.2.3
+#expireServer(Lorg/apache/hadoop/hbase/ServerName;)J
-#expireServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.2.7
+#isServerUnknown(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.3.0
-#isServerUnknown(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.3.5
+#isServerUnknown(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.4.0
-#isServerUnknown(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.4.3
+#isServerUnknown(Lorg/apache/hadoop/hbase/ServerName;)Z
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/RegionServerList;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#getFlushedSequenceIdByRegion()Ljava/util/concurrent/ConcurrentNavigableMap;
+#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#startChore()V
+#loadLastFlushedSequenceIds()V
+#removeDeletedRegionFromLoadedFlushedSequenceIds()V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/RegionServerList;)V
-#sendRegionWarmup(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
-#getRsAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/RegionServerList;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V

+###org/apache/hadoop/hbase/mob/compactions/MobCompactionRequest
@2.0.0-alpha-1
+#<init>()V
+#setCompactionType(Lorg/apache/hadoop/hbase/mob/compactions/MobCompactionRequest$CompactionType;)V
+#getSelectionTime()J
+#getCompactionType()Lorg/apache/hadoop/hbase/mob/compactions/MobCompactionRequest$CompactionType;
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/MobCompactionRequest

+###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartition
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartitionId;)V
+#getPartitionId()Lorg/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartitionId;
+#addFile(Lorg/apache/hadoop/fs/FileStatus;)V
+#listFiles()Ljava/util/List;
+#getFileCount()I
+#getStartKey()[B
+#setStartKey([B)V
+#getEndKey()[B
+#setEndKey([B)V
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartition

+###org/apache/hadoop/hbase/mob/MobFileName
@2.0.0-alpha-1
+#create([BLjava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/MobFileName;
+#create(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/MobFileName;
+#create(Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/MobFileName;
+#getStartKeyFromName(Ljava/lang/String;)Ljava/lang/String;
+#getDateFromName(Ljava/lang/String;)Ljava/lang/String;
+#getStartKey()Ljava/lang/String;
+#getDate()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#getFileName()Ljava/lang/String;
@2.5.0
+#create([BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/MobFileName;
+#create(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/MobFileName;
+#isOldMobFileName(Ljava/lang/String;)Z
+#getRegionName()Ljava/lang/String;
-#create([BLjava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/MobFileName;
-#create(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/mob/MobFileName;

+###org/apache/hadoop/hbase/monitoring/LogMonitoring
@0.95.0
+#<init>()V
+#getActiveLogFiles()Ljava/util/Set;
+#dumpTailOfLogs(Ljava/io/PrintWriter;J)V
@2.3.0
-###org/apache/hadoop/hbase/monitoring/LogMonitoring

+###org/apache/hadoop/hbase/monitoring/MonitoredTask
@0.95.0
+#getStartTime()J
+#getDescription()Ljava/lang/String;
+#getStatus()Ljava/lang/String;
+#getStatusTime()J
+#getState()Lorg/apache/hadoop/hbase/monitoring/MonitoredTask$State;
+#getStateTime()J
+#getCompletionTimestamp()J
+#markComplete(Ljava/lang/String;)V
+#pause(Ljava/lang/String;)V
+#resume(Ljava/lang/String;)V
+#abort(Ljava/lang/String;)V
+#expireNow()V
+#setStatus(Ljava/lang/String;)V
+#setDescription(Ljava/lang/String;)V
+#cleanup()V
+#clone()Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;
+#toMap()Ljava/util/Map;
+#toJSON()Ljava/lang/String;
@1.2.7
+#getStatusJournal()Ljava/util/List;
+#enableStatusJournal(Z)V
+#disableStatusJournal()V
+#prettyPrintJournal()Ljava/lang/String;
@1.3.0
-#getStatusJournal()Ljava/util/List;
-#enableStatusJournal(Z)V
-#disableStatusJournal()V
-#prettyPrintJournal()Ljava/lang/String;
@1.3.3
+#getWarnTime()J
+#setWarnTime(J)V
+#getStatusJournal()Ljava/util/List;
+#enableStatusJournal(Z)V
+#disableStatusJournal()V
+#prettyPrintJournal()Ljava/lang/String;
@1.4.0
-#getStatusJournal()Ljava/util/List;
-#enableStatusJournal(Z)V
-#disableStatusJournal()V
-#prettyPrintJournal()Ljava/lang/String;
@1.4.6
+#getStatusJournal()Ljava/util/List;
+#enableStatusJournal(Z)V
+#disableStatusJournal()V
+#prettyPrintJournal()Ljava/lang/String;
@2.0.0-alpha-1
-#getWarnTime()J
-#setWarnTime(J)V
-#getStatusJournal()Ljava/util/List;
-#enableStatusJournal(Z)V
-#disableStatusJournal()V
-#prettyPrintJournal()Ljava/lang/String;
@2.0.0-alpha2
+#getWarnTime()J
+#setWarnTime(J)V
@2.0.2
+#getStatusJournal()Ljava/util/List;
+#enableStatusJournal(Z)V
+#disableStatusJournal()V
+#prettyPrintJournal()Ljava/lang/String;
@2.4.14
-#enableStatusJournal(Z)V
-#disableStatusJournal()V
@3.0.0-alpha-1
+#enableStatusJournal(Z)V
+#disableStatusJournal()V

+###org/apache/hadoop/hbase/monitoring/TaskMonitor
@0.95.0
+#<init>()V
+#get()Lorg/apache/hadoop/hbase/monitoring/TaskMonitor;
+#createStatus(Ljava/lang/String;)Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;
+#createRPCStatus(Ljava/lang/String;)Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;
+#getTasks()Ljava/util/List;
+#dumpAsText(Ljava/io/PrintWriter;)V
@1.3.3
+#shutdown()V
-#<init>()V
@2.0.0-alpha-1
+#<init>()V
-#shutdown()V
@2.0.0-alpha2
+#getTasks(Ljava/lang/String;)Ljava/util/List;
+#shutdown()V
-#<init>()V
@2.4.14
+#createStatus(Ljava/lang/String;Z)Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;

+###org/apache/hadoop/hbase/procedure/RegionServerProcedureManagerHost
@0.98.1-hadoop1
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start()V
+#stop(Z)V
+#loadProcedures(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/quotas/ActivePolicyEnforcement
@2.0.0-alpha-1
+#<init>(Ljava/util/Map;Ljava/util/Map;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#<init>(Ljava/util/Map;Ljava/util/Map;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcementFactory;)V
+#getPolicyEnforcement(Lorg/apache/hadoop/hbase/regionserver/Region;)Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcement;
+#getPolicyEnforcement(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcement;
+#getPolicies()Ljava/util/Map;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/quotas/MasterQuotaManager
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#start()V
+#stop()V
+#isQuotaEnabled()Z
+#setQuota(Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaResponse;
+#setUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setNamespaceQuota(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#removeNamespaceQuota(Ljava/lang/String;)V
+#checkNamespaceTableAndRegionQuota(Lorg/apache/hadoop/hbase/TableName;I)V
+#onRegionMerged(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#onRegionSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#removeTableFromNamespaceQuota(Lorg/apache/hadoop/hbase/TableName;)V
+#getNamespaceQuotaManager()Lorg/apache/hadoop/hbase/namespace/NamespaceAuditor;
+#onRegionSplitReverted(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.1.1
+#checkAndUpdateNamespaceRegionQuota(Lorg/apache/hadoop/hbase/TableName;I)V
@1.1.5
+#getRegionCountOfTable(Lorg/apache/hadoop/hbase/TableName;)I
@1.1.11
+#isQuotaInitialized()Z
-#isQuotaEnabled()Z
@1.2.0
+#isQuotaEnabled()Z
-#isQuotaInitialized()Z
-#getRegionCountOfTable(Lorg/apache/hadoop/hbase/TableName;)I
@1.2.1
+#getRegionCountOfTable(Lorg/apache/hadoop/hbase/TableName;)I
@1.2.6
+#isQuotaInitialized()Z
-#isQuotaEnabled()Z
@1.3.0
+#isQuotaEnabled()Z
-#isQuotaInitialized()Z
@1.3.2
+#isQuotaInitialized()Z
-#isQuotaEnabled()Z
@2.0.0-alpha-1
+#setQuota(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaResponse;
+#setUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#setNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#addRegionSize(Lorg/apache/hadoop/hbase/HRegionInfo;JJ)V
+#snapshotRegionSizes()Ljava/util/Map;
-#setQuota(Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaResponse;
-#setUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
-#setUserQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
-#setUserQuota(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
-#setTableQuota(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
-#setNamespaceQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)V
@2.0.0-alpha4
+#onRegionMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#onRegionSplit(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#onRegionSplitReverted(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#addRegionSize(Lorg/apache/hadoop/hbase/client/RegionInfo;JJ)V
-#onRegionMerged(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#onRegionSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#onRegionSplitReverted(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#addRegionSize(Lorg/apache/hadoop/hbase/HRegionInfo;JJ)V
@2.1.7
+#removeRegionSizesForTable(Lorg/apache/hadoop/hbase/TableName;)V
@2.1.8
+#processFileArchivals(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
@2.2.0
+#setRegionServerQuota(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)V
+#switchRpcThrottle(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchRpcThrottleRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchRpcThrottleResponse;
+#isRpcThrottleEnabled(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsRpcThrottleEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsRpcThrottleEnabledResponse;
+#switchExceedThrottleQuota(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchExceedThrottleQuotaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchExceedThrottleQuotaResponse;
-#removeRegionSizesForTable(Lorg/apache/hadoop/hbase/TableName;)V
-#processFileArchivals(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
@2.2.1
+#isRpcThrottleEnabled()Z
+#isExceedThrottleQuotaEnabled()Z
@2.2.2
+#removeRegionSizesForTable(Lorg/apache/hadoop/hbase/TableName;)V
@2.2.3
+#processFileArchivals(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V

+###org/apache/hadoop/hbase/quotas/RateLimiter
@1.1.0
+#<init>()V
+#set(JLjava/util/concurrent/TimeUnit;)V
+#toString()Ljava/lang/String;
+#update(Lorg/apache/hadoop/hbase/quotas/RateLimiter;)V
+#isBypass()Z
+#getLimit()J
+#getAvailable()J
+#canExecute(JJ)Z
+#canExecute(JJJ)Z
+#consume()V
+#consume(J)V
+#waitInterval()J
+#waitInterval(J)J
@1.1.1
+#canExecute()Z
+#canExecute(J)Z
+#setNextRefillTime(J)V
+#getNextRefillTime()J
-#canExecute(JJ)Z
-#canExecute(JJJ)Z

+###org/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcement
@2.0.0-alpha-1
+#initialize(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#enable()V
+#disable()V
+#check(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getPolicyName()Ljava/lang/String;
+#areCompactionsDisabled()Z
+#getQuotaSnapshot()Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#shouldCheckBulkLoads()Z
+#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
@2.1.8
+#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
-#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
@2.2.0
+#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
-#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
@2.2.3
+#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
-#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V

+###org/apache/hadoop/hbase/quotas/UserQuotaState
@1.1.0
+#<init>()V
+#<init>(J)V
+#toString()Ljava/lang/String;
+#isBypass()Z
+#hasBypassGlobals()Z
+#setQuotas(Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#setQuotas(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#setQuotas(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#update(Lorg/apache/hadoop/hbase/quotas/QuotaState;)V
+#getTableLimiter(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;
@2.0.0-alpha-1
+#setQuotas(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#setQuotas(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#setQuotas(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#setQuotas(Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#setQuotas(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#setQuotas(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V

+###org/apache/hadoop/hbase/regionserver/CellChunkMap
@2.0.0-alpha-1
+#<init>(Ljava/util/Comparator;[Lorg/apache/hadoop/hbase/regionserver/Chunk;IIZ)V

+###org/apache/hadoop/hbase/regionserver/Chunk
@2.0.0-alpha-1
+#<init>(II)V
+#<init>(IIZ)V
+#init()V
+#alloc(I)I
+#toString()Ljava/lang/String;
@2.3.7
+#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)V
+#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;Z)V
-#<init>(II)V
-#<init>(IIZ)V
@2.4.0
+#<init>(II)V
+#<init>(IIZ)V
-#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)V
-#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;Z)V
@2.4.6
+#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)V
+#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;Z)V
-#<init>(II)V
-#<init>(IIZ)V
@3.0.0-alpha-1
+#<init>(II)V
+#<init>(IIZ)V
-#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)V
-#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;Z)V
@3.0.0-alpha-2
+#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)V
+#<init>(IILorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;Z)V
-#<init>(II)V
-#<init>(IIZ)V

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionConfiguration
@0.95.0
+#toString()Ljava/lang/String;
@0.98.11-hadoop1
+#getMinFilesToCompact()I
@0.98.18-hadoop1
+#setMinFilesToCompact(I)V
+#getMaxStoreFileAgeMillis()J
+#getBaseWindowMillis()J
+#getWindowsPerTier()I
+#getIncomingWindowMin()I
+#getCompactionPolicyForTieredWindow()Ljava/lang/String;
@0.98.19-hadoop1
+#getDateTieredMaxStoreFileAgeMillis()J
+#getDateTieredIncomingWindowMin()I
+#getCompactionPolicyForDateTieredWindow()Ljava/lang/String;
+#useDateTieredSingleOutputForMinorCompaction()Z
+#getDateTieredCompactionWindowFactory()Ljava/lang/String;
-#getMaxStoreFileAgeMillis()J
-#getBaseWindowMillis()J
-#getWindowsPerTier()I
-#getIncomingWindowMin()I
-#getCompactionPolicyForTieredWindow()Ljava/lang/String;
@0.99.0
-#getMinFilesToCompact()I
-#setMinFilesToCompact(I)V
-#getDateTieredMaxStoreFileAgeMillis()J
-#getDateTieredIncomingWindowMin()I
-#getCompactionPolicyForDateTieredWindow()Ljava/lang/String;
-#useDateTieredSingleOutputForMinorCompaction()Z
-#getDateTieredCompactionWindowFactory()Ljava/lang/String;
@0.99.2
+#getMinCompactSize()J
+#getMaxCompactSize()J
+#getMinFilesToCompact()I
+#getMaxFilesToCompact()I
+#getCompactionRatio()D
+#getCompactionRatioOffPeak()D
+#getThrottlePoint()J
+#getMajorCompactionPeriod()J
+#getMajorCompactionJitter()F
@1.0.0
+#getMinLocalityToForceCompact()F
@1.2.0
+#getOffPeakMaxCompactSize()J
+#getMaxCompactSize(Z)J
@1.3.0
+#setMinFilesToCompact(I)V
+#getDateTieredMaxStoreFileAgeMillis()J
+#getDateTieredIncomingWindowMin()I
+#getCompactionPolicyForDateTieredWindow()Ljava/lang/String;
+#useDateTieredSingleOutputForMinorCompaction()Z
+#getDateTieredCompactionWindowFactory()Ljava/lang/String;
@2.4.0
+#isDateTieredStoragePolicyEnable()Z
+#getHotWindowAgeMillis()J
+#getWarmWindowAgeMillis()J
+#getHotWindowStoragePolicy()Ljava/lang/String;
+#getWarmWindowStoragePolicy()Ljava/lang/String;
+#getColdWindowStoragePolicy()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/compactions/Compactor$FileDetails
@0.95.0

+###org/apache/hadoop/hbase/regionserver/compactions/ExponentialCompactionWindowFactory
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionConfiguration;)V
+#newIncomingWindow(J)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionWindow;
+#toString()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/ExponentialCompactionWindowFactory

+###org/apache/hadoop/hbase/regionserver/compactions/RatioBasedCompactionPolicy
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
+#preSelectCompactionForCoprocessor(Ljava/util/Collection;Ljava/util/List;)Ljava/util/List;
+#selectCompaction(Ljava/util/Collection;Ljava/util/List;ZZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#isMajorCompaction(Ljava/util/Collection;)Z
+#getNextMajorCompactTime(Ljava/util/Collection;)J
+#throttleCompaction(J)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
@0.98.18-hadoop1
+#setMinThreshold(I)V
@0.98.19-hadoop1
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#preSelectCompactionForCoprocessor(Ljava/util/Collection;Ljava/util/List;)Ljava/util/List;
-#selectCompaction(Ljava/util/Collection;Ljava/util/List;ZZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#isMajorCompaction(Ljava/util/Collection;)Z
-#getNextMajorCompactTime(Ljava/util/Collection;)J
-#throttleCompaction(J)Z
-#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
@0.99.0
+#preSelectCompactionForCoprocessor(Ljava/util/Collection;Ljava/util/List;)Ljava/util/List;
+#selectCompaction(Ljava/util/Collection;Ljava/util/List;ZZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#isMajorCompaction(Ljava/util/Collection;)Z
+#getNextMajorCompactTime(Ljava/util/Collection;)J
+#throttleCompaction(J)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
-#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#setMinThreshold(I)V
@1.3.0
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
+#setMinThreshold(I)V
-#preSelectCompactionForCoprocessor(Ljava/util/Collection;Ljava/util/List;)Ljava/util/List;
-#selectCompaction(Ljava/util/Collection;Ljava/util/List;ZZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#isMajorCompaction(Ljava/util/Collection;)Z
-#getNextMajorCompactTime(Ljava/util/Collection;)J
-#throttleCompaction(J)Z

+###org/apache/hadoop/hbase/regionserver/CompactSplit
@2.0.0-alpha-1
+#toString()Ljava/lang/String;
+#dumpQueue()Ljava/lang/String;
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;ZJLorg/apache/hadoop/hbase/security/User;)V
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;)Z
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[B)V
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[BLorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;)V
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)V
+#getCompactionQueueSize()I
+#getLargeCompactionQueueSize()I
+#getSmallCompactionQueueSize()I
+#getSplitQueueSize()I
+#getRegionSplitLimit()I
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#registerChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#deregisterChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#getCompactionThroughputController()Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;
+#clearLongCompactionsQueue()V
+#clearShortCompactionsQueue()V
@2.0.0-alpha2
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;ZJLorg/apache/hadoop/hbase/security/User;)V
@2.0.0-alpha3
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;)V
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;)V
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;)V
-#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)V
@2.2.0
+#switchCompaction(Z)V
+#isCompactionsEnabled()Z
+#setCompactionsEnabled(Z)V
@2.4.11
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[B)V
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[BLorg/apache/hadoop/hbase/security/User;)V
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;Z)V
+#isUnderCompaction(Lorg/apache/hadoop/hbase/regionserver/HStore;)Z
@3.0.0-alpha-1
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[B)V
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[BLorg/apache/hadoop/hbase/security/User;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;Z)V
-#isUnderCompaction(Lorg/apache/hadoop/hbase/regionserver/HStore;)Z
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;Z)V
+#isUnderCompaction(Lorg/apache/hadoop/hbase/regionserver/HStore;)Z
@3.0.0-alpha-3
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[B)V
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[BLorg/apache/hadoop/hbase/security/User;)V

+###org/apache/hadoop/hbase/regionserver/DisabledRegionSplitPolicy
@0.95.1-hadoop1
+#<init>()V

+###org/apache/hadoop/hbase/regionserver/FlushAllLargeStoresPolicy
@2.0.0-alpha-1
+#<init>()V
+#selectStoresToFlush()Ljava/util/Collection;

+###org/apache/hadoop/hbase/regionserver/HeapMemoryManager$TunerResult
@0.99.0
+#<init>(Z)V
+#getMemstoreSize()F
+#setMemstoreSize(F)V
+#getBlockCacheSize()F
+#setBlockCacheSize(F)V
+#needsTuning()Z
@2.0.0-alpha4
+#getMemStoreSize()F
+#setMemStoreSize(F)V
-#getMemstoreSize()F
-#setMemstoreSize(F)V

+###org/apache/hadoop/hbase/regionserver/HRegion$RowLockImpl
@1.1.0
+#<init>()V
+#getContext()Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLockContext;
+#setContext(Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLockContext;)V
+#release()V
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLockContext;Ljava/util/concurrent/locks/Lock;)V
+#getLock()Ljava/util/concurrent/locks/Lock;
+#toString()Ljava/lang/String;
-#<init>()V
-#setContext(Lorg/apache/hadoop/hbase/regionserver/HRegion$RowLockContext;)V

+###org/apache/hadoop/hbase/regionserver/HRegionServer$MovedRegionsCleaner
@0.95.0
+#stop(Ljava/lang/String;)V
+#isStopped()Z
@2.2.7
-###org/apache/hadoop/hbase/regionserver/HRegionServer$MovedRegionsCleaner

+###org/apache/hadoop/hbase/regionserver/HStore
@0.95.0
+#getColumnFamilyName()Ljava/lang/String;
+#getTableName()Ljava/lang/String;
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#getRegionFileSystem()Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
+#getStoreFileTtl()J
+#getMemstoreFlushSize()J
+#getBytesPerChecksum(Lorg/apache/hadoop/conf/Configuration;)I
+#getChecksumType(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/ChecksumType;
+#getCloseCheckInterval()I
+#getFamily()Lorg/apache/hadoop/hbase/HColumnDescriptor;
+#getMaxMemstoreTS()J
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getDataBlockEncoder()Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
+#add(Lorg/apache/hadoop/hbase/KeyValue;)J
+#rollback(Lorg/apache/hadoop/hbase/KeyValue;)V
+#getStorefiles()Ljava/util/Collection;
+#assertBulkLoadHFileOk(Lorg/apache/hadoop/fs/Path;)V
+#bulkLoadHFile(Ljava/lang/String;J)V
+#close()Lcom/google/common/collect/ImmutableCollection;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#getScanners(ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
+#addChangedReaderObserver(Lorg/apache/hadoop/hbase/regionserver/ChangedReadersObserver;)V
+#deleteChangedReaderObserver(Lorg/apache/hadoop/hbase/regionserver/ChangedReadersObserver;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;
+#compactRecentForTestingAssumingDefaultPolicy(I)V
+#hasReferences()Z
+#getCompactionProgress()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionProgress;
+#isMajorCompaction()Z
+#requestCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
+#cancelRequestedCompaction(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)V
+#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/KeyValue;
+#canSplit()Z
+#getSplitPoint()[B
+#getLastCompactSize()J
+#getSize()J
+#triggerMajorCompaction()V
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#toString()Ljava/lang/String;
+#getStorefilesCount()I
+#getStoreSizeUncompressed()J
+#getStorefilesSize()J
+#getStorefilesIndexSize()J
+#getTotalStaticIndexSize()J
+#getTotalStaticBloomSize()J
+#getMemStoreSize()J
+#getCompactPriority()I
+#throttleCompaction(J)Z
+#getHRegion()Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#areWritesEnabled()Z
+#getSmallestReadPoint()J
+#updateColumnValue([B[B[BJ)J
+#upsert(Ljava/lang/Iterable;J)J
+#getStoreFlusher(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlusher;
+#needsCompaction()Z
+#getCacheConfig()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
+#heapSize()J
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
+#getScanInfo()Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#hasTooManyStoreFiles()Z
+#close()Ljava/util/Collection;
@0.95.1-hadoop1
+#getCompactionCheckMultiplier()J
+#getBlockingFileCount()J
+#timeOfOldestEdit()J
+#completeCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)V
+#createFlushContext(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlushContext;
-#getStoreFlusher(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlusher;
@0.95.2-hadoop1
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#getTableName()Ljava/lang/String;
@0.96.0-hadoop1
+#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
-#getScanners(ZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
@0.96.2-hadoop1
+#getFlushableSize()J
@0.98.0-hadoop1
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJ)Ljava/util/List;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#getFlushableSize()J
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[B)Ljava/util/List;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
@0.98.1-hadoop1
+#getFlushableSize()J
@0.98.6-hadoop1
+#getFlushedCellsCount()J
+#getFlushedCellsSize()J
+#getCompactedCellsCount()J
+#getCompactedCellsSize()J
+#getMajorCompactedCellsCount()J
+#getMajorCompactedCellsSize()J
@0.98.11-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
+#getCompactionPressure()D
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;
@0.98.15-hadoop1
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@0.98.16-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@0.98.18-hadoop1
+#getMaxStoreFileAge()J
+#getMinStoreFileAge()J
+#getAvgStoreFileAge()J
+#getNumReferenceFiles()J
+#getNumHFiles()J
@0.98.19-hadoop1
+#getMaxSequenceId()J
@0.98.21-hadoop1
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@0.99.0
+#refreshStoreFiles()V
+#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
+#rollback(Lorg/apache/hadoop/hbase/Cell;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;
-#getMaxSequenceId()J
-#add(Lorg/apache/hadoop/hbase/KeyValue;)J
-#rollback(Lorg/apache/hadoop/hbase/KeyValue;)V
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
-#getMaxStoreFileAge()J
-#getMinStoreFileAge()J
-#getAvgStoreFileAge()J
-#getNumReferenceFiles()J
-#getNumHFiles()J
-#getCompactionPressure()D
@0.99.1
+#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/Cell;
-#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/KeyValue;
@0.99.2
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#registerChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#deregisterChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
@1.0.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@1.1.0
+#getSnapshotSize()J
+#getMaxSequenceId()J
+#refreshStoreFiles(Ljava/util/Collection;)V
+#bulkLoadHFile(Ljava/lang/String;J)Lorg/apache/hadoop/fs/Path;
+#bulkLoadHFile(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
+#replayCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;ZZ)V
+#getStoreEngine()Lorg/apache/hadoop/hbase/regionserver/StoreEngine;
+#getCompactionPressure()D
-#bulkLoadHFile(Ljava/lang/String;J)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#completeCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)V
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@1.1.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@1.2.0
+#add(Lorg/apache/hadoop/hbase/Cell;)J
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#isPrimaryReplicaStore()Z
-#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/util/Pair;
@1.3.0
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#getMaxStoreFileAge()J
+#getMinStoreFileAge()J
+#getAvgStoreFileAge()J
+#getNumReferenceFiles()J
+#getNumHFiles()J
+#getFlushedOutputFileSize()J
+#closeAndArchiveCompactedFiles()V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.3.2
+#preSnapshotOperation()V
+#postSnapshotOperation()V
@1.3.3
+#getCompactedfiles()Ljava/util/Collection;
+#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
+#closeAndArchiveCompactedFiles(Z)V
-#upsert(Ljava/lang/Iterable;J)J
@1.3.5
-#closeAndArchiveCompactedFiles(Z)V
@1.4.0
+#add(Ljava/lang/Iterable;)J
+#preBulkLoadHFile(Ljava/lang/String;J)Lorg/apache/hadoop/hbase/util/Pair;
+#bulkLoadHFile([BLjava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJ)Ljava/util/List;
+#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
+#isCellTTLExpired(Lorg/apache/hadoop/hbase/Cell;JJ)Z
-#getCompactedfiles()Ljava/util/Collection;
-#bulkLoadHFile(Ljava/lang/String;J)Lorg/apache/hadoop/fs/Path;
-#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJ)Ljava/util/List;
-#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
@1.4.8
+#closeAndArchiveCompactedFiles(Z)V
@1.4.9
+#getCompactedfiles()Ljava/util/Collection;
@1.4.10
-#closeAndArchiveCompactedFiles(Z)V
@1.5.0
+#getStoreRefCount()I
@1.6.0
+#getMaxCompactedStoreFileRefCount()I
@1.7.0
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;J)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@2.0.0-alpha-1
+#determineTTLFromFamily(Lorg/apache/hadoop/hbase/HColumnDescriptor;)J
*#getFlushableSize()J[deprecated]
+#getSizeToFlush()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
*#getSnapshotSize()J[deprecated]
+#getSizeOfSnapshot()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#startReplayingFromWAL()V
+#stopReplayingFromWAL()V
+#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#getScanners(ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJ)Ljava/util/List;
+#getScanners(Ljava/util/List;ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJZ)Ljava/util/List;
+#replayCompactionMarker(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;ZZ)V
*#getMemStoreSize()J[deprecated]
+#getSizeOfMemStore()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
+#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#preFlushSeqIDEstimation()Ljava/lang/Long;
+#isSloppyMemstore()Z
-#add(Lorg/apache/hadoop/hbase/Cell;)J
-#add(Ljava/lang/Iterable;)J
-#rollback(Lorg/apache/hadoop/hbase/Cell;)V
-#getCompactedfiles()Ljava/util/Collection;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;J)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
-#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJ)Ljava/util/List;
-#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
-#replayCompactionMarker(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;ZZ)V
-#isCellTTLExpired(Lorg/apache/hadoop/hbase/Cell;JJ)Z
-#getRowKeyAtOrBefore([B)Lorg/apache/hadoop/hbase/Cell;
-#updateColumnValue([B[B[BJ)J
-#upsert(Ljava/lang/Iterable;JLjava/util/List;)J
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#preSnapshotOperation()V
-#postSnapshotOperation()V
-#getStoreRefCount()I
-#getMaxCompactedStoreFileRefCount()I
@2.0.0-alpha2
+#determineTTLFromFamily(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)J
+#getColumnFamilyDescriptor()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
+#getCompactedFiles()Ljava/util/Collection;
+#close()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;
+#recreateScanners(Ljava/util/List;ZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[BZ[BZJZ)Ljava/util/List;
+#getCompactedFilesCount()I
+#getHFilesSize()J
+#preSnapshotOperation()V
+#postSnapshotOperation()V
-#determineTTLFromFamily(Lorg/apache/hadoop/hbase/HColumnDescriptor;)J
-#getFamily()Lorg/apache/hadoop/hbase/HColumnDescriptor;
-#close()Lcom/google/common/collect/ImmutableCollection;
@2.0.0-alpha3
+#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/Optional;
-#requestCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
-#requestCompaction(ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@2.0.0-alpha4
+#getMemStoreFlushSize()J
+#getFlushableSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getSnapshotSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getMaxSequenceId()Ljava/util/OptionalLong;
+#getMaxMemStoreTS()Ljava/util/OptionalLong;
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
+#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#getScanners(ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJ)Ljava/util/List;
+#getScanners(Ljava/util/List;ZZZZLorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher;[B[BJZ)Ljava/util/List;
+#shouldPerformMajorCompaction()Z
+#requestCompaction()Ljava/util/Optional;
+#getSplitPoint()Ljava/util/Optional;
+#getMaxStoreFileAge()Ljava/util/OptionalLong;
+#getMinStoreFileAge()Ljava/util/OptionalLong;
+#getAvgStoreFileAge()Ljava/util/OptionalDouble;
+#getMemStoreSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)V
+#createFlushContext(JLorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFlushContext;
+#isSloppyMemStore()Z
-#getMemstoreFlushSize()J
-#getFlushableSize()J[deprecated]
-#getSizeToFlush()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getSnapshotSize()J[deprecated]
-#getSizeOfSnapshot()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getMaxSequenceId()J
-#getMaxMemstoreTS()J
-#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
-#add(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#add(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
-#isMajorCompaction()Z
-#getSplitPoint()[B
-#getMaxStoreFileAge()J
-#getMinStoreFileAge()J
-#getAvgStoreFileAge()J
-#getMemStoreSize()J[deprecated]
-#getSizeOfMemStore()Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#upsert(Ljava/lang/Iterable;JLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#createFlushContext(J)Lorg/apache/hadoop/hbase/regionserver/StoreFlushContext;
-#isSloppyMemstore()Z
-#close()Ljava/util/Collection;
@2.0.0-beta-1
+#close()Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableCollection;
+#getStorefilesRootLevelIndexSize()J
-#close()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;
-#getStorefilesIndexSize()J
@2.0.3
+#closeAndArchiveCompactedFiles(Z)V
@2.1.0
+#getCurrentParallelPutCount()I
-#closeAndArchiveCompactedFiles(Z)V
@2.1.1
+#closeAndArchiveCompactedFiles(Z)V
@2.2.0
-#closeAndArchiveCompactedFiles(Z)V
@2.2.6
+#getMemstoreOnlyRowReadsCount()J
+#getMixedRowReadsCount()J
@2.3.0
+#tryCommitRecoveredHFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HStoreFile;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#getStoreRefCount()I
+#getMaxCompactedStoreFileRefCount()I
@2.3.6
-#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
-#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
@2.3.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.0
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJLjava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.4.1
-#getBytesPerChecksum(Lorg/apache/hadoop/conf/Configuration;)I
-#getChecksumType(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/ChecksumType;
@2.4.3
-#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
-#getStoreHomedir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;[B)Lorg/apache/hadoop/fs/Path;[deprecated]
@2.4.7
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.5.0
+#updateCompactedMetrics(ZLorg/apache/hadoop/hbase/regionserver/compactions/CompactionProgress;)V
+#getStoreFilesBeingWritten()Ljava/util/Set;
+#getBloomFilterRequestsCount()J
+#getBloomFilterNegativeResultsCount()J
+#getBloomFilterEligibleRequestsCount()J
-#getCloseCheckInterval()I
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJLjava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#compactRecentForTestingAssumingDefaultPolicy(I)V
@3.0.0-alpha-1
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJLjava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#compactRecentForTestingAssumingDefaultPolicy(I)V
-#updateCompactedMetrics(ZLorg/apache/hadoop/hbase/regionserver/compactions/CompactionProgress;)V
-#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#getStoreFilesBeingWritten()Ljava/util/Set;
-#getBloomFilterRequestsCount()J
-#getBloomFilterNegativeResultsCount()J
-#getBloomFilterEligibleRequestsCount()J
@3.0.0-alpha-2
+#getReadOnlyConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#compactRecentForTestingAssumingDefaultPolicy(I)V
@3.0.0-alpha-3
+#updateCompactedMetrics(ZLorg/apache/hadoop/hbase/regionserver/compactions/CompactionProgress;)V
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZZZZJLjava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;

+###org/apache/hadoop/hbase/regionserver/MobStoreScanner
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)V
+#next(Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScannerContext;)Z
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)V
@2.3.0
+#shipped()V
+#close()V

+###org/apache/hadoop/hbase/regionserver/NoLimitScannerContext
@1.1.0
+#<init>()V
+#getInstance()Lorg/apache/hadoop/hbase/regionserver/ScannerContext;

+###org/apache/hadoop/hbase/regionserver/NoTagByteBufferChunkCell
@2.0.0-alpha-1
+#<init>(Ljava/nio/ByteBuffer;II)V
+#<init>(Ljava/nio/ByteBuffer;IIJ)V
+#getChunkId()I
@2.0.0-beta-1
-###org/apache/hadoop/hbase/regionserver/NoTagByteBufferChunkCell

+###org/apache/hadoop/hbase/regionserver/querymatcher/ExplicitColumnTracker
@1.4.0
+#<init>(Ljava/util/NavigableSet;IIJ)V
+#done()Z
+#getColumnHint()Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnCount;
+#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#reset()V
+#doneWithColumn([BII)V
+#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#isDone(J)Z
@2.0.0-alpha-1
+#checkColumn(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#checkVersions(Lorg/apache/hadoop/hbase/Cell;JBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#doneWithColumn(Lorg/apache/hadoop/hbase/Cell;)V
+#getNextRowOrNextColumn(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#beforeShipped()V
-#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
-#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
-#doneWithColumn([BII)V
-#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;

+###org/apache/hadoop/hbase/regionserver/querymatcher/ScanDeleteTracker
@1.4.0
+#<init>()V
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
+#isEmpty()Z
+#reset()V
+#update()V
@2.0.0-alpha-1
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult;
+#beforeShipped()V
-#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;)V
+#getCellComparator()Lorg/apache/hadoop/hbase/CellComparator;
-#<init>()V

+###org/apache/hadoop/hbase/regionserver/Region$FlushResult
@1.1.0
+#getResult()Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult$Result;
+#isFlushSucceeded()Z
+#isCompactionNeeded()Z
@2.0.0-alpha4
-###org/apache/hadoop/hbase/regionserver/Region$FlushResult

+###org/apache/hadoop/hbase/regionserver/RegionServerAccounting
@0.95.0
+#<init>()V
+#getGlobalMemstoreSize()J
+#addAndGetGlobalMemstoreSize(J)J
+#addAndGetRegionReplayEditsSize([BJ)J
+#rollbackRegionReplayEditsSize([B)J
+#clearRegionReplayEditsSize([B)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getGlobalMemstoreDataSize()J
+#getGlobalMemstoreHeapSize()J
+#incGlobalMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#decGlobalMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#isAboveHighWaterMark()Lorg/apache/hadoop/hbase/regionserver/FlushType;
+#isAboveLowWaterMark()Lorg/apache/hadoop/hbase/regionserver/FlushType;
+#getFlushPressure()D
+#addRegionReplayEditsSize([BLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#rollbackRegionReplayEditsSize([B)V
-#<init>()V
-#getGlobalMemstoreSize()J
-#addAndGetGlobalMemstoreSize(J)J
-#addAndGetRegionReplayEditsSize([BJ)J
-#rollbackRegionReplayEditsSize([B)J
@2.0.0-alpha4
+#getGlobalMemStoreDataSize()J
+#getGlobalMemStoreHeapSize()J
+#incGlobalMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#decGlobalMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#addRegionReplayEditsSize([BLorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#getGlobalMemstoreDataSize()J
-#getGlobalMemstoreHeapSize()J
-#incGlobalMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#decGlobalMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#addRegionReplayEditsSize([BLorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
@2.0.0-beta-2
+#getGlobalMemStoreOffHeapSize()J
@2.0.1
+#incGlobalMemStoreSize(JJJ)V
+#decGlobalMemStoreSize(JJJ)V
-#incGlobalMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#decGlobalMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
@2.0.2
-#addRegionReplayEditsSize([BLorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#rollbackRegionReplayEditsSize([B)V
-#clearRegionReplayEditsSize([B)V
@2.1.0
+#addRegionReplayEditsSize([BLorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#rollbackRegionReplayEditsSize([B)V
+#clearRegionReplayEditsSize([B)V
@2.1.1
-#addRegionReplayEditsSize([BLorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#rollbackRegionReplayEditsSize([B)V
-#clearRegionReplayEditsSize([B)V

+###org/apache/hadoop/hbase/regionserver/RegionServicesForStores
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#blockUpdates()V
+#unblockUpdates()V
+#addMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getWAL()Lorg/apache/hadoop/hbase/wal/WAL;
+#getInMemoryCompactionPool()Ljava/util/concurrent/ThreadPoolExecutor;
+#getMemstoreFlushSize()J
+#getNumStores()I
@2.0.0-alpha4
+#addMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getMemStoreFlushSize()J
-#addMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#getMemstoreFlushSize()J
@2.0.1
+#addMemStoreSize(JJJ)V
-#addMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
@2.0.5
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#addMemStoreSize(JJJI)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#addMemStoreSize(JJJ)V
-#getInMemoryCompactionPool()Ljava/util/concurrent/ThreadPoolExecutor;
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#addMemStoreSize(JJJ)V
+#getInMemoryCompactionPool()Ljava/util/concurrent/ThreadPoolExecutor;
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
-#addMemStoreSize(JJJI)V
@2.1.3
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#addMemStoreSize(JJJI)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#addMemStoreSize(JJJ)V
-#getInMemoryCompactionPool()Ljava/util/concurrent/ThreadPoolExecutor;
@2.2.0
-#blockUpdates()V
-#unblockUpdates()V
@2.3.0
+#getByteBuffAllocator()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;

+###org/apache/hadoop/hbase/regionserver/ReplicationSourceService
@0.95.0
+#getWALActionsListener()Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;
@1.5.0
+#getReplicationManager()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
@2.0.0-alpha-1
-#getReplicationManager()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
@2.0.0-beta-2
-#getWALActionsListener()Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;
@2.1.0
+#getPeerProcedureHandler()Lorg/apache/hadoop/hbase/replication/regionserver/PeerProcedureHandler;
+#getReplicationManager()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
@3.0.0-alpha-1
+#getSyncReplicationPeerInfoProvider()Lorg/apache/hadoop/hbase/replication/regionserver/SyncReplicationPeerInfoProvider;
+#getReplicationPeers()Lorg/apache/hadoop/hbase/replication/ReplicationPeers;

+###org/apache/hadoop/hbase/regionserver/ReversedMobStoreScanner
@2.0.0-alpha-1
+#next(Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScannerContext;)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
@2.0.0-alpha4
-#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
-#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
-#seek(Lorg/apache/hadoop/hbase/Cell;)Z
-#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
@2.3.0
+#shipped()V
+#close()V

+###org/apache/hadoop/hbase/regionserver/ScannerContext
@1.1.0
+#toString()Ljava/lang/String;
+#newBuilder()Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
+#newBuilder(Z)Lorg/apache/hadoop/hbase/regionserver/ScannerContext$Builder;
@1.3.5
+#isTrackingMetrics()Z
+#getMetrics()Lorg/apache/hadoop/hbase/client/metrics/ServerSideScanMetrics;
@1.4.0
+#getLastPeekedCell()Lorg/apache/hadoop/hbase/Cell;
+#setLastPeekedCell(Lorg/apache/hadoop/hbase/Cell;)V
-#isTrackingMetrics()Z
-#getMetrics()Lorg/apache/hadoop/hbase/client/metrics/ServerSideScanMetrics;
@1.4.10
+#isTrackingMetrics()Z
+#getMetrics()Lorg/apache/hadoop/hbase/client/metrics/ServerSideScanMetrics;
@2.0.0-alpha-1
+#getPeekedCellInHeartbeat()Lorg/apache/hadoop/hbase/Cell;
+#setPeekedCellInHeartbeat(Lorg/apache/hadoop/hbase/Cell;)V
-#isTrackingMetrics()Z
-#getMetrics()Lorg/apache/hadoop/hbase/client/metrics/ServerSideScanMetrics;
-#getLastPeekedCell()Lorg/apache/hadoop/hbase/Cell;
-#setLastPeekedCell(Lorg/apache/hadoop/hbase/Cell;)V
@2.0.0-alpha2
-#getPeekedCellInHeartbeat()Lorg/apache/hadoop/hbase/Cell;
-#setPeekedCellInHeartbeat(Lorg/apache/hadoop/hbase/Cell;)V
@2.1.5
+#isTrackingMetrics()Z
+#getMetrics()Lorg/apache/hadoop/hbase/client/metrics/ServerSideScanMetrics;

+###org/apache/hadoop/hbase/regionserver/Shipper
@2.0.0-alpha-1
+#shipped()V

+###org/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager$SnapshotSubprocedureBuilder
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager;)V
+#buildSubprocedure(Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/procedure/Subprocedure;

+###org/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor
@0.95.0
+#exec(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;
@0.98.4-hadoop1
+#exec(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;
-#exec(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;
@2.0.0-alpha-1
+#exec(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;
-#exec(Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;
@2.0.0-beta-1
+#exec(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;
-#exec(Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;

+###org/apache/hadoop/hbase/regionserver/StorefileRefresherChore
@0.99.0
+#<init>(ILorg/apache/hadoop/hbase/regionserver/HRegionServer;Lorg/apache/hadoop/hbase/Stoppable;)V
@1.1.0
+#<init>(IZLorg/apache/hadoop/hbase/regionserver/HRegionServer;Lorg/apache/hadoop/hbase/Stoppable;)V
-#<init>(ILorg/apache/hadoop/hbase/regionserver/HRegionServer;Lorg/apache/hadoop/hbase/Stoppable;)V

+###org/apache/hadoop/hbase/regionserver/StripeMultiFileWriter
@0.98.0-hadoop1
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/regionserver/StoreScanner;Lorg/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$WriterFactory;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#setNoStripeMetadata()V
+#commitWriters(JZ)Ljava/util/List;
+#abortWriters()Ljava/util/List;
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>()V
-#init(Lorg/apache/hadoop/hbase/regionserver/StoreScanner;Lorg/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$WriterFactory;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#commitWriters(JZ)Ljava/util/List;
-#abortWriters()Ljava/util/List;
@0.99.0
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/regionserver/StoreScanner;Lorg/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$WriterFactory;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#commitWriters(JZ)Ljava/util/List;
+#abortWriters()Ljava/util/List;
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>()V
-#init(Lorg/apache/hadoop/hbase/regionserver/StoreScanner;Lorg/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$WriterFactory;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#commitWriters(JZ)Ljava/util/List;
-#abortWriters()Ljava/util/List;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V

+###org/apache/hadoop/hbase/regionserver/StripeStoreFlusher$StripeFlushRequest
@0.98.0-hadoop1
+#<init>()V
+#createWriter()Lorg/apache/hadoop/hbase/regionserver/StripeMultiFileWriter;
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>()V
@0.99.0
+#<init>()V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V

+###org/apache/hadoop/hbase/regionserver/throttle/NoLimitThroughputController
@1.3.0
+#<init>()V
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start(Ljava/lang/String;)V
+#control(Ljava/lang/String;J)J
+#finish(Ljava/lang/String;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/throttle/ThroughputControlUtil
@1.3.0
+#getNameForThrottling(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)Ljava/lang/String;
@2.0.0-alpha4
+#getNameForThrottling(Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;)Ljava/lang/String;
-#getNameForThrottling(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/wal/AbstractProtobufLogWriter
@2.0.0-alpha-1
+#<init>()V
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
+#getLength()J
@2.0.1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
@2.5.0
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
@3.0.0-alpha-1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
@3.0.0-alpha-3
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V

+###org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter
@0.95.0
+#<init>()V
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
+#enableValues()V
+#disableValues()V
+#enableJSON()V
+#disableJSON()V
+#setSequenceFilter(J)V
+#setRegionFilter(Ljava/lang/String;)V
+#setRowFilter(Ljava/lang/String;)V
+#beginPersistentOutput()V
+#endPersistentOutput()V
+#processFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)V
@0.99.2
-#enableValues()V
-#disableValues()V
-#enableJSON()V
-#disableJSON()V
-#setSequenceFilter(J)V
-#setRegionFilter(Ljava/lang/String;)V
-#setRowFilter(Ljava/lang/String;)V
-#beginPersistentOutput()V
-#endPersistentOutput()V
-#processFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#run([Ljava/lang/String;)V
@1.6.0
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@1.7.0
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@2.0.0-alpha-1
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/regionserver/wal/HLogPrettyPrinter

+###org/apache/hadoop/hbase/regionserver/wal/ReaderBase
@0.95.1-hadoop1
+#<init>()V
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;)V
+#next()Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#next(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#seek(J)V
+#getWALTrailer()Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;
@0.99.2
+#next()Lorg/apache/hadoop/hbase/wal/WAL$Entry;
+#next(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
-#next()Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
-#next(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
-#getWALTrailer()Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;

+###org/apache/hadoop/hbase/regionserver/wal/SecureWALCellCodec
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/crypto/Decryptor;)V
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
+#getCodec(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec;
+#getCodec(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/crypto/Decryptor;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec;
@0.98.7-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
@0.99.0
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
@0.99.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V

+###org/apache/hadoop/hbase/regionserver/wal/WALCellCodec
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
+#getByteStringCompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;
+#getByteStringUncompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec;
-#<init>(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
@0.98.0-hadoop1
+#<init>()V
@0.98.6-hadoop1
+#create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec;
@0.98.20-hadoop1
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@0.99.0
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@1.2.10
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
@1.3.0
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
@1.3.4
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@1.4.0
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
@1.4.10
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@1.7.0
+#getNoneCompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;
+#getNoneUncompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;
@2.0.0-alpha-1
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getDecoder(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#getNoneCompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;
-#getNoneUncompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;
@2.0.4
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@2.1.0
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getNoneCompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;
+#getNoneUncompressor()Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
@2.1.2
+#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#getWALCellCodecClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;

+###org/apache/hadoop/hbase/replication/BaseReplicationEndpoint
@0.98.9-hadoop1
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$Context;)V
+#getWALEntryfilter()Lorg/apache/hadoop/hbase/replication/WALEntryFilter;
+#canReplicateToSameCluster()Z
@0.98.19-hadoop1
+#peerConfigUpdated(Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@0.99.0
-#peerConfigUpdated(Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@1.4.0
+#peerConfigUpdated(Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@1.4.6
+#close()V
@2.0.0-alpha-1
-#close()V
@2.0.0-alpha3
+#isStarting()Z

+###org/apache/hadoop/hbase/replication/master/ReplicationHFileCleaner
@1.3.0
+#<init>()V
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@2.0.0-beta-1
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V

+###org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint
@0.98.9-hadoop1
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$Context;)V
+#replicate(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;)Z
@1.2.0
+#stopAndWait()Lcom/google/common/util/concurrent/Service$State;
@2.0.0-alpha2
-#stopAndWait()Lcom/google/common/util/concurrent/Service$State;
@2.3.0
+#isTableNotFoundException(Ljava/lang/Throwable;)Z
+#isNoSuchColumnFamilyException(Ljava/lang/Throwable;)Z

+###org/apache/hadoop/hbase/replication/regionserver/Replication
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#isReplication(Lorg/apache/hadoop/conf/Configuration;)Z
+#getWALActionsListener()Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;
+#stopReplicationService()V
+#join()V
+#replicateLogEntries([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
+#startReplicationService()V
+#getReplicationManager()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#preLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#preLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#decorateMasterConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
+#logRollRequested()V
+#logCloseRequested()V
@0.95.2-hadoop1
+#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#scopeWALEdits(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#replicateLogEntries([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
@0.98.9-hadoop1
+#logRollRequested(Z)V
-#logRollRequested()V
@0.98.11-hadoop1
+#refreshAndGetReplicationLoad()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationLoad;
@0.99.0
+#logRollRequested()V
-#logRollRequested(Z)V
-#refreshAndGetReplicationLoad()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationLoad;
@0.99.2
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#scopeWALEdits(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#scopeWALEdits(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#preLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#postLogArchive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#logRollRequested()V
-#logCloseRequested()V
@1.0.0
+#refreshAndGetReplicationLoad()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationLoad;
@1.3.0
+#isReplicationForBulkLoadDataEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#scopeWALEdits(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V
-#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#scopeWALEdits(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@1.4.0
+#decorateRegionServerConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
-#postAppend(JJLorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha-1
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#scopeWALEdits(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V
-#isReplication(Lorg/apache/hadoop/conf/Configuration;)Z
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#scopeWALEdits(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V
@2.0.0-alpha3
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
+#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#scopeWALEdits(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V
-#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#scopeWALEdits(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V
@2.0.0-beta-2
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WALProvider;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
-#isReplicationForBulkLoadDataEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
-#getWALActionsListener()Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;
-#visitLogEntryBeforeWrite(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#scopeWALEdits(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V
-#preLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#postLogRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#decorateMasterConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
-#decorateRegionServerConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
@2.1.0
+#getPeerProcedureHandler()Lorg/apache/hadoop/hbase/replication/regionserver/PeerProcedureHandler;
@2.4.0
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WALFactory;)V
-#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WALProvider;)V
@3.0.0-alpha-1
+#getSyncReplicationPeerInfoProvider()Lorg/apache/hadoop/hbase/replication/regionserver/SyncReplicationPeerInfoProvider;
+#getReplicationPeers()Lorg/apache/hadoop/hbase/replication/ReplicationPeers;
-#join()V
-#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipperThread
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
+#run()V
+#startup(Ljava/lang/Thread$UncaughtExceptionHandler;)V
+#getLogQueue()Ljava/util/concurrent/PriorityBlockingQueue;
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#getCurrentPosition()J
+#setWALReader(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReaderThread;)V
+#getStartPosition()J
+#setWorkerRunning(Z)V
+#sleepForRetries(Ljava/lang/String;I)Z
@2.0.0-alpha2
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipperThread

+###org/apache/hadoop/hbase/replication/ScopeWALEntryFilter
@0.98.9-hadoop1
+#<init>()V
+#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@0.99.2
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
-#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@1.3.0
+#filterCell(Lorg/apache/hadoop/hbase/wal/WAL$Entry;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/security/access/AccessControlLists
@0.95.0
+#<init>()V
+#writePermissionsAsBytes(Lcom/google/common/collect/ListMultimap;Lorg/apache/hadoop/conf/Configuration;)[B
+#readPermissions([BLorg/apache/hadoop/conf/Configuration;)Lcom/google/common/collect/ListMultimap;
+#isGroupPrincipal(Ljava/lang/String;)Z
+#getGroupName(Ljava/lang/String;)Ljava/lang/String;
@0.95.2-hadoop1
+#isNamespaceEntry(Ljava/lang/String;)Z
+#isNamespaceEntry([B)Z
+#toNamespaceEntry(Ljava/lang/String;)Ljava/lang/String;
+#fromNamespaceEntry(Ljava/lang/String;)Ljava/lang/String;
+#toNamespaceEntry([B)[B
+#fromNamespaceEntry([B)[B
@0.98.0-hadoop1
+#getCellPermissionsForUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
@0.98.10-hadoop1
+#toGroupEntry(Ljava/lang/String;)Ljava/lang/String;
@0.98.14-hadoop1
-#isGroupPrincipal(Ljava/lang/String;)Z
-#getGroupName(Ljava/lang/String;)Ljava/lang/String;
-#toGroupEntry(Ljava/lang/String;)Ljava/lang/String;
@0.99.0
+#isGroupPrincipal(Ljava/lang/String;)Z
+#getGroupName(Ljava/lang/String;)Ljava/lang/String;
@1.0.0
+#toGroupEntry(Ljava/lang/String;)Ljava/lang/String;
@1.1.1
-#isGroupPrincipal(Ljava/lang/String;)Z
-#getGroupName(Ljava/lang/String;)Ljava/lang/String;
-#toGroupEntry(Ljava/lang/String;)Ljava/lang/String;
@1.4.0
+#getTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lcom/google/common/collect/ListMultimap;
@1.4.1
+#getNamespacePermissions(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lcom/google/common/collect/ListMultimap;
@2.0.0-alpha-1
-#getNamespacePermissions(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lcom/google/common/collect/ListMultimap;
@2.0.0-alpha2
+#getTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ListMultimap;
+#writePermissionsAsBytes(Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ListMultimap;Lorg/apache/hadoop/conf/Configuration;)[B
+#readPermissions([BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ListMultimap;
-#getTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lcom/google/common/collect/ListMultimap;
-#writePermissionsAsBytes(Lcom/google/common/collect/ListMultimap;Lorg/apache/hadoop/conf/Configuration;)[B
-#readPermissions([BLorg/apache/hadoop/conf/Configuration;)Lcom/google/common/collect/ListMultimap;
@2.0.0-beta-1
+#getTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#getNamespacePermissions(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#writePermissionsAsBytes(Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;Lorg/apache/hadoop/conf/Configuration;)[B
+#readPermissions([BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
-#getTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ListMultimap;
-#writePermissionsAsBytes(Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ListMultimap;Lorg/apache/hadoop/conf/Configuration;)[B
-#readPermissions([BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ListMultimap;
@2.2.0
+#addUserPermission(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/security/access/UserPermission;Lorg/apache/hadoop/hbase/client/Table;Z)V
+#removeUserPermission(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/security/access/UserPermission;Lorg/apache/hadoop/hbase/client/Table;)V
+#getUserTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/String;Z)Ljava/util/List;
+#getUserNamespacePermissions(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;
+#getUserPermissions(Lorg/apache/hadoop/conf/Configuration;[B[B[BLjava/lang/String;Z)Ljava/util/List;
+#readUserPermission([BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#isGlobalEntry([B)Z
@2.3.0
-###org/apache/hadoop/hbase/security/access/AccessControlLists

+###org/apache/hadoop/hbase/security/visibility/DefinedSetFilterScanLabelGenerator
@0.98.9-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getLabels(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/security/visibility/DefinedSetFilterScanLabelGenerator

+###org/apache/hadoop/hbase/security/visibility/FeedUserAuthScanLabelGenerator
@0.98.9-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getLabels(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/security/visibility/FeedUserAuthScanLabelGenerator

+###org/apache/hadoop/hbase/security/visibility/VisibilityLabelOrdinalProvider
@0.98.6-hadoop1
+#getLabelOrdinal(Ljava/lang/String;)I
@0.98.9-hadoop1
+#getLabel(I)Ljava/lang/String;
@0.99.0
-#getLabel(I)Ljava/lang/String;
@0.99.2
+#getLabel(I)Ljava/lang/String;

+###org/apache/hadoop/hbase/security/visibility/VisibilityReplicationEndpoint
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelService;)V
+#init(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$Context;)V
+#replicate(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;)Z
+#getPeerUUID()Ljava/util/UUID;
+#canReplicateToSameCluster()Z
+#getWALEntryfilter()Lorg/apache/hadoop/hbase/replication/WALEntryFilter;
+#isRunning()Z
+#start()Lcom/google/common/util/concurrent/ListenableFuture;
+#startAndWait()Lcom/google/common/util/concurrent/Service$State;
+#state()Lcom/google/common/util/concurrent/Service$State;
+#stop()Lcom/google/common/util/concurrent/ListenableFuture;
+#stopAndWait()Lcom/google/common/util/concurrent/Service$State;
@0.98.19-hadoop1
+#peerConfigUpdated(Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@0.99.0
-###org/apache/hadoop/hbase/security/visibility/VisibilityReplicationEndpoint

+###org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;)V
+#restoreHdfsRegions()Lorg/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper$RestoreMetaChanges;
+#cloneRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
+#cloneTableSchema(Lorg/apache/hadoop/hbase/HTableDescriptor;[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;)V
@0.95.2-hadoop1
+#cloneTableSchema(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#cloneTableSchema(Lorg/apache/hadoop/hbase/HTableDescriptor;[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.96.2-hadoop1
+#copySnapshotForScanner(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;Z)V
@0.99.0
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;Z)V
@1.0.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;Z)V
@1.1.0
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;Z)V
@1.1.3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;Z)V
@1.2.0
+#cloneRegionInfo(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
+#copySnapshotForScanner(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper$RestoreMetaChanges;
-#cloneTableSchema(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#copySnapshotForScanner(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
@1.4.0
+#restoreSnapshotACL(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha-1
+#restoreSnapshotAcl(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/conf/Configuration;)V
-#restoreSnapshotACL(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;Z)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;Z)V
@2.0.0-alpha4
+#cloneRegionInfo(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/client/RegionInfo;
+#cloneRegionInfo(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/client/RegionInfo;
-#cloneRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#cloneRegionInfo(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;

+###org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$SnapshotVisitor
@0.98.6-hadoop1

+###org/apache/hadoop/hbase/SplitLogTask$Done
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V

+###org/apache/hadoop/hbase/SslRMIClientSocketFactorySecure
@0.98.23-hadoop1
+#<init>()V
+#createSocket(Ljava/lang/String;I)Ljava/net/Socket;
@0.99.0
-###org/apache/hadoop/hbase/SslRMIClientSocketFactorySecure

+###org/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl$ImplData;
+#setLimit(I)Lorg/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/master/AssignmentManager;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@2.0.0-alpha-1
+#makeRenderer(Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/master/AssignmentManager;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/AssignmentManager;)V

+###org/apache/hadoop/hbase/tmpl/master/RegionServerListTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/master/RegionServerListTmpl$ImplData;
+#setServers(Ljava/util/List;)Lorg/apache/hadoop/hbase/tmpl/master/RegionServerListTmpl;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/master/HMaster;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheViewTmpl
@0.98.4-hadoop1
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/regionserver/BlockCacheViewTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@2.2.0
+#makeRenderer(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl$ImplData;
+#setFilter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl;
+#setFormat(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@0.98.4-hadoop1
+#setBcn(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl;
+#setBcv(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl;

+###org/apache/hadoop/hbase/util/BloomFilterFactory
@0.95.0
+#createFromMeta(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;)Lorg/apache/hadoop/hbase/util/BloomFilter;
+#isGeneralBloomEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#isDeleteFamilyBloomEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#getErrorRate(Lorg/apache/hadoop/conf/Configuration;)F
+#getMaxFold(Lorg/apache/hadoop/conf/Configuration;)I
+#getBloomBlockSize(Lorg/apache/hadoop/conf/Configuration;)I
+#getMaxKeys(Lorg/apache/hadoop/conf/Configuration;)I
+#createGeneralBloomAtWrite(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;ILorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)Lorg/apache/hadoop/hbase/util/BloomFilterWriter;
+#createDeleteBloomAtWrite(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;ILorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)Lorg/apache/hadoop/hbase/util/BloomFilterWriter;
@2.5.0
+#createFromMeta(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)Lorg/apache/hadoop/hbase/util/BloomFilter;
@3.0.0-alpha-1
-#createFromMeta(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)Lorg/apache/hadoop/hbase/util/BloomFilter;

+###org/apache/hadoop/hbase/util/ConnectionCache
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/security/UserProvider;II)V
+#setEffectiveUser(Ljava/lang/String;)V
+#getEffectiveUser()Ljava/lang/String;
+#getAdmin()Lorg/apache/hadoop/hbase/client/HBaseAdmin;
+#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
@1.0.1
+#getAdmin()Lorg/apache/hadoop/hbase/client/Admin;
+#getRegionLocator([B)Lorg/apache/hadoop/hbase/client/RegionLocator;
-#getAdmin()Lorg/apache/hadoop/hbase/client/HBaseAdmin;
@1.0.2
+#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Table;
-#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
@1.1.0
+#shutdown()V
+#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Table;
@1.1.1
+#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Table;
-#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
@1.3.0
+#updateConnectionAccessTime()Z
@2.4.14
+#getClusterId()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/FSTableDescriptors
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
+#get([B)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getAll()Ljava/util/Map;
+#add(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#remove(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#isTableInfoExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#getTableInfoPath(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
+#getTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#deleteTableDescriptorIfExists(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Z
+#createTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
+#createTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
+#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#get(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getByNamespace(Ljava/lang/String;)Ljava/util/Map;
+#remove(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#isTableInfoExists(Lorg/apache/hadoop/hbase/TableName;)Z
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#deleteTableDescriptorIfExists(Lorg/apache/hadoop/hbase/TableName;)V
+#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
+#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
+#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
-#get([B)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#remove(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#isTableInfoExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
-#getTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#deleteTableDescriptorIfExists(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
-#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Z
-#createTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
-#createTableDescriptor(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
-#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
@0.98.8-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
+#setCacheOn()V
+#setCacheOff()V
+#isUsecache()Z
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
@0.99.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
-#setCacheOn()V
-#setCacheOff()V
-#isUsecache()Z
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.99.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
+#setCacheOn()V
+#setCacheOff()V
+#isUsecache()Z
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
@1.0.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
@1.7.0
+#getDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableDescriptor;
+#getAllDescriptors()Ljava/util/Map;
+#add(Lorg/apache/hadoop/hbase/TableDescriptor;)V
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableDescriptor;
+#createTableDescriptor(Lorg/apache/hadoop/hbase/TableDescriptor;)Z
+#createTableDescriptor(Lorg/apache/hadoop/hbase/TableDescriptor;Z)Z
+#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableDescriptor;Z)Z
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
-#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
@1.7.1
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
+#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
+#repairHBase170TableDescriptors(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#getDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableDescriptor;
-#getAllDescriptors()Ljava/util/Map;
-#add(Lorg/apache/hadoop/hbase/TableDescriptor;)V
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableDescriptor;
-#createTableDescriptor(Lorg/apache/hadoop/hbase/TableDescriptor;)Z
-#createTableDescriptor(Lorg/apache/hadoop/hbase/TableDescriptor;Z)Z
-#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableDescriptor;Z)Z
@2.0.0-alpha-1
+#createMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getAllDescriptors()Ljava/util/Map;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#repairHBase170TableDescriptors(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZLjava/util/function/Function;)V
+#createMetaTableDescriptorBuilder(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#createMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#get(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#add(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#remove(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#createTableDescriptor(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Z
+#createTableDescriptor(Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Z
+#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Z
-#createMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#get(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#add(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#remove(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptorFromFs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
-#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
-#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)Z
@2.0.0-beta-2
-#getAllDescriptors()Ljava/util/Map;
@2.3.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
+#tryUpdateMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;)V
+#tryUpdateMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/function/Function;)V
+#update(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#createTableDescriptorForTableDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Z
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZ)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZLjava/util/function/Function;)V
-#createMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
-#add(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#isTableInfoExists(Lorg/apache/hadoop/hbase/TableName;)Z
-#deleteTableDescriptorIfExists(Lorg/apache/hadoop/hbase/TableName;)V
@2.3.6
+#getTableFamilyDescForMeta(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
+#getReplBarrierFamilyDescForMeta()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
@2.4.0
+#tryUpdateAndGetMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#update(Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)V
-#tryUpdateMetaTableDescriptor(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/function/Function;)V
-#getTableFamilyDescForMeta(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
-#getReplBarrierFamilyDescForMeta()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
-#setCacheOn()V
-#setCacheOff()V
-#isUsecache()Z
-#update(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.4.5
+#getTableFamilyDescForMeta(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
+#getReplBarrierFamilyDescForMeta()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
@2.5.0
+#isTableDir(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#deleteTableDescriptors(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#getTableInfoPath(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
@3.0.0-alpha-1
+#getTableInfoPath(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;
-#createMetaTableDescriptorBuilder(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
-#isTableDir(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#deleteTableDescriptors(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZI)V
+#isTableDir(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#close()V
+#deleteTableDescriptors(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#getTableInfoPath(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;

+###org/apache/hadoop/hbase/util/hbck/TableIntegrityErrorHandler
@0.95.0
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleRegionEndKeyNotEmpty([B)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleHoleInRegionChain([B[B)V
+#handleOverlapGroup(Ljava/util/Collection;)V
@1.2.6
+#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
@1.3.0
-#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
@1.3.1
+#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
@2.0.6
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleSplit(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
@2.1.0
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleSplit(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
@2.1.6
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleSplit(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
@2.2.0
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleSplit(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
@2.2.1
+#getTableInfo()Lorg/apache/hadoop/hbase/util/HbckTableInfo;
+#setTableInfo(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
+#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleSplit(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
-#getTableInfo()Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;
-#setTableInfo(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
-#handleRegionStartKeyNotEmpty(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDegenerateRegion(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleDuplicateStartKeys(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleSplit(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
-#handleOverlapInRegionChain(Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V

+###org/apache/hadoop/hbase/util/HFileArchiveUtil
@0.95.0
+#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/fs/Path;
+#getRegionArchiveDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getRegionArchiveDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getTableArchivePath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getTableArchivePath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getTableArchivePath(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getArchivePath(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
@0.95.2-hadoop1
+#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getRegionArchiveDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getRegionArchiveDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getTableArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#getTableArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
-#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#getRegionArchiveDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getRegionArchiveDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getTableArchivePath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getTableArchivePath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#getTableArchivePath(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
@2.0.0-alpha-1
+#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;[B)Lorg/apache/hadoop/fs/Path;
+#getTableName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
@2.0.0-alpha4
+#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/fs/Path;
+#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;
-#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/fs/Path;
-#getStoreArchivePath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;[B)Lorg/apache/hadoop/fs/Path;
@2.1.9
+#getStoreArchivePathForRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;
@2.2.0
-#getStoreArchivePathForRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;
@2.2.3
+#getStoreArchivePathForRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;
@2.3.0
+#getStoreArchivePathForArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/hbase/util/JSONBean$Writer
@1.0.0
+#write(Ljava/lang/String;Ljava/lang/String;)V
+#write(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I
+#flush()V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/util/JSONBean$Writer

+###org/apache/hadoop/hbase/util/LeaseNotRecoveredException
@0.98.18-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@0.99.0
-###org/apache/hadoop/hbase/util/LeaseNotRecoveredException

+###org/apache/hadoop/hbase/util/ModifyRegionUtils
@0.95.0
+#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#assignRegions(Lorg/apache/hadoop/hbase/master/AssignmentManager;Ljava/util/List;)V
@0.96.0-hadoop1
-#assignRegions(Lorg/apache/hadoop/hbase/master/AssignmentManager;Ljava/util/List;)V
@0.96.2-hadoop1
+#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#createRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Lorg/apache/hadoop/hbase/HRegionInfo;
@0.98.6-hadoop1
+#createRegions(Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#editRegions(Ljava/util/concurrent/ThreadPoolExecutor;Ljava/util/Collection;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionEditTask;)V
@0.98.8-hadoop1
+#assignRegions(Lorg/apache/hadoop/hbase/master/AssignmentManager;Ljava/util/List;)V
@1.1.0
+#createHRegionInfos(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)[Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-alpha-1
+#createRegions(Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#createRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
-#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
-#createRegions(Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
-#createRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#assignRegions(Lorg/apache/hadoop/hbase/master/AssignmentManager;Ljava/util/List;)V
@2.0.0-alpha3
+#createHRegionInfos(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B)[Lorg/apache/hadoop/hbase/HRegionInfo;
+#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#createRegions(Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#createRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#createHRegionInfos(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)[Lorg/apache/hadoop/hbase/HRegionInfo;
-#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
-#createRegions(Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
-#createRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-alpha4
+#createRegionInfos(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B)[Lorg/apache/hadoop/hbase/client/RegionInfo;
+#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#createRegions(Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
+#createRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Lorg/apache/hadoop/hbase/client/RegionInfo;
-#createHRegionInfos(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[B)[Lorg/apache/hadoop/hbase/HRegionInfo;
-#createRegions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
-#createRegions(Ljava/util/concurrent/ThreadPoolExecutor;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Ljava/util/List;
-#createRegion(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask;)Lorg/apache/hadoop/hbase/HRegionInfo;

+###org/apache/hadoop/hbase/util/RegionSizeCalculator
@0.98.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/HTable;)V
+#getRegionSize([B)J
+#getRegionSizeMap()Ljava/util/Map;
@0.99.2
*#<init>(Lorg/apache/hadoop/hbase/client/HTable;)V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/client/RegionLocator;Lorg/apache/hadoop/hbase/client/Admin;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Table;)V[deprecated]
-#<init>(Lorg/apache/hadoop/hbase/client/HTable;)V[deprecated]
@2.0.0-alpha3
-###org/apache/hadoop/hbase/util/RegionSizeCalculator

+###org/apache/hadoop/hbase/util/RowBloomContext
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;Lorg/apache/hadoop/hbase/CellComparator;)V
+#addLastBloomKey(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V

+###org/apache/hadoop/hbase/util/SortedList
@0.98.15-hadoop1
+#<init>(Ljava/util/Comparator;)V
+#<init>(Ljava/util/Collection;Ljava/util/Comparator;)V
+#get()Ljava/util/List;
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#addAll(ILjava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#get(I)Ljava/lang/Object;
+#set(ILjava/lang/Object;)Ljava/lang/Object;
+#add(ILjava/lang/Object;)V
+#remove(I)Ljava/lang/Object;
+#indexOf(Ljava/lang/Object;)I
+#lastIndexOf(Ljava/lang/Object;)I
+#listIterator()Ljava/util/ListIterator;
+#listIterator(I)Ljava/util/ListIterator;
+#subList(II)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/util/SortedList

+###org/apache/hadoop/hbase/wal/AsyncFSWALProvider$AsyncWriter
@2.0.0-alpha-1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
@2.0.1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
@2.5.0
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
@3.0.0-alpha-1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
@3.0.0-alpha-3
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJLorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;ZJ)V

+###org/apache/hadoop/hbase/wal/WALFactory
@0.99.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
+#close()V
+#shutdown()V
+#getWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
+#getMetaWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Z)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
+#createWALWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
+#createRecoveredEditsWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WALFactory;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
+#createReaderIgnoreCustomClass(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
+#createWALWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WALProvider$Writer;
@1.3.0
+#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
+#getWALProvider()Lorg/apache/hadoop/hbase/wal/WALProvider;
+#getMetaWALProvider()Lorg/apache/hadoop/hbase/wal/WALProvider;
-#getWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
@1.4.0
+#getWALs()Ljava/util/List;
@2.0.0-alpha-1
+#getProviderClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;
@2.0.0-alpha3
+#getLogFileSizeIfBeingWritten(Lorg/apache/hadoop/fs/Path;)Ljava/util/OptionalLong;
@2.0.0-beta-1
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
-#getMetaWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
@2.0.0-beta-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
-#getLogFileSizeIfBeingWritten(Lorg/apache/hadoop/fs/Path;)Ljava/util/OptionalLong;
@2.1.6
+#getFactoryId()Ljava/lang/String;
@2.2.0
-#getFactoryId()Ljava/lang/String;
@2.2.1
+#getFactoryId()Ljava/lang/String;
@2.4.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)V
+#getMetaProvider()Lorg/apache/hadoop/hbase/wal/WALProvider;
@2.5.0
+#getExcludeDatanodeManager()Lorg/apache/hadoop/hbase/io/asyncfs/monitor/ExcludeDatanodeManager;
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;Z)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)V
-#getFactoryId()Ljava/lang/String;
-#getExcludeDatanodeManager()Lorg/apache/hadoop/hbase/io/asyncfs/monitor/ExcludeDatanodeManager;
@3.0.0-alpha-3
+#getExcludeDatanodeManager()Lorg/apache/hadoop/hbase/io/asyncfs/monitor/ExcludeDatanodeManager;

+###org/apache/hadoop/hbase/backup/BackupRequest$Builder
@2.0.0-alpha-1
+#<init>()V
+#withBackupType(Lorg/apache/hadoop/hbase/backup/BackupType;)Lorg/apache/hadoop/hbase/backup/BackupRequest$Builder;
+#withTableList(Ljava/util/List;)Lorg/apache/hadoop/hbase/backup/BackupRequest$Builder;
+#withTargetRootDir(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupRequest$Builder;
+#withBackupSetName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupRequest$Builder;
+#withTotalTasks(I)Lorg/apache/hadoop/hbase/backup/BackupRequest$Builder;
+#withBandwidthPerTasks(I)Lorg/apache/hadoop/hbase/backup/BackupRequest$Builder;
+#build()Lorg/apache/hadoop/hbase/backup/BackupRequest;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupRequest$Builder

+###org/apache/hadoop/hbase/backup/BackupRestoreConstants
@2.0.0-alpha-1
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupRestoreConstants

+###org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker
@0.95.0
+#start()V
+#nodeCreated(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#keepHFiles(Ljava/lang/String;)Z
+#getMonitor()Lorg/apache/hadoop/hbase/backup/example/HFileArchiveTableMonitor;
+#create(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker;
+#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
+#stop()V
@2.0.0-beta-1
+#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
-#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;

+###org/apache/hadoop/hbase/backup/impl/BackupCommands
@2.0.0-alpha-1
+#createCommand(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/backup/BackupRestoreConstants$BackupCommand;Lorg/apache/commons/cli/CommandLine;)Lorg/apache/hadoop/hbase/backup/impl/BackupCommands$Command;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupCommands

+###org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;)V
+#getIncrBackupLogFileMap()Ljava/util/HashMap;
+#getIncrBackupLogFileList()Ljava/util/List;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager

+###org/apache/hadoop/hbase/backup/RestoreRequest$Builder
@2.0.0-alpha-1
+#<init>()V
+#withBackupRootDir(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/RestoreRequest$Builder;
+#withBackupId(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/RestoreRequest$Builder;
+#withCheck(Z)Lorg/apache/hadoop/hbase/backup/RestoreRequest$Builder;
+#withFromTables([Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/backup/RestoreRequest$Builder;
+#withToTables([Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/backup/RestoreRequest$Builder;
+#withOvewrite(Z)Lorg/apache/hadoop/hbase/backup/RestoreRequest$Builder;
+#build()Lorg/apache/hadoop/hbase/backup/RestoreRequest;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/RestoreRequest$Builder

+###org/apache/hadoop/hbase/client/HTableWrapper
@0.99.0
+#createWrapper(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$Environment;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#internalClose()V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#close()V
+#getRowOrBefore([B[B)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
+#get(Lorg/apache/hadoop/hbase/client/Get;)Lorg/apache/hadoop/hbase/client/Result;
+#exists(Lorg/apache/hadoop/hbase/client/Get;)Z
+#existsAll(Ljava/util/List;)[Z
+#exists(Ljava/util/List;)[Ljava/lang/Boolean;[deprecated]
+#put(Lorg/apache/hadoop/hbase/client/Put;)V
+#put(Ljava/util/List;)V
+#delete(Lorg/apache/hadoop/hbase/client/Delete;)V
+#delete(Ljava/util/List;)V
+#checkAndPut([B[B[B[BLorg/apache/hadoop/hbase/client/Put;)Z
+#checkAndPut([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;[BLorg/apache/hadoop/hbase/client/Put;)Z
+#checkAndDelete([B[B[B[BLorg/apache/hadoop/hbase/client/Delete;)Z
+#checkAndDelete([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;[BLorg/apache/hadoop/hbase/client/Delete;)Z
+#incrementColumnValue([B[B[BJ)J
+#incrementColumnValue([B[B[BJLorg/apache/hadoop/hbase/client/Durability;)J
+#append(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#increment(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#flushCommits()V
+#isAutoFlush()Z
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#getScanner([B)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#getScanner([B[B)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableName()[B
+#getName()Lorg/apache/hadoop/hbase/TableName;
+#batch(Ljava/util/List;[Ljava/lang/Object;)V
+#batch(Ljava/util/List;)[Ljava/lang/Object;
+#batchCallback(Ljava/util/List;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#batchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)[Ljava/lang/Object;
+#get(Ljava/util/List;)[Lorg/apache/hadoop/hbase/client/Result;
+#coprocessorService([B)Lorg/apache/hadoop/hbase/ipc/CoprocessorRpcChannel;
+#coprocessorService(Ljava/lang/Class;[B[BLorg/apache/hadoop/hbase/client/coprocessor/Batch$Call;)Ljava/util/Map;
+#coprocessorService(Ljava/lang/Class;[B[BLorg/apache/hadoop/hbase/client/coprocessor/Batch$Call;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
+#setAutoFlush(Z)V
+#setAutoFlush(ZZ)V
+#setAutoFlushTo(Z)V
+#getWriteBufferSize()J
+#setWriteBufferSize(J)V
+#incrementColumnValue([B[B[BJZ)J
+#batchCoprocessorService(Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;[B[BLcom/google/protobuf/Message;)Ljava/util/Map;
+#batchCoprocessorService(Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;[B[BLcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
@0.99.1
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;[BLorg/apache/hadoop/hbase/client/RowMutations;)Z
@1.1.5
+#setOperationTimeout(I)V
+#getOperationTimeout()I
+#setRpcTimeout(I)V
+#getRpcTimeout()I
@1.1.6
-#setOperationTimeout(I)V
-#getOperationTimeout()I
-#setRpcTimeout(I)V
-#getRpcTimeout()I
@1.2.2
+#setOperationTimeout(I)V
+#getOperationTimeout()I
+#setRpcTimeout(I)V
+#getRpcTimeout()I
@1.2.3
-#setOperationTimeout(I)V
-#getOperationTimeout()I
-#setRpcTimeout(I)V
-#getRpcTimeout()I
@1.3.0
+#setOperationTimeout(I)V
+#getOperationTimeout()I
+#setRpcTimeout(I)V
+#getRpcTimeout()I
@1.4.0
*#getRpcTimeout()I[deprecated]
*#setRpcTimeout(I)V[deprecated]
+#setWriteRpcTimeout(I)V
+#setReadRpcTimeout(I)V
+#getWriteRpcTimeout()I
+#getReadRpcTimeout()I
@2.0.0-alpha-1
+#createWrapper(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$Environment;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/Table;
-#createWrapper(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$Environment;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getRowOrBefore([B[B)Lorg/apache/hadoop/hbase/client/Result;[deprecated]
-#flushCommits()V
-#isAutoFlush()Z
-#getTableName()[B
-#batch(Ljava/util/List;)[Ljava/lang/Object;
-#batchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)[Ljava/lang/Object;
-#setAutoFlush(Z)V
-#setAutoFlush(ZZ)V
-#setAutoFlushTo(Z)V
-#incrementColumnValue([B[B[BJZ)J
@2.0.0-alpha2
+#getDescriptor()Lorg/apache/hadoop/hbase/client/TableDescriptor;
-#getWriteBufferSize()J
-#setWriteBufferSize(J)V
@2.0.0-alpha3
+#checkAndPut([B[B[BLorg/apache/hadoop/hbase/CompareOperator;[BLorg/apache/hadoop/hbase/client/Put;)Z
+#checkAndDelete([B[B[BLorg/apache/hadoop/hbase/CompareOperator;[BLorg/apache/hadoop/hbase/client/Delete;)Z
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/CompareOperator;[BLorg/apache/hadoop/hbase/client/RowMutations;)Z
@2.0.0-alpha4
-###org/apache/hadoop/hbase/client/HTableWrapper

+###org/apache/hadoop/hbase/constraint/BaseConstraint
@0.95.0
+#<init>()V

+###org/apache/hadoop/hbase/coordination/SplitLogManagerCoordination$SplitLogManagerDetails
@0.99.0
+#<init>(Ljava/util/concurrent/ConcurrentMap;Lorg/apache/hadoop/hbase/master/MasterServices;Ljava/util/Set;Lorg/apache/hadoop/hbase/ServerName;)V
+#getMaster()Lorg/apache/hadoop/hbase/master/MasterServices;
+#getTasks()Ljava/util/concurrent/ConcurrentMap;
+#getFailedDeletions()Ljava/util/Set;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
@2.0.0-alpha-1
+#<init>(Ljava/util/concurrent/ConcurrentMap;Lorg/apache/hadoop/hbase/master/MasterServices;Ljava/util/Set;)V
-#<init>(Ljava/util/concurrent/ConcurrentMap;Lorg/apache/hadoop/hbase/master/MasterServices;Ljava/util/Set;Lorg/apache/hadoop/hbase/ServerName;)V

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$CreateAsyncCallback
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination;)V
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/coprocessor/EndpointObserver
@0.98.0-hadoop1
+#preEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message;
+#postEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;Lcom/google/protobuf/Message$Builder;)V
@3.0.0-alpha-1
+#preEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;Ljava/lang/String;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;
+#postEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;Ljava/lang/String;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message$Builder;)V
-#preEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message;
-#postEndpointInvocation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;Lcom/google/protobuf/Message$Builder;)V

+###org/apache/hadoop/hbase/coprocessor/MetricsCoprocessor
@1.4.0
+#<init>()V
+#createRegistryForMasterCoprocessor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/metrics/MetricRegistry;
+#createRegistryForRSCoprocessor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/metrics/MetricRegistry;
+#createRegistryInfoForRegionCoprocessor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/metrics/MetricRegistryInfo;
+#createRegistryForRegionCoprocessor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/metrics/MetricRegistry;
+#createRegistryInfoForWALCoprocessor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/metrics/MetricRegistryInfo;
+#createRegistryForWALCoprocessor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/metrics/MetricRegistry;
+#removeRegistry(Lorg/apache/hadoop/hbase/metrics/MetricRegistry;)V

+###org/apache/hadoop/hbase/coprocessor/RegionServerCoprocessorEnvironment
@0.95.0
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
@1.4.0
+#getMetricRegistryForRegionServer()Lorg/apache/hadoop/hbase/metrics/MetricRegistry;
@2.0.0-alpha4
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getOnlineRegions()Lorg/apache/hadoop/hbase/regionserver/OnlineRegions;
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
-#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
@2.0.0-beta-1
+#createConnection(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Connection;

+###org/apache/hadoop/hbase/coprocessor/WALCoprocessorEnvironment
@0.95.0
+#getWAL()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
@0.99.2
+#getWAL()Lorg/apache/hadoop/hbase/wal/WAL;
-#getWAL()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
@1.4.0
+#getMetricRegistryForRegionServer()Lorg/apache/hadoop/hbase/metrics/MetricRegistry;

+###org/apache/hadoop/hbase/errorhandling/TimeoutException
@0.95.0
+#<init>(Ljava/lang/String;JJJ)V
+#getStart()J
+#getEnd()J
+#getMaxAllowedOperationTime()J
+#getSourceName()Ljava/lang/String;

+###org/apache/hadoop/hbase/executor/ExecutorService$RunningEventStatus
@0.95.0
+#<init>(Ljava/lang/Thread;Lorg/apache/hadoop/hbase/executor/EventHandler;)V

+###org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer
@2.0.0-alpha-1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#initialize()V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
+#roundRobinAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@2.0.0-alpha4
+#randomAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
+#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
-#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
-#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.6
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.0
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.6
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.0
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.1
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.5
+#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#balanceCluster(Ljava/util/Map;)Ljava/util/List;
-#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@2.5.0
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer

+###org/apache/hadoop/hbase/generated/regionserver/region_jsp
@1.2.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/http/conf/ConfServlet
@0.99.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/conf/ConfServlet

+###org/apache/hadoop/hbase/http/HttpRequestLog
@0.99.0
+#<init>()V
+#getRequestLog(Ljava/lang/String;)Lorg/mortbay/jetty/RequestLog;
@2.0.0-alpha-1
+#getRequestLog(Ljava/lang/String;)Lorg/eclipse/jetty/server/RequestLog;
-#getRequestLog(Ljava/lang/String;)Lorg/mortbay/jetty/RequestLog;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpRequestLog

+###org/apache/hadoop/hbase/http/HttpServer
@0.99.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IZ)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/mortbay/jetty/Connector;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;Lorg/mortbay/jetty/Connector;)V[deprecated]
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;Lorg/mortbay/jetty/Connector;[Ljava/lang/String;)V[deprecated]
+#createBaseListener(Lorg/apache/hadoop/conf/Configuration;)Lorg/mortbay/jetty/Connector;
+#createDefaultChannelConnector()Lorg/mortbay/jetty/Connector;
+#addContext(Lorg/mortbay/jetty/servlet/Context;Z)V
+#setAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#addJerseyResourcePackage(Ljava/lang/String;Ljava/lang/String;)V
+#addServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V
+#addInternalServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V
+#addInternalServlet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Z)V
+#addFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#addGlobalFilter(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
+#defineFilter(Lorg/mortbay/jetty/servlet/Context;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;[Ljava/lang/String;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getWebAppContext()Lorg/mortbay/jetty/webapp/WebAppContext;
+#getWebAppsPath(Ljava/lang/String;)Ljava/lang/String;
+#getPort()I[deprecated]
+#getConnectorAddress(I)Ljava/net/InetSocketAddress;
+#setThreads(II)V
+#start()V
+#stop()V
+#join()V
+#isAlive()Z
+#toString()Ljava/lang/String;
+#isInstrumentationAccessAllowed(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
+#hasAdministratorAccess(Ljavax/servlet/ServletContext;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
+#userHasAdministratorAccess(Ljavax/servlet/ServletContext;Ljava/lang/String;)Z
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;[Ljava/lang/String;)V[deprecated]
+#defineFilter(Lorg/eclipse/jetty/servlet/ServletContextHandler;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;[Ljava/lang/String;)V
+#getWebAppContext()Lorg/eclipse/jetty/webapp/WebAppContext;
-#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/mortbay/jetty/Connector;)V[deprecated]
-#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;Lorg/mortbay/jetty/Connector;)V[deprecated]
-#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/AccessControlList;Lorg/mortbay/jetty/Connector;[Ljava/lang/String;)V[deprecated]
-#createBaseListener(Lorg/apache/hadoop/conf/Configuration;)Lorg/mortbay/jetty/Connector;
-#createDefaultChannelConnector()Lorg/mortbay/jetty/Connector;
-#addContext(Lorg/mortbay/jetty/servlet/Context;Z)V
-#defineFilter(Lorg/mortbay/jetty/servlet/Context;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;[Ljava/lang/String;)V
-#getWebAppContext()Lorg/mortbay/jetty/webapp/WebAppContext;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpServer

+###org/apache/hadoop/hbase/io/FileLink
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/Path;)V
+#<init>(Ljava/util/Collection;)V
+#getLocations()[Lorg/apache/hadoop/fs/Path;
+#toString()Ljava/lang/String;
+#getAvailablePath(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/Path;
+#getFileStatus(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/FileStatus;
+#open(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/fs/FSDataInputStream;
+#open(Lorg/apache/hadoop/fs/FileSystem;I)Lorg/apache/hadoop/fs/FSDataInputStream;
+#getBackReferencesDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getBackReferenceFileName(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#isBackReferencesDir(Lorg/apache/hadoop/fs/Path;)Z
@0.98.8-hadoop1
+#exists(Lorg/apache/hadoop/fs/FileSystem;)Z
@0.99.0
-#exists(Lorg/apache/hadoop/fs/FileSystem;)Z
@0.99.2
+#exists(Lorg/apache/hadoop/fs/FileSystem;)Z
@1.1.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.5.0
+#getUnderlyingFileLinkInputStream(Lorg/apache/hadoop/fs/FSDataInputStream;)Lorg/apache/hadoop/fs/FSDataInputStream;
@3.0.0-alpha-1
-#getUnderlyingFileLinkInputStream(Lorg/apache/hadoop/fs/FSDataInputStream;)Lorg/apache/hadoop/fs/FSDataInputStream;
@3.0.0-alpha-2
+#getUnderlyingFileLinkInputStream(Lorg/apache/hadoop/fs/FSDataInputStream;)Lorg/apache/hadoop/fs/FSDataInputStream;

+###org/apache/hadoop/hbase/io/hfile/BlockCache
@0.95.0
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#shutdown()V
+#size()J
+#getFreeSize()J
+#getCurrentSize()J
+#getEvictedCount()J
+#getBlockCount()J
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#getEvictedCount()J
-#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.99.0
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
@1.4.0
+#getMaxSize()J
+#getCurrentDataSize()J
+#getDataBlockCount()J
@2.0.0-alpha-1
+#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
-#getMaxSize()J
-#getCurrentDataSize()J
-#getDataBlockCount()J
@2.0.0-alpha3
+#getMaxSize()J
+#getCurrentDataSize()J
+#getDataBlockCount()J
@2.0.0-beta-1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.3.0
-#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
@2.3.7
+#isMetaBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@2.4.0
-#isMetaBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@2.4.7
+#isMetaBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@2.4.15
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.5.0
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.5.1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@3.0.0-alpha-1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#isMetaBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z
@3.0.0-alpha-2
+#isMetaBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Z

+###org/apache/hadoop/hbase/io/hfile/BlockCacheUtil$CachedBlocksByFile
@0.98.4-hadoop1
+#update(Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;)Z
+#isFull()Z
+#getCachedBlockStatsByFile()Ljava/util/NavigableMap;
+#getCount()I
+#getDataCount()I
+#getSize()J
+#getDataSize()J
+#getAgeSnapshot()Lorg/apache/hadoop/hbase/io/hfile/BlockCacheUtil$AgeSnapshot;
+#toString()Ljava/lang/String;
@0.99.0
+#getAgeInCacheSnapshot()Lorg/apache/hadoop/hbase/io/hfile/AgeSnapshot;
-#getAgeSnapshot()Lorg/apache/hadoop/hbase/io/hfile/BlockCacheUtil$AgeSnapshot;

+###org/apache/hadoop/hbase/io/hfile/bucket/BucketCache
@0.95.0
+#<init>(Ljava/lang/String;JIILjava/lang/String;)V
+#<init>(Ljava/lang/String;JIILjava/lang/String;I)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#logStats()V
+#shutdown()V
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#heapSize()J
+#size()J
+#getFreeSize()J
+#getBlockCount()J
+#getCurrentSize()J
+#getEvictedCount()J
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.98.0-hadoop1
+#<init>(Ljava/lang/String;JIIILjava/lang/String;)V
+#<init>(Ljava/lang/String;JIIILjava/lang/String;I)V
-#<init>(Ljava/lang/String;JIILjava/lang/String;)V
-#<init>(Ljava/lang/String;JIILjava/lang/String;I)V
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
+#<init>(Ljava/lang/String;JI[IIILjava/lang/String;)V
+#<init>(Ljava/lang/String;JI[IIILjava/lang/String;I)V
+#getIoEngine()Ljava/lang/String;
+#getAllocator()Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketAllocator;
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#<init>(Ljava/lang/String;JIIILjava/lang/String;)V
-#<init>(Ljava/lang/String;JIIILjava/lang/String;I)V
-#getEvictedCount()J
-#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.98.6-hadoop1
+#getMaxSize()J
@0.98.17-hadoop1
+#getRealCacheSize()J
@0.99.0
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
+#getFailedBlockAdditions()J
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
@1.2.0
-#getFailedBlockAdditions()J
@1.4.0
+#<init>(Ljava/lang/String;JI[IIILjava/lang/String;ILorg/apache/hadoop/conf/Configuration;)V
+#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZZ)V
+#getCurrentDataSize()J
+#getDataBlockCount()J
-#<init>(Ljava/lang/String;JI[IIILjava/lang/String;I)V
-#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@1.4.11
+#getDeserialiserMap()Lorg/apache/hadoop/hbase/io/hfile/bucket/UniqueIndexMap;
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;JI[IIILjava/lang/String;I)V
+#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Z)Z
+#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getRefCount(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
-#<init>(Ljava/lang/String;JI[IIILjava/lang/String;ILorg/apache/hadoop/conf/Configuration;)V
-#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZZ)V
-#getCurrentDataSize()J
-#getDataBlockCount()J
-#getDeserialiserMap()Lorg/apache/hadoop/hbase/io/hfile/bucket/UniqueIndexMap;
@2.0.0-alpha2
+#<init>(Ljava/lang/String;JI[IIILjava/lang/String;ILorg/apache/hadoop/conf/Configuration;)V
-#<init>(Ljava/lang/String;JI[IIILjava/lang/String;I)V
@2.0.0-alpha3
+#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZZ)V
+#getCurrentDataSize()J
+#getDataBlockCount()J
-#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.0.0-beta-1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZZ)V
@2.0.2
-#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.3.0
+#cacheBlockWithWait(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
+#acceptableSize()J
+#getRpcRefCount(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
-#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Z)Z
-#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
-#getRefCount(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
@2.3.7
+#evictBlockIfNoRpcReferenced(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
@2.4.0
-#evictBlockIfNoRpcReferenced(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
@2.4.7
+#evictBlockIfNoRpcReferenced(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
@2.4.15
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.5.0
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.5.1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@3.0.0-alpha-1
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#evictBlockIfNoRpcReferenced(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
@3.0.0-alpha-2
+#evictBlockIfNoRpcReferenced(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z

+###org/apache/hadoop/hbase/io/hfile/HFile$WriterFactory
@0.95.0
+#withPath(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withOutputStream(Lorg/apache/hadoop/fs/FSDataOutputStream;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withBlockSize(I)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withCompression(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withDataBlockEncoder(Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withComparator(Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withChecksumType(Lorg/apache/hadoop/hbase/util/ChecksumType;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#withBytesPerChecksum(I)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#includeMVCCReadpoint(Z)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
+#create()Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;
@0.95.1-hadoop1
+#withFavoredNodes([Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
@0.96.0-hadoop1
+#withComparator(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withComparator(Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
@0.98.0-hadoop1
+#withFileContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withBlockSize(I)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withCompression(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withDataBlockEncoder(Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withChecksumType(Lorg/apache/hadoop/hbase/util/ChecksumType;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withBytesPerChecksum(I)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#includeMVCCReadpoint(Z)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
@0.98.15-hadoop1
+#withShouldDropCacheBehind(Z)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
@0.99.0
-#withShouldDropCacheBehind(Z)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
@1.2.0
+#withShouldDropCacheBehind(Z)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
@2.0.0-alpha-1
+#withComparator(Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
-#withComparator(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;
@2.3.0
-#withComparator(Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/io/hfile/HFile$WriterFactory;

+###org/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoderImpl
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)V
+#createFromFileInfo(Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
+#saveMetadata(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V
+#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getEncodingInCache()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#diskToCacheFormat(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#beforeWriteToDisk(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#useEncodedScanner(Z)Z
+#toString()Ljava/lang/String;
+#newOnDiskDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newOnDiskDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.96.1-hadoop1
+#createFromFileInfo(Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;)Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#useEncodedScanner()Z
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
-#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)V
-#createFromFileInfo(Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
-#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getEncodingInCache()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#diskToCacheFormat(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#useEncodedScanner(Z)Z
-#newOnDiskDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newOnDiskDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.98.0-hadoop1
+#beforeWriteToDisk(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#beforeWriteToDisk(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.99.0
+#useEncodedScanner(Z)Z
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[BLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#beforeWriteToDisk(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
@0.99.1
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@2.3.0
+#createFromFileInfo(Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;)Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#createFromFileInfo(Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;)Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@2.5.0
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-1
+#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-2
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;

+###org/apache/hadoop/hbase/io/hfile/HFileReaderImpl$NotSeekedException
@2.0.0-alpha-1
+#<init>()V
@2.1.5
+#<init>(Lorg/apache/hadoop/fs/Path;)V
-#<init>()V

+###org/apache/hadoop/hbase/io/hfile/PrefetchExecutor
@0.98.3-hadoop1
+#<init>()V
+#request(Lorg/apache/hadoop/fs/Path;Ljava/lang/Runnable;)V
+#complete(Lorg/apache/hadoop/fs/Path;)V
+#cancel(Lorg/apache/hadoop/fs/Path;)V
+#isCompleted(Lorg/apache/hadoop/fs/Path;)Z
@2.0.0
-#<init>()V

+###org/apache/hadoop/hbase/ipc/AdaptiveLifoCoDelCallQueue
@1.3.0
+#<init>(IIIDLjava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V
+#updateTunables(IID)V
+#take()Lorg/apache/hadoop/hbase/ipc/CallRunner;
+#poll()Lorg/apache/hadoop/hbase/ipc/CallRunner;
+#offer(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
+#size()I
+#toString()Ljava/lang/String;
+#poll(JLjava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/hbase/ipc/CallRunner;
+#peek()Lorg/apache/hadoop/hbase/ipc/CallRunner;
+#remove(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#clear()V
+#drainTo(Ljava/util/Collection;)I
+#drainTo(Ljava/util/Collection;I)I
+#iterator()Ljava/util/Iterator;
+#add(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
+#remove()Lorg/apache/hadoop/hbase/ipc/CallRunner;
+#element()Lorg/apache/hadoop/hbase/ipc/CallRunner;
+#addAll(Ljava/util/Collection;)Z
+#isEmpty()Z
+#containsAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#remainingCapacity()I
+#put(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
+#offer(Lorg/apache/hadoop/hbase/ipc/CallRunner;JLjava/util/concurrent/TimeUnit;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#take()Ljava/lang/Object;
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Object;)V
+#offer(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#peek()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#remove()Ljava/lang/Object;
@2.0.0-alpha3
+#<init>(IIIDLjava/util/concurrent/atomic/LongAdder;Ljava/util/concurrent/atomic/LongAdder;)V
-#<init>(IIIDLjava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V

+###org/apache/hadoop/hbase/ipc/HBaseRPCErrorHandler
@0.95.0
+#checkOOME(Ljava/lang/Throwable;)Z

+###org/apache/hadoop/hbase/ipc/PriorityFunction
@0.98.0-hadoop1
+#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)I
@0.99.0
+#getDeadline(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)J
@1.2.0
+#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)I
@2.0.0-alpha-1
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)J
-#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getDeadline(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)J
@2.0.0-beta-1
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)J
-#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)J

+###org/apache/hadoop/hbase/ipc/RpcScheduler
@0.98.0-hadoop1
+#init(Lorg/apache/hadoop/hbase/ipc/RpcScheduler$Context;)V
+#start()V
+#stop()V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
+#getGeneralQueueLength()I
+#getPriorityQueueLength()I
+#getReplicationQueueLength()I
@0.98.3-hadoop1
+#getActiveRpcHandlerCount()I
@0.98.4-hadoop1
+#<init>()V
@1.2.0
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
-#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
@1.3.0
+#getNumGeneralCallsDropped()J
+#getNumLifoModeSwitches()J
@1.4.0
+#getWriteQueueLength()I
+#getReadQueueLength()I
+#getScanQueueLength()I
+#getActiveWriteRpcHandlerCount()I
+#getActiveReadRpcHandlerCount()I
+#getActiveScanRpcHandlerCount()I
@1.5.0
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I
@2.0.0-alpha-1
-#getActiveGeneralRpcHandlerCount()I
-#getActivePriorityRpcHandlerCount()I
-#getActiveReplicationRpcHandlerCount()I
@2.0.0-alpha4
+#getCallQueueInfo()Lorg/apache/hadoop/hbase/ipc/CallQueueInfo;
@2.0.5
+#getMetaPriorityQueueLength()I
@2.1.0
-#getMetaPriorityQueueLength()I
@2.1.3
+#getMetaPriorityQueueLength()I
@2.2.0
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveMetaPriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I

+###org/apache/hadoop/hbase/mapred/TableInputFormatBase
@0.95.0
+#<init>()V
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableInputFormatBase

+###org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2$HFileRecordWriter
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;Lorg/apache/hadoop/fs/Path;)V
+#write(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/Cell;)V
+#close(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)V
+#write(Ljava/lang/Object;Ljava/lang/Object;)V
@2.0.0-alpha2
-###org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2$HFileRecordWriter

+###org/apache/hadoop/hbase/mapreduce/ImportTsv$TsvParser
@0.95.0
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#hasTimestamp()Z
+#getTimestampKeyColumnIndex()I
+#getRowKeyColumnIndex()I
+#getFamily(I)[B
+#getQualifier(I)[B
+#parse([BI)Lorg/apache/hadoop/hbase/mapreduce/ImportTsv$TsvParser$ParsedLine;
@0.95.2-hadoop1
+#parseRowKey([BI)Lorg/apache/hadoop/hbase/util/Pair;
@0.98.0-hadoop1
+#hasAttributes()Z
+#hasCellVisibility()Z
+#getAttributesKeyColumnIndex()I
+#getCellVisibilityColumnIndex()I
@0.98.9-hadoop1
+#hasCellTTL()Z
+#getCellTTLColumnIndex()I
@0.99.0
-#hasCellTTL()Z
-#getCellTTLColumnIndex()I
@1.0.0
+#hasCellTTL()Z
+#getCellTTLColumnIndex()I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/ImportTsv$TsvParser

+###org/apache/hadoop/hbase/mapreduce/MultiTableInputFormatBase
@0.95.0
+#<init>()V
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/MultiTableInputFormatBase

+###org/apache/hadoop/hbase/mapreduce/PutCombiner
@0.95.0
+#<init>()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/PutCombiner

+###org/apache/hadoop/hbase/mapreduce/ResultSerialization
@0.95.0
+#<init>()V
+#accept(Ljava/lang/Class;)Z
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/ResultSerialization

+###org/apache/hadoop/hbase/mapreduce/SyncTable
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/SyncTable

+###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormat$TableSnapshotRegionSplit
@0.96.2-hadoop1
+#<init>()V
+#getLength()J
+#getLocations()[Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.98.3-hadoop1
-###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormat$TableSnapshotRegionSplit

+###org/apache/hadoop/hbase/mapreduce/VisibilityExpressionResolver
@0.98.6-hadoop1
+#init()V
+#createVisibilityExpTags(Ljava/lang/String;)Ljava/util/List;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/VisibilityExpressionResolver

+###org/apache/hadoop/hbase/master/assignment/AssignmentManager$RegionInTransitionStat
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getRITThreshold()I
+#getTimestamp()J
+#getTotalRITs()I
+#getOldestRITTime()J
+#getTotalRITsOverThreshold()I
+#hasRegionsTwiceOverThreshold()Z
+#hasRegionsOverThreshold()Z
+#getRegionOverThreshold()Ljava/util/Collection;
+#isRegionOverThreshold(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isRegionTwiceOverThreshold(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@2.0.0-alpha4
+#isRegionOverThreshold(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#isRegionTwiceOverThreshold(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#isRegionOverThreshold(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#isRegionTwiceOverThreshold(Lorg/apache/hadoop/hbase/HRegionInfo;)Z

+###org/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#setState(Lorg/apache/hadoop/hbase/master/RegionState$State;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#offline()Lorg/apache/hadoop/hbase/ServerName;
+#transitionState(Lorg/apache/hadoop/hbase/master/RegionState$State;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Lorg/apache/hadoop/hbase/master/RegionState$State;
+#isInState([Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#isStuck()Z
+#isInTransition()Z
+#getLastUpdate()J
+#setLastHost(Lorg/apache/hadoop/hbase/ServerName;)V
+#setOpenSeqNum(J)V
+#setRegionLocation(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/ServerName;
+#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure;)Z
+#unsetProcedure(Lorg/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure;)Z
+#getProcedure()Lorg/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure;
+#getProcedureEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getTable()Lorg/apache/hadoop/hbase/TableName;
+#isSystemTable()Z
+#getLastHost()Lorg/apache/hadoop/hbase/ServerName;
+#getRegionLocation()Lorg/apache/hadoop/hbase/ServerName;
+#getState()Lorg/apache/hadoop/hbase/master/RegionState$State;
+#getOpenSeqNum()J
+#getFormatVersion()I
+#compareTo(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toShortString()Ljava/lang/String;
+#toDescriptiveString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-beta-1
+#transitionState(Lorg/apache/hadoop/hbase/master/RegionState$State;[Lorg/apache/hadoop/hbase/master/RegionState$State;)V
+#toRegionState()Lorg/apache/hadoop/hbase/master/RegionState;
-#transitionState(Lorg/apache/hadoop/hbase/master/RegionState$State;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Lorg/apache/hadoop/hbase/master/RegionState$State;
@2.2.0
-###org/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode

+###org/apache/hadoop/hbase/master/assignment/SplitTableRegionProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#prepareSplitRegion(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#createDaughterRegions(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
@2.3.0
+#getDaughterOneRI()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getDaughterTwoRI()Lorg/apache/hadoop/hbase/client/RegionInfo;

+###org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer
@0.96.0-hadoop1
+#<init>()V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
@1.3.0
+#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@2.0.0-alpha-1
+#setClusterLoad(Ljava/util/Map;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#balanceOverall(Ljava/util/List;Ljava/util/Map;ZLcom/google/common/collect/MinMaxPriorityQueue;II)V
@2.0.0-alpha2
+#balanceOverall(Ljava/util/List;Ljava/util/Map;ZLorg/apache/hadoop/hbase/shaded/com/google/common/collect/MinMaxPriorityQueue;II)V
-#balanceOverall(Ljava/util/List;Ljava/util/Map;ZLcom/google/common/collect/MinMaxPriorityQueue;II)V
@2.0.0-beta-1
+#balanceOverall(Ljava/util/List;Ljava/util/Map;ZLorg/apache/hbase/thirdparty/com/google/common/collect/MinMaxPriorityQueue;II)V
-#balanceOverall(Ljava/util/List;Ljava/util/Map;ZLorg/apache/hadoop/hbase/shaded/com/google/common/collect/MinMaxPriorityQueue;II)V
@2.2.5
+#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#setClusterLoad(Ljava/util/Map;)V
-#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@2.5.0
-#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#balanceOverall(Ljava/util/List;Ljava/util/Map;ZLorg/apache/hbase/thirdparty/com/google/common/collect/MinMaxPriorityQueue;II)V
-#balanceCluster(Ljava/util/Map;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer
@0.95.0
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#setClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
@1.0.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.3.0
+#updateMetricsSize(I)V
+#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
+#getCostFunctionNames()[Ljava/lang/String;
+#composeAttributeName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@2.0.0-beta-1
+#setClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#setClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus;)V
@2.2.5
+#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#balanceCluster(Ljava/util/Map;)Ljava/util/List;
@2.3.5
+#getCandidateGenerators()Ljava/util/List;
@2.3.6
-#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#getCostFunctionNames()[Ljava/lang/String;
@2.4.0
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#getCostFunctionNames()[Ljava/lang/String;
-#getCandidateGenerators()Ljava/util/List;
@2.4.3
+#getCandidateGenerators()Ljava/util/List;
-#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
@2.4.5
-#getCostFunctionNames()[Ljava/lang/String;
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/balancer/MetricsStochasticBalancer;)V
+#updateClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
+#updateBalancerLoadInfo(Ljava/util/Map;)V
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#getCandidateGenerators()Ljava/util/List;
-#setClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#updateMetricsSize(I)V
-#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#composeAttributeName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer

+###org/apache/hadoop/hbase/master/locking/LockManager$RemoteLocks
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/locking/LockManager;)V
+#requestNamespaceLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
+#requestTableLock(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
+#requestRegionsLock([Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
+#lockHeartbeat(JZ)Z
@2.0.0-alpha3
+#requestNamespaceLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
+#requestTableLock(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
-#requestNamespaceLock(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
-#requestTableLock(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
@2.0.0-alpha4
+#requestRegionsLock([Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J
-#requestRegionsLock([Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/NonceKey;)J

+###org/apache/hadoop/hbase/master/MasterAnnotationReadingPriorityFunction
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;Ljava/lang/Class;)V
+#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
@2.0.0-alpha-1
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
@2.0.0-beta-1
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
@3.0.0-alpha-2
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)J
-#<init>(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;Ljava/lang/Class;)V
-#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I

+###org/apache/hadoop/hbase/master/MasterMetaBootstrap
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
+#splitMetaLogsBeforeAssignment()V
+#assignMeta()V
+#processDeadServers()V
+#assignMetaReplicas()V
@2.0.0-alpha2
+#recoverMeta()V
-#splitMetaLogsBeforeAssignment()V
-#assignMeta()V
@2.0.0-beta-2
-#assignMetaReplicas()V
@2.0.1
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
-#<init>(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)V
@2.0.2
-###org/apache/hadoop/hbase/master/MasterMetaBootstrap

+###org/apache/hadoop/hbase/master/MasterRpcServices
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getLastFlushedSequenceId(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
+#regionServerReport(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
+#regionServerStartup(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
+#reportRSFatalError(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
+#addColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnResponse;
+#assignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionResponse;
+#balance(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceResponse;
+#createNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceResponse;
+#createTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableResponse;
+#deleteColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnResponse;
+#deleteNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceResponse;
+#deleteSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotResponse;
+#deleteTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableResponse;
+#truncateTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableResponse;
+#disableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableResponse;
+#dispatchMergingRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsResponse;
+#enableCatalogJanitor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorResponse;
+#enableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableResponse;
+#execMasterService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#execProcedure(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureResponse;
+#execProcedureWithRet(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureResponse;
+#getClusterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusResponse;
+#getCompletedSnapshots(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsResponse;
+#getNamespaceDescriptor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorResponse;
+#getSchemaAlterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusResponse;
+#getTableDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsResponse;
+#getTableNames(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesResponse;
+#isCatalogJanitorEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledResponse;
+#isMasterRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningResponse;
+#isProcedureDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneResponse;
+#isRestoreSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneResponse;
+#isSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneResponse;
+#listNamespaceDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsResponse;
+#listTableDescriptorsByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceResponse;
+#listTableNamesByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceResponse;
+#modifyColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnResponse;
+#modifyNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceResponse;
+#modifyTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableResponse;
+#moveRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionResponse;
+#offlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionResponse;
+#restoreSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotResponse;
+#runCatalogScan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanResponse;
+#setBalancerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningResponse;
+#shutdown(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownResponse;
+#snapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotResponse;
+#stopMaster(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterResponse;
+#unassignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionResponse;
+#reportRegionStateTransition(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
@1.1.0
+#getProcedureResult(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetProcedureResultRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetProcedureResultResponse;
+#getLastMajorCompactionTimestamp(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
+#getLastMajorCompactionTimestampForRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampForRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
+#isBalancerEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledResponse;
+#setQuota(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaResponse;
@1.1.3
+#abortProcedure(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AbortProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AbortProcedureResponse;
+#listProcedures(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListProceduresRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListProceduresResponse;
@1.2.0
+#normalizerSwitch(Z)Z
+#normalize(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$NormalizeRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$NormalizeResponse;
+#setNormalizerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetNormalizerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetNormalizerRunningResponse;
+#isNormalizerEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsNormalizerEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsNormalizerEnabledResponse;
+#getSecurityCapabilities(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesResponse;
@1.3.0
+#setSplitOrMergeEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledResponse;
+#isSplitOrMergeEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledResponse;
@1.4.0
+#setCleanerChoreRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetCleanerChoreRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetCleanerChoreRunningResponse;
+#isCleanerChoreEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCleanerChoreEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCleanerChoreEnabledResponse;
+#clearDeadServers(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ClearDeadServersRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ClearDeadServersResponse;
+#runCleanerChore(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCleanerChoreRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCleanerChoreResponse;
+#isMasterInMaintenanceMode(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeResponse;
@1.5.0
+#listNamespaces(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespacesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespacesResponse;
+#switchSnapshotCleanup(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSnapshotCleanupRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSnapshotCleanupResponse;
+#isSnapshotCleanupEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotCleanupEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotCleanupEnabledResponse;
-#normalizerSwitch(Z)Z
@1.7.0
+#getLogEntries(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogEntry;
+#getTableState(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableStateRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableStateResponse;
+#getClusterId(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterIdResponse;
+#getMasters(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMastersResponse;
+#getMetaRegionLocations(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMetaRegionLocationsResponse;
+#getNumLiveRS(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNumLiveRSRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNumLiveRSResponse;
@2.0.0-alpha-1
+#normalizerSwitch(Z)Z
+#getLastFlushedSequenceId(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
+#regionServerReport(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
+#regionServerStartup(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
+#reportRSFatalError(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
+#addColumn(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AddColumnResponse;
+#assignRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignRegionResponse;
+#balance(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BalanceResponse;
+#createNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateNamespaceResponse;
+#createTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateTableResponse;
+#deleteColumn(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteColumnResponse;
+#deleteNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteNamespaceResponse;
+#deleteSnapshot(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteSnapshotResponse;
+#deleteTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteTableResponse;
+#truncateTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$TruncateTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$TruncateTableResponse;
+#disableTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DisableTableResponse;
+#enableCatalogJanitor(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableCatalogJanitorResponse;
+#setCleanerChoreRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetCleanerChoreRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetCleanerChoreRunningResponse;
+#enableTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableTableResponse;
+#mergeTableRegions(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MergeTableRegionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MergeTableRegionsResponse;
+#splitRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SplitTableRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SplitTableRegionResponse;
+#execMasterService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#execProcedure(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureResponse;
+#execProcedureWithRet(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureResponse;
+#getClusterStatus(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterStatusResponse;
+#getCompletedSnapshots(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetCompletedSnapshotsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetCompletedSnapshotsResponse;
+#getNamespaceDescriptor(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetNamespaceDescriptorResponse;
+#getSchemaAlterStatus(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetSchemaAlterStatusResponse;
+#getTableDescriptors(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableDescriptorsResponse;
+#getTableNames(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableNamesResponse;
+#getTableState(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateResponse;
+#isCatalogJanitorEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledResponse;
+#isCleanerChoreEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCleanerChoreEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCleanerChoreEnabledResponse;
+#isMasterRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsMasterRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsMasterRunningResponse;
+#isProcedureDone(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsProcedureDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsProcedureDoneResponse;
+#isSnapshotDone(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotDoneResponse;
+#getProcedureResult(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProcedureResultRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProcedureResultResponse;
+#abortProcedure(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AbortProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AbortProcedureResponse;
+#listNamespaceDescriptors(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespaceDescriptorsResponse;
+#listProcedures(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListProceduresResponse;
+#listLocks(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListLocksRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListLocksResponse;
+#listTableDescriptorsByNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceResponse;
+#listTableNamesByNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableNamesByNamespaceResponse;
+#modifyColumn(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnResponse;
+#modifyNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyNamespaceResponse;
+#modifyTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableResponse;
+#moveRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MoveRegionResponse;
+#offlineRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$OfflineRegionResponse;
+#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RestoreSnapshotResponse;
+#runCatalogScan(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCatalogScanRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCatalogScanResponse;
+#runCleanerChore(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCleanerChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCleanerChoreResponse;
+#setBalancerRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetBalancerRunningResponse;
+#shutdown(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ShutdownResponse;
+#snapshot(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SnapshotResponse;
+#stopMaster(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$StopMasterResponse;
+#isMasterInMaintenanceMode(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsInMaintenanceModeRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsInMaintenanceModeResponse;
+#unassignRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignRegionResponse;
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
+#setQuota(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaResponse;
+#getLastMajorCompactionTimestamp(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
+#getLastMajorCompactionTimestampForRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampForRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
+#compactRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionResponse;
+#getRegionInfo(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse;
+#isBalancerEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsBalancerEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsBalancerEnabledResponse;
+#setSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledResponse;
+#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledResponse;
+#normalize(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$NormalizeRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$NormalizeResponse;
+#setNormalizerRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetNormalizerRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetNormalizerRunningResponse;
+#isNormalizerEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsNormalizerEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsNormalizerEnabledResponse;
+#getSecurityCapabilities(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SecurityCapabilitiesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SecurityCapabilitiesResponse;
+#addReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$AddReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$AddReplicationPeerResponse;
+#removeReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$RemoveReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$RemoveReplicationPeerResponse;
+#enableReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$EnableReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$EnableReplicationPeerResponse;
+#disableReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$DisableReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$DisableReplicationPeerResponse;
+#getReplicationPeerConfig(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$GetReplicationPeerConfigRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$GetReplicationPeerConfigResponse;
+#updateReplicationPeerConfig(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$UpdateReplicationPeerConfigRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$UpdateReplicationPeerConfigResponse;
+#listReplicationPeers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$ListReplicationPeersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$ListReplicationPeersResponse;
+#listDrainingRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDrainingRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDrainingRegionServersResponse;
+#drainRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DrainRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DrainRegionServersResponse;
+#removeDrainFromRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RemoveDrainFromRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RemoveDrainFromRegionServersResponse;
+#requestLock(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockResponse;
+#lockHeartbeat(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockHeartbeatRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockHeartbeatResponse;
+#reportRegionSpaceUse(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportResponse;
+#getSpaceQuotaRegionSizes(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaRegionSizesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaRegionSizesResponse;
+#getQuotaStates(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetQuotaStatesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetQuotaStatesResponse;
+#dispatchMergingRegions(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DispatchMergingRegionsResponse;
-#getLogEntries(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogEntry;
-#getLastFlushedSequenceId(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
-#regionServerReport(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
-#regionServerStartup(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
-#reportRSFatalError(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
-#addColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnResponse;
-#assignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionResponse;
-#balance(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceResponse;
-#createNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceResponse;
-#createTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableResponse;
-#deleteColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnResponse;
-#deleteNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceResponse;
-#deleteSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotResponse;
-#deleteTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableResponse;
-#truncateTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableResponse;
-#disableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableResponse;
-#dispatchMergingRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsResponse;
-#enableCatalogJanitor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorResponse;
-#setCleanerChoreRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetCleanerChoreRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetCleanerChoreRunningResponse;
-#enableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableResponse;
-#execMasterService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#execProcedure(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureResponse;
-#execProcedureWithRet(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureResponse;
-#getClusterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusResponse;
-#getCompletedSnapshots(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsResponse;
-#listNamespaces(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespacesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespacesResponse;
-#getNamespaceDescriptor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorResponse;
-#getSchemaAlterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusResponse;
-#getTableDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsResponse;
-#getTableNames(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesResponse;
-#isCatalogJanitorEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledResponse;
-#isCleanerChoreEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCleanerChoreEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCleanerChoreEnabledResponse;
-#isMasterRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningResponse;
-#isProcedureDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneResponse;
-#isRestoreSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneResponse;
-#isSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneResponse;
-#getProcedureResult(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetProcedureResultRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetProcedureResultResponse;
-#abortProcedure(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AbortProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AbortProcedureResponse;
-#listProcedures(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListProceduresRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListProceduresResponse;
-#clearDeadServers(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ClearDeadServersRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ClearDeadServersResponse;
-#listNamespaceDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsResponse;
-#listTableDescriptorsByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceResponse;
-#listTableNamesByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceResponse;
-#modifyColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnResponse;
-#modifyNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceResponse;
-#modifyTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableResponse;
-#moveRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionResponse;
-#offlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionResponse;
-#restoreSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotResponse;
-#switchSnapshotCleanup(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSnapshotCleanupRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSnapshotCleanupResponse;
-#isSnapshotCleanupEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotCleanupEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotCleanupEnabledResponse;
-#runCatalogScan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanResponse;
-#runCleanerChore(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCleanerChoreRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCleanerChoreResponse;
-#setBalancerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningResponse;
-#shutdown(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownResponse;
-#snapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotResponse;
-#stopMaster(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterResponse;
-#isMasterInMaintenanceMode(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeResponse;
-#unassignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionResponse;
-#reportRegionStateTransition(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
-#getLastMajorCompactionTimestamp(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
-#getLastMajorCompactionTimestampForRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampForRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
-#isBalancerEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledResponse;
-#setSplitOrMergeEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledResponse;
-#isSplitOrMergeEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledResponse;
-#normalize(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$NormalizeRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$NormalizeResponse;
-#setNormalizerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetNormalizerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetNormalizerRunningResponse;
-#isNormalizerEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsNormalizerEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsNormalizerEnabledResponse;
-#setQuota(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetQuotaResponse;
-#getSecurityCapabilities(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesResponse;
-#getClusterId(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterIdResponse;
-#getMasters(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMastersResponse;
-#getMetaRegionLocations(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetMetaRegionLocationsResponse;
-#getNumLiveRS(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNumLiveRSRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNumLiveRSResponse;
-#getTableState(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableStateRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableStateResponse;
@2.0.0-alpha2
-#dispatchMergingRegions(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DispatchMergingRegionsResponse;
@2.0.0-alpha3
+#getProcedures(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProceduresResponse;
+#getLocks(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetLocksRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetLocksResponse;
+#listDeadServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDeadServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDeadServersResponse;
+#clearDeadServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ClearDeadServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ClearDeadServersResponse;
-#listProcedures(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListProceduresResponse;
-#listLocks(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListLocksRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListLocksResponse;
@2.0.0-alpha4
+#listDecommissionedRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDecommissionedRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDecommissionedRegionServersResponse;
+#decommissionRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DecommissionRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DecommissionRegionServersResponse;
+#recommissionRegionServer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RecommissionRegionServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RecommissionRegionServerResponse;
-#listDrainingRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDrainingRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDrainingRegionServersResponse;
-#drainRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DrainRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DrainRegionServersResponse;
-#removeDrainFromRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RemoveDrainFromRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RemoveDrainFromRegionServersResponse;
@2.0.0-beta-1
+#getLastFlushedSequenceId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
+#regionServerReport(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
+#regionServerStartup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
+#reportRSFatalError(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
+#addColumn(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AddColumnResponse;
+#assignRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignRegionResponse;
+#balance(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BalanceResponse;
+#createNamespace(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateNamespaceResponse;
+#createTable(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateTableResponse;
+#deleteColumn(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteColumnResponse;
+#deleteNamespace(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteNamespaceResponse;
+#deleteSnapshot(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteSnapshotResponse;
+#deleteTable(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteTableResponse;
+#truncateTable(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$TruncateTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$TruncateTableResponse;
+#disableTable(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DisableTableResponse;
+#enableCatalogJanitor(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableCatalogJanitorResponse;
+#setCleanerChoreRunning(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetCleanerChoreRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetCleanerChoreRunningResponse;
+#enableTable(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableTableResponse;
+#mergeTableRegions(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MergeTableRegionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MergeTableRegionsResponse;
+#splitRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SplitTableRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SplitTableRegionResponse;
+#execMasterService(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#execProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureResponse;
+#execProcedureWithRet(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureResponse;
+#getClusterStatus(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterStatusResponse;
+#getCompletedSnapshots(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetCompletedSnapshotsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetCompletedSnapshotsResponse;
+#getNamespaceDescriptor(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetNamespaceDescriptorResponse;
+#getSchemaAlterStatus(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetSchemaAlterStatusResponse;
+#getTableDescriptors(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableDescriptorsResponse;
+#getTableNames(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableNamesResponse;
+#getTableState(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateResponse;
+#isCatalogJanitorEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledResponse;
+#isCleanerChoreEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCleanerChoreEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCleanerChoreEnabledResponse;
+#isMasterRunning(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsMasterRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsMasterRunningResponse;
+#isProcedureDone(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsProcedureDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsProcedureDoneResponse;
+#isSnapshotDone(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotDoneResponse;
+#getProcedureResult(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProcedureResultRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProcedureResultResponse;
+#abortProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AbortProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AbortProcedureResponse;
+#listNamespaceDescriptors(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespaceDescriptorsResponse;
+#getProcedures(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProceduresResponse;
+#getLocks(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetLocksRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetLocksResponse;
+#listTableDescriptorsByNamespace(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceResponse;
+#listTableNamesByNamespace(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableNamesByNamespaceResponse;
+#modifyColumn(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnResponse;
+#modifyNamespace(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyNamespaceResponse;
+#modifyTable(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableResponse;
+#moveRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MoveRegionResponse;
+#offlineRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$OfflineRegionResponse;
+#restoreSnapshot(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RestoreSnapshotResponse;
+#runCatalogScan(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCatalogScanRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCatalogScanResponse;
+#runCleanerChore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCleanerChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCleanerChoreResponse;
+#setBalancerRunning(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetBalancerRunningResponse;
+#shutdown(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ShutdownResponse;
+#snapshot(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SnapshotResponse;
+#stopMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$StopMasterResponse;
+#isMasterInMaintenanceMode(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsInMaintenanceModeRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsInMaintenanceModeResponse;
+#unassignRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignRegionResponse;
+#reportRegionStateTransition(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
+#setQuota(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaResponse;
+#getLastMajorCompactionTimestamp(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
+#getLastMajorCompactionTimestampForRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampForRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
+#compactRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionResponse;
+#getRegionInfo(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse;
+#isBalancerEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsBalancerEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsBalancerEnabledResponse;
+#setSplitOrMergeEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledResponse;
+#isSplitOrMergeEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledResponse;
+#normalize(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$NormalizeRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$NormalizeResponse;
+#setNormalizerRunning(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetNormalizerRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetNormalizerRunningResponse;
+#isNormalizerEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsNormalizerEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsNormalizerEnabledResponse;
+#getSecurityCapabilities(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SecurityCapabilitiesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SecurityCapabilitiesResponse;
+#addReplicationPeer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$AddReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$AddReplicationPeerResponse;
+#removeReplicationPeer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$RemoveReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$RemoveReplicationPeerResponse;
+#enableReplicationPeer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$EnableReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$EnableReplicationPeerResponse;
+#disableReplicationPeer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$DisableReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$DisableReplicationPeerResponse;
+#getReplicationPeerConfig(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$GetReplicationPeerConfigRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$GetReplicationPeerConfigResponse;
+#updateReplicationPeerConfig(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$UpdateReplicationPeerConfigRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$UpdateReplicationPeerConfigResponse;
+#listReplicationPeers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$ListReplicationPeersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$ListReplicationPeersResponse;
+#listDecommissionedRegionServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDecommissionedRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDecommissionedRegionServersResponse;
+#decommissionRegionServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DecommissionRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DecommissionRegionServersResponse;
+#recommissionRegionServer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RecommissionRegionServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RecommissionRegionServerResponse;
+#requestLock(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockResponse;
+#lockHeartbeat(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockHeartbeatRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockHeartbeatResponse;
+#reportRegionSpaceUse(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportResponse;
+#getSpaceQuotaRegionSizes(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaRegionSizesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaRegionSizesResponse;
+#getQuotaStates(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetQuotaStatesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetQuotaStatesResponse;
+#clearDeadServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ClearDeadServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ClearDeadServersResponse;
-#getLastFlushedSequenceId(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
-#regionServerReport(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
-#regionServerStartup(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
-#reportRSFatalError(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
-#addColumn(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AddColumnResponse;
-#assignRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignRegionResponse;
-#balance(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BalanceResponse;
-#createNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateNamespaceResponse;
-#createTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$CreateTableResponse;
-#deleteColumn(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteColumnResponse;
-#deleteNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteNamespaceResponse;
-#deleteSnapshot(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteSnapshotResponse;
-#deleteTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DeleteTableResponse;
-#truncateTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$TruncateTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$TruncateTableResponse;
-#disableTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DisableTableResponse;
-#enableCatalogJanitor(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableCatalogJanitorResponse;
-#setCleanerChoreRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetCleanerChoreRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetCleanerChoreRunningResponse;
-#enableTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$EnableTableResponse;
-#mergeTableRegions(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MergeTableRegionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MergeTableRegionsResponse;
-#splitRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SplitTableRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SplitTableRegionResponse;
-#execMasterService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#execProcedure(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureResponse;
-#execProcedureWithRet(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ExecProcedureResponse;
-#getClusterStatus(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterStatusResponse;
-#getCompletedSnapshots(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetCompletedSnapshotsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetCompletedSnapshotsResponse;
-#getNamespaceDescriptor(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetNamespaceDescriptorResponse;
-#getSchemaAlterStatus(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetSchemaAlterStatusResponse;
-#getTableDescriptors(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableDescriptorsResponse;
-#getTableNames(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableNamesResponse;
-#getTableState(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateResponse;
-#isCatalogJanitorEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledResponse;
-#isCleanerChoreEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCleanerChoreEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsCleanerChoreEnabledResponse;
-#isMasterRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsMasterRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsMasterRunningResponse;
-#isProcedureDone(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsProcedureDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsProcedureDoneResponse;
-#isSnapshotDone(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotDoneResponse;
-#getProcedureResult(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProcedureResultRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProcedureResultResponse;
-#abortProcedure(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AbortProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AbortProcedureResponse;
-#listNamespaceDescriptors(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespaceDescriptorsResponse;
-#getProcedures(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetProceduresResponse;
-#getLocks(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetLocksRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetLocksResponse;
-#listTableDescriptorsByNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceResponse;
-#listTableNamesByNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListTableNamesByNamespaceResponse;
-#modifyColumn(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnResponse;
-#modifyNamespace(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyNamespaceResponse;
-#modifyTable(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableResponse;
-#moveRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MoveRegionResponse;
-#offlineRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$OfflineRegionResponse;
-#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RestoreSnapshotResponse;
-#runCatalogScan(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCatalogScanRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCatalogScanResponse;
-#runCleanerChore(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCleanerChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunCleanerChoreResponse;
-#setBalancerRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetBalancerRunningResponse;
-#shutdown(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ShutdownResponse;
-#snapshot(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SnapshotRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SnapshotResponse;
-#stopMaster(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$StopMasterResponse;
-#isMasterInMaintenanceMode(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsInMaintenanceModeRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsInMaintenanceModeResponse;
-#unassignRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignRegionResponse;
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
-#setQuota(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetQuotaResponse;
-#getLastMajorCompactionTimestamp(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
-#getLastMajorCompactionTimestampForRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampForRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MajorCompactionTimestampResponse;
-#compactRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionResponse;
-#getRegionInfo(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse;
-#isBalancerEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsBalancerEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsBalancerEnabledResponse;
-#setSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSplitOrMergeEnabledResponse;
-#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSplitOrMergeEnabledResponse;
-#normalize(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$NormalizeRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$NormalizeResponse;
-#setNormalizerRunning(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetNormalizerRunningRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetNormalizerRunningResponse;
-#isNormalizerEnabled(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsNormalizerEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsNormalizerEnabledResponse;
-#getSecurityCapabilities(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SecurityCapabilitiesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SecurityCapabilitiesResponse;
-#addReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$AddReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$AddReplicationPeerResponse;
-#removeReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$RemoveReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$RemoveReplicationPeerResponse;
-#enableReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$EnableReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$EnableReplicationPeerResponse;
-#disableReplicationPeer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$DisableReplicationPeerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$DisableReplicationPeerResponse;
-#getReplicationPeerConfig(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$GetReplicationPeerConfigRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$GetReplicationPeerConfigResponse;
-#updateReplicationPeerConfig(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$UpdateReplicationPeerConfigRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$UpdateReplicationPeerConfigResponse;
-#listReplicationPeers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$ListReplicationPeersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$ListReplicationPeersResponse;
-#listDecommissionedRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDecommissionedRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDecommissionedRegionServersResponse;
-#decommissionRegionServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DecommissionRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$DecommissionRegionServersResponse;
-#recommissionRegionServer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RecommissionRegionServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RecommissionRegionServerResponse;
-#requestLock(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockResponse;
-#lockHeartbeat(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockHeartbeatRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/LockServiceProtos$LockHeartbeatResponse;
-#reportRegionSpaceUse(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportResponse;
-#getSpaceQuotaRegionSizes(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaRegionSizesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaRegionSizesResponse;
-#getQuotaStates(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetQuotaStatesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetQuotaStatesResponse;
-#listDeadServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDeadServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListDeadServersResponse;
-#clearDeadServers(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ClearDeadServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ClearDeadServersResponse;
@2.0.0-beta-2
-#normalizerSwitch(Z)Z
@2.0.2
+#setTableStateInMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetTableStateInMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateResponse;
@2.0.3
+#assigns(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignsResponse;
+#unassigns(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignsResponse;
+#bypassProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BypassProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BypassProcedureResponse;
+#scheduleServerCrashProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleServerCrashProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleServerCrashProcedureResponse;
@2.0.6
+#runHbckChore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreResponse;
+#fixMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaResponse;
@2.1.0
+#reportProcedureDone(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportProcedureDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportProcedureDoneResponse;
-#runHbckChore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreResponse;
-#setTableStateInMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetTableStateInMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateResponse;
-#assigns(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignsResponse;
-#unassigns(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignsResponse;
-#bypassProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BypassProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BypassProcedureResponse;
-#scheduleServerCrashProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleServerCrashProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleServerCrashProcedureResponse;
-#fixMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaResponse;
@2.1.1
+#setTableStateInMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetTableStateInMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetTableStateResponse;
+#assigns(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$AssignsResponse;
+#unassigns(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$UnassignsResponse;
+#bypassProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BypassProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$BypassProcedureResponse;
@2.1.2
+#scheduleServerCrashProcedure(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleServerCrashProcedureRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleServerCrashProcedureResponse;
@2.1.6
+#runHbckChore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreResponse;
+#fixMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaResponse;
@2.1.8
+#reportFileArchival(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationResponse;
@2.2.0
+#switchRpcThrottle(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchRpcThrottleRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchRpcThrottleResponse;
+#isRpcThrottleEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsRpcThrottleEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsRpcThrottleEnabledResponse;
+#switchExceedThrottleQuota(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchExceedThrottleQuotaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SwitchExceedThrottleQuotaResponse;
+#grant(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$GrantRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$GrantResponse;
+#revoke(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$RevokeRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$RevokeResponse;
+#getUserPermissions(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$GetUserPermissionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$GetUserPermissionsResponse;
+#hasUserPermissions(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$HasUserPermissionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AccessControlProtos$HasUserPermissionsResponse;
-#runHbckChore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreResponse;
-#reportFileArchival(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationResponse;
-#fixMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaResponse;
@2.2.1
+#runHbckChore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$RunHbckChoreResponse;
+#fixMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FixMetaResponse;
@2.2.3
+#reportFileArchival(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationResponse;
@2.2.7
+#scheduleSCPsForUnknownServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersResponse;
@2.3.0
+#listNamespaces(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespacesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ListNamespacesResponse;
+#switchSnapshotCleanup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSnapshotCleanupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetSnapshotCleanupResponse;
+#isSnapshotCleanupEnabled(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotCleanupEnabledRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$IsSnapshotCleanupEnabledResponse;
+#setRegionStateInMeta(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetRegionStateInMetaRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$SetRegionStateInMetaResponse;
+#getClusterId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdResponse;
+#getActiveMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterResponse;
+#getMetaRegionLocations(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsResponse;
-#scheduleSCPsForUnknownServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersResponse;
@2.3.5
+#scheduleSCPsForUnknownServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersResponse;
@2.4.0
+#getMasters(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersResponse;
+#getLogEntries(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogEntry;
-#scheduleSCPsForUnknownServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersResponse;
@2.4.3
+#scheduleSCPsForUnknownServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ScheduleSCPsForUnknownServersResponse;
@2.5.0
+#modifyColumnStoreFileTracker(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnStoreFileTrackerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnStoreFileTrackerResponse;
+#flushMasterStore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FlushMasterStoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FlushMasterStoreResponse;
+#modifyTableStoreFileTracker(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableStoreFileTrackerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableStoreFileTrackerResponse;
-#getClusterId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdResponse;
-#getActiveMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterResponse;
-#getMasters(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersResponse;
-#getMetaRegionLocations(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsResponse;
@3.0.0-alpha-1
+#transitReplicationPeerSyncReplicationState(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$TransitReplicationPeerSyncReplicationStateRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ReplicationProtos$TransitReplicationPeerSyncReplicationStateResponse;
+#getClusterId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdResponse;
+#getActiveMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterResponse;
+#getMasters(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersResponse;
+#getMetaRegionLocations(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsResponse;
+#getRSGroupInfo(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetRSGroupInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetRSGroupInfoResponse;
+#getRSGroupInfoOfTable(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetRSGroupInfoOfTableRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetRSGroupInfoOfTableResponse;
+#getRSGroupInfoOfServer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetRSGroupInfoOfServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetRSGroupInfoOfServerResponse;
+#moveServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$MoveServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$MoveServersResponse;
+#addRSGroup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$AddRSGroupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$AddRSGroupResponse;
+#removeRSGroup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$RemoveRSGroupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$RemoveRSGroupResponse;
+#balanceRSGroup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$BalanceRSGroupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$BalanceRSGroupResponse;
+#listRSGroupInfos(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$ListRSGroupInfosRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$ListRSGroupInfosResponse;
+#removeServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$RemoveServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$RemoveServersResponse;
+#listTablesInRSGroup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$ListTablesInRSGroupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$ListTablesInRSGroupResponse;
+#getConfiguredNamespacesAndTablesInRSGroup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetConfiguredNamespacesAndTablesInRSGroupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$GetConfiguredNamespacesAndTablesInRSGroupResponse;
+#renameRSGroup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$RenameRSGroupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$RenameRSGroupResponse;
+#updateRSGroupConfig(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$UpdateRSGroupConfigRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RSGroupAdminProtos$UpdateRSGroupConfigResponse;
-#modifyColumnStoreFileTracker(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnStoreFileTrackerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnStoreFileTrackerResponse;
-#flushMasterStore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FlushMasterStoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FlushMasterStoreResponse;
-#modifyTableStoreFileTracker(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableStoreFileTrackerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableStoreFileTrackerResponse;
@3.0.0-alpha-2
+#getStoreFile(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileResponse;
+#getOnlineRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
+#openRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionResponse;
+#warmupRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionResponse;
+#closeRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionResponse;
+#flushRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionResponse;
+#compactionSwitch(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactionSwitchRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactionSwitchResponse;
+#replicateWALEntry(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#replay(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#rollWALWriter(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterResponse;
+#getServerInfo(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoResponse;
+#stopServer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerResponse;
+#updateFavoredNodes(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
+#getRegionLoad(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadResponse;
+#clearCompactionQueues(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesResponse;
+#clearRegionBlockCache(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearRegionBlockCacheRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearRegionBlockCacheResponse;
+#getSpaceQuotaSnapshots(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsResponse;
+#executeProcedures(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresResponse;
+#getLiveRegionServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLiveRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLiveRegionServersResponse;
-#getClusterId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetClusterIdResponse;
-#getActiveMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetActiveMasterResponse;
-#getMasters(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMastersResponse;
-#getMetaRegionLocations(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$GetMetaRegionLocationsResponse;
@3.0.0-alpha-3
+#modifyColumnStoreFileTracker(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnStoreFileTrackerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyColumnStoreFileTrackerResponse;
+#modifyTableStoreFileTracker(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableStoreFileTrackerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$ModifyTableStoreFileTrackerResponse;
+#replicateToReplica(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#flushMasterStore(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FlushMasterStoreRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$FlushMasterStoreResponse;

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$RegionCloseOperation
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#getDestinationServer()Lorg/apache/hadoop/hbase/ServerName;
+#isClosed()Z
+#buildCloseRegionRequest(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionRequest;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;JLorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#isClosed()Z

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#start()Z
+#stop()Z
+#serverAdded(Lorg/apache/hadoop/hbase/ServerName;)V
+#serverRemoved(Lorg/apache/hadoop/hbase/ServerName;)V
+#splitAndResolveOperation(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;Lorg/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$RemoteProcedureResolver;)V

+###org/apache/hadoop/hbase/master/snapshot/MasterSnapshotVerifier
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)V
+#verifySnapshot(Lorg/apache/hadoop/fs/Path;Ljava/util/Set;)V
@1.4.9
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/FileSystem;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/FileSystem;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/FileSystem;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)V
@3.0.0-alpha-3
+#verifySnapshot(Lorg/apache/hadoop/fs/Path;Z)V
-#verifySnapshot(Lorg/apache/hadoop/fs/Path;Ljava/util/Set;)V

+###org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
+#<init>(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/Set;Z)V
+#initialize()V
+#getRegionNameToRegionInfoMap()Ljava/util/Map;
+#getTableToRegionMap()Ljava/util/Map;
+#getRegionToRegionServerMap()Ljava/util/Map;
+#getRegionServerToRegionMap()Ljava/util/Map;
+#getExistingAssignmentPlan()Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;
+#getTableSet()Ljava/util/Set;
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/client/HConnection;)V
+#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/util/Set;Z)V
-#<init>(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
-#<init>(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/Set;Z)V
@0.99.1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;)V
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/Set;Z)V
-#<init>(Lorg/apache/hadoop/hbase/client/HConnection;)V
-#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/util/Set;Z)V
@2.0.0-alpha-1
+#getExistingAssignmentPlan()Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;
+#getSecondaryToRegionInfoMap()Ljava/util/Map;
+#getTertiaryToRegionInfoMap()Ljava/util/Map;
+#getPrimaryToRegionInfoMap()Ljava/util/Map;
-#getExistingAssignmentPlan()Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta

+###org/apache/hadoop/hbase/master/SplitLogManager
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;)V
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher;)V
+#finishInitialization(Z)V
+#splitLogDistributed(Lorg/apache/hadoop/fs/Path;)J
+#splitLogDistributed(Ljava/util/List;)J
+#splitLogDistributed(Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)J
+#nodeDataChanged(Ljava/lang/String;)V
+#stop()V
+#finishInitialization()V
@0.95.1-hadoop1
+#splitLogDistributed(Ljava/util/Set;Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)J
+#parseLastFlushedSequenceIdFrom([B)J
+#getRegionFlushedSequenceId(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
-#splitLogDistributed(Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)J
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;Z)V
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;ZLorg/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher;)V
+#isRegionMarkedRecoveringInZK(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)Z
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher;)V
-#finishInitialization(Z)V
-#finishInitialization()V
@0.98.4-hadoop1
+#deleteRecoveringRegionZNodes(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/util/List;)V
+#setRecoveryMode(Z)V
+#getRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@0.98.6-hadoop1
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;)V
+#markRegionsRecovering(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#isLogReplaying()Z
+#isLogSplitting()Z
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;ZLorg/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher;)V
-#deleteRecoveringRegionZNodes(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/util/List;)V
-#nodeDataChanged(Ljava/lang/String;)V
-#parseLastFlushedSequenceIdFrom([B)J
-#isRegionMarkedRecoveringInZK(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)Z
-#getRegionFlushedSequenceId(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
@0.99.2
+#getFileList(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/conf/Configuration;)V
+#getRecoveryMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/ServerName;)V
-#getRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@2.0.0-beta-1
-#setRecoveryMode(Z)V
-#markRegionsRecovering(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
-#isLogReplaying()Z
-#isLogSplitting()Z
-#getRecoveryMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@2.4.0
+#getFileList(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)Ljava/util/List;
-#getFileList(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;

+###org/apache/hadoop/hbase/mob/MobCacheConfig
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#instantiateMobFileCache(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/mob/MobFileCache;
+#getMobFileCache()Lorg/apache/hadoop/hbase/mob/MobFileCache;
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
@2.0.3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.0.4
-#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.1.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.1.2
-#<init>(Lorg/apache/hadoop/conf/Configuration;Z)V
@2.2.0
-###org/apache/hadoop/hbase/mob/MobCacheConfig

+###org/apache/hadoop/hbase/mob/MobFileCache
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#evict()V
+#evictFile(Ljava/lang/String;)V
+#openFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/mob/MobCacheConfig;)Lorg/apache/hadoop/hbase/mob/MobFile;
+#closeFile(Lorg/apache/hadoop/hbase/mob/MobFile;)V
+#shutdown()V
+#getCacheSize()I
+#getAccessCount()J
+#getMissCount()J
+#getEvictedFileCount()J
+#getHitRatio()D
+#printStatistics()V
@2.2.0
+#openFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/mob/MobFile;
-#openFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/mob/MobCacheConfig;)Lorg/apache/hadoop/hbase/mob/MobFile;

+###org/apache/hadoop/hbase/procedure/ProcedureManager
@0.98.1-hadoop1
+#<init>()V
+#getProcedureSignature()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/hbase/procedure/ProcedureMemberRpcs
@0.95.0
+#start(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;)V
+#getMemberName()Ljava/lang/String;
+#sendMemberAborted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#sendMemberAcquired(Lorg/apache/hadoop/hbase/procedure/Subprocedure;)V
+#sendMemberCompleted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;)V
@0.95.2-hadoop1
+#start(Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure/ProcedureMember;)V
-#start(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;)V
@0.99.0
+#sendMemberCompleted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;[B)V
-#sendMemberCompleted(Lorg/apache/hadoop/hbase/procedure/Subprocedure;)V

+###org/apache/hadoop/hbase/procedure/Subprocedure$SubprocedureImpl
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Ljava/lang/String;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJ)V
+#acquireBarrier()V
+#insideBarrier()V
+#cleanup(Ljava/lang/Exception;)V
+#call()Ljava/lang/Object;
@0.99.0
+#insideBarrier()[B
-#insideBarrier()V

+###org/apache/hadoop/hbase/procedure/ZKProcedureUtil
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)V
+#close()V
+#getAcquiredBarrierNode(Ljava/lang/String;)Ljava/lang/String;
+#getReachedBarrierNode(Ljava/lang/String;)Ljava/lang/String;
+#getAbortZNode(Ljava/lang/String;)Ljava/lang/String;
+#getAbortZnode()Ljava/lang/String;
+#getBaseZnode()Ljava/lang/String;
+#getAcquiredBarrier()Ljava/lang/String;
+#getMemberName()Ljava/lang/String;
+#getAcquireBarrierNode(Lorg/apache/hadoop/hbase/procedure/ZKProcedureUtil;Ljava/lang/String;)Ljava/lang/String;
+#getReachedBarrierNode(Lorg/apache/hadoop/hbase/procedure/ZKProcedureUtil;Ljava/lang/String;)Ljava/lang/String;
+#getAbortNode(Lorg/apache/hadoop/hbase/procedure/ZKProcedureUtil;Ljava/lang/String;)Ljava/lang/String;
+#getWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
+#isAbortPathNode(Ljava/lang/String;)Z
+#clearChildZNodes()V
+#clearZNodes(Ljava/lang/String;)V
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)V
-#getMemberName()Ljava/lang/String;
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Ljava/lang/String;)V
+#getWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)V
-#getWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;

+###org/apache/hadoop/hbase/quotas/policies/DisableTableViolationPolicyEnforcement
@2.0.0-alpha-1
+#<init>()V
+#enable()V
+#disable()V
+#check(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getPolicyName()Ljava/lang/String;

+###org/apache/hadoop/hbase/quotas/SpaceLimitingException
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getViolationPolicy()Ljava/lang/String;
+#getMessage()Ljava/lang/String;

+###org/apache/hadoop/hbase/quotas/TimeBasedLimiter
@1.1.0
+#update(Lorg/apache/hadoop/hbase/quotas/TimeBasedLimiter;)V
+#checkQuota(JJ)V
+#grabQuota(JJ)V
+#consumeWrite(J)V
+#consumeRead(J)V
+#isBypass()Z
+#getWriteAvailable()J
+#getReadAvailable()J
+#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
+#toString()Ljava/lang/String;
@1.1.8
-#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.0
+#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.4
-#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.7
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@1.3.0
+#checkQuota(JJ)V
+#grabQuota(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
@1.3.3
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@1.4.0
+#checkQuota(JJ)V
+#grabQuota(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
@1.4.5
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@1.5.0
+#checkQuota(JJJJJJ)V
+#grabQuota(JJJJJJ)V
+#consumeWrite(JJ)V
+#consumeRead(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
-#consumeWrite(J)V
-#consumeRead(J)V
@2.0.0-alpha-1
+#checkQuota(JJ)V
+#grabQuota(JJ)V
+#consumeWrite(J)V
+#consumeRead(J)V
-#checkQuota(JJJJJJ)V
-#grabQuota(JJJJJJ)V
-#consumeWrite(JJ)V
-#consumeRead(JJ)V
@2.0.0
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@2.2.0
+#checkQuota(JJJJJJ)V
+#grabQuota(JJJJJJ)V
+#consumeWrite(JJ)V
+#consumeRead(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
-#consumeWrite(J)V
-#consumeRead(J)V

+###org/apache/hadoop/hbase/regionserver/ByteBufferChunkCell
@2.0.0-alpha-1
+#<init>(Ljava/nio/ByteBuffer;II)V
+#<init>(Ljava/nio/ByteBuffer;IIJ)V
+#getChunkId()I
@2.0.0-beta-1
-###org/apache/hadoop/hbase/regionserver/ByteBufferChunkCell

+###org/apache/hadoop/hbase/regionserver/CellFlatMap
@2.0.0-alpha-1
+#<init>(Ljava/util/Comparator;IIZ)V
+#comparator()Ljava/util/Comparator;
+#size()I
+#isEmpty()Z
+#subMap(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableMap;
+#headMap(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableMap;
+#tailMap(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableMap;
+#descendingMap()Ljava/util/NavigableMap;
+#subMap(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/NavigableMap;
+#headMap(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/NavigableMap;
+#tailMap(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/NavigableMap;
+#firstKey()Lorg/apache/hadoop/hbase/Cell;
+#lastKey()Lorg/apache/hadoop/hbase/Cell;
+#lowerKey(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#floorKey(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#ceilingKey(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#higherKey(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/Cell;
+#lowerEntry(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Map$Entry;
+#higherEntry(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Map$Entry;
+#ceilingEntry(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Map$Entry;
+#floorEntry(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Map$Entry;
+#firstEntry()Ljava/util/Map$Entry;
+#lastEntry()Ljava/util/Map$Entry;
+#pollFirstEntry()Ljava/util/Map$Entry;
+#pollLastEntry()Ljava/util/Map$Entry;
+#put(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#clear()V
+#remove(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/Cell;
+#putAll(Ljava/util/Map;)V
+#navigableKeySet()Ljava/util/NavigableSet;
+#descendingKeySet()Ljava/util/NavigableSet;
+#keySet()Ljava/util/NavigableSet;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
+#higherKey(Ljava/lang/Object;)Ljava/lang/Object;
+#higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
+#ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#floorKey(Ljava/lang/Object;)Ljava/lang/Object;
+#floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
+#lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#keySet()Ljava/util/Set;
+#lastKey()Ljava/lang/Object;
+#firstKey()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/regionserver/CompactionRequestor
@0.95.0
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@0.98.15-hadoop1
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@0.99.0
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@1.0.3
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@1.1.0
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@1.1.3
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@1.5.0
+#switchCompaction(Z)V
@2.0.0-alpha-1
-#switchCompaction(Z)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/regionserver/CompactionRequestor

+###org/apache/hadoop/hbase/regionserver/compactions/Compactor$CellSinkFactory
@0.98.19-hadoop1
+#createWriter(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/Compactor$FileDetails;Z)Ljava/lang/Object;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/Compactor$CellSinkFactory

+###org/apache/hadoop/hbase/regionserver/compactions/CurrentHourProvider
@0.95.1-hadoop1
+#getCurrentHour()I

+###org/apache/hadoop/hbase/regionserver/compactions/ExploringCompactionPolicy
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
@0.98.0-hadoop1
+#applyCompactionPolicy(Ljava/util/List;ZZII)Ljava/util/List;
@2.4.7
+#selectCompactFiles(Ljava/util/List;IZ)Ljava/util/List;
@3.0.0-alpha-1
-#selectCompactFiles(Ljava/util/List;IZ)Ljava/util/List;
@3.0.0-alpha-2
+#selectCompactFiles(Ljava/util/List;IZ)Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy$StripeCompactionRequest
@0.98.0-hadoop1
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;)Ljava/util/List;
+#<init>(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#setMajorRange([B[B)V
+#getRequest()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#setRequest(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
@0.98.11-hadoop1
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;)Ljava/util/List;
@0.98.16-hadoop1
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@0.99.0
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;)Ljava/util/List;
-#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.0.3
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.0
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;)Ljava/util/List;
-#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.3
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.3.0
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
+#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#execute(Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactor;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;)V
+#getRequest()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;
+#setRequest(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#getRequest()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#setRequest(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V

+###org/apache/hadoop/hbase/regionserver/compactions/StripeCompactor
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[B)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[B)Ljava/util/List;
@0.98.11-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[B)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[B)Ljava/util/List;
@0.98.16-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@0.98.19-hadoop1
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
@0.99.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[B)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[B)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.0.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[B)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[B)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.3.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Ljava/util/List;[B[BLorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;IJ[B[B[B[BLorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/DefaultStoreEngine
@0.95.0
+#<init>()V
+#createCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
@0.98.0-hadoop1
+#needsCompaction(Ljava/util/List;)Z

+###org/apache/hadoop/hbase/regionserver/FlushNonSloppyStoresFirstPolicy
@2.0.0-alpha-1
+#<init>()V
+#selectStoresToFlush()Ljava/util/Collection;

+###org/apache/hadoop/hbase/regionserver/handler/OpenRegionHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;I)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#process()V
+#tryTransitionFromOfflineToFailedOpen(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;I)Z
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;IJ)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;I)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;IJ)V
-#tryTransitionFromOfflineToFailedOpen(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;I)Z
@1.0.2
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@1.1.1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;J)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;J)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;J)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;J)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;J)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;

+###org/apache/hadoop/hbase/regionserver/HMobStore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#createWriterInTmp(Ljava/util/Date;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createDelFileWriterInTmp(Ljava/util/Date;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#commitFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#resolve(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/Cell;
+#resolve(Lorg/apache/hadoop/hbase/Cell;ZJZ)Lorg/apache/hadoop/hbase/Cell;
+#getPath()Lorg/apache/hadoop/fs/Path;
+#updateCellsCountCompactedToMob(J)V
+#getCellsCountCompactedToMob()J
+#updateCellsCountCompactedFromMob(J)V
+#getCellsCountCompactedFromMob()J
+#updateCellsSizeCompactedToMob(J)V
+#getCellsSizeCompactedToMob()J
+#updateCellsSizeCompactedFromMob(J)V
+#getCellsSizeCompactedFromMob()J
+#updateMobFlushCount()V
+#getMobFlushCount()J
+#updateMobFlushedCellsCount(J)V
+#getMobFlushedCellsCount()J
+#updateMobFlushedCellsSize(J)V
+#getMobFlushedCellsSize()J
+#updateMobScanCellsCount(J)V
+#getMobScanCellsCount()J
+#updateMobScanCellsSize(J)V
+#getMobScanCellsSize()J
+#getRefCellTags()[B
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/conf/Configuration;Z)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
@2.3.0
+#resolve(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/mob/MobCell;
+#resolve(Lorg/apache/hadoop/hbase/Cell;ZJZ)Lorg/apache/hadoop/hbase/mob/MobCell;
-#resolve(Lorg/apache/hadoop/hbase/Cell;Z)Lorg/apache/hadoop/hbase/Cell;
-#resolve(Lorg/apache/hadoop/hbase/Cell;ZJZ)Lorg/apache/hadoop/hbase/Cell;
@2.5.0
+#createWriter(Ljava/util/Date;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#resolve(Lorg/apache/hadoop/hbase/Cell;ZZ)Lorg/apache/hadoop/hbase/mob/MobCell;
+#getLocations(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#createDelFileWriterInTmp(Ljava/util/Date;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
@3.0.0-alpha-1
+#createWriterInTmp(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriterInTmp(Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriter(Ljava/util/Date;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriterInTmp(Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;

+###org/apache/hadoop/hbase/regionserver/HRegionServerCommandLine
@0.95.0
+#<init>(Ljava/lang/Class;)V
+#run([Ljava/lang/String;)I

+###org/apache/hadoop/hbase/regionserver/HStoreFile
@2.0.0-alpha-1
+#getCacheConf()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
+#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
+#getLastKey()Lorg/apache/hadoop/hbase/Cell;
+#getComparator()Ljava/util/Comparator;
+#getMaxMemstoreTS()J
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V[deprecated]
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Z)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V[deprecated]
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Z)V
+#getFileInfo()Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
+#getPath()Lorg/apache/hadoop/fs/Path;
+#getQualifiedPath()Lorg/apache/hadoop/fs/Path;
+#isReference()Z
+#isHFile()Z
+#isMajorCompactionResult()Z
+#excludeFromMinorCompaction()Z
+#getMaxSequenceId()J
+#getModificationTimeStamp()J
+#getMetadataValue([B)[B
+#isBulkLoadResult()Z
+#isCompactedAway()Z
+#getRefCount()I
+#isReferencedInReads()Z
+#getBulkLoadTimestamp()Ljava/util/OptionalLong;
+#getHDFSBlockDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#initReader()V
+#getPreadScanner(ZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getStreamScanner(ZZZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getReader()Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
+#closeReader(Z)V
+#markCompactedAway()V
+#deleteReader()V
+#toString()Ljava/lang/String;
+#toStringDetailed()Ljava/lang/String;
+#getMinimumTimestamp()Ljava/util/OptionalLong;
+#getMaximumTimestamp()Ljava/util/OptionalLong;
@2.0.0-alpha4
+#getFirstKey()Ljava/util/Optional;
+#getLastKey()Ljava/util/Optional;
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getMaxMemStoreTS()J
+#closeStoreFile(Z)V
+#deleteStoreFile()V
-#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
-#getLastKey()Lorg/apache/hadoop/hbase/Cell;
-#getComparator()Ljava/util/Comparator;
-#getMaxMemstoreTS()J
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V[deprecated]
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V[deprecated]
-#closeReader(Z)V
-#deleteReader()V
@2.0.0
+#getModificationTimestamp()J
@2.0.3
+#closeStreamReaders(Z)V
+#storeFileReaderClosed(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)V
@2.1.0
-#closeStreamReaders(Z)V
-#storeFileReaderClosed(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)V
@2.1.1
+#closeStreamReaders(Z)V
+#storeFileReaderClosed(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)V
@2.1.7
+#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@2.2.0
-#getEncodedPath()Lorg/apache/hadoop/fs/Path;
-#closeStreamReaders(Z)V
-#storeFileReaderClosed(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)V
@2.2.2
+#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Z)V
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)V
@3.0.0-alpha-1
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)V
-#getModificationTimeStamp()J

+###org/apache/hadoop/hbase/regionserver/KeyValueHeap
@0.95.0
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#peek()Lorg/apache/hadoop/hbase/KeyValue;
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#next(Ljava/util/List;I)Z
+#next(Ljava/util/List;ILjava/lang/String;)Z
+#next(Ljava/util/List;)Z
+#next(Ljava/util/List;Ljava/lang/String;)Z
+#close()V
+#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
+#getHeap()Ljava/util/PriorityQueue;
+#getSequenceID()J
@0.95.1-hadoop1
-#next(Ljava/util/List;ILjava/lang/String;)Z
-#next(Ljava/util/List;Ljava/lang/String;)Z
@0.98.12-hadoop1
+#getNextIndexedKey()[B
@0.99.0
+#peek()Lorg/apache/hadoop/hbase/Cell;
+#next()Lorg/apache/hadoop/hbase/Cell;
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#requestSeek(Lorg/apache/hadoop/hbase/Cell;ZZ)Z
-#peek()Lorg/apache/hadoop/hbase/KeyValue;
-#next()Lorg/apache/hadoop/hbase/KeyValue;
-#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#requestSeek(Lorg/apache/hadoop/hbase/KeyValue;ZZ)Z
-#getNextIndexedKey()[B
@1.0.1
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
@1.1.0
+#next(Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScannerContext;)Z
-#next(Ljava/util/List;I)Z
@1.4.0
+#getScannerOrder()J
-#getSequenceID()J
@2.0.0-alpha-1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/CellComparator;)V
+#shipped()V
-#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
@2.0.0-alpha4
-#next(Ljava/util/List;)Z
@2.1.0
-#getScannerOrder()J

+###org/apache/hadoop/hbase/regionserver/MemStoreLAB
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/MemStoreChunkPool;)V
+#allocateBytes(I)Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB$Allocation;
@0.99.0
+#allocateBytes(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#close()V
+#incScannerCount()V
+#decScannerCount()V
-#<init>()V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/MemStoreChunkPool;)V
-#allocateBytes(I)Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB$Allocation;
@2.0.0-alpha-1
+#copyCellInto(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#newInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/MemStoreLAB;
+#isEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
-#allocateBytes(I)Lorg/apache/hadoop/hbase/util/ByteRange;
@2.0.0-alpha4
+#getNewExternalChunk()Lorg/apache/hadoop/hbase/regionserver/Chunk;
@2.0.0-beta-1
+#forceCopyOfBigCellInto(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#getNewExternalJumboChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
@2.0.0-beta-2
+#getNewExternalChunk(Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;)Lorg/apache/hadoop/hbase/regionserver/Chunk;
+#getNewExternalChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;
+#isOnHeap()Z
+#isOffHeap()Z
-#getNewExternalChunk()Lorg/apache/hadoop/hbase/regionserver/Chunk;
-#getNewExternalJumboChunk(I)Lorg/apache/hadoop/hbase/regionserver/Chunk;

+###org/apache/hadoop/hbase/regionserver/MemstoreSize
@2.0.0-alpha-1
+#<init>()V
+#<init>(Z)V
+#isEmpty()Z
+#<init>(JJ)V
+#incMemstoreSize(JJ)V
+#incMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#decMemstoreSize(JJ)V
+#decMemstoreSize(Lorg/apache/hadoop/hbase/regionserver/MemstoreSize;)V
+#getDataSize()J
+#getHeapSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/regionserver/MemstoreSize

+###org/apache/hadoop/hbase/regionserver/MetricsRegion
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionWrapper;)V
+#close()V
+#updatePut()V
+#updateDelete()V
+#updateGet()V
+#updateAppend()V
+#updateIncrement()V
@0.95.1-hadoop1
+#updateGet(J)V
+#updateScanNext(J)V
-#updateGet()V
@0.98.5-hadoop1
+#getRegionWrapper()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionWrapper;
@1.3.0
+#updateScanTime(J)V
-#updateScanNext(J)V
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionWrapper;Lorg/apache/hadoop/conf/Configuration;)V
+#updateFilteredRecords()V
+#updateReadRequestCount()V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionWrapper;)V

+###org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperImpl$HRegionMetricsWrapperRunnable
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionWrapperImpl;)V
+#run()V

+###org/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress
@0.95.0
+#<init>([Ljava/lang/Object;[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;[Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;II)V
+#size()I
+#getOperation(I)Ljava/lang/Object;
+#setOperationStatus(ILorg/apache/hadoop/hbase/regionserver/OperationStatus;)V
+#getOperationStatus(I)Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#setWalEdit(ILorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#getWalEdit(I)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
@1.3.0
+#addOperationsFromCP(I[Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getOperationsFromCoprocessors(I)[Lorg/apache/hadoop/hbase/client/Mutation;
@2.0.0-alpha3
+#<init>([Ljava/lang/Object;[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;[Lorg/apache/hadoop/hbase/wal/WALEdit;II)V
+#setWalEdit(ILorg/apache/hadoop/hbase/wal/WALEdit;)V
+#getWalEdit(I)Lorg/apache/hadoop/hbase/wal/WALEdit;
-#<init>([Ljava/lang/Object;[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;[Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;II)V
-#setWalEdit(ILorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#getWalEdit(I)Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
@2.0.0-beta-1
+#<init>([Ljava/lang/Object;[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;[Lorg/apache/hadoop/hbase/wal/WALEdit;III)V
+#getReadyToWriteCount()I
+#getLastIndexExclusive()I
+#getCellCount()I
+#addCellCount(I)V
+#getNumOfPuts()I
+#incrementNumOfPuts()V
+#getNumOfDeletes()I
+#incrementNumOfDeletes()V
-#<init>([Ljava/lang/Object;[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;[Lorg/apache/hadoop/hbase/wal/WALEdit;II)V
@2.4.0
+#getNumOfIncrements()I
+#incrementNumOfIncrements()V
+#getNumOfAppends()I
+#incrementNumOfAppends()V
@3.0.0-alpha-3
+#getWalEditForReplicateIfExistsSkipWAL()Lorg/apache/hadoop/hbase/wal/WALEdit;
+#setWalEditForReplicateIfExistsSkipWAL(Lorg/apache/hadoop/hbase/wal/WALEdit;)V

+###org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl
@1.2.0
+#<init>()V
+#<init>(J)V
+#advanceTo(J)V
+#begin()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
+#await()V
+#completeAndWait(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
+#complete(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)Z
+#toString()Ljava/lang/String;
+#getReadPoint()J
+#getWritePoint()J
@1.4.0
+#begin(Ljava/lang/Runnable;)Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
@1.7.0
+#<init>(Ljava/lang/String;)V
@2.0.0-alpha-1
-#<init>(Ljava/lang/String;)V
@2.4.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/regionserver/OnlineRegions
@1.1.0
+#addToOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#removeFromOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/ServerName;)Z
+#getFromOnlineRegions(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
+#getOnlineRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@1.3.0
+#getOnlineRegions()Ljava/util/List;
@2.0.0-alpha4
+#getRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
+#getRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getRegions()Ljava/util/List;
-#addToOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#removeFromOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/ServerName;)Z
-#getFromOnlineRegions(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
-#getOnlineRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#getOnlineRegions()Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult;

+###org/apache/hadoop/hbase/regionserver/querymatcher/LegacyScanQueryMatcher
@1.4.0
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#hasNullColumnInQuery()Z
+#isUserScan()Z
+#moreRowsMayExistAfter(Lorg/apache/hadoop/hbase/Cell;)Z
+#getFilter()Lorg/apache/hadoop/hbase/filter/Filter;
+#getNextKeyHint(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#create(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/LegacyScanQueryMatcher;
@2.0.0-alpha-1
+#beforeShipped()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/regionserver/querymatcher/LegacyScanQueryMatcher

+###org/apache/hadoop/hbase/regionserver/Region$BulkLoadListener
@1.1.0
+#prepareBulkLoad([BLjava/lang/String;)Ljava/lang/String;
+#doneBulkLoad([BLjava/lang/String;)V
+#failedBulkLoad([BLjava/lang/String;)V
@2.0.0-alpha-1
+#prepareBulkLoad([BLjava/lang/String;Z)Ljava/lang/String;
-#prepareBulkLoad([BLjava/lang/String;)Ljava/lang/String;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/regionserver/Region$BulkLoadListener

+###org/apache/hadoop/hbase/regionserver/Region$RowLock
@1.1.0
+#release()V

+###org/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;JJ[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getCode()Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;
+#getOpenSeqNum()J
+#getMasterSystemTime()J
+#getHris()[Lorg/apache/hadoop/hbase/HRegionInfo;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext

+###org/apache/hadoop/hbase/regionserver/SecureBulkLoadManager
@2.0.0-alpha-1
+#start()V
+#stop()V
+#prepareBulkLoad(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)Ljava/lang/String;
+#cleanupBulkLoad(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)V
+#secureBulkLoadHFiles(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Ljava/util/Map;
@2.0.0-alpha4
+#prepareBulkLoad(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)Ljava/lang/String;
+#cleanupBulkLoad(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)V
+#secureBulkLoadHFiles(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Ljava/util/Map;
-#prepareBulkLoad(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)Ljava/lang/String;
-#cleanupBulkLoad(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)V
-#secureBulkLoadHFiles(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Ljava/util/Map;
@2.1.7
+#secureBulkLoadHFiles(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;Ljava/util/List;)Ljava/util/Map;
@2.2.0
-#secureBulkLoadHFiles(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;Ljava/util/List;)Ljava/util/Map;
@2.2.2
+#secureBulkLoadHFiles(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;Ljava/util/List;)Ljava/util/Map;

+###org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLjava/util/List;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager$SnapshotSubprocedurePool;)V
+#acquireBarrier()V
+#insideBarrier()V
+#cleanup(Ljava/lang/Exception;)V
+#releaseBarrier()V
@0.99.0
+#insideBarrier()[B
-#insideBarrier()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLjava/util/List;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager$SnapshotSubprocedurePool;)V
-#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJLjava/util/List;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/regionserver/snapshot/RegionServerSnapshotManager$SnapshotSubprocedurePool;)V

+###org/apache/hadoop/hbase/regionserver/SteppingSplitPolicy
@0.98.24-hadoop1
+#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/regionserver/SteppingSplitPolicy

+###org/apache/hadoop/hbase/regionserver/StoreFile
@0.95.0
+#getMaxMemstoreTS()J
+#setMaxMemstoreTS(J)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#isReference()Z
+#isMajorCompaction()Z
+#excludeFromMinorCompaction()Z
+#getMaxSequenceId()J
+#getModificationTimeStamp()J
+#getMaxMemstoreTSInList(Ljava/util/Collection;)J
+#getMaxSequenceIdInList(Ljava/util/Collection;Z)J
+#getBulkLoadTimestamp()J
+#getHDFSBlockDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#createReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#getReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#closeReader(Z)V
+#deleteReader()V
+#toString()Ljava/lang/String;
+#toStringDetailed()Ljava/lang/String;
+#getUniqueFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getMinimumTimestamp()Ljava/lang/Long;
@0.96.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)V
@0.98.0-hadoop1
+#getMetadataValue([B)[B
@0.98.2-hadoop1
+#getQualifiedPath()Lorg/apache/hadoop/fs/Path;
+#getMaxSequenceIdInList(Ljava/util/Collection;)J
-#getMaxSequenceIdInList(Ljava/util/Collection;Z)J
@0.98.6-hadoop1
+#getFileInfo()Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
@0.98.15-hadoop1
+#createReader(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
@0.98.17-hadoop1
+#getCacheConf()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
@0.98.18-hadoop1
+#isHFile()Z
+#getMaximumTimestamp()Ljava/lang/Long;
@0.98.19-hadoop1
+#cloneForReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile;
+#isBulkLoadResult()Z
@0.99.0
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
-#cloneForReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile;
-#isHFile()Z
-#getCacheConf()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
-#isBulkLoadResult()Z
-#createReader(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#getMaximumTimestamp()Ljava/lang/Long;
@0.99.2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
@1.0.3
+#getFirstKey()[B
+#getLastKey()[B
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
@1.1.0
-#getFirstKey()[B
-#getLastKey()[B
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
@1.1.3
+#getFirstKey()[B
+#getLastKey()[B
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
@1.2.0
+#createReader(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
@1.3.0
+#cloneForReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile;
+#isHFile()Z
+#isBulkLoadResult()Z
+#isCompactedAway()Z
+#getRefCount()I
+#markCompactedAway()V
+#getMaximumTimestamp()Ljava/lang/Long;
@1.3.6
+#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@1.4.0
-#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@1.4.11
+#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@2.0.0-alpha-1
+#getCacheConf()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
+#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
+#getLastKey()Lorg/apache/hadoop/hbase/Cell;
+#getComparator()Ljava/util/Comparator;
+#isMajorCompactionResult()Z
+#isReferencedInReads()Z
+#getBulkLoadTimestamp()Ljava/util/OptionalLong;
+#initReader()V
+#getPreadScanner(ZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getStreamScanner(ZZZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getReader()Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
+#getMinimumTimestamp()Ljava/util/OptionalLong;
+#getMaximumTimestamp()Ljava/util/OptionalLong;
-#getFirstKey()[B
-#getLastKey()[B
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#setMaxMemstoreTS(J)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/regionserver/BloomType;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
-#cloneForReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile;
-#getEncodedPath()Lorg/apache/hadoop/fs/Path;
-#isMajorCompaction()Z
-#getMaxMemstoreTSInList(Ljava/util/Collection;)J
-#getMaxSequenceIdInList(Ljava/util/Collection;)J
-#getRefCount()I
-#getBulkLoadTimestamp()J
-#createReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#createReader(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#getReader()Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#toString()Ljava/lang/String;
-#getUniqueFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getMinimumTimestamp()Ljava/lang/Long;
-#getMaximumTimestamp()Ljava/lang/Long;
@2.0.0-alpha4
+#getFirstKey()Ljava/util/Optional;
+#getLastKey()Ljava/util/Optional;
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getMaxMemStoreTS()J
-#getCacheConf()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
-#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
-#getLastKey()Lorg/apache/hadoop/hbase/Cell;
-#getComparator()Ljava/util/Comparator;
-#getMaxMemstoreTS()J
-#getFileInfo()Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
-#getMetadataValue([B)[B
-#isCompactedAway()Z
-#isReferencedInReads()Z
-#getHDFSBlockDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
-#initReader()V
-#getPreadScanner(ZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
-#getStreamScanner(ZZZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
-#getReader()Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
-#closeReader(Z)V
-#markCompactedAway()V
-#deleteReader()V
@2.0.0
*#getModificationTimeStamp()J[deprecated]
+#getModificationTimestamp()J
@2.1.7
+#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@2.2.0
-#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@2.2.2
+#getEncodedPath()Lorg/apache/hadoop/fs/Path;
@3.0.0-alpha-1
-#getModificationTimeStamp()J[deprecated]

+###org/apache/hadoop/hbase/regionserver/StoreFileManager
@0.95.0
+#loadFiles(Ljava/util/List;)V
+#insertNewFile(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
+#addCompactionResults(Ljava/util/Collection;Ljava/util/Collection;)V
+#clearFiles()Lcom/google/common/collect/ImmutableCollection;
+#getStorefiles()Ljava/util/Collection;
+#getStorefileCount()I
+#getFilesForScanOrGet(Z[B[B)Ljava/util/Collection;
+#getCandidateFilesForRowKeyBefore(Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/Iterator;
+#updateCandidateFilesForRowKeyBefore(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/Iterator;
+#getSplitPoint()[B
+#getStoreCompactionPriority()I
@0.98.0-hadoop1
+#insertNewFiles(Ljava/util/Collection;)V
-#insertNewFile(Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
@0.98.7-hadoop1
+#getUnneededFiles(JLjava/util/List;)Ljava/util/Collection;
@0.98.11-hadoop1
+#getCompactionPressure()D
@0.98.19-hadoop1
+#getStoreFileComparator()Ljava/util/Comparator;
@0.99.0
-#getCompactionPressure()D
-#getStoreFileComparator()Ljava/util/Comparator;
@0.99.1
+#updateCandidateFilesForRowKeyBefore(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Iterator;
-#updateCandidateFilesForRowKeyBefore(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/Iterator;
@1.1.0
+#getCompactionPressure()D
@1.3.0
+#removeCompactedFiles(Ljava/util/Collection;)V
+#clearCompactedFiles()Ljava/util/Collection;
+#getCompactedfiles()Ljava/util/Collection;
+#getStoreFileComparator()Ljava/util/Comparator;
@1.4.0
+#getFilesForScanOrGet([BZ[BZ)Ljava/util/Collection;
-#getFilesForScanOrGet(Z[B[B)Ljava/util/Collection;
@2.0.0-alpha-1
+#getFilesForScan([BZ[BZ)Ljava/util/Collection;
-#getFilesForScanOrGet([BZ[BZ)Ljava/util/Collection;
@2.0.0-alpha2
+#clearFiles()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;
+#getCompactedFilesCount()I
-#clearFiles()Lcom/google/common/collect/ImmutableCollection;
@2.0.0-alpha4
+#getSplitPoint()Ljava/util/Optional;
-#getSplitPoint()[B
@2.0.0-beta-1
+#clearFiles()Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableCollection;
-#clearFiles()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableCollection;

+###org/apache/hadoop/hbase/regionserver/StoreFileWriter
@2.0.0-alpha-1
+#appendMetadata(JZ)V
+#appendMetadata(JZJ)V
+#appendTrackedTimestampsToMetadata()V
+#trackTimestamps(Lorg/apache/hadoop/hbase/Cell;)V
+#append(Lorg/apache/hadoop/hbase/Cell;)V
+#beforeShipped()V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#hasGeneralBloom()Z
+#close()V
+#appendFileInfo([B[B)V
@2.2.0
+#appendMetadata(JZLjava/util/Collection;)V
@2.5.0
+#getPos()J
+#appendMobMetadata(Lorg/apache/hbase/thirdparty/com/google/common/collect/SetMultimap;)V

+###org/apache/hadoop/hbase/regionserver/StripeStoreConfig
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
+#getMaxSplitImbalance()F
+#getLevel0MinFiles()I
+#getStripeCompactMinFiles()I
+#getStripeCompactMaxFiles()I
+#isUsingL0Flush()Z
+#getSplitSize()J
+#getInitialCount()I
+#getSplitCount()F
+#getSplitPartSize()J

+###org/apache/hadoop/hbase/regionserver/StripeStoreFileManager$KeyBeforeConcatenatedLists$Iterator
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/StripeStoreFileManager$KeyBeforeConcatenatedLists;)V
+#getComponents()Ljava/util/ArrayList;
+#removeComponents(I)V
+#remove()V

+###org/apache/hadoop/hbase/regionserver/StripeStoreFlusher$BoundaryStripeFlushRequest
@0.98.0-hadoop1
+#<init>(Ljava/util/List;)V
+#createWriter()Lorg/apache/hadoop/hbase/regionserver/StripeMultiFileWriter;
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;)V
-#<init>(Ljava/util/List;)V
@0.99.0
+#<init>(Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;)V
-#<init>(Ljava/util/List;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Ljava/util/List;)V

+###org/apache/hadoop/hbase/regionserver/throttle/CompactionThroughputControllerFactory
@1.3.0
+#create(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;
+#getThroughputControllerClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;

+###org/apache/hadoop/hbase/regionserver/TimeRangeTracker
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)V
+#<init>(JJ)V
+#includeTimestamp(Lorg/apache/hadoop/hbase/KeyValue;)V
+#includeTimestamp([B)V
+#includesTimeRange(Lorg/apache/hadoop/hbase/io/TimeRange;)Z
+#getMinimumTimestamp()J
+#getMaximumTimestamp()J
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#toString()Ljava/lang/String;
@0.98.19-hadoop1
+#getMin()J
+#getMax()J
+#getTimeRangeTracker([B)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
-#getMinimumTimestamp()J
-#getMaximumTimestamp()J
@0.98.21-hadoop1
-#includeTimestamp([B)V
@0.99.0
+#includeTimestamp([B)V
+#getMinimumTimestamp()J
+#getMaximumTimestamp()J
-#getMin()J
-#getMax()J
-#getTimeRangeTracker([B)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
@0.99.1
+#includeTimestamp(Lorg/apache/hadoop/hbase/Cell;)V
-#includeTimestamp(Lorg/apache/hadoop/hbase/KeyValue;)V
-#includeTimestamp([B)V
@1.3.0
+#getMin()J
+#getMax()J
+#getTimeRangeTracker([B)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
-#getMinimumTimestamp()J
-#getMaximumTimestamp()J
@2.0.0-alpha4
+#create(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker$Type;)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#create(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker$Type;Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#create(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker$Type;JJ)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#parseFrom([B)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#parseFrom([BLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker$Type;)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;
+#toByteArray(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)[B
-#<init>(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)V
-#<init>(JJ)V
-#write(Ljava/io/DataOutput;)V
-#readFields(Ljava/io/DataInput;)V
-#getTimeRangeTracker([B)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;

+###org/apache/hadoop/hbase/regionserver/wal/CompressionContext
@0.99.2
+#<init>(Ljava/lang/Class;ZZ)V
@2.1.0
+#getDictionary(Ljava/lang/Enum;)Lorg/apache/hadoop/hbase/io/util/Dictionary;
@2.5.0
+#<init>(Ljava/lang/Class;ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
+#hasTagCompression()Z
+#hasValueCompression()Z
+#getValueCompressor()Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$ValueCompressor;
+#getValueCompressionAlgorithm(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;

+###org/apache/hadoop/hbase/regionserver/wal/RingBufferTruck$Type
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/regionserver/wal/RingBufferTruck$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/wal/RingBufferTruck$Type;

+###org/apache/hadoop/hbase/regionserver/wal/SecureProtobufLogReader
@0.98.0-hadoop1
+#<init>()V
@1.1.0
+#getWriterClsNames()Ljava/util/List;

+###org/apache/hadoop/hbase/RegionStateListener
@1.2.0
+#onRegionSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#onRegionSplitReverted(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#onRegionMerged(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha4
+#onRegionSplit(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#onRegionSplitReverted(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#onRegionMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#onRegionSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#onRegionSplitReverted(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#onRegionMerged(Lorg/apache/hadoop/hbase/HRegionInfo;)V

+###org/apache/hadoop/hbase/replication/ChainWALEntryFilter
@0.98.9-hadoop1
+#<init>([Lorg/apache/hadoop/hbase/replication/WALEntryFilter;)V
+#<init>(Ljava/util/List;)V
+#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@0.99.2
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
-#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@1.3.0
+#initCellFilters()V

+###org/apache/hadoop/hbase/replication/master/TableCFsUpdater
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#update()V
+#update(Ljava/lang/String;)Z
+#main([Ljava/lang/String;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/replication/master/TableCFsUpdater

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationLoad
@0.98.11-hadoop1
+#<init>()V
+#buildReplicationLoad(Ljava/util/List;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSink;)V
+#sourceToString()Ljava/lang/String;
+#sinkToString()Ljava/lang/String;
+#getReplicationLoadSink()Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$ReplicationLoadSink;
+#getReplicationLoadSourceList()Ljava/util/List;
+#toString()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationLoad

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$LogsComparator
@0.95.0
+#<init>()V
+#compare(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@1.7.0
+#getTS(Lorg/apache/hadoop/fs/Path;)J
@2.0.0-alpha-1
-#getTS(Lorg/apache/hadoop/fs/Path;)J
@2.4.0
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$LogsComparator

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationThrottler
@0.98.1-hadoop1
+#<init>(D)V
+#isEnabled()Z
+#getNextSleepInterval(I)J
+#addPushSize(I)V
+#resetStartTick()V
@1.4.0
+#setBandwidth(D)V

+###org/apache/hadoop/hbase/replication/regionserver/WALEntryStream
@1.4.0
+#<init>(Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#<init>(Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;JLorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#hasNext()Z
+#next()Lorg/apache/hadoop/hbase/wal/WAL$Entry;
+#remove()V
+#close()V
+#iterator()Ljava/util/Iterator;
+#getPosition()J
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#reset()V
+#next()Ljava/lang/Object;
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;JLorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Ljava/lang/String;)V
-#<init>(Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#<init>(Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;JLorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
@2.0.0-alpha-1
+#<init>(Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#<init>(Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;JLorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;JLorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/replication/regionserver/WALEntryStream

+###org/apache/hadoop/hbase/security/access/CoprocessorWhitelistMasterObserver
@2.0.0-alpha-1
+#<init>()V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha2
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha4
+#getMasterObserver()Ljava/util/Optional;
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.2.0
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V

+###org/apache/hadoop/hbase/security/HBasePolicyProvider
@0.95.0
+#<init>()V
+#getServices()[Lorg/apache/hadoop/security/authorize/Service;
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/ServiceAuthorizationManager;)V

+###org/apache/hadoop/hbase/security/token/AuthenticationKey
@0.95.0
+#<init>()V
+#<init>(IJLjavax/crypto/SecretKey;)V
+#getKeyId()I
+#getExpiration()J
+#setExpiration(J)V
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.99.0
+#hashCode()I

+###org/apache/hadoop/hbase/security/visibility/DefaultVisibilityLabelServiceImpl
@0.98.6-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#init(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
+#addLabels(Ljava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#setAuths([BLjava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#clearAuths([BLjava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#getAuths([BZ)Ljava/util/List;
+#createVisibilityExpTags(Ljava/lang/String;ZZ)Ljava/util/List;
+#getVisibilityExpEvaluator(Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Lorg/apache/hadoop/hbase/security/visibility/VisibilityExpEvaluator;
+#havingSystemAuth([B)Z
+#matchVisibility(Ljava/util/List;Ljava/lang/Byte;Ljava/util/List;Ljava/lang/Byte;)Z
@0.98.9-hadoop1
+#listLabels(Ljava/lang/String;)Ljava/util/List;
+#encodeVisibilityForReplication(Ljava/util/List;Ljava/lang/Byte;)[B
@0.98.10-hadoop1
*#getAuths([BZ)Ljava/util/List;[deprecated]
+#getUserAuths([BZ)Ljava/util/List;
+#getGroupAuths([Ljava/lang/String;Z)Ljava/util/List;
*#havingSystemAuth([B)Z[deprecated]
+#havingSystemAuth(Lorg/apache/hadoop/hbase/security/User;)Z
@0.99.0
-#getUserAuths([BZ)Ljava/util/List;
-#getGroupAuths([Ljava/lang/String;Z)Ljava/util/List;
-#listLabels(Ljava/lang/String;)Ljava/util/List;
-#havingSystemAuth(Lorg/apache/hadoop/hbase/security/User;)Z
-#encodeVisibilityForReplication(Ljava/util/List;Ljava/lang/Byte;)[B
@0.99.2
+#encodeVisibilityForReplication(Ljava/util/List;Ljava/lang/Byte;)[B
@1.0.0
*#getAuths([BZ)Ljava/util/List;[deprecated]
+#getUserAuths([BZ)Ljava/util/List;
+#getGroupAuths([Ljava/lang/String;Z)Ljava/util/List;
+#listLabels(Ljava/lang/String;)Ljava/util/List;
*#havingSystemAuth([B)Z[deprecated]
+#havingSystemAuth(Lorg/apache/hadoop/hbase/security/User;)Z
@2.0.0-alpha-1
-#getAuths([BZ)Ljava/util/List;[deprecated]
-#havingSystemAuth([B)Z[deprecated]

+###org/apache/hadoop/hbase/security/visibility/VisibilityScanDeleteTracker
@0.98.4-hadoop1
+#<init>()V
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
+#reset()V
@2.0.0-alpha-1
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult;
-#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;)V
-#<init>()V

+###org/apache/hadoop/hbase/snapshot/ExportSnapshot$Counter
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/snapshot/ExportSnapshot$Counter;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/snapshot/ExportSnapshot$Counter;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/snapshot/ExportSnapshot$Counter

+###org/apache/hadoop/hbase/snapshot/RestoreSnapshotHelper$RestoreMetaChanges
@0.95.0
+#<init>()V
+#hasRegionsToAdd()Z
+#getRegionsToAdd()Ljava/util/List;
+#hasRegionsToRestore()Z
+#getRegionsToRestore()Ljava/util/List;
+#hasRegionsToRemove()Z
+#getRegionsToRemove()Ljava/util/List;
@0.96.0-hadoop1
+#updateMetaParentRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
-#<init>()V
@0.99.0
+#updateMetaParentRegions(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/util/List;)V
-#updateMetaParentRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
@0.99.1
+#updateMetaParentRegions(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
-#updateMetaParentRegions(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/util/List;)V
@1.2.0
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/util/Map;)V
+#getParentToChildrenPairMap()Ljava/util/Map;
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/client/TableDescriptor;Ljava/util/Map;)V
+#getTableDescriptor()Lorg/apache/hadoop/hbase/client/TableDescriptor;
-#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/util/Map;)V
-#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;

+###org/apache/hadoop/hbase/snapshot/SnapshotManifestV1
@0.98.6-hadoop1

+###org/apache/hadoop/hbase/SplitLogCounters
@0.95.0
+#<init>()V
+#resetCounters()V
@2.4.0
-#<init>()V

+###org/apache/hadoop/hbase/tmpl/common/TaskMonitorTmpl$ImplData
@0.95.0
+#<init>()V
+#setFilter(Ljava/lang/String;)V
+#getFilter()Ljava/lang/String;
+#getFilter__IsNotDefault()Z
+#setTaskMonitor(Lorg/apache/hadoop/hbase/monitoring/TaskMonitor;)V
+#getTaskMonitor()Lorg/apache/hadoop/hbase/monitoring/TaskMonitor;
+#getTaskMonitor__IsNotDefault()Z
+#setFormat(Ljava/lang/String;)V
+#getFormat()Ljava/lang/String;
+#getFormat__IsNotDefault()Z
@2.1.5
+#setParent(Ljava/lang/String;)V
+#getParent()Ljava/lang/String;
+#getParent__IsNotDefault()Z

+###org/apache/hadoop/hbase/tmpl/master/MasterStatusTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V
@0.95.2-hadoop1
+#formatZKString()Ljava/lang/String;
@2.0.0-beta-2
+#getUserTables(Lorg/apache/hadoop/hbase/master/HMaster;Ljava/util/List;)Ljava/lang/String;

+###org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl$ImplData
@0.95.0
+#<init>()V
+#setMWrap(Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;)V
+#getMWrap()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerWrapper;
@0.98.17-hadoop1
+#setMServerWrap(Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
+#getMServerWrap()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;
@0.99.0
-#setMServerWrap(Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
-#getMServerWrap()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;
@1.2.0
+#setMServerWrap(Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;)V
+#getMServerWrap()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapper;
@2.3.0
+#setBbAllocator(Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)V
+#getBbAllocator()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;

+###org/apache/hadoop/hbase/tool/Canary$ExtendedSink
@0.96.1-hadoop1
+#publishReadFailure(Ljava/lang/String;Ljava/lang/String;)V
+#publishReadTiming(Ljava/lang/String;Ljava/lang/String;J)V
@1.3.3
-###org/apache/hadoop/hbase/tool/Canary$ExtendedSink

+###org/apache/hadoop/hbase/util/BloomContext
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;Lorg/apache/hadoop/hbase/CellComparator;)V
+#getLastCell()Lorg/apache/hadoop/hbase/Cell;
+#writeBloom(Lorg/apache/hadoop/hbase/Cell;)V
+#addLastBloomKey(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V

+###org/apache/hadoop/hbase/util/BoundedPriorityBlockingQueue
@0.99.0
+#<init>(ILjava/util/Comparator;)V
+#offer(Ljava/lang/Object;)Z
+#put(Ljava/lang/Object;)V
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#take()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#peek()Ljava/lang/Object;
+#size()I
+#iterator()Ljava/util/Iterator;
+#comparator()Ljava/util/Comparator;
+#remainingCapacity()I
+#remove(Ljava/lang/Object;)Z
+#contains(Ljava/lang/Object;)Z
+#drainTo(Ljava/util/Collection;)I
+#drainTo(Ljava/util/Collection;I)I

+###org/apache/hadoop/hbase/util/DirectMemoryUtils
@0.95.0
+#<init>()V
+#getDirectMemorySize()J
+#destroyDirectByteBuffer(Ljava/nio/ByteBuffer;)V
@0.96.2-hadoop1
+#getDirectMemoryUsage()J
@2.2.0
+#getNettyDirectMemoryUsage()J

+###org/apache/hadoop/hbase/util/FSUtils$BlackListDirFilter
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.98.21-hadoop1
-#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.99.0
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@1.4.0
-#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/util/FSUtils$UserTableDirFilter
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V

+###org/apache/hadoop/hbase/util/HBaseConfTool
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/util/HBaseFsckRepair
@0.95.0
+#<init>()V
+#fixMultiAssignment(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#fixUnassigned(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitUntilAssigned(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#fixMetaHoleOnline(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#createHDFSRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@0.99.0
+#fixUnassigned(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitUntilAssigned(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#fixUnassigned(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#waitUntilAssigned(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.0.0
+#fixMultiAssignment(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#fixMultiAssignment(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.1.0
+#fixMetaHoleOnlineAndAddReplicas(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/Collection;I)V
-#fixMetaHoleOnline(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.2.6
+#removeParentInMeta(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.3.0
-#removeParentInMeta(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.3.1
+#removeParentInMeta(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha-1
+#fixMultiAssignment(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#fixMultiAssignment(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha3
+#createHDFSRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#createHDFSRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@2.0.0-alpha4
+#fixMultiAssignment(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)V
+#fixUnassigned(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#waitUntilAssigned(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#fixMetaHoleOnlineAndAddReplicas(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/Collection;I)V
+#createHDFSRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#removeParentInMeta(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#fixMultiAssignment(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#fixUnassigned(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#waitUntilAssigned(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#closeRegionSilentlyAndWait(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#fixMetaHoleOnlineAndAddReplicas(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/Collection;I)V
-#createHDFSRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#removeParentInMeta(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)V

+###org/apache/hadoop/hbase/util/JSONBean
@1.0.0
+#<init>()V
+#open(Ljava/io/PrintWriter;)Lorg/apache/hadoop/hbase/util/JSONBean$Writer;
+#dumpRegionServerMetrics()Ljava/lang/String;
+#dumpAllBeans()V
+#main([Ljava/lang/String;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/util/JSONBean

+###org/apache/hadoop/hbase/util/MultiHConnection
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;I)V
+#close()V
+#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/MultiHConnection

+###org/apache/hadoop/hbase/util/RegionMover
@2.0.0-alpha-1
+#load()Z
+#unload()Z
+#main([Ljava/lang/String;)V
@2.0.3
+#close()V
@2.1.0
-#close()V
@2.1.1
+#close()V
@2.4.1
+#unloadFromRack()Z

+###org/apache/hadoop/hbase/wal/AbstractFSWALProvider$Reader
@2.0.0-alpha-1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;)V

+###org/apache/hadoop/hbase/wal/WALProvider
@0.99.2
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
+#getWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
+#shutdown()V
+#close()V
@1.3.0
+#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
+#getNumLogFiles()J
+#getLogFileSize()J
-#getWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
@1.4.0
+#getWALs()Ljava/util/List;
@2.0.0-beta-1
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
@2.0.0-beta-2
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#addWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
+#getWALFileLengthProvider()Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;
-#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
@2.4.0
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)V
-#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/zookeeper/DrainingServerTracker
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#start()V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/DrainingServerTracker

+###org/apache/hadoop/hbase/zookeeper/ZKSplitLog
@0.95.0
+#<init>()V
+#getEncodedNodeName(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)Ljava/lang/String;
+#getFileName(Ljava/lang/String;)Ljava/lang/String;
+#getRescanNode(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/lang/String;
+#isRescanNode(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)Z
+#isTaskPath(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)Z
+#getSplitLogDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getSplitLogDirTmpComponent(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#markCorrupted(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/fs/FileSystem;)V
+#isCorrupted(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/fs/FileSystem;)Z
@0.98.12-hadoop1
+#isRescanNode(Ljava/lang/String;)Z
@0.99.0
+#isRegionMarkedRecoveringInZK(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;)Z
+#parseLastFlushedSequenceIdFrom([B)J
+#deleteRecoveringRegionZNodes(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/util/List;)V
+#getRegionFlushedSequenceId(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
-#isRescanNode(Ljava/lang/String;)Z
@1.0.1
+#isRescanNode(Ljava/lang/String;)Z
@1.1.0
+#getRegionFlushedSequenceId(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getRegionFlushedSequenceId(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
@2.0.0-alpha-1
+#getRegionFlushedSequenceId(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getRegionFlushedSequenceId(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/ZKSplitLog

+###org/apache/hadoop/hbase/backup/BackupClientFactory
@2.0.0-alpha-1
+#<init>()V
+#create(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/backup/BackupRequest;)Lorg/apache/hadoop/hbase/backup/impl/TableBackupClient;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupClientFactory

+###org/apache/hadoop/hbase/backup/BackupInfo$BackupPhase
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupPhase;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupInfo$BackupPhase;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupInfo$BackupPhase

+###org/apache/hadoop/hbase/backup/BackupObserver
@2.0.0-alpha-1
+#<init>()V
+#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/Map;Z)Z
+#preCommitStoreFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupObserver

+###org/apache/hadoop/hbase/backup/BackupRestoreFactory
@2.0.0-alpha-1
+#getRestoreJob(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/backup/RestoreJob;
+#getBackupCopyJob(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/backup/BackupCopyJob;
@2.0.0-alpha2
+#getBackupMergeJob(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/backup/BackupMergeJob;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupRestoreFactory

+###org/apache/hadoop/hbase/backup/example/LongTermArchivingHFileCleaner
@0.95.0
+#<init>()V
+#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
@0.95.2-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/backup/impl/RestoreTablesClient
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/backup/RestoreRequest;)V
+#execute()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/RestoreTablesClient

+###org/apache/hadoop/hbase/backup/master/BackupLogCleaner
@2.0.0-alpha-1
+#<init>()V
+#init(Ljava/util/Map;)V
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/master/BackupLogCleaner

+###org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager
@2.0.0-alpha-1
+#<init>()V
+#start()V
+#stop(Z)V
+#buildSubprocedure([B)Lorg/apache/hadoop/hbase/procedure/Subprocedure;
+#initialize(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#getProcedureSignature()Ljava/lang/String;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager

+###org/apache/hadoop/hbase/client/CoprocessorHConnection
@0.96.0-hadoop1
+#getConnectionForEnvironment(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)Lorg/apache/hadoop/hbase/client/HConnection;
+#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getClient(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ClientService$BlockingInterface;
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable([B)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable([BLjava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#isMasterRunning()Z
+#isTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#isTableEnabled([B)Z
+#isTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#isTableDisabled([B)Z
+#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;)Z
+#isTableAvailable([B)Z
+#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;[[B)Z
+#isTableAvailable([B[[B)Z
+#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getTableNames()[Ljava/lang/String;
+#listTableNames()[Lorg/apache/hadoop/hbase/TableName;
+#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#locateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#locateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#clearRegionCache()V
+#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;)V
+#clearRegionCache([B)V
+#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#relocateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#updateCachedLocations(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
+#updateCachedLocations([B[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
+#locateRegion([B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#locateRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#locateRegions([B)Ljava/util/List;
+#locateRegions(Lorg/apache/hadoop/hbase/TableName;ZZ)Ljava/util/List;
+#locateRegions([BZZ)Ljava/util/List;
+#getMaster()Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MasterService$BlockingInterface;
+#getAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#getAdmin(Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#getRegionLocation(Lorg/apache/hadoop/hbase/TableName;[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
+#getRegionLocation([B[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
+#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V
+#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V
+#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V
+#setRegionCachePrefetch([BZ)V
+#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z
+#getRegionCachePrefetch([B)Z
+#getCurrentNrHRS()I
+#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;
+#isClosed()Z
+#clearCaches(Lorg/apache/hadoop/hbase/ServerName;)V
+#close()V
+#deleteCachedRegionLocation(Lorg/apache/hadoop/hbase/HRegionLocation;)V
+#getKeepAliveMasterService()Lorg/apache/hadoop/hbase/client/MasterKeepAliveConnection;
+#isDeadServer(Lorg/apache/hadoop/hbase/ServerName;)Z
@0.98.0-hadoop1
+#getNonceGenerator()Lorg/apache/hadoop/hbase/client/NonceGenerator;
@0.98.6-hadoop1
*#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
-#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
-#isAborted()Z
-#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable([B)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable([BLjava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#isMasterRunning()Z
-#isTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Z
-#isTableEnabled([B)Z
-#isTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
-#isTableDisabled([B)Z
-#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;)Z
-#isTableAvailable([B)Z
-#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;[[B)Z
-#isTableAvailable([B[[B)Z
-#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableNames()[Ljava/lang/String;
-#listTableNames()[Lorg/apache/hadoop/hbase/TableName;
-#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#locateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#locateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#clearRegionCache()V
-#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;)V
-#clearRegionCache([B)V
-#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#relocateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#updateCachedLocations(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
-#updateCachedLocations([B[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
-#locateRegion([B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#locateRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#locateRegions([B)Ljava/util/List;
-#locateRegions(Lorg/apache/hadoop/hbase/TableName;ZZ)Ljava/util/List;
-#locateRegions([BZZ)Ljava/util/List;
-#getMaster()Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MasterService$BlockingInterface;
-#getAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
-#getAdmin(Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
-#getRegionLocation(Lorg/apache/hadoop/hbase/TableName;[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
-#getRegionLocation([B[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
-#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V
-#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V
-#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
-#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
-#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V
-#setRegionCachePrefetch([BZ)V
-#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z
-#getRegionCachePrefetch([B)Z
-#getCurrentNrHRS()I
-#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;
-#isClosed()Z
-#clearCaches(Lorg/apache/hadoop/hbase/ServerName;)V
-#close()V
-#deleteCachedRegionLocation(Lorg/apache/hadoop/hbase/HRegionLocation;)V
-#getKeepAliveMasterService()Lorg/apache/hadoop/hbase/client/MasterKeepAliveConnection;
-#isDeadServer(Lorg/apache/hadoop/hbase/ServerName;)Z
-#getNonceGenerator()Lorg/apache/hadoop/hbase/client/NonceGenerator;
@0.99.0
+#getConnectionForEnvironment(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)Lorg/apache/hadoop/hbase/client/ClusterConnection;
+#<init>(Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V[deprecated]
+#getNonceGenerator()Lorg/apache/hadoop/hbase/client/NonceGenerator;
+#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;
+#listTableNames()[Lorg/apache/hadoop/hbase/TableName;
+#getTableNames()[Ljava/lang/String;
+#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;
+#close()V
+#getCurrentNrHRS()I
+#isAborted()Z
+#isClosed()Z
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getRegionCachePrefetch([B)Z
+#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z
+#setRegionCachePrefetch([BZ)V
+#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V
+#getAsyncProcess()Lorg/apache/hadoop/hbase/client/AsyncProcess;
+#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V
+#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V
+#updateCachedLocations([B[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
+#updateCachedLocations(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/Object;Lorg/apache/hadoop/hbase/ServerName;)V
+#updateCachedLocations(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
+#deleteCachedRegionLocation(Lorg/apache/hadoop/hbase/HRegionLocation;)V
+#getKeepAliveMasterService()Lorg/apache/hadoop/hbase/client/MasterKeepAliveConnection;
+#getMaster()Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MasterService$BlockingInterface;
+#getAdmin(Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#getAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#clearRegionCache([B)V
+#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;)V
+#clearRegionCache()V
+#clearCaches(Lorg/apache/hadoop/hbase/ServerName;)V
+#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;[B)V
+#locateRegion(Lorg/apache/hadoop/hbase/TableName;[BZZI)Lorg/apache/hadoop/hbase/RegionLocations;
+#locateRegion(Lorg/apache/hadoop/hbase/TableName;[BZZ)Lorg/apache/hadoop/hbase/RegionLocations;
+#relocateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[BI)Lorg/apache/hadoop/hbase/HRegionLocation;
+#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#locateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#locateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#locateRegions([BZZ)Ljava/util/List;
+#locateRegions(Lorg/apache/hadoop/hbase/TableName;ZZ)Ljava/util/List;
+#locateRegions([B)Ljava/util/List;
+#locateRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#isDeadServer(Lorg/apache/hadoop/hbase/ServerName;)Z
+#locateRegion([B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#isTableAvailable([B[[B)Z
+#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;[[B)Z
+#isTableAvailable([B)Z
+#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;)Z
+#isTableDisabled([B)Z
+#isTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#isTableEnabled([B)Z
+#isTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#getRegionLocation([B[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
+#getRegionLocation(Lorg/apache/hadoop/hbase/TableName;[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
+#isMasterRunning()Z
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#toString()Ljava/lang/String;
+#getAdmin()Lorg/apache/hadoop/hbase/client/Admin;
+#getRegionLocator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionLocator;
+#getTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable([BLjava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable([B)Lorg/apache/hadoop/hbase/client/HTableInterface;
+#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getConnectionForEnvironment(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)Lorg/apache/hadoop/hbase/client/HConnection;
-#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V[deprecated]
@0.99.1
+#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[BI)Lorg/apache/hadoop/hbase/RegionLocations;
-#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[BI)Lorg/apache/hadoop/hbase/HRegionLocation;
@0.99.2
+#getNewRpcRetryingCallerFactory(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
@1.0.0
+#isManaged()Z
+#getBackoffPolicy()Lorg/apache/hadoop/hbase/client/backoff/ClientBackoffPolicy;
+#getStatisticsTracker()Lorg/apache/hadoop/hbase/client/ServerStatisticTracker;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/client/BufferedMutatorParams;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
@1.1.3
*#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#listTableNames()[Lorg/apache/hadoop/hbase/TableName;[deprecated]
*#getTableNames()[Ljava/lang/String;[deprecated]
*#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getRegionCachePrefetch([B)Z[deprecated]
*#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z[deprecated]
*#setRegionCachePrefetch([BZ)V[deprecated]
*#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V[deprecated]
*#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#isMasterRunning()Z[deprecated]
@1.1.4
+#hasCellBlockSupport()Z
@1.1.5
+#getRpcControllerFactory()Lorg/apache/hadoop/hbase/ipc/RpcControllerFactory;
+#getRpcRetryingCallerFactory()Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
+#getConnectionConfiguration()Lorg/apache/hadoop/hbase/client/ConnectionConfiguration;
+#cacheLocation(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/RegionLocations;)V
@1.1.8
*#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#listTableNames()[Lorg/apache/hadoop/hbase/TableName;[deprecated]
*#getTableNames()[Ljava/lang/String;[deprecated]
*#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getRegionCachePrefetch([B)Z[deprecated]
*#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z[deprecated]
*#setRegionCachePrefetch([BZ)V[deprecated]
*#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V[deprecated]
*#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#isMasterRunning()Z[deprecated]
@1.2.0
+#getConnectionMetrics()Lorg/apache/hadoop/hbase/client/MetricsConnection;
-#getRpcControllerFactory()Lorg/apache/hadoop/hbase/ipc/RpcControllerFactory;
-#getRpcRetryingCallerFactory()Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
-#getConnectionConfiguration()Lorg/apache/hadoop/hbase/client/ConnectionConfiguration;
-#cacheLocation(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/RegionLocations;)V
@1.2.1
+#getRpcControllerFactory()Lorg/apache/hadoop/hbase/ipc/RpcControllerFactory;
+#getRpcRetryingCallerFactory()Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
+#getConnectionConfiguration()Lorg/apache/hadoop/hbase/client/ConnectionConfiguration;
@1.2.2
+#cacheLocation(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/RegionLocations;)V
@1.2.4
*#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#listTableNames()[Lorg/apache/hadoop/hbase/TableName;[deprecated]
*#getTableNames()[Ljava/lang/String;[deprecated]
*#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getRegionCachePrefetch([B)Z[deprecated]
*#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z[deprecated]
*#setRegionCachePrefetch([BZ)V[deprecated]
*#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V[deprecated]
*#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#isMasterRunning()Z[deprecated]
@1.3.2
*#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#listTableNames()[Lorg/apache/hadoop/hbase/TableName;[deprecated]
*#getTableNames()[Ljava/lang/String;[deprecated]
*#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
*#getRegionCachePrefetch([B)Z[deprecated]
*#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z[deprecated]
*#setRegionCachePrefetch([BZ)V[deprecated]
*#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V[deprecated]
*#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
*#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
*#isMasterRunning()Z[deprecated]
@1.7.0
+#getTableState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState;
+#getClusterId()Ljava/lang/String;
@1.7.1
-#getTableState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState;
@2.0.0-alpha-1
+#getClient(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ClientService$BlockingInterface;
+#getTableState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState;
+#getMaster()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/MasterProtos$MasterService$BlockingInterface;
+#getAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#getTableBuilder(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/TableBuilder;
+#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
-#<init>(Lorg/apache/hadoop/hbase/client/ClusterConnection;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V[deprecated]
-#getClient(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ClientService$BlockingInterface;
-#isManaged()Z
-#getHTableDescriptor([B)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
-#getHTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
-#getHTableDescriptors(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
-#getHTableDescriptorsByTableName(Ljava/util/List;)[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
-#listTableNames()[Lorg/apache/hadoop/hbase/TableName;[deprecated]
-#getTableNames()[Ljava/lang/String;[deprecated]
-#listTables()[Lorg/apache/hadoop/hbase/HTableDescriptor;[deprecated]
-#getRegionCachePrefetch([B)Z[deprecated]
-#getRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;)Z[deprecated]
-#setRegionCachePrefetch([BZ)V[deprecated]
-#setRegionCachePrefetch(Lorg/apache/hadoop/hbase/TableName;Z)V[deprecated]
-#processBatchCallback(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
-#processBatchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V[deprecated]
-#processBatch(Ljava/util/List;[BLjava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
-#processBatch(Ljava/util/List;Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V[deprecated]
-#updateCachedLocations([B[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
-#updateCachedLocations(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/Object;Lorg/apache/hadoop/hbase/HRegionLocation;)V
-#getMaster()Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MasterService$BlockingInterface;
-#getAdmin(Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
-#getAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
-#clearRegionCache([B)V
-#relocateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#locateRegion([B[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#locateRegions([BZZ)Ljava/util/List;
-#locateRegions([B)Ljava/util/List;
-#isTableAvailable([B[[B)Z
-#isTableAvailable([B)Z
-#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;)Z
-#isTableDisabled([B)Z
-#isTableEnabled([B)Z
-#getRegionLocation([B[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
-#getClusterId()Ljava/lang/String;
-#getTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable([BLjava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable([B)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/HTableInterface;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/client/CoprocessorHConnection

+###org/apache/hadoop/hbase/client/TableSnapshotScanner
@0.96.2-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;)V
+#next()Lorg/apache/hadoop/hbase/client/Result;
+#close()V
@0.98.13-hadoop1
+#renewLease()Z
@0.99.0
-#renewLease()Z
@1.0.2
+#renewLease()Z
@1.1.0
-#renewLease()Z
@1.1.1
+#renewLease()Z
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Z)V

+###org/apache/hadoop/hbase/constraint/Constraints
@0.95.0
+#enable(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#disable(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#remove(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#has(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)Z
+#add(Lorg/apache/hadoop/hbase/HTableDescriptor;[Ljava/lang/Class;)V
+#add(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/util/Pair;)V
+#add(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
+#setConfiguration(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
+#remove(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)V
+#enableConstraint(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)V
+#disableConstraint(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)V
+#enabled(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)Z
@3.0.0-alpha-1
+#enable(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#disable(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#remove(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#has(Lorg/apache/hadoop/hbase/client/TableDescriptor;Ljava/lang/Class;)Z
+#add(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;[Ljava/lang/Class;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#add(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;[Lorg/apache/hadoop/hbase/util/Pair;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#add(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#setConfiguration(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#remove(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#enableConstraint(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;Ljava/lang/Class;)V
+#disableConstraint(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;Ljava/lang/Class;)V
+#enabled(Lorg/apache/hadoop/hbase/client/TableDescriptor;Ljava/lang/Class;)Z
-#enable(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#disable(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#remove(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#has(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)Z
-#add(Lorg/apache/hadoop/hbase/HTableDescriptor;[Ljava/lang/Class;)V
-#add(Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/util/Pair;)V
-#add(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
-#setConfiguration(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)V
-#remove(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)V
-#enableConstraint(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)V
-#disableConstraint(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)V
-#enabled(Lorg/apache/hadoop/hbase/HTableDescriptor;Ljava/lang/Class;)Z

+###org/apache/hadoop/hbase/coprocessor/CoprocessorHost$Environment
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)V
+#startup()V
+#getInstance()Lorg/apache/hadoop/hbase/Coprocessor;
+#getPriority()I
+#getLoadSequence()I
+#getVersion()I
+#getHBaseVersion()Ljava/lang/String;
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getTable([B)Lorg/apache/hadoop/hbase/client/HTableInterface;
@0.95.2-hadoop1
+#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable([B)Lorg/apache/hadoop/hbase/client/HTableInterface;
@0.96.1-hadoop1
+#getTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
@0.98.0-hadoop1
+#getClassLoader()Ljava/lang/ClassLoader;
@2.0.0-alpha-1
+#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
+#getTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/Table;
-#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/HTableInterface;
-#getTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/HTableInterface;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/coprocessor/CoprocessorHost$Environment

+###org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment
@0.95.0
+#getRegion()Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
+#getSharedData()Ljava/util/concurrent/ConcurrentMap;
@0.98.11-hadoop1
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@0.99.0
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@1.0.0
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@1.1.0
+#getRegion()Lorg/apache/hadoop/hbase/regionserver/Region;
-#getRegion()Lorg/apache/hadoop/hbase/regionserver/HRegion;
@1.4.0
+#getMetricRegistryForRegionServer()Lorg/apache/hadoop/hbase/metrics/MetricRegistry;
@2.0.0-alpha4
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getOnlineRegions()Lorg/apache/hadoop/hbase/regionserver/OnlineRegions;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
@2.0.0-beta-1
+#createConnection(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Connection;
+#getCellBuilder()Lorg/apache/hadoop/hbase/RawCellBuilder;

+###org/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType
@0.98.0-hadoop1
+#values()[Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;

+###org/apache/hadoop/hbase/coprocessor/RegionServerObserver
@0.95.0
+#preStopRegionServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.98.0-hadoop1
+#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)V
+#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@0.98.7-hadoop1
+#preRollWALWriterRequest(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postRollWALWriterRequest(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.98.9-hadoop1
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@0.98.10-hadoop1
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@0.99.0
-#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
-#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@0.99.1
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@1.0.0
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@1.1.0
+#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/util/List;)V
+#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)V
-#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@2.0.0-alpha-1
+#preClearCompactionQueues(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postClearCompactionQueues(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@2.0.0-alpha4
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
+#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V[deprecated]
-#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/util/List;)V
-#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@2.1.0
+#preExecuteProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postExecuteProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@2.4.16
+#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
+#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
@2.5.0
-#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
-#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
@2.5.3
+#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
+#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
@3.0.0-alpha-1
-#preReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V
-#postReplicationSinkBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/client/Mutation;)V

+###org/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher
@0.95.0
+#<init>(Ljava/lang/String;)V
+#<init>()V
+#getName()Ljava/lang/String;
+#receive(Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#rethrowException()V
+#hasException()Z
+#getException()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;
+#addListener(Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionListener;)V

+###org/apache/hadoop/hbase/generated/master/procedures_jsp
@1.3.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight
@0.95.0
+#<init>(Ljava/lang/String;J)V
+#addWeight(J)V
+#getHost()Ljava/lang/String;
+#getWeight()J
@2.4.0
+#<init>(Ljava/lang/String;JJ)V
+#addWeight(JJ)V
+#getWeightForSsd()J
-#<init>(Ljava/lang/String;J)V
-#addWeight(J)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight

+###org/apache/hadoop/hbase/http/HttpConfig
@0.99.0
+#<init>()V
+#setPolicy(Lorg/apache/hadoop/hbase/http/HttpConfig$Policy;)V
+#isSecure()Z
+#getSchemePrefix()Ljava/lang/String;
+#getScheme(Lorg/apache/hadoop/hbase/http/HttpConfig$Policy;)Ljava/lang/String;
@1.0.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>()V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpConfig

+###org/apache/hadoop/hbase/http/jmx/JMXJsonServlet
@0.99.0
+#<init>()V
+#init()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/jmx/JMXJsonServlet

+###org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput
@2.0.0-alpha-1
+#write([B)V
+#write([BII)V
+#writeInt(I)V
+#write(Ljava/nio/ByteBuffer;)V
+#buffered()I
+#getPipeline()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#flush(Z)Ljava/util/concurrent/CompletableFuture;
+#recoverAndClose(Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#close()V
@2.0.0-beta-1
+#isBroken()Z
@2.2.6
+#getSyncedLength()J
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput

+###org/apache/hadoop/hbase/io/HalfStoreFileReader
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getLastKey()[B
+#midkey()[B
+#getFirstKey()[B
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
@0.95.2-hadoop1
+#getEntries()J
+#getFilterEntries()J
@0.96.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
@0.96.2-hadoop1
+#passesKeyRangeFilter(Lorg/apache/hadoop/hbase/client/Scan;)Z
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V
+#getLastKey()Lorg/apache/hadoop/hbase/Cell;
+#midkey()Lorg/apache/hadoop/hbase/Cell;
+#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/conf/Configuration;)V
-#getLastKey()[B
-#midkey()[B
-#getFirstKey()[B
@2.0.0-alpha4
+#getLastKey()Ljava/util/Optional;
+#midKey()Ljava/util/Optional;
+#getFirstKey()Ljava/util/Optional;
-#getLastKey()Lorg/apache/hadoop/hbase/Cell;
-#midkey()Lorg/apache/hadoop/hbase/Cell;
-#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/io/hfile/CacheableDeserializerIdManager
@0.95.0
+#<init>()V
+#registerDeserializer(Lorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)I
+#getDeserializer(I)Lorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;
@2.3.0
+#save()Ljava/util/Map;

+###org/apache/hadoop/hbase/io/hfile/CompoundBloomFilter
@2.0.0-alpha-1
+#<init>(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;)V
+#contains([BIILorg/apache/hadoop/hbase/nio/ByteBuff;)Z
+#contains(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/hbase/regionserver/BloomType;)Z
+#supportsAutoLoading()Z
+#getNumChunks()I
+#enableTestingStats()V
+#formatTestingStats()Ljava/lang/String;
+#getNumQueriesForTesting(I)J
+#getNumPositivesForTesting(I)J
+#toString()Ljava/lang/String;
@2.5.0
+#<init>(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)V
-#<init>(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;)V
@3.0.0-alpha-1
+#<init>(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;)V
-#<init>(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)V

+###org/apache/hadoop/hbase/io/hfile/HFile$FileInfo
@0.98.0-hadoop1
+#<init>()V
+#append([B[BZ)Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;
+#clear()V
+#comparator()Ljava/util/Comparator;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#firstKey()[B
+#get(Ljava/lang/Object;)[B
+#hashCode()I
+#headMap([B)Ljava/util/SortedMap;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#lastKey()[B
+#put([B[B)[B
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)[B
+#size()I
+#subMap([B[B)Ljava/util/SortedMap;
+#tailMap([B)Ljava/util/SortedMap;
+#values()Ljava/util/Collection;
+#lastKey()Ljava/lang/Object;
+#firstKey()Ljava/lang/Object;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.3.0
-###org/apache/hadoop/hbase/io/hfile/HFile$FileInfo

+###org/apache/hadoop/hbase/io/hfile/HFileBlock
@0.95.0
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#getDataBlockEncodingId()S
+#getOnDiskSizeWithHeader()I
+#getOnDiskSizeWithoutHeader()I
+#getUncompressedSizeWithoutHeader()I
+#getPrevBlockOffset()J
+#getBufferWithoutHeader()Ljava/nio/ByteBuffer;
+#getBufferReadOnly()Ljava/nio/ByteBuffer;
+#getBufferReadOnlyWithHeader()Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#assumeUncompressed()V
+#expectType(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#getOffset()J
+#getByteStream()Ljava/io/DataInputStream;
+#heapSize()J
+#readWithExtra(Ljava/io/InputStream;[BIII)Z
+#getNextBlockOnDiskSizeWithHeader()I
+#getSerializedLength()I
+#serialize(Ljava/nio/ByteBuffer;)V
+#serializeExtraInfo(Ljava/nio/ByteBuffer;)V
+#getDeserializer()Lorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;
+#equals(Ljava/lang/Object;)Z
+#doesIncludeMemstoreTS()Z
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#headerSize()I
@0.95.1-hadoop1
+#headerSize(I)I
+#getDummyHeaderForVersion()[B
@0.98.0-hadoop1
+#headerSize(Z)I
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
-#doesIncludeMemstoreTS()Z
-#headerSize(I)I
@0.98.7-hadoop1
+#isUnpacked()Z
@1.1.6
+#verifyUncompressed(Ljava/nio/ByteBuffer;Z)V
+#toStringHeader(Ljava/nio/ByteBuffer;)Ljava/lang/String;
-#assumeUncompressed()V
@1.2.0
+#assumeUncompressed()V
-#verifyUncompressed(Ljava/nio/ByteBuffer;Z)V
-#toStringHeader(Ljava/nio/ByteBuffer;)Ljava/lang/String;
@1.2.2
+#verifyUncompressed(Ljava/nio/ByteBuffer;Z)V
-#assumeUncompressed()V
@1.3.0
+#getNextBlockOnDiskSize()I
+#sanityCheckUncompressedSize()V
+#getMetaData()Ljava/nio/ByteBuffer;
-#getOnDiskSizeWithoutHeader()I
-#getPrevBlockOffset()J
-#getBufferReadOnlyWithHeader()Ljava/nio/ByteBuffer;
-#verifyUncompressed(Ljava/nio/ByteBuffer;Z)V
-#expectType(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#getOffset()J
-#readWithExtra(Ljava/io/InputStream;[BIII)Z
-#getNextBlockOnDiskSizeWithHeader()I
-#serializeExtraInfo(Ljava/nio/ByteBuffer;)V
-#getDummyHeaderForVersion()[B
-#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
@1.4.0
+#hashCode()I
@1.4.5
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockType;IIJLjava/nio/ByteBuffer;ZJIILorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#serialize(Ljava/nio/ByteBuffer;Z)V
-#serialize(Ljava/nio/ByteBuffer;)V
@2.0.0-alpha-1
+#getBufferWithoutHeader()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#getBufferReadOnly()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#serialize(Ljava/nio/ByteBuffer;)V
+#getMemoryType()Lorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;
+#deepClone()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockType;IIJLjava/nio/ByteBuffer;ZJIILorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#getUncompressedSizeWithoutHeader()I
-#getBufferWithoutHeader()Ljava/nio/ByteBuffer;
-#getBufferReadOnly()Ljava/nio/ByteBuffer;
-#getByteStream()Ljava/io/DataInputStream;
-#serialize(Ljava/nio/ByteBuffer;Z)V
@2.0.0-alpha2
-#getNextBlockOnDiskSize()I
-#getDataBlockEncodingId()S
-#sanityCheckUncompressedSize()V
-#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
@2.0.2
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockType;IIJLjava/nio/ByteBuffer;ZJIILorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#serialize(Ljava/nio/ByteBuffer;Z)V
-#serialize(Ljava/nio/ByteBuffer;)V
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockType;IIJLorg/apache/hadoop/hbase/nio/ByteBuff;ZJIILorg/apache/hadoop/hbase/io/hfile/HFileContext;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)V
+#refCnt()I
+#retain()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#release()Z
+#getBufferWithoutHeader(Z)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#getByteBuffAllocator()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;
+#isSharedMem()Z
+#retain()Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#retain()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockType;IIJLjava/nio/ByteBuffer;ZJIILorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#getMemoryType()Lorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;
-#deepClone()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@2.4.8
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
@2.4.14
+#touch()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
+#touch()Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
+#touch(Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
+#touch()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#getBufferWithoutHeader(Z)Lorg/apache/hadoop/hbase/nio/ByteBuff;
@2.5.0
+#getMetaData(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#getMetaData()Ljava/nio/ByteBuffer;
@3.0.0-alpha-1
+#getBufferWithoutHeader(Z)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#getMetaData()Ljava/nio/ByteBuffer;
-#touch()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#getMetaData(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
-#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
-#touch()Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
-#touch(Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#touch()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
@3.0.0-alpha-2
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
@3.0.0-alpha-3
+#getMetaData(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#getMetaData()Ljava/nio/ByteBuffer;

+###org/apache/hadoop/hbase/io/hfile/HFileScanner
@0.95.0
+#seekTo([B)I
+#seekTo([BII)I
+#reseekTo([B)I
+#reseekTo([BII)I
+#seekBefore([B)Z
+#seekBefore([BII)Z
+#seekTo()Z
+#next()Z
+#getKey()Ljava/nio/ByteBuffer;
+#getValue()Ljava/nio/ByteBuffer;
+#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
+#getKeyString()Ljava/lang/String;
+#getValueString()Ljava/lang/String;
+#getReader()Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#isSeeked()Z
@0.98.12-hadoop1
+#getNextIndexedKey()[B
@0.99.0
*#seekTo([B)I[deprecated]
*#seekTo([BII)I[deprecated]
+#seekTo(Lorg/apache/hadoop/hbase/Cell;)I
*#reseekTo([B)I[deprecated]
*#reseekTo([BII)I[deprecated]
+#reseekTo(Lorg/apache/hadoop/hbase/Cell;)I
*#seekBefore([B)Z[deprecated]
*#seekBefore([BII)Z[deprecated]
+#seekBefore(Lorg/apache/hadoop/hbase/Cell;)Z
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
-#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
-#getNextIndexedKey()[B
@1.0.1
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
@1.1.12
+#close()V
@1.2.0
-#close()V
@1.2.7
+#close()V
@1.3.0
-#close()V
@1.3.2
+#close()V
@2.0.0-alpha-1
+#getKey()Lorg/apache/hadoop/hbase/Cell;
+#getCell()Lorg/apache/hadoop/hbase/Cell;
*#getKeyString()Ljava/lang/String;[deprecated]
*#getValueString()Ljava/lang/String;[deprecated]
-#seekTo([B)I[deprecated]
-#seekTo([BII)I[deprecated]
-#reseekTo([B)I[deprecated]
-#reseekTo([BII)I[deprecated]
-#seekBefore([B)Z[deprecated]
-#seekBefore([BII)Z[deprecated]
-#getKey()Ljava/nio/ByteBuffer;
-#getKeyValue()Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/io/hfile/InclusiveCombinedBlockCache
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.0.0-beta-1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/FirstLevelBlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V

+###org/apache/hadoop/hbase/io/hfile/LruCachedBlock
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;J)V
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;JZ)V
+#access(J)V
+#getCachedTime()J
+#heapSize()J
+#compareTo(Lorg/apache/hadoop/hbase/io/hfile/LruCachedBlock;)I
+#equals(Ljava/lang/Object;)Z
+#getBuffer()Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#getCacheKey()Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;
+#getPriority()Lorg/apache/hadoop/hbase/io/hfile/BlockPriority;
+#compareTo(Ljava/lang/Object;)I
@0.99.0
+#hashCode()I

+###org/apache/hadoop/hbase/io/hfile/ResizableBlockCache
@0.99.0
+#setMaxSize(J)V

+###org/apache/hadoop/hbase/io/MetricsIOWrapperImpl
@1.4.0
+#<init>()V
+#getChecksumFailures()J

+###org/apache/hadoop/hbase/io/WritableWithSize
@0.95.0
+#getWritableSize()J

+###org/apache/hadoop/hbase/ipc/CallRunner
@0.98.0-hadoop1
+#getCall()Lorg/apache/hadoop/hbase/ipc/RpcServer$Call;
+#run()V
@0.98.16-hadoop1
+#setStatus(Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)V
@0.99.0
-#setStatus(Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)V
@1.0.3
+#setStatus(Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)V
@1.1.0
-#setStatus(Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)V
@1.1.3
+#setStatus(Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)V
@1.3.0
+#drop()V
@2.0.0-alpha-1
+#getRpcCall()Lorg/apache/hadoop/hbase/ipc/RpcCall;
+#getCall()Lorg/apache/hadoop/hbase/ipc/ServerCall;[deprecated]
-#getCall()Lorg/apache/hadoop/hbase/ipc/RpcServer$Call;
@2.5.0
-#getCall()Lorg/apache/hadoop/hbase/ipc/ServerCall;[deprecated]

+###org/apache/hadoop/hbase/ipc/RpcCallback
@2.0.0-alpha-1
+#run()V

+###org/apache/hadoop/hbase/ipc/RpcExecutor$Handler
@1.3.0
+#run()V
@1.7.2
-###org/apache/hadoop/hbase/ipc/RpcExecutor$Handler

+###org/apache/hadoop/hbase/mapred/TableRecordReaderImpl
@0.95.0
+#<init>()V
+#restart([B)V
+#init()V
+#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
+#setInputColumns([[B)V
+#setStartRow([B)V
+#setEndRow([B)V
+#setRowFilter(Lorg/apache/hadoop/hbase/filter/Filter;)V
+#close()V
+#createKey()Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;
+#createValue()Lorg/apache/hadoop/hbase/client/Result;
+#getPos()J
+#getProgress()F
+#next(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;)Z
@0.99.0
+#setHTable(Lorg/apache/hadoop/hbase/client/Table;)V
-#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableRecordReaderImpl

+###org/apache/hadoop/hbase/mapreduce/Export
@0.95.0
+#<init>()V
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/Export

+###org/apache/hadoop/hbase/mapreduce/IdentityTableMapper
@0.95.0
+#<init>()V
+#initJob(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Scan;Ljava/lang/Class;Lorg/apache/hadoop/mapreduce/Job;)V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/IdentityTableMapper

+###org/apache/hadoop/hbase/mapreduce/Import$KeyValueReducer
@0.98.14-hadoop1
+#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/Import$KeyValueReducer

+###org/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparablePartitioner
@0.98.14-hadoop1
+#<init>()V
+#getPartition(Lorg/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparable;Lorg/apache/hadoop/hbase/KeyValue;I)I
+#getPartition(Ljava/lang/Object;Ljava/lang/Object;I)I
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/Import$KeyValueWritableComparablePartitioner

+###org/apache/hadoop/hbase/mapreduce/JarFinder
@0.99.2
+#<init>()V
+#jarDir(Ljava/io/File;Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V
+#getJar(Ljava/lang/Class;)Ljava/lang/String;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/JarFinder

+###org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles$LoadQueueItem
@1.2.11
+#<init>([BLorg/apache/hadoop/fs/Path;)V
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
+#getFamily()[B
+#getFilePath()Lorg/apache/hadoop/fs/Path;
@2.0.0-alpha3
-#toString()Ljava/lang/String;
-#getFamily()[B
-#getFilePath()Lorg/apache/hadoop/fs/Path;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles$LoadQueueItem

+###org/apache/hadoop/hbase/mapreduce/MultiTableHFileOutputFormat
@2.0.0-alpha-1
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/List;)V
+#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/List;Ljava/lang/Class;)V
+#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/Map;)V
+#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/Map;Ljava/lang/Class;)V
@2.0.0-alpha2
+#createCompositeKey([B[B)[B
+#createCompositeKey([BLorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)[B
+#createCompositeKey(Ljava/lang/String;Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)[B
-#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
-#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/List;Ljava/lang/Class;)V
-#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/Map;)V
-#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Ljava/util/Map;Ljava/lang/Class;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/MultiTableHFileOutputFormat

+###org/apache/hadoop/hbase/mapreduce/MultithreadedTableMapper
@0.95.0
+#<init>()V
+#getNumberOfThreads(Lorg/apache/hadoop/mapreduce/JobContext;)I
+#setNumberOfThreads(Lorg/apache/hadoop/mapreduce/Job;I)V
+#getMapperClass(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/lang/Class;
+#setMapperClass(Lorg/apache/hadoop/mapreduce/Job;Ljava/lang/Class;)V
+#run(Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/MultithreadedTableMapper

+###org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication$Verifier
@0.95.0
+#<init>()V
+#map(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/replication/VerifyReplication$Verifier

+###org/apache/hadoop/hbase/mapreduce/SyncTable$SyncMapper
@0.98.14-hadoop1
+#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/SyncTable$SyncMapper

+###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl$RecordReader
@0.98.3-hadoop1
+#<init>()V
+#getScanner()Lorg/apache/hadoop/hbase/client/ClientSideRegionScanner;
+#initialize(Lorg/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl$InputSplit;Lorg/apache/hadoop/conf/Configuration;)V
+#nextKeyValue()Z
+#getCurrentKey()Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;
+#getCurrentValue()Lorg/apache/hadoop/hbase/client/Result;
+#getPos()J
+#getProgress()F
+#close()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl$RecordReader

+###org/apache/hadoop/hbase/mapreduce/TsvImporterMapper
@0.95.0
+#<init>()V
+#getTs()J
+#getSkipBadLines()Z
+#getBadLineCount()Lorg/apache/hadoop/mapreduce/Counter;
+#incrementBadLineCount(I)V
+#map(Lorg/apache/hadoop/io/LongWritable;Lorg/apache/hadoop/io/Text;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
+#map(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hadoop/mapreduce/Mapper$Context;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TsvImporterMapper

+###org/apache/hadoop/hbase/master/assignment/AssignmentManager
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore;)V
+#start()V
+#stop()V
+#isRunning()Z
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getAssignmentManagerMetrics()Lorg/apache/hadoop/hbase/master/MetricsAssignmentManager;
+#registerListener(Lorg/apache/hadoop/hbase/master/AssignmentListener;)V
+#unregisterListener(Lorg/apache/hadoop/hbase/master/AssignmentListener;)Z
+#setRegionStateListener(Lorg/apache/hadoop/hbase/RegionStateListener;)V
+#getRegionStates()Lorg/apache/hadoop/hbase/master/assignment/RegionStates;
+#getRegionStateStore()Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#isTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#isTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#isMetaRegion([B)Z
+#getMetaRegionFromName([B)Lorg/apache/hadoop/hbase/HRegionInfo;
+#isCarryingMeta(Lorg/apache/hadoop/hbase/ServerName;)Z
+#getMetaRegionSet()Ljava/util/Set;
+#isMetaInitialized()Z
+#isMetaRegionInTransition()Z
+#waitMetaInitialized(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#waitMetaInitialized(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#waitMetaLoaded(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#isMetaLoaded()Z
+#assignMeta(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#assignMeta(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#assign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#assign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#unassign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#unassign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#moveAsync(Lorg/apache/hadoop/hbase/master/RegionPlan;)Ljava/util/concurrent/Future;
+#waitForAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#waitForAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;J)Z
+#createAssignProcedures(Ljava/util/Collection;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedures(Ljava/util/Collection;Z)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createReopenProcedures(Ljava/util/Collection;)[Lorg/apache/hadoop/hbase/master/assignment/MoveRegionProcedure;
+#createAssignProcedures(Lorg/apache/hadoop/hbase/TableName;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createUnassignProcedures(Lorg/apache/hadoop/hbase/TableName;)[Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
+#createReopenProcedures(Lorg/apache/hadoop/hbase/TableName;)[Lorg/apache/hadoop/hbase/master/assignment/MoveRegionProcedure;
+#createAssignProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createUnassignProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
+#createMoveRegionProcedure(Lorg/apache/hadoop/hbase/master/RegionPlan;)Lorg/apache/hadoop/hbase/master/assignment/MoveRegionProcedure;
+#createSplitProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;[B)Lorg/apache/hadoop/hbase/master/assignment/SplitTableRegionProcedure;
+#createMergeProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
+#reportOnlineRegions(Lorg/apache/hadoop/hbase/ServerName;ILjava/util/Set;)V
+#checkOnlineRegionsReportForMeta(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;Ljava/util/Set;)V
+#computeRegionInTransitionStat()Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager$RegionInTransitionStat;
+#joinCluster()V
+#isFailoverCleanupDone()Z
+#setFailoverCleanupDone(Z)V
+#getFailoverCleanupEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
+#getNumRegionsOpened()I
+#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)V
+#offlineRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#onlineRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#getSnapShotOfAssignment(Ljava/util/Collection;)Ljava/util/Map;
+#getReopenStatus(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/util/Pair;
+#hasRegionsInTransition()Z
+#getRegionsInTransition()Ljava/util/List;
+#getAssignedRegions()Ljava/util/List;
+#getRegionInfo([B)Lorg/apache/hadoop/hbase/HRegionInfo;
+#markRegionAsOpening(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#undoRegionAsOpening(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#markRegionAsOpened(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#markRegionAsClosing(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#undoRegionAsClosing(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#markRegionAsClosed(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#markRegionAsSplit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#markRegionAsMerged(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#serverAdded(Lorg/apache/hadoop/hbase/ServerName;)V
+#serverRemoved(Lorg/apache/hadoop/hbase/ServerName;)V
+#getServerVersion(Lorg/apache/hadoop/hbase/ServerName;)I
+#killRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#killRegionServer(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;)V
@2.0.0-alpha2
+#setRegionNormalizer(Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;)V
+#getRegionNormalizer()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;
+#checkIfShouldMoveSystemRegionAsync()V
+#getOrderedRegions(Ljava/util/List;)Ljava/util/List;
+#getExcludedServersForSystemTable()Ljava/util/List;
@2.0.0-alpha4
+#getFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
+#getMetaRegionFromName([B)Lorg/apache/hadoop/hbase/client/RegionInfo;
+#waitMetaInitialized(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#assignMeta(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#assignMeta(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#unassign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#unassign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#move(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;J)Z
+#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
+#createSplitProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;[B)Lorg/apache/hadoop/hbase/master/assignment/SplitTableRegionProcedure;
+#createMergeProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
+#offlineRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#onlineRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#getRegionInfo([B)Lorg/apache/hadoop/hbase/client/RegionInfo;
+#markRegionAsSplit(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
-#getMetaRegionFromName([B)Lorg/apache/hadoop/hbase/HRegionInfo;
-#waitMetaInitialized(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#assignMeta(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#assignMeta(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#assign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#assign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#unassign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#unassign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#waitForAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#waitForAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;J)Z
-#createAssignProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createUnassignProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#createSplitProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;[B)Lorg/apache/hadoop/hbase/master/assignment/SplitTableRegionProcedure;
-#createMergeProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
-#offlineRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#onlineRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#getRegionInfo([B)Lorg/apache/hadoop/hbase/HRegionInfo;
-#markRegionAsSplit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#markRegionAsMerged(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-beta-1
+#createRoundRobinAssignProcedures(Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedures(Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#handleMetaRITOnCrashedServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#createAssignProcedures(Ljava/util/Collection;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedures(Ljava/util/Collection;Z)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedures(Lorg/apache/hadoop/hbase/TableName;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createReopenProcedures(Lorg/apache/hadoop/hbase/TableName;)[Lorg/apache/hadoop/hbase/master/assignment/MoveRegionProcedure;
-#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#checkOnlineRegionsReportForMeta(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;Ljava/util/Set;)V
-#getOrderedRegions(Ljava/util/List;)Ljava/util/List;
@2.0.0-beta-2
+#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#assignMeta(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#assignMeta(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.1
+#reportOnlineRegions(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
-#reportOnlineRegions(Lorg/apache/hadoop/hbase/ServerName;ILjava/util/Set;)V
-#getServerVersion(Lorg/apache/hadoop/hbase/ServerName;)I
-#killRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#killRegionServer(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;)V
@2.0.2
+#isMetaAssigned()Z
+#waitMetaAssigned(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#setRegionStateListener(Lorg/apache/hadoop/hbase/RegionStateListener;)V
-#setRegionNormalizer(Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;)V
-#getRegionNormalizer()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;
-#isMetaInitialized()Z
-#waitMetaInitialized(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
-#waitMetaInitialized(Lorg/apache/hadoop/hbase/procedure2/Procedure;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#createReopenProcedures(Ljava/util/Collection;)[Lorg/apache/hadoop/hbase/master/assignment/MoveRegionProcedure;
-#createMoveRegionProcedure(Lorg/apache/hadoop/hbase/master/RegionPlan;)Lorg/apache/hadoop/hbase/master/assignment/MoveRegionProcedure;
-#isFailoverCleanupDone()Z
-#setFailoverCleanupDone(Z)V
-#getFailoverCleanupEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
@2.0.3
+#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
+#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
+#processOfflineRegions()V
+#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)J
-#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;J)Z
-#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)V
-#handleMetaRITOnCrashedServer(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.6
+#createMergeProcedure([Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
+#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRSReports()Ljava/util/Map;
-#createMergeProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
-#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.0
+#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;J)Z
+#createMergeProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
+#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)V
+#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#handleMetaRITOnCrashedServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#createMergeProcedure([Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
-#processOfflineRegions()V
-#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)J
-#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#getRSReports()Ljava/util/Map;
@2.1.1
+#createRoundRobinAssignProcedures(Ljava/util/List;Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
+#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
+#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#waitForAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;J)Z
@2.1.2
+#processOfflineRegions()V
+#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)J
-#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)V
-#handleMetaRITOnCrashedServer(Lorg/apache/hadoop/hbase/ServerName;)V
@2.1.6
+#createMergeProcedure([Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
+#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRSReports()Ljava/util/Map;
-#createMergeProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
-#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.8
+#getRegionStatesCount(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionStatesCount;
@2.2.0
+#setupRIT(Ljava/util/List;)V
+#getRegionsOnServer(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
+#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)J
+#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;)J
+#unassign(Lorg/apache/hadoop/hbase/client/RegionInfo;)J
+#createMoveRegionProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#createRoundRobinAssignProcedures(Ljava/util/List;Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#createRoundRobinAssignProcedures(Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#createOneAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#createOneUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#createAssignProcedures(Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#createUnassignProceduresForDisabling(Lorg/apache/hadoop/hbase/TableName;)[Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#createMergeProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
+#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/assignment/RegionStateStore;)V
-#registerListener(Lorg/apache/hadoop/hbase/master/AssignmentListener;)V
-#unregisterListener(Lorg/apache/hadoop/hbase/master/AssignmentListener;)Z
-#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#assign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#unassign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#unassign(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#createRoundRobinAssignProcedures(Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createRoundRobinAssignProcedures(Ljava/util/List;Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedures(Ljava/util/List;)[Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createAssignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Z)Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;
-#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#createUnassignProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Z)Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#createUnassignProcedures(Lorg/apache/hadoop/hbase/TableName;)[Lorg/apache/hadoop/hbase/master/assignment/UnassignProcedure;
-#createMergeProcedure([Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
-#markRegionAsOpening(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#undoRegionAsOpening(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#markRegionAsOpened(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#markRegionAsClosing(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#undoRegionAsClosing(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#markRegionAsClosed(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#serverAdded(Lorg/apache/hadoop/hbase/ServerName;)V
-#serverRemoved(Lorg/apache/hadoop/hbase/ServerName;)V
-#getRSReports()Ljava/util/Map;
-#getRegionStatesCount(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionStatesCount;
@2.2.1
+#createMergeProcedure([Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
+#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRSReports()Ljava/util/Map;
-#createMergeProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/MergeTableRegionsProcedure;
-#markRegionAsMerged(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.2
+#getRegionStatesCount(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionStatesCount;
@2.2.3
+#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;ZZ)J
+#regionClosedAbnormally(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)V
-#submitServerCrash(Lorg/apache/hadoop/hbase/ServerName;Z)J
@2.2.6
+#assignAsync(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/concurrent/Future;
+#assignAsync(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/concurrent/Future;
@2.2.7
+#wakeMetaLoadedEvent()V
+#balance(Lorg/apache/hadoop/hbase/master/RegionPlan;)Ljava/util/concurrent/Future;
@2.3.0
+#loadRegionFromMeta(Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/RegionInfo;
-#wakeMetaLoadedEvent()V
-#balance(Lorg/apache/hadoop/hbase/master/RegionPlan;)Ljava/util/concurrent/Future;
@2.3.4
+#wakeMetaLoadedEvent()V
@2.3.5
+#balance(Lorg/apache/hadoop/hbase/master/RegionPlan;)Ljava/util/concurrent/Future;
@2.4.0
+#createUnassignProceduresForClosingExcessRegionReplicas(Lorg/apache/hadoop/hbase/TableName;I)[Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
-#isTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Z
-#isTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
-#balance(Lorg/apache/hadoop/hbase/master/RegionPlan;)Ljava/util/concurrent/Future;
@2.4.3
+#balance(Lorg/apache/hadoop/hbase/master/RegionPlan;)Ljava/util/concurrent/Future;
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/region/MasterRegion;)V
+#getTableRegions(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
+#getTableRegionsAndLocations(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/region/MasterRegion;)V
-#getTableRegions(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
-#getTableRegionsAndLocations(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/region/MasterRegion;)V
+#getTableRegions(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
+#getTableRegionsAndLocations(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V

+###org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer
@2.0.0-alpha-1
+#<init>()V
+#initialize()V
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#roundRobinAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#retainAssignment(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
@2.0.0-alpha4
+#randomAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
+#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
-#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
-#generateFavoredNodesForDaughter(Ljava/util/List;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.6
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.0
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.1.6
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.0
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.1
+#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#generateFavoredNodesForMergedRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.2.5
+#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
-#balanceCluster(Ljava/util/Map;)Ljava/util/List;
@2.5.0
-#initialize()V
-#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer

+###org/apache/hadoop/hbase/master/cleaner/ReplicationMetaCleaner
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/Stoppable;I)V
@2.0.0-beta-2
-###org/apache/hadoop/hbase/master/cleaner/ReplicationMetaCleaner

+###org/apache/hadoop/hbase/master/ClusterStatusPublisher$Publisher
@0.95.0
+#connect(Lorg/apache/hadoop/conf/Configuration;)V
+#publish(Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#close()V
@2.0.0-beta-1
+#publish(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
-#publish(Lorg/apache/hadoop/hbase/ClusterStatus;)V

+###org/apache/hadoop/hbase/master/HMaster
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run()V
+#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
+#getInfoServer()Lorg/apache/hadoop/hbase/util/InfoServer;
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getServerManager()Lorg/apache/hadoop/hbase/master/ServerManager;
+#getExecutorService()Lorg/apache/hadoop/hbase/executor/ExecutorService;
+#getMasterFileSystem()Lorg/apache/hadoop/hbase/master/MasterFileSystem;
+#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
+#regionServerStartup(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
+#getLastFlushedSequenceId(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
+#regionServerReport(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
+#reportRSFatalError(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
+#isMasterRunning()Z
+#isMasterRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningResponse;
+#runCatalogScan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CatalogScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CatalogScanResponse;
+#enableCatalogJanitor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableCatalogJanitorResponse;
+#isCatalogJanitorEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsCatalogJanitorEnabledResponse;
+#balance()Z
+#balance(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$BalanceResponse;
+#switchBalancer(ZLorg/apache/hadoop/hbase/master/HMaster$BalanceSwitchMode;)Z
+#synchronousBalanceSwitch(Z)Z
+#balanceSwitch(Z)Z
+#setBalancerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$SetBalancerRunningResponse;
+#setCatalogJanitorEnabled(Z)V
+#dispatchMergingRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DispatchMergingRegionsResponse;
+#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#moveRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$MoveRegionResponse;
+#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)V
+#createTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateTableResponse;
+#deleteTable([B)V
+#deleteTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteTableResponse;
+#getSchemaAlterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetSchemaAlterStatusResponse;
+#addColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#addColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AddColumnResponse;
+#modifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#modifyColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyColumnResponse;
+#deleteColumn([B[B)V
+#deleteColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteColumnResponse;
+#enableTable([B)V
+#enableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableTableResponse;
+#disableTable([B)V
+#disableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DisableTableResponse;
+#modifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#modifyTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyTableResponse;
+#checkTableModifiable([B)V
+#getClusterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetClusterStatusResponse;
+#getClusterStatus()Lorg/apache/hadoop/hbase/ClusterStatus;
+#getClusterId()Ljava/lang/String;
+#getLoadedCoprocessors()Ljava/lang/String;
+#getMasterStartTime()J
+#getMasterActiveTime()J
+#getCoprocessors()[Ljava/lang/String;
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getCatalogTracker()Lorg/apache/hadoop/hbase/catalog/CatalogTracker;
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;
+#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
+#getRegionServerFatalLogBuffer()Lorg/apache/hadoop/hbase/monitoring/MemoryBoundedLogMessageBuffer;
+#shutdown()V
+#shutdown(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ShutdownResponse;
+#stopMaster()V
+#stopMaster(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$StopMasterResponse;
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#isAborted()Z
+#isActiveMaster()Z
+#isInitialized()Z
+#isServerShutdownHandlerEnabled()Z
+#assignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AssignRegionResponse;
+#assignRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#unassignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$UnassignRegionResponse;
+#getTableDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableDescriptorsResponse;
+#getAverageLoad()D
+#offlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$OfflineRegionResponse;
+#registerService(Lcom/google/protobuf/Service;)Z
+#execMasterService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#constructMaster(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/HMaster;
+#main([Ljava/lang/String;)V
+#getHFileCleaner()Lorg/apache/hadoop/hbase/master/cleaner/HFileCleaner;
+#getSnapshotManagerForTesting()Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;
+#snapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$TakeSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$TakeSnapshotResponse;
+#getCompletedSnapshots(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListSnapshotResponse;
+#deleteSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteSnapshotResponse;
+#isSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsSnapshotDoneResponse;
+#restoreSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$RestoreSnapshotResponse;
+#isRestoreSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsRestoreSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsRestoreSnapshotDoneResponse;
@0.95.1-hadoop1
+#isInitializationStartsMetaRegionAssignment()Z
@0.95.2-hadoop1
+#getActiveMasterManager()Lorg/apache/hadoop/hbase/master/ActiveMasterManager;
+#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)V
+#enableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#disableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#checkTableModifiable(Lorg/apache/hadoop/hbase/TableName;)V
+#getTableNames(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableNamesResponse;
+#modifyNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyNamespaceResponse;
+#createNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateNamespaceResponse;
+#deleteNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteNamespaceResponse;
+#getNamespaceDescriptor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$GetNamespaceDescriptorResponse;
+#listNamespaceDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListNamespaceDescriptorsResponse;
+#listTableDescriptorsByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableDescriptorsByNamespaceResponse;
+#listTableNamesByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableNamesByNamespaceResponse;
+#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#deleteNamespace(Ljava/lang/String;)V
+#getNamespaceDescriptor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor;
+#listNamespaceDescriptors()Ljava/util/List;
+#listTableDescriptorsByNamespace(Ljava/lang/String;)Ljava/util/List;
+#listTableNamesByNamespace(Ljava/lang/String;)Ljava/util/List;
-#deleteTable([B)V
-#addColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#modifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#deleteColumn([B[B)V
-#enableTable([B)V
-#disableTable([B)V
-#modifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#checkTableModifiable([B)V
@0.96.0-hadoop1
+#runCatalogScan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanResponse;
+#enableCatalogJanitor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorResponse;
+#isCatalogJanitorEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledResponse;
+#balance(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceResponse;
+#setBalancerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningResponse;
+#dispatchMergingRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsResponse;
+#moveRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionResponse;
+#createTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableResponse;
+#deleteTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableResponse;
+#getSchemaAlterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusResponse;
+#addColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnResponse;
+#modifyColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnResponse;
+#deleteColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnResponse;
+#enableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableResponse;
+#disableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableResponse;
+#modifyTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableResponse;
+#getClusterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusResponse;
+#shutdown(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownResponse;
+#stopMaster(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterResponse;
+#assignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionResponse;
+#unassignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionResponse;
+#getTableDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsResponse;
+#getTableNames(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesResponse;
+#offlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionResponse;
+#snapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotResponse;
+#getCompletedSnapshots(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsResponse;
+#deleteSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotResponse;
+#isSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneResponse;
+#restoreSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotResponse;
+#isRestoreSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneResponse;
+#modifyNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceResponse;
+#createNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceResponse;
+#deleteNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceResponse;
+#getNamespaceDescriptor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorResponse;
+#listNamespaceDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsResponse;
+#listTableDescriptorsByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceResponse;
+#listTableNamesByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceResponse;
-#runCatalogScan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CatalogScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CatalogScanResponse;
-#enableCatalogJanitor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableCatalogJanitorResponse;
-#isCatalogJanitorEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsCatalogJanitorEnabledResponse;
-#balance(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$BalanceResponse;
-#setBalancerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$SetBalancerRunningResponse;
-#dispatchMergingRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DispatchMergingRegionsResponse;
-#moveRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$MoveRegionResponse;
-#createTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateTableResponse;
-#deleteTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteTableResponse;
-#getSchemaAlterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetSchemaAlterStatusResponse;
-#addColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AddColumnResponse;
-#modifyColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyColumnResponse;
-#deleteColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteColumnResponse;
-#enableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$EnableTableResponse;
-#disableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DisableTableResponse;
-#modifyTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyTableResponse;
-#getClusterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetClusterStatusResponse;
-#shutdown(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ShutdownResponse;
-#stopMaster(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$StopMasterResponse;
-#assignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$AssignRegionResponse;
-#unassignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$UnassignRegionResponse;
-#getTableDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableDescriptorsResponse;
-#getTableNames(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterMonitorProtos$GetTableNamesResponse;
-#offlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$OfflineRegionResponse;
-#snapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$TakeSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$TakeSnapshotResponse;
-#getCompletedSnapshots(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListSnapshotResponse;
-#deleteSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteSnapshotResponse;
-#isSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsSnapshotDoneResponse;
-#restoreSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$RestoreSnapshotResponse;
-#isRestoreSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsRestoreSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$IsRestoreSnapshotDoneResponse;
-#modifyNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ModifyNamespaceResponse;
-#createNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$CreateNamespaceResponse;
-#deleteNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$DeleteNamespaceResponse;
-#getNamespaceDescriptor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$GetNamespaceDescriptorResponse;
-#listNamespaceDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListNamespaceDescriptorsResponse;
-#listTableDescriptorsByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableDescriptorsByNamespaceResponse;
-#listTableNamesByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterAdminProtos$ListTableNamesByNamespaceResponse;
@0.96.2-hadoop1
+#getMasterAddressTracker()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
+#getRegionServerInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I
-#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
@0.98.0-hadoop1
+#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
-#getMasterAddressTracker()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
@0.98.1-hadoop1
+#getMasterAddressTracker()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
+#execProcedure(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureResponse;
+#isProcedureDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneResponse;
-#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
@0.98.6-hadoop1
+#reportRegionTransition(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionTransitionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionTransitionResponse;
@0.98.8-hadoop1
+#reportRegionStateTransition(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;Z)V
+#truncateTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableResponse;
-#reportRegionTransition(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionTransitionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionTransitionResponse;
@0.98.13-hadoop1
+#isBalancerEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledResponse;
+#isBalancerOn()Z
+#getLoadBalancerClassName()Ljava/lang/String;
@0.98.14-hadoop1
+#getSecurityCapabilities(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesResponse;
@0.98.19-hadoop1
+#listTableDescriptors(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)Ljava/util/List;
+#listTableNames(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;
@0.98.24-hadoop1
+#isMasterInMaintenanceMode(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeResponse;
+#isInMaintenanceMode()Z
@0.99.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)V
+#getMasterRpcServices()Lorg/apache/hadoop/hbase/master/MasterRpcServices;
+#getMasterCoprocessors()[Ljava/lang/String;
+#getMasterCoprocessorHost()Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost;
+#constructMaster(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)Lorg/apache/hadoop/hbase/master/HMaster;
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#run()V
-#getInfoServer()Lorg/apache/hadoop/hbase/util/InfoServer;
-#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#getExecutorService()Lorg/apache/hadoop/hbase/executor/ExecutorService;
-#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
-#getActiveMasterManager()Lorg/apache/hadoop/hbase/master/ActiveMasterManager;
-#getMasterAddressTracker()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
-#regionServerStartup(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
-#getLastFlushedSequenceId(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
-#regionServerReport(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
-#reportRSFatalError(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
-#isMasterRunning()Z
-#isMasterRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsMasterRunningResponse;
-#runCatalogScan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RunCatalogScanResponse;
-#enableCatalogJanitor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableCatalogJanitorResponse;
-#isCatalogJanitorEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsCatalogJanitorEnabledResponse;
-#balance(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalanceResponse;
-#switchBalancer(ZLorg/apache/hadoop/hbase/master/HMaster$BalanceSwitchMode;)Z
-#synchronousBalanceSwitch(Z)Z
-#setBalancerRunning(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SetBalancerRunningResponse;
-#dispatchMergingRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DispatchMergingRegionsResponse;
-#moveRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$MoveRegionResponse;
-#createTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateTableResponse;
-#deleteTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteTableResponse;
-#getSchemaAlterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetSchemaAlterStatusResponse;
-#addColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AddColumnResponse;
-#modifyColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyColumnResponse;
-#deleteColumn(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteColumnResponse;
-#enableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$EnableTableResponse;
-#disableTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DisableTableResponse;
-#modifyTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyTableResponse;
-#getClusterStatus(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetClusterStatusResponse;
-#getClusterId()Ljava/lang/String;
-#getCoprocessors()[Ljava/lang/String;
-#getCoprocessorHost()Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost;
-#getCatalogTracker()Lorg/apache/hadoop/hbase/catalog/CatalogTracker;
-#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
-#shutdown(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ShutdownResponse;
-#stopMaster(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$StopMasterResponse;
-#stop(Ljava/lang/String;)V
-#isStopped()Z
-#isAborted()Z
-#isMasterInMaintenanceMode(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsInMaintenanceModeResponse;
-#assignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$AssignRegionResponse;
-#unassignRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$UnassignRegionResponse;
-#getTableDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableDescriptorsResponse;
-#getTableNames(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetTableNamesResponse;
-#offlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$OfflineRegionResponse;
-#execMasterService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#constructMaster(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/HMaster;
-#snapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SnapshotResponse;
-#getCompletedSnapshots(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetCompletedSnapshotsResponse;
-#deleteSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteSnapshotResponse;
-#isSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsSnapshotDoneResponse;
-#restoreSnapshot(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$RestoreSnapshotResponse;
-#isRestoreSnapshotDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsRestoreSnapshotDoneResponse;
-#execProcedure(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ExecProcedureResponse;
-#isProcedureDone(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsProcedureDoneResponse;
-#modifyNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ModifyNamespaceResponse;
-#createNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$CreateNamespaceResponse;
-#deleteNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$DeleteNamespaceResponse;
-#getNamespaceDescriptor(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$GetNamespaceDescriptorResponse;
-#listNamespaceDescriptors(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListNamespaceDescriptorsResponse;
-#listTableDescriptorsByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableDescriptorsByNamespaceResponse;
-#listTableNamesByNamespace(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$ListTableNamesByNamespaceResponse;
-#reportRegionStateTransition(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
-#truncateTable(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$TruncateTableResponse;
-#isBalancerEnabled(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$IsBalancerEnabledResponse;
-#listTableDescriptors(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)Ljava/util/List;
-#listTableNames(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;
-#isInMaintenanceMode()Z
-#isBalancerOn()Z
-#getLoadBalancerClassName()Ljava/lang/String;
-#getSecurityCapabilities(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$SecurityCapabilitiesResponse;
@1.0.0
+#listTableDescriptors(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)Ljava/util/List;
+#listTableNames(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;
@1.1.0
+#isMasterProcedureExecutorEnabled()Z
+#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)J
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;)J
+#enableTable(Lorg/apache/hadoop/hbase/TableName;)J
+#disableTable(Lorg/apache/hadoop/hbase/TableName;)J
+#getMasterQuotaManager()Lorg/apache/hadoop/hbase/quotas/MasterQuotaManager;
+#getMasterProcedureExecutor()Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;
+#getLastMajorCompactionTimestamp(Lorg/apache/hadoop/hbase/TableName;)J
+#getLastMajorCompactionTimestampForRegion([B)J
+#isBalancerOn()Z
+#getLoadBalancerClassName()Ljava/lang/String;
-#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)V
-#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
-#enableTable(Lorg/apache/hadoop/hbase/TableName;)V
-#disableTable(Lorg/apache/hadoop/hbase/TableName;)V
@1.1.3
+#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[BJJ)J
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;JJ)J
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;ZJJ)V
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
+#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[BJJ)V
+#enableTable(Lorg/apache/hadoop/hbase/TableName;JJ)J
+#disableTable(Lorg/apache/hadoop/hbase/TableName;JJ)J
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)V
+#abortProcedure(JZ)Z
+#listProcedures()Ljava/util/List;
-#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)J
-#deleteTable(Lorg/apache/hadoop/hbase/TableName;)J
-#truncateTable(Lorg/apache/hadoop/hbase/TableName;Z)V
-#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)V
-#enableTable(Lorg/apache/hadoop/hbase/TableName;)J
-#disableTable(Lorg/apache/hadoop/hbase/TableName;)J
-#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@1.2.0
+#normalizeRegions()Z
+#getRegionServerVersion(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/String;
+#setInitialized(Z)V
+#getInitializedEvent()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;
+#isServerCrashProcessingEnabled()Z
+#setServerCrashProcessingEnabled(Z)V
+#getServerCrashProcessingEnabledEvent()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;
+#isNormalizerOn()Z
+#getRegionNormalizerTracker()Lorg/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker;
-#isMasterProcedureExecutorEnabled()Z
-#isServerShutdownHandlerEnabled()Z
@1.2.10
+#getSnapshotManager()Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;
-#getSnapshotManagerForTesting()Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;
@1.3.0
+#getTableNamespaceManager()Lorg/apache/hadoop/hbase/master/TableNamespaceManager;
+#balance(Z)Z
+#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/security/User;)V
+#createSystemTable(Lorg/apache/hadoop/hbase/HTableDescriptor;)J
+#getNumWALFiles()I
+#getWalProcedureStore()Lorg/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore;
+#getSplitPlanCount()J
+#getMergePlanCount()J
+#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
+#createNamespaceSync(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJZ)V
+#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
+#deleteNamespace(Ljava/lang/String;JJ)V
+#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#getSplitOrMergeTracker()Lorg/apache/hadoop/hbase/zookeeper/SplitOrMergeTracker;
-#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#deleteNamespace(Ljava/lang/String;)V
@1.3.3
+#getLoadBalancer()Lorg/apache/hadoop/hbase/master/LoadBalancer;
@1.4.0
+#move([B[B)V
+#getClusterStatusWithoutCoprocessor()Lorg/apache/hadoop/hbase/ClusterStatus;
+#getMasterFinishedInitializationTime()J
+#checkIfShouldMoveSystemRegionAsync()V
+#isInMaintenanceMode()Z
+#getLogCleaner()Lorg/apache/hadoop/hbase/master/cleaner/LogCleaner;
+#getMasterProcedureManagerHost()Lorg/apache/hadoop/hbase/procedure/MasterProcedureManagerHost;
-#assignRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.5.0
+#listNamespaces()Ljava/util/List;
+#getReplicationLoad([Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/HashMap;
@1.7.0
+#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
+#getNumLiveRegionServers()I
+#isOnline()Z
+#getActiveMaster()Lorg/apache/hadoop/hbase/ServerName;
+#getClusterId()Ljava/lang/String;
+#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/master/MetaRegionLocationCache;
@1.7.1
-#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
@2.0.0-alpha-1
+#getMasterMetrics()Lorg/apache/hadoop/hbase/master/MetricsMaster;
+#updateConfigurationForSpaceQuotaObserver(Lorg/apache/hadoop/conf/Configuration;)V
+#getMasterWalManager()Lorg/apache/hadoop/hbase/master/MasterWalManager;
+#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
+#getRegionNormalizer()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;
+#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
+#mergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
+#splitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;[BJJ)J
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;ZJJ)J
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
+#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[BJJ)J
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)J
+#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJZ)J
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;
+#getCatalogJanitor()Lorg/apache/hadoop/hbase/master/CatalogJanitor;
+#getInitializedEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
+#getServerCrashProcessingEnabledEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
+#getClusterSchema()Lorg/apache/hadoop/hbase/master/ClusterSchema;
+#listLocks()Ljava/util/List;
+#getMobCompactionState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;
+#reportMobCompactionStart(Lorg/apache/hadoop/hbase/TableName;)V
+#reportMobCompactionEnd(Lorg/apache/hadoop/hbase/TableName;)V
+#requestMobCompaction(Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;Z)V
+#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#getFavoredNodesManager()Lorg/apache/hadoop/hbase/favored/FavoredNodesManager;
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#removeReplicationPeer(Ljava/lang/String;)V
+#enableReplicationPeer(Ljava/lang/String;)V
+#disableReplicationPeer(Ljava/lang/String;)V
+#getReplicationPeerConfig(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
+#updateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#listReplicationPeers(Ljava/lang/String;)Ljava/util/List;
+#drainRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#listDrainingRegionServers()Ljava/util/List;
+#removeDrainFromRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#getLockManager()Lorg/apache/hadoop/hbase/master/locking/LockManager;
+#getQuotaObserverChore()Lorg/apache/hadoop/hbase/quotas/QuotaObserverChore;
+#getSpaceQuotaSnapshotNotifier()Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshotNotifier;
-#getTableNamespaceManager()Lorg/apache/hadoop/hbase/master/TableNamespaceManager;
-#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/security/User;)V
-#truncateTable(Lorg/apache/hadoop/hbase/TableName;ZJJ)V
-#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
-#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
-#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[BJJ)V
-#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)V
-#getClusterStatusWithoutCoprocessor()Lorg/apache/hadoop/hbase/ClusterStatus;
-#getMasterFinishedInitializationTime()J
-#getNumLiveRegionServers()I
-#checkIfShouldMoveSystemRegionAsync()V
-#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;
-#isOnline()Z
-#getInitializedEvent()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;
-#getServerCrashProcessingEnabledEvent()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent;
-#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
-#createNamespaceSync(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJZ)V
-#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
-#deleteNamespace(Ljava/lang/String;JJ)V
-#getNamespaceDescriptor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor;
-#listNamespaces()Ljava/util/List;
-#listNamespaceDescriptors()Ljava/util/List;
-#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
-#getReplicationLoad([Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/HashMap;
-#getActiveMaster()Lorg/apache/hadoop/hbase/ServerName;
-#getClusterId()Ljava/lang/String;
-#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/master/MetaRegionLocationCache;
@2.0.0-alpha2
+#run()V
+#getClientIdAuditPrefix()Ljava/lang/String;
+#getClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus$Options;)Lorg/apache/hadoop/hbase/ClusterStatus;
+#getMasterFinishedInitializationTime()J
+#checkIfShouldMoveSystemRegionAsync()V
+#recoverMeta()Z
-#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
-#isInitializationStartsMetaRegionAssignment()Z
@2.0.0-alpha3
+#createTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[BJJ)J
+#createSystemTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;)J
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;JJ)J
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;JJ)J
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;JJ)J
+#getClusterStatus(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterStatus;
+#getProcedures()Ljava/util/List;
+#getLocks()Ljava/util/List;
-#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[BJJ)J
-#createSystemTable(Lorg/apache/hadoop/hbase/HTableDescriptor;)J
-#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
-#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
-#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)J
-#getClusterStatus(Lorg/apache/hadoop/hbase/ClusterStatus$Options;)Lorg/apache/hadoop/hbase/ClusterStatus;
-#listProcedures()Ljava/util/List;
-#listLocks()Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#mergeRegions([Lorg/apache/hadoop/hbase/client/RegionInfo;ZJJ)J
+#splitRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[BJJ)J
+#constructMaster(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/HMaster;
+#decommissionRegionServers(Ljava/util/List;Z)V
+#listDecommissionedRegionServers()Ljava/util/List;
+#recommissionRegionServer(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)V
-#mergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
-#splitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;[BJJ)J
-#constructMaster(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)Lorg/apache/hadoop/hbase/master/HMaster;
-#drainRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#listDrainingRegionServers()Ljava/util/List;
-#removeDrainFromRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-beta-1
+#getClusterMetricsWithoutCoprocessor()Lorg/apache/hadoop/hbase/ClusterMetrics;
+#getClusterMetricsWithoutCoprocessor(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
+#getClusterMetrics()Lorg/apache/hadoop/hbase/ClusterMetrics;
+#getClusterMetrics(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterMetrics;
+#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
+#stop(Ljava/lang/String;)V
+#getSplitOrMergeTracker()Lorg/apache/hadoop/hbase/master/SplitOrMergeTracker;
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
-#getClusterStatus()Lorg/apache/hadoop/hbase/ClusterStatus;
-#getClusterStatus(Ljava/util/EnumSet;)Lorg/apache/hadoop/hbase/ClusterStatus;
-#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
-#getSplitOrMergeTracker()Lorg/apache/hadoop/hbase/zookeeper/SplitOrMergeTracker;
-#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@2.0.0-beta-2
+#decorateMasterConfiguration(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.2
+#updateConfigurationForQuotasObserver(Lorg/apache/hadoop/conf/Configuration;)V
-#updateConfigurationForSpaceQuotaObserver(Lorg/apache/hadoop/conf/Configuration;)V
-#isServerCrashProcessingEnabled()Z
-#setServerCrashProcessingEnabled(Z)V
-#getServerCrashProcessingEnabledEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
-#recoverMeta()Z
@2.0.3
+#waitUntilMetaOnline()Z
+#waitUntilNamespaceOnline()Z
@2.0.6
+#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;
@2.1.0
+#updateConfigurationForSpaceQuotaObserver(Lorg/apache/hadoop/conf/Configuration;)V
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)J
+#removeReplicationPeer(Ljava/lang/String;)J
+#enableReplicationPeer(Ljava/lang/String;)J
+#disableReplicationPeer(Ljava/lang/String;)J
+#updateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)J
+#remoteProcedureCompleted(J)V
+#remoteProcedureFailed(JLorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#getReplicationPeerManager()Lorg/apache/hadoop/hbase/master/replication/ReplicationPeerManager;
+#getReplicationLoad([Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/HashMap;
-#waitUntilMetaOnline()Z
-#waitUntilNamespaceOnline()Z
-#updateConfigurationForQuotasObserver(Lorg/apache/hadoop/conf/Configuration;)V
-#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
-#removeReplicationPeer(Ljava/lang/String;)V
-#enableReplicationPeer(Ljava/lang/String;)V
-#disableReplicationPeer(Ljava/lang/String;)V
-#updateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
-#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;
@2.1.1
+#waitForMetaOnline()Z
+#waitForNamespaceOnline()Z
+#updateConfigurationForQuotasObserver(Lorg/apache/hadoop/conf/Configuration;)V
-#updateConfigurationForSpaceQuotaObserver(Lorg/apache/hadoop/conf/Configuration;)V
@2.1.5
+#getWalGroupsReplicationStatus()Ljava/util/Map;
@2.1.6
+#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;
@2.1.8
+#getSnapshotQuotaObserverChore()Lorg/apache/hadoop/hbase/quotas/SnapshotQuotaObserverChore;
@2.2.0
+#getSplitWALManager()Lorg/apache/hadoop/hbase/master/SplitWALManager;
-#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
-#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;
-#getSnapshotQuotaObserverChore()Lorg/apache/hadoop/hbase/quotas/SnapshotQuotaObserverChore;
@2.2.1
+#executeRegionPlansWithThrottling(Ljava/util/List;)Ljava/util/List;
+#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;
@2.2.3
+#runReplicationBarrierCleaner()V
+#getSnapshotQuotaObserverChore()Lorg/apache/hadoop/hbase/quotas/SnapshotQuotaObserverChore;
@2.2.7
+#isOnline()Z
@2.3.0
+#getProcedureStore()Lorg/apache/hadoop/hbase/procedure2/store/ProcedureStore;
+#listNamespaces()Ljava/util/List;
+#getActiveMaster()Ljava/util/Optional;
+#getClusterId()Ljava/lang/String;
+#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/master/MetaRegionLocationCache;
-#getWalProcedureStore()Lorg/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore;
-#isOnline()Z
@2.3.4
+#isOnline()Z
@2.4.0
+#skipRegionManagementAction(Ljava/lang/String;)Z
+#getRegionNormalizerManager()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizerManager;
+#normalizeRegions(Lorg/apache/hadoop/hbase/client/NormalizeTableFilterParams;Z)Z
+#getCatalogJanitor()Lorg/apache/hadoop/hbase/master/janitor/CatalogJanitor;
+#getCompactionState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/CompactionState;
+#getMetaLocationSyncer()Lorg/apache/hadoop/hbase/master/zksyncer/MetaLocationSyncer;
-#getRegionNormalizer()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;
-#normalizeRegions()Z
-#getCatalogJanitor()Lorg/apache/hadoop/hbase/master/CatalogJanitor;
-#isOnline()Z
-#getSplitPlanCount()J
-#getMergePlanCount()J
-#getRegionNormalizerTracker()Lorg/apache/hadoop/hbase/zookeeper/RegionNormalizerTracker;
@2.4.1
+#isOnline()Z
@2.4.12
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#getConfigurationManager()Lorg/apache/hadoop/hbase/conf/ConfigurationManager;
@2.4.13
+#getHbckChore()Lorg/apache/hadoop/hbase/master/hbck/HbckChore;
-#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;
@2.5.0
+#isCatalogJanitorEnabled()Z
+#balance()Lorg/apache/hadoop/hbase/client/BalanceResponse;
+#balanceOrUpdateMetrics()Lorg/apache/hadoop/hbase/client/BalanceResponse;
+#balance(Lorg/apache/hadoop/hbase/client/BalanceRequest;)Lorg/apache/hadoop/hbase/client/BalanceResponse;
+#modifyColumnStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;JJ)J
+#modifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;JJ)J
+#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJZLjava/lang/String;)J
+#getBackupMasters()Ljava/util/List;
+#getActiveMasterInfoPort()I
+#getBackupMasterInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I
+#getRegionServers()Ljava/util/Iterator;
+#getHFileCleaners()Ljava/util/List;
+#flushMasterStore()V
+#getMasterRegion()Lorg/apache/hadoop/hbase/master/region/MasterRegion;
+#getLiveRegionServers()Ljava/util/Collection;
-#balance()Z
-#balance(Z)Z
-#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJZ)J
-#requestMobCompaction(Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;Z)V
-#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/master/MetaRegionLocationCache;
@3.0.0-alpha-1
+#balance()Z
+#balance(Z)Z
+#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJZ)J
+#registerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;)Z
+#getLoadBalancer()Lorg/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer;
+#transitReplicationPeerSyncReplicationState(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)J
+#getSyncReplicationReplayWALManager()Lorg/apache/hadoop/hbase/master/replication/SyncReplicationReplayWALManager;
+#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;
+#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/master/MetaRegionLocationCache;
+#getRSGroupInfoManager()Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfoManager;
-#waitForNamespaceOnline()Z
-#balance()Lorg/apache/hadoop/hbase/client/BalanceResponse;
-#balanceOrUpdateMetrics()Lorg/apache/hadoop/hbase/client/BalanceResponse;
-#balance(Lorg/apache/hadoop/hbase/client/BalanceRequest;)Lorg/apache/hadoop/hbase/client/BalanceResponse;
-#modifyColumnStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;JJ)J
-#modifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;JJ)J
-#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJZLjava/lang/String;)J
-#getBackupMasters()Ljava/util/List;
-#getActiveMasterInfoPort()I
-#getBackupMasterInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I
-#getRegionServers()Ljava/util/Iterator;
-#registerService(Lcom/google/protobuf/Service;)Z
-#getHFileCleaners()Ljava/util/List;
-#getHbckChore()Lorg/apache/hadoop/hbase/master/hbck/HbckChore;
-#flushMasterStore()V
-#getMasterRegion()Lorg/apache/hadoop/hbase/master/region/MasterRegion;
-#getLiveRegionServers()Ljava/util/Collection;
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#getConfigurationManager()Lorg/apache/hadoop/hbase/conf/ConfigurationManager;
@3.0.0-alpha-2
+#balance()Lorg/apache/hadoop/hbase/client/BalanceResponse;
+#balanceOrUpdateMetrics()Lorg/apache/hadoop/hbase/client/BalanceResponse;
+#balance(Lorg/apache/hadoop/hbase/client/BalanceRequest;)Lorg/apache/hadoop/hbase/client/BalanceResponse;
+#getActiveMasterInfoPort()I
+#getBackupMasterInfoPort(Lorg/apache/hadoop/hbase/ServerName;)I
+#getActiveMasterManager()Lorg/apache/hadoop/hbase/master/ActiveMasterManager;
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#getBackupMasters()Ljava/util/List;
+#getBootstrapNodes()Ljava/util/Iterator;
+#getMetaLocations()Ljava/util/List;
+#getLiveRegionServers()Ljava/util/Collection;
-#balance()Z
-#balance(Z)Z
-#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
-#getWalGroupsReplicationStatus()Ljava/util/Map;
-#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/master/MetaRegionLocationCache;
@3.0.0-alpha-3
+#modifyColumnStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;JJ)J
+#modifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;JJ)J
+#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJZLjava/lang/String;)J
+#getHFileCleaners()Ljava/util/List;
+#getHbckChore()Lorg/apache/hadoop/hbase/master/hbck/HbckChore;
+#getMasterRegion()Lorg/apache/hadoop/hbase/master/region/MasterRegion;
+#flushMasterStore()V
+#getConfigurationManager()Lorg/apache/hadoop/hbase/conf/ConfigurationManager;
-#restoreSnapshot(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;JJZ)J
-#getHbckChore()Lorg/apache/hadoop/hbase/master/HbckChore;

+###org/apache/hadoop/hbase/master/MasterMobCompactionThread
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#requestMobCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;Z)V
+#close()V
@2.5.0
-###org/apache/hadoop/hbase/master/MasterMobCompactionThread

+###org/apache/hadoop/hbase/master/MasterServices
@0.95.0
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;
+#getMasterFileSystem()Lorg/apache/hadoop/hbase/master/MasterFileSystem;
+#getServerManager()Lorg/apache/hadoop/hbase/master/ServerManager;
+#getExecutorService()Lorg/apache/hadoop/hbase/executor/ExecutorService;
+#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost;
+#checkTableModifiable([B)V
+#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)V
+#deleteTable([B)V
+#modifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#enableTable([B)V
+#disableTable([B)V
+#addColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#modifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#deleteColumn([B[B)V
+#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
+#isServerShutdownHandlerEnabled()Z
+#registerService(Lcom/google/protobuf/Service;)Z
+#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
@0.95.1-hadoop1
+#isInitialized()Z
@0.95.2-hadoop1
+#checkTableModifiable(Lorg/apache/hadoop/hbase/TableName;)V
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#enableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#disableTable(Lorg/apache/hadoop/hbase/TableName;)V
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)V
+#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#deleteNamespace(Ljava/lang/String;)V
+#getNamespaceDescriptor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor;
+#listNamespaceDescriptors()Ljava/util/List;
+#listTableDescriptorsByNamespace(Ljava/lang/String;)Ljava/util/List;
+#listTableNamesByNamespace(Ljava/lang/String;)Ljava/util/List;
-#checkTableModifiable([B)V
-#deleteTable([B)V
-#modifyTable([BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#enableTable([B)V
-#disableTable([B)V
-#addColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#modifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#deleteColumn([B[B)V
@0.98.8-hadoop1
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;Z)V
@0.98.24-hadoop1
+#isInMaintenanceMode()Z
@0.99.0
+#getMasterCoprocessorHost()Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost;
-#getCoprocessorHost()Lorg/apache/hadoop/hbase/master/MasterCoprocessorHost;
-#isInMaintenanceMode()Z
@1.1.0
+#getMasterQuotaManager()Lorg/apache/hadoop/hbase/quotas/MasterQuotaManager;
+#getMasterProcedureExecutor()Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;
+#isMasterProcedureExecutorEnabled()Z
+#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)J
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;)J
+#enableTable(Lorg/apache/hadoop/hbase/TableName;)J
+#disableTable(Lorg/apache/hadoop/hbase/TableName;)J
+#getLastMajorCompactionTimestamp(Lorg/apache/hadoop/hbase/TableName;)J
+#getLastMajorCompactionTimestampForRegion([B)J
-#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)V
-#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
-#enableTable(Lorg/apache/hadoop/hbase/TableName;)V
-#disableTable(Lorg/apache/hadoop/hbase/TableName;)V
@1.1.3
+#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[BJJ)J
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;JJ)J
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;ZJJ)V
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)V
+#enableTable(Lorg/apache/hadoop/hbase/TableName;JJ)J
+#disableTable(Lorg/apache/hadoop/hbase/TableName;JJ)J
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
+#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[BJJ)V
+#abortProcedure(JZ)Z
+#listProcedures()Ljava/util/List;
-#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[B)J
-#deleteTable(Lorg/apache/hadoop/hbase/TableName;)J
-#truncateTable(Lorg/apache/hadoop/hbase/TableName;Z)V
-#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#enableTable(Lorg/apache/hadoop/hbase/TableName;)J
-#disableTable(Lorg/apache/hadoop/hbase/TableName;)J
-#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)V
@1.2.0
+#isServerCrashProcessingEnabled()Z
-#isMasterProcedureExecutorEnabled()Z
-#isServerShutdownHandlerEnabled()Z
@1.3.0
+#getSnapshotManager()Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;
+#getTableNamespaceManager()Lorg/apache/hadoop/hbase/master/TableNamespaceManager;
+#createSystemTable(Lorg/apache/hadoop/hbase/HTableDescriptor;)J
+#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/security/User;)V
+#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
+#createNamespaceSync(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJZ)V
+#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
+#deleteNamespace(Ljava/lang/String;JJ)V
-#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#deleteNamespace(Ljava/lang/String;)V
@1.3.3
+#getLoadBalancer()Lorg/apache/hadoop/hbase/master/LoadBalancer;
@1.4.0
+#getMasterProcedureManagerHost()Lorg/apache/hadoop/hbase/procedure/MasterProcedureManagerHost;
+#isInMaintenanceMode()Z
+#getRegionServerVersion(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/String;
+#checkIfShouldMoveSystemRegionAsync()V
@1.5.0
+#listNamespaces()Ljava/util/List;
@1.7.0
+#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
@1.7.1
-#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
@2.0.0-alpha-1
+#getClusterSchema()Lorg/apache/hadoop/hbase/master/ClusterSchema;
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;
+#getMasterWalManager()Lorg/apache/hadoop/hbase/master/MasterWalManager;
+#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
+#getRegionNormalizer()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;
+#getCatalogJanitor()Lorg/apache/hadoop/hbase/master/CatalogJanitor;
+#getInitializedEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
+#getMasterMetrics()Lorg/apache/hadoop/hbase/master/MetricsMaster;
+#truncateTable(Lorg/apache/hadoop/hbase/TableName;ZJJ)J
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)J
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
+#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[BJJ)J
+#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
+#mergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
+#splitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;[BJJ)J
+#isActiveMaster()Z
+#listLocks()Ljava/util/List;
+#isStopping()Z
+#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#getFavoredNodesManager()Lorg/apache/hadoop/hbase/favored/FavoredNodesManager;
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#removeReplicationPeer(Ljava/lang/String;)V
+#enableReplicationPeer(Ljava/lang/String;)V
+#disableReplicationPeer(Ljava/lang/String;)V
+#getReplicationPeerConfig(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;
+#updateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#listReplicationPeers(Ljava/lang/String;)Ljava/util/List;
+#drainRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#listDrainingRegionServers()Ljava/util/List;
+#removeDrainFromRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#getLockManager()Lorg/apache/hadoop/hbase/master/locking/LockManager;
-#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;
-#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
-#getTableNamespaceManager()Lorg/apache/hadoop/hbase/master/TableNamespaceManager;
-#truncateTable(Lorg/apache/hadoop/hbase/TableName;ZJJ)V
-#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)V
-#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
-#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)V
-#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[BJJ)V
-#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/security/User;)V
-#createNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
-#createNamespaceSync(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJZ)V
-#modifyNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;JJ)V
-#deleteNamespace(Ljava/lang/String;JJ)V
-#getNamespaceDescriptor(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor;
-#listNamespaces()Ljava/util/List;
-#listNamespaceDescriptors()Ljava/util/List;
-#getRegionServerVersion(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/String;
-#checkIfShouldMoveSystemRegionAsync()V
@2.0.0-alpha2
+#getRegionServerVersion(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/String;
+#checkIfShouldMoveSystemRegionAsync()V
+#recoverMeta()Z
+#getClientIdAuditPrefix()Ljava/lang/String;
-#dispatchMergingRegions(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
@2.0.0-alpha3
+#createTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;[[BJJ)J
+#createSystemTable(Lorg/apache/hadoop/hbase/client/TableDescriptor;)J
+#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;JJ)J
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;JJ)J
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;JJ)J
+#getProcedures()Ljava/util/List;
+#getLocks()Ljava/util/List;
-#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;[[BJJ)J
-#createSystemTable(Lorg/apache/hadoop/hbase/HTableDescriptor;)J
-#modifyTable(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;JJ)J
-#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
-#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;JJ)J
-#listProcedures()Ljava/util/List;
-#listLocks()Ljava/util/List;
@2.0.0-alpha4
+#mergeRegions([Lorg/apache/hadoop/hbase/client/RegionInfo;ZJJ)J
+#splitRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;[BJJ)J
-#mergeRegions([Lorg/apache/hadoop/hbase/HRegionInfo;ZJJ)J
-#splitRegion(Lorg/apache/hadoop/hbase/HRegionInfo;[BJJ)J
-#isStopping()Z
-#drainRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
-#listDrainingRegionServers()Ljava/util/List;
-#removeDrainFromRegionServer(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-beta-1
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
-#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@2.0.0
+#isClusterUp()Z
@2.0.2
-#isServerCrashProcessingEnabled()Z
-#recoverMeta()Z
@2.1.0
+#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)J
+#removeReplicationPeer(Ljava/lang/String;)J
+#enableReplicationPeer(Ljava/lang/String;)J
+#disableReplicationPeer(Ljava/lang/String;)J
+#getReplicationPeerManager()Lorg/apache/hadoop/hbase/master/replication/ReplicationPeerManager;
+#updateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)J
-#addReplicationPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
-#removeReplicationPeer(Ljava/lang/String;)V
-#enableReplicationPeer(Ljava/lang/String;)V
-#disableReplicationPeer(Ljava/lang/String;)V
-#updateReplicationPeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
@2.2.0
+#getSplitWALManager()Lorg/apache/hadoop/hbase/master/SplitWALManager;
@2.2.1
+#executeRegionPlansWithThrottling(Ljava/util/List;)Ljava/util/List;
@2.2.3
+#runReplicationBarrierCleaner()V
@2.3.0
+#getAccessChecker()Lorg/apache/hadoop/hbase/security/access/AccessChecker;
+#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
@2.4.0
+#getRegionNormalizerManager()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizerManager;
+#getCatalogJanitor()Lorg/apache/hadoop/hbase/master/janitor/CatalogJanitor;
+#skipRegionManagementAction(Ljava/lang/String;)Z
+#normalizeRegions(Lorg/apache/hadoop/hbase/client/NormalizeTableFilterParams;Z)Z
+#getMetaLocationSyncer()Lorg/apache/hadoop/hbase/master/zksyncer/MetaLocationSyncer;
-#getRegionNormalizer()Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;
-#getCatalogJanitor()Lorg/apache/hadoop/hbase/master/CatalogJanitor;
@2.5.0
+#modifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;JJ)J
+#modifyColumnStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;JJ)J
+#flushMasterStore()V
@3.0.0-alpha-1
+#registerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;)Z
+#getSyncReplicationReplayWALManager()Lorg/apache/hadoop/hbase/master/replication/SyncReplicationReplayWALManager;
+#transitReplicationPeerSyncReplicationState(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)J
+#getRSGroupInfoManager()Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfoManager;
+#isBalancerOn()Z
-#modifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;JJ)J
-#modifyColumnStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;JJ)J
-#registerService(Lcom/google/protobuf/Service;)Z
-#flushMasterStore()V
@3.0.0-alpha-3
+#modifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;JJ)J
+#modifyColumnStoreFileTracker(Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;JJ)J
+#flushMasterStore()V

+###org/apache/hadoop/hbase/master/MetricsMasterFileSystem
@0.96.0-hadoop1
+#<init>()V
+#addSplit(JJ)V
+#addMetaWALSplit(JJ)V

+###org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan
@1.2.0
+#getInstance()Lorg/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan;
+#execute(Lorg/apache/hadoop/hbase/client/Admin;)V
@1.3.0
+#getType()Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;
@2.3.0
-###org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan

+###org/apache/hadoop/hbase/master/normalizer/NormalizationPlan
@1.2.0
+#execute(Lorg/apache/hadoop/hbase/client/Admin;)V
@1.3.0
+#getType()Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;
@2.3.0
+#submit(Lorg/apache/hadoop/hbase/master/MasterServices;)J
-#execute(Lorg/apache/hadoop/hbase/client/Admin;)V
@2.4.0
-#submit(Lorg/apache/hadoop/hbase/master/MasterServices;)J
@2.5.2
+#getPlanSizeMb()J
@3.0.0-alpha-1
-#getPlanSizeMb()J

+###org/apache/hadoop/hbase/master/NoSuchProcedureException
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/master/procedure/DeleteColumnFamilyProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;[B)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/master/procedure/DeleteColumnFamilyProcedure

+###org/apache/hadoop/hbase/master/procedure/EnableTableProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Z)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;ZLorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;ZLorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$TableQueue
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/TableName;I)V
+#requireExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#size()I
+#isEmpty()Z
+#poll()Lorg/apache/hadoop/hbase/procedure2/Procedure;
+#peek()Lorg/apache/hadoop/hbase/procedure2/Procedure;
+#add(Lorg/apache/hadoop/hbase/procedure2/Procedure;Z)V
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$Queue;)I
+#isAvailable()Z
+#releaseExclusiveLock()V
+#tryExclusiveLock(J)Z
+#releaseSharedLock()V
+#trySharedLock()Z
+#hasExclusiveLock()Z
+#isLocked()Z
+#isSuspended()Z
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$NamespaceQueue;I)V
+#getNamespaceQueue()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$NamespaceQueue;
-#<init>(Lorg/apache/hadoop/hbase/TableName;I)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/TableName;ILorg/apache/hadoop/hbase/procedure2/LockStatus;Lorg/apache/hadoop/hbase/procedure2/LockStatus;)V
-#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$NamespaceQueue;I)V
-#getNamespaceQueue()Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$NamespaceQueue;
-#releaseExclusiveLock()V
-#tryExclusiveLock(J)Z
-#releaseSharedLock()V
-#trySharedLock()Z
-#hasExclusiveLock()Z
-#isLocked()Z
-#isSuspended()Z
@2.0.0-beta-2
-###org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$TableQueue

+###org/apache/hadoop/hbase/master/procedure/ModifyColumnFamilyProcedure
@1.1.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/master/procedure/ModifyColumnFamilyProcedure

+###org/apache/hadoop/hbase/master/procedure/RSProcedureDispatcher$RegionOperation
@2.0.0-alpha-1
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-alpha4
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.2.0
-#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;

+###org/apache/hadoop/hbase/master/RegionPlan
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#setDestination(Lorg/apache/hadoop/hbase/ServerName;)V
+#getSource()Lorg/apache/hadoop/hbase/ServerName;
+#getDestination()Lorg/apache/hadoop/hbase/ServerName;
+#getRegionName()Ljava/lang/String;
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#compareTo(Lorg/apache/hadoop/hbase/master/RegionPlan;)I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@0.99.0
+#hashCode()I
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RegionPlan

+###org/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#prepare()Lorg/apache/hadoop/hbase/master/snapshot/DisabledTableSnapshotHandler;
+#snapshotRegions(Ljava/util/List;)V
+#prepare()Lorg/apache/hadoop/hbase/master/snapshot/TakeSnapshotHandler;
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
@1.2.10
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
@1.3.3
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
@1.4.6
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V

+###org/apache/hadoop/hbase/master/snapshot/SnapshotFileCache
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;JLjava/lang/String;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache$SnapshotFileInspector;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJLjava/lang/String;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache$SnapshotFileInspector;)V
+#triggerCacheRefreshForTesting()V
+#contains(Ljava/lang/String;)Z
+#stop(Ljava/lang/String;)V
+#isStopped()Z
@0.98.5-hadoop1
+#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#contains(Ljava/lang/String;)Z
@0.98.6-hadoop1
+#contains(Ljava/lang/String;)Z
-#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@0.98.10-hadoop1
+#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#contains(Ljava/lang/String;)Z
@0.99.0
+#contains(Ljava/lang/String;)Z
-#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.0.0
+#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#contains(Ljava/lang/String;)Z
@1.2.10
+#getUnreferencedFiles(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)Ljava/lang/Iterable;
-#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.3.0
+#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#getUnreferencedFiles(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)Ljava/lang/Iterable;
@1.3.3
+#getUnreferencedFiles(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)Ljava/lang/Iterable;
-#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.4.0
+#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#getUnreferencedFiles(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)Ljava/lang/Iterable;
@1.4.6
+#getUnreferencedFiles(Ljava/lang/Iterable;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)Ljava/lang/Iterable;
-#getUnreferencedFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;JJLjava/lang/String;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache$SnapshotFileInspector;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJLjava/lang/String;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache$SnapshotFileInspector;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;JLjava/lang/String;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache$SnapshotFileInspector;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJLjava/lang/String;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotFileCache$SnapshotFileInspector;)V

+###org/apache/hadoop/hbase/master/SplitLogManager$Task
@0.99.0
+#toString()Ljava/lang/String;
+#<init>()V
+#isOrphan()Z
+#isUnassigned()Z
+#heartbeatNoDetails(J)V
+#heartbeat(JILorg/apache/hadoop/hbase/ServerName;)V
+#setUnassigned()V

+###org/apache/hadoop/hbase/master/TableNamespaceManager
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#start()V
+#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor;
+#create(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#update(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#remove(Ljava/lang/String;)V
+#list()Ljava/util/NavigableSet;
@0.96.0-hadoop1
+#isTableAvailableAndInitialized()Z
@1.1.0
+#getMaxTables(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)J
+#getMaxRegions(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)J
@1.3.0
+#doesNamespaceExist(Ljava/lang/String;)Z
+#insertIntoNSTable(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#updateZKNamespaceManager(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#removeFromNSTable(Ljava/lang/String;)V
+#removeFromZKNamespaceManager(Ljava/lang/String;)V
+#isTableAvailableAndInitialized(Z)Z
+#validateTableAndRegionCount(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#create(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#update(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#remove(Ljava/lang/String;)V
-#isTableAvailableAndInitialized()Z
@2.0.0-alpha-1
+#isTableAvailableAndInitialized()Z
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#isTableAvailableAndInitialized(Z)Z
@2.0.0-beta-2
+#isStopped()Z
+#stop(Ljava/lang/String;)V
@3.0.0-alpha-1
+#addOrUpdateNamespace(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#insertNamespaceToMeta(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#deleteNamespace(Ljava/lang/String;)V
+#list()Ljava/util/List;
-#insertIntoNSTable(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#updateZKNamespaceManager(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#removeFromNSTable(Ljava/lang/String;)V
-#removeFromZKNamespaceManager(Ljava/lang/String;)V
-#list()Ljava/util/NavigableSet;
-#isTableAvailableAndInitialized()Z
-#isStopped()Z
-#stop(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest
@2.0.0-alpha-1
+#<init>(Ljava/util/Collection;Ljava/util/List;)V
+#getCompactionPartitions()Ljava/util/Collection;
+#getDelPartitions()Ljava/util/List;
@2.5.0
-###org/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest

+###org/apache/hadoop/hbase/mob/DefaultMobStoreFlusher
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
@2.5.0
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
@3.0.0-alpha-1
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
@3.0.0-alpha-3
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;

+###org/apache/hadoop/hbase/monitoring/MonitoredRPCHandlerImpl
@0.95.0
+#<init>()V
+#clone()Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandlerImpl;
+#getStatus()Ljava/lang/String;
+#getRPCQueueTime()J
+#getRPCStartTime()J
+#getRPC()Ljava/lang/String;
+#getRPC(Z)Ljava/lang/String;
+#getRPCPacketLength()J
+#getClient()Ljava/lang/String;
+#isRPCRunning()Z
+#isOperationRunning()Z
+#setRPC(Ljava/lang/String;[Ljava/lang/Object;J)V
+#setRPCPacket(Lcom/google/protobuf/Message;)V
+#setConnection(Ljava/lang/String;I)V
+#markComplete(Ljava/lang/String;)V
+#toMap()Ljava/util/Map;
+#toString()Ljava/lang/String;
+#toJSON()Ljava/lang/String;
+#expireNow()V
+#cleanup()V
+#setDescription(Ljava/lang/String;)V
+#setStatus(Ljava/lang/String;)V
+#abort(Ljava/lang/String;)V
+#resume(Ljava/lang/String;)V
+#pause(Ljava/lang/String;)V
+#getCompletionTimestamp()J
+#getStateTime()J
+#getState()Lorg/apache/hadoop/hbase/monitoring/MonitoredTask$State;
+#getStatusTime()J
+#getDescription()Ljava/lang/String;
+#getStartTime()J
+#clone()Lorg/apache/hadoop/hbase/monitoring/MonitoredTaskImpl;
+#clone()Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;
+#clone()Ljava/lang/Object;
@1.2.7
+#prettyPrintJournal()Ljava/lang/String;
+#disableStatusJournal()V
+#enableStatusJournal(Z)V
+#getStatusJournal()Ljava/util/List;
@1.3.0
-#prettyPrintJournal()Ljava/lang/String;
-#disableStatusJournal()V
-#enableStatusJournal(Z)V
-#getStatusJournal()Ljava/util/List;
@1.3.3
+#prettyPrintJournal()Ljava/lang/String;
+#disableStatusJournal()V
+#enableStatusJournal(Z)V
+#getStatusJournal()Ljava/util/List;
+#setWarnTime(J)V
+#getWarnTime()J
@1.4.0
-#prettyPrintJournal()Ljava/lang/String;
-#disableStatusJournal()V
-#enableStatusJournal(Z)V
-#getStatusJournal()Ljava/util/List;
@1.4.6
+#prettyPrintJournal()Ljava/lang/String;
+#disableStatusJournal()V
+#enableStatusJournal(Z)V
+#getStatusJournal()Ljava/util/List;
@2.0.0-alpha-1
+#setRPCPacket(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)V
-#setRPCPacket(Lcom/google/protobuf/Message;)V
-#prettyPrintJournal()Ljava/lang/String;
-#disableStatusJournal()V
-#enableStatusJournal(Z)V
-#getStatusJournal()Ljava/util/List;
-#setWarnTime(J)V
-#getWarnTime()J
@2.0.0-alpha2
+#setWarnTime(J)V
+#getWarnTime()J
@2.0.0-beta-1
+#setRPCPacket(Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)V
-#setRPCPacket(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)V
@2.0.2
+#prettyPrintJournal()Ljava/lang/String;
+#disableStatusJournal()V
+#enableStatusJournal(Z)V
+#getStatusJournal()Ljava/util/List;
@2.4.14
-#disableStatusJournal()V
-#enableStatusJournal(Z)V
@2.5.3
+#<init>(Ljava/lang/String;)V
-#<init>()V
@3.0.0-alpha-1
+#<init>()V
+#disableStatusJournal()V
+#enableStatusJournal(Z)V
-#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/monitoring/ThreadMonitoring
@0.95.0
+#<init>()V
+#getThreadInfo(Ljava/lang/Thread;)Ljava/lang/management/ThreadInfo;
+#formatThreadInfo(Ljava/lang/management/ThreadInfo;Ljava/lang/String;)Ljava/lang/String;
+#appendThreadInfo(Ljava/lang/StringBuilder;Ljava/lang/management/ThreadInfo;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/procedure/flush/MasterFlushTableProcedureManager
@0.99.0
+#<init>()V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#initialize(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#getProcedureSignature()Ljava/lang/String;
+#execProcedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)V
+#isProcedureDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
@2.0.0-alpha-1
+#execProcedure(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)V
+#isProcedureDone(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
-#execProcedure(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)V
-#isProcedureDone(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$ProcedureDescription;)Z
@2.0.0
+#checkPermissions(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$ProcedureDescription;Lorg/apache/hadoop/hbase/security/access/AccessChecker;Lorg/apache/hadoop/hbase/security/User;)V

+###org/apache/hadoop/hbase/procedure/RegionServerProcedureManager
@0.98.1-hadoop1
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start()V
+#stop(Z)V

+###org/apache/hadoop/hbase/procedure/Subprocedure
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureMember;Ljava/lang/String;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;JJ)V
+#getName()Ljava/lang/String;
+#getMemberName()Ljava/lang/String;
+#call()Ljava/lang/Void;
+#acquireBarrier()V
+#insideBarrier()V
+#cleanup(Ljava/lang/Exception;)V
+#cancel(Ljava/lang/String;Ljava/lang/Throwable;)V
+#receiveReachedGlobalBarrier()V
+#waitForLocallyCompleted()V
+#call()Ljava/lang/Object;
@0.99.0
+#insideBarrier()[B
-#insideBarrier()V

+###org/apache/hadoop/hbase/quotas/FileSystemUtilizationChore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V

+###org/apache/hadoop/hbase/quotas/policies/MissingSnapshotViolationPolicyEnforcement
@2.0.0-alpha-1
+#getInstance()Lorg/apache/hadoop/hbase/quotas/SpaceViolationPolicyEnforcement;
+#shouldCheckBulkLoads()Z
+#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
+#enable()V
+#disable()V
+#check(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getPolicyName()Ljava/lang/String;
@2.1.8
+#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
-#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
@2.2.0
+#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V
-#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
@2.2.3
+#computeBulkLoadSize(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)J
-#checkBulkLoad(Lorg/apache/hadoop/fs/FileSystem;Ljava/util/List;)V

+###org/apache/hadoop/hbase/quotas/QuotaLimiter
@1.1.0
+#checkQuota(JJ)V
+#grabQuota(JJ)V
+#consumeWrite(J)V
+#consumeRead(J)V
+#isBypass()Z
+#getReadAvailable()J
+#getWriteAvailable()J
+#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.1.8
-#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.0
+#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.4
-#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.7
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@1.3.0
+#checkQuota(JJ)V
+#grabQuota(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
@1.3.3
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@1.4.0
+#checkQuota(JJ)V
+#grabQuota(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
@1.4.5
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@1.5.0
+#checkQuota(JJJJJJ)V
+#grabQuota(JJJJJJ)V
+#consumeWrite(JJ)V
+#consumeRead(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
-#consumeWrite(J)V
-#consumeRead(J)V
@2.0.0-alpha-1
+#checkQuota(JJ)V
+#grabQuota(JJ)V
+#consumeWrite(J)V
+#consumeRead(J)V
-#checkQuota(JJJJJJ)V
-#grabQuota(JJJJJJ)V
-#consumeWrite(JJ)V
-#consumeRead(JJ)V
@2.0.0
+#checkQuota(JJJJ)V
+#grabQuota(JJJJ)V
-#checkQuota(JJ)V
-#grabQuota(JJ)V
@2.2.0
+#checkQuota(JJJJJJ)V
+#grabQuota(JJJJJJ)V
+#consumeWrite(JJ)V
+#consumeRead(JJ)V
-#checkQuota(JJJJ)V
-#grabQuota(JJJJ)V
-#consumeWrite(J)V
-#consumeRead(J)V

+###org/apache/hadoop/hbase/quotas/QuotaSnapshotStore
@2.0.0-alpha-1
+#getSpaceQuota(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;
+#getCurrentState(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#getTargetState(Ljava/lang/Object;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#filterBySubject(Ljava/lang/Object;)Ljava/lang/Iterable;
+#setCurrentState(Ljava/lang/Object;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#setRegionUsage(Ljava/util/Map;)V

+###org/apache/hadoop/hbase/quotas/QuotaUtil
@1.1.0
+#<init>()V
+#isQuotaEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#addTableQuota(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#deleteTableQuota(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
+#addNamespaceQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#deleteNamespaceQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;)V
+#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#deleteUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;)V
+#deleteUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)V
+#deleteUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Ljava/lang/String;)V
+#fetchUserQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)Ljava/util/Map;
+#fetchTableQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)Ljava/util/Map;
+#fetchNamespaceQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)Ljava/util/Map;
+#fetchGlobalQuotas(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;Lorg/apache/hadoop/hbase/quotas/QuotaUtil$KeyFromRow;)Ljava/util/Map;
+#calculateMutationSize(Lorg/apache/hadoop/hbase/client/Mutation;)J
+#calculateResultSize(Lorg/apache/hadoop/hbase/client/Result;)J
+#calculateResultSize(Ljava/util/List;)J
@2.0.0-alpha-1
+#addTableQuota(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#addNamespaceQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#addTableQuota(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#addNamespaceQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#addUserQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
@2.0.6
+#enableTableIfNotEnabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
+#disableTableIfNotDisabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
@2.1.0
-#enableTableIfNotEnabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
-#disableTableIfNotDisabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
@2.1.5
+#enableTableIfNotEnabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
+#disableTableIfNotDisabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
@2.2.0
+#addRegionServerQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#deleteRegionServerQuota(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;)V
+#fetchUserQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;Ljava/util/Map;D)Ljava/util/Map;
+#fetchTableQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;Ljava/util/Map;)Ljava/util/Map;
+#fetchNamespaceQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;D)Ljava/util/Map;
+#fetchRegionServerQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)Ljava/util/Map;
-#fetchUserQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)Ljava/util/Map;
-#fetchTableQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)Ljava/util/Map;
-#fetchNamespaceQuotas(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)Ljava/util/Map;
-#enableTableIfNotEnabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
-#disableTableIfNotDisabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
@2.2.1
+#enableTableIfNotEnabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
+#disableTableIfNotDisabled(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V

+###org/apache/hadoop/hbase/quotas/TableQuotaSnapshotStore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/quotas/QuotaObserverChore;Ljava/util/Map;)V
+#getSpaceQuota(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;
+#getCurrentState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#getTargetState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#filterBySubject(Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/Iterable;
+#setCurrentState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#setRegionUsage(Ljava/util/Map;)V
+#setCurrentState(Ljava/lang/Object;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#filterBySubject(Ljava/lang/Object;)Ljava/lang/Iterable;
+#getTargetState(Ljava/lang/Object;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#getCurrentState(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#getSpaceQuota(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$SpaceQuota;

+###org/apache/hadoop/hbase/regionserver/CellArrayMap
@2.0.0-alpha-1
+#<init>(Ljava/util/Comparator;[Lorg/apache/hadoop/hbase/Cell;IIZ)V

+###org/apache/hadoop/hbase/regionserver/ChunkCreator
@2.0.0-alpha-1
+#initialize(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
@2.0.3
+#getInstance()Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
@2.1.0
-#getInstance()Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
@2.1.2
+#getInstance()Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
@2.2.6
+#initialize(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;F)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
-#initialize(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
@2.3.0
+#initialize(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
-#initialize(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;F)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
@2.3.2
+#initialize(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;F)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;
-#initialize(IZJFFLorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator;

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionPolicy
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
+#isMajorCompaction(Ljava/util/Collection;)Z
+#throttleCompaction(J)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@0.98.0-hadoop1
-#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
@0.98.11-hadoop1
+#getConf()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionConfiguration;
@0.98.19-hadoop1
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#isMajorCompaction(Ljava/util/Collection;)Z
@0.99.0
+#isMajorCompaction(Ljava/util/Collection;)Z
-#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#getConf()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionConfiguration;
@0.99.2
+#getConf()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionConfiguration;
@1.3.0
+#shouldPerformMajorCompaction(Ljava/util/Collection;)Z
-#isMajorCompaction(Ljava/util/Collection;)Z

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionWindow
@0.98.19-hadoop1
+#<init>()V
+#compareToTimestamp(J)I
+#nextEarlierWindow()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionWindow;
+#startMillis()J
+#endMillis()J
+#toString()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/CompactionWindow

+###org/apache/hadoop/hbase/regionserver/compactions/Compactor
@0.95.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Ljava/util/List;
+#compactForTesting(Ljava/util/Collection;Z)Ljava/util/List;
+#getProgress()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionProgress;
@0.98.0-hadoop1
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Ljava/util/List;
-#compactForTesting(Ljava/util/Collection;Z)Ljava/util/List;
@2.5.0
+#isCompacting()Z
@3.0.0-alpha-1
-#isCompacting()Z
@3.0.0-alpha-3
+#isCompacting()Z

+###org/apache/hadoop/hbase/regionserver/handler/FinishRegionRecoveringHandler
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Ljava/lang/String;Ljava/lang/String;)V
+#process()V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/regionserver/handler/FinishRegionRecoveringHandler

+###org/apache/hadoop/hbase/regionserver/HRegionServer
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run()V
+#getRegionServerAccounting()Lorg/apache/hadoop/hbase/regionserver/RegionServerAccounting;
+#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
+#createRegionLoad(Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$RegionLoad;
+#isOnline()Z
+#getMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServer;
+#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
+#getWAL()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#getCatalogTracker()Lorg/apache/hadoop/hbase/catalog/CatalogTracker;
+#stop(Ljava/lang/String;)V
+#waitForServerOnline()V
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
+#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServer;
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#abort(Ljava/lang/String;)V
+#isAborted()Z
+#getLastSequenceId([B)J
+#getInfoServer()Lorg/apache/hadoop/hbase/util/InfoServer;
+#isStopped()Z
+#isStopping()Z
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getNumberOfOnlineRegions()I
+#getOnlineRegionsLocalContext()Ljava/util/Collection;
+#addToOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#getCopyOfOnlineRegionsSortedBySize()Ljava/util/SortedMap;
+#getStartcode()J
+#getFlushRequester()Lorg/apache/hadoop/hbase/regionserver/FlushRequester;
+#getLeases()Lorg/apache/hadoop/hbase/regionserver/Leases;
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#toString()Ljava/lang/String;
+#getThreadWakeFrequency()I
+#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getCompactionRequester()Lorg/apache/hadoop/hbase/regionserver/CompactionRequestor;
+#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost;
+#getRegionsInTransitionInRS()Ljava/util/concurrent/ConcurrentMap;
+#getExecutorService()Lorg/apache/hadoop/hbase/executor/ExecutorService;
+#startRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)Ljava/lang/Thread;
+#startRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/lang/String;)Ljava/lang/Thread;
+#constructRegionServer(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#main([Ljava/lang/String;)V
+#getOnlineRegions([B)Ljava/util/List;
+#getCoprocessors()[Ljava/lang/String;
+#getOnlineRegion([B)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getFromOnlineRegions(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#removeFromOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;)Z
+#checkOOME(Ljava/lang/Throwable;)Z
+#checkFileSystem()Z
+#get(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetResponse;
+#multiGet(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiGetRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiGetResponse;
+#mutate(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateResponse;
+#scan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanResponse;
+#bulkLoadHFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileResponse;
+#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#multi(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiResponse;
+#getRegionInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse;
+#getStoreFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileResponse;
+#getOnlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
+#openRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionResponse;
+#closeRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionResponse;
+#flushRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionResponse;
+#splitRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionResponse;
+#mergeRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsResponse;
+#compactRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionResponse;
+#replicateWALEntry(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#rollWALWriter(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterResponse;
+#stopServer(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerResponse;
+#getServerInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoResponse;
+#getCompactSplitThread()Lorg/apache/hadoop/hbase/regionserver/CompactSplitThread;
@0.95.1-hadoop1
+#getScannerHolder(J)Lorg/apache/hadoop/hbase/regionserver/RegionScannerHolder;
+#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;
+#getRecoveringRegions()Ljava/util/Map;
+#getRegionBlockLocations(Ljava/lang/String;)[Ljava/net/InetSocketAddress;
+#updateRegionFavoredNodesMapping(Ljava/lang/String;Ljava/util/List;)V
+#getFavoredNodesForRegion(Ljava/lang/String;)[Ljava/net/InetSocketAddress;
+#replay(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiResponse;
-#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServer;
@0.95.2-hadoop1
+#createRegionLoad(Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionLoad;
+#getOnlineRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#getScannerHolder(J)Lorg/apache/hadoop/hbase/regionserver/RegionScannerHolder;
-#createRegionLoad(Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$RegionLoad;
-#getCopyOfOnlineRegionsSortedBySize()Ljava/util/SortedMap;
-#getOnlineRegions([B)Ljava/util/List;
@0.96.0-hadoop1
+#replay(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#updateFavoredNodes(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
-#multiGet(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiGetRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiGetResponse;
-#replay(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiResponse;
@0.96.2-hadoop1
+#getMasterAddressTracker()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
-#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
@0.98.0-hadoop1
+#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)I
+#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
+#getNonceManager()Lorg/apache/hadoop/hbase/regionserver/ServerNonceManager;
-#getMasterAddressTracker()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
@0.98.1-hadoop1
+#getMasterAddressTracker()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
-#getMasterAddressManager()Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;
@0.98.4-hadoop1
+#getCacheConfig()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
@0.98.6-hadoop1
+#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@0.98.8-hadoop1
+#registerService(Lcom/google/protobuf/Service;)Z
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#execRegionServerService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#getReplicationSourceService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSourceService;
+#getReplicationSinkService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSinkService;
-#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@0.98.10-hadoop1
+#getHostname(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getHeapMemoryManager()Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
@0.98.11-hadoop1
+#getCompactionPressure()D
@0.98.14-hadoop1
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
@0.99.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)V
+#getClusterId()Ljava/lang/String;
+#getRegionServerMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServer;
+#getShortCircuitConnection()Lorg/apache/hadoop/hbase/client/HConnection;
+#getMetaTableLocator()Lorg/apache/hadoop/hbase/zookeeper/MetaTableLocator;
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#getRSRpcServices()Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;
+#getInfoServer()Lorg/apache/hadoop/hbase/http/InfoServer;
+#getCoordinatedStateManager()Lorg/apache/hadoop/hbase/coordination/BaseCoordinatedStateManager;
+#getRegionServerCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost;
+#constructRegionServer(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#getRegionServerCoprocessors()[Ljava/lang/String;
+#getRegionByEncodedName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getCoordinatedStateManager()Lorg/apache/hadoop/hbase/CoordinatedStateManager;
-#getHostname(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
-#registerService(Lcom/google/protobuf/Service;)Z
-#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)I
-#getMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServer;
-#getCatalogTracker()Lorg/apache/hadoop/hbase/catalog/CatalogTracker;
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
-#getInfoServer()Lorg/apache/hadoop/hbase/util/InfoServer;
-#getZooKeeperWatcher()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
-#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost;
-#startRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)Ljava/lang/Thread;
-#startRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/lang/String;)Ljava/lang/Thread;
-#constructRegionServer(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
-#getCoprocessors()[Ljava/lang/String;
-#checkOOME(Ljava/lang/Throwable;)Z
-#get(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetResponse;
-#mutate(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateResponse;
-#scan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanResponse;
-#bulkLoadHFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileResponse;
-#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#execRegionServerService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#getReplicationSourceService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSourceService;
-#getReplicationSinkService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSinkService;
-#multi(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiResponse;
-#getRegionInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse;
-#getStoreFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileResponse;
-#getOnlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
-#openRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionResponse;
-#closeRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionResponse;
-#flushRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionResponse;
-#splitRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionResponse;
-#mergeRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsResponse;
-#compactRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionResponse;
-#replicateWALEntry(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
-#replay(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
-#rollWALWriter(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterResponse;
-#stopServer(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerResponse;
-#getServerInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoResponse;
-#updateFavoredNodes(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
-#getHeapMemoryManager()Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
-#getCompactionPressure()D
@0.99.1
+#registerService(Lcom/google/protobuf/Service;)Z
+#execRegionServerService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
@0.99.2
+#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
+#getConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;
+#updateConfiguration()V
-#getWAL()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
-#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
-#getShortCircuitConnection()Lorg/apache/hadoop/hbase/client/HConnection;
@1.0.0
+#getHeapMemoryManager()Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
@1.0.2
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;)V
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
@1.1.0
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#getLastSequenceId([B)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
+#addToOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#getChoreService()Lorg/apache/hadoop/hbase/ChoreService;
+#getRegionServerQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerQuotaManager;
+#getOnlineTables()Ljava/util/Set;
+#getOnlineRegion([B)Lorg/apache/hadoop/hbase/regionserver/Region;
+#getFromOnlineRegions(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
+#removeFromOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/ServerName;)Z
+#getRegionByEncodedName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
+#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
+#getCompactionPressure()D
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;)V
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
-#getLastSequenceId([B)J
-#addToOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#getOnlineRegion([B)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#getFromOnlineRegions(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#removeFromOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;)Z
-#getRegionByEncodedName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@1.1.1
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;)V
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
@1.2.0
+#walRollRequestFinished()Z
@1.2.7
+#stop(Ljava/lang/String;Z)V
+#getReplicationSourceService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSourceService;
@1.3.0
+#getOnlineRegions()Ljava/util/List;
+#getFlushThroughputController()Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;
+#getFlushPressure()D
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#getMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServer;
-#stop(Ljava/lang/String;Z)V
-#getReplicationSourceService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSourceService;
@1.3.2
+#stop(Ljava/lang/String;Z)V
+#getReplicationSourceService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSourceService;
@1.4.0
+#getWALs()Ljava/util/List;
+#unassign([B)V
@1.5.0
+#getWalGroupsReplicationStatus()Ljava/util/Map;
@1.7.0
+#getNamedQueueRecorder()Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;
@1.7.2
+#isShutdownHookInstalled()Z
@2.0.0-alpha-1
+#reportRegionSizesForQuotas(Ljava/util/Map;)Z
+#createRegionLoad(Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionLoad;
+#getWalRoller()Lorg/apache/hadoop/hbase/regionserver/LogRoller;
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
+#getClusterConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#getLastSequenceId([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
+#getRegionServerRpcQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerRpcQuotaManager;
+#getCompactSplitThread()Lorg/apache/hadoop/hbase/regionserver/CompactSplit;
+#execRegionServerService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#getSecureBulkLoadManager()Lorg/apache/hadoop/hbase/regionserver/SecureBulkLoadManager;
+#regionLock(Ljava/util/List;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/client/locking/EntityLock;
+#getRegionServerSpaceQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerSpaceQuotaManager;
-#isShutdownHookInstalled()Z
-#getNamedQueueRecorder()Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;
-#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
-#createRegionLoad(Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionLoad;
-#getConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;
-#stop(Ljava/lang/String;Z)V
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#getLastSequenceId([B)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getRegionServerQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerQuotaManager;
-#getWalGroupsReplicationStatus()Ljava/util/Map;
-#getCompactSplitThread()Lorg/apache/hadoop/hbase/regionserver/CompactSplitThread;
-#execRegionServerService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
@2.0.0-alpha2
+#stop(Ljava/lang/String;ZLorg/apache/hadoop/hbase/security/User;)V
+#getEventLoopGroupConfig()Lorg/apache/hadoop/hbase/util/NettyEventLoopGroupConfig;
@2.0.0-alpha3
-#getCompactionRequester()Lorg/apache/hadoop/hbase/regionserver/CompactionRequestor;
@2.0.0-alpha4
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
+#addRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#getCompactionRequestor()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequester;
+#constructRegionServer(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#getRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getRegions()Ljava/util/List;
+#getOnlineRegion([B)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#removeRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;)Z
+#getRegionByEncodedName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)V
-#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#addToOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#getCoordinatedStateManager()Lorg/apache/hadoop/hbase/coordination/BaseCoordinatedStateManager;
-#constructRegionServer(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
-#getOnlineRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#getOnlineRegions()Ljava/util/List;
-#getOnlineRegion([B)Lorg/apache/hadoop/hbase/regionserver/Region;
-#getFromOnlineRegions(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
-#removeFromOnlineRegions(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/ServerName;)Z
-#getRegionByEncodedName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;
@2.0.0-beta-1
+#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
+#execRegionServerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#clearRegionBlockCache(Lorg/apache/hadoop/hbase/regionserver/Region;)Lorg/apache/hadoop/hbase/CacheEvictionStats;
+#createConnection(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Connection;
-#getRecoveringRegions()Ljava/util/Map;
-#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;
-#execRegionServerService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
@2.0.0
+#isClusterUp()Z
@2.0.3
+#getWALRootDir()Lorg/apache/hadoop/fs/Path;
@2.0.5
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.1.0
+#getWalGroupsReplicationStatus()Ljava/util/Map;
+#executeProcedure(JLorg/apache/hadoop/hbase/procedure2/RSProcedureCallable;)V
+#remoteProcedureComplete(JLjava/lang/Throwable;)V
+#isShutDown()Z
-#getWALRootDir()Lorg/apache/hadoop/fs/Path;
-#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.1.2
+#getWALRootDir()Lorg/apache/hadoop/fs/Path;
@2.1.3
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.1.8
+#reportRegionSizesForQuotas(Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;)Z
+#reportFileArchivalForQuotas(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Z
-#reportRegionSizesForQuotas(Ljava/util/Map;)Z
@2.1.10
+#getCompactedHFilesDischarger()Lorg/apache/hadoop/hbase/regionserver/CompactedHFilesDischarger;
@2.2.0
+#reportRegionSizesForQuotas(Ljava/util/Map;)Z
+#getBlockCache()Ljava/util/Optional;
+#getMobFileCache()Ljava/util/Optional;
+#finishRegionProcedure(J)V
-#reportRegionSizesForQuotas(Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;)Z
-#getMetaTableLocator()Lorg/apache/hadoop/hbase/zookeeper/MetaTableLocator;
-#getCacheConfig()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
-#reportFileArchivalForQuotas(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Z
-#getCompactedHFilesDischarger()Lorg/apache/hadoop/hbase/regionserver/CompactedHFilesDischarger;
@2.2.3
+#reportRegionSizesForQuotas(Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;)Z
+#reportFileArchivalForQuotas(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Z
+#getCompactedHFilesDischarger()Lorg/apache/hadoop/hbase/regionserver/CompactedHFilesDischarger;
-#reportRegionSizesForQuotas(Ljava/util/Map;)Z
@2.2.7
+#getMovedRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer$MovedRegionInfo;
+#movedRegionCacheExpiredTime()I
@2.3.0
+#getSlowLogRecorder()Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;
+#getLeaseManager()Lorg/apache/hadoop/hbase/regionserver/LeaseManager;
+#getAccessChecker()Lorg/apache/hadoop/hbase/security/access/AccessChecker;
+#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
-#getRegionServerMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServer;
-#getLeases()Lorg/apache/hadoop/hbase/regionserver/Leases;
-#getThreadWakeFrequency()I
-#constructRegionServer(Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
-#getRegionBlockLocations(Ljava/lang/String;)[Ljava/net/InetSocketAddress;
-#checkFileSystem()Z
-#getMovedRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer$MovedRegionInfo;
-#movedRegionCacheExpiredTime()I
-#execRegionServerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#updateConfiguration()V
-#clearRegionBlockCache(Lorg/apache/hadoop/hbase/regionserver/Region;)Lorg/apache/hadoop/hbase/CacheEvictionStats;
-#executeProcedure(JLorg/apache/hadoop/hbase/procedure2/RSProcedureCallable;)V
@2.3.2
+#getMovedRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegionServer$MovedRegionInfo;
+#movedRegionCacheExpiredTime()I
@2.4.0
+#getNamedQueueRecorder()Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;
-#getSlowLogRecorder()Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;
@2.5.0
+#dumpRowLocks(Ljava/io/PrintWriter;)V
+#getMemStoreFlusher()Lorg/apache/hadoop/hbase/regionserver/MemStoreFlusher;
+#getRetryPauseTime()J
+#getActiveMaster()Ljava/util/Optional;
+#getBackupMasters()Ljava/util/List;
+#getRegionServers()Ljava/util/Iterator;
+#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/MetaRegionLocationCache;
+#getBrokenStoreFileCleaner()Lorg/apache/hadoop/hbase/regionserver/BrokenStoreFileCleaner;
+#getRSMobFileCleanerChore()Lorg/apache/hadoop/hbase/mob/RSMobFileCleanerChore;
-#abort(Ljava/lang/String;)V
@3.0.0-alpha-1
+#registerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;)Z
+#abort(Ljava/lang/String;)V
+#getReplicationSinkService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSinkService;
+#getAsyncClusterConnection()Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;
-#registerService(Lcom/google/protobuf/Service;)Z
-#getClusterConnection()Lorg/apache/hadoop/hbase/client/ClusterConnection;
-#getActiveMaster()Ljava/util/Optional;
-#getBackupMasters()Ljava/util/List;
-#getRegionServers()Ljava/util/Iterator;
-#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/MetaRegionLocationCache;
-#getBrokenStoreFileCleaner()Lorg/apache/hadoop/hbase/regionserver/BrokenStoreFileCleaner;
-#getRSMobFileCleanerChore()Lorg/apache/hadoop/hbase/mob/RSMobFileCleanerChore;
@3.0.0-alpha-2
+#getActiveMaster()Ljava/util/Optional;
+#getBackupMasters()Ljava/util/List;
+#getBootstrapNodes()Ljava/util/Iterator;
+#getMetaLocations()Ljava/util/List;
-#getNamedQueueRecorder()Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;
-#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
-#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;
-#abort(Ljava/lang/String;)V
-#isAborted()Z
-#getInfoServer()Lorg/apache/hadoop/hbase/http/InfoServer;
-#isStopped()Z
-#isStopping()Z
-#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#getStartcode()J
-#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
-#getWALRootDir()Lorg/apache/hadoop/fs/Path;
-#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
-#toString()Ljava/lang/String;
-#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
-#getCoordinatedStateManager()Lorg/apache/hadoop/hbase/CoordinatedStateManager;
-#getServerName()Lorg/apache/hadoop/hbase/ServerName;
-#getExecutorService()Lorg/apache/hadoop/hbase/executor/ExecutorService;
-#getChoreService()Lorg/apache/hadoop/hbase/ChoreService;
-#getAccessChecker()Lorg/apache/hadoop/hbase/security/access/AccessChecker;
-#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
-#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
-#getEventLoopGroupConfig()Lorg/apache/hadoop/hbase/util/NettyEventLoopGroupConfig;
-#createConnection(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Connection;
-#isShutDown()Z
-#getAsyncClusterConnection()Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;
@3.0.0-alpha-3
+#getBrokenStoreFileCleaner()Lorg/apache/hadoop/hbase/regionserver/BrokenStoreFileCleaner;
+#getRegionReplicationBufferManager()Lorg/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationBufferManager;

+###org/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode
@1.4.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;

+###org/apache/hadoop/hbase/regionserver/Region$FlushResult$Result
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult$Result;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region$FlushResult$Result;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/regionserver/Region$FlushResult$Result

+###org/apache/hadoop/hbase/regionserver/RegionServerServices
@0.95.0
+#isStopping()Z
+#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#getCompactionRequester()Lorg/apache/hadoop/hbase/regionserver/CompactionRequestor;
+#getFlushRequester()Lorg/apache/hadoop/hbase/regionserver/FlushRequester;
+#getRegionServerAccounting()Lorg/apache/hadoop/hbase/regionserver/RegionServerAccounting;
+#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
+#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServer;
+#getRegionsInTransitionInRS()Ljava/util/concurrent/ConcurrentMap;
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#getLeases()Lorg/apache/hadoop/hbase/regionserver/Leases;
+#getExecutorService()Lorg/apache/hadoop/hbase/executor/ExecutorService;
+#getCatalogTracker()Lorg/apache/hadoop/hbase/catalog/CatalogTracker;
@0.95.1-hadoop1
+#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;
+#getRecoveringRegions()Ljava/util/Map;
-#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServer;
@0.98.0-hadoop1
+#getNonceManager()Lorg/apache/hadoop/hbase/regionserver/ServerNonceManager;
@0.98.6-hadoop1
+#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@0.98.8-hadoop1
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#registerService(Lcom/google/protobuf/Service;)Z
-#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#reportRegionTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@0.98.10-hadoop1
+#getHeapMemoryManager()Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
@0.98.11-hadoop1
+#getCompactionPressure()D
@0.98.14-hadoop1
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
*#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V[deprecated]
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
*#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
*#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
@0.99.0
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V[deprecated]
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
-#getCatalogTracker()Lorg/apache/hadoop/hbase/catalog/CatalogTracker;
-#registerService(Lcom/google/protobuf/Service;)Z
-#getHeapMemoryManager()Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
-#getCompactionPressure()D
@0.99.1
+#registerService(Lcom/google/protobuf/Service;)Z
@0.99.2
+#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
@1.0.0
+#getHeapMemoryManager()Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager;
@1.0.2
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;)V
*#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V[deprecated]
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
*#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
*#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
@1.1.0
+#getRegionServerQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerQuotaManager;
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#getCompactionPressure()D
+#getOnlineTables()Ljava/util/Set;
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;)V
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V[deprecated]
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
@1.1.1
+#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$PostOpenDeployContext;)V
*#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/Region;)V[deprecated]
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices$RegionStateTransitionContext;)Z
*#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
*#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
@1.3.0
+#getFlushThroughputController()Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;
+#getFlushPressure()D
+#getMetrics()Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServer;
@1.4.0
+#unassign([B)V
@2.0.0-alpha-1
+#getWALs()Ljava/util/List;
+#getRegionServerRpcQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerRpcQuotaManager;
+#getSecureBulkLoadManager()Lorg/apache/hadoop/hbase/regionserver/SecureBulkLoadManager;
+#getRegionServerSpaceQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerSpaceQuotaManager;
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
+#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
*#getFlushPressure()D[deprecated]
+#regionLock(Ljava/util/List;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/client/locking/EntityLock;
-#getTableLockManager()Lorg/apache/hadoop/hbase/master/TableLockManager;
-#getRegionServerQuotaManager()Lorg/apache/hadoop/hbase/quotas/RegionServerQuotaManager;
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
@2.0.0-alpha3
-#getCompactionRequester()Lorg/apache/hadoop/hbase/regionserver/CompactionRequestor;
@2.0.0-alpha4
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
+#getCompactionRequestor()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequester;
-#isStopping()Z
-#getWAL(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#postOpenDeployTasks(Lorg/apache/hadoop/hbase/regionserver/Region;)V[deprecated]
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;J[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
-#reportRegionStateTransition(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;[Lorg/apache/hadoop/hbase/HRegionInfo;)Z[deprecated]
-#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
-#getOnlineTables()Ljava/util/Set;
@2.0.0-beta-1
-#getRecoveringRegions()Ljava/util/Map;
@2.0.0
+#isClusterUp()Z
@2.1.8
+#reportRegionSizesForQuotas(Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;)Z
+#reportFileArchivalForQuotas(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Z
@2.2.0
+#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
+#getBlockCache()Ljava/util/Optional;
+#getMobFileCache()Ljava/util/Optional;
-#reportRegionSizesForQuotas(Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;)Z
-#reportFileArchivalForQuotas(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Z
@2.2.3
+#reportRegionSizesForQuotas(Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;)Z
+#reportFileArchivalForQuotas(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Collection;)Z
@2.3.0
+#getLeaseManager()Lorg/apache/hadoop/hbase/regionserver/LeaseManager;
+#getAccessChecker()Lorg/apache/hadoop/hbase/security/access/AccessChecker;
+#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
-#getLeases()Lorg/apache/hadoop/hbase/regionserver/Leases;
@3.0.0-alpha-1
+#registerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;)Z
+#getReplicationSourceService()Lorg/apache/hadoop/hbase/regionserver/ReplicationSourceService;
-#registerService(Lcom/google/protobuf/Service;)Z
@3.0.0-alpha-3
+#getRegionReplicationBufferManager()Lorg/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationBufferManager;
+#getRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getRegions()Ljava/util/List;
+#getRegion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/Region;

+###org/apache/hadoop/hbase/regionserver/ReplicationSinkService
@0.95.0
+#replicateLogEntries([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
@0.95.2-hadoop1
+#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#replicateLogEntries([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
@1.3.0
+#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V

+###org/apache/hadoop/hbase/regionserver/RowProcessor
@0.95.0
+#getRowsToLock()Ljava/util/Collection;
+#getResult()Lcom/google/protobuf/Message;
+#readOnly()Z
+#process(JLorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#preProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#getClusterId()Ljava/util/UUID;
+#getName()Ljava/lang/String;
+#getRequestData()Lcom/google/protobuf/Message;
+#initialize(Lcom/google/protobuf/Message;)V
@0.95.1-hadoop1
+#useDurability()Lorg/apache/hadoop/hbase/client/Durability;
@0.96.0-hadoop1
+#getClusterIds()Ljava/util/List;
-#getClusterId()Ljava/util/UUID;
@0.98.4-hadoop1
+#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha3
+#process(JLorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#preProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)V
-#process(JLorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#preProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#postProcess(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RowProcessor

+###org/apache/hadoop/hbase/regionserver/RSRpcServices
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getSocketAddress()Ljava/net/InetSocketAddress;
+#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)I
+#getDeadline(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)J
+#checkOOME(Ljava/lang/Throwable;)Z
+#closeRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionResponse;
+#compactRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionResponse;
+#flushRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionResponse;
+#getOnlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
+#getRegionInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse;
+#getServerInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoResponse;
+#getStoreFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileResponse;
+#mergeRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsResponse;
+#openRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionResponse;
+#replay(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#replicateWALEntry(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#rollWALWriter(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterResponse;
+#splitRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionResponse;
+#stopServer(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerResponse;
+#updateFavoredNodes(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
+#bulkLoadHFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileResponse;
+#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#get(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetResponse;
+#multi(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiResponse;
+#mutate(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateResponse;
+#scan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanResponse;
@0.99.1
+#execRegionServerService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
@0.99.2
+#updateConfiguration(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateConfigurationResponse;
@1.0.0
+#getHostname(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@1.0.1
+#getHostname(Lorg/apache/hadoop/conf/Configuration;Z)Ljava/lang/String;
-#getHostname(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@1.1.0
+#getPriority()Lorg/apache/hadoop/hbase/ipc/PriorityFunction;
+#warmupRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WarmupRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WarmupRegionResponse;
@1.1.8
+#getScanDetailsWithId(J)Ljava/lang/String;
@1.2.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getScanDetailsWithId(J)Ljava/lang/String;
-#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)I
@1.2.5
+#getScanDetailsWithId(J)Ljava/lang/String;
+#exitIfOOME(Ljava/lang/Throwable;)Z
@1.3.0
+#getRegion(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$RegionSpecifier;)Lorg/apache/hadoop/hbase/regionserver/Region;
-#exitIfOOME(Ljava/lang/Throwable;)Z
@1.3.1
+#getScanner(J)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#exitIfOOME(Ljava/lang/Throwable;)Z
@1.5.0
+#compactionSwitch(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactionSwitchRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactionSwitchResponse;
@1.7.0
+#getScanDetailsWithRequest(Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanRequest;)Ljava/lang/String;
+#clearSlowLogsResponses(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ClearSlowLogResponseRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ClearSlowLogResponses;
+#getLogEntries(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogEntry;
@2.0.0-alpha-1
+#getScannersCount()I
+#getRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionSpecifier;)Lorg/apache/hadoop/hbase/regionserver/Region;
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)J
+#closeRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionResponse;
+#compactRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionResponse;
+#flushRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionResponse;
+#getOnlineRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
+#getRegionInfo(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse;
+#getRegionLoad(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadResponse;
+#clearCompactionQueues(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesResponse;
+#getServerInfo(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoResponse;
+#getStoreFile(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileResponse;
+#openRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionResponse;
+#warmupRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionResponse;
+#replay(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#replicateWALEntry(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#rollWALWriter(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterResponse;
+#splitRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SplitRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SplitRegionResponse;
+#stopServer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerResponse;
+#updateFavoredNodes(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
+#bulkLoadHFile(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileResponse;
+#prepareBulkLoad(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadResponse;
+#cleanupBulkLoad(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadResponse;
+#execService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#get(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$GetRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$GetResponse;
+#multi(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MultiResponse;
+#mutate(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutateRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutateResponse;
+#scan(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ScanRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ScanResponse;
+#execRegionServerService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#updateConfiguration(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationResponse;
+#getSpaceQuotaSnapshots(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsResponse;
+#executeProcedures(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresResponse;
+#mergeRegions(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$MergeRegionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$MergeRegionsResponse;
-#getScanDetailsWithRequest(Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanRequest;)Ljava/lang/String;
-#getRegion(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$RegionSpecifier;)Lorg/apache/hadoop/hbase/regionserver/Region;
-#getPriority(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getDeadline(Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$RequestHeader;Lcom/google/protobuf/Message;)J
-#closeRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionResponse;
-#compactRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactRegionResponse;
-#compactionSwitch(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactionSwitchRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CompactionSwitchResponse;
-#flushRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$FlushRegionResponse;
-#getOnlineRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
-#getRegionInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse;
-#getServerInfo(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetServerInfoResponse;
-#getStoreFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetStoreFileResponse;
-#mergeRegions(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$MergeRegionsResponse;
-#openRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionResponse;
-#warmupRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WarmupRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WarmupRegionResponse;
-#replay(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
-#replicateWALEntry(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
-#rollWALWriter(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$RollWALWriterResponse;
-#splitRegion(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SplitRegionResponse;
-#stopServer(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$StopServerResponse;
-#updateFavoredNodes(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
-#bulkLoadHFile(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$BulkLoadHFileResponse;
-#execService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#get(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$GetResponse;
-#multi(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MultiResponse;
-#mutate(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutateResponse;
-#scan(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$ScanResponse;
-#execRegionServerService(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#updateConfiguration(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$UpdateConfigurationResponse;
-#clearSlowLogsResponses(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ClearSlowLogResponseRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$ClearSlowLogResponses;
-#getLogEntries(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$LogEntry;
@2.0.0-alpha2
-#splitRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SplitRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SplitRegionResponse;
-#mergeRegions(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$MergeRegionsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$MergeRegionsResponse;
@2.0.0-alpha4
+#getRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionSpecifier;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#getRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionSpecifier;)Lorg/apache/hadoop/hbase/regionserver/Region;
@2.0.0-beta-1
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)J
+#closeRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionResponse;
+#compactRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionResponse;
+#flushRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionResponse;
+#getOnlineRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
+#getRegionInfo(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse;
+#getRegionLoad(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadResponse;
+#clearCompactionQueues(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesResponse;
+#getServerInfo(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoResponse;
+#getStoreFile(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileResponse;
+#openRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionResponse;
+#warmupRegion(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionResponse;
+#replay(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#replicateWALEntry(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
+#rollWALWriter(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterResponse;
+#stopServer(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerResponse;
+#updateFavoredNodes(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
+#bulkLoadHFile(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileResponse;
+#prepareBulkLoad(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadResponse;
+#cleanupBulkLoad(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadResponse;
+#execService(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#get(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$GetRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$GetResponse;
+#multi(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MultiResponse;
+#mutate(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutateRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutateResponse;
+#scan(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ScanRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ScanResponse;
+#execRegionServerService(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
+#updateConfiguration(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationResponse;
+#getSpaceQuotaSnapshots(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsResponse;
+#executeProcedures(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresResponse;
+#clearRegionBlockCache(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearRegionBlockCacheRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearRegionBlockCacheResponse;
-#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;)J
-#closeRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionResponse;
-#compactRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionResponse;
-#flushRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionResponse;
-#getOnlineRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionResponse;
-#getRegionInfo(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoResponse;
-#getRegionLoad(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadResponse;
-#clearCompactionQueues(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesResponse;
-#getServerInfo(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoResponse;
-#getStoreFile(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileResponse;
-#openRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionResponse;
-#warmupRegion(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionResponse;
-#replay(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
-#replicateWALEntry(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;
-#rollWALWriter(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterResponse;
-#stopServer(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerResponse;
-#updateFavoredNodes(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesResponse;
-#bulkLoadHFile(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$BulkLoadHFileResponse;
-#prepareBulkLoad(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$PrepareBulkLoadResponse;
-#cleanupBulkLoad(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CleanupBulkLoadResponse;
-#execService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#get(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$GetRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$GetResponse;
-#multi(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MultiRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MultiResponse;
-#mutate(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutateRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutateResponse;
-#scan(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ScanRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ScanResponse;
-#execRegionServerService(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$CoprocessorServiceResponse;
-#updateConfiguration(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationResponse;
-#getSpaceQuotaSnapshots(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsResponse;
-#executeProcedures(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresResponse;
@2.1.1
+#getRpcScheduler()Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@2.2.0
+#compactionSwitch(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactionSwitchRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactionSwitchResponse;
@2.2.5
+#getScanDetailsWithRequest(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ScanRequest;)Ljava/lang/String;
@2.3.0
+#getSlowLogResponses(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponseRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponses;
+#getLargeLogResponses(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponseRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponses;
+#clearSlowLogsResponses(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearSlowLogResponseRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearSlowLogResponses;
-#getHostname(Lorg/apache/hadoop/conf/Configuration;Z)Ljava/lang/String;
@2.4.0
+#getLogEntries(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogEntry;
@2.4.2
-#getScanner(J)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
@2.5.0
+#getClusterId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetClusterIdResponse;
+#getActiveMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetActiveMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetActiveMasterResponse;
+#getMasters(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMastersResponse;
+#getMetaRegionLocations(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMetaRegionLocationsResponse;
+#getBootstrapNodes(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetBootstrapNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetBootstrapNodesResponse;
@3.0.0-alpha-1
-#getSlowLogResponses(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponseRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponses;
-#getLargeLogResponses(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponseRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponses;
-#getClusterId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetClusterIdResponse;
-#getActiveMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetActiveMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetActiveMasterResponse;
-#getMasters(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMastersResponse;
-#getMetaRegionLocations(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMetaRegionLocationsResponse;
-#getBootstrapNodes(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetBootstrapNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetBootstrapNodesResponse;
@3.0.0-alpha-2
+#getAllBootstrapNodes(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/BootstrapNodeProtos$GetAllBootstrapNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/BootstrapNodeProtos$GetAllBootstrapNodesResponse;
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
-#getPriority()Lorg/apache/hadoop/hbase/ipc/PriorityFunction;
-#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#getSocketAddress()Ljava/net/InetSocketAddress;
-#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
-#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)J
-#checkOOME(Ljava/lang/Throwable;)Z
-#exitIfOOME(Ljava/lang/Throwable;)Z
-#updateConfiguration(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationResponse;
-#clearSlowLogsResponses(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearSlowLogResponseRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearSlowLogResponses;
-#getLogEntries(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogEntry;
-#getRpcScheduler()Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@3.0.0-alpha-3
*#replay(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;[deprecated]
+#replicateToReplica(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryResponse;

+###org/apache/hadoop/hbase/regionserver/wal/MetricsWALEditsReplay
@0.95.1-hadoop1
+#<init>()V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/regionserver/wal/MetricsWALEditsReplay

+###org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader
@0.95.1-hadoop1
+#<init>()V
+#close()V
+#getPosition()J
+#reset()V
+#getWALTrailer()Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;
@0.98.23-hadoop1
+#trailerSize()J
@0.99.0
-#trailerSize()J
@0.99.2
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;)V
-#getWALTrailer()Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;
@1.1.0
+#getWriterClsNames()Ljava/util/List;
+#getCodecClsName()Ljava/lang/String;
@1.1.7
+#trailerSize()J
@1.2.0
-#trailerSize()J
@1.2.4
+#trailerSize()J

+###org/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor
@0.95.1-hadoop1
+#compress([BLorg/apache/hadoop/hbase/regionserver/wal/Dictionary;)Lcom/google/protobuf/ByteString;
@0.98.0-hadoop1
+#compress([BLorg/apache/hadoop/hbase/io/util/Dictionary;)Lcom/google/protobuf/ByteString;
-#compress([BLorg/apache/hadoop/hbase/regionserver/wal/Dictionary;)Lcom/google/protobuf/ByteString;
@2.0.0-alpha-1
+#compress([BLorg/apache/hadoop/hbase/io/util/Dictionary;)Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/ByteString;
-#compress([BLorg/apache/hadoop/hbase/io/util/Dictionary;)Lcom/google/protobuf/ByteString;
@2.0.0-beta-1
+#compress([BLorg/apache/hadoop/hbase/io/util/Dictionary;)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
-#compress([BLorg/apache/hadoop/hbase/io/util/Dictionary;)Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/ByteString;
@2.1.0
+#compress([BLjava/lang/Enum;)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;
-#compress([BLorg/apache/hadoop/hbase/io/util/Dictionary;)Lorg/apache/hbase/thirdparty/com/google/protobuf/ByteString;

+###org/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/wal/FSHLog;Lorg/apache/hadoop/conf/Configuration;)V
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost$WALEnvironment;
+#preWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
+#postWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@0.99.2
+#<init>(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/conf/Configuration;)V
+#preWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
+#postWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/wal/FSHLog;Lorg/apache/hadoop/conf/Configuration;)V
-#preWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
-#postWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@1.3.0
+#preWALRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postWALRoll(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha3
+#preWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
+#postWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#preWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
-#postWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha4
+#createEnvironment(Lorg/apache/hadoop/hbase/coprocessor/WALCoprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost$WALEnvironment;
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/coprocessor/WALCoprocessor;
+#preWALWrite(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V[deprecated]
+#postWALWrite(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V[deprecated]
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/Coprocessor;
+#createEnvironment(Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost$WALEnvironment;
-#preWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
-#postWALWrite(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;

+###org/apache/hadoop/hbase/replication/BulkLoadCellFilter
@1.3.0
+#<init>()V
+#filterCell(Lorg/apache/hadoop/hbase/Cell;Lcom/google/common/base/Predicate;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha2
+#filterCell(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/shaded/com/google/common/base/Predicate;)Lorg/apache/hadoop/hbase/Cell;
-#filterCell(Lorg/apache/hadoop/hbase/Cell;Lcom/google/common/base/Predicate;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#filterCell(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hbase/thirdparty/com/google/common/base/Predicate;)Lorg/apache/hadoop/hbase/Cell;
-#filterCell(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/shaded/com/google/common/base/Predicate;)Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner
@0.95.0
+#<init>()V
+#isLogDeletable(Lorg/apache/hadoop/fs/Path;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
@0.95.2-hadoop1
+#isLogDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isLogDeletable(Lorg/apache/hadoop/fs/Path;)Z
@0.96.0-hadoop1
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isLogDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@0.98.19-hadoop1
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
-#isAborted()Z
@0.99.0
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
@1.1.5
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
-#isAborted()Z
@1.2.0
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
@1.2.2
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
-#isAborted()Z
@1.2.7
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@1.3.0
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@1.3.2
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@1.4.0
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@1.4.2
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@1.7.0
+#init(Ljava/util/Map;)V
+#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@2.0.0-alpha-1
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#init(Ljava/util/Map;)V
-#init(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@2.0.0-alpha4
+#preClean()V
@2.0.0-beta-1
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
@2.0.0-beta-2
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@2.1.0
-#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueuesClient;)V
@2.4.16
+#init(Ljava/util/Map;)V
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
+#setConf(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;)V

+###org/apache/hadoop/hbase/replication/regionserver/DumpReplicationQueues
@0.98.24-hadoop1
+#<init>()V
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
+#dumpReplicationSummary()Ljava/lang/String;
+#dumpPeersState(Lorg/apache/hadoop/hbase/client/replication/ReplicationAdmin;Ljava/util/Map;)Ljava/lang/String;
+#dumpQueues(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/util/Set;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Z)Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/replication/regionserver/DumpReplicationQueues

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/conf/Configuration;)V
+#getReplicationSink()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer;
+#reportBadSink(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer;)V
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/HBaseReplicationEndpoint;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/conf/Configuration;)V
@0.98.13-hadoop1
+#reportSinkSuccess(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer;)V
@0.99.0
-#reportSinkSuccess(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer;)V
@1.0.2
+#reportSinkSuccess(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer;)V
@1.1.0
-#reportSinkSuccess(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer;)V
@1.1.1
+#reportSinkSuccess(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager$SinkPeer;)V
@1.2.0
+#chooseSinks()V
+#getNumSinks()I
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/ClusterConnection;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/HBaseReplicationEndpoint;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/client/HConnection;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/HBaseReplicationEndpoint;Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationZookeeper;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#logPositionAndCleanOldLogs(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;JZZ)V
+#init()V
+#addSource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
+#join()V
+#getSources()Ljava/util/List;
+#getRepZkWrapper()Lorg/apache/hadoop/hbase/replication/ReplicationZookeeper;
+#getReplicationSource(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/Stoppable;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
+#transferQueues(Ljava/lang/String;)V
+#closeRecoveredQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
+#removePeer(Ljava/lang/String;)V
+#getOldLogDir()Lorg/apache/hadoop/fs/Path;
+#getLogDir()Lorg/apache/hadoop/fs/Path;
+#getFs()Lorg/apache/hadoop/fs/FileSystem;
+#getStats()Ljava/lang/String;
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationZookeeper;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationZookeeper;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#transferQueues(Ljava/lang/String;)V
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
+#cleanOldLogs(Ljava/lang/String;Ljava/lang/String;Z)V
+#deleteSource(Ljava/lang/String;Z)V
+#getReplicationSource(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
+#regionServerRemoved(Ljava/lang/String;)V
+#peerRemoved(Ljava/lang/String;)V
+#peerListChanged(Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationZookeeper;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#getRepZkWrapper()Lorg/apache/hadoop/hbase/replication/ReplicationZookeeper;
-#getReplicationSource(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/Stoppable;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
@0.96.0-hadoop1
-#init()V
-#addSource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
-#getReplicationSource(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/Stoppable;Ljava/lang/String;Ljava/util/UUID;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
@0.96.2-hadoop1
+#getOldSources()Ljava/util/List;
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
@0.98.24-hadoop1
+#closeQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
-#closeQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@0.99.1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
@1.1.9
+#closeQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@1.2.0
-#closeQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@1.2.5
+#closeQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@1.3.0
+#getReplicationPeers()Lorg/apache/hadoop/hbase/replication/ReplicationPeers;
+#addHFileRefs(Lorg/apache/hadoop/hbase/TableName;[BLjava/util/List;)V
+#cleanUpHFileRefs(Ljava/lang/String;Ljava/util/List;)V
@1.3.2
+#getSource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
@1.4.11
+#setPendingShipment(Z)V
@1.4.13
-#setPendingShipment(Z)V
@1.5.0
+#setPendingShipment(Z)V
+#getTotalBufferUsed()Ljava/util/concurrent/atomic/AtomicLong;
@1.6.0
-#setPendingShipment(Z)V
@1.7.0
+#getLogsWithPrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/util/SortedSet;
@2.0.0-alpha-1
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
-#getLogsWithPrefix(Ljava/lang/String;Ljava/lang/String;)Ljava/util/SortedSet;
-#getSource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
@2.0.0-alpha2
+#getSource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;)V
@2.0.0-beta-2
+#preLogRoll(Lorg/apache/hadoop/fs/Path;)V
+#postLogRoll(Lorg/apache/hadoop/fs/Path;)V
-#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
+#addPeer(Ljava/lang/String;)V
+#refreshSources(Ljava/lang/String;)V
+#logPositionAndCleanOldLogs(Ljava/lang/String;ZLorg/apache/hadoop/hbase/replication/regionserver/WALEntryBatch;)V
+#getWALs()Ljava/util/Map;
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueues;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
-#logPositionAndCleanOldLogs(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;JZZ)V
-#cleanOldLogs(Ljava/lang/String;Ljava/lang/String;Z)V
-#deleteSource(Ljava/lang/String;Z)V
-#closeRecoveredQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
-#closeQueue(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
-#peerRemoved(Ljava/lang/String;)V
-#peerListChanged(Ljava/util/List;)V
@2.2.7
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
+#getTotalBufferLimit()J
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
-#getTotalBufferLimit()J
@2.3.4
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
+#getTotalBufferLimit()J
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;)V
@2.4.0
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
+#logPositionAndCleanOldLogs(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;Lorg/apache/hadoop/hbase/replication/regionserver/WALEntryBatch;)V
+#addCatalogReplicationSource(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
+#removeCatalogReplicationSource(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
-#logPositionAndCleanOldLogs(Ljava/lang/String;ZLorg/apache/hadoop/hbase/replication/regionserver/WALEntryBatch;)V
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/hbase/replication/ReplicationTracker;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
-#regionServerRemoved(Ljava/lang/String;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/hbase/replication/regionserver/SyncReplicationPeerMappingManager;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
+#drainSources(Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;Lorg/apache/hadoop/hbase/replication/ReplicationPeers;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/util/UUID;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource;)V
@3.0.0-alpha-3
-#addCatalogReplicationSource(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;
-#removeCatalogReplicationSource(Lorg/apache/hadoop/hbase/client/RegionInfo;)V

+###org/apache/hadoop/hbase/security/HBaseSaslRpcServer
@0.95.0
+#<init>()V
+#init(Lorg/apache/hadoop/conf/Configuration;)V
+#getIdentifier(Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;)Lorg/apache/hadoop/security/token/TokenIdentifier;
@1.4.0
+#getSaslProps()Ljava/util/Map;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/security/AuthMethod;Ljava/util/Map;Lorg/apache/hadoop/security/token/SecretManager;)V
+#isComplete()Z
+#evaluateResponse([B)[B
+#dispose()V
+#getAttemptingUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#wrap([BII)[B
+#unwrap([BII)[B
+#getNegotiatedQop()Ljava/lang/String;
+#getAuthorizationID()Ljava/lang/String;
-#<init>()V
-#init(Lorg/apache/hadoop/conf/Configuration;)V
-#getSaslProps()Ljava/util/Map;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/security/provider/SaslServerAuthenticationProvider;Ljava/util/Map;Lorg/apache/hadoop/security/token/SecretManager;)V
+#getAttemptingUser()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/hbase/security/AuthMethod;Ljava/util/Map;Lorg/apache/hadoop/security/token/SecretManager;)V
-#getAttemptingUser()Lorg/apache/hadoop/security/UserGroupInformation;

+###org/apache/hadoop/hbase/security/token/ZKSecretWatcher
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager;)V
+#start()V
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#getRootKeyZNode()Ljava/lang/String;
+#removeKeyFromZK(Lorg/apache/hadoop/hbase/security/token/AuthenticationKey;)V
+#addKeyToZK(Lorg/apache/hadoop/hbase/security/token/AuthenticationKey;)V
+#updateKeyInZK(Lorg/apache/hadoop/hbase/security/token/AuthenticationKey;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager;)V

+###org/apache/hadoop/hbase/security/visibility/ExpressionExpander
@0.98.0-hadoop1
+#<init>()V
+#expand(Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;)Lorg/apache/hadoop/hbase/security/visibility/expression/ExpressionNode;

+###org/apache/hadoop/hbase/security/visibility/VisibilityExpEvaluator
@0.98.6-hadoop1
+#evaluate(Lorg/apache/hadoop/hbase/Cell;)Z

+###org/apache/hadoop/hbase/security/visibility/VisibilityLabelService
@0.98.6-hadoop1
+#init(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment;)V
+#addLabels(Ljava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#setAuths([BLjava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#clearAuths([BLjava/util/List;)[Lorg/apache/hadoop/hbase/regionserver/OperationStatus;
+#getAuths([BZ)Ljava/util/List;
+#createVisibilityExpTags(Ljava/lang/String;ZZ)Ljava/util/List;
+#getVisibilityExpEvaluator(Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Lorg/apache/hadoop/hbase/security/visibility/VisibilityExpEvaluator;
+#havingSystemAuth([B)Z
+#matchVisibility(Ljava/util/List;Ljava/lang/Byte;Ljava/util/List;Ljava/lang/Byte;)Z
@0.98.9-hadoop1
+#listLabels(Ljava/lang/String;)Ljava/util/List;
+#encodeVisibilityForReplication(Ljava/util/List;Ljava/lang/Byte;)[B
@0.98.10-hadoop1
*#getAuths([BZ)Ljava/util/List;[deprecated]
+#getUserAuths([BZ)Ljava/util/List;
+#getGroupAuths([Ljava/lang/String;Z)Ljava/util/List;
*#havingSystemAuth([B)Z[deprecated]
+#havingSystemAuth(Lorg/apache/hadoop/hbase/security/User;)Z
@0.99.0
-#getUserAuths([BZ)Ljava/util/List;
-#getGroupAuths([Ljava/lang/String;Z)Ljava/util/List;
-#listLabels(Ljava/lang/String;)Ljava/util/List;
-#havingSystemAuth(Lorg/apache/hadoop/hbase/security/User;)Z
-#encodeVisibilityForReplication(Ljava/util/List;Ljava/lang/Byte;)[B
@0.99.2
+#encodeVisibilityForReplication(Ljava/util/List;Ljava/lang/Byte;)[B
@1.0.0
*#getAuths([BZ)Ljava/util/List;[deprecated]
+#getUserAuths([BZ)Ljava/util/List;
+#getGroupAuths([Ljava/lang/String;Z)Ljava/util/List;
+#listLabels(Ljava/lang/String;)Ljava/util/List;
*#havingSystemAuth([B)Z[deprecated]
+#havingSystemAuth(Lorg/apache/hadoop/hbase/security/User;)Z
@2.0.0-alpha-1
-#getAuths([BZ)Ljava/util/List;[deprecated]
-#havingSystemAuth([B)Z[deprecated]

+###org/apache/hadoop/hbase/security/visibility/VisibilityUtils
@0.98.0-hadoop1
+#<init>()V
+#getDataToWriteToZooKeeper(Ljava/util/Map;)[B
+#getUserAuthsDataToWriteToZooKeeper(Ljava/util/Map;)[B
+#readLabelsFromZKData([B)Ljava/util/List;
+#readUserAuthsFromZKData([B)Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$MultiUserAuthorizations;
+#getScanLabelGenerator(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/visibility/ScanLabelGenerator;
@0.98.2-hadoop1
+#getScanLabelGenerators(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
-#getScanLabelGenerator(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/visibility/ScanLabelGenerator;
@0.98.4-hadoop1
+#getVisibilityTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Z
+#isVisibilityTagsPresent(Lorg/apache/hadoop/hbase/Cell;)Z
+#checkForMatchingVisibilityTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Z
@0.98.6-hadoop1
+#extractVisibilityTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Ljava/lang/Byte;
+#createVisibilityLabelFilter(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Lorg/apache/hadoop/hbase/filter/Filter;
+#getActiveUser()Lorg/apache/hadoop/hbase/security/User;
+#createVisibilityExpTags(Ljava/lang/String;ZZLjava/util/Set;Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelOrdinalProvider;)Ljava/util/List;
-#getVisibilityTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Z
-#checkForMatchingVisibilityTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Z
@0.98.9-hadoop1
+#extractAndPartitionTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;Ljava/util/List;)Ljava/lang/Byte;
@0.98.10-hadoop1
+#getSystemAndSuperUsers(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
@0.98.14-hadoop1
-#getSystemAndSuperUsers(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
@0.99.0
-#extractAndPartitionTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;Ljava/util/List;)Ljava/lang/Byte;
@0.99.2
+#extractAndPartitionTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;Ljava/util/List;)Ljava/lang/Byte;
@1.0.0
+#getSystemAndSuperUsers(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
@1.1.0
+#createVisibilityLabelFilter(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Lorg/apache/hadoop/hbase/filter/Filter;
-#createVisibilityLabelFilter(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Lorg/apache/hadoop/hbase/filter/Filter;
@1.1.1
-#getSystemAndSuperUsers(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Pair;
@3.0.0-alpha-1
+#readUserAuthsFromZKData([B)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/VisibilityLabelsProtos$MultiUserAuthorizations;
-#readUserAuthsFromZKData([B)Lorg/apache/hadoop/hbase/protobuf/generated/VisibilityLabelsProtos$MultiUserAuthorizations;

+###org/apache/hadoop/hbase/snapshot/ExportSnapshot
@0.95.0
+#<init>()V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
+#doWork()I
-#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/snapshot/ExportSnapshot

+###org/apache/hadoop/hbase/snapshot/SnapshotManifest
@0.98.6-hadoop1
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
+#open(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
+#addTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#addRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#addRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getSnapshotDir()Lorg/apache/hadoop/fs/Path;
+#getSnapshotDescription()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getRegionManifests()Ljava/util/List;
+#getRegionManifestsMap()Ljava/util/Map;
+#consolidate()V
+#createExecutor(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/concurrent/ThreadPoolExecutor;
@1.7.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
@2.0.0-alpha-1
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
+#open(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
+#addMobRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getSnapshotDescription()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
-#open(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
-#getSnapshotDescription()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
@2.0.0-alpha3
+#addTableDescriptor(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#getTableDescriptor()Lorg/apache/hadoop/hbase/client/TableDescriptor;
-#addTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
@2.0.0-alpha4
+#addMobRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#addRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#addMobRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#addRegion(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.2.6
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
@2.3.0
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;
@2.3.1
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionSnare;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Lorg/apache/hadoop/hbase/snapshot/SnapshotManifest;

+###org/apache/hadoop/hbase/SplitLogTask
@0.95.0
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#isUnassigned(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isUnassigned()Z
+#isOwned(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isOwned()Z
+#isResigned(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isResigned()Z
+#isDone(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isDone()Z
+#isErr(Lorg/apache/hadoop/hbase/ServerName;)Z
+#isErr()Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#parseFrom([B)Lorg/apache/hadoop/hbase/SplitLogTask;
+#toByteArray()[B
@0.98.4-hadoop1
+#getMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@2.0.0-alpha-1
+#getMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
-#getMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@2.0.0-beta-1
-#getMode()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;

+###org/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl$Intf
@0.95.2-hadoop1
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl$ImplData;
+#setDeadServers(Ljava/util/Set;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setFilter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setShowAppendWarning(Z)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setCatalogJanitorEnabled(Z)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setMetaLocation(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setFrags(Ljava/util/Map;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setFormat(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setServers(Ljava/util/List;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/client/HBaseAdmin;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/client/HBaseAdmin;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/client/HBaseAdmin;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@0.95.1-hadoop1
-#setShowAppendWarning(Z)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
@0.95.2-hadoop1
+#setAssignmentManager(Lorg/apache/hadoop/hbase/master/AssignmentManager;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
+#setServerManager(Lorg/apache/hadoop/hbase/master/ServerManager;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
@0.99.2
+#makeRenderer(Lorg/apache/hadoop/hbase/master/HMaster;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
-#makeRenderer(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/client/HBaseAdmin;)Lorg/jamon/Renderer;
-#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/client/HBaseAdmin;)V
-#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/client/HBaseAdmin;)V
@2.0.0-alpha-1
+#setAssignmentManager(Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;
-#setAssignmentManager(Lorg/apache/hadoop/hbase/master/AssignmentManager;)Lorg/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl;

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmplImpl
@0.98.4-hadoop1
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/ServerMetricsTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tool/Canary$Monitor
@0.96.1-hadoop1
+#isDone()Z
+#hasError()Z
+#run()V
@0.98.13-hadoop1
+#close()V
@0.98.18-hadoop1
+#finalCheckForErrors()Z
@0.99.0
-#finalCheckForErrors()Z
-#close()V
@0.99.2
+#close()V
@1.2.1
+#finalCheckForErrors()Z
@1.3.6
-###org/apache/hadoop/hbase/tool/Canary$Monitor

+###org/apache/hadoop/hbase/tool/Canary$RegionStdOutSink
@1.3.3
+#<init>()V
+#publishReadFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishReadFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishReadTiming(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishWriteTiming(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
+#getReadLatencyMap()Ljava/util/Map;
+#initializeAndGetReadLatencyForTable(Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLong;
+#initializeWriteLatency()V
+#getWriteLatency()Ljava/util/concurrent/atomic/AtomicLong;
@1.3.6
-###org/apache/hadoop/hbase/tool/Canary$RegionStdOutSink

+###org/apache/hadoop/hbase/tool/Canary$Sink
@0.95.0
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#publishReadTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@0.95.2-hadoop1
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
@0.98.14-hadoop1
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@0.98.18-hadoop1
+#getReadFailureCount()J
+#incReadFailureCount()J
+#getWriteFailureCount()J
@0.98.22-hadoop1
+#updateReadFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
+#getReadFailures()Ljava/util/Map;
+#updateWriteFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
+#getWriteFailures()Ljava/util/Map;
@0.99.0
-#getReadFailureCount()J
-#incReadFailureCount()J
-#updateReadFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
-#getReadFailures()Ljava/util/Map;
-#getWriteFailureCount()J
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
-#updateWriteFailedHostList(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;)V
-#getWriteFailures()Ljava/util/Map;
@1.2.0
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@1.2.1
+#getReadFailureCount()J
+#incReadFailureCount()J
+#getWriteFailureCount()J
@1.3.3
+#getReadFailures()Ljava/util/Map;
+#updateReadFailures(Ljava/lang/String;Ljava/lang/String;)V
+#incWriteFailureCount()J
+#getWriteFailures()Ljava/util/Map;
+#updateWriteFailures(Ljava/lang/String;Ljava/lang/String;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
-#publishReadFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishReadTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
-#publishWriteFailure(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
-#publishWriteTiming(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
@1.3.6
-###org/apache/hadoop/hbase/tool/Canary$Sink

+###org/apache/hadoop/hbase/tool/Canary
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@0.95.2-hadoop1
+#sniff(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/TableName;)V
@0.96.1-hadoop1
+#newMonitor(I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
@0.98.13-hadoop1
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
+#newMonitor(Lorg/apache/hadoop/hbase/client/HConnection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
+#sniff(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/TableName;)V
-#<init>(Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
-#newMonitor(I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
-#sniff(Lorg/apache/hadoop/hbase/client/HBaseAdmin;Lorg/apache/hadoop/hbase/TableName;)V
@0.98.14-hadoop1
+#sniff(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;)V
-#sniff(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/TableName;)V
@0.98.21-hadoop1
+#sniff(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;Z)V
@0.98.22-hadoop1
+#getReadFailures()Ljava/util/Map;
+#getWriteFailures()Ljava/util/Map;
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
+#newMonitor(I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
+#sniff(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/TableName;)V
-#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
-#getReadFailures()Ljava/util/Map;
-#getWriteFailures()Ljava/util/Map;
-#newMonitor(Lorg/apache/hadoop/hbase/client/HConnection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
-#sniff(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;Z)V
-#sniff(Lorg/apache/hadoop/hbase/client/HConnection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;)V
@0.99.2
+#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
-#newMonitor(I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
@1.2.0
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
+#sniff(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;)V
-#<init>(Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
@1.3.3
+#getReadFailures()Ljava/util/Map;
+#getWriteFailures()Ljava/util/Map;
-#sniff(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/TableName;)V
-#sniff(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/tool/Canary$RegionTask$TaskType;)V
@1.3.6
+#checkRegions([Ljava/lang/String;)I
+#checkRegionServers([Ljava/lang/String;)I
+#checkZooKeeper()I
-#<init>()V
-#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
-#getConf()Lorg/apache/hadoop/conf/Configuration;
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#run([Ljava/lang/String;)I
-#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
-#main([Ljava/lang/String;)V
@1.4.0
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
+#main([Ljava/lang/String;)V
-#checkRegions([Ljava/lang/String;)I
-#checkRegionServers([Ljava/lang/String;)I
-#checkZooKeeper()I
@1.4.11
+#checkRegions([Ljava/lang/String;)I
+#checkRegionServers([Ljava/lang/String;)I
+#checkZooKeeper()I
-#<init>()V
-#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
-#getConf()Lorg/apache/hadoop/conf/Configuration;
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#run([Ljava/lang/String;)I
-#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
-#main([Ljava/lang/String;)V
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
+#main([Ljava/lang/String;)V
-#checkRegions([Ljava/lang/String;)I
-#checkRegionServers([Ljava/lang/String;)I
-#checkZooKeeper()I
@2.0.3
+#<init>(Ljava/util/concurrent/ExecutorService;)V
-#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
@2.1.0
+#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
-#<init>(Ljava/util/concurrent/ExecutorService;)V
@2.1.1
+#<init>(Ljava/util/concurrent/ExecutorService;)V
-#<init>(Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/Canary$Sink;)V
@2.1.8
+#create(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/tool/Canary;
+#create(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/CanaryTool$Sink;)Lorg/apache/hadoop/hbase/tool/Canary;
+#checkRegions([Ljava/lang/String;)I
+#checkRegionServers([Ljava/lang/String;)I
+#checkZooKeeper()I
-#<init>()V
-#<init>(Ljava/util/concurrent/ExecutorService;)V
-#getConf()Lorg/apache/hadoop/conf/Configuration;
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#run([Ljava/lang/String;)I
-#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
-#main([Ljava/lang/String;)V
@2.2.0
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
+#main([Ljava/lang/String;)V
-#create(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/tool/Canary;
-#create(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/CanaryTool$Sink;)Lorg/apache/hadoop/hbase/tool/Canary;
-#checkRegions([Ljava/lang/String;)I
-#checkRegionServers([Ljava/lang/String;)I
-#checkZooKeeper()I
@2.2.2
+#create(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/tool/Canary;
+#create(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/tool/CanaryTool$Sink;)Lorg/apache/hadoop/hbase/tool/Canary;
+#checkRegions([Ljava/lang/String;)I
+#checkRegionServers([Ljava/lang/String;)I
+#checkZooKeeper()I
-#<init>()V
-#<init>(Ljava/util/concurrent/ExecutorService;)V
-#getConf()Lorg/apache/hadoop/conf/Configuration;
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#run([Ljava/lang/String;)I
-#newMonitor(Lorg/apache/hadoop/hbase/client/Connection;I[Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/Canary$Monitor;
-#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/util/FileStatusFilter
@0.98.21-hadoop1
+#accept(Lorg/apache/hadoop/fs/FileStatus;)Z
@0.99.0
-###org/apache/hadoop/hbase/util/FileStatusFilter

+###org/apache/hadoop/hbase/util/FSUtils$DirFilter
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@0.95.2-hadoop1
-#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/util/FSUtils$HFileLinkFilter
@1.4.0
+#<init>()V
+#accept(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/util/FSVisitor
@0.95.0
+#visitTableStoreFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$StoreFileVisitor;)V
+#visitRegionStoreFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$StoreFileVisitor;)V
+#visitTableRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor;)V
+#visitRegionRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor;)V
+#visitLogFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$LogFileVisitor;)V
@0.98.3-hadoop1
+#visitRegions(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RegionVisitor;)V
@1.3.0
-#visitRegions(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RegionVisitor;)V
-#visitTableRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor;)V
-#visitRegionRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor;)V
-#visitLogFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FSVisitor$LogFileVisitor;)V

+###org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter
@0.95.0
+#clear()V
+#report(Ljava/lang/String;)V
+#reportError(Ljava/lang/String;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;Lorg/apache/hadoop/hbase/util/HBaseFsck$HbckInfo;)V
+#summarize()I
+#detail(Ljava/lang/String;)V
+#getErrorList()Ljava/util/ArrayList;
+#progress()V
+#print(Ljava/lang/String;)V
+#resetErrors()V
+#tableHasErrors(Lorg/apache/hadoop/hbase/util/HBaseFsck$TableInfo;)Z
@2.0.6
-###org/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter

+###org/apache/hadoop/hbase/util/hbck/HFileCorruptionChecker
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;Z)V
+#checkTables(Ljava/util/Collection;)V
+#getFailures()Ljava/util/Collection;
+#getCorrupted()Ljava/util/Collection;
+#getHFilesChecked()I
+#getQuarantined()Ljava/util/Collection;
+#getMissing()Ljava/util/Collection;
+#report(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.0.0-alpha-1
+#getFailureMobFiles()Ljava/util/Collection;
+#getCorruptedMobFiles()Ljava/util/Collection;
+#getMobFilesChecked()I
+#getQuarantinedMobFiles()Ljava/util/Collection;
+#getMissedMobFiles()Ljava/util/Collection;
@2.0.6
+#report(Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#report(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.1.0
+#report(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#report(Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
@2.1.6
+#report(Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#report(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
@2.2.0
+#report(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
-#report(Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
@2.2.1
+#report(Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)V
-#report(Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V

+###org/apache/hadoop/hbase/util/JVMClusterUtil$RegionServerThread
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;I)V
+#getRegionServer()Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
+#waitForServerOnline()V

+###org/apache/hadoop/hbase/util/KeyRange
@0.95.0
+#getStartKey()[B
+#getEndKey()[B

+###org/apache/hadoop/hbase/util/ManualEnvironmentEdge
@0.95.0
+#<init>()V
+#setValue(J)V
+#incValue(J)V
+#currentTimeMillis()J
@0.99.0
+#currentTime()J
-#currentTimeMillis()J

+###org/apache/hadoop/hbase/util/ProtoUtil
@0.95.0
+#<init>()V
+#readRawVarint32(Ljava/io/DataInput;)I
@2.1.0
-###org/apache/hadoop/hbase/util/ProtoUtil

+###org/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;)V
+#filename(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder;
+#maxthreads(I)Lorg/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder;
+#excludeFile(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder;
+#ack(Z)Lorg/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder;
+#timeout(I)Lorg/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder;
+#build()Lorg/apache/hadoop/hbase/util/RegionMover;
@2.0.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
@2.1.0
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
@2.1.1
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
@2.4.0
+#designatedFile(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder;
@2.4.1
+#rackManager(Lorg/apache/hadoop/hbase/master/RackManager;)Lorg/apache/hadoop/hbase/util/RegionMover$RegionMoverBuilder;

+###org/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm
@0.95.0
+#split([B[B)[B
+#split(I)[[B
+#firstRow()[B
+#lastRow()[B
+#setFirstRow(Ljava/lang/String;)V
+#setLastRow(Ljava/lang/String;)V
+#strToRow(Ljava/lang/String;)[B
+#rowToStr([B)Ljava/lang/String;
+#separator()Ljava/lang/String;
@0.95.2-hadoop1
+#setFirstRow([B)V
+#setLastRow([B)V
@1.3.2
+#split([B[BIZ)[[B
@2.0.0-alpha-1
-#split([B[BIZ)[[B
@2.0.0-alpha4
+#split([B[BIZ)[[B

+###org/apache/hadoop/hbase/util/RollingStatCalculator
@1.2.0
+#<init>(I)V
+#insertDataValue(J)V
+#getMean()D
+#getDeviation()D

+###org/apache/hadoop/hbase/util/ServerRegionReplicaUtil
@0.99.0
+#<init>()V
+#getRegionInfoForFs(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
+#isReadOnly(Lorg/apache/hadoop/hbase/regionserver/HRegion;)Z
+#shouldReplayRecoveredEdits(Lorg/apache/hadoop/hbase/regionserver/HRegion;)Z
+#getStoreFileInfo(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/fs/FileStatus;)Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
@1.1.0
+#getStoreFileInfo(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
+#setupRegionReplicaReplication(Lorg/apache/hadoop/conf/Configuration;)V
+#isRegionReplicaReplicationEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#isRegionReplicaWaitForPrimaryFlushEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#isRegionReplicaStoreFileRefreshEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#getRegionReplicaStoreFileRefreshMultiplier(Lorg/apache/hadoop/conf/Configuration;)D
+#getReplicationPeerId()Ljava/lang/String;
-#getStoreFileInfo(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/fs/FileStatus;)Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
@2.0.0-alpha4
+#getRegionInfoForFs(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getStoreFileInfo(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
-#getRegionInfoForFs(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#getStoreFileInfo(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;
@2.4.0
+#setupRegionReplicaReplication(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#isRegionReplicaReplicationEnabled(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Z
+#isMetaRegionReplicaReplicationEnabled(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Z
-#setupRegionReplicaReplication(Lorg/apache/hadoop/conf/Configuration;)V
-#isRegionReplicaReplicationEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
-#getReplicationPeerId()Ljava/lang/String;
@3.0.0-alpha-3
-#setupRegionReplicaReplication(Lorg/apache/hadoop/hbase/master/MasterServices;)V

+###org/apache/hadoop/hbase/util/ZKDataMigrator
@0.96.0-hadoop1
+#<init>()V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@1.7.0
+#queryForTableStates(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/util/Map;[deprecated]
@1.7.1
-#queryForTableStates(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/util/Map;[deprecated]
@2.0.0-alpha-1
+#queryForTableStates(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/util/Map;[deprecated]
-#run([Ljava/lang/String;)I
-#main([Ljava/lang/String;)V
@2.0.0-beta-1
+#queryForTableStates(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)Ljava/util/Map;[deprecated]
-#queryForTableStates(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/util/Map;[deprecated]
@2.0.0-beta-2
-#<init>()V

+###org/apache/hadoop/hbase/wal/FSHLogProvider
@2.0.0-alpha-1
+#<init>()V
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/wal/FSHLogProvider$Writer;
@2.0.1
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZJ)Lorg/apache/hadoop/hbase/wal/FSHLogProvider$Writer;

+###org/apache/hadoop/hbase/wal/WAL
@0.99.2
+#registerWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
+#unregisterWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)Z
+#rollWriter()[[B
+#rollWriter(Z)[[B
+#shutdown()V
+#close()V
+#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/concurrent/atomic/AtomicLong;ZLjava/util/List;)J
+#sync()V
+#sync(J)V
+#startCacheFlush([B)Z
+#completeCacheFlush([B)V
+#abortCacheFlush([B)V
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost;
+#getEarliestMemstoreSeqNum([B)J
+#toString()Ljava/lang/String;
@1.1.0
+#startCacheFlush([BLjava/util/Set;)Z
+#getEarliestMemstoreSeqNum([B[B)J
-#startCacheFlush([B)Z
@1.1.1
+#startCacheFlush([BLjava/util/Set;)Ljava/lang/Long;
*#getEarliestMemstoreSeqNum([B)J[deprecated]
-#startCacheFlush([BLjava/util/Set;)Z
@1.2.0
+#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/concurrent/atomic/AtomicLong;ZLjava/util/List;)J
@1.5.0
+#sync(Z)V
+#sync(JZ)V
@2.0.0-alpha-1
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
+#updateStore([B[BLjava/lang/Long;Z)V
+#startCacheFlush([BLjava/util/Map;)Ljava/lang/Long;
-#append(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
-#sync(Z)V
-#sync(JZ)V
@2.0.0-alpha3
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
@2.0.0-alpha4
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
+#getEarliestMemStoreSeqNum([B)J[deprecated]
+#getEarliestMemStoreSeqNum([B[B)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#getEarliestMemstoreSeqNum([B)J[deprecated]
-#getEarliestMemstoreSeqNum([B[B)J
@2.0.0-beta-1
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.1.0
+#sync(Z)V
+#sync(JZ)V
@2.1.8
+#appendData(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
+#appendMarker(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.2.0
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#appendData(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
-#appendMarker(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
@2.2.3
+#appendData(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
+#appendMarker(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;)J
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.2.6
+#completeCacheFlush([BJ)V
-#completeCacheFlush([B)V
@2.3.0
+#completeCacheFlush([B)V
-#completeCacheFlush([BJ)V
@2.3.1
+#completeCacheFlush([BJ)V
-#completeCacheFlush([B)V
@2.4.0
+#rollWriter()Ljava/util/Map;
+#rollWriter(Z)Ljava/util/Map;
+#getTimestamp(Ljava/lang/String;)J
-#rollWriter()[[B
-#rollWriter(Z)[[B
@3.0.0-alpha-1
-#getTimestamp(Ljava/lang/String;)J

+###org/apache/hadoop/hbase/wal/WALProvider$Writer
@0.99.2
+#sync()V
+#append(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
+#getLength()J
@1.5.0
+#sync(Z)V
-#sync()V
@2.0.0-alpha-1
+#sync()V
-#sync(Z)V
@2.0.0-alpha3
-#getLength()J
@2.1.0
+#sync(Z)V
-#sync()V

+###org/apache/hadoop/hbase/wal/WALSplitter$MutationReplay
@0.99.2
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutationProto$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;JJ)V
@1.3.3
+#compareTo(Lorg/apache/hadoop/hbase/wal/WALSplitter$MutationReplay;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutationProto$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;JJ)V
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutationProto$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;JJ)V
@2.2.1
-###org/apache/hadoop/hbase/wal/WALSplitter$MutationReplay

+###org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer
@1.1.0
+#heapSize()J
+#getEncodedRegionName()[B
+#getEntryBuffer()Ljava/util/List;
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
@2.3.0
-###org/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer

+###org/apache/hadoop/hbase/wal/WALSplitter
@0.99.2
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
+#split(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/wal/WALFactory;)Ljava/util/List;
+#finishSplitLogFile(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#getRegionDirRecoveredEditsDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getSplitEditFilesSorted(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/NavigableSet;
+#moveAsideBadEditsFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#isSequenceIdFile(Lorg/apache/hadoop/fs/Path;)Z
+#writeRegionOpenSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJ)J
+#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;)Ljava/util/List;
@1.0.0
+#writeRegionSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJ)J
-#writeRegionOpenSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJ)J
@1.1.0
+#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;Lorg/apache/hadoop/hbase/client/Durability;)Ljava/util/List;
-#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;)Ljava/util/List;
@2.0.0-alpha-1
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
+#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;Lorg/apache/hadoop/hbase/client/Durability;)Ljava/util/List;
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
-#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;Lorg/apache/hadoop/hbase/client/Durability;)Ljava/util/List;
@2.0.0-alpha4
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
@2.0.0-beta-1
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z
@2.0.0-beta-2
+#getMaxRegionSequenceId(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
+#writeRegionSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;J)V
-#writeRegionSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJ)J
@2.0.2
+#hasRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.0.6
+#hasRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#getMaxRegionSequenceId(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;)J[deprecated]
-#hasRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.1.0
-#hasRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#getMaxRegionSequenceId(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;)J[deprecated]
@2.1.1
+#hasRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.1.5
+#hasRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#hasRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.1.6
+#getMaxRegionSequenceId(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;)J[deprecated]
@2.2.0
-#getMaxRegionSequenceId(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;)J[deprecated]
@2.2.1
-#finishSplitLogFile(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
-#getRegionDirRecoveredEditsDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#hasRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#getSplitEditFilesSorted(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/NavigableSet;
-#moveAsideBadEditsFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#isSequenceIdFile(Lorg/apache/hadoop/fs/Path;)Z
-#getMaxRegionSequenceId(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
-#writeRegionSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;J)V
-#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;Lorg/apache/hadoop/hbase/client/Durability;)Ljava/util/List;
@2.3.0
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/wal/WALFactory;)Z

+###org/apache/hadoop/hbase/backup/example/HFileArchiveTableMonitor
@0.95.0
+#<init>()V
+#setArchiveTables(Ljava/util/List;)V
+#addTable(Ljava/lang/String;)V
+#removeTable(Ljava/lang/String;)V
+#clearArchive()V
+#shouldArchiveTable(Ljava/lang/String;)Z

+###org/apache/hadoop/hbase/backup/example/ZKTableArchiveClient
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/HConnection;)V
+#enableHFileBackupAsync([B)V
+#disableHFileBackup(Ljava/lang/String;)V
+#disableHFileBackup([B)V
+#disableHFileBackup()V
+#getArchivingEnabled([B)Z
+#getArchivingEnabled(Ljava/lang/String;)Z
+#getArchiveZNode(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/lang/String;
@0.99.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ClusterConnection;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/HConnection;)V
@2.0.0-beta-1
+#getArchiveZNode(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)Ljava/lang/String;
-#getArchiveZNode(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/lang/String;
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/ClusterConnection;)V

+###org/apache/hadoop/hbase/backup/impl/BackupCommands$Command
@2.0.0-alpha-1
+#execute()V
+#finish()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupCommands$Command

+###org/apache/hadoop/hbase/backup/impl/BackupManifest
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/backup/BackupInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/backup/BackupInfo;Lorg/apache/hadoop/hbase/TableName;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#getType()Lorg/apache/hadoop/hbase/backup/BackupType;
+#getTableList()Ljava/util/List;
+#store(Lorg/apache/hadoop/conf/Configuration;)V
+#getBackupImage()Lorg/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage;
+#addDependentImage(Lorg/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage;)V
+#setIncrTimestampMap(Ljava/util/HashMap;)V
+#getIncrTimestampMap()Ljava/util/Map;
+#getRestoreDependentList(Z)Ljava/util/ArrayList;
+#getDependentListByTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/ArrayList;
+#getAllDependentListByTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/ArrayList;
+#canCoverImage(Lorg/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage;Lorg/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage;)Z
+#canCoverImage(Ljava/util/ArrayList;Lorg/apache/hadoop/hbase/backup/impl/BackupManifest$BackupImage;)Z
+#toBackupInfo()Lorg/apache/hadoop/hbase/backup/BackupInfo;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/impl/BackupManifest

+###org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob
@2.0.0-alpha-1
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getSubTaskPercntgInWholeTask()F
+#setSubTaskPercntgInWholeTask(F)V
+#copy(Lorg/apache/hadoop/hbase/backup/BackupInfo;Lorg/apache/hadoop/hbase/backup/impl/BackupManager;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/backup/BackupType;[Ljava/lang/String;)I
+#cancel(Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob

+###org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedurePool
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#submitTask(Ljava/util/concurrent/Callable;)V
+#waitForOutstandingTasks()Z
+#close()V
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedurePool

+###org/apache/hadoop/hbase/backup/util/BackupUtils
@2.0.0-alpha-1
+#getRSLogTimestampMins(Ljava/util/HashMap;)Ljava/util/HashMap;
+#copyTableRegionInfo(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/backup/BackupInfo;Lorg/apache/hadoop/conf/Configuration;)V
+#writeRegioninfoOnFilesystem(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#parseHostNameFromLogFile(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getUniqueWALFileNamePart(Ljava/lang/String;)Ljava/lang/String;
+#getUniqueWALFileNamePart(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getFilesLength(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
+#getWALFilesOlderThan(Lorg/apache/hadoop/conf/Configuration;Ljava/util/HashMap;)Ljava/util/List;
+#parseTableNames(Ljava/lang/String;)[Lorg/apache/hadoop/hbase/TableName;
+#checkPathExist(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z
+#checkTargetDir(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#getMinValue(Ljava/util/HashMap;)Ljava/lang/Long;
+#parseHostFromOldLog(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getCreationTime(Lorg/apache/hadoop/fs/Path;)Ljava/lang/Long;
+#getFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)Ljava/util/List;
+#cleanupBackupData(Lorg/apache/hadoop/hbase/backup/BackupInfo;Lorg/apache/hadoop/conf/Configuration;)V
+#getTableBackupDir(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#sortHistoryListDesc(Ljava/util/ArrayList;)Ljava/util/ArrayList;
+#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
+#getPath(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getLogBackupDir(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getHistory(Lorg/apache/hadoop/conf/Configuration;ILorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/hbase/backup/BackupInfo$Filter;)Ljava/util/List;
+#loadBackupInfo(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/backup/BackupInfo;
+#createRestoreRequest(Ljava/lang/String;Ljava/lang/String;Z[Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/TableName;Z)Lorg/apache/hadoop/hbase/backup/RestoreRequest;
+#validate(Ljava/util/HashMap;Lorg/apache/hadoop/conf/Configuration;)Z
@2.0.0-alpha2
+#getBulkOutputDir(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Z)Lorg/apache/hadoop/fs/Path;
+#getBulkOutputDir(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getFileNameCompatibleString(Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#failed(I)Z
+#succeeded(I)Z
+#createLoader(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/util/BackupUtils

+###org/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination
@0.99.0
+#init(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker;)V
+#stopProcessingTasks()V
+#isStop()Z
+#taskLoop()V
+#markCorrupted(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/fs/FileSystem;)V
+#isReady()Z
+#getTaskReadySeq()I
+#registerListener()V
+#removeListener()V
+#endTask(Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;)V
+#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
@1.1.0
+#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$RegionStoreSequenceIds;
@2.0.0-alpha-1
+#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
-#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;
@2.0.0-alpha3
+#endTask(Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/LongAdder;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;)V
-#endTask(Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;)V
@2.0.0-beta-1
-#getRegionFlushedSequenceId(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClusterStatusProtos$RegionStoreSequenceIds;

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$TaskFinisher$Status
@0.99.0
+#values()[Lorg/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$TaskFinisher$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$TaskFinisher$Status;

+###org/apache/hadoop/hbase/coprocessor/BulkLoadObserver
@0.98.9-hadoop1
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$PrepareBulkLoadRequest;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$CleanupBulkLoadRequest;)V
@0.99.0
-###org/apache/hadoop/hbase/coprocessor/BulkLoadObserver

+###org/apache/hadoop/hbase/coprocessor/CoprocessorService
@0.95.0
+#getService()Lcom/google/protobuf/Service;
@3.0.0-alpha-1
+#getService()Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;
-#getService()Lcom/google/protobuf/Service;

+###org/apache/hadoop/hbase/coprocessor/MasterObserver
@0.95.0
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
+#postBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
+#preShutdown(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preStopMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postStartMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
@0.95.2-hadoop1
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
@0.96.0-hadoop1
+#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.98.8-hadoop1
+#preTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
@0.98.19-hadoop1
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@0.99.0
+#preTableFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTableFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.0.0
*#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V[deprecated]
*#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V[deprecated]
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#preGetTableNames(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableNames(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/lang/String;)V
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.1.0
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
@1.1.3
+#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)V
+#postAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.3.0
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
+#preDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.4.0
+#preGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#preMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#preAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#postRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Z)V
@1.5.0
+#preListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.7.0
+#preRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
+#postRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
@2.0.0-alpha-1
*#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
*#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
+#preCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
*#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
*#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
+#preDeleteTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postCompletedDeleteTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
*#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
*#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
+#preTruncateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postCompletedTruncateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
*#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V[deprecated]
*#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V[deprecated]
+#preModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
*#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#postAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#postModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
+#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
*#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
+#preDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
*#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
+#postDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
*#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
+#preDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
*#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
+#postCompletedDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
*#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
*#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
+#preEnableTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postCompletedEnableTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
*#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
*#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
+#preDisableTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postCompletedDisableTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preListLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
+#preSplitRegion(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preSplitRegionAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postCompletedSplitRegionAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preSplitRegionBeforePONRAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
+#preSplitRegionAfterPONRAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postRollBackSplitRegionAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCompletedMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preMergeRegionsCommitAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#postMergeRegionsCommitAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postRollBackMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
*#preDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
*#postDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
+#preMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preAddReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#postAddReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#preRemoveReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postRemoveReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preEnableReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postEnableReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preDisableReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postDisableReplicationPeer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetReplicationPeerConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetReplicationPeerConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preUpdateReplicationPeerConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#postUpdateReplicationPeerConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#preListReplicationPeers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postListReplicationPeers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
+#postRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
+#preLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
+#postLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
-#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
-#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
-#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#postListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
-#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V[deprecated]
-#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V[deprecated]
-#preListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#postListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
-#preGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ClusterStatus;)V
-#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
-#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
-#postRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
-#preRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
-#postRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
@2.0.0-alpha2
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#postAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#postModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@2.0.0-alpha3
+#preGetProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preGetLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
+#postRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
+#preListDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
-#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V[deprecated]
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V[deprecated]
-#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V[deprecated]
-#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
-#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V[deprecated]
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
-#preListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preListLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postListLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
-#postDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V[deprecated]
-#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
-#postRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/locking/LockProcedure$LockType;Ljava/lang/String;)V
@2.0.0-alpha4
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;J)V
+#postGetProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V
+#postCompletedSplitRegionAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preSplitRegionBeforeMETAAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
+#preSplitRegionAfterMETAAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postCompletedMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preMergeRegionsCommitAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)V
+#postMergeRegionsCommitAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postRollBackMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)V
+#postRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)V
+#preLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#postLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preDecommissionRegionServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Z)V
+#postDecommissionRegionServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Z)V
+#preListDecommissionedRegionServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListDecommissionedRegionServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preRecommissionRegionServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
+#postRecommissionRegionServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
-#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#postAddColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#postCompletedAddColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#postModifyColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#postCompletedModifyColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V
-#preDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#postDeleteColumnFamily(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#postCompletedDeleteColumnFamilyAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
-#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)V
-#postGetProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#postGetLocks(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
-#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
-#postCompletedSplitRegionAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preSplitRegionBeforePONRAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
-#preSplitRegionAfterPONRAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postCompletedMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preMergeRegionsCommitAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#postMergeRegionsCommitAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postRollBackMergeRegionsAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
-#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#postListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#postSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$Quotas;)V
-#preMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#postMergeRegions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#preRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
-#postRequestLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/procedure2/LockType;Ljava/lang/String;)V
-#preLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
-#postLockHeartbeat(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/master/locking/LockProcedure;Z)V
@2.0.0-beta-1
+#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#postRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#preGetClusterMetrics(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetClusterMetrics(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ClusterMetrics;)V
+#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
-#preListDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postListDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@2.0.1
*#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
*#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
*#preModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
+#preModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
*#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
+#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
*#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V[deprecated]
+#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
*#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V[deprecated]
+#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
@2.2.0
+#preCreateTableRegionsInfos(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#preSetRegionServerQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#postSetRegionServerQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/quotas/GlobalQuotaSettings;)V
+#preSwitchRpcThrottle(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#postSwitchRpcThrottle(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
+#preIsRpcThrottleEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postIsRpcThrottleEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#preSwitchExceedThrottleQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#postSwitchExceedThrottleQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
+#preGrant(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;Z)V
+#postGrant(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;Z)V
+#preRevoke(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;)V
+#postRevoke(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;)V
+#preGetUserPermissions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B)V
+#postGetUserPermissions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B)V
+#preHasUserPermissions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/util/List;)V
+#postHasUserPermissions(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/util/List;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.2.5
+#preRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
+#postRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
@2.3.0
+#postCompletedSnapshotAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#preListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@2.4.0
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#preUpdateRSGroupConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/util/Map;)V
+#postUpdateRSGroupConfig(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/util/Map;)V
@2.5.0
+#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
+#postModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
+#postModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)V
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;Ljava/util/List;)V
+#preMasterStoreFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postMasterStoreFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;Lorg/apache/hadoop/hbase/client/BalanceResponse;)V
-#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Z)V
@3.0.0-alpha-1
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Z)V
+#preGetRSGroupInfo(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetRSGroupInfo(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetRSGroupInfoOfTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postGetRSGroupInfoOfTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preListRSGroups(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListRSGroups(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preListTablesInRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postListTablesInRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetConfiguredNamespacesAndTablesInRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetConfiguredNamespacesAndTablesInRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preGetRSGroupInfoOfServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/net/Address;)V
+#postGetRSGroupInfoOfServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/net/Address;)V
+#preTransitReplicationPeerSyncReplicationState(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
+#postTransitReplicationPeerSyncReplicationState(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
-#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
-#postModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
-#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
-#postModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)V
-#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/RegionInfo;Z)V
-#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
-#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;Ljava/util/List;)V
-#preMasterStoreFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postMasterStoreFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
-#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;Lorg/apache/hadoop/hbase/client/BalanceResponse;)V
@3.0.0-alpha-2
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/BalanceRequest;Ljava/util/List;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)V
+#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;Lorg/apache/hadoop/hbase/client/BalanceResponse;)V
-#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Z)V
@3.0.0-alpha-3
+#preModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/lang/String;
+#postModifyTableStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
+#preModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)Ljava/lang/String;
+#postModifyColumnFamilyStoreFileTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)V
+#preMasterStoreFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postMasterStoreFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
-#preModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
-#postCompletedModifyTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V[deprecated]
-#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V[deprecated]
-#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V[deprecated]

+###org/apache/hadoop/hbase/executor/EventHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/executor/EventType;)V
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
+#run()V
+#process()V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;
+#getPriority()I
+#getSeqid()J
+#compareTo(Ljava/lang/Runnable;)I
+#getListener()Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;
+#setListener(Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;)V
+#toString()Ljava/lang/String;
+#getInformativeName()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha-1
-#getListener()Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;
-#setListener(Lorg/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener;)V
@2.2.7
+#compareTo(Lorg/apache/hadoop/hbase/executor/EventHandler;)I
-#compareTo(Ljava/lang/Runnable;)I

+###org/apache/hadoop/hbase/favored/FavoredNodesPlan
@2.0.0-alpha-1
+#<init>()V
+#updateFavoredNodesMap(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#removeFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#getFavoredServerPosition(Ljava/util/List;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan$Position;
+#getAssignmentMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0-alpha4
+#updateFavoredNodesMap(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)V
+#removeFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
-#updateFavoredNodesMap(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#removeFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
-#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
@2.1.9
+#size()I
-#removeFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
@2.2.0
+#removeFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
-#size()I
@2.2.4
+#size()I
-#removeFavoredNodes(Lorg/apache/hadoop/hbase/client/RegionInfo;)Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/favored/FavoredNodesPlan

+###org/apache/hadoop/hbase/generated/master/master_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/generated/master/zk_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
+#getDependants()Ljava/util/List;
-#getDependants()Ljava/lang/Object;

+###org/apache/hadoop/hbase/http/ClickjackingPreventionFilter
@1.2.0
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
+#destroy()V
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/ClickjackingPreventionFilter

+###org/apache/hadoop/hbase/http/HttpServer$Builder
@0.99.0
+#<init>()V
+#addEndpoint(Ljava/net/URI;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#hostName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#trustStore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#keyStore(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#keyPassword(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#needsClientAuth(Z)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;[deprecated]
+#setBindAddress(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;[deprecated]
+#setPort(I)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;[deprecated]
+#setFindPort(Z)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setConnector(Lorg/mortbay/jetty/Connector;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setPathSpec([Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setACL(Lorg/apache/hadoop/security/authorize/AccessControlList;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setSecurityEnabled(Z)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setUsernameConfKey(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setKeytabConfKey(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setAppDir(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setLogDir(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#build()Lorg/apache/hadoop/hbase/http/HttpServer;
@1.4.0
+#setKerberosNameRulesKey(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
+#setSignatureSecretFileKey(Ljava/lang/String;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
@2.0.0-alpha-1
-#setConnector(Lorg/mortbay/jetty/Connector;)Lorg/apache/hadoop/hbase/http/HttpServer$Builder;
@2.0.0-alpha4
-###org/apache/hadoop/hbase/http/HttpServer$Builder

+###org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutputHelper
@2.0.0-alpha-1
+#createOutput(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLio/netty/channel/EventLoop;)Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
@2.0.0-alpha2
+#createOutput(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
-#createOutput(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLio/netty/channel/EventLoop;)Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
@2.0.0-beta-1
+#createOutput(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
-#createOutput(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZZSJLorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)Lorg/apache/hadoop/hbase/io/asyncfs/AsyncFSOutput;
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/AsyncFSOutputHelper

+###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper$NameNodeException
@2.0.0-alpha-1
+#<init>(Ljava/lang/Throwable;)V
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper$NameNodeException

+###org/apache/hadoop/hbase/io/hfile/Cacheable
@0.95.0
+#getSerializedLength()I
+#serialize(Ljava/nio/ByteBuffer;)V
+#getDeserializer()Lorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
@1.4.5
+#serialize(Ljava/nio/ByteBuffer;Z)V
-#serialize(Ljava/nio/ByteBuffer;)V
@2.0.0-alpha-1
+#serialize(Ljava/nio/ByteBuffer;)V
+#getMemoryType()Lorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;
-#serialize(Ljava/nio/ByteBuffer;Z)V
@2.0.2
+#serialize(Ljava/nio/ByteBuffer;Z)V
-#serialize(Ljava/nio/ByteBuffer;)V
@2.3.0
+#retain()Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#refCnt()I
+#release()Z
+#retain()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#getMemoryType()Lorg/apache/hadoop/hbase/io/hfile/Cacheable$MemoryType;

+###org/apache/hadoop/hbase/io/hfile/CombinedBlockCache
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketCache;)V
+#heapSize()J
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#shutdown()V
+#size()J
+#getFreeSize()J
+#getCurrentSize()J
+#getEvictedCount()J
+#getBlockCount()J
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#getEvictedCount()J
-#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.99.0
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
+#setMaxSize(J)V
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketCache;)V
@1.4.0
+#getMaxSize()J
+#getCurrentDataSize()J
+#getDataBlockCount()J
@2.0.0-alpha-1
+#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getRefCount(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
-#getMaxSize()J
-#getCurrentDataSize()J
-#getDataBlockCount()J
@2.0.0-alpha3
+#getMaxSize()J
+#getCurrentDataSize()J
+#getDataBlockCount()J
@2.0.0-beta-1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.2.0
+#getOnHeapCache()Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/FirstLevelBlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#getRpcRefCount(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
+#getFirstLevelCache()Lorg/apache/hadoop/hbase/io/hfile/FirstLevelBlockCache;
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
-#returnBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
-#getRefCount(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)I
-#getOnHeapCache()Lorg/apache/hadoop/hbase/io/hfile/LruBlockCache;
@2.4.14
+#getSecondLevelCache()Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
@2.4.15
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.5.0
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@2.5.1
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
@3.0.0-alpha-1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
-#getSecondLevelCache()Lorg/apache/hadoop/hbase/io/hfile/BlockCache;

+###org/apache/hadoop/hbase/io/hfile/CorruptHFileException
@0.95.2-hadoop1
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/io/hfile/HFile$Writer
@0.95.0
+#appendFileInfo([B[B)V
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
+#append([B[B)V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#addInlineBlockWriter(Lorg/apache/hadoop/hbase/io/hfile/InlineBlockWriter;)V
+#appendMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/Writable;)V
+#addGeneralBloomFilter(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;)V
+#addDeleteFamilyBloomFilter(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;)V
@0.98.0-hadoop1
+#append([B[B[B)V
+#getFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
@0.99.1
+#append(Lorg/apache/hadoop/hbase/Cell;)V
-#append(Lorg/apache/hadoop/hbase/KeyValue;)V
-#append([B[B)V
-#append([B[B[B)V
@2.0.0-alpha-1
-#append(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/io/hfile/HFileReaderImpl$HFileScannerImpl
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZ)V
+#isSeeked()Z
+#toString()Ljava/lang/String;
+#getReader()Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#close()V
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
+#seekTo(Lorg/apache/hadoop/hbase/Cell;)I
+#reseekTo(Lorg/apache/hadoop/hbase/Cell;)I
+#seekTo(Lorg/apache/hadoop/hbase/Cell;Z)I
+#seekBefore(Lorg/apache/hadoop/hbase/Cell;)Z
+#getEffectiveDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getCell()Lorg/apache/hadoop/hbase/Cell;
+#getKey()Lorg/apache/hadoop/hbase/Cell;
+#getValue()Ljava/nio/ByteBuffer;
+#next()Z
+#seekTo()Z
+#getKeyString()Ljava/lang/String;
+#getValueString()Ljava/lang/String;
+#compareKey(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;)I
+#shipped()V

+###org/apache/hadoop/hbase/io/hfile/NoOpDataBlockEncoder
@0.95.0
+#diskToCacheFormat(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#beforeWriteToDisk(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#useEncodedScanner(Z)Z
+#saveMetadata(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V
+#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getEncodingInCache()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#toString()Ljava/lang/String;
+#newOnDiskDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newOnDiskDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.96.1-hadoop1
+#useEncodedScanner()Z
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#diskToCacheFormat(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#useEncodedScanner(Z)Z
-#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getEncodingInCache()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#newOnDiskDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newOnDiskDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.98.0-hadoop1
+#beforeWriteToDisk(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#beforeWriteToDisk(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.99.0
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[BLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#beforeWriteToDisk(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
@0.99.1
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@2.3.0
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@2.5.0
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-1
+#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-2
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext([BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;

+###org/apache/hadoop/hbase/ipc/BalancedQueueRpcExecutor
@0.98.4-hadoop1
+#<init>(Ljava/lang/String;III)V
+#<init>(Ljava/lang/String;IILjava/lang/Class;[Ljava/lang/Object;)V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
+#getQueueLength()I
+#getQueues()Ljava/util/List;
+#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/BalancedQueueRpcExecutor$QueueBalancer;
@0.98.9-hadoop1
-#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/BalancedQueueRpcExecutor$QueueBalancer;
@0.98.10-hadoop1
+#<init>(Ljava/lang/String;IIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
-#<init>(Ljava/lang/String;IILjava/lang/Class;[Ljava/lang/Object;)V
@0.99.0
+#<init>(Ljava/lang/String;IILjava/lang/Class;[Ljava/lang/Object;)V
+#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/BalancedQueueRpcExecutor$QueueBalancer;
-#<init>(Ljava/lang/String;IIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
-#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
@0.99.2
-#getBalancer(I)Lorg/apache/hadoop/hbase/ipc/BalancedQueueRpcExecutor$QueueBalancer;
@1.0.0
+#<init>(Ljava/lang/String;IIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V
@1.2.0
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
-#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
@1.4.0
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#<init>(Ljava/lang/String;ILjava/lang/String;ILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
*#<init>(Ljava/lang/String;III)V[deprecated]
*#<init>(Ljava/lang/String;IIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
*#<init>(Ljava/lang/String;IILjava/lang/Class;[Ljava/lang/Object;)V[deprecated]
*#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
-#getQueueLength()I
-#getQueues()Ljava/util/List;
@2.0.0-alpha-1
-#<init>(Ljava/lang/String;III)V[deprecated]
-#<init>(Ljava/lang/String;IIILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V[deprecated]
-#<init>(Ljava/lang/String;IILjava/lang/Class;[Ljava/lang/Object;)V[deprecated]
-#<init>(Ljava/lang/String;IILorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;Ljava/lang/Class;[Ljava/lang/Object;)V[deprecated]
@2.5.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-3
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/ipc/EmptyServiceNameException
@0.95.1-hadoop1
+#<init>()V

+###org/apache/hadoop/hbase/ipc/MetricsHBaseServerWrapperImpl
@0.95.0
+#getTotalQueueSize()J
+#getGeneralQueueLength()I
+#getReplicationQueueLength()I
+#getPriorityQueueLength()I
+#getNumOpenConnections()I
@0.98.3-hadoop1
+#getActiveRpcHandlerCount()I
@1.3.0
+#getNumGeneralCallsDropped()J
+#getNumLifoModeSwitches()J
@1.4.0
+#getWriteQueueLength()I
+#getReadQueueLength()I
+#getScanQueueLength()I
+#getActiveWriteRpcHandlerCount()I
+#getActiveReadRpcHandlerCount()I
+#getActiveScanRpcHandlerCount()I
@1.5.0
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I
@2.0.0-alpha-1
-#getActiveGeneralRpcHandlerCount()I
-#getActivePriorityRpcHandlerCount()I
-#getActiveReplicationRpcHandlerCount()I
@2.0.5
+#getMetaPriorityQueueLength()I
@2.1.0
-#getMetaPriorityQueueLength()I
@2.1.3
+#getMetaPriorityQueueLength()I
@2.2.0
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveMetaPriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I
+#getNettyDmUsage()J

+###org/apache/hadoop/hbase/ipc/RpcCall
@2.0.0-alpha-1
+#getService()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;
+#getMethod()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;
+#getParam()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;
+#getCellScanner()Lorg/apache/hadoop/hbase/CellScanner;
+#getReceiveTime()J
+#getStartTime()J
+#setStartTime(J)V
+#getTimeout()I
+#getPriority()I
+#getDeadline()J
+#getSize()J
+#getHeader()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;
+#getRemotePort()I
+#setResponse(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/Throwable;Ljava/lang/String;)V
+#sendResponseIfReady()V
+#cleanup()V
+#toShortString()Ljava/lang/String;
+#getTraceInfo()Lorg/apache/htrace/TraceInfo;
@2.0.0-beta-1
+#getService()Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;
+#getMethod()Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;
+#getParam()Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;
+#setResponse(Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/Throwable;Ljava/lang/String;)V
-#getService()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;
-#getMethod()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;
-#getParam()Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;
-#setResponse(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/Throwable;Ljava/lang/String;)V
-#getTraceInfo()Lorg/apache/htrace/TraceInfo;

+###org/apache/hadoop/hbase/ipc/RpcServer$CallCleanup
@2.0.0-alpha-1
+#run()V

+###org/apache/hadoop/hbase/ipc/RpcServerInterface
@0.95.1-hadoop1
+#setSocketSendBufSize(I)V
+#start()V
+#stop()V
+#join()V
+#getListenerAddress()Ljava/net/InetSocketAddress;
+#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
+#setErrorHandler(Lorg/apache/hadoop/hbase/ipc/HBaseRPCErrorHandler;)V
+#openServer()V
+#startThreads()V
+#getMetrics()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServer;
+#setQosFunction(Lcom/google/common/base/Function;)V
+#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
@0.98.0-hadoop1
+#isStarted()Z
+#getErrorHandler()Lorg/apache/hadoop/hbase/ipc/HBaseRPCErrorHandler;
+#addCallSize(J)V
-#setQosFunction(Lcom/google/common/base/Function;)V
@0.99.0
-#openServer()V
-#startThreads()V
@1.1.0
+#getScheduler()Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@1.1.8
+#setRsRpcServices(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
@1.2.0
-#setRsRpcServices(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
@1.2.5
+#setRsRpcServices(Lorg/apache/hadoop/hbase/regionserver/RSRpcServices;)V
@1.3.0
*#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
+#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
@1.4.14
+#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
@1.5.0
+#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
@1.7.0
*#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V[deprecated]
+#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
+#setNamedQueueRecorder(Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;)V
@2.0.0-alpha-1
+#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
+#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
+#call(Lorg/apache/hadoop/hbase/ipc/RpcCall;Lorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
-#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
-#call(Lcom/google/protobuf/BlockingService;Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;
-#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#setNamedQueueRecorder(Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;)V
@2.0.0-beta-1
+#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
+#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
-#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
-#call(Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/BlockingService;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hadoop/hbase/shaded/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
@2.2.5
+#refreshAuthManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
-#refreshAuthManager(Lorg/apache/hadoop/security/authorize/PolicyProvider;)V
@2.3.0
+#getByteBuffAllocator()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;
+#setSlowLogRecorder(Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;)V
+#getSlowLogRecorder()Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;
@2.4.0
+#setNamedQueueRecorder(Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;)V
-#setSlowLogRecorder(Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;)V
-#getSlowLogRecorder()Lorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;
@3.0.0-alpha-1
-#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
-#call(Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;JI)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]

+###org/apache/hadoop/hbase/ipc/SimpleRpcScheduler
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;I)V
+#init(Lorg/apache/hadoop/hbase/ipc/RpcScheduler$Context;)V
+#start()V
+#stop()V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
+#getGeneralQueueLength()I
+#getPriorityQueueLength()I
+#getReplicationQueueLength()I
@0.98.3-hadoop1
+#getActiveRpcHandlerCount()I
@0.98.10-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;I)V
@0.99.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;I)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
@1.0.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
@1.2.0
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
-#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)V
@1.3.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#getNumGeneralCallsDropped()J
+#getNumLifoModeSwitches()J
@1.4.0
+#getWriteQueueLength()I
+#getReadQueueLength()I
+#getScanQueueLength()I
+#getActiveWriteRpcHandlerCount()I
+#getActiveReadRpcHandlerCount()I
+#getActiveScanRpcHandlerCount()I
@1.5.0
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I
@2.0.0-alpha-1
-#getActiveGeneralRpcHandlerCount()I
-#getActivePriorityRpcHandlerCount()I
-#getActiveReplicationRpcHandlerCount()I
@2.0.0-alpha4
+#getCallQueueInfo()Lorg/apache/hadoop/hbase/ipc/CallQueueInfo;
@2.0.5
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
+#getMetaPriorityQueueLength()I
-#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
@2.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;IIIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
-#getMetaPriorityQueueLength()I
@2.1.3
+#<init>(Lorg/apache/hadoop/conf/Configuration;IIIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
+#getMetaPriorityQueueLength()I
-#<init>(Lorg/apache/hadoop/conf/Configuration;IIILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;I)V
@2.2.0
+#getActiveMetaPriorityRpcHandlerCount()I
+#getActiveGeneralRpcHandlerCount()I
+#getActivePriorityRpcHandlerCount()I
+#getActiveReplicationRpcHandlerCount()I

+###org/apache/hadoop/hbase/mapred/IdentityTableReduce
@0.95.0
+#<init>()V
+#reduce(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
+#reduce(Ljava/lang/Object;Ljava/util/Iterator;Lorg/apache/hadoop/mapred/OutputCollector;Lorg/apache/hadoop/mapred/Reporter;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/IdentityTableReduce

+###org/apache/hadoop/hbase/mapred/TableInputFormat
@0.95.0
+#<init>()V
+#configure(Lorg/apache/hadoop/mapred/JobConf;)V
+#validateInput(Lorg/apache/hadoop/mapred/JobConf;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableInputFormat

+###org/apache/hadoop/hbase/mapred/TableRecordReader
@0.95.0
+#<init>()V
+#restart([B)V
+#init()V
+#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
+#setInputColumns([[B)V
+#setStartRow([B)V
+#setEndRow([B)V
+#setRowFilter(Lorg/apache/hadoop/hbase/filter/Filter;)V
+#close()V
+#createKey()Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;
+#createValue()Lorg/apache/hadoop/hbase/client/Result;
+#getPos()J
+#getProgress()F
+#next(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;Lorg/apache/hadoop/hbase/client/Result;)Z
+#createValue()Ljava/lang/Object;
+#createKey()Ljava/lang/Object;
+#next(Ljava/lang/Object;Ljava/lang/Object;)Z
@0.99.0
+#setHTable(Lorg/apache/hadoop/hbase/client/Table;)V
-#setHTable(Lorg/apache/hadoop/hbase/client/HTable;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableRecordReader

+###org/apache/hadoop/hbase/mapred/TableSnapshotInputFormat
@0.98.3-hadoop1
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapred/JobConf;I)[Lorg/apache/hadoop/mapred/InputSplit;
+#getRecordReader(Lorg/apache/hadoop/mapred/InputSplit;Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/mapred/Reporter;)Lorg/apache/hadoop/mapred/RecordReader;
+#setInput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;)V
@1.3.2
+#setInput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha-1
-#setInput(Lorg/apache/hadoop/mapred/JobConf;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/RegionSplitter$SplitAlgorithm;I)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapred/TableSnapshotInputFormat

+###org/apache/hadoop/hbase/mapreduce/CopyTable
@0.95.0
+#<init>()V
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
-#<init>()V
@0.98.8-hadoop1
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
-#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
@0.98.10-hadoop1
+#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;[deprecated]
@0.99.0
-#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
@0.99.1
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
-#createSubmittableJob(Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
@2.0.0-alpha-1
+#<init>()V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/CopyTable

+###org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2
@0.96.2-hadoop1
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/hbase/client/HTable;)V
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2

+###org/apache/hadoop/hbase/mapreduce/KeyValueSerialization
@0.95.0
+#<init>()V
+#accept(Ljava/lang/Class;)Z
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/mapreduce/KeyValueSerialization$KeyValueDeserializer;
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/mapreduce/KeyValueSerialization$KeyValueSerializer;
+#getDeserializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Deserializer;
+#getSerializer(Ljava/lang/Class;)Lorg/apache/hadoop/io/serializer/Serializer;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/KeyValueSerialization

+###org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/HTable;)V
+#inferBoundaries(Ljava/util/TreeMap;)[[B
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@1.1.0
+#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;)V
@1.1.6
*#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/HTable;)V[deprecated]
@1.2.2
*#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/HTable;)V[deprecated]
@1.3.0
+#prepareHFileQueue(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;Z)V
+#loadHFileQueue(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/Deque;Lorg/apache/hadoop/hbase/util/Pair;)V
+#setBulkToken(Ljava/lang/String;)V
@1.3.6
+#setClusterIds(Ljava/util/List;)V
@1.4.0
-#setClusterIds(Ljava/util/List;)V
@1.4.1
+#setDepth(I)V
@1.4.11
+#setClusterIds(Ljava/util/List;)V
@2.0.0-alpha-1
+#doBulkLoad(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;ZZ)V
+#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;ZZ)V
+#prepareHFileQueue(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;ZZ)V
+#prepareHFileQueue(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;Z)V
+#loadHFileQueue(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/Deque;Lorg/apache/hadoop/hbase/util/Pair;Z)V
+#run(Ljava/lang/String;Ljava/util/Map;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
-#setClusterIds(Ljava/util/List;)V
-#setDepth(I)V
-#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/HTable;)V[deprecated]
@2.0.0-alpha3
-#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;)V
-#doBulkLoad(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;ZZ)V
-#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;ZZ)V
-#prepareHFileQueue(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;Z)V
-#prepareHFileQueue(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;ZZ)V
-#prepareHFileQueue(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;Z)V
-#loadHFileQueue(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/Deque;Lorg/apache/hadoop/hbase/util/Pair;)V
-#loadHFileQueue(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/Deque;Lorg/apache/hadoop/hbase/util/Pair;Z)V
-#inferBoundaries(Ljava/util/TreeMap;)[[B
-#run([Ljava/lang/String;)I
-#main([Ljava/lang/String;)V
-#setBulkToken(Ljava/lang/String;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles

+###org/apache/hadoop/hbase/mapreduce/TableInputFormat
@0.95.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#addColumns(Lorg/apache/hadoop/hbase/client/Scan;[[B)V
@0.98.8-hadoop1
+#configureSplitTable(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/hbase/TableName;)V
@0.99.0
-#configureSplitTable(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/hbase/TableName;)V
@0.99.1
+#configureSplitTable(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/hbase/TableName;)V
@0.99.2
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
@1.3.0
+#createScanFromConfiguration(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Scan;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableInputFormat

+###org/apache/hadoop/hbase/mapreduce/TableReducer
@0.95.0
+#<init>()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableReducer

+###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl$InputSplit
@0.98.3-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getLength()J
+#getLocations()[Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
-#<init>(Ljava/lang/String;Ljava/util/List;)V
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/fs/Path;)V
+#getHtd()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getScan()Ljava/lang/String;
+#getRestoreDir()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/fs/Path;)V
-#getHtd()Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getScan()Ljava/lang/String;
-#getRestoreDir()Ljava/lang/String;
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/fs/Path;)V
+#getHtd()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#getScan()Ljava/lang/String;
+#getRestoreDir()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/TableSnapshotInputFormatImpl$InputSplit

+###org/apache/hadoop/hbase/mapreduce/WALPlayer
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@2.0.0-alpha-1
+#<init>()V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/mapreduce/WALPlayer

+###org/apache/hadoop/hbase/master/assignment/RegionStates
@2.0.0-alpha-1
+#<init>()V
+#clear()V
+#deleteRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getRegionStates()Ljava/util/ArrayList;
+#getRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
+#getRegionState(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/RegionState;
+#hasTableRegionStates(Lorg/apache/hadoop/hbase/TableName;)Z
+#getRegionsOfTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getServerRegionInfoSet(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
+#logSplit(Lorg/apache/hadoop/hbase/ServerName;)V
+#logSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#updateRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)V
+#getAssignedRegions()Ljava/util/List;
+#isRegionInState(Lorg/apache/hadoop/hbase/HRegionInfo;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#isRegionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isRegionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#getSnapShotOfAssignment(Ljava/util/Collection;)Ljava/util/Map;
+#getRegionAssignments()Ljava/util/Map;
+#getRegionByStateOfTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
+#getRegionServerOfRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/ServerName;
+#getAssignmentsByTable(Z)Ljava/util/Map;
+#getAssignmentsByTable()Ljava/util/Map;
+#hasRegionsInTransition()Z
+#isRegionInTransition(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#getRegionTransitionProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure;
+#getRegionTransitionState(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
+#getRegionsInTransition()Ljava/util/List;
+#getRegionsInTransitionCount()I
+#getRegionsStateInTransition()Ljava/util/List;
+#getRegionsInTransitionOrderedByTimestamp()Ljava/util/SortedSet;
+#addToOfflineRegions(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
+#removeFromOfflineRegions(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#addToFailedOpen(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionFailedOpen;
+#getFailedOpen(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionFailedOpen;
+#removeFromFailedOpen(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getRegionFailedOpen()Ljava/util/List;
+#getOrCreateServer(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
+#removeServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#getAverageLoad()D
+#addRegionToServer(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
+#removeRegionFromServer(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
+#regionNamesToString(Ljava/util/Collection;)Ljava/lang/String;
@2.0.0-alpha2
+#isRegionInRegionStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@2.0.0-alpha4
+#isRegionInRegionStates(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#deleteRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRegionState(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
+#logSplit(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#updateRegionState(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)V
+#isRegionInState(Lorg/apache/hadoop/hbase/client/RegionInfo;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#isRegionOnline(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#isRegionOffline(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#getRegionServerOfRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/ServerName;
+#isRegionInTransition(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#getRegionTransitionProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure;
+#getRegionTransitionState(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
+#removeFromOfflineRegions(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getFailedOpen(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionFailedOpen;
+#removeFromFailedOpen(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
-#isRegionInRegionStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#deleteRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#getRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
-#logSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#updateRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)V
-#isRegionInState(Lorg/apache/hadoop/hbase/HRegionInfo;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
-#isRegionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#isRegionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#getRegionServerOfRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/ServerName;
-#isRegionInTransition(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#getRegionTransitionProcedure(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure;
-#getRegionTransitionState(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
-#removeFromOfflineRegions(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#getFailedOpen(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionFailedOpen;
-#removeFromFailedOpen(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-beta-1
+#getRegionsOfTable(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
+#addRegionToServer(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
-#addRegionToServer(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
@2.0.1
+#metaLogSplitting(Lorg/apache/hadoop/hbase/ServerName;)V
+#metaLogSplit(Lorg/apache/hadoop/hbase/ServerName;)V
+#logSplitting(Lorg/apache/hadoop/hbase/ServerName;)V
-#logSplit(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
@2.0.2
+#getRegionsOfTableForReopen(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#checkReopened(Lorg/apache/hadoop/hbase/HRegionLocation;)Lorg/apache/hadoop/hbase/HRegionLocation;
@2.0.3
+#getRegionStateNode(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
+#getServerNode(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
-#getOrCreateServer(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
-#addRegionToServer(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
@2.0.6
+#deleteRegions(Ljava/util/List;)V
@2.1.0
+#getOrCreateServer(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
+#addRegionToServer(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
-#getRegionStateNode(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
-#deleteRegions(Ljava/util/List;)V
-#getServerNode(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
@2.1.1
+#getRegionStateNode(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
+#getServerNode(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
+#isReplicaAvailableForRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#getOrCreateServer(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
-#addRegionToServer(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
@2.1.6
+#deleteRegions(Ljava/util/List;)V
+#getAssignmentsForBalancer(Z)Ljava/util/Map;
-#getAssignmentsByTable(Z)Ljava/util/Map;
-#getAssignmentsByTable()Ljava/util/Map;
@2.2.0
+#getOrCreateRegionStateNode(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;
+#getRegionStateNode(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;
+#addToOfflineRegions(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)V
+#addToFailedOpen(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionFailedOpen;
+#getOrCreateServer(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/ServerStateNode;
+#getServerNode(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/ServerStateNode;
+#addRegionToServer(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/ServerStateNode;
+#removeRegionFromServer(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/ServerStateNode;
-#getRegionStateNode(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;
-#getServerRegionInfoSet(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
-#getRegionTransitionProcedure(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/RegionTransitionProcedure;
-#addToOfflineRegions(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)V
-#addToFailedOpen(Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionFailedOpen;
-#getServerNode(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
-#removeRegionFromServer(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/assignment/RegionStates$RegionStateNode;)Lorg/apache/hadoop/hbase/master/assignment/RegionStates$ServerStateNode;
@2.2.1
+#getRegionStateNodes()Ljava/util/Collection;
@2.2.2
-#isReplicaAvailableForRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
@2.2.3
+#getAssignmentsForBalancer(Lorg/apache/hadoop/hbase/master/TableStateManager;Ljava/util/List;Z)Ljava/util/Map;
-#getAssignmentsForBalancer(Z)Ljava/util/Map;
@2.2.5
+#getAssignmentsForBalancer(Lorg/apache/hadoop/hbase/master/TableStateManager;Ljava/util/List;)Ljava/util/Map;
-#getAssignmentsForBalancer(Lorg/apache/hadoop/hbase/master/TableStateManager;Ljava/util/List;Z)Ljava/util/Map;
@2.2.7
+#getRegionsOfTableForEnabling(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getRegionsOfTableForDeleting(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#getRegionsOfTable(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
@2.3.0
+#getRegionsOfTable(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
-#getRegionsOfTableForEnabling(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#getRegionsOfTableForDeleting(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@2.3.3
+#getRegionsOfTableForEnabling(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getRegionsOfTableForDeleting(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#getRegionsOfTable(Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
@2.5.0
+#getRegionStateNodeFromName([B)Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;
@3.0.0-alpha-1
-#getRegionStateNodeFromName([B)Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;
@3.0.0-alpha-2
+#getRegionStateNodeFromName([B)Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;

+###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action$Type
@0.99.0
+#values()[Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action$Type;
@2.5.0
-###org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer$Cluster$Action$Type

+###org/apache/hadoop/hbase/master/balancer/LoadBalancerFactory
@0.95.0
+#<init>()V
+#getLoadBalancer(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/LoadBalancer;
@0.98.13-hadoop1
+#getDefaultLoadBalancerClass()Ljava/lang/Class;
@0.99.0
-#getDefaultLoadBalancerClass()Ljava/lang/Class;
@1.1.0
+#getDefaultLoadBalancerClass()Ljava/lang/Class;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/LoadBalancerFactory

+###org/apache/hadoop/hbase/master/cleaner/BaseHFileCleanerDelegate
@0.95.0
+#<init>()V
+#stop(Ljava/lang/String;)V
+#isStopped()Z

+###org/apache/hadoop/hbase/master/cleaner/FileCleanerDelegate
@0.95.0
+#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
@0.95.2-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
@0.96.0-hadoop1
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@1.2.10
+#init(Ljava/util/Map;)V
@1.3.0
-#init(Ljava/util/Map;)V
@1.3.3
+#init(Ljava/util/Map;)V
@1.4.0
-#init(Ljava/util/Map;)V
@1.4.6
+#init(Ljava/util/Map;)V
@2.0.0-alpha4
+#preClean()V
@2.3.0
+#isEmptyDirDeletable(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/master/cleaner/HFileCleaner
@0.95.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#getDelegatesForTesting()Ljava/util/List;
@1.2.10
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
@1.3.0
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
@1.3.3
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
+#deleteFiles(Ljava/lang/Iterable;)I
+#cleanup()V
+#getCleanerThreads()Ljava/util/List;
+#getNumOfDeletedLargeFiles()J
+#getNumOfDeletedSmallFiles()J
+#getLargeQueueInitSize()J
+#getSmallQueueInitSize()J
+#getThrottlePoint()J
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.4.0
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
-#deleteFiles(Ljava/lang/Iterable;)I
-#cleanup()V
-#getCleanerThreads()Ljava/util/List;
-#getNumOfDeletedLargeFiles()J
-#getNumOfDeletedSmallFiles()J
-#getLargeQueueInitSize()J
-#getSmallQueueInitSize()J
-#getThrottlePoint()J
-#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.4.6
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
+#deleteFiles(Ljava/lang/Iterable;)I
+#cleanup()V
+#getCleanerThreads()Ljava/util/List;
+#getNumOfDeletedLargeFiles()J
+#getNumOfDeletedSmallFiles()J
+#getLargeQueueInitSize()J
+#getSmallQueueInitSize()J
+#getThrottlePoint()J
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@1.4.11
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
@2.0.0-alpha-1
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
@2.0.0-beta-2
+#cancel(Z)V
@2.1.6
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
@2.2.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
@2.2.1
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;)V
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Map;)V
@2.3.0
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
@2.5.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
@3.0.0-alpha-1
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V
-#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
@3.0.0-alpha-3
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;Ljava/util/List;)V
-#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/hbase/master/cleaner/DirScanPool;Ljava/util/Map;)V

+###org/apache/hadoop/hbase/master/ClusterSchemaException
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@2.4.0
-###org/apache/hadoop/hbase/master/ClusterSchemaException

+###org/apache/hadoop/hbase/master/HMasterCommandLine$LocalHMaster
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run()V
@0.99.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CoordinatedStateManager;)V

+###org/apache/hadoop/hbase/master/MasterFileSystem
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Z)V
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#getOldLogDir()Lorg/apache/hadoop/fs/Path;
+#checkFileSystem()Z
+#getRootDir()Lorg/apache/hadoop/fs/Path;
+#getTempDir()Lorg/apache/hadoop/fs/Path;
+#getClusterId()Lorg/apache/hadoop/hbase/ClusterId;
+#splitLog(Lorg/apache/hadoop/hbase/ServerName;)V
+#splitMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
+#splitLog(Ljava/util/List;)V
+#splitLog(Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)V
+#setInfoFamilyCachingForMeta(Z)V
+#deleteRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#deleteTable([B)V
+#moveToTemp(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#moveTableToTemp([B)Lorg/apache/hadoop/fs/Path;
+#updateRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#deleteFamilyFromFS(Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
+#stop()V
+#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#deleteColumn([B[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#modifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#addColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.95.1-hadoop1
+#splitMetaLog(Ljava/util/Set;)V
+#prepareLogReplay(Ljava/util/Set;)V
+#prepareMetaLogReplay(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#splitLog(Ljava/util/Set;)V
+#splitLog(Ljava/util/Set;Lorg/apache/hadoop/fs/PathFilter;)V
-#splitLog(Ljava/util/List;)V
-#splitLog(Ljava/util/List;Lorg/apache/hadoop/fs/PathFilter;)V
@0.95.2-hadoop1
+#prepareLogReplay(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
+#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
+#moveTableToTemp(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
+#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#prepareMetaLogReplay(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
-#deleteTable([B)V
-#moveToTemp(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#moveTableToTemp([B)Lorg/apache/hadoop/fs/Path;
-#createTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#deleteColumn([B[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#modifyColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#addColumn([BLorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/MetricsMaster;Z)V
@0.98.4-hadoop1
+#setLogRecoveryMode()V
+#getLogRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
@0.98.8-hadoop1
+#setInfoFamilyCachingForMeta(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)V
-#setInfoFamilyCachingForMeta(Z)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#setInfoFamilyCachingForMeta(Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Z)V
-#prepareLogReplay(Ljava/util/Set;)V
-#setInfoFamilyCachingForMeta(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)V
@1.0.0
+#setInfoFamilyCachingForMeta(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)V
-#setInfoFamilyCachingForMeta(Z)V
@1.2.0
+#logFileSystemState(Lorg/apache/commons/logging/Log;)V
@1.3.0
-#deleteRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#deleteTable(Lorg/apache/hadoop/hbase/TableName;)V
-#moveTableToTemp(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
-#updateRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#deleteColumn(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#modifyColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
-#addColumn(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/HTableDescriptor;
@1.3.3
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getWALRootDir()Lorg/apache/hadoop/fs/Path;
@1.3.4
+#archiveMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
@1.3.6
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@1.4.0
-#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
-#archiveMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
@1.4.10
+#archiveMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
@1.4.11
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#deleteFamilyFromFS(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#getOldLogDir()Lorg/apache/hadoop/fs/Path;
-#checkFileSystem()Z
-#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
-#splitLog(Lorg/apache/hadoop/hbase/ServerName;)V
-#splitMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
-#splitMetaLog(Ljava/util/Set;)V
-#prepareLogReplay(Lorg/apache/hadoop/hbase/ServerName;Ljava/util/Set;)V
-#splitLog(Ljava/util/Set;)V
-#splitLog(Ljava/util/Set;Lorg/apache/hadoop/fs/PathFilter;)V
-#setLogRecoveryMode()V
-#getLogRecoveryMode()Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;
-#archiveMetaLog(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha3
+#setInfoFamilyCachingForMeta(Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Lorg/apache/hadoop/hbase/client/TableDescriptor;
-#setInfoFamilyCachingForMeta(Lorg/apache/hadoop/hbase/HTableDescriptor;Z)V
@2.0.0-alpha4
+#deleteFamilyFromFS(Lorg/apache/hadoop/hbase/client/RegionInfo;[B)V
+#deleteFamilyFromFS(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;[B)V
-#deleteFamilyFromFS(Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
-#deleteFamilyFromFS(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;[B)V
@2.0.0-beta-1
+#logFileSystemState(Lorg/slf4j/Logger;)V
-#logFileSystemState(Lorg/apache/commons/logging/Log;)V
@2.0.0-beta-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
@2.0.6
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.1.0
+#getRegionDir(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.1.6
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.2.0
-#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.2.1
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
@2.4.0
-#setInfoFamilyCachingForMeta(Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)Lorg/apache/hadoop/hbase/client/TableDescriptor;

+###org/apache/hadoop/hbase/master/MetricsAssignmentManager
@0.96.0-hadoop1
+#<init>()V
+#updateAssignmentTime(J)V
+#updateBulkAssignTime(J)V
+#updateRITCount(I)V
+#updateRITCountOverThreshold(I)V
+#updateRITOldestAge(J)V
@0.98.24-hadoop1
+#updateRitDuration(J)V
@0.99.0
-#updateRitDuration(J)V
@1.2.2
+#getMetricsProcSource()Lorg/apache/hadoop/hbase/master/MetricsAssignmentManagerSource;
@1.3.3
+#updateRitDuration(J)V
@2.0.0-alpha-1
+#incrementOperationCounter()V
+#getAssignProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
+#getUnassignProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
+#getSplitProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
+#getMergeProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
-#updateAssignmentTime(J)V
-#updateBulkAssignTime(J)V
@2.2.0
+#getMoveProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
+#getReopenProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
+#getOpenProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
+#getCloseProcMetrics()Lorg/apache/hadoop/hbase/procedure2/ProcedureMetrics;
@2.2.1
+#updateDeadServerOpenRegions(I)V
+#updateUnknownServerOpenRegions(I)V
@2.4.3
+#updateOrphanRegionsOnRs(I)V
+#updateOrphanRegionsOnFs(I)V
+#updateInconsistentRegions(I)V
+#updateHoles(I)V
+#updateOverlaps(I)V
+#updateUnknownServerRegions(I)V
+#updateEmptyRegionInfoRegions(I)V

+###org/apache/hadoop/hbase/master/MetricsMasterWrapperImpl
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getAverageLoad()D
+#getClusterId()Ljava/lang/String;
+#getZookeeperQuorum()Ljava/lang/String;
+#getCoprocessors()[Ljava/lang/String;
+#getStartTime()J
+#getActiveTime()J
+#getRegionServers()I
+#getDeadRegionServers()I
+#getServerName()Ljava/lang/String;
+#getIsActiveMaster()Z
@0.96.2-hadoop1
+#getRegionServers()Ljava/lang/String;
+#getNumRegionServers()I
+#getDeadRegionServers()Ljava/lang/String;
+#getNumDeadRegionServers()I
-#getRegionServers()I
-#getDeadRegionServers()I
@0.98.0-hadoop1
+#getRegionServers()I
+#getDeadRegionServers()I
-#getRegionServers()Ljava/lang/String;
-#getNumRegionServers()I
-#getDeadRegionServers()Ljava/lang/String;
-#getNumDeadRegionServers()I
@0.98.1-hadoop1
+#getRegionServers()Ljava/lang/String;
+#getNumRegionServers()I
+#getDeadRegionServers()Ljava/lang/String;
+#getNumDeadRegionServers()I
-#getRegionServers()I
-#getDeadRegionServers()I
@1.3.0
+#getSplitPlanCount()J
+#getMergePlanCount()J
+#getNumWALFiles()J
@1.4.0
+#getMasterInitializationTime()J
@1.7.0
+#getDrainingRegionServers()Ljava/lang/String;
+#getNumDrainingRegionServers()I
@2.0.0-alpha-1
+#getTableSpaceUtilization()Ljava/util/Map;
+#getNamespaceSpaceUtilization()Ljava/util/Map;
-#getMasterInitializationTime()J
-#getDrainingRegionServers()Ljava/lang/String;
-#getNumDrainingRegionServers()I
@2.0.0-alpha2
+#getMasterInitializationTime()J
@2.2.7
+#getDrainingRegionServers()Ljava/lang/String;
+#getNumDrainingRegionServers()I
@2.3.0
+#isRunning()Z
-#getDrainingRegionServers()Ljava/lang/String;
-#getNumDrainingRegionServers()I
@2.3.5
+#getDrainingRegionServers()Ljava/lang/String;
+#getNumDrainingRegionServers()I
@2.4.0
-#getDrainingRegionServers()Ljava/lang/String;
-#getNumDrainingRegionServers()I
@2.4.2
+#getDrainingRegionServers()Ljava/lang/String;
+#getNumDrainingRegionServers()I
@3.0.0-alpha-1
+#getRegionCounts()Lorg/apache/hadoop/hbase/util/PairOfSameType;

+###org/apache/hadoop/hbase/master/normalizer/RegionNormalizerFactory
@1.2.0
+#getRegionNormalizer(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;
@2.4.0
+#createNormalizerManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/HMaster;)Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizerManager;
-#getRegionNormalizer(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/normalizer/RegionNormalizer;

+###org/apache/hadoop/hbase/master/procedure/AbstractStateMachineTableProcedure
@2.0.0-alpha-1
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V

+###org/apache/hadoop/hbase/master/procedure/CreateNamespaceProcedure
@1.3.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
-#toStringClassDetails(Ljava/lang/StringBuilder;)V
-#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.0.0-beta-2
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/NamespaceDescriptor;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv$MasterProcedureStoreListener
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#abortProcess()V
@1.1.2
+#postSync()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
@2.0.3
-###org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv$MasterProcedureStoreListener

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureUtil$NonceProcedureRunnable
@1.1.9
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;JJ)V
@1.2.0
-###org/apache/hadoop/hbase/master/procedure/MasterProcedureUtil$NonceProcedureRunnable

+###org/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch
@1.1.0
+#<init>()V
+#createLatch()Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;
+#hasProcedureSupport()Z
+#await()V
@2.0.0-alpha-1
+#createLatch(II)Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;
-#hasProcedureSupport()Z
@2.0.0-beta-2
+#createBlockingLatch()Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;
+#getNoopLatch()Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;
@2.1.0
+#releaseLatch(Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;Lorg/apache/hadoop/hbase/procedure2/Procedure;)V

+###org/apache/hadoop/hbase/master/procedure/RestoreSnapshotProcedure
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Z)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#abort(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)Z
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#serializeStateData(Ljava/io/OutputStream;)V
+#deserializeStateData(Ljava/io/InputStream;)V
+#abort(Ljava/lang/Object;)Z
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Z)V
-#serializeStateData(Ljava/io/OutputStream;)V
-#deserializeStateData(Ljava/io/InputStream;)V
@2.4.9
+#getRestoreAcl()Z
@3.0.0-alpha-1
-#getRestoreAcl()Z
@3.0.0-alpha-2
+#getRestoreAcl()Z

+###org/apache/hadoop/hbase/master/RegionPlacementMaintainer
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;ZZ)V
+#setTargetTableName([Ljava/lang/String;)V
+#getRegionAssignmentSnapshot()Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;
+#verifyRegionPlacement(Z)Ljava/util/List;
+#getNewAssignmentPlan()Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;
+#printAssignmentPlan(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
+#updateAssignmentPlanToMeta(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
+#updateAssignmentPlan(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
+#getRegionsMovement(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)Ljava/util/Map;
+#checkDifferencesWithOldPlan(Ljava/util/Map;Ljava/util/Map;Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
+#printDispersionScores(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;ILorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;Z)V
+#printLocalityAndDispersionForCurrentPlan(Ljava/util/Map;)V
+#getFavoredNodeList(Ljava/lang/String;)Ljava/util/List;
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
+#getNewAssignmentPlan()Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;
+#printAssignmentPlan(Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;)V
+#updateAssignmentPlanToMeta(Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;)V
+#updateAssignmentPlan(Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;)V
+#getRegionsMovement(Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;)Ljava/util/Map;
+#checkDifferencesWithOldPlan(Ljava/util/Map;Ljava/util/Map;Lorg/apache/hadoop/hbase/favored/FavoredNodesPlan;)V
+#printDispersionScores(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;ILorg/apache/hadoop/hbase/favored/FavoredNodesPlan;Z)V
-#getNewAssignmentPlan()Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;
-#printAssignmentPlan(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
-#updateAssignmentPlanToMeta(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
-#updateAssignmentPlan(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
-#getRegionsMovement(Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)Ljava/util/Map;
-#checkDifferencesWithOldPlan(Ljava/util/Map;Ljava/util/Map;Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;)V
-#printDispersionScores(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta;ILorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan;Z)V
@3.0.0-alpha-1
+#close()V

+###org/apache/hadoop/hbase/master/SplitLogManager$TerminationStatus
@0.99.0
+#values()[Lorg/apache/hadoop/hbase/master/SplitLogManager$TerminationStatus;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/SplitLogManager$TerminationStatus;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/TableStateManager
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#start()V
+#setTableState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableState$State;)V
+#setTableStateIfInStates(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableState$State;[Lorg/apache/hadoop/hbase/client/TableState$State;)Z
+#setTableStateIfNotInStates(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableState$State;[Lorg/apache/hadoop/hbase/client/TableState$State;)Z
+#isTableState(Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/TableState$State;)Z
+#setDeletedTable(Lorg/apache/hadoop/hbase/TableName;)V
+#isTablePresent(Lorg/apache/hadoop/hbase/TableName;)Z
+#getTablesInStates([Lorg/apache/hadoop/hbase/client/TableState$State;)Ljava/util/Set;
+#getTableState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState$State;
@1.7.1
-###org/apache/hadoop/hbase/master/TableStateManager

+###org/apache/hadoop/hbase/mob/MobConstants
@2.0.0-alpha-1

+###org/apache/hadoop/hbase/mob/MobStoreEngine
@2.0.0-alpha-1
+#<init>()V

+###org/apache/hadoop/hbase/mob/MobUtils
@2.0.0-alpha-1
+#formatDate(Ljava/util/Date;)Ljava/lang/String;
+#parseDate(Ljava/lang/String;)Ljava/util/Date;
+#getFirstDayOfMonth(Ljava/util/Calendar;Ljava/util/Date;)Ljava/util/Date;
+#getFirstDayOfWeek(Ljava/util/Calendar;Ljava/util/Date;)Ljava/util/Date;
+#isMobReferenceCell(Lorg/apache/hadoop/hbase/Cell;)Z
+#getTableNameTag(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Tag;
+#hasMobReferenceTag(Ljava/util/List;)Z
+#isRawMobScan(Lorg/apache/hadoop/hbase/client/Scan;)Z
+#isRefOnlyScan(Lorg/apache/hadoop/hbase/client/Scan;)Z
+#isCacheMobBlocks(Lorg/apache/hadoop/hbase/client/Scan;)Z
+#setCacheMobBlocks(Lorg/apache/hadoop/hbase/client/Scan;Z)V
+#cleanExpiredMobFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;J)V
+#getMobHome(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getQualifiedMobRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#getMobRegionPath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#getMobFamilyPath(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getMobFamilyPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getMobRegionInfo(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HRegionInfo;
+#isMobRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isMobRegionName(Lorg/apache/hadoop/hbase/TableName;[B)Z
+#getCompactionWorkingPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#removeMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)V
+#createMobRefCell(Lorg/apache/hadoop/hbase/Cell;[BLorg/apache/hadoop/hbase/Tag;)Lorg/apache/hadoop/hbase/Cell;
+#createMobRefCell(Lorg/apache/hadoop/hbase/Cell;[B[B)Lorg/apache/hadoop/hbase/Cell;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createRefFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createDelFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Lorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/regionserver/BloomType;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#commitFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/fs/Path;
+#hasValidMobRefCellValue(Lorg/apache/hadoop/hbase/Cell;)Z
+#getMobValueLength(Lorg/apache/hadoop/hbase/Cell;)I
+#getMobFileName(Lorg/apache/hadoop/hbase/Cell;)Ljava/lang/String;
+#getTableLockName(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableName;
+#doMobCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/util/concurrent/ExecutorService;ZLorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;)V
+#createMobCompactorThreadPool(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/concurrent/ExecutorService;
+#hasMobColumns(Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
+#isReadEmptyValueOnMobCellMiss(Lorg/apache/hadoop/hbase/client/Scan;)Z
+#createMobRefDeleteMarker(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#isMobFileExpired(Lorg/apache/hadoop/hbase/HColumnDescriptor;JLjava/lang/String;)Z
+#fillPartitionId(Lorg/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartitionId;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/MobCompactPartitionPolicy;Ljava/util/Calendar;J)Z
@2.0.0-alpha2
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Lorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/regionserver/BloomType;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Lorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/regionserver/BloomType;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
@2.0.0-alpha3
+#cleanExpiredMobFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;J)V
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createRefFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createDelFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#doMobCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/util/concurrent/ExecutorService;ZLorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;)V
+#hasMobColumns(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Z
+#isMobFileExpired(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;JLjava/lang/String;)Z
-#cleanExpiredMobFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;J)V
-#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createRefFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createDelFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/mob/MobFileName;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#doMobCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/util/concurrent/ExecutorService;ZLorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;)V
-#hasMobColumns(Lorg/apache/hadoop/hbase/HTableDescriptor;)Z
-#isMobFileExpired(Lorg/apache/hadoop/hbase/HColumnDescriptor;JLjava/lang/String;)Z
@2.0.0-alpha4
+#getMobRegionInfo(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionInfo;
+#isMobRegionInfo(Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
-#getMobRegionInfo(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#isMobRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@2.0.4
+#getMobHome(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getMobTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#getMobRegionPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
@2.1.0
-#getMobHome(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#getMobTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
-#getMobRegionPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
@2.1.2
+#getMobHome(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getMobTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#getMobRegionPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
@2.4.13
+#removeMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)Z
-#removeMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)V
@2.5.0
+#getTableNameString(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Optional;
+#getTableName(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Optional;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;ZLjava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Lorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/regionserver/BloomType;ZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#getMobColumnFamilies(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Ljava/util/List;
+#serializeMobFileRefs(Lorg/apache/hbase/thirdparty/com/google/common/collect/SetMultimap;)[B
+#deserializeMobFileRefs([B)Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableSetMultimap$Builder;
-#getFirstDayOfMonth(Ljava/util/Calendar;Ljava/util/Date;)Ljava/util/Date;
-#getFirstDayOfWeek(Ljava/util/Calendar;Ljava/util/Date;)Ljava/util/Date;
-#getTableNameTag(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Tag;
-#getCompactionWorkingPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Ljava/lang/String;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createRefFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Z)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createDelFileWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;[BLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#commitFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/fs/Path;
-#getTableLockName(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/TableName;
-#doMobCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Ljava/util/concurrent/ExecutorService;ZLorg/apache/hadoop/hbase/master/locking/LockManager$MasterLock;)V
-#createMobCompactorThreadPool(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/concurrent/ExecutorService;
-#createMobRefDeleteMarker(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#fillPartitionId(Lorg/apache/hadoop/hbase/mob/compactions/PartitionedMobCompactionRequest$CompactionPartitionId;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;Lorg/apache/hadoop/hbase/client/MobCompactPartitionPolicy;Ljava/util/Calendar;J)Z
@3.0.0-alpha-1
+#removeMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)V
-#removeMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;[BLjava/util/Collection;)Z
-#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;Lorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/regionserver/BloomType;ZLjava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;

+###org/apache/hadoop/hbase/procedure/ProcedureCoordinator
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;Ljava/util/concurrent/ThreadPoolExecutor;)V
+#defaultPool(Ljava/lang/String;JIJ)Ljava/util/concurrent/ThreadPoolExecutor;
+#close()V
+#abortProcedure(Ljava/lang/String;Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#startProcedure(Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Ljava/lang/String;[BLjava/util/List;)Lorg/apache/hadoop/hbase/procedure/Procedure;
+#getProcedure(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/Procedure;
+#getProcedureNames()Ljava/util/Set;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;Ljava/util/concurrent/ThreadPoolExecutor;JJ)V
+#defaultPool(Ljava/lang/String;I)Ljava/util/concurrent/ThreadPoolExecutor;
+#defaultPool(Ljava/lang/String;IJ)Ljava/util/concurrent/ThreadPoolExecutor;
-#defaultPool(Ljava/lang/String;JIJ)Ljava/util/concurrent/ThreadPoolExecutor;

+###org/apache/hadoop/hbase/quotas/DefaultOperationQuota
@1.1.0
+#<init>([Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
+#<init>(Ljava/util/List;)V
+#checkQuota(III)V
+#close()V
+#getReadAvailable()J
+#getWriteAvailable()J
+#addGetResult(Lorg/apache/hadoop/hbase/client/Result;)V
+#addScanResult(Ljava/util/List;)V
+#addMutation(Lorg/apache/hadoop/hbase/client/Mutation;)V
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.1.8
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.0
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.2.4
-#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
@1.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;)V
-#<init>([Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
-#<init>(Ljava/util/List;)V
@2.0.0-alpha-1
+#<init>([Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
+#<init>(Ljava/util/List;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;)V
-#<init>([Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
-#<init>(Ljava/util/List;)V
@2.4.3
-#getWriteAvailable()J

+###org/apache/hadoop/hbase/quotas/policies/AbstractViolationPolicyEnforcement
@2.0.0-alpha-1
+#<init>()V
+#setRegionServerServices(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#setTableName(Lorg/apache/hadoop/hbase/TableName;)V
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#setQuotaSnapshot(Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#getQuotaSnapshot()Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;
+#initialize(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/quotas/SpaceQuotaSnapshot;)V
+#areCompactionsDisabled()Z

+###org/apache/hadoop/hbase/quotas/SpaceQuotaRefresherChore
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/quotas/RegionServerSpaceQuotaManager;Lorg/apache/hadoop/hbase/client/Connection;)V
+#fetchSnapshotsFromQuotaTable()Ljava/util/Map;

+###org/apache/hadoop/hbase/regionserver/AbstractMultiFileWriter
@0.98.19-hadoop1
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/regionserver/StoreScanner;Lorg/apache/hadoop/hbase/regionserver/AbstractMultiFileWriter$WriterFactory;)V
+#commitWriters(JZ)Ljava/util/List;
+#abortWriters()Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/AbstractMultiFileWriter

+###org/apache/hadoop/hbase/regionserver/CompactedHFilesDischarger
@1.3.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Z)V
+#chore()V

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionContext
@0.95.0
+#<init>()V
+#preSelect(Ljava/util/List;)Ljava/util/List;
+#select(Ljava/util/List;ZZZ)Z
+#forceSelect(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#compact()Ljava/util/List;
+#getRequest()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#hasSelection()Z
@0.98.11-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact()Ljava/util/List;
@0.98.16-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@0.99.0
+#compact()Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.0.3
+#compact(Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact()Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.3.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@2.0.0-alpha4
+#forceSelect(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;)V
+#getRequest()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;
-#forceSelect(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#getRequest()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionRequest
@0.95.0
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#beforeExecute()V
+#afterExecute()V
+#combineWith(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#compareTo(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)I
+#equals(Ljava/lang/Object;)Z
+#getFiles()Ljava/util/Collection;
+#setDescription(Ljava/lang/String;Ljava/lang/String;)V
+#getSize()J
+#isMajor()Z
+#getPriority()I
+#setPriority(I)V
+#isOffPeak()Z
+#setOffPeak(Z)V
+#getSelectionTime()J
+#setIsMajor(Z)V
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@0.98.19-hadoop1
+#updateFiles(Ljava/util/Collection;)V
@0.99.0
+#isAllFiles()Z
+#setIsMajor(ZZ)V
-#setIsMajor(Z)V
-#updateFiles(Ljava/util/Collection;)V
@1.3.0
+#updateFiles(Ljava/util/Collection;)V
@1.4.0
+#hashCode()I
@1.7.0
+#isAfterSplit()Z
+#setAfterSplit(Z)V
@2.0.0-alpha-1
-#isAfterSplit()Z
-#setAfterSplit(Z)V
-#hashCode()I
@2.0.0-alpha3
+#getSelectionNanoTime()J
+#setTracker(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#getTracker()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;
-#<init>()V
-#beforeExecute()V
-#afterExecute()V
-#combineWith(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#compareTo(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)I
-#equals(Ljava/lang/Object;)Z
-#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha4
-#<init>(Ljava/util/Collection;)V
-#updateFiles(Ljava/util/Collection;)V
-#setDescription(Ljava/lang/String;Ljava/lang/String;)V
-#setPriority(I)V
-#setOffPeak(Z)V
-#getSelectionNanoTime()J
-#setIsMajor(ZZ)V
-#setTracker(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
-#getTracker()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;
-#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactor
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Ljava/util/List;
@0.98.0-hadoop1
+#compactForTesting(Ljava/util/Collection;Z)Ljava/util/List;
@0.98.11-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Ljava/util/List;
@0.98.16-hadoop1
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
@0.99.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.0.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Ljava/util/List;
@1.1.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@1.1.3
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;)Ljava/util/List;
@1.3.0
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;)V
-#compact(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
@2.5.0
-#compactForTesting(Ljava/util/Collection;Z)Ljava/util/List;
@3.0.0-alpha-1
+#compactForTesting(Ljava/util/Collection;Z)Ljava/util/List;
@3.0.0-alpha-2
-#compactForTesting(Ljava/util/Collection;Z)Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/compactions/OffPeakHours
@0.95.1-hadoop1
+#<init>()V
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/compactions/OffPeakHours;
+#getInstance(II)Lorg/apache/hadoop/hbase/regionserver/compactions/OffPeakHours;
+#isOffPeakHour(I)Z
+#isOffPeakHour()Z

+###org/apache/hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy
@0.95.0
+#<init>()V
@1.1.8
+#positiveJitterRate()Z
@1.2.0
-#positiveJitterRate()Z
@1.2.5
+#positiveJitterRate()Z
@2.4.3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/FavoredNodesForRegion
@1.1.0
+#updateRegionFavoredNodesMapping(Ljava/lang/String;Ljava/util/List;)V
+#getFavoredNodesForRegion(Ljava/lang/String;)[Ljava/net/InetSocketAddress;

+###org/apache/hadoop/hbase/regionserver/FlushLargeStoresPolicy
@1.1.0
+#<init>()V
+#selectStoresToFlush()Ljava/util/Collection;
@2.0.0-alpha-1
-#selectStoresToFlush()Ljava/util/Collection;
@2.4.3
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/handler/OpenMetaHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;I)V
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;J)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;IJ)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;I)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;J)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;IJ)V
@1.0.2
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@1.1.1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;J)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;JLorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;J)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;J)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;J)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;J)V

+###org/apache/hadoop/hbase/regionserver/HeapMemoryManager$HeapMemoryTuneObserver
@2.0.0-alpha-1
+#onHeapMemoryTune(JJ)V

+###org/apache/hadoop/hbase/regionserver/HeapMemoryTuner
@0.99.0
+#tune(Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager$TunerContext;)Lorg/apache/hadoop/hbase/regionserver/HeapMemoryManager$TunerResult;

+###org/apache/hadoop/hbase/regionserver/InternalScanner
@0.95.0
+#next(Ljava/util/List;)Z
+#next(Ljava/util/List;Ljava/lang/String;)Z
+#next(Ljava/util/List;I)Z
+#next(Ljava/util/List;ILjava/lang/String;)Z
+#close()V
@0.95.1-hadoop1
-#next(Ljava/util/List;Ljava/lang/String;)Z
-#next(Ljava/util/List;ILjava/lang/String;)Z
@1.1.0
+#next(Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScannerContext;)Z
-#next(Ljava/util/List;I)Z

+###org/apache/hadoop/hbase/regionserver/KeyValueHeap$KVScannerComparator
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#compare(Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)I
+#compare(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@0.99.0
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
-#compare(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;)V
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;

+###org/apache/hadoop/hbase/regionserver/LogRoller
@1.0.0
+#addWAL(Lorg/apache/hadoop/hbase/wal/WAL;)V
+#requestRollAll()V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#run()V
@1.1.3
+#interrupt()V
@1.2.0
+#walRollFinished()Z
@2.0.0-alpha-1
+#close()V
@2.0.6
-#interrupt()V
@2.1.0
+#interrupt()V
@2.1.6
-#interrupt()V
@2.1.8
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#interrupt()V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
@2.2.1
-#interrupt()V
@2.2.3
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
@2.3.0
-#addWAL(Lorg/apache/hadoop/hbase/wal/WAL;)V
-#requestRollAll()V
-#run()V
-#walRollFinished()Z
-#close()V

+###org/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator
@2.0.0-alpha-1
+#<init>(I)V
+#close()V

+###org/apache/hadoop/hbase/regionserver/MetricsHeapMemoryManager
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MetricsHeapMemoryManagerSource;)V
+#getMetricsSource()Lorg/apache/hadoop/hbase/regionserver/MetricsHeapMemoryManagerSource;
+#updateBlockedFlushCount(J)V
+#updateUnblockedFlushCount(J)V
+#setCurBlockCacheSizeGauge(J)V
+#setCurMemStoreSizeGauge(J)V
+#updateMemStoreDeltaSizeHistogram(I)V
+#updateBlockCacheDeltaSizeHistogram(I)V
+#increaseTunerDoNothingCounter()V
+#increaseAboveHeapOccupancyLowWatermarkCounter()V

+###org/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry
@1.2.0
+#getWriteNumber()J
+#toString()Ljava/lang/String;
@3.0.0-alpha-3
+#attachCompletionAction(Ljava/lang/Runnable;)V
+#getCompletionAction()Ljava/util/Optional;

+###org/apache/hadoop/hbase/regionserver/NonReversedNonLazyKeyValueScanner
@0.98.0-hadoop1
+#<init>()V
+#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#seekToLastRow()Z
@0.99.0
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
-#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z

+###org/apache/hadoop/hbase/regionserver/OffheapChunk
@2.0.0-alpha-1

+###org/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker
@1.4.0
+#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#reset()V
+#done()Z
+#getColumnHint()Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnCount;
+#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#isDone(J)Z
@2.0.0-alpha-1
+#checkColumn(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#checkVersions(Lorg/apache/hadoop/hbase/Cell;JBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#getNextRowOrNextColumn(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
-#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
-#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
-#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
@2.0.0-beta-1
+#doneWithColumn(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/regionserver/querymatcher/DropDeletesCompactionScanQueryMatcher
@1.4.0

+###org/apache/hadoop/hbase/regionserver/querymatcher/MinorCompactionScanQueryMatcher
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;JJJ)V
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;JJJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;JJJ)V
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;JJJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;JJJ)V

+###org/apache/hadoop/hbase/regionserver/querymatcher/NormalUserScanQueryMatcher
@1.4.0
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#create(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;ZJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/NormalUserScanQueryMatcher;
@2.0.0-alpha-1
+#beforeShipped()V
@2.0.0-alpha2
+#create(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;ZJJ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/NormalUserScanQueryMatcher;
-#create(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;ZJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/NormalUserScanQueryMatcher;

+###org/apache/hadoop/hbase/regionserver/querymatcher/UserScanQueryMatcher
@1.4.0
+#hasNullColumnInQuery()Z
+#isUserScan()Z
+#getFilter()Lorg/apache/hadoop/hbase/filter/Filter;
+#getNextKeyHint(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#moreRowsMayExistAfter(Lorg/apache/hadoop/hbase/Cell;)Z
+#create(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/UserScanQueryMatcher;
@2.0.0-alpha2
+#beforeShipped()V

+###org/apache/hadoop/hbase/regionserver/RegionCoprocessorHost
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)V
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost$RegionEnvironment;
+#preOpen()V
+#postOpen()V
+#preClose(Z)V
+#postClose(Z)V
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Z
+#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#preCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#preFlush(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preFlush()V
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postFlush()V
+#postFlush(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
+#preSplit()V
+#preSplit([B)V
+#postSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preRollBackSplit()V
+#postRollBackSplit()V
+#postCompleteSplit()V
+#preGetClosestRowBefore([B[BLorg/apache/hadoop/hbase/client/Result;)Z
+#postGetClosestRowBefore([B[BLorg/apache/hadoop/hbase/client/Result;)V
+#preGet(Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)Z
+#postGet(Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#preExists(Lorg/apache/hadoop/hbase/client/Get;)Ljava/lang/Boolean;
+#postExists(Lorg/apache/hadoop/hbase/client/Get;Z)Z
+#prePut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)Z
+#postPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)Z
+#postDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)Z
+#postBatchMutate(Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#preCheckAndPut([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
+#postCheckAndPut([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
+#postCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preAppend(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrement(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)V
+#postIncrement(Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
+#preScannerOpen(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#postScannerOpen(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preScannerNext(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;I)Ljava/lang/Boolean;
+#postScannerNext(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;IZ)Z
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[B)Z
+#preScannerClose(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Z
+#postScannerClose(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#preWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
+#postWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#preBulkLoadHFile(Ljava/util/List;)Z
+#postBulkLoadHFile(Ljava/util/List;Z)Z
+#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@0.95.1-hadoop1
+#prePut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
+#postPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
+#postDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#prePut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)Z
-#postPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#preDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)Z
-#postDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@0.96.2-hadoop1
+#postLogReplay()V
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BIS)Z
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[B)Z
@0.98.0-hadoop1
+#preSplitBeforePONR([BLjava/util/List;)Z
+#preSplitAfterPONR()V
+#postBatchMutateIndispensably(Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;Z)V
+#postStartRegionOperation(Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
+#postCloseRegionOperation(Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
+#preStoreFileReaderOpen(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#postStoreFileReaderOpen(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#preEndpointInvocation(Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message;
+#postEndpointInvocation(Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;Lcom/google/protobuf/Message$Builder;)V
@0.98.2-hadoop1
+#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;
@0.98.4-hadoop1
+#prePrepareTimeStampForDeleteVersion(Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;[BLorg/apache/hadoop/hbase/client/Get;)Z
+#preCheckAndPutAfterRowLock([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
+#preCheckAndDeleteAfterRowLock([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
+#preAppendAfterRowLock(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrementAfterRowLock(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
@0.98.5-hadoop1
+#getCoprocessorExecutionStatistics()Ljava/util/Map;
@0.98.9-hadoop1
+#testTableCoprocessorAttrs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@0.99.0
-#testTableCoprocessorAttrs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@0.99.2
+#preWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
*#preWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z[deprecated]
+#postWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
*#postWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
@1.0.0
+#testTableCoprocessorAttrs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)V
+#postSplit(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postStartRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
+#postCloseRegionOperation(Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)V
-#postSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postStartRegionOperation(Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
-#postCloseRegionOperation(Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
@1.2.0
-#getCoprocessorExecutionStatistics()Ljava/util/Map;
@1.4.0
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
+#preCommitStoreFile([BLjava/util/List;)Z
+#postCommitStoreFile([BLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preFlushScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)V
@1.5.0
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;JLorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
+#preCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
+#preSplit(Lorg/apache/hadoop/hbase/security/User;)V
+#preSplit([BLorg/apache/hadoop/hbase/security/User;)V
+#postSplit(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/security/User;)V
+#preSplitBeforePONR([BLjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z
+#preSplitAfterPONR(Lorg/apache/hadoop/hbase/security/User;)V
+#preRollBackSplit(Lorg/apache/hadoop/hbase/security/User;)V
+#postRollBackSplit(Lorg/apache/hadoop/hbase/security/User;)V
+#preWALAppend(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Z
-#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#preCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#postCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
-#preSplit()V
-#preSplit([B)V
-#postSplit(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preSplitBeforePONR([BLjava/util/List;)Z
-#preSplitAfterPONR()V
-#preRollBackSplit()V
-#postRollBackSplit()V
@2.0.0-alpha-1
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
*#preSplit(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
*#preSplit([BLorg/apache/hadoop/hbase/security/User;)V[deprecated]
*#postSplit(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
*#preSplitBeforePONR([BLjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z[deprecated]
*#preSplitAfterPONR(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
*#preRollBackSplit(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
*#postRollBackSplit(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
+#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)V
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/Cell;)Z
+#preReplayWALs(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#postReplayWALs(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#postBulkLoadHFile(Ljava/util/List;Ljava/util/Map;Z)Z
+#preStoreFileReaderOpen(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
+#postStoreFileReaderOpen(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;
+#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;JLorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preFlushScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preGetClosestRowBefore([B[BLorg/apache/hadoop/hbase/client/Result;)Z
-#postGetClosestRowBefore([B[BLorg/apache/hadoop/hbase/client/Result;)V
-#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
-#preStoreScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BIS)Z
-#preWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z[deprecated]
-#postWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V[deprecated]
-#postBulkLoadHFile(Ljava/util/List;Z)Z
-#preStoreFileReaderOpen(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#postStoreFileReaderOpen(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
-#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;
-#preWALAppend(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha2
+#testTableCoprocessorAttrs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
+#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
-#testTableCoprocessorAttrs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
-#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)V
@2.0.0-alpha3
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
+#preCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
+#prePut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
+#postPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
+#postDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preCheckAndPut([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
+#preCheckAndPutAfterRowLock([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
+#postCheckAndPut([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
+#preCheckAndDeleteAfterRowLock([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
+#postCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
+#postWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Z
-#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
-#preCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#postCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
-#preSplit(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
-#preSplit([BLorg/apache/hadoop/hbase/security/User;)V[deprecated]
-#postSplit(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
-#preSplitBeforePONR([BLjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Z[deprecated]
-#preSplitAfterPONR(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
-#preRollBackSplit(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
-#postRollBackSplit(Lorg/apache/hadoop/hbase/security/User;)V[deprecated]
-#postCompleteSplit()V
-#prePut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
-#postPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
-#postDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preCheckAndPut([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
-#preCheckAndPutAfterRowLock([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
-#postCheckAndPut([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#preCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
-#preCheckAndDeleteAfterRowLock([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
-#postCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
-#preWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
-#postWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)V
+#createEnvironment(Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost$RegionEnvironment;
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/coprocessor/RegionCoprocessor;
+#preCompactSelection(Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Z
+#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#preCompact(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postCompact(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)V
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#preFlush(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preFlush(Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#postFlush(Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
+#postFlush(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/HStoreFile;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)V
*#prePrepareTimeStampForDeleteVersion(Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;[BLorg/apache/hadoop/hbase/client/Get;)Z[deprecated]
+#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#preScannerOpen(Lorg/apache/hadoop/hbase/client/Scan;)V
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/regionserver/HStore;)Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#preReplayWALs(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#postReplayWALs(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/fs/Path;)V
+#preWALRestore(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z[deprecated]
+#postWALRestore(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V[deprecated]
+#preBulkLoadHFile(Ljava/util/List;)V
*#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;[deprecated]
+#prePrepareBulkLoad(Lorg/apache/hadoop/hbase/security/User;)V
+#preCleanupBulkLoad(Lorg/apache/hadoop/hbase/security/User;)V
+#checkAndGetInstance(Ljava/lang/Class;)Lorg/apache/hadoop/hbase/Coprocessor;
+#createEnvironment(Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
-#<init>(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)V
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost$RegionEnvironment;
-#preCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Z
-#postCompactSelection(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
-#preCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#postCompact(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
-#preFlush(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#preFlush()V
-#preFlushScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
-#postFlush()V
-#postFlush(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
-#preBatchMutate(Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)Z
-#preScannerOpen(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
-#preStoreScannerOpen(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
-#preReplayWALs(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
-#postReplayWALs(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/fs/Path;)V
-#preWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
-#postWALRestore(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#preBulkLoadHFile(Ljava/util/List;)Z
-#createEnvironment(Ljava/lang/Class;Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
@2.0.0-beta-1
+#preMemStoreCompaction(Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#preMemStoreCompactionCompactScannerOpen(Lorg/apache/hadoop/hbase/regionserver/HStore;)Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#preMemStoreCompactionCompact(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postMemStoreCompaction(Lorg/apache/hadoop/hbase/regionserver/HStore;)V
+#postBulkLoadHFile(Ljava/util/List;Ljava/util/Map;)V
-#postLogReplay()V
-#postBulkLoadHFile(Ljava/util/List;Ljava/util/Map;Z)Z
@2.2.0
+#postIncrementBeforeWAL(Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
+#postAppendBeforeWAL(Lorg/apache/hadoop/hbase/client/Mutation;Ljava/util/List;)Ljava/util/List;
-#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.2.7
+#hasCustomPostScannerFilterRow()Z
@2.3.0
+#preCheckAndPut([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
+#preCheckAndPutAfterRowLock([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
+#postCheckAndPut([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
+#preCheckAndDeleteAfterRowLock([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
+#postCheckAndDelete([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#preWALAppend(Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
-#hasCustomPostScannerFilterRow()Z
-#preStoreScannerOpen(Lorg/apache/hadoop/hbase/regionserver/HStore;)Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
@2.3.4
+#hasCustomPostScannerFilterRow()Z
@2.4.0
+#preCheckAndMutate(Lorg/apache/hadoop/hbase/client/CheckAndMutate;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
+#preCheckAndMutateAfterRowLock(Lorg/apache/hadoop/hbase/client/CheckAndMutate;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
+#postCheckAndMutate(Lorg/apache/hadoop/hbase/client/CheckAndMutate;Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;)Lorg/apache/hadoop/hbase/client/CheckAndMutateResult;
-#hasCustomPostScannerFilterRow()Z
-#preCheckAndPut([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
-#preCheckAndPut([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
-#preCheckAndPutAfterRowLock([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
-#preCheckAndPutAfterRowLock([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;)Ljava/lang/Boolean;
-#postCheckAndPut([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#postCheckAndPut([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Put;Z)Z
-#preCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
-#preCheckAndDelete([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
-#preCheckAndDeleteAfterRowLock([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
-#preCheckAndDeleteAfterRowLock([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;)Ljava/lang/Boolean;
-#postCheckAndDelete([B[B[BLorg/apache/hadoop/hbase/CompareOperator;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
-#postCheckAndDelete([BLorg/apache/hadoop/hbase/filter/Filter;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
@2.4.1
+#hasCustomPostScannerFilterRow()Z
@2.4.2
+#prePut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
+#postPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#preDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;)Z
+#postDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#preAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrement(Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;
+#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;
+#postIncrement(Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/wal/WALEdit;)Lorg/apache/hadoop/hbase/client/Result;
-#prePut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
-#postPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)Z
-#postDelete(Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#preAppend(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
-#preIncrement(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
-#postAppend(Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
-#postIncrement(Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
@3.0.0-alpha-1
+#preEndpointInvocation(Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;Ljava/lang/String;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;
+#postEndpointInvocation(Lorg/apache/hbase/thirdparty/com/google/protobuf/Service;Ljava/lang/String;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message$Builder;)V
-#preEndpointInvocation(Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message;
-#postEndpointInvocation(Lcom/google/protobuf/Service;Ljava/lang/String;Lcom/google/protobuf/Message;Lcom/google/protobuf/Message$Builder;)V

+###org/apache/hadoop/hbase/regionserver/RSDumpServlet
@0.95.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.98.20-hadoop1
+#dumpRowLock(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
@0.99.0
+#dumpQueue(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
-#dumpRowLock(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
@1.1.5
+#dumpRowLock(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
@1.2.0
-#dumpRowLock(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
@1.2.2
+#dumpRowLock(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
@2.0.0-alpha4
+#dumpCallQueues(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
@2.5.0
-###org/apache/hadoop/hbase/regionserver/RSDumpServlet

+###org/apache/hadoop/hbase/regionserver/SegmentFactory
@2.0.0-alpha-1
+#instance()Lorg/apache/hadoop/hbase/regionserver/SegmentFactory;
+#createImmutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createCompositeImmutableSegment(Lorg/apache/hadoop/hbase/CellComparator;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/CompositeImmutableSegment;
+#createImmutableSegmentByCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILorg/apache/hadoop/hbase/regionserver/ImmutableSegment$Type;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createImmutableSegment(Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createImmutableSegment(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createMutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/MutableSegment;
+#createImmutableSegmentByMerge(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILorg/apache/hadoop/hbase/regionserver/ImmutableSegment$Type;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
@2.0.0-alpha4
+#createImmutableSegmentByCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createImmutableSegmentByMerge(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILjava/util/List;Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createImmutableSegmentByFlattening(Lorg/apache/hadoop/hbase/regionserver/CSLMImmutableSegment;Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createImmutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createImmutableSegmentByCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILorg/apache/hadoop/hbase/regionserver/ImmutableSegment$Type;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createImmutableSegmentByMerge(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILorg/apache/hadoop/hbase/regionserver/ImmutableSegment$Type;Ljava/util/List;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
@2.0.0-beta-1
+#createImmutableSegmentByCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createImmutableSegmentByMerge(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILjava/util/List;Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createImmutableSegmentByFlattening(Lorg/apache/hadoop/hbase/regionserver/CSLMImmutableSegment;Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createImmutableSegmentByCompaction(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createImmutableSegmentByMerge(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSegmentsIterator;ILjava/util/List;Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createImmutableSegmentByFlattening(Lorg/apache/hadoop/hbase/regionserver/CSLMImmutableSegment;Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
@2.0.2
+#createImmutableSegment(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createMutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/MutableSegment;
-#createImmutableSegment(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createMutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/MutableSegment;
@2.1.0
+#createImmutableSegment(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createMutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/MutableSegment;
-#createImmutableSegment(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createMutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/MutableSegment;
@2.1.1
+#createImmutableSegment(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
+#createMutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/regionserver/MemStoreSizing;)Lorg/apache/hadoop/hbase/regionserver/MutableSegment;
-#createImmutableSegment(Lorg/apache/hadoop/hbase/regionserver/MutableSegment;)Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;
-#createMutableSegment(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/MutableSegment;

+###org/apache/hadoop/hbase/regionserver/ShipperListener
@2.0.0-alpha-1
+#beforeShipped()V

+###org/apache/hadoop/hbase/regionserver/SimpleRpcSchedulerFactory
@0.98.4-hadoop1
+#<init>()V
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@0.99.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@1.0.0
*#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;[deprecated]
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
@3.0.0-alpha-1
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;[deprecated]

+###org/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor$Status;

+###org/apache/hadoop/hbase/regionserver/StoreEngine
@0.95.0
+#<init>()V
+#getCompactionPolicy()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionPolicy;
+#getCompactor()Lorg/apache/hadoop/hbase/regionserver/compactions/Compactor;
+#getStoreFileManager()Lorg/apache/hadoop/hbase/regionserver/StoreFileManager;
+#createCompaction()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionContext;
+#create(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreEngine;
@0.95.1-hadoop1
+#getStoreFlusher()Lorg/apache/hadoop/hbase/regionserver/StoreFlusher;
@0.98.0-hadoop1
+#needsCompaction(Ljava/util/List;)Z
@2.0.0-alpha-1
+#create(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreEngine;
-#create(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreEngine;
@2.0.0-alpha4
+#create(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreEngine;
-#create(Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreEngine;
@2.5.0
+#readLock()V
+#readUnlock()V
+#writeLock()V
+#writeUnlock()V
+#createWriter(Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createStoreFileAndReader(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HStoreFile;
+#createStoreFileAndReader(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)Lorg/apache/hadoop/hbase/regionserver/HStoreFile;
+#validateStoreFile(Lorg/apache/hadoop/fs/Path;)V
+#initialize(Z)V
+#refreshStoreFiles()V
+#refreshStoreFiles(Ljava/util/Collection;)V
+#commitStoreFiles(Ljava/util/List;Z)Ljava/util/List;
+#addStoreFiles(Ljava/util/Collection;Lorg/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable;)V
+#replaceStoreFiles(Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable;Ljava/lang/Runnable;)V
+#removeCompactedFiles(Ljava/util/Collection;)V
+#requireWritingToTmpDirFirst()Z
+#getBloomFilterMetrics()Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;
@3.0.0-alpha-1
-#readLock()V
-#readUnlock()V
-#writeLock()V
-#writeUnlock()V
-#createWriter(Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
-#createStoreFileAndReader(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HStoreFile;
-#createStoreFileAndReader(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)Lorg/apache/hadoop/hbase/regionserver/HStoreFile;
-#validateStoreFile(Lorg/apache/hadoop/fs/Path;)V
-#initialize(Z)V
-#refreshStoreFiles()V
-#refreshStoreFiles(Ljava/util/Collection;)V
-#commitStoreFiles(Ljava/util/List;Z)Ljava/util/List;
-#addStoreFiles(Ljava/util/Collection;Lorg/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable;)V
-#replaceStoreFiles(Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable;Ljava/lang/Runnable;)V
-#removeCompactedFiles(Ljava/util/Collection;)V
-#requireWritingToTmpDirFirst()Z
-#getBloomFilterMetrics()Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;
@3.0.0-alpha-3
+#readLock()V
+#readUnlock()V
+#writeLock()V
+#writeUnlock()V
+#createWriter(Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#createStoreFileAndReader(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/HStoreFile;
+#createStoreFileAndReader(Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)Lorg/apache/hadoop/hbase/regionserver/HStoreFile;
+#validateStoreFile(Lorg/apache/hadoop/fs/Path;)V
+#initialize(Z)V
+#refreshStoreFiles()V
+#refreshStoreFiles(Ljava/util/Collection;)V
+#commitStoreFiles(Ljava/util/List;Z)Ljava/util/List;
+#addStoreFiles(Ljava/util/Collection;Lorg/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable;)V
+#replaceStoreFiles(Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable;Ljava/lang/Runnable;)V
+#removeCompactedFiles(Ljava/util/Collection;)V
+#requireWritingToTmpDirFirst()Z

+###org/apache/hadoop/hbase/regionserver/StoreFileReader
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V
+#isPrimaryReplicaReader()Z
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getStoreFileScanner(ZZZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;[deprecated]
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;[deprecated]
+#close(Z)V
+#passesDeleteFamilyBloomFilter([BII)Z
+#passesGeneralRowBloomFilter([BII)Z
+#passesGeneralRowColBloomFilter(Lorg/apache/hadoop/hbase/Cell;)Z
+#passesKeyRangeFilter(Lorg/apache/hadoop/hbase/client/Scan;)Z
+#loadFileInfo()Ljava/util/Map;
+#loadBloomfilter()V
+#loadBloomfilter(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#getFilterEntries()J
+#setGeneralBloomFilterFaulty()V
+#setDeleteFamilyBloomFilterFaulty()V
+#getLastKey()Lorg/apache/hadoop/hbase/Cell;
+#getLastRowKey()[B
+#midkey()Lorg/apache/hadoop/hbase/Cell;
+#length()J
+#getTotalUncompressedBytes()J
+#getEntries()J
+#getDeleteFamilyCnt()J
+#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
+#indexSize()J
+#getBloomFilterType()Lorg/apache/hadoop/hbase/regionserver/BloomType;
+#getSequenceID()J
+#setSequenceID(J)V
+#setBulkLoaded(Z)V
+#isBulkLoaded()Z
+#getTotalBloomSize()J
+#getHFileVersion()I
+#getHFileMinorVersion()I
+#getHFileReader()Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#getMaxTimestamp()J
@2.0.0-alpha4
+#getLastKey()Ljava/util/Optional;
+#getLastRowKey()Ljava/util/Optional;
+#midKey()Ljava/util/Optional;
+#getFirstKey()Ljava/util/Optional;
-#getLastKey()Lorg/apache/hadoop/hbase/Cell;
-#getLastRowKey()[B
-#midkey()Lorg/apache/hadoop/hbase/Cell;
-#getFirstKey()Lorg/apache/hadoop/hbase/Cell;
@2.0.3
+#setListener(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader$Listener;)V
@2.1.0
-#setListener(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader$Listener;)V
@2.1.1
+#setListener(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader$Listener;)V
@2.2.0
+#getPrefixLength()I
-#passesGeneralRowBloomFilter([BII)Z
-#setListener(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader$Listener;)V
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/conf/Configuration;)V
+#getReaderContext()Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;ZLjava/util/concurrent/atomic/AtomicInteger;ZLorg/apache/hadoop/conf/Configuration;)V
@2.5.0
+#loadBloomfilter(Lorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)V
-#loadBloomfilter(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
@3.0.0-alpha-1
+#loadBloomfilter(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#loadBloomfilter(Lorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/hfile/BloomFilterMetrics;)V

+###org/apache/hadoop/hbase/regionserver/StripeStoreFlusher
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy;Lorg/apache/hadoop/hbase/regionserver/StripeStoreFileManager;)V
+#flushSnapshot(Ljava/util/SortedSet;JLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
@0.99.0
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
-#flushSnapshot(Ljava/util/SortedSet;JLorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
@1.3.0
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;)Ljava/util/List;
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy;Lorg/apache/hadoop/hbase/regionserver/StripeStoreFileManager;)V
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/compactions/StripeCompactionPolicy;Lorg/apache/hadoop/hbase/regionserver/StripeStoreFileManager;)V
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;)Ljava/util/List;
@2.5.0
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
@3.0.0-alpha-1
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
@3.0.0-alpha-3
+#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;Ljava/util/function/Consumer;)Ljava/util/List;
-#flushSnapshot(Lorg/apache/hadoop/hbase/regionserver/MemStoreSnapshot;JLorg/apache/hadoop/hbase/monitoring/MonitoredTask;Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/throttle/PressureAwareThroughputController
@1.3.0
+#<init>()V
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start(Ljava/lang/String;)V
+#control(Ljava/lang/String;J)J
+#finish(Ljava/lang/String;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#getMaxThroughput()D
+#setMaxThroughput(D)V

+###org/apache/hadoop/hbase/regionserver/wal/AsyncFSWAL
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lio/netty/channel/EventLoop;)V
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
+#sync()V
+#sync(J)V
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lio/netty/channel/EventLoop;)V
@2.0.0-alpha3
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)J
@2.0.0-alpha4
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)V
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.1.8
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.1.9
+#sync(Z)V
+#sync(JZ)V
@2.2.0
+#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
-#sync(Z)V
-#sync(JZ)V
@2.2.3
+#sync(Z)V
+#sync(JZ)V
-#append(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Z)J
@2.4.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
@2.5.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
-#sync()V
-#sync(J)V
-#sync(Z)V
-#sync(JZ)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;Lorg/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V

+###org/apache/hadoop/hbase/regionserver/wal/SecureAsyncProtobufLogWriter
@2.0.0-alpha-1
+#<init>(Lio/netty/channel/EventLoop;)V
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)V
-#<init>(Lio/netty/channel/EventLoop;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
-#<init>(Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoop;Ljava/lang/Class;)V

+###org/apache/hadoop/hbase/regionserver/wal/WALUtil
@0.99.2
+#<init>()V
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)V
+#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;Ljava/util/concurrent/atomic/AtomicLong;Z)J
+#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)J
@1.1.0
+#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)J
@1.2.0
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
+#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
+#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
+#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
-#<init>()V
-#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)V
-#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;Ljava/util/concurrent/atomic/AtomicLong;Z)J
-#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)J
-#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)J
@1.5.0
+#getWALBlockSize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
+#getWALBlockSize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)J
@2.0.0-alpha-1
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
-#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
-#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
-#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)J
-#getWALBlockSize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
-#getWALBlockSize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)J
@2.0.0-alpha3
+#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKey;
-#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKey;
@2.0.0-alpha4
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
+#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKey;
@2.0.0-beta-1
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
-#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKey;
-#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKey;
@2.0.1
+#getWALBlockSize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
@2.1.1
+#getWALBlockSize(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)J
@2.1.8
-#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
@2.2.0
+#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
@2.2.3
-#doFullAppendTransaction(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Z)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
@2.3.0
+#filterCells(Lorg/apache/hadoop/hbase/wal/WALEdit;Ljava/util/function/Function;)V
@3.0.0-alpha-3
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Lorg/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationSink;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Lorg/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationSink;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Lorg/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationSink;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Lorg/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationSink;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
+#createWALKey(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;Ljava/util/Map;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
-#writeCompactionMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
-#writeFlushMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;ZLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
-#writeRegionEventMarker(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;
-#writeBulkLoadMarkerAndSync(Lorg/apache/hadoop/hbase/wal/WAL;Ljava/util/NavigableMap;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)Lorg/apache/hadoop/hbase/wal/WALKeyImpl;

+###org/apache/hadoop/hbase/replication/NamespaceTableCfWALEntryFilter
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationPeer;)V
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
+#filterCell(Lorg/apache/hadoop/hbase/wal/WAL$Entry;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/replication/regionserver/MetricsSink
@0.95.0
+#<init>()V
+#setAgeOfLastAppliedOp(J)J
+#refreshAgeOfLastAppliedOp()J
+#applyBatch(J)V
@0.98.11-hadoop1
+#getAgeOfLastAppliedOp()J
+#getTimeStampOfLastAppliedOp()J
@0.99.0
-#getAgeOfLastAppliedOp()J
-#getTimeStampOfLastAppliedOp()J
@1.0.0
+#getAgeOfLastAppliedOp()J
+#getTimeStampOfLastAppliedOp()J
@1.3.0
+#applyBatch(JJ)V
@2.0.0
*#getTimeStampOfLastAppliedOp()J[deprecated]
+#getTimestampOfLastAppliedOp()J
@2.3.0
+#getStartTimestamp()J
+#getAppliedOps()J
@2.4.12
+#incrementFailedBatches()V
@3.0.0-alpha-1
-#incrementFailedBatches()V
-#getTimeStampOfLastAppliedOp()J[deprecated]
@3.0.0-alpha-3
+#incrementFailedBatches()V

+###org/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSourceShipperThread
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSource;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;)V
+#run()V
+#getStartPosition()J
@2.0.0-alpha2
-###org/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSourceShipperThread

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSink
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;)V
+#replicateEntries([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
+#stopReplicationSinkServices()V
+#getStats()Ljava/lang/String;
@0.95.2-hadoop1
+#replicateEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#replicateEntries([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
@0.98.11-hadoop1
+#getSinkMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSink;
@0.99.0
-#getSinkMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSink;
@1.0.0
+#getSinkMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSink;
@1.3.0
+#replicateEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-#replicateEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@1.7.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.2.6
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;)V
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.3.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;)V
@2.4.16
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost;)V
@2.5.3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost;)V

+###org/apache/hadoop/hbase/replication/regionserver/SourceFSConfigurationProvider
@1.3.0
+#getConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/hbase/replication/regionserver/WALEntryStream$WALEntryStreamRuntimeException
@1.4.0
+#<init>(Ljava/lang/Exception;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/replication/regionserver/WALEntryStream$WALEntryStreamRuntimeException

+###org/apache/hadoop/hbase/security/access/AuthResult
@0.95.0
+#<init>(ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[B[B[B)V
+#<init>(ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[BLjava/util/Map;)V
+#isAllowed()Z
+#getUser()Lorg/apache/hadoop/hbase/security/User;
+#getReason()Ljava/lang/String;
+#getTable()[B
+#getFamily()[B
+#getQualifier()[B
+#getAction()Lorg/apache/hadoop/hbase/security/access/Permission$Action;
+#getRequest()Ljava/lang/String;
+#toContextString()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#allow(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[B[B[B)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#allow(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[BLjava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#deny(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[B[B[B)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#deny(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[BLjava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
@0.95.2-hadoop1
+#<init>(ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;[B[B)V
+#<init>(ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
+#<init>(ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#allow(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#allow(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;[B[B)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#allow(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#deny(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#deny(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;[B[B)Lorg/apache/hadoop/hbase/security/access/AuthResult;
+#deny(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
-#<init>(ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[B[B[B)V
-#<init>(ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[BLjava/util/Map;)V
-#getTable()[B
-#allow(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[B[B[B)Lorg/apache/hadoop/hbase/security/access/AuthResult;
-#allow(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[BLjava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
-#deny(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[B[B[B)Lorg/apache/hadoop/hbase/security/access/AuthResult;
-#deny(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;[BLjava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult;
@0.98.2-hadoop1
+#setAllowed(Z)V
+#setReason(Ljava/lang/String;)V
@1.1.0
+#getParams()Lorg/apache/hadoop/hbase/security/access/AuthResult$Params;
+#toFamilyString()Ljava/lang/String;

+###org/apache/hadoop/hbase/security/SecurityUtil
@0.98.4-hadoop1
+#<init>()V
+#getUserFromPrincipal(Ljava/lang/String;)Ljava/lang/String;
@1.0.0
+#getPrincipalWithoutRealm(Ljava/lang/String;)Ljava/lang/String;

+###org/apache/hadoop/hbase/security/token/TokenUtil
@0.95.0
+#<init>()V
+#obtainToken(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/security/token/Token;
+#obtainAndCacheToken(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation;)V
+#obtainTokenForJob(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/mapreduce/Job;)V
+#obtainTokenForJob(Lorg/apache/hadoop/mapred/JobConf;Lorg/apache/hadoop/security/UserGroupInformation;)V
@0.98.9-hadoop1
-###org/apache/hadoop/hbase/security/token/TokenUtil

+###org/apache/hadoop/hbase/security/visibility/ParseException
@0.98.0-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/security/visibility/SimpleScanLabelGenerator
@0.98.0-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getLabels(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Ljava/util/List;

+###org/apache/hadoop/hbase/security/visibility/ZKVisibilityLabelWatcher
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsManager;Lorg/apache/hadoop/conf/Configuration;)V
+#start()V
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#writeToZookeeper([BZ)V
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsManager;Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsCache;Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/snapshot/SnapshotInfo
@0.95.0
+#<init>()V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@0.95.1-hadoop1
+#getSnapshotStats(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/snapshot/SnapshotInfo$SnapshotStats;
@0.98.3-hadoop1
+#getSnapshotList(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@1.3.0
+#getSnapshotStats(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Ljava/util/Map;)Lorg/apache/hadoop/hbase/snapshot/SnapshotInfo$SnapshotStats;
+#getSnapshotsFilesMap(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)Ljava/util/Map;
@2.0.0-alpha-1
+#doWork()I
+#getSnapshotStats(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/SnapshotDescription;)Lorg/apache/hadoop/hbase/snapshot/SnapshotInfo$SnapshotStats;
+#getSnapshotStats(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Ljava/util/Map;)Lorg/apache/hadoop/hbase/snapshot/SnapshotInfo$SnapshotStats;
+#getSnapshotsFilesMap(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)Ljava/util/Map;
-#run([Ljava/lang/String;)I
-#getSnapshotStats(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)Lorg/apache/hadoop/hbase/snapshot/SnapshotInfo$SnapshotStats;
-#getSnapshotStats(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Ljava/util/Map;)Lorg/apache/hadoop/hbase/snapshot/SnapshotInfo$SnapshotStats;
-#getSnapshotsFilesMap(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)Ljava/util/Map;

+###org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$StoreFileVisitor
@0.98.6-hadoop1
+#storeFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile;)V
@2.0.0-alpha-1
+#storeFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile;)V
-#storeFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile;)V
@2.0.0-alpha4
+#storeFile(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile;)V
-#storeFile(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/String;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotRegionManifest$StoreFile;)V

+###org/apache/hadoop/hbase/SplitLogTask$Err
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V

+###org/apache/hadoop/hbase/tmpl/master/AssignmentManagerStatusTmpl$ImplData
@0.95.0
+#<init>()V
+#setAssignmentManager(Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;
+#setLimit(I)V
+#getLimit()I
+#getLimit__IsNotDefault()Z
@2.0.0-alpha-1
+#setAssignmentManager(Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;)V
+#getAssignmentManager()Lorg/apache/hadoop/hbase/master/assignment/AssignmentManager;
-#setAssignmentManager(Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
-#getAssignmentManager()Lorg/apache/hadoop/hbase/master/AssignmentManager;

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl
@0.95.2-hadoop1
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/master/HMaster;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;

+###org/apache/hadoop/hbase/tmpl/master/RegionServerListTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheTmpl$Intf
@0.98.4-hadoop1
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/BlockCacheViewTmplImpl
@0.98.4-hadoop1
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/regionserver/BlockCacheViewTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/regionserver/RSStatusTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V
@2.2.0
+#formatZKString()Ljava/lang/String;

+###org/apache/hadoop/hbase/tool/Canary$ZookeeperStdOutSink
@0.98.20-hadoop1
+#<init>()V
+#publishReadFailure(Ljava/lang/String;Ljava/lang/String;)V
+#publishReadTiming(Ljava/lang/String;Ljava/lang/String;J)V
@0.99.0
-###org/apache/hadoop/hbase/tool/Canary$ZookeeperStdOutSink

+###org/apache/hadoop/hbase/tool/WriteSinkCoprocessor
@0.96.1-hadoop1
+#<init>()V
+#preOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
@2.0.0-alpha4
+#getRegionObserver()Ljava/util/Optional;

+###org/apache/hadoop/hbase/util/BloomFilterChunk
@2.0.0-alpha-1
+#<init>(Ljava/io/DataInput;)V
+#actualErrorRate()D
+#<init>(ILorg/apache/hadoop/hbase/regionserver/BloomType;)V
+#<init>(IDII)V
+#createAnother()Lorg/apache/hadoop/hbase/util/BloomFilterChunk;
+#allocBloom()V
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#getKeyCount()J
+#getMaxKeys()J
+#getByteSize()J
+#getHashType()I
+#compactBloom()V
+#writeBloom(Ljava/io/DataOutput;)V
+#getHashCount()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/FSUtils
@0.95.0
+#isStartingWithPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#isMatchingTail(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#isMatchingTail(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#getInstance(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/FSUtils;
+#deleteDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#getFilePermissions(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
+#checkFileSystemAvailable(Lorg/apache/hadoop/fs/FileSystem;)V
+#checkDfsSafeMode(Lorg/apache/hadoop/conf/Configuration;)V
+#getVersion(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#checkVersion(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)V
+#checkVersion(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;ZII)V
+#setVersion(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#setVersion(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;II)V
+#setVersion(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;II)V
+#checkClusterIdExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;I)Z
+#getClusterId(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/ClusterId;
+#setClusterId(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/ClusterId;I)V
+#validateRootPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#removeRootPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#waitOnSafeMode(Lorg/apache/hadoop/conf/Configuration;J)V
+#getPath(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#setRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#setFsDefault(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#metaRegionExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileStatus;JJ)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#isMajorCompacted(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#getTotalTableFragmentation(Lorg/apache/hadoop/hbase/master/HMaster;)I
+#getTableFragmentation(Lorg/apache/hadoop/hbase/master/HMaster;)Ljava/util/Map;
+#getTableFragmentation(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
+#isPre020FileLayout(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#isMajorCompactedPre020(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#isAppendSupported(Lorg/apache/hadoop/conf/Configuration;)Z
+#isHDFS(Lorg/apache/hadoop/conf/Configuration;)Z
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#getTableDirs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#getTablePath(Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/fs/Path;
+#getTablePath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getRegionDirs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#getFamilyDirs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#getCurrentFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
+#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
+#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#delete(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Z
+#isExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#checkAccess(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/permission/FsAction;)V
+#logFileSystemState(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/commons/logging/Log;)V
@0.95.1-hadoop1
+#getDefaultBlockSize(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
+#getDefaultReplication(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)S
+#getDefaultBufferSize(Lorg/apache/hadoop/fs/FileSystem;)I
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#renameAndSetModifyTime(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
-#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Lorg/apache/hadoop/fs/FSDataOutputStream;
-#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@0.95.2-hadoop1
+#getTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#getTableName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
+#getNamespaceDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getLocalTableDirs(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#isRecoveredEdits(Lorg/apache/hadoop/fs/Path;)Z
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
-#getTablePath(Lorg/apache/hadoop/fs/Path;[B)Lorg/apache/hadoop/fs/Path;
-#getTablePath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
@0.96.0-hadoop1
+#getRegionDegreeLocalityMappingFromFS(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Map;
+#getRegionDegreeLocalityMappingFromFS(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;I)Ljava/util/Map;
@0.96.1-hadoop1
+#setupShortCircuitRead(Lorg/apache/hadoop/conf/Configuration;)V
+#checkShortCircuitReadBufferSize(Lorg/apache/hadoop/conf/Configuration;)V
@0.98.2-hadoop1
+#getFileDefault()Lorg/apache/hadoop/fs/permission/FsPermission;
@0.98.7-hadoop1
-#isPre020FileLayout(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#isMajorCompactedPre020(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
@0.98.9-hadoop1
+#getReferenceFilePaths(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#getRegionReferenceFileCount(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)I
@0.98.10-hadoop1
+#deleteRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@0.98.13-hadoop1
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
@0.98.14-hadoop1
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
-#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
@0.98.21-hadoop1
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#filterFileStatuses([Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
+#filterFileStatuses(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
+#listStatusWithStatusFilter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
@0.99.0
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#isPre020FileLayout(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#isMajorCompactedPre020(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#deleteRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
-#getFileDefault()Lorg/apache/hadoop/fs/permission/FsPermission;
-#getReferenceFilePaths(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#getRegionReferenceFileCount(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)I
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#filterFileStatuses([Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
-#filterFileStatuses(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
-#listStatusWithStatusFilter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
@0.99.1
+#getDFSHedgedReadMetrics(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/DFSHedgedReadMetrics;
-#isPre020FileLayout(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#isMajorCompactedPre020(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
@0.99.2
+#getReferenceFilePaths(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#getRegionReferenceFileCount(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)I
-#getDFSHedgedReadMetrics(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/DFSHedgedReadMetrics;
@1.0.0
+#deleteRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.1.0
+#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
@1.2.0
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
-#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;[Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/fs/FSDataOutputStream;
@1.3.0
-#isMajorCompacted(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
@1.3.3
+#removeWALRootPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getRootDirFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getWALRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#setWALRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#getWALFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getWALTableDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#filterFileStatuses([Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
+#filterFileStatuses(Ljava/util/Iterator;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
+#listStatusWithStatusFilter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/FileStatusFilter;)Ljava/util/List;
-#removeRootPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
@1.3.6
+#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getWrongWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
@1.4.0
+#isDistributedFileSystem(Lorg/apache/hadoop/fs/FileSystem;)Z
+#addToHDFSBlocksDistribution(Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;[Lorg/apache/hadoop/fs/BlockLocation;)V
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#listLocatedStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
-#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#getWALTableDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
-#getWrongWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
@1.4.8
+#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getWALTableDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
@1.4.11
+#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getWrongWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
+#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
@1.5.0
-#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
-#isStartingWithPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
-#isMatchingTail(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
-#deleteDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#getDefaultBlockSize(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
-#getDefaultReplication(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)S
-#getDefaultBufferSize(Lorg/apache/hadoop/fs/FileSystem;)I
-#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
-#getFilePermissions(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
-#validateRootPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#removeWALRootPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
-#getPath(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
-#getRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#setRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#setFsDefault(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#getRootDirFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
-#getWALRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#setWALRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#getWALFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
-#getTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
-#getTableName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
-#getNamespaceDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#isHDFS(Lorg/apache/hadoop/conf/Configuration;)Z
-#isRecoveredEdits(Lorg/apache/hadoop/fs/Path;)Z
-#getCurrentFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
-#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
-#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
-#listLocatedStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
-#delete(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Z
-#isExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#logFileSystemState(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/commons/logging/Log;)V
-#renameAndSetModifyTime(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
@1.7.0
+#getDFSHedgedReadMetrics(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hdfs/DFSHedgedReadMetrics;
@2.0.0-alpha-1
+#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#isStartingWithPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#isMatchingTail(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#deleteDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#getDefaultBlockSize(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
+#getDefaultReplication(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)S
+#getDefaultBufferSize(Lorg/apache/hadoop/fs/FileSystem;)I
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#getFilePermissions(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
+#validateRootPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#removeWALRootPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getPath(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#setRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#setFsDefault(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#getRootDirFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getWALRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#setWALRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#getWALFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#getTableName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
+#getNamespaceDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#isHDFS(Lorg/apache/hadoop/conf/Configuration;)Z
+#isRecoveredEdits(Lorg/apache/hadoop/fs/Path;)Z
+#getCurrentFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
+#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#listLocatedStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#delete(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Z
+#isExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#logFileSystemState(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/commons/logging/Log;)V
+#renameAndSetModifyTime(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
-#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#getWALTableDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
-#getWrongWALRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;[deprecated]
-#isAppendSupported(Lorg/apache/hadoop/conf/Configuration;)Z
-#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/fs/Path;
@2.0.0-beta-1
-#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
-#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
-#isStartingWithPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
-#isMatchingTail(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
-#deleteDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#getDefaultBlockSize(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
-#getDefaultReplication(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)S
-#getDefaultBufferSize(Lorg/apache/hadoop/fs/FileSystem;)I
-#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
-#getFilePermissions(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
-#validateRootPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
-#removeWALRootPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
-#getPath(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
-#getRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#setRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#setFsDefault(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#getRootDirFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
-#getWALRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#setWALRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
-#getWALFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
-#getTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
-#getTableName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
-#getNamespaceDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
-#isHDFS(Lorg/apache/hadoop/conf/Configuration;)Z
-#isRecoveredEdits(Lorg/apache/hadoop/fs/Path;)Z
-#getCurrentFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
-#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
-#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
-#listLocatedStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
-#delete(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Z
-#isExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
-#logFileSystemState(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/commons/logging/Log;)V
-#renameAndSetModifyTime(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
@2.0.2
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
@2.0.6
+#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
@2.1.0
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#copyFilesParallel(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;I)Ljava/util/List;
-#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;
@2.1.6
+#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
@2.1.7
*#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;[deprecated]
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/FSUtils$ProgressReporter;)Ljava/util/Map;
*#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;[deprecated]
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/FSUtils$ProgressReporter;)Ljava/util/Map;
@2.1.9
+#checkClusterIdExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;J)Z
-#checkClusterIdExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;I)Z
@2.2.0
+#checkClusterIdExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;I)Z
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#checkClusterIdExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;J)Z
-#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;[deprecated]
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/FSUtils$ProgressReporter;)Ljava/util/Map;
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;[deprecated]
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/FSUtils$ProgressReporter;)Ljava/util/Map;
@2.2.1
+#getRegionDirFromRootDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;[deprecated]
+#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/FSUtils$ProgressReporter;)Ljava/util/Map;
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HbckErrorReporter;)Ljava/util/Map;[deprecated]
+#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/FSUtils$ProgressReporter;)Ljava/util/Map;
-#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/fs/Path;
-#getTableStoreFilePathMap(Ljava/util/Map;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
-#getTableStoreFilePathMap(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)Ljava/util/Map;
@2.2.3
+#checkClusterIdExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;J)Z
-#checkClusterIdExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;I)Z
@2.2.5
-#checkAccess(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/permission/FsAction;)V
@2.3.0
+#deleteRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#getRegionDirFromTableDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#isSameHdfs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;)Z
-#getInstance(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/FSUtils;
-#deleteRegionDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
@2.4.9
+#getReferenceAndLinkFilePaths(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#getRegionReferenceAndLinkFileCount(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)I
@2.5.0
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/hdfs/client/HdfsDataInputStream;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
@3.0.0-alpha-1
+#setClusterId(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/ClusterId;J)V
+#renameFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
-#setClusterId(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/ClusterId;I)V
-#computeHDFSBlocksDistribution(Lorg/apache/hadoop/hdfs/client/HdfsDataInputStream;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
-#getReferenceAndLinkFilePaths(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
-#getRegionReferenceAndLinkFileCount(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)I
@3.0.0-alpha-2
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/hdfs/client/HdfsDataInputStream;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#getReferenceAndLinkFilePaths(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#getRegionReferenceAndLinkFileCount(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)I

+###org/apache/hadoop/hbase/util/JvmPauseMonitor
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#start()V
+#stop()V
+#main([Ljava/lang/String;)V
@0.98.19-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;)V
+#updateMetrics(JZ)V
+#getMetricsSource()Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;
+#setMetricsSource(Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;)V
@0.99.0
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;)V
-#updateMetrics(JZ)V
-#getMetricsSource()Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;
-#setMetricsSource(Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;)V
+#updateMetrics(JZ)V
+#getMetricsSource()Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;
+#setMetricsSource(Lorg/apache/hadoop/hbase/metrics/JvmPauseMonitorSource;)V

+###org/apache/hadoop/hbase/util/ModifyRegionUtils$RegionFillTask
@0.95.0
+#fillRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V

+###org/apache/hadoop/hbase/util/RegionSplitCalculator
@0.95.0
+#<init>(Ljava/util/Comparator;)V
+#add(Lorg/apache/hadoop/hbase/util/KeyRange;)Z
+#calcCoverage()Lcom/google/common/collect/Multimap;
+#getSplits()Ljava/util/TreeSet;
+#getStarts()Lcom/google/common/collect/Multimap;
+#findBigRanges(Ljava/util/Collection;I)Ljava/util/List;
@2.0.0-alpha2
+#calcCoverage()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;
+#getStarts()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;
-#calcCoverage()Lcom/google/common/collect/Multimap;
-#getStarts()Lcom/google/common/collect/Multimap;
@2.0.0-beta-1
+#calcCoverage()Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
+#getStarts()Lorg/apache/hbase/thirdparty/com/google/common/collect/Multimap;
-#calcCoverage()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;
-#getStarts()Lorg/apache/hadoop/hbase/shaded/com/google/common/collect/Multimap;

+###org/apache/hadoop/hbase/util/ServerCommandLine
@0.95.0
+#<init>()V
+#logJVMInfo()V
+#doMain([Ljava/lang/String;)V
@0.96.0-hadoop1
+#logProcessInfo(Lorg/apache/hadoop/conf/Configuration;)V

+###org/apache/hadoop/hbase/util/StealJobQueue
@1.2.0
+#<init>()V
+#getStealFromQueue()Ljava/util/concurrent/BlockingQueue;
+#offer(Ljava/lang/Object;)Z
+#take()Ljava/lang/Object;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
@1.3.3
+#<init>(II)V
@1.4.0
-#<init>(II)V
@1.4.6
+#<init>(II)V
@2.0.0-alpha3
+#<init>(Ljava/util/Comparator;)V
+#<init>(IILjava/util/Comparator;)V
-#<init>()V
-#<init>(II)V

+###org/apache/hadoop/hbase/wal/AbstractFSWALProvider
@2.0.0-alpha-1
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
+#getWALs()Ljava/util/List;
+#getWAL([B[B)Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
+#shutdown()V
+#close()V
+#getNumLogFiles()J
+#getLogFileSize()J
+#getNumRolledLogFiles(Lorg/apache/hadoop/hbase/wal/WAL;)I
+#getLogFileSize(Lorg/apache/hadoop/hbase/wal/WAL;)J
+#getCurrentFileName(Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/fs/Path;
+#extractFileNumFromWAL(Lorg/apache/hadoop/hbase/wal/WAL;)J
+#validateWALFilename(Ljava/lang/String;)Z
+#getWALDirectoryName(Ljava/lang/String;)Ljava/lang/String;
+#getServerNameFromWALDirectoryName(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/ServerName;
+#getServerNameFromWALDirectoryName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/ServerName;
+#isMetaFile(Lorg/apache/hadoop/fs/Path;)Z
+#isMetaFile(Ljava/lang/String;)Z
+#isArchivedLogFile(Lorg/apache/hadoop/fs/Path;)Z
+#getArchivedLogPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#openReader(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
+#getWALPrefixFromWALName(Ljava/lang/String;)Ljava/lang/String;
+#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
@2.0.0-alpha4
+#getWALArchiveDirectoryName(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/lang/String;
@2.0.0-beta-1
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#getWAL([B[B)Lorg/apache/hadoop/hbase/regionserver/wal/AbstractFSWAL;
-#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
@2.0.0-beta-2
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#addWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
-#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
@2.2.7
+#getTimestamp(Ljava/lang/String;)J
@2.3.0
-#getTimestamp(Ljava/lang/String;)J
@2.3.3
+#getTimestamp(Ljava/lang/String;)J
@2.4.0
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)V
-#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
-#getTimestamp(Ljava/lang/String;)J
@2.4.5
+#findArchivedLog(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
@2.4.6
-#getArchivedLogPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
@3.0.0-alpha-1
+#getTimestamp(Ljava/lang/String;)J
+#getArchivedLogPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#findArchivedLog(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
@3.0.0-alpha-2
+#findArchivedLog(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
-#getArchivedLogPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/hbase/wal/WALPrettyPrinter
@0.99.2
+#<init>()V
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
+#enableValues()V
+#disableValues()V
+#enableJSON()V
+#disableJSON()V
+#setSequenceFilter(J)V
+#setRegionFilter(Ljava/lang/String;)V
+#setRowFilter(Ljava/lang/String;)V
+#beginPersistentOutput()V
+#endPersistentOutput()V
+#processFile(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)V
@1.2.8
+#setPosition(J)V
@1.3.0
-#setPosition(J)V
@1.3.3
+#setPosition(J)V
@1.4.0
-#setPosition(J)V
@1.4.9
+#setPosition(J)V
@1.6.0
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
+#setTableFilter(Ljava/lang/String;)V
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@1.7.0
+#<init>(ZZJLjava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/io/PrintStream;)V
+#setRowPrefixFilter(Ljava/lang/String;)V
+#setOutputOnlyRowKey()V
+#printCell(Ljava/io/PrintStream;Ljava/util/Map;ZZ)V
+#toStringMap(Lorg/apache/hadoop/hbase/Cell;ZLjava/lang/String;Ljava/lang/String;Z)Ljava/util/Map;
+#toStringMap(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Map;
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@2.0.0-alpha-1
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
-#<init>(ZZJLjava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/io/PrintStream;)V
-#setTableFilter(Ljava/lang/String;)V
-#setRowPrefixFilter(Ljava/lang/String;)V
-#setOutputOnlyRowKey()V
-#setPosition(J)V
-#printCell(Ljava/io/PrintStream;Ljava/util/Map;ZZ)V
-#toStringMap(Lorg/apache/hadoop/hbase/Cell;ZLjava/lang/String;Ljava/lang/String;Z)Ljava/util/Map;
-#toStringMap(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Map;
@2.0.3
+#setPosition(J)V
@2.1.0
-#setPosition(J)V
@2.1.1
+#setPosition(J)V
@2.1.9
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
+#setTableFilter(Ljava/lang/String;)V
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@2.2.0
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
-#setTableFilter(Ljava/lang/String;)V
@2.2.3
+#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
+#setTableFilter(Ljava/lang/String;)V
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@2.3.0
+#printCell(Ljava/io/PrintStream;Ljava/util/Map;Z)V
+#toStringMap(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Map;
@2.3.2
+#<init>(ZZJLjava/util/Set;Ljava/lang/String;Ljava/lang/String;ZZLjava/io/PrintStream;)V
+#setOutputOnlyRowKey()V
+#toStringMap(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/Map;
-#<init>(ZZJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/io/PrintStream;)V
@2.3.3
+#<init>(ZZJLjava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/io/PrintStream;)V
+#setRowPrefixFilter(Ljava/lang/String;)V
+#printCell(Ljava/io/PrintStream;Ljava/util/Map;ZZ)V
+#toStringMap(Lorg/apache/hadoop/hbase/Cell;ZLjava/lang/String;Ljava/lang/String;Z)Ljava/util/Map;
-#<init>(ZZJLjava/util/Set;Ljava/lang/String;Ljava/lang/String;ZZLjava/io/PrintStream;)V
-#printCell(Ljava/io/PrintStream;Ljava/util/Map;Z)V
-#toStringMap(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/Map;
@3.0.0-alpha-1
-#<init>(ZZJLjava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/io/PrintStream;)V

+###org/apache/hadoop/hbase/wal/WALSplitter$OutputSink
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;Lorg/apache/hadoop/hbase/wal/WALSplitter$EntryBuffers;I)V
+#startWriterThreads()V
+#finishWritingAndClose()Ljava/util/List;
+#getOutputCounts()Ljava/util/Map;
+#getNumberOfRecoveredRegions()I
+#append(Lorg/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer;)V
+#flush()Z
@1.2.1
+#keepRegionEvents()Z
@1.2.4
+#keepRegionEvent(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Z
-#keepRegionEvents()Z
@2.2.1
-###org/apache/hadoop/hbase/wal/WALSplitter$OutputSink

+###org/apache/hadoop/hbase/zookeeper/ClusterStatusTracker
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
+#isClusterUp()Z
+#setClusterUp()V
+#setClusterDown()V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/ClusterStatusTracker

+###org/apache/hadoop/hbase/zookeeper/LoadBalancerTracker
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
+#isBalancerOn()Z
+#setBalancerOn(Z)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/LoadBalancerTracker

+###org/apache/hadoop/hbase/zookeeper/ZKServerTool
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
@0.98.15-hadoop1
+#readZKNodes(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/hbase/ServerName;
@0.99.0
-#readZKNodes(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/hbase/ServerName;
@1.0.3
+#readZKNodes(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/hbase/ServerName;
@1.1.0
-#readZKNodes(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/hbase/ServerName;
@1.1.3
+#readZKNodes(Lorg/apache/hadoop/conf/Configuration;)[Lorg/apache/hadoop/hbase/ServerName;
@2.0.0-beta-1
-###org/apache/hadoop/hbase/zookeeper/ZKServerTool

+###org/apache/hadoop/hbase/InterProcessLock$MetadataHandler
@0.95.0
+#handleMetadata([B)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/InterProcessLock$MetadataHandler

+###org/apache/hadoop/hbase/InterProcessLock
@0.95.0
+#acquire()V
+#tryAcquire(J)Z
+#release()V
+#reapAllLocks()V
@0.95.1-hadoop1
+#reapExpiredLocks(J)V
+#visitLocks(Lorg/apache/hadoop/hbase/InterProcessLock$MetadataHandler;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/InterProcessLock

+###org/apache/hadoop/hbase/InterProcessReadWriteLock
@0.95.0
+#readLock([B)Lorg/apache/hadoop/hbase/InterProcessLock;
+#writeLock([B)Lorg/apache/hadoop/hbase/InterProcessLock;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/InterProcessReadWriteLock

+###org/apache/hadoop/hbase/MetaMigrationConvertingToPB
@0.99.0
+#<init>()V
+#updateMetaIfNecessary(Lorg/apache/hadoop/hbase/master/MasterServices;)J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/MetaMigrationConvertingToPB

+###org/apache/hadoop/hbase/TableStateManager
@0.99.0
+#setTableState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)V
+#setTableStateIfInStates(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
+#setTableStateIfNotInStates(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
+#isTableState(Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
+#setDeletedTable(Lorg/apache/hadoop/hbase/TableName;)V
+#isTablePresent(Lorg/apache/hadoop/hbase/TableName;)Z
+#getTablesInStates([Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Ljava/util/Set;
+#checkAndRemoveTableState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;Z)V
@1.1.0
+#isTableState(Lorg/apache/hadoop/hbase/TableName;Z[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
@1.7.0
-###org/apache/hadoop/hbase/TableStateManager

+###org/apache/hadoop/hbase/TagRewriteCell
@0.99.2
+#<init>(Lorg/apache/hadoop/hbase/Cell;[B)V
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getMvccVersion()J[deprecated]
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getValue()[B[deprecated]
+#getFamily()[B[deprecated]
+#getQualifier()[B[deprecated]
+#getRow()[B[deprecated]
+#heapSize()J
+#setTimestamp(J)V
+#setTimestamp([BI)V
+#setSequenceId(J)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/TagRewriteCell

+###org/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails
@0.99.0
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails

+###org/apache/hadoop/hbase/coordination/CloseRegionCoordination
@0.99.0
+#checkClosingState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)Z
+#setClosedState(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)V
+#parseFromProtoRequest(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;
+#getDetaultDetails()Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/CloseRegionCoordination

+###org/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails
@0.99.0
+#setServerName(Lorg/apache/hadoop/hbase/ServerName;)V
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails

+###org/apache/hadoop/hbase/coordination/OpenRegionCoordination
@0.99.0
+#transitionToOpened(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#transitionFromOfflineToOpening(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#tickleOpening(Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Ljava/lang/String;)Z
+#tryTransitionFromOfflineToFailedOpen(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#tryTransitionFromOpeningToFailedOpen(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#parseFromProtoRequest(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionRequest$RegionOpenInfo;)Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;
+#getDetailsForNonCoordinatedOpening()Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;
+#commitOpenOnMasterSide(Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/OpenRegionCoordination

+###org/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails
@0.99.0
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails

+###org/apache/hadoop/hbase/coordination/RegionMergeCoordination
@0.99.0
+#getDefaultDetails()Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;
+#startRegionMergeTransaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitForRegionMergeTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;)V
+#confirmRegionMergeTransaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;)V
+#processRegionMergeRequest(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;)V
+#completeRegionMergeTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#clean(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/RegionMergeCoordination

+###org/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails
@0.99.0
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails

+###org/apache/hadoop/hbase/coordination/SplitTransactionCoordination
@0.99.0
+#getDefaultDetails()Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;
+#startSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitForSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)V
+#completeSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#clean(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#processTransition(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)I
@1.1.0
+#waitForSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)V
+#completeSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#waitForSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)V
-#completeSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/SplitTransactionCoordination

+###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$ZkSplitLogManagerDetails
@0.99.0
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZKSplitLogManagerCoordination$ZkSplitLogManagerDetails

+###org/apache/hadoop/hbase/coordination/ZKSplitTransactionCoordination$ZkSplitTransactionDetails
@0.99.0
+#<init>()V
+#getZnodeVersion()I
+#setZnodeVersion(I)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZKSplitTransactionCoordination$ZkSplitTransactionDetails

+###org/apache/hadoop/hbase/coordination/ZKSplitTransactionCoordination
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#startSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitForSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)V
+#completeSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#clean(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getDefaultDetails()Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;
+#processTransition(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)I
@1.1.0
+#waitForSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)V
+#completeSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#waitForSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;)V
-#completeSplitTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/SplitTransactionCoordination$SplitTransactionDetails;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZKSplitTransactionCoordination

+###org/apache/hadoop/hbase/coordination/ZkCloseRegionCoordination$ZkCloseRegionDetails
@0.99.0
+#<init>()V
+#<init>(ZI)V
+#isPublishStatusInZk()Z
+#setPublishStatusInZk(Z)V
+#getExpectedVersion()I
+#setExpectedVersion(I)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZkCloseRegionCoordination$ZkCloseRegionDetails

+###org/apache/hadoop/hbase/coordination/ZkCloseRegionCoordination
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#checkClosingState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)Z
+#setClosedState(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;)V
+#parseFromProtoRequest(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$CloseRegionRequest;)Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;
+#getDetaultDetails()Lorg/apache/hadoop/hbase/coordination/CloseRegionCoordination$CloseRegionDetails;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZkCloseRegionCoordination

+###org/apache/hadoop/hbase/coordination/ZkOpenRegionCoordination$ZkOpenRegionDetails
@0.99.0
+#<init>()V
+#<init>(I)V
+#getVersionOfOfflineNode()I
+#setVersionOfOfflineNode(I)V
+#getVersion()I
+#setVersion(I)V
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#setServerName(Lorg/apache/hadoop/hbase/ServerName;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZkOpenRegionCoordination$ZkOpenRegionDetails

+###org/apache/hadoop/hbase/coordination/ZkOpenRegionCoordination
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#transitionToOpened(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#transitionFromOfflineToOpening(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#tickleOpening(Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Ljava/lang/String;)Z
+#tryTransitionFromOfflineToFailedOpen(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#tryTransitionFromOpeningToFailedOpen(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
+#parseFromProtoRequest(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$OpenRegionRequest$RegionOpenInfo;)Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;
+#getDetailsForNonCoordinatedOpening()Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;
+#commitOpenOnMasterSide(Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZkOpenRegionCoordination

+###org/apache/hadoop/hbase/coordination/ZkRegionMergeCoordination$ZkRegionMergeDetails
@0.99.0
+#<init>()V
+#getZnodeVersion()I
+#setZnodeVersion(I)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZkRegionMergeCoordination$ZkRegionMergeDetails

+###org/apache/hadoop/hbase/coordination/ZkRegionMergeCoordination
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#getDefaultDetails()Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;
+#waitForRegionMergeTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;)V
+#startRegionMergeTransaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#clean(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#completeRegionMergeTransaction(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#confirmRegionMergeTransaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;)V
+#processRegionMergeRequest(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/coordination/RegionMergeCoordination$RegionMergeDetails;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coordination/ZkRegionMergeCoordination

+###org/apache/hadoop/hbase/coprocessor/AggregateImplementation
@0.95.0
+#<init>()V
+#getMax(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AggregateProtos$AggregateArgument;Lcom/google/protobuf/RpcCallback;)V
+#getMin(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AggregateProtos$AggregateArgument;Lcom/google/protobuf/RpcCallback;)V
+#getSum(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AggregateProtos$AggregateArgument;Lcom/google/protobuf/RpcCallback;)V
+#getRowNum(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AggregateProtos$AggregateArgument;Lcom/google/protobuf/RpcCallback;)V
+#getAvg(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AggregateProtos$AggregateArgument;Lcom/google/protobuf/RpcCallback;)V
+#getStd(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AggregateProtos$AggregateArgument;Lcom/google/protobuf/RpcCallback;)V
+#getMedian(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/AggregateProtos$AggregateArgument;Lcom/google/protobuf/RpcCallback;)V
+#getService()Lcom/google/protobuf/Service;
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/coprocessor/AggregateImplementation

+###org/apache/hadoop/hbase/coprocessor/BaseMasterAndRegionObserver
@0.98.6-hadoop1
+#<init>()V
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
+#postBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
+#preShutdown(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preStopMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postStartMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@0.98.19-hadoop1
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@0.99.0
+#preTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preTableFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTableFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.0.0
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#preGetTableNames(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableNames(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/lang/String;)V
@1.1.0
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
@1.1.3
+#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)V
+#postAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.3.0
+#preDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
@1.4.0
+#preGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#postAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Z)V
+#postMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#postRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#postRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
@1.5.0
+#preListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.7.0
+#preRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
+#postRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/BaseMasterAndRegionObserver

+###org/apache/hadoop/hbase/coprocessor/BaseMasterObserver
@0.95.0
+#<init>()V
+#preCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postCreateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HTableDescriptor;[Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postAssign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#postUnassign(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#preRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postRegionOffline(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postBalance(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)Z
+#postBalanceSwitch(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZZ)V
+#preShutdown(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preStopMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postStartMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#preMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#postMove(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#preSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postCloneSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postRestoreSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postDeleteSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
@0.95.2-hadoop1
+#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#preCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postModifyNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;)V
+#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;[B)V
+#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#preDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDeleteTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preModifyTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#preAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postAddColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#postModifyColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/hbase/HColumnDescriptor;)V
-#preDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#postDeleteColumn(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#preDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#postDeleteColumnHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B)V
-#preEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postEnableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postEnableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDisableTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#preDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
-#postDisableTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
@0.96.0-hadoop1
+#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.98.8-hadoop1
+#preTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#preTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTruncateTableHandler(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
@0.98.19-hadoop1
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@0.99.0
+#preTableFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postTableFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
-#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
-#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
-#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
-#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.0.0
+#preGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGetNamespaceDescriptor(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#preListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaceDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#preGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableDescriptors(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V
+#preGetTableNames(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/lang/String;)V
+#postGetTableNames(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/lang/String;)V
@1.1.0
+#preListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#postListSnapshot(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetUserQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetTableQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#preSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
+#postSetNamespaceQuota(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/QuotaProtos$Quotas;)V
@1.1.3
+#preAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/procedure2/ProcedureExecutor;J)V
+#postAbortProcedure(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postListProcedures(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.3.0
+#preDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#postDispatchMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#preSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)Z
+#postSetSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;ZLorg/apache/hadoop/hbase/client/Admin$MasterSwitchType;)V
@1.4.0
+#preGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postGetClusterStatus(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/ClusterStatus;)V
+#preClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postClearDeadServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Ljava/util/List;)V
+#preMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/lang/String;)V
+#preMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#postMoveServersAndTables(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#preAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postAddRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postRemoveRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#preRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#postRemoveServers(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/Set;)V
+#preBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postBalanceRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Z)V
@1.5.0
+#preListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postListNamespaces(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
@1.7.0
+#preRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
+#postRenameRSGroup(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/BaseMasterObserver

+###org/apache/hadoop/hbase/coprocessor/BaseRegionObserver
@0.95.0
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#preOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#postClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Z)V
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postFlush(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
+#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B)V
+#preRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postRollBackSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postCompleteSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;)V
+#preCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;)V
+#postCompactSelection(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lcom/google/common/collect/ImmutableList;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/ScanType;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;)V
+#postCompact(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/StoreFile;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)V
+#preGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
+#postGetClosestRowBefore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[BLorg/apache/hadoop/hbase/client/Result;)V
+#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#postGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#preExists(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Z)Z
+#postExists(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Z)Z
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
+#preBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#postBatchMutate(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;)V
+#preCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#postCheckAndPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#postCheckAndDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#postAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZ)J
+#postIncrementColumnValue(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BJZJ)J
+#preIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#postIncrement(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/client/Result;
+#preScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preStoreScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;)Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;
+#postScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/RegionScanner;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#preScannerNext(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;IZ)Z
+#postScannerNext(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;Ljava/util/List;IZ)Z
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BZ)Z
+#preScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#postScannerClose(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;)V
+#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#preBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;)V
+#postBulkLoadHFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Z)Z
@0.95.1-hadoop1
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
-#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postPut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
-#postDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Z)V
@0.96.0-hadoop1
+#preGetOp(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
*#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
+#postGetOp(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
*#postGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
@0.96.2-hadoop1
+#postLogReplay(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BISZ)Z
-#postScannerFilterRow(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;[BZ)Z
@0.98.0-hadoop1
+#preSplitBeforePONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
+#preSplitAfterPONR(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postBatchMutateIndispensably(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/MiniBatchOperationInProgress;Z)V
+#preStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#postStoreFileReaderOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/Reference;Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$Reader;
+#postMutationBeforeWAL(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/coprocessor/RegionObserver$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#postStartRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
+#postCloseRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
@0.98.2-hadoop1
+#postInstantiateDeleteTracker(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker;
@0.98.4-hadoop1
+#prePrepareTimeStampForDeleteVersion(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Mutation;Lorg/apache/hadoop/hbase/Cell;[BLorg/apache/hadoop/hbase/client/Get;)V
+#preCheckAndPutAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Put;Z)Z
+#preCheckAndDeleteAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;Lorg/apache/hadoop/hbase/client/Delete;Z)Z
+#preAppendAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#preIncrementAfterRowLock(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
@0.99.0
-#preGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
-#postGet(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V[deprecated]
@0.99.2
+#preWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#postWALRestore(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@1.1.0
+#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postStartRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
+#postCloseRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region$Operation;)V
-#postSplit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postStartRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
-#postCloseRegionOperation(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;)V
@1.4.0
+#preFlushScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Lorg/apache/hadoop/hbase/regionserver/KeyValueScanner;Lorg/apache/hadoop/hbase/regionserver/InternalScanner;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCompactScannerOpen(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/ScanType;JLorg/apache/hadoop/hbase/regionserver/InternalScanner;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;J)Lorg/apache/hadoop/hbase/regionserver/InternalScanner;
+#preCommitStoreFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLjava/util/List;)V
+#postCommitStoreFile(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[BLorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@1.5.0
+#preWALAppend(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/BaseRegionObserver

+###org/apache/hadoop/hbase/coprocessor/BaseRegionServerObserver
@0.98.0-hadoop1
+#<init>()V
+#preStopRegionServer(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)V
+#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@0.98.7-hadoop1
+#preRollWALWriterRequest(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postRollWALWriterRequest(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
@0.98.9-hadoop1
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@0.98.10-hadoop1
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@0.99.0
-#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
-#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
-#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@0.99.1
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;
@1.0.0
+#preReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
+#postReplicateLogEntries(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;)V
@1.1.0
+#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/util/List;)V
+#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
+#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;)V
-#preMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;)V
-#postMergeCommit(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#preRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
-#postRollBackMerge(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/BaseRegionServerObserver

+###org/apache/hadoop/hbase/coprocessor/BaseWALObserver
@0.98.4-hadoop1
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
+#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@0.99.2
+#preWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)Z
+#postWALWrite(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/wal/WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
@1.3.0
+#preWALRoll(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#postWALRoll(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/BaseWALObserver

+###org/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener
@0.95.0
+#beforeProcess(Lorg/apache/hadoop/hbase/executor/EventHandler;)V
+#afterProcess(Lorg/apache/hadoop/hbase/executor/EventHandler;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/executor/EventHandler$EventHandlerListener

+###org/apache/hadoop/hbase/http/SslSocketConnectorSecure
@0.99.2
+#<init>()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/http/SslSocketConnectorSecure

+###org/apache/hadoop/hbase/io/DataOutputOutputStream
@0.95.0
+#constructOutputStream(Ljava/io/DataOutput;)Ljava/io/OutputStream;
+#write(I)V
+#write([BII)V
+#write([B)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/DataOutputOutputStream

+###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader$BlockIndexNotLoadedException
@0.95.0
+#<init>()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader$BlockIndexNotLoadedException

+###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader$NotSeekedException
@0.95.0
+#<init>()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader$NotSeekedException

+###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader$Scanner
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;ZZZ)V
+#isSeeked()Z
+#toString()Ljava/lang/String;
+#seekTo([B)I
+#seekBefore([B)Z
+#reseekTo([B)I
+#getReader()Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
@1.1.12
+#close()V
@1.2.0
-#close()V
@1.2.7
+#close()V
@1.3.0
-#close()V
@1.3.2
+#close()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader$Scanner

+###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader
@0.95.0
+#isFileInfoLoaded()Z
+#toString()Ljava/lang/String;
+#length()J
+#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getFirstKey()[B
+#getFirstRowKey()[B
+#getLastRowKey()[B
+#getEntries()J
+#getComparator()Lorg/apache/hadoop/io/RawComparator;
+#getCompressionAlgorithm()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#indexSize()J
+#getName()Ljava/lang/String;
+#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexReader;
+#getTrailer()Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;
+#loadFileInfo()Lorg/apache/hadoop/hbase/io/hfile/HFile$FileInfo;
+#getPath()Lorg/apache/hadoop/fs/Path;
+#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#loadFileInfo()Ljava/util/Map;
@0.96.0-hadoop1
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparator()Lorg/apache/hadoop/io/RawComparator;
@0.96.1-hadoop1
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#getEncodingOnDisk()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
@0.98.0-hadoop1
+#getMajorVersion()I
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@1.2.0
+#isPrimaryReplicaReader()Z
+#setPrimaryReplicaReader(Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/AbstractHFileReader

+###org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;)V
+#appendFileInfo([B[B)V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#toString()Ljava/lang/String;
+#compressionByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;)V
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/AbstractHFileWriter

+###org/apache/hadoop/hbase/io/hfile/HFileBlock$BlockIterator
@0.95.0
+#nextBlock()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#nextBlockWithBlockType(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@1.3.0
-###org/apache/hadoop/hbase/io/hfile/HFileBlock$BlockIterator

+###org/apache/hadoop/hbase/io/hfile/HFileBlock$BlockWritable
@0.95.0
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#writeToBlock(Ljava/io/DataOutput;)V
@1.3.0
-###org/apache/hadoop/hbase/io/hfile/HFileBlock$BlockWritable

+###org/apache/hadoop/hbase/io/hfile/HFileBlock$FSReader
@0.95.0
+#readBlockData(JJIZ)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#blockRange(JJ)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$BlockIterator;
@0.95.1-hadoop1
+#closeStreams()V
@0.98.7-hadoop1
+#getBlockDecodingContext()Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#getDefaultBlockDecodingContext()Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@1.1.12
+#unbufferStream()V
@1.2.0
-#unbufferStream()V
@1.2.7
+#unbufferStream()V
@1.3.0
-###org/apache/hadoop/hbase/io/hfile/HFileBlock$FSReader

+###org/apache/hadoop/hbase/io/hfile/HFileBlock$Writer$BufferGrabbingByteArrayOutputStream
@0.99.0
+#<init>()V
+#write([BII)V
+#getBuffer()[B
@1.4.0
-###org/apache/hadoop/hbase/io/hfile/HFileBlock$Writer$BufferGrabbingByteArrayOutputStream

+###org/apache/hadoop/hbase/io/hfile/HFileBlock$Writer
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;ZLorg/apache/hadoop/hbase/util/ChecksumType;I)V
+#startWriting(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Ljava/io/DataOutputStream;
+#writeHeaderAndData(Lorg/apache/hadoop/fs/FSDataOutputStream;)V
+#release()V
+#isWriting()Z
+#blockSizeWritten()I
+#writeBlock(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$BlockWritable;Lorg/apache/hadoop/fs/FSDataOutputStream;)V
+#getBlockForCaching()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;ZLorg/apache/hadoop/hbase/util/ChecksumType;I)V
@0.98.7-hadoop1
+#getBlockForCaching(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#getBlockForCaching()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@0.99.0
+#write(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.99.1
+#write(Lorg/apache/hadoop/hbase/Cell;)V
-#write(Lorg/apache/hadoop/hbase/KeyValue;)V
@1.3.0
-#startWriting(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Ljava/io/DataOutputStream;
-#write(Lorg/apache/hadoop/hbase/Cell;)V
-#writeHeaderAndData(Lorg/apache/hadoop/fs/FSDataOutputStream;)V
-#release()V
-#isWriting()Z
-#blockSizeWritten()I
-#writeBlock(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock$BlockWritable;Lorg/apache/hadoop/fs/FSDataOutputStream;)V
-#getBlockForCaching(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@1.4.0
+#encodedBlockSizeWritten()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileBlock$Writer

+###org/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexReader
@0.95.0
+#<init>(Lorg/apache/hadoop/io/RawComparator;ILorg/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader;)V
+#<init>(Lorg/apache/hadoop/io/RawComparator;I)V
+#isEmpty()Z
+#ensureNonEmpty()V
+#seekToDataBlock([BIILorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#loadDataBlockWithScanInfo([BIILorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/BlockWithScanInfo;
+#midkey()[B
+#getRootBlockKey(I)[B
+#getRootBlockOffset(I)J
+#getRootBlockDataSize(I)I
+#getRootBlockCount()I
+#rootBlockContainingKey([BII)I
+#readRootIndex(Ljava/io/DataInput;I)V
+#readRootIndex(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;I)Ljava/io/DataInputStream;
+#readMultiLevelIndexRoot(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;I)V
+#toString()Ljava/lang/String;
+#heapSize()J
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;ILorg/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader;)V
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;I)V
-#<init>(Lorg/apache/hadoop/io/RawComparator;ILorg/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader;)V
-#<init>(Lorg/apache/hadoop/io/RawComparator;I)V
@0.99.0
+#seekToDataBlock(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#loadDataBlockWithScanInfo(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/BlockWithScanInfo;
+#rootBlockContainingKey(Lorg/apache/hadoop/hbase/Cell;)I
-#seekToDataBlock([BIILorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#loadDataBlockWithScanInfo([BIILorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/BlockWithScanInfo;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileBlockIndex$BlockIndexReader

+###org/apache/hadoop/hbase/io/hfile/HFileReaderV2$AbstractScannerV2
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileReaderV2;ZZZ)V
+#seekTo([BII)I
+#reseekTo([BII)I
+#seekBefore([BII)Z
@0.96.1-hadoop1
+#isSeeked()Z
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
@0.98.0-hadoop1
-#isSeeked()Z
@0.98.12-hadoop1
+#getNextIndexedKey()[B
@0.99.0
+#seekTo(Lorg/apache/hadoop/hbase/Cell;)I
+#reseekTo(Lorg/apache/hadoop/hbase/Cell;)I
+#seekTo(Lorg/apache/hadoop/hbase/Cell;Z)I
+#seekBefore(Lorg/apache/hadoop/hbase/Cell;)Z
+#getEffectiveDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
-#getNextIndexedKey()[B
@1.0.1
+#getNextIndexedKey()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileReaderV2$AbstractScannerV2

+###org/apache/hadoop/hbase/io/hfile/HFileReaderV2$EncodedScannerV2
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileReaderV2;ZZZZ)V
+#seekTo()Z
+#next()Z
+#getKey()Ljava/nio/ByteBuffer;
+#getValue()Ljava/nio/ByteBuffer;
+#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
+#getKeyString()Ljava/lang/String;
+#getValueString()Ljava/lang/String;
@0.96.1-hadoop1
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileReaderV2;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#isSeeked()Z
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileReaderV2;ZZZZ)V
@0.99.0
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
-#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileReaderV2$EncodedScannerV2

+###org/apache/hadoop/hbase/io/hfile/HFileReaderV2$ScannerV2
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileReaderV2;ZZZ)V
+#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
+#getKey()Ljava/nio/ByteBuffer;
+#getValue()Ljava/nio/ByteBuffer;
+#next()Z
+#seekTo()Z
+#getKeyString()Ljava/lang/String;
+#getValueString()Ljava/lang/String;
@0.96.1-hadoop1
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
@0.99.0
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
-#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileReaderV2$ScannerV2

+###org/apache/hadoop/hbase/io/hfile/HFileReaderV2
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JZLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/fs/HFileSystem;)V
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getMetaBlock(Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
+#readBlock(JJZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#getLastKey()[B
+#midkey()[B
+#close()V
+#close(Z)V
+#getGeneralBloomFilterMetadata()Ljava/io/DataInput;
+#getDeleteBloomFilterMetadata()Ljava/io/DataInput;
+#isFileInfoLoaded()Z
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/fs/HFileSystem;)V
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JZLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/fs/HFileSystem;)V
@0.96.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;)V
+#hasMVCCInfo()Z
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/fs/HFileSystem;)V
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;Lorg/apache/hadoop/conf/Configuration;)V
+#getMajorVersion()I
+#getFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
-#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;)V
@0.98.3-hadoop1
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
-#readBlock(JJZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@0.99.0
+#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#getEffectiveEncodingInCache(Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
-#readBlock(JJZZZZLorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
@1.1.12
+#unbufferStream()V
@1.2.0
-#unbufferStream()V
@1.2.7
+#unbufferStream()V
@1.3.0
-#unbufferStream()V
@1.3.2
+#unbufferStream()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileReaderV2

+###org/apache/hadoop/hbase/io/hfile/HFileReaderV3$EncodedScannerV3
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileReaderV3;ZZZLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileReaderV3$EncodedScannerV3

+###org/apache/hadoop/hbase/io/hfile/HFileReaderV3$ScannerV3
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileReaderV3;ZZZ)V
@0.98.13-hadoop1
+#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
@0.99.0
-#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
@1.0.2
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
@1.1.0
-#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
@1.1.1
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileReaderV3$ScannerV3

+###org/apache/hadoop/hbase/io/hfile/HFileReaderV3
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/fs/HFileSystem;Lorg/apache/hadoop/conf/Configuration;)V
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;
+#getMajorVersion()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileReaderV3

+###org/apache/hadoop/hbase/io/hfile/HFileWriterV2
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;Lorg/apache/hadoop/hbase/util/ChecksumType;IZ)V
+#appendMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/Writable;)V
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
+#append([B[B)V
+#close()V
+#addInlineBlockWriter(Lorg/apache/hadoop/hbase/io/hfile/InlineBlockWriter;)V
+#addGeneralBloomFilter(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;)V
+#addDeleteFamilyBloomFilter(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;)V
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/util/ChecksumType;IZ)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;Lorg/apache/hadoop/hbase/util/ChecksumType;IZ)V
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#append([B[B[B)V
+#getFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/util/ChecksumType;IZ)V
@0.99.1
+#append(Lorg/apache/hadoop/hbase/Cell;)V
-#append(Lorg/apache/hadoop/hbase/KeyValue;)V
-#append([B[B)V
-#append([B[B[B)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileWriterV2

+###org/apache/hadoop/hbase/io/hfile/HFileWriterV3
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
+#append([B[B)V
+#append([B[B[B)V
@0.99.1
+#append(Lorg/apache/hadoop/hbase/Cell;)V
-#append(Lorg/apache/hadoop/hbase/KeyValue;)V
-#append([B[B)V
-#append([B[B[B)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileWriterV3

+###org/apache/hadoop/hbase/io/hfile/MemcachedBlockCache
@1.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;ZZ)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#shutdown()V
+#size()J
+#getFreeSize()J
+#getCurrentSize()J
+#getBlockCount()J
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
@1.2.0
-###org/apache/hadoop/hbase/io/hfile/MemcachedBlockCache

+###org/apache/hadoop/hbase/ipc/Delayable
@0.95.0
+#startDelay(Z)V
+#isDelayed()Z
+#isReturnValueDelayed()Z
+#endDelay(Ljava/lang/Object;)V
+#endDelay()V
+#endDelayThrowing(Ljava/lang/Throwable;)V
@1.2.0
-###org/apache/hadoop/hbase/ipc/Delayable

+###org/apache/hadoop/hbase/ipc/RpcServer$CallQueueTooBigException
@0.95.1-hadoop1
@1.2.0
-###org/apache/hadoop/hbase/ipc/RpcServer$CallQueueTooBigException

+###org/apache/hadoop/hbase/ipc/RpcServer$Connection
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/ipc/RpcServer;Ljava/nio/channels/SocketChannel;J)V
+#toString()Ljava/lang/String;
+#getHostAddress()Ljava/lang/String;
+#getHostInetAddress()Ljava/net/InetAddress;
+#getRemotePort()I
+#setLastContact(J)V
+#getLastContact()J
+#readAndProcess()I
@0.99.0
-#getLastContact()J
@1.1.0
+#getVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$VersionInfo;
@1.2.0
+#getVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$VersionInfo;
-#getVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$VersionInfo;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/RpcServer$Connection

+###org/apache/hadoop/hbase/ipc/RpcServer$Responder
@0.95.1-hadoop1
+#run()V
@0.99.0
+#registerForWrite(Lorg/apache/hadoop/hbase/ipc/RpcServer$Connection;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/RpcServer$Responder

+###org/apache/hadoop/hbase/mapreduce/HFileOutputFormat
@0.95.0
+#<init>()V
+#getRecordWriter(Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordWriter;
+#configureIncrementalLoad(Lorg/apache/hadoop/mapreduce/Job;Lorg/apache/hadoop/hbase/client/HTable;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/mapreduce/HFileOutputFormat

+###org/apache/hadoop/hbase/mapreduce/HLogInputFormat
@0.95.0
+#<init>()V
+#getSplits(Lorg/apache/hadoop/mapreduce/JobContext;)Ljava/util/List;
+#createRecordReader(Lorg/apache/hadoop/mapreduce/InputSplit;Lorg/apache/hadoop/mapreduce/TaskAttemptContext;)Lorg/apache/hadoop/mapreduce/RecordReader;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/mapreduce/HLogInputFormat

+###org/apache/hadoop/hbase/master/AssignCallable
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#call()Ljava/lang/Object;
@0.98.6-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/AssignCallable

+###org/apache/hadoop/hbase/master/AssignmentManager
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
+#getZKTable()Lorg/apache/hadoop/hbase/zookeeper/ZKTable;
+#getRegionStates()Lorg/apache/hadoop/hbase/master/RegionStates;
+#getRegionReopenPlan(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/RegionPlan;
+#addPlan(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/RegionPlan;)V
+#addPlans(Ljava/util/Map;)V
+#setRegionsToReopen(Ljava/util/List;)V
+#getReopenStatus([B)Lorg/apache/hadoop/hbase/util/Pair;
+#isFailoverCleanupDone()Z
+#removeClosedRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#nodeCreated(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#offlineDisabledRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#assign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#assign(Lorg/apache/hadoop/hbase/HRegionInfo;ZZ)V
+#unassign(Ljava/util/List;)V
+#unassign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#unassign(Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/ServerName;)V
+#unassign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#deleteClosingOrClosedNode(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitForAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#assignMeta()V
+#assign(Ljava/util/Map;)V
+#assign(Ljava/util/List;)V
+#updateRegionsInTransitionMetrics()V
+#waitOnRegionToClearRegionsInTransition(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#isCarryingMeta(Lorg/apache/hadoop/hbase/ServerName;)Z
+#processServerShutdown(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
+#handleSplitReport(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#handleRegionsMergeReport(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#balance(Lorg/apache/hadoop/hbase/master/RegionPlan;)V
+#stop()V
+#shutdown()V
@0.95.1-hadoop1
+#waitOnRegionToClearRegionsInTransition(Lorg/apache/hadoop/hbase/HRegionInfo;J)Z
@0.95.2-hadoop1
+#getReopenStatus(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/util/Pair;
-#getReopenStatus([B)Lorg/apache/hadoop/hbase/util/Pair;
@0.96.0-hadoop1
+#acquireRegionLock(Ljava/lang/String;)Ljava/util/concurrent/locks/Lock;
+#getNumRegionsOpened()I
-#handleSplitReport(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#handleRegionsMergeReport(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.96.1-hadoop1
+#deleteClosingOrClosedNode(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
-#unassign(Ljava/util/List;)V
-#deleteClosingOrClosedNode(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.96.2-hadoop1
+#getBalancer()Lorg/apache/hadoop/hbase/master/LoadBalancer;
@0.98.3-hadoop1
+#registerListener(Lorg/apache/hadoop/hbase/master/AssignmentListener;)V
+#unregisterListener(Lorg/apache/hadoop/hbase/master/AssignmentListener;)Z
@0.98.24-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
+#replicaRegionsNotRecordedInMeta(Ljava/util/Set;Lorg/apache/hadoop/hbase/master/MasterServices;)Ljava/util/List;
+#getSnapShotOfAssignment(Ljava/util/Collection;)Ljava/util/Map;
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
-#getZKTable()Lorg/apache/hadoop/hbase/zookeeper/ZKTable;
@1.1.0
+#assignMeta(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#isCarryingMetaReplica(Lorg/apache/hadoop/hbase/ServerName;I)Z
+#isCarryingMetaReplica(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#getReplicasToClose()Ljava/util/Set;
-#assignMeta()V
@1.1.3
+#isCarryingMeta(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/AssignmentManager$ServerHostRegion;
+#isCarryingMetaReplica(Lorg/apache/hadoop/hbase/ServerName;I)Lorg/apache/hadoop/hbase/master/AssignmentManager$ServerHostRegion;
+#isCarryingMetaReplica(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/AssignmentManager$ServerHostRegion;
-#isCarryingMeta(Lorg/apache/hadoop/hbase/ServerName;)Z
-#isCarryingMetaReplica(Lorg/apache/hadoop/hbase/ServerName;I)Z
-#isCarryingMetaReplica(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.1.9
+#assign(Lorg/apache/hadoop/hbase/master/RegionState;ZZ)V
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
+#cleanOutCrashedServerReferences(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
-#assign(Lorg/apache/hadoop/hbase/master/RegionState;ZZ)V
-#processServerShutdown(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
@1.2.5
+#assign(Lorg/apache/hadoop/hbase/master/RegionState;ZZ)V
@1.2.7
+#setTestSkipSplitHandling(Z)V
+#setTestSkipMergeHandling(Z)V
@1.3.0
-#assign(Lorg/apache/hadoop/hbase/master/RegionState;ZZ)V
-#setTestSkipSplitHandling(Z)V
-#setTestSkipMergeHandling(Z)V
@1.3.1
+#assign(Lorg/apache/hadoop/hbase/master/RegionState;ZZ)V
@1.3.2
+#setTestSkipSplitHandling(Z)V
+#setTestSkipMergeHandling(Z)V
@1.4.0
+#getExcludedServersForSystemTable()Ljava/util/List;
+#checkIfShouldMoveSystemRegionAsync()V
+#invokeAssign(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#invokeAssign(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#getFailedOpenTracker()Ljava/util/Map;
-#setTestSkipSplitHandling(Z)V
-#setTestSkipMergeHandling(Z)V
@1.4.3
+#setTestSkipSplitHandling(Z)V
+#setTestSkipMergeHandling(Z)V
@1.6.0
+#getRegionInfo([B)Lorg/apache/hadoop/hbase/HRegionInfo;
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;Lorg/apache/hadoop/hbase/master/TableStateManager;)V
+#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
-#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
@1.7.1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
+#getTableStateManager()Lorg/apache/hadoop/hbase/TableStateManager;
+#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;Lorg/apache/hadoop/hbase/master/LoadBalancer;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/master/MetricsMaster;Lorg/apache/hadoop/hbase/master/TableLockManager;Lorg/apache/hadoop/hbase/master/TableStateManager;)V
-#getTableStateManager()Lorg/apache/hadoop/hbase/master/TableStateManager;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/AssignmentManager

+###org/apache/hadoop/hbase/master/BulkAssigner
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;)V
+#bulkAssign()Z
+#bulkAssign(Z)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/BulkAssigner

+###org/apache/hadoop/hbase/master/BulkReOpen
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/util/Map;Lorg/apache/hadoop/hbase/master/AssignmentManager;)V
+#bulkReOpen()Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/BulkReOpen

+###org/apache/hadoop/hbase/master/GeneralBulkAssigner
@0.95.0
@0.96.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/util/Map;Lorg/apache/hadoop/hbase/master/AssignmentManager;Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/GeneralBulkAssigner

+###org/apache/hadoop/hbase/master/OfflineCallback
@0.95.0
+#processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/OfflineCallback

+###org/apache/hadoop/hbase/master/RegionStateStore
@0.98.6-hadoop1
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RegionStateStore

+###org/apache/hadoop/hbase/master/RegionStates
@0.95.0
+#getRegionAssignments()Ljava/util/Map;
+#getRegionServerOfRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/ServerName;
+#getRegionsInTransition()Ljava/util/Map;
+#isRegionInTransition(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isRegionInTransition(Ljava/lang/String;)Z
+#isRegionsInTransition()Z
+#isRegionAssigned(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isRegionFailedToOpen(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isRegionFailedToClose(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#waitForUpdate(J)V
+#getRegionTransitionState(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
+#getRegionTransitionState(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/RegionState;
+#createRegionStates(Ljava/util/List;)V
+#createRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/master/RegionState;
+#updateRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)Lorg/apache/hadoop/hbase/master/RegionState;
+#updateRegionState(Lorg/apache/hadoop/hbase/RegionTransition;Lorg/apache/hadoop/hbase/master/RegionState$State;)Lorg/apache/hadoop/hbase/master/RegionState;
+#updateRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
+#regionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#serverOffline(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
+#getRegionsOfTable([B)Ljava/util/List;
+#waitOnRegionToClearRegionsInTransition(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#waitForAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.95.2-hadoop1
+#isRegionInState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)V
+#serverOffline(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
+#getRegionsOfTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#isRegionFailedToOpen(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#isRegionFailedToClose(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#serverOffline(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/List;
-#getRegionsOfTable([B)Ljava/util/List;
@0.96.0-hadoop1
+#isRegionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isRegionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
+#isRegionInState(Lorg/apache/hadoop/hbase/HRegionInfo;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#isRegionInState(Ljava/lang/String;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#logSplit(Lorg/apache/hadoop/hbase/ServerName;)V
+#logSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#isRegionAssigned(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
-#isRegionInState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
-#waitForAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.96.2-hadoop1
+#tableDeleted(Lorg/apache/hadoop/hbase/TableName;)V
@0.98.0-hadoop1
+#clearLastAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.98.6-hadoop1
+#createRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
+#regionOnline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
@0.98.9-hadoop1
+#transitionOpenFromPendingOpenOrOpeningOnServer(Lorg/apache/hadoop/hbase/RegionTransition;Lorg/apache/hadoop/hbase/master/RegionState;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
@0.98.11-hadoop1
+#getRegionByStateOfTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
@0.99.0
+#createRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
+#getServerRegions(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Set;
+#deleteRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#createRegionState(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
-#transitionOpenFromPendingOpenOrOpeningOnServer(Lorg/apache/hadoop/hbase/RegionTransition;Lorg/apache/hadoop/hbase/master/RegionState;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
-#getRegionByStateOfTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
@0.99.2
+#transitionOpenFromPendingOpenOrOpeningOnServer(Lorg/apache/hadoop/hbase/RegionTransition;Lorg/apache/hadoop/hbase/master/RegionState;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
@1.1.0
+#getRegionByStateOfTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
@1.1.8
+#setRegionStateTOCLOSED(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
@1.1.9
+#setRegionStateTOCLOSED([BLorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
@1.2.0
-#setRegionStateTOCLOSED([BLorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
-#setRegionStateTOCLOSED(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
@1.2.5
+#setRegionStateTOCLOSED([BLorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
+#setRegionStateTOCLOSED(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
@1.2.7
+#isRegionInRegionStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.3.0
+#isMetaRegionInTransition()Z
-#setRegionStateTOCLOSED([BLorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
-#isRegionInRegionStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.3.1
+#setRegionStateTOCLOSED([BLorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/RegionState;
@1.3.2
+#isRegionInRegionStates(Lorg/apache/hadoop/hbase/HRegionInfo;)Z
@1.4.0
+#getRegionsInTransition()Ljava/util/Set;
+#getRegionsInTransitionOrderedByTimestamp()Ljava/util/SortedSet;
+#getRegionsInTransitionCount()I
-#getRegionsInTransition()Ljava/util/Map;
@1.5.0
+#getAllRegions()Ljava/util/Set;
@1.7.1
+#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;Z)V
-#regionOffline(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RegionStates

+###org/apache/hadoop/hbase/master/TableLockManager$NullTableLockManager
@0.95.0
+#<init>()V
+#writeLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#readLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#reapAllTableWriteLocks()V
+#tableDeleted([B)V
@0.95.1-hadoop1
+#reapAllExpiredLocks()V
+#reapWriteLocks()V
+#visitAllLocks(Lorg/apache/hadoop/hbase/InterProcessLock$MetadataHandler;)V
-#reapAllTableWriteLocks()V
@0.95.2-hadoop1
+#writeLock(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#readLock(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#tableDeleted(Lorg/apache/hadoop/hbase/TableName;)V
-#writeLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
-#readLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
-#tableDeleted([B)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/TableLockManager$NullTableLockManager

+###org/apache/hadoop/hbase/master/TableLockManager$TableLock
@0.95.0
+#acquire()V
+#release()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/TableLockManager$TableLock

+###org/apache/hadoop/hbase/master/TableLockManager
@0.95.0
+#<init>()V
+#writeLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#readLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#reapAllTableWriteLocks()V
+#tableDeleted([B)V
+#createTableLockManager(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/TableLockManager;
@0.95.1-hadoop1
+#visitAllLocks(Lorg/apache/hadoop/hbase/InterProcessLock$MetadataHandler;)V
+#reapAllExpiredLocks()V
+#reapWriteLocks()V
+#fromBytes([B)Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$TableLock;
-#reapAllTableWriteLocks()V
@0.95.2-hadoop1
+#writeLock(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#readLock(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
+#tableDeleted(Lorg/apache/hadoop/hbase/TableName;)V
-#writeLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
-#readLock([BLjava/lang/String;)Lorg/apache/hadoop/hbase/master/TableLockManager$TableLock;
-#tableDeleted([B)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/TableLockManager

+###org/apache/hadoop/hbase/master/UnAssignCallable
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#call()Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/UnAssignCallable

+###org/apache/hadoop/hbase/master/balancer/FavoredNodeAssignmentHelper
@0.95.1-hadoop1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/conf/Configuration;)V
+#fullScan(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/Set;ZLorg/apache/hadoop/hbase/master/balancer/FavoredNodeLoadBalancer;)Ljava/util/Map;
+#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
+#getFavoredNodesList([B)[Lorg/apache/hadoop/hbase/ServerName;
@0.95.2-hadoop1
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/master/RackManager;)V
@0.96.0-hadoop1
+#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/conf/Configuration;)V
+#getFavoredNodes(Ljava/util/List;)[B
+#placeSecondaryAndTertiaryWithRestrictions(Ljava/util/Map;)Ljava/util/Map;
+#initialize()V
+#getFavoredNodesAsString(Ljava/util/List;)Ljava/lang/String;
-#fullScan(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/Set;ZLorg/apache/hadoop/hbase/master/balancer/FavoredNodeLoadBalancer;)Ljava/util/Map;
@0.99.0
+#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/HConnection;)V
-#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)V
@0.99.1
+#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Connection;)V
-#updateMetaWithFavoredNodesInfo(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/HConnection;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/FavoredNodeAssignmentHelper

+###org/apache/hadoop/hbase/master/balancer/FavoredNodeLoadBalancer
@0.95.1-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
+#roundRobinAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#randomAssignment(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
@1.3.0
+#balanceCluster(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/FavoredNodeLoadBalancer

+###org/apache/hadoop/hbase/master/balancer/FavoredNodesPlan$Position
@0.96.0-hadoop1
+#values()[Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan$Position;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan$Position;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/FavoredNodesPlan$Position

+###org/apache/hadoop/hbase/master/balancer/FavoredNodesPlan
@0.96.0-hadoop1
+#<init>()V
+#updateFavoredNodesMap(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
+#getFavoredServerPosition(Ljava/util/List;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/balancer/FavoredNodesPlan$Position;
+#getAssignmentMap()Ljava/util/Map;
+#updateAssignmentPlan(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/FavoredNodesPlan

+###org/apache/hadoop/hbase/master/handler/ClosedRegionHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#getPriority()I
+#getHRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#toString()Ljava/lang/String;
+#process()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/ClosedRegionHandler

+###org/apache/hadoop/hbase/master/handler/CreateTableHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterFileSystem;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/conf/Configuration;[Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#prepare()Lorg/apache/hadoop/hbase/master/handler/CreateTableHandler;
+#toString()Ljava/lang/String;
+#process()V
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/CreateTableHandler

+###org/apache/hadoop/hbase/master/handler/DeleteTableHandler
@0.95.0
+#<init>([BLorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#toString()Ljava/lang/String;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>([BLorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.2.0
-###org/apache/hadoop/hbase/master/handler/DeleteTableHandler

+###org/apache/hadoop/hbase/master/handler/DisableTableHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;[BLorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
+#prepare()Lorg/apache/hadoop/hbase/master/handler/DisableTableHandler;
+#toString()Ljava/lang/String;
+#process()V
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;[BLorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/DisableTableHandler

+###org/apache/hadoop/hbase/master/handler/DispatchMergingRegionHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/CatalogJanitor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
+#process()V
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/CatalogJanitor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;ZLorg/apache/hadoop/hbase/security/User;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/CatalogJanitor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/DispatchMergingRegionHandler

+###org/apache/hadoop/hbase/master/handler/EnableTableHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;[BLorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
+#prepare()Lorg/apache/hadoop/hbase/master/handler/EnableTableHandler;
+#toString()Ljava/lang/String;
+#process()V
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;[BLorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/master/TableLockManager;Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/EnableTableHandler

+###org/apache/hadoop/hbase/master/handler/LogReplayHandler
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/DeadServer;Lorg/apache/hadoop/hbase/ServerName;)V
+#toString()Ljava/lang/String;
+#process()V
@1.2.0
-###org/apache/hadoop/hbase/master/handler/LogReplayHandler

+###org/apache/hadoop/hbase/master/handler/MetaServerShutdownHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/DeadServer;Lorg/apache/hadoop/hbase/ServerName;)V
+#process()V
+#toString()Ljava/lang/String;
@0.99.0
-#toString()Ljava/lang/String;
@1.2.0
-###org/apache/hadoop/hbase/master/handler/MetaServerShutdownHandler

+###org/apache/hadoop/hbase/master/handler/ModifyTableHandler
@0.95.0
+#<init>([BLorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#toString()Ljava/lang/String;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>([BLorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.2.0
-###org/apache/hadoop/hbase/master/handler/ModifyTableHandler

+###org/apache/hadoop/hbase/master/handler/OpenedRegionHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;I)V
+#getPriority()I
+#getHRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#toString()Ljava/lang/String;
+#process()V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination;Lorg/apache/hadoop/hbase/coordination/OpenRegionCoordination$OpenRegionDetails;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;I)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/OpenedRegionHandler

+###org/apache/hadoop/hbase/master/handler/ServerShutdownHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/DeadServer;Lorg/apache/hadoop/hbase/ServerName;Z)V
+#getInformativeName()Ljava/lang/String;
+#toString()Ljava/lang/String;
+#process()V
+#processDeadRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)Z
@0.98.6-hadoop1
+#processDeadRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)Z
-#processDeadRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/client/Result;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)Z
@0.99.0
+#processDeadRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/AssignmentManager;)Z
-#processDeadRegion(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/catalog/CatalogTracker;)Z
@1.2.0
-###org/apache/hadoop/hbase/master/handler/ServerShutdownHandler

+###org/apache/hadoop/hbase/master/handler/TableAddFamilyHandler
@0.95.0
+#<init>([BLorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#toString()Ljava/lang/String;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>([BLorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.2.0
-###org/apache/hadoop/hbase/master/handler/TableAddFamilyHandler

+###org/apache/hadoop/hbase/master/handler/TableDeleteFamilyHandler
@0.95.0
+#<init>([B[BLorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#toString()Ljava/lang/String;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>([B[BLorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.2.0
-###org/apache/hadoop/hbase/master/handler/TableDeleteFamilyHandler

+###org/apache/hadoop/hbase/master/handler/TableEventHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/executor/EventType;[BLorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#prepare()Lorg/apache/hadoop/hbase/master/handler/TableEventHandler;
+#process()V
+#reOpenAllRegions(Ljava/util/List;)Z
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>(Lorg/apache/hadoop/hbase/executor/EventType;[BLorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.7.0
+#getTableDescriptor()Lorg/apache/hadoop/hbase/TableDescriptor;
-#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
@1.7.1
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
-#getTableDescriptor()Lorg/apache/hadoop/hbase/TableDescriptor;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/TableEventHandler

+###org/apache/hadoop/hbase/master/handler/TableModifyFamilyHandler
@0.95.0
+#<init>([BLorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#toString()Ljava/lang/String;
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#<init>([BLorg/apache/hadoop/hbase/HColumnDescriptor;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;)V
@1.2.0
-###org/apache/hadoop/hbase/master/handler/TableModifyFamilyHandler

+###org/apache/hadoop/hbase/master/handler/TotesHRegionInfo
@0.95.0
+#getHRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/handler/TotesHRegionInfo

+###org/apache/hadoop/hbase/master/handler/TruncateTableHandler
@0.98.8-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/MasterServices;Z)V
@1.2.0
-###org/apache/hadoop/hbase/master/handler/TruncateTableHandler

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureQueue
@1.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/master/TableLockManager;)V
+#addFront(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#addBack(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#yield(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#poll()Ljava/lang/Long;
+#signalAll()V
+#clear()V
+#size()I
+#toString()Ljava/lang/String;
+#completionCleanup(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#tryAcquireTableRead(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Z
+#releaseTableRead(Lorg/apache/hadoop/hbase/TableName;)V
+#tryAcquireTableWrite(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Z
+#releaseTableWrite(Lorg/apache/hadoop/hbase/TableName;)V
@1.2.0
-###org/apache/hadoop/hbase/master/procedure/MasterProcedureQueue

+###org/apache/hadoop/hbase/master/snapshot/CloneSnapshotHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#prepare()Lorg/apache/hadoop/hbase/master/snapshot/CloneSnapshotHandler;
+#isFinished()Z
+#getSnapshot()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#cancel(Ljava/lang/String;)V
+#getExceptionIfFailed()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;
+#prepare()Lorg/apache/hadoop/hbase/master/handler/CreateTableHandler;
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#getCompletionTimestamp()J
+#rethrowExceptionIfFailed()V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/snapshot/CloneSnapshotHandler

+###org/apache/hadoop/hbase/master/snapshot/RestoreSnapshotHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#isFinished()Z
+#getSnapshot()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;
+#cancel(Ljava/lang/String;)V
+#getExceptionIfFailed()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
+#prepare()Lorg/apache/hadoop/hbase/master/snapshot/RestoreSnapshotHandler;
+#getCompletionTimestamp()J
+#rethrowExceptionIfFailed()V
+#prepare()Lorg/apache/hadoop/hbase/master/handler/TableEventHandler;
+#prepare()Lorg/apache/hadoop/hbase/executor/EventHandler;
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)V
-#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/snapshot/RestoreSnapshotHandler

+###org/apache/hadoop/hbase/master/snapshot/SnapshotLogCleaner
@0.95.0
+#<init>()V
+#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
@0.95.2-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#isFileDeletable(Lorg/apache/hadoop/fs/Path;)Z
@0.98.5-hadoop1
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@0.98.6-hadoop1
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@0.98.10-hadoop1
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@0.99.0
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@1.0.0
+#getDeletableFiles(Ljava/lang/Iterable;)Ljava/lang/Iterable;
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@1.2.10
+#init(Ljava/util/Map;)V
@1.3.0
-###org/apache/hadoop/hbase/master/snapshot/SnapshotLogCleaner

+###org/apache/hadoop/hbase/migration/NamespaceUpgrade
@0.95.2-hadoop1
+#<init>()V
+#init()V
+#upgradeTableDirs()V
+#deleteRoot()V
+#migrateDotDirs()V
+#makeNamespaceDirs()V
+#migrateTables()V
+#migrateSnapshots()V
+#migrateMeta()V
+#migrateACL()V
+#verifyNSUpgrade(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#run([Ljava/lang/String;)I
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/migration/NamespaceUpgrade

+###org/apache/hadoop/hbase/migration/UpgradeTo96
@0.96.0-hadoop1
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/migration/UpgradeTo96

+###org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Ljava/lang/String;)V
+#sendGlobalBarrierAcquire(Lorg/apache/hadoop/hbase/procedure/Procedure;[BLjava/util/List;)V
+#sendGlobalBarrierReached(Lorg/apache/hadoop/hbase/procedure/Procedure;Ljava/util/List;)V
+#resetMembers(Lorg/apache/hadoop/hbase/procedure/Procedure;)V
+#start(Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinator;)Z
+#sendAbortToMembers(Lorg/apache/hadoop/hbase/procedure/Procedure;Lorg/apache/hadoop/hbase/errorhandling/ForeignException;)V
+#close()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs

+###org/apache/hadoop/hbase/quotas/OperationQuota$AvgOperationSize
@1.1.0
+#<init>()V
+#addOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;J)V
+#getAvgOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
+#getOperationSize(Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)J
+#addGetResult(Lorg/apache/hadoop/hbase/client/Result;)V
+#addScanResult(Ljava/util/List;)V
+#addMutation(Lorg/apache/hadoop/hbase/client/Mutation;)V
@1.1.8
-###org/apache/hadoop/hbase/quotas/OperationQuota$AvgOperationSize

+###org/apache/hadoop/hbase/quotas/RegionServerQuotaManager
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start(Lorg/apache/hadoop/hbase/ipc/RpcScheduler;)V
+#stop()V
+#isQuotaEnabled()Z
+#getQuota(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/OperationQuota;
+#checkQuota(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/quotas/OperationQuota$OperationType;)Lorg/apache/hadoop/hbase/quotas/OperationQuota;
+#checkQuota(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/util/List;)Lorg/apache/hadoop/hbase/quotas/OperationQuota;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/quotas/RegionServerQuotaManager

+###org/apache/hadoop/hbase/quotas/RegionStateListener
@1.1.0
+#onRegionSplit(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#onRegionSplitReverted(Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#onRegionMerged(Lorg/apache/hadoop/hbase/HRegionInfo;)V
@1.2.0
-###org/apache/hadoop/hbase/quotas/RegionStateListener

+###org/apache/hadoop/hbase/regionserver/CellSkipListSet
@0.99.1
+#ceiling(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#descendingIterator()Ljava/util/Iterator;
+#descendingSet()Ljava/util/NavigableSet;
+#floor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#headSet(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#headSet(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableSet;
+#higher(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#iterator()Ljava/util/Iterator;
+#lower(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#pollFirst()Lorg/apache/hadoop/hbase/Cell;
+#pollLast()Lorg/apache/hadoop/hbase/Cell;
+#subSet(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#subSet(Lorg/apache/hadoop/hbase/Cell;ZLorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableSet;
+#tailSet(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/SortedSet;
+#tailSet(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/util/NavigableSet;
+#comparator()Ljava/util/Comparator;
+#first()Lorg/apache/hadoop/hbase/Cell;
+#last()Lorg/apache/hadoop/hbase/Cell;
+#add(Lorg/apache/hadoop/hbase/Cell;)Z
+#addAll(Ljava/util/Collection;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#get(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#size()I
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
+#pollLast()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#higher(Ljava/lang/Object;)Ljava/lang/Object;
+#ceiling(Ljava/lang/Object;)Ljava/lang/Object;
+#floor(Ljava/lang/Object;)Ljava/lang/Object;
+#lower(Ljava/lang/Object;)Ljava/lang/Object;
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/CellSkipListSet

+###org/apache/hadoop/hbase/regionserver/ColumnCount
@0.95.0
+#<init>([B)V
+#<init>([BI)V
+#<init>([BIII)V
+#getBuffer()[B
+#getOffset()I
+#getLength()I
+#decrement()I
+#increment()I
+#setCount(I)V
@1.4.0
-###org/apache/hadoop/hbase/regionserver/ColumnCount

+###org/apache/hadoop/hbase/regionserver/ColumnTracker
@0.95.0
+#checkColumn([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#reset()V
+#done()Z
+#getColumnHint()Lorg/apache/hadoop/hbase/regionserver/ColumnCount;
+#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#isDone(J)Z
@0.96.0-hadoop1
+#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
-#checkColumn([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
@1.4.0
-###org/apache/hadoop/hbase/regionserver/ColumnTracker

+###org/apache/hadoop/hbase/regionserver/CompactSplitThread
@0.95.0
+#toString()Ljava/lang/String;
+#dumpQueue()Ljava/lang/String;
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Z)V
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;)Z
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;[B)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#getCompactionQueueSize()I
+#getRegionSplitLimit()I
@0.95.2-hadoop1
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;)V
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)V
@0.96.0-hadoop1
+#getLargeCompactionQueueSize()I
+#getSmallCompactionQueueSize()I
@0.98.10-hadoop1
+#getSplitQueueSize()I
@0.98.11-hadoop1
+#getCompactionThroughputController()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;
@0.98.14-hadoop1
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Z)V
@0.98.15-hadoop1
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;[BLorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@0.98.16-hadoop1
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJLorg/apache/hadoop/hbase/security/User;)V
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
@0.99.0
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Z)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJLorg/apache/hadoop/hbase/security/User;)V
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;[BLorg/apache/hadoop/hbase/security/User;)V
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#getSplitQueueSize()I
-#getCompactionThroughputController()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;
@0.99.2
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#getLargeCompactionThreadNum()I
+#registerChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#deregisterChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
@1.0.0
+#getSplitQueueSize()I
@1.0.2
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Z)V
@1.0.3
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJLorg/apache/hadoop/hbase/security/User;)V
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;[BLorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
@1.1.0
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;)Z
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[B)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;)V
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)V
+#getCompactionThroughputController()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJLorg/apache/hadoop/hbase/security/User;)V
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;)Z
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;[B)V
-#requestSplit(Lorg/apache/hadoop/hbase/regionserver/HRegion;[BLorg/apache/hadoop/hbase/security/User;)V
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;)V
-#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)V
@1.1.1
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;ZJ)V
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
@1.1.3
+#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;ZJLorg/apache/hadoop/hbase/security/User;)V
+#requestSplit(Lorg/apache/hadoop/hbase/regionserver/Region;[BLorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;Lorg/apache/hadoop/hbase/security/User;)Ljava/util/List;
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#requestRegionsMerge(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;ZJ)V
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Ljava/lang/String;ILjava/util/List;)Ljava/util/List;
-#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
-#getLargeCompactionThreadNum()I
@1.3.0
+#getCompactionThroughputController()Lorg/apache/hadoop/hbase/regionserver/throttle/ThroughputController;
-#getCompactionThroughputController()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;
@1.5.0
+#switchCompaction(Z)V
+#isCompactionsEnabled()Z
+#setCompactionsEnabled(Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/CompactSplitThread

+###org/apache/hadoop/hbase/regionserver/DefaultMemStore$MemStoreScanner
@0.99.0
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#peek()Lorg/apache/hadoop/hbase/KeyValue;
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#close()V
+#getSequenceID()J
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToLastRow()Z
+#next()Lorg/apache/hadoop/hbase/Cell;
+#peek()Lorg/apache/hadoop/hbase/Cell;
@0.99.1
-#peek()Lorg/apache/hadoop/hbase/KeyValue;
-#next()Lorg/apache/hadoop/hbase/KeyValue;
@1.2.0
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
-#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
@1.4.0
+#getScannerOrder()J
-#getSequenceID()J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/DefaultMemStore$MemStoreScanner

+###org/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteCompare
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteCompare;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteCompare;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteCompare

+###org/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult

+###org/apache/hadoop/hbase/regionserver/DeleteTracker
@0.95.0
+#add([BIIJB)V
+#isDeleted([BIIJ)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
+#isEmpty()Z
+#update()V
+#reset()V
@0.98.2-hadoop1
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
-#add([BIIJB)V
-#isDeleted([BIIJ)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/DeleteTracker

+###org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker
@0.95.0
+#<init>(Ljava/util/NavigableSet;IIJ)V
+#done()Z
+#getColumnHint()Lorg/apache/hadoop/hbase/regionserver/ColumnCount;
+#checkColumn([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#reset()V
+#doneWithColumn([BII)V
+#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#isDone(J)Z
@0.96.0-hadoop1
+#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
-#checkColumn([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
@0.96.2-hadoop1
+#<init>(Ljava/util/NavigableSet;IIJI)V
-#<init>(Ljava/util/NavigableSet;IIJ)V
@0.98.0-hadoop1
+#<init>(Ljava/util/NavigableSet;IIJ)V
-#<init>(Ljava/util/NavigableSet;IIJI)V
@0.98.1-hadoop1
+#<init>(Ljava/util/NavigableSet;IIJI)V
-#<init>(Ljava/util/NavigableSet;IIJ)V
@0.98.12-hadoop1
+#<init>(Ljava/util/NavigableSet;IIJ)V
-#<init>(Ljava/util/NavigableSet;IIJI)V
@0.99.0
+#<init>(Ljava/util/NavigableSet;IIJI)V
-#<init>(Ljava/util/NavigableSet;IIJ)V
@1.0.1
+#<init>(Ljava/util/NavigableSet;IIJ)V
-#<init>(Ljava/util/NavigableSet;IIJI)V
@1.4.0
-###org/apache/hadoop/hbase/regionserver/ExplicitColumnTracker

+###org/apache/hadoop/hbase/regionserver/HeapMemStoreLAB
@0.99.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#allocateBytes(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#close()V
+#incScannerCount()V
+#decScannerCount()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/HeapMemStoreLAB

+###org/apache/hadoop/hbase/regionserver/LruHashMap$Entry
@0.95.0
+#getKey()Lorg/apache/hadoop/hbase/io/HeapSize;
+#getValue()Lorg/apache/hadoop/hbase/io/HeapSize;
+#setValue(Lorg/apache/hadoop/hbase/io/HeapSize;)Lorg/apache/hadoop/hbase/io/HeapSize;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#heapSize()J
+#setValue(Ljava/lang/Object;)Ljava/lang/Object;
+#getValue()Ljava/lang/Object;
+#getKey()Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/LruHashMap$Entry

+###org/apache/hadoop/hbase/regionserver/LruHashMap
@0.95.0
+#<init>(IFJ)V
+#<init>(IF)V
+#<init>(I)V
+#<init>(J)V
+#<init>()V
+#getMemFree()J
+#getMemMax()J
+#getMemUsed()J
+#getHitCount()J
+#getMissCount()J
+#getHitRatio()D
+#freeMemory(J)J
+#heapSize()J
+#get(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/io/HeapSize;
+#put(Lorg/apache/hadoop/hbase/io/HeapSize;Lorg/apache/hadoop/hbase/io/HeapSize;)Lorg/apache/hadoop/hbase/io/HeapSize;
+#remove(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/io/HeapSize;
+#size()I
+#isEmpty()Z
+#clear()V
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entryLruList()Ljava/util/List;
+#entryTableSet()Ljava/util/Set;
+#getHeadPtr()Lorg/apache/hadoop/hbase/regionserver/LruHashMap$Entry;
+#getTailPtr()Lorg/apache/hadoop/hbase/regionserver/LruHashMap$Entry;
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#keySet()Ljava/util/Set;
+#putAll(Ljava/util/Map;)V
+#values()Ljava/util/Collection;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/LruHashMap

+###org/apache/hadoop/hbase/regionserver/MemStoreChunkPool
@0.95.0
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/MemStoreChunkPool

+###org/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry
@0.95.0
@1.2.0
-###org/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry

+###org/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl
@0.95.0
+#<init>()V
+#initialize(J)V
+#getThreadReadPoint()J
+#setThreadReadPoint(J)V
+#resetThreadReadPoint(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl;)J
+#resetThreadReadPoint()V
+#beginMemstoreInsert()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;
+#completeMemstoreInsert(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;)V
+#waitForRead(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;)V
+#memstoreReadPoint()J
@0.98.0-hadoop1
-#getThreadReadPoint()J
-#setThreadReadPoint(J)V
-#resetThreadReadPoint(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl;)J
-#resetThreadReadPoint()V
@0.99.0
+#getPreAssignedWriteNumber(Ljava/util/concurrent/atomic/AtomicLong;)J
+#beginMemstoreInsertWithSeqNum(J)Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;
+#completeMemstoreInsertWithSeqNum(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;Lorg/apache/hadoop/hbase/regionserver/SequenceId;)V
+#waitForPreviousTransactionsComplete()V
+#waitForPreviousTransactionsComplete(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;)V
-#beginMemstoreInsert()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;
-#waitForRead(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;)V
@1.1.3
+#cancelMemstoreInsert(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl$WriteEntry;)V
@1.2.0
-###org/apache/hadoop/hbase/regionserver/MultiVersionConsistencyControl

+###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction$JournalEntry
@1.1.0
+#getPhase()Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;
+#getTimeStamp()J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction$JournalEntry

+###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase

+###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction$TransactionListener
@1.1.0
+#transition(Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction;Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;)V
+#rollback(Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction;Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction$TransactionListener

+###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Z)V
+#prepare(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getMergedRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z
@0.96.0-hadoop1
+#createNodeMerging(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#transitionMergingNode(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;ILorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/executor/EventType;)I
@0.98.0-hadoop1
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#prepareMutationsForMerge(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
+#addLocation(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/ServerName;J)Lorg/apache/hadoop/hbase/client/Put;
+#stepsBeforePONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@0.98.14-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
@0.98.16-hadoop1
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V[deprecated]
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@0.99.0
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
-#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V[deprecated]
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
-#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
-#createNodeMerging(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#transitionMergingNode(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;ILorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/executor/EventType;)I
@1.0.2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
@1.0.3
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V[deprecated]
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@1.1.0
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/Region;
+#registerTransactionListener(Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$TransactionListener;)Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction;
+#getMergedRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getJournal()Ljava/util/List;
+#getServer()Lorg/apache/hadoop/hbase/Server;
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;Z)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HRegion;ZJ)V
-#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V[deprecated]
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
-#prepareMutationsForMerge(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
-#addLocation(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/ServerName;J)Lorg/apache/hadoop/hbase/client/Put;
-#stepsBeforePONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
-#getMergedRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
-#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
@1.1.3
*#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/Region;[deprecated]
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/Region;
*#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z[deprecated]
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionMergeTransaction

+###org/apache/hadoop/hbase/regionserver/RegionMergeTransactionFactory
@1.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#create(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Z)Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransactionImpl;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionMergeTransactionFactory

+###org/apache/hadoop/hbase/regionserver/RegionMergeTransactionImpl$JournalEntryImpl
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;J)V
+#toString()Ljava/lang/String;
+#getPhase()Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$RegionMergeTransactionPhase;
+#getTimeStamp()J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionMergeTransactionImpl$JournalEntryImpl

+###org/apache/hadoop/hbase/regionserver/RegionMergeTransactionImpl
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;Z)V
+#prepare(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#prepareMutationsForMerge(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;I)V
+#addLocation(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/ServerName;J)Lorg/apache/hadoop/hbase/client/Put;
+#stepsBeforePONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Z)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#getMergedRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/HRegionInfo;
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z
+#getMergedRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getJournal()Ljava/util/List;
+#registerTransactionListener(Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction$TransactionListener;)Lorg/apache/hadoop/hbase/regionserver/RegionMergeTransaction;
+#getServer()Lorg/apache/hadoop/hbase/Server;
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/regionserver/Region;
@1.1.1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/regionserver/Region;ZJ)V
@1.1.3
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)V[deprecated]
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/security/User;)V
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/regionserver/Region;
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/regionserver/HRegion;)Lorg/apache/hadoop/hbase/regionserver/HRegion;
@1.3.6
+#toString()Ljava/lang/String;
@1.4.0
-#toString()Ljava/lang/String;
@1.4.11
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionMergeTransactionImpl

+###org/apache/hadoop/hbase/regionserver/ScanDeleteTracker
@0.95.0
+#<init>()V
+#add([BIIJB)V
+#isDeleted([BIIJ)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
+#isEmpty()Z
+#reset()V
+#update()V
@0.98.2-hadoop1
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
-#add([BIIJB)V
-#isDeleted([BIIJ)Lorg/apache/hadoop/hbase/regionserver/DeleteTracker$DeleteResult;
@1.4.0
-###org/apache/hadoop/hbase/regionserver/ScanDeleteTracker

+###org/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
@1.4.0
-###org/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode

+###org/apache/hadoop/hbase/regionserver/ScanQueryMatcher
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJ)V
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJ[B[B)V
+#hasNullColumnInQuery()Z
+#match(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#moreRowsMayExistAfter(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#setRow([BIS)V
+#reset()V
+#getStartKey()Lorg/apache/hadoop/hbase/KeyValue;
+#getNextKeyHint(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#getKeyForNextColumn(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#getKeyForNextRow(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
@0.96.0-hadoop1
+#getNextKeyHint(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#getNextKeyHint(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
@0.98.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJ)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJ[B[B)V
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
@0.98.12-hadoop1
+#compareKeyForNextRow([BLorg/apache/hadoop/hbase/Cell;)I
+#compareKeyForNextColumn([BLorg/apache/hadoop/hbase/Cell;)I
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#moreRowsMayExistAfter(Lorg/apache/hadoop/hbase/Cell;)Z
+#getStartKey()Lorg/apache/hadoop/hbase/Cell;
+#getKeyForNextColumn(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#getKeyForNextRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
-#match(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
-#moreRowsMayExistAfter(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#getStartKey()Lorg/apache/hadoop/hbase/KeyValue;
-#getKeyForNextColumn(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
-#getKeyForNextRow(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
-#compareKeyForNextRow([BLorg/apache/hadoop/hbase/Cell;)I
-#compareKeyForNextColumn([BLorg/apache/hadoop/hbase/Cell;)I
@1.0.0
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/regionserver/ScanType;JJJLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
-#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;JJJ[B[BLorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)V
@1.0.1
+#compareKeyForNextRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareKeyForNextColumn(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
@1.3.0
-#getKeyForNextRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@1.4.0
-###org/apache/hadoop/hbase/regionserver/ScanQueryMatcher

+###org/apache/hadoop/hbase/regionserver/ScanWildcardColumnTracker
@0.95.0
+#<init>(IIJ)V
+#checkColumn([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#reset()V
+#getColumnHint()Lorg/apache/hadoop/hbase/regionserver/ColumnCount;
+#done()Z
+#getNextRowOrNextColumn([BII)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#isDone(J)Z
@0.96.0-hadoop1
+#checkColumn([BIIB)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
+#checkVersions([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
-#checkColumn([BIIJBZ)Lorg/apache/hadoop/hbase/regionserver/ScanQueryMatcher$MatchCode;
@1.4.0
-###org/apache/hadoop/hbase/regionserver/ScanWildcardColumnTracker

+###org/apache/hadoop/hbase/regionserver/SplitTransaction$JournalEntry
@1.1.0
+#getPhase()Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;
+#getTimeStamp()J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/SplitTransaction$JournalEntry

+###org/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase
@1.1.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase

+###org/apache/hadoop/hbase/regionserver/SplitTransaction$TransactionListener
@1.1.0
+#transition(Lorg/apache/hadoop/hbase/regionserver/SplitTransaction;Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;)V
+#rollback(Lorg/apache/hadoop/hbase/regionserver/SplitTransaction;Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/SplitTransaction$TransactionListener

+###org/apache/hadoop/hbase/regionserver/SplitTransaction
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;[B)V
+#prepare()Z
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z
@0.96.0-hadoop1
+#createNodeSplitting(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#transitionSplittingNode(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;ILorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/executor/EventType;)I
@0.98.0-hadoop1
+#stepsBeforePONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Z)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#addLocation(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/ServerName;J)Lorg/apache/hadoop/hbase/client/Put;
@0.98.16-hadoop1
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
*#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;)Lorg/apache/hadoop/hbase/util/PairOfSameType;[deprecated]
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
@0.99.0
-#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
-#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
-#createNodeSplitting(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
-#transitionSplittingNode(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;ILorg/apache/hadoop/hbase/executor/EventType;Lorg/apache/hadoop/hbase/executor/EventType;)I
@1.0.3
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
*#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;)Lorg/apache/hadoop/hbase/util/PairOfSameType;[deprecated]
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
@1.1.0
+#registerTransactionListener(Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$TransactionListener;)Lorg/apache/hadoop/hbase/regionserver/SplitTransaction;
+#getJournal()Ljava/util/List;
+#getServer()Lorg/apache/hadoop/hbase/Server;
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
-#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegion;[B)V
-#stepsBeforePONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Z)Lorg/apache/hadoop/hbase/util/PairOfSameType;
-#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;)Lorg/apache/hadoop/hbase/util/PairOfSameType;[deprecated]
-#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
-#addLocation(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/ServerName;J)Lorg/apache/hadoop/hbase/client/Put;
-#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
@1.1.3
*#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/util/PairOfSameType;[deprecated]
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
*#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z[deprecated]
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/SplitTransaction

+###org/apache/hadoop/hbase/regionserver/SplitTransactionFactory
@1.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#create(Lorg/apache/hadoop/hbase/regionserver/Region;[B)Lorg/apache/hadoop/hbase/regionserver/SplitTransaction;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/SplitTransactionFactory

+###org/apache/hadoop/hbase/regionserver/SplitTransactionImpl$JournalEntryImpl
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;J)V
+#toString()Ljava/lang/String;
+#getPhase()Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$SplitTransactionPhase;
+#getTimeStamp()J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/SplitTransactionImpl$JournalEntryImpl

+###org/apache/hadoop/hbase/regionserver/SplitTransactionImpl
@1.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Region;[B)V
+#prepare()Z
+#stepsBeforePONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Z)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#addLocation(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/ServerName;J)Lorg/apache/hadoop/hbase/client/Put;
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)Z
+#getJournal()Ljava/util/List;
+#registerTransactionListener(Lorg/apache/hadoop/hbase/regionserver/SplitTransaction$TransactionListener;)Lorg/apache/hadoop/hbase/regionserver/SplitTransaction;
+#getServer()Lorg/apache/hadoop/hbase/Server;
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;
@1.1.3
+#execute(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
*#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;)Lorg/apache/hadoop/hbase/util/PairOfSameType;[deprecated]
+#stepsAfterPONR(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/util/PairOfSameType;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#rollback(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/security/User;)Z
@1.3.6
+#toString()Ljava/lang/String;
@1.4.0
-#toString()Ljava/lang/String;
@1.4.11
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/SplitTransactionImpl

+###org/apache/hadoop/hbase/regionserver/StoreFile$Comparators
@0.95.0
+#<init>()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/StoreFile$Comparators

+###org/apache/hadoop/hbase/regionserver/StoreFile$Reader
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)V
+#getComparator()Lorg/apache/hadoop/io/RawComparator;
+#getStoreFileScanner(ZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getStoreFileScanner(ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getScanner(ZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;[deprecated]
+#getScanner(ZZZ)Lorg/apache/hadoop/hbase/io/hfile/HFileScanner;[deprecated]
+#close(Z)V
+#passesDeleteFamilyBloomFilter([BII)Z
+#passesGeneralBloomFilter([BII[BII)Z
+#loadFileInfo()Ljava/util/Map;
+#loadBloomfilter()V
+#getFilterEntries()J
+#setGeneralBloomFilterFaulty()V
+#setDeleteFamilyBloomFilterFaulty()V
+#getLastKey()[B
+#midkey()[B
+#length()J
+#getTotalUncompressedBytes()J
+#getEntries()J
+#getDeleteFamilyCnt()J
+#getFirstKey()[B
+#indexSize()J
+#getBloomFilterType()Lorg/apache/hadoop/hbase/regionserver/BloomType;
+#getSequenceID()J
+#setSequenceID(J)V
+#getTotalBloomSize()J
+#getHFileVersion()I
+#getHFileReader()Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;
+#getMaxTimestamp()J
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
+#getHFileMinorVersion()I
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Z)V
@0.96.0-hadoop1
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparator()Lorg/apache/hadoop/io/RawComparator;
@0.96.1-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
@0.96.2-hadoop1
+#passesKeyRangeFilter(Lorg/apache/hadoop/hbase/client/Scan;)Z
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
+#getStoreFileScanner(ZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
+#getLastRowKey()[B
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/io/hfile/CacheConfig;)V
-#getStoreFileScanner(ZZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
@0.98.7-hadoop1
+#setBulkLoaded(Z)V
+#isBulkLoaded()Z
@1.2.0
+#setReplicaStoreFile(Z)V
+#isPrimaryReplicaReader()Z
@1.3.0
+#isReferencedInReads()Z
+#isCompactedAway()Z
@1.4.0
+#getStoreFileScanner(ZZZJJZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
-#getStoreFileScanner(ZZ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
-#getStoreFileScanner(ZZZJ)Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/StoreFile$Reader

+###org/apache/hadoop/hbase/regionserver/StoreFile$Writer
@0.95.0
+#appendMetadata(JZ)V
+#appendTrackedTimestampsToMetadata()V
+#setTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)V
+#trackTimestamps(Lorg/apache/hadoop/hbase/KeyValue;)V
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
+#getPath()Lorg/apache/hadoop/fs/Path;
+#close()V
+#appendFileInfo([B[B)V
@0.98.21-hadoop1
-#setTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)V
@0.99.0
+#setTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)V
@0.99.1
+#trackTimestamps(Lorg/apache/hadoop/hbase/Cell;)V
+#append(Lorg/apache/hadoop/hbase/Cell;)V
-#trackTimestamps(Lorg/apache/hadoop/hbase/KeyValue;)V
-#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@1.3.0
-#setTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)V
@1.3.5
+#appendMetadata(JZLjava/util/Collection;)V
@1.4.0
-#appendMetadata(JZLjava/util/Collection;)V
@1.4.10
+#appendMetadata(JZLjava/util/Collection;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/StoreFile$Writer

+###org/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;I)V
+#withOutputDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withFilePath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withDataBlockEncoder(Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withComparator(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withBloomType(Lorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withMaxKeyCount(J)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withChecksumType(Lorg/apache/hadoop/hbase/util/ChecksumType;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#withBytesPerChecksum(I)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#includeMVCCReadpoint(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
+#build()Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@0.95.1-hadoop1
+#withFavoredNodes([Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;)V
+#withFileContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/fs/FileSystem;I)V
-#withCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
-#withDataBlockEncoder(Lorg/apache/hadoop/hbase/io/hfile/HFileDataBlockEncoder;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
-#withChecksumType(Lorg/apache/hadoop/hbase/util/ChecksumType;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
-#withBytesPerChecksum(I)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
-#includeMVCCReadpoint(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@0.98.15-hadoop1
+#withShouldDropCacheBehind(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@0.98.21-hadoop1
+#withTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@0.99.0
-#withTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
-#withShouldDropCacheBehind(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@1.2.0
+#withShouldDropCacheBehind(Z)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@1.3.0
+#withTimeRangeTracker(Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@1.3.5
+#withCompactedFiles(Ljava/util/Collection;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@1.4.0
-#withCompactedFiles(Ljava/util/Collection;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@1.4.10
+#withCompactedFiles(Ljava/util/Collection;)Lorg/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/StoreFile$WriterBuilder

+###org/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$WriterFactory
@0.98.0-hadoop1
+#createWriter()Lorg/apache/hadoop/hbase/regionserver/StoreFile$Writer;
@0.98.19-hadoop1
-###org/apache/hadoop/hbase/regionserver/StripeMultiFileWriter$WriterFactory

+###org/apache/hadoop/hbase/regionserver/UnexpectedStateException
@0.99.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V
@1.4.0
-###org/apache/hadoop/hbase/regionserver/UnexpectedStateException

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController
@0.98.11-hadoop1
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start(Ljava/lang/String;)V
+#control(Ljava/lang/String;J)J
+#finish(Ljava/lang/String;)V
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputControllerFactory
@0.98.11-hadoop1
+#<init>()V
+#create(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputController;
+#getThroughputControllerClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/CompactionThroughputControllerFactory

+###org/apache/hadoop/hbase/regionserver/compactions/Compactor$CellSink
@0.95.0
+#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.99.1
+#append(Lorg/apache/hadoop/hbase/Cell;)V
-#append(Lorg/apache/hadoop/hbase/KeyValue;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/compactions/Compactor$CellSink

+###org/apache/hadoop/hbase/regionserver/compactions/NoLimitCompactionThroughputController
@0.98.11-hadoop1
+#<init>()V
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#start(Ljava/lang/String;)V
+#control(Ljava/lang/String;J)J
+#finish(Ljava/lang/String;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#toString()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/NoLimitCompactionThroughputController

+###org/apache/hadoop/hbase/regionserver/compactions/PressureAwareCompactionThroughputController
@0.98.11-hadoop1
+#<init>()V
+#setup(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#start(Ljava/lang/String;)V
+#control(Ljava/lang/String;J)J
+#finish(Ljava/lang/String;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#toString()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/compactions/PressureAwareCompactionThroughputController

+###org/apache/hadoop/hbase/regionserver/wal/HLogKey
@0.95.0
+#<init>()V
+#<init>([B[BJJLjava/util/UUID;)V
+#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#getEncodedRegionName()[B
+#getTablename()[B
+#getLogSeqNum()J
+#getWriteTime()J
+#getClusterId()Ljava/util/UUID;
+#setClusterId(Ljava/util/UUID;)V
+#toString()Ljava/lang/String;
+#toStringMap()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;)I
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
+#compareTo(Ljava/lang/Object;)I
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey;)V
+#getScopes()Ljava/util/NavigableMap;
+#setScopes(Ljava/util/NavigableMap;)V
*#write(Ljava/io/DataOutput;)V[deprecated]
+#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey$Builder;
+#readFieldsFromPb(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
@0.95.2-hadoop1
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/UUID;)V
+#getTablename()Lorg/apache/hadoop/hbase/TableName;
-#<init>([B[BJJLjava/util/UUID;)V
-#getTablename()[B
@0.96.0-hadoop1
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;)V
+#readOlderScopes(Ljava/util/NavigableMap;)V
+#addClusterId(Ljava/util/UUID;)V
+#getClusterIds()Ljava/util/List;
+#getOriginatingClusterId()Ljava/util/UUID;
-#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey;)V
-#getClusterId()Ljava/util/UUID;
-#setClusterId(Ljava/util/UUID;)V
@0.98.0-hadoop1
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJ)V
+#getNonceGroup()J
+#getNonce()J
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;)V
@0.99.0
+#<init>([BLorg/apache/hadoop/hbase/TableName;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;J)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJ)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJJ)V
+#setOrigLogSeqNum(J)V
+#getOrigLogSeqNum()J
+#getSequenceId()J
@0.99.2
-#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
-#getEncodedRegionName()[B
-#getTablename()Lorg/apache/hadoop/hbase/TableName;
-#getLogSeqNum()J
-#setOrigLogSeqNum(J)V
-#getOrigLogSeqNum()J
-#getSequenceId()J
-#getWriteTime()J
-#getScopes()Ljava/util/NavigableMap;
-#getNonceGroup()J
-#getNonce()J
-#setScopes(Ljava/util/NavigableMap;)V
-#readOlderScopes(Ljava/util/NavigableMap;)V
-#addClusterId(Ljava/util/UUID;)V
-#getClusterIds()Ljava/util/List;
-#getOriginatingClusterId()Ljava/util/UUID;
-#toString()Ljava/lang/String;
-#toStringMap()Ljava/util/Map;
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#compareTo(Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;)I
-#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey$Builder;
-#readFieldsFromPb(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
-#compareTo(Ljava/lang/Object;)I
@1.2.0
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJ)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJ)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJJ)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/wal/HLogKey

+###org/apache/hadoop/hbase/regionserver/wal/ReplayHLogKey
@1.1.0
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJ)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJ)V
+#getSequenceId()J
@1.2.0
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJ)V
-#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJ)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/wal/ReplayHLogKey

+###org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#next()Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#next(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#seek(J)V
+#getPosition()J
+#reset()V
@0.95.1-hadoop1
-#<init>(Ljava/lang/Class;)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
-#next()Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
-#next(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
-#seek(J)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogReader

+###org/apache/hadoop/hbase/regionserver/wal/WriterBase
@0.95.2-hadoop1
+#<init>()V
+#initializeCompressionContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)Z
@0.98.0-hadoop1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/wal/WriterBase

+###org/apache/hadoop/hbase/replication/TableCfWALEntryFilter
@0.98.9-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/replication/ReplicationPeer;)V
+#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@0.99.2
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
-#filter(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@1.3.0
+#filterCell(Lorg/apache/hadoop/hbase/wal/WAL$Entry;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/TableCfWALEntryFilter

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationWALReaderManager
@0.99.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)V
+#openReader(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/wal/WAL$Reader;
+#readNextAndSetPosition()Lorg/apache/hadoop/hbase/wal/WAL$Entry;
+#seek()V
+#getPosition()J
+#setPosition(J)V
+#closeReader()V
@1.1.7
+#currentTrailerSize()J
@1.2.0
-#currentTrailerSize()J
@1.2.4
+#currentTrailerSize()J
@1.4.0
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationWALReaderManager

+###org/apache/hadoop/hbase/security/HBaseSaslRpcServer$SaslDigestCallbackHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/security/token/SecretManager;Lorg/apache/hadoop/hbase/ipc/HBaseServer$Connection;)V
+#handle([Ljavax/security/auth/callback/Callback;)V
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/security/token/SecretManager;Lorg/apache/hadoop/hbase/ipc/RpcServer$Connection;)V
-#<init>(Lorg/apache/hadoop/security/token/SecretManager;Lorg/apache/hadoop/hbase/ipc/HBaseServer$Connection;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/security/HBaseSaslRpcServer$SaslDigestCallbackHandler

+###org/apache/hadoop/hbase/security/HBaseSaslRpcServer$SaslGssCallbackHandler
@0.95.0
+#<init>()V
+#handle([Ljavax/security/auth/callback/Callback;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/security/HBaseSaslRpcServer$SaslGssCallbackHandler

+###org/apache/hadoop/hbase/security/access/CodeToClassAndBackFor96Migration$InternalStaticLoader
@0.95.0
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/security/access/CodeToClassAndBackFor96Migration$InternalStaticLoader

+###org/apache/hadoop/hbase/security/access/SecureBulkLoadEndpoint
@0.95.0
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#prepareBulkLoad(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$PrepareBulkLoadRequest;Lcom/google/protobuf/RpcCallback;)V
+#cleanupBulkLoad(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$CleanupBulkLoadRequest;Lcom/google/protobuf/RpcCallback;)V
+#secureBulkLoadHFiles(Lcom/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/protobuf/generated/SecureBulkLoadProtos$SecureBulkLoadHFilesRequest;Lcom/google/protobuf/RpcCallback;)V
+#getService()Lcom/google/protobuf/Service;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/security/access/SecureBulkLoadEndpoint

+###org/apache/hadoop/hbase/util/AbstractHBaseTool
@0.95.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#parseLong(Ljava/lang/String;JJ)J
+#parseInt(Ljava/lang/String;II)I
@0.98.22-hadoop1
-###org/apache/hadoop/hbase/util/AbstractHBaseTool

+###org/apache/hadoop/hbase/util/BoundedConcurrentLinkedQueue
@0.98.13-hadoop1
+#<init>()V
+#<init>(J)V
+#addAll(Ljava/util/Collection;)Z
+#clear()V
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Z
+#size()I
+#drainTo(Ljava/util/Collection;)V
+#remainingCapacity()J
@0.99.0
-###org/apache/hadoop/hbase/util/BoundedConcurrentLinkedQueue

+###org/apache/hadoop/hbase/util/ByteBloomFilter
@0.95.0
+#<init>(Ljava/io/DataInput;)V
+#computeBitSize(JD)J
+#idealMaxKeys(JD)J
+#computeMaxKeys(JDI)J
+#actualErrorRate()D
+#actualErrorRate(JJI)D
+#computeFoldableByteSize(JI)I
+#<init>(IDII)V
+#createBySize(IDII)Lorg/apache/hadoop/hbase/util/ByteBloomFilter;
+#createAnother()Lorg/apache/hadoop/hbase/util/ByteBloomFilter;
+#allocBloom()V
+#add([B)V
+#add([BII)V
+#contains([BIILjava/nio/ByteBuffer;)Z
+#contains([BII[BIILorg/apache/hadoop/hbase/util/Hash;I)Z
+#getKeyCount()J
+#getMaxKeys()J
+#getByteSize()J
+#getHashType()I
+#compactBloom()V
+#writeBloom(Ljava/io/DataOutput;)V
+#getMetaWriter()Lorg/apache/hadoop/io/Writable;
+#getDataWriter()Lorg/apache/hadoop/io/Writable;
+#getHashCount()I
+#supportsAutoLoading()Z
+#setFakeLookupMode(Z)V
+#createBloomKey([BII[BII)[B
+#getComparator()Lorg/apache/hadoop/io/RawComparator;
+#formatStats(Lorg/apache/hadoop/hbase/util/BloomFilterBase;)Ljava/lang/String;
+#toString()Ljava/lang/String;
@0.96.0-hadoop1
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparator()Lorg/apache/hadoop/io/RawComparator;
@0.99.2
+#contains([BIILjava/nio/ByteBuffer;IILorg/apache/hadoop/hbase/util/Hash;I)Z
-#contains([BII[BIILorg/apache/hadoop/hbase/util/Hash;I)Z
@1.2.8
+#setRandomGeneratorForTest(Ljava/util/Random;)V
-#setFakeLookupMode(Z)V
@1.3.0
+#setFakeLookupMode(Z)V
-#setRandomGeneratorForTest(Ljava/util/Random;)V
@1.3.3
+#setRandomGeneratorForTest(Ljava/util/Random;)V
-#setFakeLookupMode(Z)V
@1.4.0
+#setFakeLookupMode(Z)V
-#setRandomGeneratorForTest(Ljava/util/Random;)V
@1.4.8
+#setRandomGeneratorForTest(Ljava/util/Random;)V
-#setFakeLookupMode(Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/ByteBloomFilter

+###org/apache/hadoop/hbase/util/CompoundBloomFilter
@0.95.0
+#<init>(Ljava/io/DataInput;Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;)V
+#contains([BIILjava/nio/ByteBuffer;)Z
+#supportsAutoLoading()Z
+#getNumChunks()I
+#getComparator()Lorg/apache/hadoop/io/RawComparator;
+#enableTestingStats()V
+#formatTestingStats()Ljava/lang/String;
+#getNumQueriesForTesting(I)J
+#getNumPositivesForTesting(I)J
+#toString()Ljava/lang/String;
@0.96.0-hadoop1
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparator()Lorg/apache/hadoop/io/RawComparator;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/CompoundBloomFilter

+###org/apache/hadoop/hbase/util/CompoundBloomFilterBase
@0.95.0
+#<init>()V
+#getMaxKeys()J
+#getKeyCount()J
+#getByteSize()J
+#createBloomKey([BII[BII)[B
+#getComparator()Lorg/apache/hadoop/io/RawComparator;
@0.96.0-hadoop1
+#getComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparator()Lorg/apache/hadoop/io/RawComparator;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/CompoundBloomFilterBase

+###org/apache/hadoop/hbase/util/CompoundBloomFilterWriter
@0.95.0
+#<init>(IFIIZLorg/apache/hadoop/io/RawComparator;)V
+#shouldWriteBlock(Z)Z
+#add([BII)V
+#writeInlineBlock(Ljava/io/DataOutput;)V
+#blockWritten(JII)V
+#getInlineBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#getMetaWriter()Lorg/apache/hadoop/io/Writable;
+#compactBloom()V
+#allocBloom()V
+#getDataWriter()Lorg/apache/hadoop/io/Writable;
+#getCacheOnWrite()Z
@0.96.0-hadoop1
+#<init>(IFIIZLorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>(IFIIZLorg/apache/hadoop/io/RawComparator;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/CompoundBloomFilterWriter

+###org/apache/hadoop/hbase/util/ConfigUtil
@0.98.6-hadoop1
+#<init>()V
+#useZKForAssignment(Lorg/apache/hadoop/conf/Configuration;)Z
@1.7.2
+#isZKAssignmentInUse(Lorg/apache/hadoop/conf/Configuration;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/ConfigUtil

+###org/apache/hadoop/hbase/util/FSTableDescriptorMigrationToSubdir
@0.95.2-hadoop1
+#<init>()V
+#migrateFSTableDescriptorsIfNecessary(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/FSTableDescriptorMigrationToSubdir

+###org/apache/hadoop/hbase/util/FSVisitor$LogFileVisitor
@0.95.0
+#logFile(Ljava/lang/String;Ljava/lang/String;)V
@1.3.0
-###org/apache/hadoop/hbase/util/FSVisitor$LogFileVisitor

+###org/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor
@0.95.0
+#recoveredEdits(Ljava/lang/String;Ljava/lang/String;)V
@1.3.0
-###org/apache/hadoop/hbase/util/FSVisitor$RecoveredEditsVisitor

+###org/apache/hadoop/hbase/util/FSVisitor$RegionVisitor
@0.98.3-hadoop1
+#region(Ljava/lang/String;)V
@1.3.0
-###org/apache/hadoop/hbase/util/FSVisitor$RegionVisitor

+###org/apache/hadoop/hbase/util/HFileV1Detector
@0.95.1-hadoop1
+#<init>()V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@0.96.0-hadoop1
+#getFileLinkWithPreNSPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/FileLink;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/HFileV1Detector

+###org/apache/hadoop/hbase/util/Merge
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/Merge

+###org/apache/hadoop/hbase/util/MetaUtils
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getLog()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#getMetaRegion()Lorg/apache/hadoop/hbase/regionserver/HRegion;
+#shutdown()V
@0.99.2
+#getLog(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
-#getLog()Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/MetaUtils

+###org/apache/hadoop/hbase/util/SortedCopyOnWriteSet
@0.95.0
+#<init>()V
+#<init>(Ljava/util/Collection;)V
+#<init>(Ljava/util/Comparator;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#iterator()Ljava/util/Iterator;
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#addAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#clear()V
+#comparator()Ljava/util/Comparator;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#first()Ljava/lang/Object;
+#last()Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/SortedCopyOnWriteSet

+###org/apache/hadoop/hbase/util/hbck/TableLockChecker
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/util/HBaseFsck$ErrorReporter;)V
+#checkTableLocks()V
+#fixExpiredTableLocks()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/hbck/TableLockChecker

+###org/apache/hadoop/hbase/wal/BoundedRegionGroupingProvider
@1.0.2
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
+#shutdown()V
+#close()V
+#getNumLogFiles(Lorg/apache/hadoop/hbase/wal/WALFactory;)J
+#getLogFileSize(Lorg/apache/hadoop/hbase/wal/WALFactory;)J
+#getWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
@1.1.0
-###org/apache/hadoop/hbase/wal/BoundedRegionGroupingProvider

+###org/apache/hadoop/hbase/wal/DefaultWALProvider$Reader
@0.99.2
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/wal/DefaultWALProvider$Reader

+###org/apache/hadoop/hbase/wal/DefaultWALProvider$Writer
@0.99.2
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/wal/DefaultWALProvider$Writer

+###org/apache/hadoop/hbase/wal/DefaultWALProvider
@0.99.2
+#<init>()V
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)V
+#getWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
+#close()V
+#shutdown()V
+#getNumLogFiles(Lorg/apache/hadoop/hbase/wal/WALFactory;)J
+#getLogFileSize(Lorg/apache/hadoop/hbase/wal/WALFactory;)J
+#getNumRolledLogFiles(Lorg/apache/hadoop/hbase/wal/WAL;)I
+#getCurrentFileName(Lorg/apache/hadoop/hbase/wal/WAL;)Lorg/apache/hadoop/fs/Path;
+#extractFileNumFromWAL(Lorg/apache/hadoop/hbase/wal/WAL;)J
+#validateWALFilename(Ljava/lang/String;)Z
+#getWALDirectoryName(Ljava/lang/String;)Ljava/lang/String;
+#getServerNameFromWALDirectoryName(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/ServerName;
+#getServerNameFromWALDirectoryName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/ServerName;
+#isMetaFile(Lorg/apache/hadoop/fs/Path;)Z
+#isMetaFile(Ljava/lang/String;)Z
+#createWriter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Lorg/apache/hadoop/hbase/wal/DefaultWALProvider$Writer;
@1.2.0
+#getWALPrefixFromWALName(Ljava/lang/String;)Ljava/lang/String;
@1.3.0
+#getWAL([B[B)Lorg/apache/hadoop/hbase/wal/WAL;
+#getNumLogFiles()J
+#getLogFileSize()J
-#getWAL([B)Lorg/apache/hadoop/hbase/wal/WAL;
-#getNumLogFiles(Lorg/apache/hadoop/hbase/wal/WALFactory;)J
-#getLogFileSize(Lorg/apache/hadoop/hbase/wal/WALFactory;)J
@1.3.4
+#getWALArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
@1.4.0
+#getWALs()Ljava/util/List;
-#getWALArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
@1.4.10
+#getWALArchivePath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/wal/DefaultWALProvider

+###org/apache/hadoop/hbase/wal/WALKey$Version
@0.99.2
+#values()[Lorg/apache/hadoop/hbase/wal/WALKey$Version;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/wal/WALKey$Version;
+#atLeast(Lorg/apache/hadoop/hbase/wal/WALKey$Version;)Z
+#fromCode(I)Lorg/apache/hadoop/hbase/wal/WALKey$Version;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/wal/WALKey$Version

+###org/apache/hadoop/hbase/zookeeper/ZKTableStateManager
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#setTableState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)V
+#setTableStateIfInStates(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
+#setTableStateIfNotInStates(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
+#isTableState(Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
+#setDeletedTable(Lorg/apache/hadoop/hbase/TableName;)V
+#isTablePresent(Lorg/apache/hadoop/hbase/TableName;)Z
+#getTablesInStates([Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Ljava/util/Set;
+#checkAndRemoveTableState(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;Z)V
@1.1.0
+#isTableState(Lorg/apache/hadoop/hbase/TableName;Z[Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$Table$State;)Z
@1.7.0
-###org/apache/hadoop/hbase/zookeeper/ZKTableStateManager

+###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase$AcquiredLock
@0.95.0
+#<init>(Ljava/lang/String;I)V
+#getPath()Ljava/lang/String;
+#getVersion()I
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase$AcquiredLock

+###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase$ZNodeComparator
@0.95.0
+#getChildSequenceId(Ljava/lang/String;)I
+#compare(Ljava/lang/String;Ljava/lang/String;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@0.95.1-hadoop1
+#getChildSequenceId(Ljava/lang/String;)J
-#getChildSequenceId(Ljava/lang/String;)I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase$ZNodeComparator

+###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase
@0.95.0
+#acquire()V
+#tryAcquire(J)Z
+#release()V
@0.95.1-hadoop1
+#reapAllLocks()V
+#reapExpiredLocks(J)V
+#visitLocks(Lorg/apache/hadoop/hbase/InterProcessLock$MetadataHandler;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessLockBase

+###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadLock
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;[BLorg/apache/hadoop/hbase/InterProcessLock$MetadataHandler;)V
+#reapAllLocks()V
@0.95.1-hadoop1
-#reapAllLocks()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadLock

+###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadWriteLock
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;Lorg/apache/hadoop/hbase/InterProcessLock$MetadataHandler;)V
+#readLock([B)Lorg/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadLock;
+#writeLock([B)Lorg/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessWriteLock;
+#writeLock([B)Lorg/apache/hadoop/hbase/InterProcessLock;
+#readLock([B)Lorg/apache/hadoop/hbase/InterProcessLock;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessReadWriteLock

+###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessWriteLock
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Ljava/lang/String;[BLorg/apache/hadoop/hbase/InterProcessLock$MetadataHandler;)V
+#reapAllLocks()V
@0.95.1-hadoop1
-#reapAllLocks()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/zookeeper/lock/ZKInterProcessWriteLock

+###org/apache/hadoop/hbase/regionserver/MemStore$MemStoreScanner
@0.95.0
+#seek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#reseek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#peek()Lorg/apache/hadoop/hbase/KeyValue;
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#close()V
+#getSequenceID()J
+#shouldUseScanner(Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/SortedSet;J)Z
@0.98.0-hadoop1
+#backwardSeek(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#seekToLastRow()Z
@0.99.0
-###org/apache/hadoop/hbase/regionserver/MemStore$MemStoreScanner

+###org/apache/hadoop/hbase/regionserver/HRegion$Operation
@0.95.1-hadoop1
+#values()[Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion$Operation;
@1.1.0
-###org/apache/hadoop/hbase/regionserver/HRegion$Operation

+###org/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener
@0.95.0
+#prepareBulkLoad([BLjava/lang/String;)Ljava/lang/String;
+#doneBulkLoad([BLjava/lang/String;)V
+#failedBulkLoad([BLjava/lang/String;)V
@1.1.0
-###org/apache/hadoop/hbase/regionserver/HRegion$BulkLoadListener

+###org/apache/hadoop/hbase/regionserver/handler/HLogSplitterHandler
@0.96.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Lorg/apache/commons/lang/mutable/MutableInt;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
+#process()V
+#endTask(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/String;I)V
@0.98.4-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Lorg/apache/commons/lang/mutable/MutableInt;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Lorg/apache/commons/lang/mutable/MutableInt;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;)V
@0.99.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination;Lorg/apache/hadoop/hbase/coordination/SplitLogWorkerCoordination$SplitTaskDetails;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#<init>(Lorg/apache/hadoop/hbase/Server;Ljava/lang/String;Lorg/apache/commons/lang/mutable/MutableInt;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/hadoop/hbase/regionserver/SplitLogWorker$TaskExecutor;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)V
-#endTask(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/SplitLogTask;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/String;I)V
@0.99.2
-###org/apache/hadoop/hbase/regionserver/handler/HLogSplitterHandler

+###org/apache/hadoop/hbase/regionserver/HRegion$RowLock
@0.95.2-hadoop1
+#release()V
@1.1.0
-###org/apache/hadoop/hbase/regionserver/HRegion$RowLock

+###org/apache/hadoop/hbase/regionserver/KeyValueSkipListSet
@0.96.0-hadoop1
+#ceiling(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#descendingIterator()Ljava/util/Iterator;
+#descendingSet()Ljava/util/NavigableSet;
+#floor(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#headSet(Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/SortedSet;
+#headSet(Lorg/apache/hadoop/hbase/KeyValue;Z)Ljava/util/NavigableSet;
+#higher(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#iterator()Ljava/util/Iterator;
+#lower(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#pollFirst()Lorg/apache/hadoop/hbase/KeyValue;
+#pollLast()Lorg/apache/hadoop/hbase/KeyValue;
+#subSet(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/SortedSet;
+#subSet(Lorg/apache/hadoop/hbase/KeyValue;ZLorg/apache/hadoop/hbase/KeyValue;Z)Ljava/util/NavigableSet;
+#tailSet(Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/SortedSet;
+#tailSet(Lorg/apache/hadoop/hbase/KeyValue;Z)Ljava/util/NavigableSet;
+#comparator()Ljava/util/Comparator;
+#first()Lorg/apache/hadoop/hbase/KeyValue;
+#last()Lorg/apache/hadoop/hbase/KeyValue;
+#add(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#addAll(Ljava/util/Collection;)Z
+#clear()V
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#isEmpty()Z
+#remove(Ljava/lang/Object;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#get(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#size()I
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
+#subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
+#tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
+#subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
+#pollLast()Ljava/lang/Object;
+#pollFirst()Ljava/lang/Object;
+#higher(Ljava/lang/Object;)Ljava/lang/Object;
+#ceiling(Ljava/lang/Object;)Ljava/lang/Object;
+#floor(Ljava/lang/Object;)Ljava/lang/Object;
+#lower(Ljava/lang/Object;)Ljava/lang/Object;
+#last()Ljava/lang/Object;
+#first()Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
@0.99.1
-###org/apache/hadoop/hbase/regionserver/KeyValueSkipListSet

+###org/apache/hadoop/hbase/regionserver/HRegion$FlushResult
@0.98.2-hadoop1
+#isFlushSucceeded()Z
+#isCompactionNeeded()Z
@1.1.0
-###org/apache/hadoop/hbase/regionserver/HRegion$FlushResult

+###org/apache/hadoop/hbase/regionserver/HRegionServer$QosPriority
@0.95.0
+#priority()I
@0.99.0
-###org/apache/hadoop/hbase/regionserver/HRegionServer$QosPriority

+###org/apache/hadoop/hbase/regionserver/wal/HLog
@0.95.0
+#registerWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
+#unregisterWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)Z
+#getFilenum()J
+#setSequenceNumber(J)V
+#getSequenceNumber()J
+#rollWriter()[[B
+#rollWriter(Z)[[B
+#close()V
+#closeAndDelete()V
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)J
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/UUID;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/UUID;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
+#hsync()V
+#hflush()V
+#sync()V
+#sync(J)V
+#obtainSeqNum()J
+#startCacheFlush([B)Ljava/lang/Long;
+#completeCacheFlush([B)V
+#abortCacheFlush([B)V
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/wal/WALCoprocessorHost;
+#isLowReplicationRollEnabled()Z
+#getEarliestMemstoreSeqNum([B)J
@0.95.1-hadoop1
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;Z)V
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/HTableDescriptor;Z)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/UUID;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
@0.95.2-hadoop1
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;)V
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;Z)V
+#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/UUID;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;Z)V
-#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;[BLorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/UUID;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
@0.96.0-hadoop1
+#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/List;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
-#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/UUID;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
@0.96.1-hadoop1
+#getNumLogFiles()I
+#getLogFileSize()J
+#postAppend(Ljava/util/List;)V
+#postSync()V
@0.98.0-hadoop1
+#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)V
+#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/List;JLorg/apache/hadoop/hbase/HTableDescriptor;Ljava/util/concurrent/atomic/AtomicLong;ZJJ)J
+#startCacheFlush([B)Z
-#setSequenceNumber(J)V
-#getSequenceNumber()J
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;)V
-#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;Z)V
-#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/List;JLorg/apache/hadoop/hbase/HTableDescriptor;)J
-#obtainSeqNum()J
-#startCacheFlush([B)Ljava/lang/Long;
@0.98.9-hadoop1
*#appendNoSync(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/List;JLorg/apache/hadoop/hbase/HTableDescriptor;Ljava/util/concurrent/atomic/AtomicLong;ZJJ)J[deprecated]
@0.99.0
*#append(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;JLorg/apache/hadoop/hbase/HTableDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)V[deprecated]
+#postAppend(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;J)J
+#postSync(JI)V
+#appendNoSync(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Ljava/util/concurrent/atomic/AtomicLong;ZLjava/util/List;)J
-#postAppend(Ljava/util/List;)V
-#postSync()V
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLog

+###org/apache/hadoop/hbase/regionserver/wal/HLogUtil
@0.95.0
+#<init>()V
+#isMetaFamily([B)Z
+#getKeyClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
+#newKey(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;
+#validateHLogFilename(Ljava/lang/String;)Z
+#getHLogDirectoryName(Ljava/lang/String;)Ljava/lang/String;
+#getRegionDirRecoveredEditsDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#moveAsideBadEditsFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#getServerNameFromHLogDirectoryName(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/ServerName;
+#getSplitEditFilesSorted(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/NavigableSet;
+#isMetaFile(Lorg/apache/hadoop/fs/Path;)Z
@0.95.1-hadoop1
+#getServerNameFromHLogDirectoryName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/ServerName;
+#isMetaFile(Ljava/lang/String;)Z
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)V
-#isMetaFamily([B)Z
-#getKeyClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
-#newKey(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;
@0.98.0-hadoop1
+#writeCompactionMarker(Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)V
-#writeCompactionMarker(Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$CompactionDescriptor;)V
@0.99.0
+#writeFlushMarker(Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$FlushDescriptor;Ljava/util/concurrent/atomic/AtomicLong;Z)J
+#writeRegionEventMarker(Lorg/apache/hadoop/hbase/regionserver/wal/HLog;Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$RegionEventDescriptor;Ljava/util/concurrent/atomic/AtomicLong;)J
@0.99.1
+#writeRegionOpenSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;JJ)J
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLogUtil

+###org/apache/hadoop/hbase/regionserver/wal/HLogSplitter$MutationReplay
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/ClientProtos$MutationProto$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;JJ)V
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLogSplitter$MutationReplay

+###org/apache/hadoop/hbase/regionserver/wal/HLog$Reader
@0.95.0
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#next()Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#next(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#seek(J)V
+#getPosition()J
+#reset()V
@0.95.1-hadoop1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FSDataInputStream;)V
+#getWALTrailer()Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLog$Reader

+###org/apache/hadoop/hbase/regionserver/wal/HLogSplitter
@0.95.0
+#createLogSplitter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/regionserver/wal/HLogSplitter;
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
+#splitLog()Ljava/util/List;
+#splitLog(Ljava/util/concurrent/CountDownLatch;)Ljava/util/List;
+#getTime()J
+#getSize()J
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)Z
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Z
+#splitLogFile(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Z
+#finishSplitLogFile(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#finishSplitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Z
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)Z
@0.95.2-hadoop1
+#split(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
-#createLogSplitter(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/regionserver/wal/HLogSplitter;
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
-#splitLog()Ljava/util/List;
-#splitLog(Ljava/util/concurrent/CountDownLatch;)Ljava/util/List;
-#getTime()J
-#getSize()J
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Z
-#splitLogFile(Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Z
-#finishSplitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
@0.96.0-hadoop1
+#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;)Ljava/util/List;
@0.98.0-hadoop1
+#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;Z)Ljava/util/List;
+#isDistributedLogReplay(Lorg/apache/hadoop/conf/Configuration;)Z
-#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;)Ljava/util/List;
@0.98.4-hadoop1
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)Z
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Z
-#isDistributedLogReplay(Lorg/apache/hadoop/conf/Configuration;)Z
@0.99.0
+#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/CoordinatedStateManager;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)Z
-#splitLogFile(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileStatus;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Lorg/apache/hadoop/hbase/regionserver/LastSequenceId;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/protobuf/generated/ZooKeeperProtos$SplitLogTask$RecoveryMode;)Z
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLogSplitter

+###org/apache/hadoop/hbase/regionserver/wal/OrphanHLogAfterSplitException
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;)V
@0.99.0
-###org/apache/hadoop/hbase/regionserver/wal/OrphanHLogAfterSplitException

+###org/apache/hadoop/hbase/regionserver/wal/HLog$Writer
@0.95.0
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#sync()V
+#append(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
+#getLength()J
@0.95.1-hadoop1
+#setWALTrailer(Lorg/apache/hadoop/hbase/protobuf/generated/WALProtos$WALTrailer;)V
@0.96.1-hadoop1
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Z)V
-#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLog$Writer

+###org/apache/hadoop/hbase/regionserver/wal/HLog$Entry
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;)V
+#getEdit()Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;
+#getKey()Lorg/apache/hadoop/hbase/regionserver/wal/HLogKey;
+#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#toString()Ljava/lang/String;
+#write(Ljava/io/DataOutput;)V
+#readFields(Ljava/io/DataInput;)V
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLog$Entry

+###org/apache/hadoop/hbase/regionserver/wal/HLogFactory
@0.95.0
+#<init>()V
+#createHLog(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#createHLog(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#createHLog(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#createMetaHLog(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Reader;
+#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Writer;
@0.95.1-hadoop1
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Reader;
+#createReader(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/CancelableProgressable;Z)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Reader;
@0.96.1-hadoop1
+#createWALWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Writer;
+#createRecoveredEditsWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Writer;
-#createWriter(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Writer;
@0.99.2
-###org/apache/hadoop/hbase/regionserver/wal/HLogFactory

+###org/apache/hadoop/hbase/regionserver/MemStoreLAB$Allocation
@0.95.0
+#toString()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/regionserver/MemStoreLAB$Allocation

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager
@0.95.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;)V
+#openReader(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Reader;
+#readNextAndSetPosition([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;I)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
+#seek()V
+#getPosition()J
+#setPosition(J)V
+#closeReader()V
@0.96.1-hadoop1
+#readNextAndSetPosition()Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
-#readNextAndSetPosition([Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;I)Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;
@0.98.23-hadoop1
+#currentTrailerSize()J
@0.99.0
-#currentTrailerSize()J
@0.99.2
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationHLogReaderManager

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$CostFromRegionLoadFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$CostFromRegionLoadFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$LocalityCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$LocalityCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$WriteRequestCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$WriteRequestCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$RegionCountSkewCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$RegionCountSkewCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$MoveCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$MoveCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$MemstoreSizeCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$MemstoreSizeCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$ReadRequestCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$ReadRequestCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$TableSkewCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$TableSkewCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$StoreFileCostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$StoreFileCostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$CostFunction
@0.95.1-hadoop1
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$CostFunction

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$LoadPicker
@0.95.1-hadoop1
+#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$LoadPicker

+###org/apache/hadoop/hbase/master/AssignmentManager$TimeoutMonitor
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/AssignmentManager;ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/master/ServerManager;I)V
@0.99.0
-###org/apache/hadoop/hbase/master/AssignmentManager$TimeoutMonitor

+###org/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher$Status
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher$Status;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher$Status;
@0.99.0
-###org/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher$Status

+###org/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher
@0.95.0
+#finish(Lorg/apache/hadoop/hbase/ServerName;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher$Status;
@0.99.0
-###org/apache/hadoop/hbase/master/SplitLogManager$TaskFinisher

+###org/apache/hadoop/hbase/master/AssignmentManager$TimerUpdater
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/master/AssignmentManager;ILorg/apache/hadoop/hbase/Stoppable;)V
@0.99.0
-###org/apache/hadoop/hbase/master/AssignmentManager$TimerUpdater

+###org/apache/hadoop/hbase/catalog/MetaMigrationConvertingToPB
@0.95.0
+#<init>()V
+#updateRootAndMetaIfNecessary(Lorg/apache/hadoop/hbase/master/MasterServices;)J
@0.95.1-hadoop1
+#updateMetaIfNecessary(Lorg/apache/hadoop/hbase/master/MasterServices;)J
-#updateRootAndMetaIfNecessary(Lorg/apache/hadoop/hbase/master/MasterServices;)J
@0.99.0
-###org/apache/hadoop/hbase/catalog/MetaMigrationConvertingToPB

+###org/apache/hadoop/hbase/catalog/MetaEditor
@0.95.0
+#<init>()V
+#makePutFromRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/client/Put;
+#makeDeleteFromRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/client/Delete;
+#addDaughtersToPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)Lorg/apache/hadoop/hbase/client/Put;
+#deleteFromMetaTable(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
+#addRegionToMeta(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#addRegionToMeta(Lorg/apache/hadoop/hbase/client/HTable;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#addRegionToMeta(Lorg/apache/hadoop/hbase/client/HTable;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#addRegionsToMeta(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
+#addDaughter(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
+#mergeRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#splitRegion(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#updateMetaLocation(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
+#updateRegionLocation(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
+#deleteRegion(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#deleteRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
+#mutateRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;Ljava/util/List;)V
+#deleteDaughtersReferencesInParent(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#deleteMergeQualifiers(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.95.1-hadoop1
+#putsToMetaTable(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
-#deleteDaughtersReferencesInParent(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.96.0-hadoop1
+#addRegionToMeta(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;)V
@0.96.1-hadoop1
+#overwriteRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
@0.98.0-hadoop1
+#mutateMetaTable(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;)V
@0.98.13-hadoop1
+#makePutFromRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;J)Lorg/apache/hadoop/hbase/client/Put;
+#addRegionsToMeta(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;J)V
+#deleteRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Ljava/util/List;J)V
@0.98.14-hadoop1
+#makeDeleteFromRegionInfo(Lorg/apache/hadoop/hbase/HRegionInfo;J)Lorg/apache/hadoop/hbase/client/Delete;
+#mergeRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
+#updateRegionLocation(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;JJ)V
-#mergeRegions(Lorg/apache/hadoop/hbase/catalog/CatalogTracker;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
@0.99.0
-###org/apache/hadoop/hbase/catalog/MetaEditor

+###org/apache/hadoop/hbase/mapreduce/BufferedHTable
@0.98.17-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;[B)V
+#delete(Lorg/apache/hadoop/hbase/client/Delete;)V
+#delete(Ljava/util/List;)V
+#close()V
@0.99.0
-###org/apache/hadoop/hbase/mapreduce/BufferedHTable

+###org/apache/hadoop/hbase/mapreduce/hadoopbackport/JarFinder
@0.95.0
+#<init>()V
+#jarDir(Ljava/io/File;Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V
+#getJar(Ljava/lang/Class;)Ljava/lang/String;
@0.99.2
-###org/apache/hadoop/hbase/mapreduce/hadoopbackport/JarFinder

+###org/apache/hadoop/hbase/util/InfoServer
@0.95.0
+#<init>(Ljava/lang/String;Ljava/lang/String;IZLorg/apache/hadoop/conf/Configuration;)V
@0.99.1
-###org/apache/hadoop/hbase/util/InfoServer

+###org/apache/hadoop/hbase/io/hfile/DoubleBlockCache
@0.95.0
+#<init>(JJJJLorg/apache/hadoop/conf/Configuration;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#shutdown()V
+#heapSize()J
+#size()J
+#getFreeSize()J
+#getCurrentSize()J
+#getEvictedCount()J
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
+#getBlockCount()J
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#getEvictedCount()J
-#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/io/hfile/DoubleBlockCache

+###org/apache/hadoop/hbase/io/hfile/slab/SingleSizeCache
@0.95.0
+#<init>(IILorg/apache/hadoop/hbase/io/hfile/slab/SlabItemActionWatcher;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#logStats()V
+#shutdown()V
+#heapSize()J
+#size()J
+#getFreeSize()J
+#getOccupiedSize()J
+#getEvictedCount()J
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#getBlockCount()J
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getCurrentSize()J
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/io/hfile/slab/SingleSizeCache

+###org/apache/hadoop/hbase/io/hfile/slab/SlabCache
@0.95.0
+#<init>(JJ)V
+#addSlabByConf(Lorg/apache/hadoop/conf/Configuration;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#onEviction(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/slab/SingleSizeCache;)V
+#onInsertion(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/slab/SingleSizeCache;)V
+#shutdown()V
+#heapSize()J
+#size()J
+#getFreeSize()J
+#getBlockCount()J
+#getCurrentSize()J
+#getEvictedCount()J
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
+#getSizer()Ljava/util/Map;
+#iterator()Ljava/util/Iterator;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
-#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/io/hfile/slab/SlabCache

+###org/apache/hadoop/hbase/io/hfile/BlockCacheUtil$AgeSnapshot
@0.98.4-hadoop1
+#get75thPercentile()D
+#get95thPercentile()D
+#get98thPercentile()D
+#get999thPercentile()D
+#get99thPercentile()D
+#getMean()D
+#getMax()D
+#getMin()D
+#getStdDev()D
@0.99.0
-###org/apache/hadoop/hbase/io/hfile/BlockCacheUtil$AgeSnapshot

+###org/apache/hadoop/hbase/io/DoubleOutputStream
@0.95.0
+#<init>(Ljava/io/OutputStream;Ljava/io/OutputStream;)V
+#write(I)V
+#write([B)V
+#write([BII)V
+#flush()V
+#close()V
@0.99.0
-###org/apache/hadoop/hbase/io/DoubleOutputStream

+###org/apache/hadoop/hbase/io/DataInputInputStream
@0.95.0
+#constructInputStream(Ljava/io/DataInput;)Ljava/io/InputStream;
+#<init>(Ljava/io/DataInput;)V
+#read()I
@0.99.0
-###org/apache/hadoop/hbase/io/DataInputInputStream

+###org/apache/hadoop/hbase/io/HLogLink
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@0.99.2
-###org/apache/hadoop/hbase/io/HLogLink

+###org/apache/hadoop/hbase/trace/SpanReceiverHost
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#loadSpanReceivers()V
+#closeReceivers()V
@0.95.2-hadoop1
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/trace/SpanReceiverHost;
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@0.99.0
-###org/apache/hadoop/hbase/trace/SpanReceiverHost

+###org/apache/hadoop/hbase/trace/HBaseHTraceConfiguration
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;Z)Z
@0.99.0
-###org/apache/hadoop/hbase/trace/HBaseHTraceConfiguration

+###org/apache/hadoop/hbase/tool/Canary$RegionTask
@0.98.14-hadoop1
+#call()Ljava/lang/Void;
+#read()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@0.99.0
-###org/apache/hadoop/hbase/tool/Canary$RegionTask

+###org/apache/hadoop/hbase/metrics/MetricsMBeanBase
@0.95.0
+#getAttribute(Ljava/lang/String;)Ljava/lang/Object;
+#getMBeanInfo()Ljavax/management/MBeanInfo;
@0.99.1
-###org/apache/hadoop/hbase/metrics/MetricsMBeanBase

+###org/apache/hadoop/hbase/metrics/ExactCounterMetric
@0.95.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#update(Ljava/lang/String;)V
+#update(Ljava/lang/String;J)V
+#getTop(I)Ljava/util/List;
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
@0.99.1
-###org/apache/hadoop/hbase/metrics/ExactCounterMetric

+###org/apache/hadoop/hbase/metrics/histogram/MetricsHistogram
@0.95.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#clear()V
+#update(I)V
+#update(J)V
+#getCount()J
+#getMax()J
+#getMin()J
+#getMean()D
+#getStdDev()D
+#getSnapshot()Lcom/yammer/metrics/stats/Snapshot;
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
@0.99.1
-###org/apache/hadoop/hbase/metrics/histogram/MetricsHistogram

+###org/apache/hadoop/hbase/metrics/MetricsString
@0.95.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#getValue()Ljava/lang/String;
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
@0.99.1
-###org/apache/hadoop/hbase/metrics/MetricsString

+###org/apache/hadoop/hbase/metrics/PersistentMetricsTimeVaryingRate
@0.95.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
+#inc(IJ)V
+#inc(J)V
+#resetMinMaxAvg()V
@0.99.1
-###org/apache/hadoop/hbase/metrics/PersistentMetricsTimeVaryingRate

+###org/apache/hadoop/hbase/metrics/MetricsRate
@0.95.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/metrics/util/MetricsRegistry;)V
+#inc(I)V
+#inc()V
+#intervalHeartBeat()V
+#pushMetric(Lorg/apache/hadoop/metrics/MetricsRecord;)V
+#getPreviousIntervalValue()F
@0.99.1
-###org/apache/hadoop/hbase/metrics/MetricsRate

+###org/apache/hadoop/hbase/generated/master/header_jsp
@2.0.0-beta-1
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/master/rsgroup_jsp
@2.0.0-beta-2
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/master/footer_jsp
@2.0.0-beta-1
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/regionserver/header_jsp
@2.0.0-beta-1
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/regionserver/processRS_jsp
@2.0.0-alpha2
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/util/LossyCounting
@1.4.6
+#<init>(D)V
+#<init>()V
+#addByOne(Ljava/lang/String;)Ljava/util/Set;
+#getBuketSize()J
+#getDataSize()J
+#contains(Ljava/lang/String;)Z
+#getCurrentTerm()J
@1.4.10
+#<init>(DLjava/lang/String;)V
+#<init>(Ljava/lang/String;)V
+#getBucketSize()J
-#<init>(D)V
-#<init>()V
-#getBuketSize()J
@1.4.11
+#<init>(DLorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
+#<init>(Lorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
+#add(Ljava/lang/String;)V
+#getElements()Ljava/util/Set;
-#<init>(DLjava/lang/String;)V
-#<init>(Ljava/lang/String;)V
-#addByOne(Ljava/lang/String;)Ljava/util/Set;
@1.4.13
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
-#<init>(Lorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
@1.5.0
+#<init>(Lorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
@1.6.0
+#<init>(Ljava/lang/String;DLorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
+#add(Ljava/lang/Object;)V
+#sweep()V
+#contains(Ljava/lang/Object;)Z
+#getSweepFuture()Ljava/util/concurrent/Future;
-#<init>(DLorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
-#<init>(Lorg/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener;)V
-#add(Ljava/lang/String;)V
-#contains(Ljava/lang/String;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/LossyCounting

+###org/apache/hadoop/hbase/master/TableStateManager$TableStateNotFoundException
@2.0.0-beta-2
@2.3.0
-###org/apache/hadoop/hbase/master/TableStateManager$TableStateNotFoundException

+###org/apache/hadoop/hbase/master/procedure/FairQueue
@2.0.0-beta-2
+#<init>()V
+#hasRunnables()Z
+#add(Lorg/apache/hadoop/hbase/master/procedure/Queue;)V
+#remove(Lorg/apache/hadoop/hbase/master/procedure/Queue;)V
+#poll()Lorg/apache/hadoop/hbase/master/procedure/Queue;

+###org/apache/hadoop/hbase/master/procedure/MetaProcedureInterface$MetaOperationType
@2.0.1
+#values()[Lorg/apache/hadoop/hbase/master/procedure/MetaProcedureInterface$MetaOperationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/procedure/MetaProcedureInterface$MetaOperationType;

+###org/apache/hadoop/hbase/coprocessor/ObserverContextImpl
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/security/User;)V
+#<init>(Lorg/apache/hadoop/hbase/security/User;ZZ)V
+#getEnvironment()Lorg/apache/hadoop/hbase/CoprocessorEnvironment;
+#prepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#isBypassable()Z
+#bypass()V
+#isCompleable()Z
+#complete()V
+#shouldBypass()Z
+#shouldComplete()Z
+#getCaller()Ljava/util/Optional;
+#createAndPrepare(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;[deprecated]
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/security/User;Z)V
-#<init>(Lorg/apache/hadoop/hbase/security/User;ZZ)V
-#isCompleable()Z
-#complete()V
-#shouldComplete()Z

+###org/apache/hadoop/hbase/coprocessor/MetaTableMetrics
@1.4.6
+#<init>()V
+#preGetOp(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Get;Ljava/util/List;)V
+#prePut(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#preDelete(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/Delete;Lorg/apache/hadoop/hbase/regionserver/wal/WALEdit;Lorg/apache/hadoop/hbase/client/Durability;)V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/MetaTableMetrics

+###org/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverGetter
@2.0.0-alpha4

+###org/apache/hadoop/hbase/coprocessor/RegionCoprocessor
@2.0.0-alpha4
+#getRegionObserver()Ljava/util/Optional;
+#getEndpointObserver()Ljava/util/Optional;
+#getBulkLoadObserver()Ljava/util/Optional;

+###org/apache/hadoop/hbase/tool/PreUpgradeValidator
@2.0.1
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/tool/coprocessor/CurrentCoprocessorMethods
@2.0.1
+#<init>()V

+###org/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity
@2.0.1
+#values()[Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;

+###org/apache/hadoop/hbase/tool/coprocessor/CoprocessorValidator
@2.0.1
+#<init>()V
+#validate(Ljava/lang/ClassLoader;Ljava/util/List;)Ljava/util/List;
+#validate(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
@2.0.2
+#validateClasses(Ljava/lang/ClassLoader;Ljava/util/List;Ljava/util/List;)V
+#validateClasses(Ljava/lang/ClassLoader;[Ljava/lang/String;Ljava/util/List;)V
-#validate(Ljava/lang/ClassLoader;Ljava/util/List;)Ljava/util/List;
-#validate(Ljava/util/List;Ljava/util/List;)Ljava/util/List;

+###org/apache/hadoop/hbase/tool/LoadIncrementalHFiles$LoadQueueItem
@2.0.0-alpha3
+#<init>([BLorg/apache/hadoop/fs/Path;)V
+#toString()Ljava/lang/String;
+#getFamily()[B
+#getFilePath()Lorg/apache/hadoop/fs/Path;
@2.2.0
-#toString()Ljava/lang/String;
-#getFamily()[B
-#getFilePath()Lorg/apache/hadoop/fs/Path;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/tool/LoadIncrementalHFiles$LoadQueueItem

+###org/apache/hadoop/hbase/regionserver/CellArrayImmutableSegment
@2.0.0-alpha4

+###org/apache/hadoop/hbase/regionserver/MemStoreSize
@2.0.0-alpha4
+#<init>()V
+#<init>(JJ)V
+#isEmpty()Z
+#getDataSize()J
+#getHeapSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.0.0-beta-2
+#<init>(JJJ)V
+#getOffHeapSize()J
-#<init>(JJ)V
@2.0.1
-#<init>()V
-#<init>(JJJ)V
@2.0.5
+#getCellsCount()I
@2.1.0
-#getCellsCount()I
@2.1.3
+#getCellsCount()I

+###org/apache/hadoop/hbase/regionserver/TimeRangeTracker$Type
@2.0.0-alpha4
+#values()[Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/TimeRangeTracker$Type;

+###org/apache/hadoop/hbase/regionserver/HRegion$FlushResult$Result
@2.0.0-alpha4
+#values()[Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult$Result;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult$Result;

+###org/apache/hadoop/hbase/regionserver/ScanOptions
@2.0.0-alpha4
+#getMaxVersions()I
+#setMaxVersions(I)V
+#readAllVersions()V
+#getTTL()J
+#setTTL(J)V
@2.0.0-beta-2
+#setKeepDeletedCells(Lorg/apache/hadoop/hbase/KeepDeletedCells;)V
+#getKeepDeletedCells()Lorg/apache/hadoop/hbase/KeepDeletedCells;
@2.3.0
+#getMinVersions()I
+#setMinVersions(I)V
+#getScan()Lorg/apache/hadoop/hbase/client/Scan;
@2.4.3
+#getTimeToPurgeDeletes()J
+#setTimeToPurgeDeletes(J)V

+###org/apache/hadoop/hbase/regionserver/SnapshotSegmentScanner
@2.0.1
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ImmutableSegment;)V
+#peek()Lorg/apache/hadoop/hbase/Cell;
+#next()Lorg/apache/hadoop/hbase/Cell;
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#getScannerOrder()J
+#close()V

+###org/apache/hadoop/hbase/regionserver/TimeRangeTracker$SyncTimeRangeTracker
@2.0.0-alpha4
+#getMin()J
+#getMax()J

+###org/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#getAction(Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;)Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;
+#updateStats(Lorg/apache/hadoop/hbase/regionserver/Segment;)V
+#resetStats()V
@2.0.0
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker
@2.0.0-alpha4
+#notExecuted(Ljava/lang/String;)V
+#beforeExecution()V
+#afterExecution()V

+###org/apache/hadoop/hbase/regionserver/querymatcher/NewVersionBehaviorTracker$DeleteVersionsNode
@2.0.0-alpha2
+#addVersionDelete(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/regionserver/querymatcher/NewVersionBehaviorTracker
@2.0.0-alpha2
+#<init>(Ljava/util/NavigableSet;IIIJ)V
+#beforeShipped()V
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult;
+#isEmpty()Z
+#update()V
+#checkColumn(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#checkVersions(Lorg/apache/hadoop/hbase/Cell;JBZ)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#reset()V
+#done()Z
+#getColumnHint()Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnCount;
+#getNextRowOrNextColumn(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;
+#isDone(J)Z
@2.0.0-alpha4
+#<init>(Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/CellComparator;IIIJ)V
+#getCellComparator()Lorg/apache/hadoop/hbase/CellComparator;
-#<init>(Ljava/util/NavigableSet;IIIJ)V

+###org/apache/hadoop/hbase/replication/master/ReplicationPeerConfigUpgrader
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#upgrade()V
+#copyTableCFs()V
+#copyTableCFs(Ljava/lang/String;)Z
+#main([Ljava/lang/String;)V
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/master/ReplicationPeerConfigUpgrader

+###org/apache/hadoop/hbase/tmpl/master/RSGroupListTmpl
@2.0.0-beta-2
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/master/RSGroupListTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/master/ServerManager;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;

+###org/apache/hadoop/hbase/wal/WALKeyImpl
@2.0.0-beta-1
+#getMvcc()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;
+#getWriteEntry()Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;
+#setWriteEntry(Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl$WriteEntry;)V
+#<init>()V
+#<init>(Ljava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/UUID;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;J)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
+#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V
+#getEncodedRegionName()[B
+#getTablename()Lorg/apache/hadoop/hbase/TableName;
+#getLogSeqNum()J[deprecated]
+#setOrigLogSeqNum(J)V
+#getOrigLogSeqNum()J
+#getSequenceId()J
+#getWriteTime()J
+#getReplicationScopes()Ljava/util/NavigableMap;
+#getNonceGroup()J
+#getNonce()J
+#serializeReplicationScope(Z)V
+#addClusterId(Ljava/util/UUID;)V
+#getClusterIds()Ljava/util/List;
+#getOriginatingClusterId()Ljava/util/UUID;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/wal/WALKey;)I
+#getBuilder(Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringCompressor;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey$Builder;
+#readFieldsFromPb(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$WALKey;Lorg/apache/hadoop/hbase/regionserver/wal/WALCellCodec$ByteStringUncompressor;)V
+#estimatedSerializedSizeOf()J
+#compareTo(Ljava/lang/Object;)I
@2.0.0-beta-2
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#getTablename()Lorg/apache/hadoop/hbase/TableName;
@2.1.0
*#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V[deprecated]
+#clearReplicationScope()V
-#serializeReplicationScope(Z)V
@2.3.0
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/wal/WALKey;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;Ljava/util/Map;)V
+#<init>([BLorg/apache/hadoop/hbase/TableName;JLjava/util/List;JJLorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;Ljava/util/NavigableMap;Ljava/util/Map;)V
+#addExtendedAttribute(Ljava/lang/String;[B)V
+#getExtendedAttribute(Ljava/lang/String;)[B
+#getExtendedAttributes()Ljava/util/Map;
@3.0.0-alpha-1
+#<init>([BLorg/apache/hadoop/hbase/TableName;JJLjava/util/UUID;Lorg/apache/hadoop/hbase/regionserver/MultiVersionConcurrencyControl;)V
-#setCompressionContext(Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext;)V[deprecated]
-#getLogSeqNum()J[deprecated]

+###org/apache/hadoop/hbase/generated/master/redirect_jsp
@2.0.0
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/master/processMaster_jsp
@2.0.0-alpha2
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/regionserver/footer_jsp
@2.0.0-beta-1
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/executor/ExecutorType
@2.0.0-beta-1
+#values()[Lorg/apache/hadoop/hbase/executor/ExecutorType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/executor/ExecutorType;

+###org/apache/hadoop/hbase/executor/EventType
@2.0.0-beta-1
+#values()[Lorg/apache/hadoop/hbase/executor/EventType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/executor/EventType;
+#getCode()I
+#get(I)Lorg/apache/hadoop/hbase/executor/EventType;
+#isOnlineSchemaChangeSupported()Z
@2.1.6
-#isOnlineSchemaChangeSupported()Z
@2.2.0
+#isOnlineSchemaChangeSupported()Z
@2.2.1
-#isOnlineSchemaChangeSupported()Z

+###org/apache/hadoop/hbase/quotas/MasterQuotasObserver
@2.0.2
+#<init>()V
+#getMasterObserver()Ljava/util/Optional;
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#postDeleteTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
@2.1.0
-###org/apache/hadoop/hbase/quotas/MasterQuotasObserver

+###org/apache/hadoop/hbase/util/RegionSplitter$NumberStringSplit
@1.4.0
+#split([B[B)[B
+#split(I)[[B
+#split([B[BIZ)[[B
+#firstRow()[B
+#lastRow()[B
+#setFirstRow(Ljava/lang/String;)V
+#setLastRow(Ljava/lang/String;)V
+#strToRow(Ljava/lang/String;)[B
+#rowToStr([B)Ljava/lang/String;
+#separator()Ljava/lang/String;
+#setFirstRow([B)V
+#setLastRow([B)V
+#split2(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
+#convertToBytes([Ljava/math/BigInteger;)[[B
+#convertToByte(Ljava/math/BigInteger;I)[B
+#convertToByte(Ljava/math/BigInteger;)[B
+#convertToBigInteger([B)Ljava/math/BigInteger;
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/RegionSplitter$NumberStringSplit

+###org/apache/hadoop/hbase/ipc/CallQueueInfo
@2.0.0-alpha4
+#getCallQueueNames()Ljava/util/Set;
+#getCalledMethodNames(Ljava/lang/String;)Ljava/util/Set;
+#getCallMethodCount(Ljava/lang/String;Ljava/lang/String;)J
+#getCallMethodSize(Ljava/lang/String;Ljava/lang/String;)J

+###org/apache/hadoop/hbase/master/HMaster$MasterStoppedException
@2.0.0-beta-2
@2.4.0
-###org/apache/hadoop/hbase/master/HMaster$MasterStoppedException

+###org/apache/hadoop/hbase/master/RegionServerTracker
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#start()V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
+#getRegionServerInfo(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionServerInfo;
+#getOnlineServers()Ljava/util/List;
@2.0.0-beta-2
+#nodeCreated(Ljava/lang/String;)V
@2.0.2
+#start(Ljava/util/Set;Ljava/util/Set;)V
+#stop()V
-#start()V
-#nodeCreated(Ljava/lang/String;)V
-#nodeDeleted(Ljava/lang/String;)V
-#getRegionServerInfo(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$RegionServerInfo;
-#getOnlineServers()Ljava/util/List;
@2.0.3
+#start(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
-#start(Ljava/util/Set;Ljava/util/Set;)V
@2.1.0
+#start(Ljava/util/Set;Ljava/util/Set;)V
-#start(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
@2.1.1
+#start(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
-#start(Ljava/util/Set;Ljava/util/Set;)V
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#upgrade(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#getRegionServers()Ljava/util/Set;
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;)V
-#start(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#start(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;)V
-#upgrade(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
-#getRegionServers()Ljava/util/Set;
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#upgrade(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
+#getRegionServers()Ljava/util/Set;
-#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/master/ServerManager;)V
-#start(Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V

+###org/apache/hadoop/hbase/master/SplitOrMergeTracker
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#start()V
+#isSplitOrMergeEnabled(Lorg/apache/hadoop/hbase/client/MasterSwitchType;)Z
+#setSplitOrMergeEnabled(ZLorg/apache/hadoop/hbase/client/MasterSwitchType;)V

+###org/apache/hadoop/hbase/master/MirroringTableStateManager
@2.0.0-beta-2
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#setDeletedTable(Lorg/apache/hadoop/hbase/TableName;)V
@2.0.2
-#setDeletedTable(Lorg/apache/hadoop/hbase/TableName;)V
@2.1.0
+#setDeletedTable(Lorg/apache/hadoop/hbase/TableName;)V
@2.1.1
-#setDeletedTable(Lorg/apache/hadoop/hbase/TableName;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/MirroringTableStateManager

+###org/apache/hadoop/hbase/master/procedure/TableQueue
@2.0.3
+#<init>(Lorg/apache/hadoop/hbase/TableName;ILorg/apache/hadoop/hbase/procedure2/LockStatus;Lorg/apache/hadoop/hbase/procedure2/LockStatus;)V
+#isAvailable()Z
+#requireExclusiveLock(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Z
+#requireTableExclusiveLock(Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface;)Z
+#toString()Ljava/lang/String;
+#compareTo(Lorg/apache/hadoop/hbase/master/procedure/Queue;)I
+#size()I
+#isEmpty()Z
+#poll()Lorg/apache/hadoop/hbase/procedure2/Procedure;
+#peek()Lorg/apache/hadoop/hbase/procedure2/Procedure;
+#add(Lorg/apache/hadoop/hbase/procedure2/Procedure;Z)V
+#getPriority()I
@2.1.0
-###org/apache/hadoop/hbase/master/procedure/TableQueue

+###org/apache/hadoop/hbase/master/procedure/InitMetaProcedure
@2.0.2
+#<init>()V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#await()V

+###org/apache/hadoop/hbase/master/procedure/ReopenTableRegionsProcedure
@2.0.2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/TableName;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;)V

+###org/apache/hadoop/hbase/master/DrainingServerTracker
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/Abortable;Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#start()V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/monitoring/TaskMonitor$TaskFilter$TaskType
@2.0.0-alpha2
+#values()[Lorg/apache/hadoop/hbase/monitoring/TaskMonitor$TaskFilter$TaskType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/monitoring/TaskMonitor$TaskFilter$TaskType;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/monitoring/MonitoredTask$StatusJournalEntry
@1.2.7
+#getStatus()Ljava/lang/String;
+#getTimeStamp()J
@1.3.0
-###org/apache/hadoop/hbase/monitoring/MonitoredTask$StatusJournalEntry

+###org/apache/hadoop/hbase/filter/FilterWrapper$FilterRowRetCode
@2.0.0-alpha4
+#values()[Lorg/apache/hadoop/hbase/filter/FilterWrapper$FilterRowRetCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/filter/FilterWrapper$FilterRowRetCode;

+###org/apache/hadoop/hbase/coprocessor/WALCoprocessor
@2.0.0-alpha4
+#getWALObserver()Ljava/util/Optional;

+###org/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverOperationWithoutResult
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverGetter;)V
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverGetter;Lorg/apache/hadoop/hbase/security/User;)V
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverGetter;Lorg/apache/hadoop/hbase/security/User;Z)V

+###org/apache/hadoop/hbase/coprocessor/BaseEnvironment
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/Coprocessor;IILorg/apache/hadoop/conf/Configuration;)V
+#startup()V
+#shutdown()V
+#getInstance()Lorg/apache/hadoop/hbase/Coprocessor;
+#getClassLoader()Ljava/lang/ClassLoader;
+#getPriority()I
+#getLoadSequence()I
+#getVersion()I
+#getHBaseVersion()Ljava/lang/String;
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/hbase/coprocessor/HasRegionServerServices
@2.0.0-alpha4
+#getRegionServerServices()Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;

+###org/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation
@2.0.1
+#<init>(Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getSeverity()Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;
+#getMessage()Ljava/lang/String;
@2.0.2
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;Ljava/lang/String;Ljava/lang/Throwable;)V
+#getClassName()Ljava/lang/String;
+#getThrowable()Ljava/lang/Throwable;
+#toString()Ljava/lang/String;
-#<init>(Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorViolation$Severity;Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/tool/coprocessor/CoprocessorMethod
@2.0.1
+#<init>(Ljava/lang/String;)V
+#withParameters([Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorMethod;
+#withParameters([Ljava/lang/Class;)Lorg/apache/hadoop/hbase/tool/coprocessor/CoprocessorMethod;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/apache/hadoop/hbase/tool/coprocessor/CoprocessorMethods
@2.0.1
+#<init>()V
+#addMethod(Ljava/lang/String;[Ljava/lang/String;)V
+#addMethod(Ljava/lang/String;[Ljava/lang/Class;)V
+#addMethod(Ljava/lang/reflect/Method;)V
+#hasMethod(Ljava/lang/String;[Ljava/lang/String;)Z
+#hasMethod(Ljava/lang/String;[Ljava/lang/Class;)Z
+#hasMethod(Ljava/lang/reflect/Method;)Z

+###org/apache/hadoop/hbase/regionserver/ByteBufferChunkKeyValue
@2.0.0-beta-1
+#<init>(Ljava/nio/ByteBuffer;II)V
+#<init>(Ljava/nio/ByteBuffer;IIJ)V
+#getChunkId()I

+###org/apache/hadoop/hbase/regionserver/MemStoreSizing
@2.0.0-alpha4
+#<init>()V
+#<init>(JJ)V
+#incMemStoreSize(JJ)V
+#incMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#decMemStoreSize(JJ)V
+#decMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#empty()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.0.0-beta-2
+#<init>(JJJ)V
+#<init>(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
+#incMemStoreSize(JJJ)V
+#decMemStoreSize(JJJ)V
-#<init>(JJ)V
-#incMemStoreSize(JJ)V
-#decMemStoreSize(JJ)V
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#toString()Ljava/lang/String;
@2.0.1
+#incMemStoreSize(JJJ)J
+#incMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)J
+#decMemStoreSize(JJJ)J
+#decMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)J
+#getDataSize()J
+#getHeapSize()J
+#getOffHeapSize()J
+#getMemStoreSize()Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;
-#<init>()V
-#<init>(JJJ)V
-#<init>(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#incMemStoreSize(JJJ)V
-#incMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#decMemStoreSize(JJJ)V
-#decMemStoreSize(Lorg/apache/hadoop/hbase/regionserver/MemStoreSize;)V
-#empty()V
@2.0.5
+#incMemStoreSize(JJJI)J
+#decMemStoreSize(JJJI)J
+#getCellsCount()I
-#incMemStoreSize(JJJ)J
-#decMemStoreSize(JJJ)J
@2.1.0
+#incMemStoreSize(JJJ)J
+#decMemStoreSize(JJJ)J
-#incMemStoreSize(JJJI)J
-#decMemStoreSize(JJJI)J
-#getCellsCount()I
@2.1.3
+#incMemStoreSize(JJJI)J
+#decMemStoreSize(JJJI)J
+#getCellsCount()I
-#incMemStoreSize(JJJ)J
-#decMemStoreSize(JJJ)J
@2.2.0
+#compareAndSetDataSize(JJ)Z

+###org/apache/hadoop/hbase/regionserver/EagerMemStoreCompactionStrategy
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#getAction(Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;)Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;

+###org/apache/hadoop/hbase/regionserver/ReversedStoreScanner
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HStore;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;Ljava/util/NavigableSet;J)V
+#<init>(Lorg/apache/hadoop/hbase/client/Scan;Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Ljava/util/NavigableSet;Ljava/util/List;)V
+#reseek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seek(Lorg/apache/hadoop/hbase/Cell;)Z
+#seekToPreviousRow(Lorg/apache/hadoop/hbase/Cell;)Z
+#backwardSeek(Lorg/apache/hadoop/hbase/Cell;)Z

+###org/apache/hadoop/hbase/regionserver/NoTagByteBufferChunkKeyValue
@2.0.0-beta-1
+#<init>(Ljava/nio/ByteBuffer;II)V
+#<init>(Ljava/nio/ByteBuffer;IIJ)V
+#getChunkId()I

+###org/apache/hadoop/hbase/regionserver/BasicMemStoreCompactionStrategy
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#getAction(Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;)Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;

+###org/apache/hadoop/hbase/regionserver/querymatcher/IncludeAllCompactionQueryMatcher
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker;Lorg/apache/hadoop/hbase/regionserver/querymatcher/ColumnTracker;JJJ)V
+#match(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/ScanQueryMatcher$MatchCode;

+###org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;)V
+#getMaxVersions()I
+#setMaxVersions(I)V
+#getTTL()J
+#setTTL(J)V
+#build()Lorg/apache/hadoop/hbase/regionserver/ScanInfo;
+#toString()Ljava/lang/String;
@2.0.0-beta-2
+#setKeepDeletedCells(Lorg/apache/hadoop/hbase/KeepDeletedCells;)V
+#getKeepDeletedCells()Lorg/apache/hadoop/hbase/KeepDeletedCells;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/ScanInfo;Lorg/apache/hadoop/hbase/client/Scan;)V
+#getMinVersions()I
+#setMinVersions(I)V
+#getScan()Lorg/apache/hadoop/hbase/client/Scan;
@2.4.3
+#getTimeToPurgeDeletes()J
+#setTimeToPurgeDeletes(J)V

+###org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner$WarnOnlyAbortable
@1.2.7
+#<init>()V
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
@1.3.0
-###org/apache/hadoop/hbase/replication/master/ReplicationLogCleaner$WarnOnlyAbortable

+###org/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSourceWALReader
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/PriorityBlockingQueue;JLorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
@2.1.0
-###org/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSourceWALReader

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
+#run()V
+#startup(Ljava/lang/Thread$UncaughtExceptionHandler;)V
+#getLogQueue()Ljava/util/concurrent/PriorityBlockingQueue;
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#getCurrentPosition()J
+#setWALReader(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader;)V
+#getStartPosition()J
+#setWorkerState(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper$WorkerState;)V
+#getWorkerState()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper$WorkerState;
+#stopWorker()V
+#isFinished()Z
+#sleepForRetries(Ljava/lang/String;I)Z
@2.1.0
-#getLogQueue()Ljava/util/concurrent/PriorityBlockingQueue;
-#getCurrentPath()Lorg/apache/hadoop/fs/Path;
-#getCurrentPosition()J
-#setWALReader(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader;)V
-#getStartPosition()J
-#setWorkerState(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper$WorkerState;)V
-#getWorkerState()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper$WorkerState;
-#stopWorker()V
@2.2.7
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
@2.4.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@2.4.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
@3.0.0-alpha-1
-#sleepForRetries(Ljava/lang/String;I)Z

+###org/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSourceShipper
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSource;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;)V
+#run()V
+#getStartPosition()J
@2.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSource;Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSource;Lorg/apache/hadoop/hbase/replication/ReplicationQueues;)V
-#run()V
@2.4.2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;Lorg/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSource;Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/regionserver/RecoveredReplicationSource;Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;)V

+###org/apache/hadoop/hbase/replication/regionserver/WALEntrySinkFilter
@2.0.0-beta-1
+#init(Lorg/apache/hadoop/hbase/client/Connection;)V
+#filter(Lorg/apache/hadoop/hbase/TableName;J)Z
@3.0.0-alpha-1
+#init(Lorg/apache/hadoop/hbase/client/AsyncConnection;)V
-#init(Lorg/apache/hadoop/hbase/client/Connection;)V

+###org/apache/hadoop/hbase/tmpl/master/RSGroupListTmplImpl
@2.0.0-beta-2
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/master/RSGroupListTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/wal/WALProvider$WriterBase
@2.0.0-alpha3
+#getLength()J
@2.2.6
+#getSyncedLength()J
@2.3.0
-#getSyncedLength()J
@2.3.1
+#getSyncedLength()J

+###org/apache/hadoop/hbase/SharedConnection
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;)V
+#close()V
+#isClosed()Z
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/client/BufferedMutatorParams;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
+#getRegionLocator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionLocator;
+#getAdmin()Lorg/apache/hadoop/hbase/client/Admin;
+#getTableBuilder(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/TableBuilder;
@2.2.0
+#clearRegionLocationCache()V
+#getHbck()Lorg/apache/hadoop/hbase/client/Hbck;
+#getHbck(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/client/Hbck;
@2.4.14
+#getClusterId()Ljava/lang/String;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/SharedConnection

+###org/apache/hadoop/hbase/quotas/SnapshotQuotaObserverChore
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;Lorg/apache/hadoop/hbase/master/MetricsMaster;)V

+###org/apache/hadoop/hbase/util/RegionSplitter$DecimalStringSplit
@1.4.0
+#<init>()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/RegionSplitter$DecimalStringSplit

+###org/apache/hadoop/hbase/ipc/NettyRpcFrameDecoder
@2.0.0-beta-1
+#<init>(I)V

+###org/apache/hadoop/hbase/master/assignment/AssignProcedure$CompareAssignProcedure
@2.0.0-beta-1
+#<init>()V
+#compare(Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;Lorg/apache/hadoop/hbase/master/assignment/AssignProcedure;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.2.0
-###org/apache/hadoop/hbase/master/assignment/AssignProcedure$CompareAssignProcedure

+###org/apache/hadoop/hbase/master/cleaner/TimeToLiveProcedureWALCleaner
@2.0.0-alpha4
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
+#stop(Ljava/lang/String;)V
+#isStopped()Z
@2.3.0
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
-#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
-#stop(Ljava/lang/String;)V
-#isStopped()Z

+###org/apache/hadoop/hbase/master/HMaster$TableDescriptorGetter
@2.0.2
+#get()Lorg/apache/hadoop/hbase/client/TableDescriptor;

+###org/apache/hadoop/hbase/filter/FilterWrapper
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/filter/Filter;)V
+#toByteArray()[B
+#parseFrom([B)Lorg/apache/hadoop/hbase/filter/FilterWrapper;
+#reset()V
+#filterAllRemaining()Z
+#filterRow()Z
+#getNextCellHint(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#filterRowKey([BII)Z
+#filterRowKey(Lorg/apache/hadoop/hbase/Cell;)Z
+#filterKeyValue(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;[deprecated]
+#filterCell(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;
+#transformCell(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#hasFilterRow()Z
+#filterRowCells(Ljava/util/List;)V
+#filterRowCellsWithRet(Ljava/util/List;)Lorg/apache/hadoop/hbase/filter/FilterWrapper$FilterRowRetCode;
+#isFamilyEssential([B)Z
@3.0.0-alpha-1
-#filterRowKey([BII)Z
-#filterKeyValue(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/filter/Filter$ReturnCode;[deprecated]

+###org/apache/hadoop/hbase/io/hfile/bucket/UnsafeSharedMemoryBucketEntry
@2.0.0
+#<init>(JIJZ)V
+#getCachedTime()J
+#getPriority()Lorg/apache/hadoop/hbase/io/hfile/BlockPriority;
+#access(J)V
+#getLength()I
@2.3.0
-###org/apache/hadoop/hbase/io/hfile/bucket/UnsafeSharedMemoryBucketEntry

+###org/apache/hadoop/hbase/coprocessor/HasMasterServices
@2.0.0-alpha4
+#getMasterServices()Lorg/apache/hadoop/hbase/master/MasterServices;

+###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity$MasterCoprocessorService
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorService;)V
+#getServices()Ljava/lang/Iterable;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity$MasterCoprocessorService

+###org/apache/hadoop/hbase/coprocessor/MasterCoprocessor
@2.0.0-alpha4
+#getMasterObserver()Ljava/util/Optional;

+###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity$RegionCoprocessorService
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorService;)V
+#getServices()Ljava/lang/Iterable;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity$RegionCoprocessorService

+###org/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverOperationWithResult
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverGetter;Ljava/lang/Object;)V
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverGetter;Ljava/lang/Object;Z)V
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost;Lorg/apache/hadoop/hbase/coprocessor/CoprocessorHost$ObserverGetter;Ljava/lang/Object;Lorg/apache/hadoop/hbase/security/User;)V

+###org/apache/hadoop/hbase/tool/LoadIncrementalHFiles
@2.0.0-alpha3
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#prepareHFileQueue(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;Z)V
+#prepareHFileQueue(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;ZZ)V
+#prepareHFileQueue(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Table;Ljava/util/Deque;Z)V
+#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;)Ljava/util/Map;
+#doBulkLoad(Ljava/util/Map;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;ZZ)Ljava/util/Map;
+#doBulkLoad(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/RegionLocator;ZZ)Ljava/util/Map;
+#loadHFileQueue(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/Deque;Lorg/apache/hadoop/hbase/util/Pair;)V
+#loadHFileQueue(Lorg/apache/hadoop/hbase/client/Table;Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/Deque;Lorg/apache/hadoop/hbase/util/Pair;Z)V
+#run(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
+#run(Ljava/util/Map;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Map;
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
+#setBulkToken(Ljava/lang/String;)V
+#inferBoundaries(Ljava/util/SortedMap;)[[B
@2.1.7
+#setClusterIds(Ljava/util/List;)V
@2.1.8
+#disableReplication()V
@2.2.0
-#setClusterIds(Ljava/util/List;)V
-#disableReplication()V
@2.2.2
+#setClusterIds(Ljava/util/List;)V
@2.2.3
+#disableReplication()V
@2.2.6
+#initialize()V
@2.3.0
-#initialize()V
@2.3.2
+#initialize()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/tool/LoadIncrementalHFiles

+###org/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action
@2.0.0-beta-1
+#values()[Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;

+###org/apache/hadoop/hbase/regionserver/AdaptiveMemStoreCompactionStrategy
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#getAction(Lorg/apache/hadoop/hbase/regionserver/VersionedSegmentsList;)Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactionStrategy$Action;
+#updateStats(Lorg/apache/hadoop/hbase/regionserver/Segment;)V
+#resetStats()V

+###org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure$RegionSnapshotTask
@1.3.2
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;ZLorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;)V
+#call()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/snapshot/FlushSnapshotSubprocedure$RegionSnapshotTask

+###org/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType
@2.0.0-alpha3
+#values()[Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/CompactingMemStore$IndexType;

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker
@2.0.0-alpha3
+#beforeExecute(Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#afterExecute(Lorg/apache/hadoop/hbase/regionserver/Store;)V
@2.0.0-alpha4
+#notExecuted(Lorg/apache/hadoop/hbase/regionserver/Store;Ljava/lang/String;)V
+#beforeExecution(Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#afterExecution(Lorg/apache/hadoop/hbase/regionserver/Store;)V
+#completed()V
-#beforeExecute(Lorg/apache/hadoop/hbase/regionserver/Store;)V
-#afterExecute(Lorg/apache/hadoop/hbase/regionserver/Store;)V

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionRequestImpl
@2.0.0-alpha4
+#<init>(Ljava/util/Collection;)V
+#updateFiles(Ljava/util/Collection;)V
+#getFiles()Ljava/util/Collection;
+#setDescription(Ljava/lang/String;Ljava/lang/String;)V
+#getSize()J
+#isAllFiles()Z
+#isMajor()Z
+#getPriority()I
+#setPriority(I)V
+#isOffPeak()Z
+#setOffPeak(Z)V
+#getSelectionTime()J
+#setIsMajor(ZZ)V
+#setTracker(Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;)V
+#getTracker()Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;
+#toString()Ljava/lang/String;
@2.0.0-beta-1
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
@2.2.6
+#isAfterSplit()Z
+#setAfterSplit(Z)V
@2.5.0
+#getWriterCreationTracker()Ljava/util/function/Consumer;
+#setWriterCreationTracker(Ljava/util/function/Consumer;)V
@3.0.0-alpha-1
-#getWriterCreationTracker()Ljava/util/function/Consumer;
-#setWriterCreationTracker(Ljava/util/function/Consumer;)V
@3.0.0-alpha-3
+#getWriterCreationTracker()Ljava/util/function/Consumer;
+#setWriterCreationTracker(Ljava/util/function/Consumer;)V

+###org/apache/hadoop/hbase/regionserver/compactions/CompactionRequester
@2.0.0-alpha4
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
+#requestCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/compactions/CompactionLifeCycleTracker;Lorg/apache/hadoop/hbase/security/User;)V
@2.2.0
+#switchCompaction(Z)V
@2.5.0
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;Z)V
@3.0.0-alpha-1
-#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;Z)V
@3.0.0-alpha-2
+#requestSystemCompaction(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/HStore;Ljava/lang/String;Z)V

+###org/apache/hadoop/hbase/regionserver/CSLMImmutableSegment
@2.0.0-alpha4

+###org/apache/hadoop/hbase/regionserver/TimeRangeTracker$NonSyncTimeRangeTracker
@2.0.0-alpha4
+#getMin()J
+#getMax()J

+###org/apache/hadoop/hbase/regionserver/MutableOnlineRegions
@2.0.0-alpha4
+#addRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V
+#removeRegion(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/ServerName;)Z

+###org/apache/hadoop/hbase/regionserver/StoreFileReader$Listener
@2.0.3
+#storeFileReaderClosed(Lorg/apache/hadoop/hbase/regionserver/StoreFileReader;)V
@2.1.0
-###org/apache/hadoop/hbase/regionserver/StoreFileReader$Listener

+###org/apache/hadoop/hbase/regionserver/CellChunkImmutableSegment
@2.0.0-alpha4

+###org/apache/hadoop/hbase/security/access/AccessChecker
@1.3.5
+#isAuthorizationSupported(Lorg/apache/hadoop/conf/Configuration;)Z
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#getAuthManager()Lorg/apache/hadoop/hbase/security/access/TableAuthManager;
+#logResult(Lorg/apache/hadoop/hbase/security/access/AuthResult;)V
+#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireTablePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireAccess(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
@1.4.0
-###org/apache/hadoop/hbase/security/access/AccessChecker

+###org/apache/hadoop/hbase/security/visibility/VisibilityReplication
@2.0.0-alpha4
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#stop(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#getRegionServerObserver()Ljava/util/Optional;
+#postCreateReplicationEndPoint(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;)Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint;

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper$WorkerState
@2.0.0-alpha2
+#values()[Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper$WorkerState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper$WorkerState;

+###org/apache/hadoop/hbase/replication/regionserver/WALFileLengthProvider
@2.0.0-alpha3
+#getLogFileSizeIfBeingWritten(Lorg/apache/hadoop/fs/Path;)Ljava/util/OptionalLong;

+###org/apache/hadoop/hbase/tmpl/master/RSGroupListTmpl$ImplData
@2.0.0-beta-2
+#<init>()V
+#setMaster(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getMaster()Lorg/apache/hadoop/hbase/master/HMaster;
+#setServerManager(Lorg/apache/hadoop/hbase/master/ServerManager;)V
+#getServerManager()Lorg/apache/hadoop/hbase/master/ServerManager;

+###org/apache/hadoop/hbase/wal/NettyAsyncFSWALConfigHelper
@2.0.0-alpha2
+#<init>()V
+#setEventLoopConfig(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
@2.0.0-beta-1
+#setEventLoopConfig(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
-#setEventLoopConfig(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
@2.0.0
-#<init>()V

+###org/apache/hadoop/hbase/quotas/GlobalQuotaSettings
@2.0.0-alpha4
+#getQuotaSettings()Ljava/util/List;
+#getQuotaType()Lorg/apache/hadoop/hbase/quotas/QuotaType;

+###org/apache/hadoop/hbase/quotas/GlobalQuotaSettingsImpl
@2.0.0-alpha4
+#getQuotaSettings()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/compaction/MajorCompactor
@1.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Set;IJJ)V
+#compactAllRegions()V
+#shutdown()V
+#setNumServers(I)V
+#setNumRegions(I)V
+#setSkipWait(Z)V
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/compaction/MajorCompactor

+###org/apache/hadoop/hbase/util/NettyEventLoopGroupConfig
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#group()Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoopGroup;
+#serverChannelClass()Ljava/lang/Class;
+#clientChannelClass()Ljava/lang/Class;
@2.0.0-beta-1
+#group()Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;
-#group()Lorg/apache/hadoop/hbase/shaded/io/netty/channel/EventLoopGroup;
@3.0.0-alpha-2
+#setup(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/NettyEventLoopGroupConfig;

+###org/apache/hadoop/hbase/master/procedure/ProcedureDescriber
@2.0.0-alpha3
+#describe(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Ljava/lang/String;
+#describeParameters(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Ljava/lang/String;

+###org/apache/hadoop/hbase/master/procedure/MetaProcedureInterface
@2.0.1
+#getMetaOperationType()Lorg/apache/hadoop/hbase/master/procedure/MetaProcedureInterface$MetaOperationType;

+###org/apache/hadoop/hbase/master/procedure/RecoverMetaProcedure
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Z)V
+#<init>(Lorg/apache/hadoop/hbase/ServerName;ZLorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
+#<init>()V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
@2.0.1
-#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
@2.2.0
-#<init>(Lorg/apache/hadoop/hbase/ServerName;Z)V
-#<init>(Lorg/apache/hadoop/hbase/ServerName;ZLorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V

+###org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput
@2.0.0-beta-1
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FSDataOutputStream;)V
+#write([B)V
+#write([BII)V
+#writeInt(I)V
+#write(Ljava/nio/ByteBuffer;)V
+#buffered()I
+#getPipeline()[Lorg/apache/hadoop/hdfs/protocol/DatanodeInfo;
+#flush(Z)Ljava/util/concurrent/CompletableFuture;
+#recoverAndClose(Lorg/apache/hadoop/hbase/util/CancelableProgressable;)V
+#close()V
+#isBroken()Z
@2.2.6
+#getSyncedLength()J
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput

+###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity
@2.0.0-alpha4
+#<init>()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity

+###org/apache/hadoop/hbase/coprocessor/CoreCoprocessor
@2.0.0-alpha4

+###org/apache/hadoop/hbase/coprocessor/RegionServerCoprocessor
@2.0.0-alpha4
+#getRegionServerObserver()Ljava/util/Optional;

+###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity$RegionServerCoprocessorService
@2.0.0-alpha4
+#<init>(Lorg/apache/hadoop/hbase/coprocessor/SingletonCoprocessorService;)V
+#getServices()Ljava/lang/Iterable;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/coprocessor/CoprocessorServiceBackwardCompatiblity$RegionServerCoprocessorService

+###org/apache/hadoop/hbase/tool/DataBlockEncodingValidator
@2.0.1
+#<init>()V

+###org/apache/hadoop/hbase/tool/coprocessor/Branch1CoprocessorMethods
@2.0.1
+#<init>()V

+###org/apache/hadoop/hbase/tool/HFileContentValidator
@2.0.2
+#<init>()V
@2.1.0
-###org/apache/hadoop/hbase/tool/HFileContentValidator

+###org/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType
@2.0.0-beta-2
+#values()[Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/ChunkCreator$ChunkType;

+###org/apache/hadoop/hbase/regionserver/HRegion$BatchOperation$Visitor
@2.0.0-beta-1
+#visit(I)Z
@2.5.0
-###org/apache/hadoop/hbase/regionserver/HRegion$BatchOperation$Visitor

+###org/apache/hadoop/hbase/regionserver/DumpRegionServerMetrics
@2.0.0-alpha4
+#<init>()V
+#dumpMetrics()Ljava/lang/String;
+#main([Ljava/lang/String;)V
@2.0.0
-#<init>()V

+###org/apache/hadoop/hbase/regionserver/RegionServerTableMetrics
@1.3.2
+#<init>()V
+#updatePut(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateGet(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateIncrement(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateAppend(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateDelete(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateScanTime(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateScanSize(Lorg/apache/hadoop/hbase/TableName;J)V
@1.4.0
+#updatePutBatch(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateDeleteBatch(Lorg/apache/hadoop/hbase/TableName;J)V
@1.4.11
+#updateTableReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateTableReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
+#updateTableWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateTableWriteQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@1.7.0
+#<init>(Z)V
+#updateCheckAndDelete(Lorg/apache/hadoop/hbase/TableName;J)V
+#updateCheckAndPut(Lorg/apache/hadoop/hbase/TableName;J)V
-#<init>()V
-#updateTableReadQueryMeter(Lorg/apache/hadoop/hbase/TableName;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/RegionServerTableMetrics

+###org/apache/hadoop/hbase/security/visibility/VisibilityNewVersionBehaivorTracker
@2.0.0-alpha2
+#<init>(Ljava/util/NavigableSet;IIIJ)V
+#add(Lorg/apache/hadoop/hbase/Cell;)V
+#isDeleted(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/regionserver/querymatcher/DeleteTracker$DeleteResult;
@2.0.0-alpha4
+#<init>(Ljava/util/NavigableSet;Lorg/apache/hadoop/hbase/CellComparator;IIIJ)V
-#<init>(Ljava/util/NavigableSet;IIIJ)V

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader
@2.0.0-alpha2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/PriorityBlockingQueue;JLorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
+#run()V
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#take()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader$WALEntryBatch;
+#isReaderRunning()Z
+#setReaderRunning(Z)V
@2.1.0
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceWALReader

+###org/apache/hadoop/hbase/tmpl/master/RSGroupListTmpl$Intf
@2.0.0-beta-2
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/wal/WALEdit
@2.0.0-alpha3
+#<init>()V
+#<init>(Z)V
+#<init>(I)V
+#<init>(IZ)V
+#isMetaEditFamily([B)Z
+#isMetaEditFamily(Lorg/apache/hadoop/hbase/Cell;)Z
+#isMetaEdit()Z
+#isReplay()Z
+#add(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#isEmpty()Z
+#size()I
+#getCells()Ljava/util/ArrayList;
+#setCells(Ljava/util/ArrayList;)V
+#readFromCells(Lorg/apache/hadoop/hbase/codec/Codec$Decoder;I)I
+#heapSize()J
+#estimatedSerializedSizeOf()J
+#toString()Ljava/lang/String;
+#createFlushWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#getFlushDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;
+#createRegionEventWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#getRegionEventDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;
+#createCompaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#getRowForRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)[B
+#getCompaction(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;
+#isCompactionMarker(Lorg/apache/hadoop/hbase/Cell;)Z
+#createBulkLoadEvent(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#getBulkLoadDescriptor(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;
@2.0.0-alpha4
+#createFlushWALEdit(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#createRegionEventWALEdit(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#createCompaction(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#getRowForRegion(Lorg/apache/hadoop/hbase/client/RegionInfo;)[B
+#createBulkLoadEvent(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
-#createFlushWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$FlushDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
-#createRegionEventWALEdit(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
-#createCompaction(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$CompactionDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
-#getRowForRegion(Lorg/apache/hadoop/hbase/HRegionInfo;)[B
-#createBulkLoadEvent(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$BulkLoadDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
@2.0.2
*#<init>(Z)V[deprecated]
*#<init>(I)V[deprecated]
+#getFamilies()Ljava/util/Set;
+#add(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#add(Ljava/util/Map;)V
@2.1.8
*#isMetaEditFamily([B)Z[deprecated]
+#createRegionEventWALEdit([BLorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#createRegionEventDescriptorQualifier(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor$EventType;)[B
+#isRegionCloseMarker()Z
@2.2.0
-#createRegionEventWALEdit([BLorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
-#createRegionEventDescriptorQualifier(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor$EventType;)[B
-#isRegionCloseMarker()Z
@2.2.3
*#isMetaEditFamily([B)Z[deprecated]
+#createRegionEventWALEdit([BLorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor;)Lorg/apache/hadoop/hbase/wal/WALEdit;
+#createRegionEventDescriptorQualifier(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/WALProtos$RegionEventDescriptor$EventType;)[B
+#isRegionCloseMarker()Z
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/hbase/wal/WALEdit;)V
+#add(Ljava/util/List;)Lorg/apache/hadoop/hbase/wal/WALEdit;

+###org/apache/hadoop/hbase/ipc/RequestContext
@0.95.0
+#get()Lorg/apache/hadoop/hbase/ipc/RequestContext;
+#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
+#getRequestUserName()Ljava/lang/String;
+#isInRequestContext()Z
+#set(Lorg/apache/hadoop/hbase/security/User;Ljava/net/InetAddress;Ljava/lang/Class;)V
+#clear()V
+#getUser()Lorg/apache/hadoop/hbase/security/User;
+#getRemoteAddress()Ljava/net/InetAddress;
+#getProtocol()Ljava/lang/Class;
+#isInRequest()Z
@0.95.1-hadoop1
+#set(Lorg/apache/hadoop/hbase/security/User;Ljava/net/InetAddress;Lcom/google/protobuf/BlockingService;)V
+#getService()Lcom/google/protobuf/BlockingService;
-#set(Lorg/apache/hadoop/hbase/security/User;Ljava/net/InetAddress;Ljava/lang/Class;)V
-#getProtocol()Ljava/lang/Class;
@0.98.0-hadoop1
-#isInRequest()Z
@0.98.12-hadoop1
-###org/apache/hadoop/hbase/ipc/RequestContext

+###org/apache/hadoop/hbase/regionserver/RSRpcServices$QosPriority
@0.99.0
+#priority()I
@1.1.0
-###org/apache/hadoop/hbase/regionserver/RSRpcServices$QosPriority

+###org/apache/hadoop/hbase/HDFSBlocksDistribution$Visitor
@2.4.0
+#visit(Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;)J
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/HDFSBlocksDistribution$Visitor

+###org/apache/hadoop/hbase/YouAreDeadException
@2.4.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/coprocessor/ReadOnlyConfiguration
@2.3.7
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#setDeprecatedProperties()V
+#addResource(Ljava/lang/String;)V
+#addResource(Ljava/net/URL;)V
+#addResource(Lorg/apache/hadoop/fs/Path;)V
+#addResource(Ljava/io/InputStream;)V
+#addResource(Ljava/io/InputStream;Ljava/lang/String;)V
+#addResource(Lorg/apache/hadoop/conf/Configuration;)V
+#reloadConfiguration()V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#setAllowNullValueProperties(Z)V
+#getTrimmed(Ljava/lang/String;)Ljava/lang/String;
+#getTrimmed(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getRaw(Ljava/lang/String;)Ljava/lang/String;
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#set(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#unset(Ljava/lang/String;)V
+#setIfUnset(Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getInt(Ljava/lang/String;I)I
+#getInts(Ljava/lang/String;)[I
+#setInt(Ljava/lang/String;I)V
+#getLong(Ljava/lang/String;J)J
+#getLongBytes(Ljava/lang/String;J)J
+#setLong(Ljava/lang/String;J)V
+#getFloat(Ljava/lang/String;F)F
+#setFloat(Ljava/lang/String;F)V
+#getDouble(Ljava/lang/String;D)D
+#setDouble(Ljava/lang/String;D)V
+#getBoolean(Ljava/lang/String;Z)Z
+#setBoolean(Ljava/lang/String;Z)V
+#setBooleanIfUnset(Ljava/lang/String;Z)V
+#setEnum(Ljava/lang/String;Ljava/lang/Enum;)V
+#getEnum(Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum;
+#setTimeDuration(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)V
+#getTimeDuration(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)J
+#getPattern(Ljava/lang/String;Ljava/util/regex/Pattern;)Ljava/util/regex/Pattern;
+#setPattern(Ljava/lang/String;Ljava/util/regex/Pattern;)V
+#getPropertySources(Ljava/lang/String;)[Ljava/lang/String;
+#getRange(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
+#getStringCollection(Ljava/lang/String;)Ljava/util/Collection;
+#getStrings(Ljava/lang/String;)[Ljava/lang/String;
+#getStrings(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#getTrimmedStringCollection(Ljava/lang/String;)Ljava/util/Collection;
+#getTrimmedStrings(Ljava/lang/String;)[Ljava/lang/String;
+#getTrimmedStrings(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#setStrings(Ljava/lang/String;[Ljava/lang/String;)V
+#getPassword(Ljava/lang/String;)[C
+#getSocketAddr(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/net/InetSocketAddress;
+#getSocketAddr(Ljava/lang/String;Ljava/lang/String;I)Ljava/net/InetSocketAddress;
+#setSocketAddr(Ljava/lang/String;Ljava/net/InetSocketAddress;)V
+#updateConnectAddr(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
+#updateConnectAddr(Ljava/lang/String;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
+#getClassByName(Ljava/lang/String;)Ljava/lang/Class;
+#getClassByNameOrNull(Ljava/lang/String;)Ljava/lang/Class;
+#getClasses(Ljava/lang/String;[Ljava/lang/Class;)[Ljava/lang/Class;
+#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#getInstances(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
+#setClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
+#getLocalPath(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
+#getConfResourceAsInputStream(Ljava/lang/String;)Ljava/io/InputStream;
+#getConfResourceAsReader(Ljava/lang/String;)Ljava/io/Reader;
+#getFinalParameters()Ljava/util/Set;
+#size()I
+#clear()V
+#iterator()Ljava/util/Iterator;
+#writeXml(Ljava/io/OutputStream;)V
+#writeXml(Ljava/io/Writer;)V
+#getClassLoader()Ljava/lang/ClassLoader;
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#toString()Ljava/lang/String;
+#setQuietMode(Z)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#getValByRegex(Ljava/lang/String;)Ljava/util/Map;
@2.4.0
-###org/apache/hadoop/hbase/coprocessor/ReadOnlyConfiguration

+###org/apache/hadoop/hbase/generated/master/hbck_jsp
@2.0.6
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.1.0
-###org/apache/hadoop/hbase/generated/master/hbck_jsp

+###org/apache/hadoop/hbase/generated/master/namedQueueLog_jsp
@2.4.4
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.5.0
-###org/apache/hadoop/hbase/generated/master/namedQueueLog_jsp

+###org/apache/hadoop/hbase/generated/master/quotas_jsp
@2.2.1
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/master/rits_jsp
@1.7.2
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/generated/master/rits_jsp

+###org/apache/hadoop/hbase/io/hfile/BlockCacheFactory
@2.2.0
+#createBlockCache(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/hfile/BlockCache;

+###org/apache/hadoop/hbase/io/hfile/ExclusiveMemHFileBlock
@2.3.0
+#refCnt()I
+#retain()Lorg/apache/hadoop/hbase/io/hfile/ExclusiveMemHFileBlock;
+#release()Z
+#isSharedMem()Z
+#retain()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#retain()Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#retain()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;

+###org/apache/hadoop/hbase/io/hfile/FirstLevelBlockCache
@2.3.0
+#containsBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#setVictimCache(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V

+###org/apache/hadoop/hbase/io/hfile/HFileBlock$BlockDeserializer
@2.3.0
+#deserialize(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;
+#getDeserializerIdentifier()I
+#deserialize(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;

+###org/apache/hadoop/hbase/io/hfile/HFileBlockBuilder
@2.3.0
+#<init>()V
+#withBlockType(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withOnDiskSizeWithoutHeader(I)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withOnDiskDataSizeWithHeader(I)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withUncompressedSizeWithoutHeader(I)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withPrevBlockOffset(J)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withByteBuff(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withFillHeader(Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withOffset(J)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withNextBlockOnDiskSize(I)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withHFileContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withByteBuffAllocator(Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#withShared(Z)Lorg/apache/hadoop/hbase/io/hfile/HFileBlockBuilder;
+#build()Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;

+###org/apache/hadoop/hbase/io/hfile/HFileInfo
@2.3.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/conf/Configuration;)V
+#append([B[BZ)Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;
+#isReservedFileInfoKey([B)Z
+#clear()V
+#comparator()Ljava/util/Comparator;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#entrySet()Ljava/util/Set;
+#equals(Ljava/lang/Object;)Z
+#firstKey()[B
+#get(Ljava/lang/Object;)[B
+#hashCode()I
+#headMap([B)Ljava/util/SortedMap;
+#isEmpty()Z
+#keySet()Ljava/util/Set;
+#lastKey()[B
+#put([B[B)[B
+#putAll(Ljava/util/Map;)V
+#remove(Ljava/lang/Object;)[B
+#size()I
+#subMap([B[B)Ljava/util/SortedMap;
+#tailMap([B)Ljava/util/SortedMap;
+#values()Ljava/util/Collection;
+#initTrailerAndContext(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/conf/Configuration;)V
+#initMetaAndIndex(Lorg/apache/hadoop/hbase/io/hfile/HFile$Reader;)V
+#close()V
+#getMajorVersion()I
+#setTrailer(Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;)V
+#getTrailer()Lorg/apache/hadoop/hbase/io/hfile/FixedFileTrailer;
+#getDataBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$CellBasedKeyBlockIndexReader;
+#getMetaBlockIndexReader()Lorg/apache/hadoop/hbase/io/hfile/HFileBlockIndex$ByteArrayKeyBlockIndexReader;
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
+#getLoadOnOpenBlocks()Ljava/util/List;
+#getLastKeyCell()Lorg/apache/hadoop/hbase/Cell;
+#getAvgKeyLen()I
+#getAvgValueLen()I
+#shouldIncludeMemStoreTS()Z
+#isDecodeMemstoreTS()Z
+#lastKey()Ljava/lang/Object;
+#firstKey()Ljava/lang/Object;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/io/hfile/HFilePreadReader
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
+#close(Z)V

+###org/apache/hadoop/hbase/io/hfile/HFileStreamReader
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;Lorg/apache/hadoop/conf/Configuration;)V
+#close(Z)V

+###org/apache/hadoop/hbase/io/hfile/IndexOnlyLruBlockCache
@2.3.7
+#<init>(JJZLorg/apache/hadoop/conf/Configuration;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
@2.4.0
-###org/apache/hadoop/hbase/io/hfile/IndexOnlyLruBlockCache

+###org/apache/hadoop/hbase/io/hfile/LruAdaptiveBlockCache
@2.4.2
+#<init>(JJ)V
+#<init>(JJZ)V
+#<init>(JJZLorg/apache/hadoop/conf/Configuration;)V
+#<init>(JJLorg/apache/hadoop/conf/Configuration;)V
+#<init>(JJZIFIFFFFFFZJIJF)V
+#setVictimCache(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#setMaxSize(J)V
+#getCacheDataBlockPercent()I
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#containsBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#toString()Ljava/lang/String;
+#getMaxSize()J
+#getCurrentSize()J
+#getCurrentDataSize()J
+#getFreeSize()J
+#size()J
+#getBlockCount()J
+#getDataBlockCount()J
+#logStats()V
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#heapSize()J
+#iterator()Ljava/util/Iterator;
+#shutdown()V
+#clearCache()V
+#getEncodingCountsForTest()Ljava/util/Map;
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;

+###org/apache/hadoop/hbase/io/hfile/ReaderContext$ReaderType
@2.3.0
+#values()[Lorg/apache/hadoop/hbase/io/hfile/ReaderContext$ReaderType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/ReaderContext$ReaderType;

+###org/apache/hadoop/hbase/io/hfile/ReaderContext
@2.3.0
+#<init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;JLorg/apache/hadoop/hbase/fs/HFileSystem;ZLorg/apache/hadoop/hbase/io/hfile/ReaderContext$ReaderType;)V
+#getFilePath()Lorg/apache/hadoop/fs/Path;
+#getInputStreamWrapper()Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;
+#getFileSize()J
+#getFileSystem()Lorg/apache/hadoop/hbase/fs/HFileSystem;
+#isPrimaryReplicaReader()Z
+#getReaderType()Lorg/apache/hadoop/hbase/io/hfile/ReaderContext$ReaderType;
@2.4.13
+#isPreadAllBytes()Z
@3.0.0-alpha-1
-#isPreadAllBytes()Z
@3.0.0-alpha-3
+#isPreadAllBytes()Z

+###org/apache/hadoop/hbase/io/hfile/ReaderContextBuilder
@2.3.0
+#<init>()V
+#withFilePath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#withFileSize(J)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#withInputStreamWrapper(Lorg/apache/hadoop/hbase/io/FSDataInputStreamWrapper;)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#withFileSystem(Lorg/apache/hadoop/hbase/fs/HFileSystem;)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#withFileSystem(Lorg/apache/hadoop/fs/FileSystem;)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#withPrimaryReplicaReader(Z)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#withReaderType(Lorg/apache/hadoop/hbase/io/hfile/ReaderContext$ReaderType;)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#withFileSystemAndPath(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/hfile/ReaderContextBuilder;
+#build()Lorg/apache/hadoop/hbase/io/hfile/ReaderContext;

+###org/apache/hadoop/hbase/io/hfile/SharedMemHFileBlock
@2.3.0
+#isSharedMem()Z

+###org/apache/hadoop/hbase/io/hfile/TinyLfuBlockCache
@2.3.0
+#<init>(JJLjava/util/concurrent/Executor;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(JJJLjava/util/concurrent/Executor;)V
+#setVictimCache(Lorg/apache/hadoop/hbase/io/hfile/BlockCache;)V
+#size()J
+#getFreeSize()J
+#getCurrentSize()J
+#getBlockCount()J
+#heapSize()J
+#setMaxSize(J)V
+#containsBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#shutdown()V
+#getBlockCaches()[Lorg/apache/hadoop/hbase/io/hfile/BlockCache;
+#iterator()Ljava/util/Iterator;
+#toString()Ljava/lang/String;
+#getMaxSize()J
+#getCurrentDataSize()J
+#getDataBlockCount()J

+###org/apache/hadoop/hbase/io/hfile/bucket/ExclusiveMemoryMmapIOEngine
@2.2.4
+#<init>(Ljava/lang/String;J)V
+#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@2.3.0
+#read(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketEntry;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;

+###org/apache/hadoop/hbase/io/hfile/bucket/FileMmapIOEngine
@2.2.4
+#<init>(Ljava/lang/String;J)V
+#toString()Ljava/lang/String;
+#isPersistent()Z
+#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#write(Ljava/nio/ByteBuffer;J)V
+#write(Lorg/apache/hadoop/hbase/nio/ByteBuff;J)V
+#sync()V
+#shutdown()V
@2.3.0
+#read(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketEntry;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;

+###org/apache/hadoop/hbase/io/hfile/bucket/PersistentIOEngine
@1.4.11
+#calculateChecksum(Ljava/lang/String;)[B
+#verifyFileIntegrity([BLjava/lang/String;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/bucket/PersistentIOEngine

+###org/apache/hadoop/hbase/io/hfile/bucket/SharedMemoryMmapIOEngine
@2.2.4
+#<init>(Ljava/lang/String;J)V
+#usesSharedMemory()Z
+#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@2.3.0
+#read(Lorg/apache/hadoop/hbase/io/hfile/bucket/BucketEntry;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#read(JILorg/apache/hadoop/hbase/io/hfile/CacheableDeserializer;)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;

+###org/apache/hadoop/hbase/ipc/MasterFifoRpcScheduler
@2.1.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;II)V
+#start()V
+#stop()V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
+#getGeneralQueueLength()I
+#getActiveRpcHandlerCount()I
+#getCallQueueInfo()Lorg/apache/hadoop/hbase/ipc/CallQueueInfo;

+###org/apache/hadoop/hbase/ipc/MetaRWQueueRpcExecutor
@2.2.3
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V

+###org/apache/hadoop/hbase/ipc/PluggableBlockingQueue
@2.4.6
+#<init>(ILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/PluggableBlockingQueue

+###org/apache/hadoop/hbase/ipc/PluggableRpcQueueNotFound
@2.4.6
+#<init>(Ljava/lang/String;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/PluggableRpcQueueNotFound

+###org/apache/hadoop/hbase/ipc/ServerCall
@2.0.6
+#done()V
+#cleanup()V
+#retainByWAL()V
+#releaseByWAL()V
+#toString()Ljava/lang/String;
+#getHeader()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;
+#getPriority()I
+#toShortString()Ljava/lang/String;
+#setResponse(Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/Throwable;Ljava/lang/String;)V
+#disconnectSince()J
+#isClientCellBlockSupported()Z
+#getResponseCellSize()J
+#incrementResponseCellSize(J)V
+#getResponseBlockSize()J
+#incrementResponseBlockSize(J)V
+#getResponseExceptionSize()J
+#incrementResponseExceptionSize(J)V
+#getSize()J
+#getDeadline()J
+#getRequestUser()Ljava/util/Optional;
+#getRemoteAddress()Ljava/net/InetAddress;
+#getClientVersionInfo()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$VersionInfo;
+#setCallBack(Lorg/apache/hadoop/hbase/ipc/RpcCallback;)V
+#isRetryImmediatelySupported()Z
+#getService()Lorg/apache/hbase/thirdparty/com/google/protobuf/BlockingService;
+#getMethod()Lorg/apache/hbase/thirdparty/com/google/protobuf/Descriptors$MethodDescriptor;
+#getParam()Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;
+#getCellScanner()Lorg/apache/hadoop/hbase/CellScanner;
+#getReceiveTime()J
+#getStartTime()J
+#setStartTime(J)V
+#getTimeout()I
+#getRemotePort()I
+#getResponse()Lorg/apache/hadoop/hbase/ipc/BufferChain;
@2.1.0
-###org/apache/hadoop/hbase/ipc/ServerCall

+###org/apache/hadoop/hbase/master/CachedClusterId
@1.7.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getFromCacheOrFetch()Ljava/lang/String;
+#getCacheStats()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/CachedClusterId

+###org/apache/hadoop/hbase/master/HbckChore
@2.0.6
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#isDisabled()Z
+#isRunning()Z
+#getOrphanRegionsOnRS()Ljava/util/Map;
+#getOrphanRegionsOnFS()Ljava/util/Map;
+#getInconsistentRegions()Ljava/util/Map;
+#getCheckingStartTimestamp()J
+#getCheckingEndTimestamp()J
@2.1.0
-###org/apache/hadoop/hbase/master/HbckChore

+###org/apache/hadoop/hbase/master/MetaRegionLocationCache
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#getMetaRegionLocations()Ljava/util/List;
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/MetaRegionLocationCache

+###org/apache/hadoop/hbase/master/RegionsRecoveryChore
@1.6.0
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RegionsRecoveryChore

+###org/apache/hadoop/hbase/master/RegionsRecoveryConfigManager
@1.6.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RegionsRecoveryConfigManager

+###org/apache/hadoop/hbase/master/ServerManager$ServerLiveState
@2.2.1
+#values()[Lorg/apache/hadoop/hbase/master/ServerManager$ServerLiveState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/ServerManager$ServerLiveState;

+###org/apache/hadoop/hbase/master/SplitWALManager
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#splitWALs(Lorg/apache/hadoop/hbase/ServerName;Z)Ljava/util/List;
+#getWALsToSplit(Lorg/apache/hadoop/hbase/ServerName;Z)Ljava/util/List;
+#deleteSplitWAL(Ljava/lang/String;)V
+#deleteWALDir(Lorg/apache/hadoop/hbase/ServerName;)V
+#isSplitWALFinished(Ljava/lang/String;)Z
+#acquireSplitWALWorker(Lorg/apache/hadoop/hbase/procedure2/Procedure;)Lorg/apache/hadoop/hbase/ServerName;
+#releaseSplitWALWorker(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;)V
+#addUsedSplitWALWorker(Lorg/apache/hadoop/hbase/ServerName;)V
@2.3.7
+#archive(Ljava/lang/String;)V
-#deleteSplitWAL(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/master/assignment/CloseRegionProcedure
@2.2.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#newRemoteOperation()Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;

+###org/apache/hadoop/hbase/master/assignment/GCMultipleMergedRegionsProcedure
@2.0.6
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)V
+#<init>()V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
@2.1.0
-###org/apache/hadoop/hbase/master/assignment/GCMultipleMergedRegionsProcedure

+###org/apache/hadoop/hbase/master/assignment/OpenRegionProcedure
@2.2.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#newRemoteOperation()Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;

+###org/apache/hadoop/hbase/master/assignment/RegionRemoteProcedureBase
@2.2.0
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#remoteOperationCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
+#remoteOperationFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#storeInDispatchedQueue()Z
+#remoteOperationFailed(Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationCompleted(Ljava/lang/Object;)V
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
@2.3.0
+#getProcName()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/assignment/RegionStateNode
@2.2.0
+#setState(Lorg/apache/hadoop/hbase/master/RegionState$State;[Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#offline()Lorg/apache/hadoop/hbase/ServerName;
+#transitionState(Lorg/apache/hadoop/hbase/master/RegionState$State;[Lorg/apache/hadoop/hbase/master/RegionState$State;)V
+#isInState([Lorg/apache/hadoop/hbase/master/RegionState$State;)Z
+#isStuck()Z
+#isInTransition()Z
+#getLastUpdate()J
+#setLastHost(Lorg/apache/hadoop/hbase/ServerName;)V
+#setOpenSeqNum(J)V
+#setRegionLocation(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/ServerName;
+#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)V
+#unsetProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)V
+#getProcedure()Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#getProcedureEvent()Lorg/apache/hadoop/hbase/procedure2/ProcedureEvent;
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getTable()Lorg/apache/hadoop/hbase/TableName;
+#isSystemTable()Z
+#getLastHost()Lorg/apache/hadoop/hbase/ServerName;
+#getRegionLocation()Lorg/apache/hadoop/hbase/ServerName;
+#getState()Lorg/apache/hadoop/hbase/master/RegionState$State;
+#getOpenSeqNum()J
+#getFormatVersion()I
+#toRegionState()Lorg/apache/hadoop/hbase/master/RegionState;
+#compareTo(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toShortString()Ljava/lang/String;
+#toDescriptiveString()Ljava/lang/String;
+#checkOnline()V
+#lock()V
+#unlock()V
+#compareTo(Ljava/lang/Object;)I
@2.2.7
+#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
-#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)V
@2.3.0
+#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)V
-#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
@2.3.2
+#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
-#setProcedure(Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;)V
@2.5.0
+#isSplit()Z
@3.0.0-alpha-1
-#isSplit()Z
@3.0.0-alpha-2
+#isSplit()Z

+###org/apache/hadoop/hbase/master/assignment/ServerState
@2.2.0
+#values()[Lorg/apache/hadoop/hbase/master/assignment/ServerState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/assignment/ServerState;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/assignment/ServerState

+###org/apache/hadoop/hbase/master/assignment/ServerStateNode
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getState()Lorg/apache/hadoop/hbase/master/assignment/ServerState;
+#isInState([Lorg/apache/hadoop/hbase/master/assignment/ServerState;)Z
+#getRegionCount()I
+#getRegionInfoList()Ljava/util/List;
+#getSystemRegionInfoList()Ljava/util/List;
+#addRegion(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)V
+#removeRegion(Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;)V
+#readLock()Ljava/util/concurrent/locks/Lock;
+#writeLock()Ljava/util/concurrent/locks/Lock;
+#compareTo(Lorg/apache/hadoop/hbase/master/assignment/ServerStateNode;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure$TransitionType
@2.2.0
+#values()[Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure$TransitionType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure$TransitionType;

+###org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure
@2.2.0
+#<init>()V
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#reportTransition(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionStateTransition$TransitionCode;JJ)V
+#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#assign(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#unassign(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#reopen(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
+#move(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
@2.2.2
+#assign(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/RegionInfo;ZLorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure;
@2.2.7
+#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;)V
@2.3.0
+#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;)V
-#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;Z)V
@2.3.5
+#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;)V
@2.4.0
+#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;)V
-#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;Z)V
@2.4.2
+#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;Z)V
-#serverCrashed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/master/assignment/RegionStateNode;Lorg/apache/hadoop/hbase/ServerName;)V

+###org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction
@1.6.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction

+###org/apache/hadoop/hbase/master/balancer/MaintenanceLoadBalancer
@2.3.6
+#<init>()V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#setClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
+#balanceTable(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/List;
+#roundRobinAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#retainAssignment(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;
+#randomAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#initialize()V
+#regionOnline(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionOffline(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#postMasterStartupInitialize()V
+#updateBalancerStatus(Z)V
@2.4.0
-###org/apache/hadoop/hbase/master/balancer/MaintenanceLoadBalancer

+###org/apache/hadoop/hbase/master/cleaner/BaseTimeToLiveFileCleaner
@2.3.0
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
+#stop(Ljava/lang/String;)V
+#isStopped()Z

+###org/apache/hadoop/hbase/master/cleaner/DirScanPool
@1.4.11
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#shutdownNow()V
+#getSize()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/cleaner/DirScanPool

+###org/apache/hadoop/hbase/master/cleaner/ReplicationBarrierCleaner
@2.1.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/master/replication/ReplicationPeerManager;)V
@2.2.3
+#chore()V

+###org/apache/hadoop/hbase/master/cleaner/SnapshotCleanerChore
@1.5.0
+#<init>(Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/master/snapshot/SnapshotManager;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/cleaner/SnapshotCleanerChore

+###org/apache/hadoop/hbase/master/cleaner/TimeToLiveMasterLocalStoreHFileCleaner
@2.3.0
+#<init>()V

+###org/apache/hadoop/hbase/master/cleaner/TimeToLiveMasterLocalStoreWALCleaner
@2.3.0
+#<init>()V

+###org/apache/hadoop/hbase/master/janitor/CatalogJanitor
@2.4.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#setEnabled(Z)Z
+#getEnabled()Z
+#scan()I
+#getLastReport()Lorg/apache/hadoop/hbase/master/janitor/Report;
+#main([Ljava/lang/String;)V
@2.4.13
+#getLastReport()Lorg/apache/hadoop/hbase/master/janitor/CatalogJanitorReport;
-#getLastReport()Lorg/apache/hadoop/hbase/master/janitor/Report;
@3.0.0-alpha-1
+#getLastReport()Lorg/apache/hadoop/hbase/master/janitor/Report;
-#getLastReport()Lorg/apache/hadoop/hbase/master/janitor/CatalogJanitorReport;
@3.0.0-alpha-3
+#getLastReport()Lorg/apache/hadoop/hbase/master/janitor/CatalogJanitorReport;
-#getLastReport()Lorg/apache/hadoop/hbase/master/janitor/Report;

+###org/apache/hadoop/hbase/master/janitor/MetaFixer
@2.4.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#fix()V

+###org/apache/hadoop/hbase/master/janitor/Report
@2.4.0
+#<init>()V
+#getCreateTime()J
+#getHoles()Ljava/util/List;
+#getOverlaps()Ljava/util/List;
+#getMergedRegions()Ljava/util/Map;
+#getUnknownServers()Ljava/util/List;
+#getEmptyRegionInfo()Ljava/util/List;
+#isEmpty()Z
+#toString()Ljava/lang/String;
@2.4.13
-###org/apache/hadoop/hbase/master/janitor/Report

+###org/apache/hadoop/hbase/master/normalizer/RegionNormalizerManager
@2.4.0
+#registerChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#deregisterChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#start()V
+#stop()V
+#getRegionNormalizerChore()Lorg/apache/hadoop/hbase/ScheduledChore;
+#isNormalizerOn()Z
+#setNormalizerOn(Z)V
+#planSkipped(Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)V
+#getSkippedCount(Lorg/apache/hadoop/hbase/master/normalizer/NormalizationPlan$PlanType;)J
+#getSplitPlanCount()J
+#getMergePlanCount()J
+#normalizeRegions(Ljava/util/List;Z)Z

+###org/apache/hadoop/hbase/master/procedure/HBCKServerCrashProcedure
@2.2.3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;ZZ)V
+#<init>()V

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureEnv$FsUtilsLeaseRecovery
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#recoverFileLease(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V

+###org/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType
@2.1.0
+#values()[Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/procedure/PeerProcedureInterface
@2.1.0
+#getPeerId()Ljava/lang/String;
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/procedure/ServerRemoteProcedure
@2.1.4
+#<init>()V
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
+#remoteOperationCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
+#remoteOperationFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationFailed(Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationCompleted(Ljava/lang/Object;)V
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z
@2.2.0
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
-#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
-#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z

+###org/apache/hadoop/hbase/master/procedure/SplitWALProcedure
@2.2.0
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/ServerName;)V
+#getWAL()Ljava/lang/String;
+#getWorker()Lorg/apache/hadoop/hbase/ServerName;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;
@2.3.0
+#getProcName()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/procedure/SplitWALRemoteProcedure
@2.2.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;Ljava/lang/String;)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#getWAL()Ljava/lang/String;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
@2.3.0
+#getProcName()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/procedure/SwitchRpcThrottleProcedure
@2.2.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/quotas/RpcThrottleStorage;ZLorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;)V
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;
+#switchThrottleState(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Z)V
+#toStringClassDetails(Ljava/lang/StringBuilder;)V

+###org/apache/hadoop/hbase/master/procedure/SwitchRpcThrottleRemoteProcedure
@2.2.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Z)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;

+###org/apache/hadoop/hbase/master/region/MasterRegion
@2.3.0
+#update(Lorg/apache/hadoop/hbase/master/region/UpdateMasterRegion;)V
+#get(Lorg/apache/hadoop/hbase/client/Get;)Lorg/apache/hadoop/hbase/client/Result;
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
+#flush(Z)Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult;
+#requestRollAll()V
+#waitUntilWalRollFinished()V
+#close(Z)V
+#create(Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;)Lorg/apache/hadoop/hbase/master/region/MasterRegion;
@2.5.0
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#getRegionScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
@3.0.0-alpha-1
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/client/ResultScanner;
-#getRegionScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
@3.0.0-alpha-2
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#getRegionScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;
-#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/regionserver/RegionScanner;

+###org/apache/hadoop/hbase/master/region/MasterRegionFactory
@2.3.0
+#<init>()V
+#create(Lorg/apache/hadoop/hbase/Server;)Lorg/apache/hadoop/hbase/master/region/MasterRegion;

+###org/apache/hadoop/hbase/master/region/MasterRegionParams
@2.3.0
+#<init>()V
+#server(Lorg/apache/hadoop/hbase/Server;)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#regionDirName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#tableDescriptor(Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#flushSize(J)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#flushPerChanges(J)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#flushIntervalMs(J)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#compactMin(I)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#maxWals(I)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#useHsync(Z)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#ringBufferSlotCount(I)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#rollPeriodMs(J)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#archivedWalSuffix(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#archivedHFileSuffix(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#useMetaCellComparator(Z)Lorg/apache/hadoop/hbase/master/region/MasterRegionParams;
+#server()Lorg/apache/hadoop/hbase/Server;
+#regionDirName()Ljava/lang/String;
+#tableDescriptor()Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#flushSize()J
+#flushPerChanges()J
+#flushIntervalMs()J
+#compactMin()I
+#maxWals()I
+#useHsync()Ljava/lang/Boolean;
+#ringBufferSlotCount()I
+#rollPeriodMs()J
+#archivedWalSuffix()Ljava/lang/String;
+#archivedHFileSuffix()Ljava/lang/String;
+#useMetaCellComparator()Ljava/lang/Boolean;

+###org/apache/hadoop/hbase/master/region/MasterRegionWALRoller
@2.3.0

+###org/apache/hadoop/hbase/master/region/UpdateMasterRegion
@2.3.0
+#update(Lorg/apache/hadoop/hbase/regionserver/HRegion;)V

+###org/apache/hadoop/hbase/master/replication/AbstractPeerProcedure
@2.1.0
+#getLatch()Lorg/apache/hadoop/hbase/master/procedure/ProcedurePrepareLatch;
+#getPeerId()Ljava/lang/String;
@3.0.0-alpha-1
-#getPeerId()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/replication/AddPeerProcedure
@2.1.0
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/replication/DisablePeerProcedure
@2.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/replication/EnablePeerProcedure
@2.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/replication/ModifyPeerProcedure
@2.1.0

+###org/apache/hadoop/hbase/master/replication/RefreshPeerProcedure
@2.1.0
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;Lorg/apache/hadoop/hbase/ServerName;)V
+#getPeerId()Ljava/lang/String;
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
+#remoteOperationCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
+#remoteOperationFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationFailed(Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationCompleted(Ljava/lang/Object;)V
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
@2.1.2
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z
-#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
-#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
@2.1.4
-#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)Z
-#remoteOperationCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
-#remoteOperationFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
-#remoteOperationFailed(Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
-#remoteOperationCompleted(Ljava/lang/Object;)V
-#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)Z
@2.2.0
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;
-#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
-#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher$RemoteOperation;
@3.0.0-alpha-1
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;Lorg/apache/hadoop/hbase/ServerName;I)V

+###org/apache/hadoop/hbase/master/replication/RemovePeerProcedure
@2.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/replication/ReplicationPeerManager
@2.1.0
+#addPeer(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;Z)V
+#removePeer(Ljava/lang/String;)V
+#enablePeer(Ljava/lang/String;)V
+#disablePeer(Ljava/lang/String;)V
+#updatePeerConfig(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#listPeers(Ljava/util/regex/Pattern;)Ljava/util/List;
+#getPeerConfig(Ljava/lang/String;)Ljava/util/Optional;
+#getSerialPeerIdsBelongsTo(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getQueueStorage()Lorg/apache/hadoop/hbase/replication/ReplicationQueueStorage;
+#create(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/replication/ReplicationPeerManager;
@2.4.0
+#create(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/replication/ReplicationPeerManager;
-#create(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/master/replication/ReplicationPeerManager;
@3.0.0-alpha-1
+#setPeerNewSyncReplicationState(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
+#transitPeerSyncReplicationState(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
+#removeAllQueues(Ljava/lang/String;)V
+#removeAllQueuesAndHFileRefs(Ljava/lang/String;)V
+#acquireSyncReplicationPeerLock()V
+#releaseSyncReplicationPeerLock()V

+###org/apache/hadoop/hbase/master/replication/UpdatePeerConfigProcedure
@2.1.0
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/ReplicationPeerConfig;)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/slowlog/SlowLogMasterService
@1.7.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#init()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/slowlog/SlowLogMasterService

+###org/apache/hadoop/hbase/master/webapp/MetaBrowser$Results
@2.3.0
+#hasMoreResults()Z
+#close()V
+#iterator()Ljava/util/Iterator;
@2.5.0
-###org/apache/hadoop/hbase/master/webapp/MetaBrowser$Results

+###org/apache/hadoop/hbase/master/webapp/MetaBrowser
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/client/AsyncConnection;Ljavax/servlet/http/HttpServletRequest;)V
+#getErrorMessages()Ljava/util/List;
+#getName()Ljava/lang/String;
+#getScanLimit()Ljava/lang/Integer;
+#getScanStart()[B
+#getScanRegionState()Lorg/apache/hadoop/hbase/master/RegionState$State;
+#getScanTable()Lorg/apache/hadoop/hbase/TableName;
+#getResults()Lorg/apache/hadoop/hbase/master/webapp/MetaBrowser$Results;
+#toString()Ljava/lang/String;
+#buildFirstPageUrl()Ljava/lang/String;
+#buildNextPageUrl([B)Ljava/lang/String;
@2.5.0
-###org/apache/hadoop/hbase/master/webapp/MetaBrowser

+###org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo
@2.3.0
+#from(Lorg/apache/hadoop/hbase/client/Result;)Ljava/util/List;
+#getRow()[B
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getRegionName()[B
+#getStartKey()[B
+#getEndKey()[B
+#getReplicaId()Ljava/lang/Integer;
+#getRegionState()Lorg/apache/hadoop/hbase/master/RegionState$State;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getSeqNum()J
+#getTargetServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getMergeRegionInfo()Ljava/util/Map;
+#getSplitRegionInfo()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@2.5.0
-###org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo

+###org/apache/hadoop/hbase/master/zksyncer/ClientZKSyncer
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/Server;)V
+#start()V
+#nodeCreated(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/master/zksyncer/MasterAddressSyncer
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/Server;)V

+###org/apache/hadoop/hbase/master/zksyncer/MetaLocationSyncer
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/hbase/Server;)V
@2.4.0
+#setMetaReplicaCount(I)V

+###org/apache/hadoop/hbase/mob/ManualMobMaintHFileCleaner
@2.1.8
+#<init>()V
+#isFileDeletable(Lorg/apache/hadoop/fs/FileStatus;)Z
@2.2.0
-###org/apache/hadoop/hbase/mob/ManualMobMaintHFileCleaner

+###org/apache/hadoop/hbase/mob/MobCell
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/Cell;)V
+#<init>(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/regionserver/StoreFileScanner;)V
+#getCell()Lorg/apache/hadoop/hbase/Cell;
+#close()V

+###org/apache/hadoop/hbase/namequeues/BalancerDecisionDetails
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/client/BalancerDecision;)V
+#getBalancerDecision()Lorg/apache/hadoop/hbase/client/BalancerDecision;
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/BalancerDecisionDetails

+###org/apache/hadoop/hbase/namequeues/BalancerRejectionDetails
@2.4.3
+#<init>(Lorg/apache/hadoop/hbase/client/BalancerRejection;)V
+#getBalancerRejection()Lorg/apache/hadoop/hbase/client/BalancerRejection;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/namequeues/LogHandlerUtils
@1.7.0
+#getFilteredLogs(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SlowLogResponseRequest;Ljava/util/List;)Ljava/util/List;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/LogHandlerUtils

+###org/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent
@1.7.0
+#values()[Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#getEventByOrdinal(I)Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#getValue()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent

+###org/apache/hadoop/hbase/namequeues/NamedQueuePayload
@1.7.0
+#<init>(I)V
+#getNamedQueueEvent()Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/NamedQueuePayload

+###org/apache/hadoop/hbase/namequeues/NamedQueueRecorder
@1.7.0
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;
+#getNamedQueueRecords(Lorg/apache/hadoop/hbase/namequeues/request/NamedQueueGetRequest;)Lorg/apache/hadoop/hbase/namequeues/response/NamedQueueGetResponse;
+#clearNamedQueue(Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;)Z
+#addRecord(Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload;)V
+#persistAll(Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;)V
@1.7.2
+#close()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/NamedQueueRecorder

+###org/apache/hadoop/hbase/namequeues/NamedQueueService
@1.7.0
+#getEvent()Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#consumeEventFromDisruptor(Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload;)V
+#clearNamedQueue()Z
+#getNamedQueueRecords(Lorg/apache/hadoop/hbase/namequeues/request/NamedQueueGetRequest;)Lorg/apache/hadoop/hbase/namequeues/response/NamedQueueGetResponse;
+#persistAll()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/NamedQueueService

+###org/apache/hadoop/hbase/namequeues/RpcLogDetails
@1.7.0
+#<init>(Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;Ljava/lang/String;JLjava/lang/String;ZZJJLjava/lang/String;)V
+#getMethodDescriptor()Lcom/google/protobuf/Descriptors$MethodDescriptor;
+#getClientAddress()Ljava/lang/String;
+#getResponseSize()J
+#getClassName()Ljava/lang/String;
+#isSlowLog()Z
+#isLargeLog()Z
+#getParam()Lcom/google/protobuf/Message;
+#getReceiveTime()J
+#getStartTime()J
+#getUserName()Ljava/lang/String;
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/RpcLogDetails

+###org/apache/hadoop/hbase/namequeues/SlowLogPersistentService
@1.7.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#addToQueueForSysTable(Lorg/apache/hadoop/hbase/protobuf/generated/TooSlowLog$SlowLogPayload;)V
+#addAllLogsToSysTable()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/SlowLogPersistentService

+###org/apache/hadoop/hbase/namequeues/SlowLogTableOpsChore
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/Stoppable;ILorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/SlowLogTableOpsChore

+###org/apache/hadoop/hbase/namequeues/impl/BalancerDecisionQueueService
@1.7.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getEvent()Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#consumeEventFromDisruptor(Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload;)V
+#clearNamedQueue()Z
+#getNamedQueueRecords(Lorg/apache/hadoop/hbase/namequeues/request/NamedQueueGetRequest;)Lorg/apache/hadoop/hbase/namequeues/response/NamedQueueGetResponse;
+#persistAll()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/impl/BalancerDecisionQueueService

+###org/apache/hadoop/hbase/namequeues/impl/BalancerRejectionQueueService
@2.4.3
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getEvent()Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#consumeEventFromDisruptor(Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload;)V
+#clearNamedQueue()Z
+#getNamedQueueRecords(Lorg/apache/hadoop/hbase/namequeues/request/NamedQueueGetRequest;)Lorg/apache/hadoop/hbase/namequeues/response/NamedQueueGetResponse;
+#persistAll()V

+###org/apache/hadoop/hbase/namequeues/impl/SlowLogQueueService
@1.7.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getEvent()Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#consumeEventFromDisruptor(Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload;)V
+#clearNamedQueue()Z
+#getNamedQueueRecords(Lorg/apache/hadoop/hbase/namequeues/request/NamedQueueGetRequest;)Lorg/apache/hadoop/hbase/namequeues/response/NamedQueueGetResponse;
+#persistAll()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/impl/SlowLogQueueService

+###org/apache/hadoop/hbase/namequeues/request/NamedQueueGetRequest
@1.7.0
+#<init>()V
+#getSlowLogResponseRequest()Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SlowLogResponseRequest;
+#setSlowLogResponseRequest(Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$SlowLogResponseRequest;)V
+#getBalancerDecisionsRequest()Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalancerDecisionsRequest;
+#setBalancerDecisionsRequest(Lorg/apache/hadoop/hbase/protobuf/generated/MasterProtos$BalancerDecisionsRequest;)V
+#getNamedQueueEvent()Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#setNamedQueueEvent(I)V
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/request/NamedQueueGetRequest

+###org/apache/hadoop/hbase/namequeues/response/NamedQueueGetResponse
@1.7.0
+#<init>()V
+#getSlowLogPayloads()Ljava/util/List;
+#setSlowLogPayloads(Ljava/util/List;)V
+#getBalancerDecisions()Ljava/util/List;
+#setBalancerDecisions(Ljava/util/List;)V
+#getNamedQueueEvent()Lorg/apache/hadoop/hbase/namequeues/NamedQueuePayload$NamedQueueEvent;
+#setNamedQueueEvent(I)V
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/response/NamedQueueGetResponse

+###org/apache/hadoop/hbase/procedure2/RSProcedureCallable
@2.1.0
+#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;

+###org/apache/hadoop/hbase/procedure2/store/region/HFileProcedurePrettyPrinter
@2.3.0
+#<init>()V
+#<init>(Ljava/io/PrintStream;)V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/region/MasterRegion;Lorg/apache/hadoop/hbase/procedure2/store/LeaseRecovery;)V
+#start(I)V
+#stop(Z)V
+#getNumThreads()I
+#setRunningProcedureCount(I)I
+#recoverLease()V
+#load(Lorg/apache/hadoop/hbase/procedure2/store/ProcedureStore$ProcedureLoader;)V
+#insert(Lorg/apache/hadoop/hbase/procedure2/Procedure;[Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#insert([Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#update(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#delete(J)V
+#delete(Lorg/apache/hadoop/hbase/procedure2/Procedure;[J)V
+#delete([JII)V
+#cleanup()V

+###org/apache/hadoop/hbase/procedure2/store/region/WALProcedurePrettyPrinter
@2.3.0
+#<init>()V
+#<init>(Ljava/io/PrintStream;)V
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/quotas/ExceedOperationQuota
@2.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;[Lorg/apache/hadoop/hbase/quotas/QuotaLimiter;)V
+#checkQuota(III)V
+#close()V

+###org/apache/hadoop/hbase/quotas/FileArchiverNotifier
@2.1.8
+#addArchivedFiles(Ljava/util/Set;)V
+#computeAndStoreSnapshotSizes(Ljava/util/Collection;)J
@2.2.0
-###org/apache/hadoop/hbase/quotas/FileArchiverNotifier

+###org/apache/hadoop/hbase/quotas/FileArchiverNotifierFactory
@2.1.8
+#get(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/FileArchiverNotifier;
@2.2.0
-###org/apache/hadoop/hbase/quotas/FileArchiverNotifierFactory

+###org/apache/hadoop/hbase/quotas/FileArchiverNotifierFactoryImpl
@2.1.8
+#getInstance()Lorg/apache/hadoop/hbase/quotas/FileArchiverNotifierFactory;
+#get(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/quotas/FileArchiverNotifier;
+#getCacheSize()I
@2.2.0
-###org/apache/hadoop/hbase/quotas/FileArchiverNotifierFactoryImpl

+###org/apache/hadoop/hbase/quotas/FileArchiverNotifierImpl$QuotaSnapshotSizeSerializationException
@2.1.8
+#<init>(Ljava/lang/String;)V
@2.2.0
-###org/apache/hadoop/hbase/quotas/FileArchiverNotifierImpl$QuotaSnapshotSizeSerializationException

+###org/apache/hadoop/hbase/quotas/FileArchiverNotifierImpl
@2.1.8
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/hbase/TableName;)V
+#addArchivedFiles(Ljava/util/Set;)V
+#computeAndStoreSnapshotSizes(Ljava/util/Collection;)J
+#toString()Ljava/lang/String;
@2.2.0
-###org/apache/hadoop/hbase/quotas/FileArchiverNotifierImpl

+###org/apache/hadoop/hbase/quotas/NoOpRegionSizeStore
@2.1.8
+#getInstance()Lorg/apache/hadoop/hbase/quotas/NoOpRegionSizeStore;
+#iterator()Ljava/util/Iterator;
+#heapSize()J
+#getRegionSize(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#put(Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#incrementRegionSize(Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#remove(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#size()I
+#isEmpty()Z
+#clear()V
@2.2.0
-###org/apache/hadoop/hbase/quotas/NoOpRegionSizeStore

+###org/apache/hadoop/hbase/quotas/RegionSize
@2.1.8
+#setSize(J)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#incrementSize(J)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#getSize()J
@2.2.0
-###org/apache/hadoop/hbase/quotas/RegionSize

+###org/apache/hadoop/hbase/quotas/RegionSizeImpl
@2.1.8
+#<init>(J)V
+#heapSize()J
+#setSize(J)Lorg/apache/hadoop/hbase/quotas/RegionSizeImpl;
+#incrementSize(J)Lorg/apache/hadoop/hbase/quotas/RegionSizeImpl;
+#getSize()J
+#incrementSize(J)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#setSize(J)Lorg/apache/hadoop/hbase/quotas/RegionSize;
@2.2.0
-###org/apache/hadoop/hbase/quotas/RegionSizeImpl

+###org/apache/hadoop/hbase/quotas/RegionSizeReportingChore
@2.1.8
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
@2.2.0
-###org/apache/hadoop/hbase/quotas/RegionSizeReportingChore

+###org/apache/hadoop/hbase/quotas/RegionSizeStore
@2.1.8
+#getRegionSize(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#put(Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#incrementRegionSize(Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#remove(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#size()I
+#isEmpty()Z
+#clear()V
@2.2.0
-###org/apache/hadoop/hbase/quotas/RegionSizeStore

+###org/apache/hadoop/hbase/quotas/RegionSizeStoreFactory
@2.1.8
+#getInstance()Lorg/apache/hadoop/hbase/quotas/RegionSizeStoreFactory;
+#createStore()Lorg/apache/hadoop/hbase/quotas/RegionSizeStore;
@2.2.0
-###org/apache/hadoop/hbase/quotas/RegionSizeStoreFactory

+###org/apache/hadoop/hbase/quotas/RegionSizeStoreImpl
@2.1.8
+#<init>()V
+#iterator()Ljava/util/Iterator;
+#getRegionSize(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#put(Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#incrementRegionSize(Lorg/apache/hadoop/hbase/client/RegionInfo;J)V
+#remove(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/quotas/RegionSize;
+#heapSize()J
+#size()I
+#isEmpty()Z
+#clear()V
@2.2.0
-###org/apache/hadoop/hbase/quotas/RegionSizeStoreImpl

+###org/apache/hadoop/hbase/quotas/RpcThrottleStorage
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)V
+#isRpcThrottleEnabled()Z
+#switchRpcThrottle(Z)V

+###org/apache/hadoop/hbase/regionserver/DelimitedKeyPrefixRegionSplitRestriction
@2.4.3
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
+#getRestrictedSplitPoint([B)[B

+###org/apache/hadoop/hbase/regionserver/HRegionWALFileSystem
@2.1.9
+#archiveRecoveredEdits(Ljava/lang/String;Ljava/util/Collection;)V
@2.2.0
-###org/apache/hadoop/hbase/regionserver/HRegionWALFileSystem

+###org/apache/hadoop/hbase/regionserver/KeyPrefixRegionSplitRestriction
@2.4.3
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
+#getRestrictedSplitPoint([B)[B

+###org/apache/hadoop/hbase/regionserver/LeaseManager$LeaseStillHeldException
@2.3.0
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hbase/regionserver/LeaseManager
@2.3.0
+#<init>(I)V
+#run()V
+#closeAfterLeasesExpire()V
+#close()V
+#createLease(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/LeaseListener;)Lorg/apache/hadoop/hbase/regionserver/LeaseManager$Lease;
+#addLease(Lorg/apache/hadoop/hbase/regionserver/LeaseManager$Lease;)V
+#renewLease(Ljava/lang/String;)V
+#cancelLease(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/regionserver/MasterFifoRpcSchedulerFactory
@2.1.1
+#<init>()V
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/hbase/Abortable;)Lorg/apache/hadoop/hbase/ipc/RpcScheduler;

+###org/apache/hadoop/hbase/regionserver/MetricsUserAggregate
@1.6.0
+#updatePut(J)V
+#updateDelete(J)V
+#updateGet(J)V
+#updateIncrement(J)V
+#updateAppend(J)V
+#updateReplay(J)V
+#updateScanTime(J)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/MetricsUserAggregate

+###org/apache/hadoop/hbase/regionserver/MetricsUserAggregateFactory
@1.6.0
+#getMetricsUserAggregate(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/MetricsUserAggregate;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/MetricsUserAggregateFactory

+###org/apache/hadoop/hbase/regionserver/MetricsUserAggregateImpl
@1.6.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#updatePut(J)V
+#updateDelete(J)V
+#updateGet(J)V
+#updateIncrement(J)V
+#updateAppend(J)V
+#updateReplay(J)V
+#updateScanTime(J)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/MetricsUserAggregateImpl

+###org/apache/hadoop/hbase/regionserver/NoRegionSplitRestriction
@2.4.3
+#<init>()V
+#initialize(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
+#getRestrictedSplitPoint([B)[B

+###org/apache/hadoop/hbase/regionserver/RegionSplitRestriction
@2.4.3
+#<init>()V
+#create(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/regionserver/RegionSplitRestriction;
+#initialize(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
+#getRestrictedSplitPoint([B)[B

+###org/apache/hadoop/hbase/regionserver/SplitWALCallable$ErrorWALSplitException
@2.3.0

+###org/apache/hadoop/hbase/regionserver/SplitWALCallable$PreemptedWALSplitException
@2.3.0

+###org/apache/hadoop/hbase/regionserver/SplitWALCallable$ResignedWALSplitException
@2.3.0

+###org/apache/hadoop/hbase/regionserver/SplitWALCallable
@2.2.0
+#<init>()V
+#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;
+#call()Ljava/lang/Void;
+#getWalPath()Ljava/lang/String;
+#call()Ljava/lang/Object;
@2.5.0
-#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
-#call()Ljava/lang/Void;
-#call()Ljava/lang/Object;

+###org/apache/hadoop/hbase/regionserver/StoreContext$Builder
@2.4.1
+#<init>()V
+#withBlockSize(I)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withEncryptionContext(Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withCacheConfig(Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withRegionFileSystem(Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withCellComparator(Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withBloomType(Lorg/apache/hadoop/hbase/regionserver/BloomType;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withCompactedFilesSupplier(Ljava/util/function/Supplier;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withFavoredNodesSupplier(Ljava/util/function/Supplier;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withColumnFamilyDescriptor(Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withFamilyStoreDirectoryPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#withRegionCoprocessorHost(Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;)Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#build()Lorg/apache/hadoop/hbase/regionserver/StoreContext;

+###org/apache/hadoop/hbase/regionserver/StoreContext
@2.4.1
+#getBlockSize()I
+#getEncryptionContext()Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;
+#getCacheConf()Lorg/apache/hadoop/hbase/io/hfile/CacheConfig;
+#getRegionFileSystem()Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;
+#getComparator()Lorg/apache/hadoop/hbase/CellComparator;
+#getBloomFilterType()Lorg/apache/hadoop/hbase/regionserver/BloomType;
+#getCompactedFilesSupplier()Ljava/util/function/Supplier;
+#getFavoredNodes()[Ljava/net/InetSocketAddress;
+#getFamily()Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;
+#getFamilyStoreDirectoryPath()Lorg/apache/hadoop/fs/Path;
+#getCoprocessorHost()Lorg/apache/hadoop/hbase/regionserver/RegionCoprocessorHost;
+#getBuilder()Lorg/apache/hadoop/hbase/regionserver/StoreContext$Builder;
+#heapSize()J
@2.5.0
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#isPrimaryReplicaStore()Z
@3.0.0-alpha-1
-#getTableName()Lorg/apache/hadoop/hbase/TableName;
-#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
-#isPrimaryReplicaStore()Z
@3.0.0-alpha-3
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#isPrimaryReplicaStore()Z

+###org/apache/hadoop/hbase/regionserver/handler/AssignRegionHandler
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Lorg/apache/hadoop/hbase/client/RegionInfo;JLorg/apache/hadoop/hbase/client/TableDescriptor;JLorg/apache/hadoop/hbase/executor/EventType;)V
+#process()V
+#create(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Lorg/apache/hadoop/hbase/client/RegionInfo;JLorg/apache/hadoop/hbase/client/TableDescriptor;J)Lorg/apache/hadoop/hbase/regionserver/handler/AssignRegionHandler;

+###org/apache/hadoop/hbase/regionserver/handler/RSProcedureHandler
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;JLorg/apache/hadoop/hbase/procedure2/RSProcedureCallable;)V
+#process()V

+###org/apache/hadoop/hbase/regionserver/handler/UnassignRegionHandler
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/lang/String;JZLorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/executor/EventType;)V
+#process()V
+#create(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/lang/String;JZLorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/regionserver/handler/UnassignRegionHandler;

+###org/apache/hadoop/hbase/regionserver/throttle/StoreHotnessProtector
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/Region;Lorg/apache/hadoop/conf/Configuration;)V
+#init(Lorg/apache/hadoop/conf/Configuration;)V
+#update(Lorg/apache/hadoop/conf/Configuration;)V
+#start(Ljava/util/Map;)V
+#finish(Ljava/util/Map;)V
+#toString()Ljava/lang/String;
+#isEnable()Z

+###org/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex
@2.1.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/wal/CompressionContext$DictionaryIndex;

+###org/apache/hadoop/hbase/regionserver/wal/SyncFutureCache
@1.7.1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getIfPresentOrNew()Lorg/apache/hadoop/hbase/regionserver/wal/SyncFuture;
+#offer(Lorg/apache/hadoop/hbase/regionserver/wal/SyncFuture;)V
+#clear()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/wal/SyncFutureCache

+###org/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason
@1.5.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/wal/WALActionsListener$RollRequestReason

+###org/apache/hadoop/hbase/replication/ReplicationSinkServiceImpl
@2.4.0
+#<init>()V
+#replicateLogEntries(Ljava/util/List;Lorg/apache/hadoop/hbase/CellScanner;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#initialize(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/wal/WALFactory;)V
+#startReplicationService()V
+#stopReplicationService()V
+#refreshAndGetReplicationLoad()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationLoad;

+###org/apache/hadoop/hbase/replication/VerifyWALEntriesReplicationEndpoint
@1.5.0
+#<init>()V
+#canReplicateToSameCluster()Z
+#getPeerUUID()Ljava/util/UUID;
+#getWALEntryfilter()Lorg/apache/hadoop/hbase/replication/WALEntryFilter;
+#replicate(Lorg/apache/hadoop/hbase/replication/ReplicationEndpoint$ReplicateContext;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/VerifyWALEntriesReplicationEndpoint

+###org/apache/hadoop/hbase/replication/regionserver/PeerProcedureHandler
@2.1.0
+#addPeer(Ljava/lang/String;)V
+#removePeer(Ljava/lang/String;)V
+#disablePeer(Ljava/lang/String;)V
+#enablePeer(Ljava/lang/String;)V
+#updatePeerConfig(Ljava/lang/String;)V
@2.5.0
+#claimReplicationQueue(Lorg/apache/hadoop/hbase/ServerName;Ljava/lang/String;)V
@3.0.0-alpha-1
+#transitSyncReplicationPeerState(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/HRegionServer;)V

+###org/apache/hadoop/hbase/replication/regionserver/PeerProcedureHandlerImpl
@2.1.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V
+#addPeer(Ljava/lang/String;)V
+#removePeer(Ljava/lang/String;)V
+#enablePeer(Ljava/lang/String;)V
+#disablePeer(Ljava/lang/String;)V
+#updatePeerConfig(Ljava/lang/String;)V
@2.5.0
+#claimReplicationQueue(Lorg/apache/hadoop/hbase/ServerName;Ljava/lang/String;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/replication/regionserver/PeerActionListener;)V
+#transitSyncReplicationPeerState(Ljava/lang/String;ILorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;)V

+###org/apache/hadoop/hbase/replication/regionserver/RefreshPeerCallable
@2.1.0
+#<init>()V
+#call()Ljava/lang/Void;
+#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;
+#call()Ljava/lang/Object;
@2.5.0
-#call()Ljava/lang/Void;
-#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
-#call()Ljava/lang/Object;

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationRuntimeException
@2.3.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue
@1.7.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;)V
+#enqueueLog(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#getQueueSize(Ljava/lang/String;)I
+#getNumQueues()I
+#getQueues()Ljava/util/Map;
+#getQueue(Ljava/lang/String;)Ljava/util/concurrent/PriorityBlockingQueue;
+#remove(Ljava/lang/String;)V
+#clear(Ljava/lang/String;)V
+#getMetrics()Lorg/apache/hadoop/hbase/replication/regionserver/MetricsSource;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder
@1.5.0
+#<init>()V
+#withPeerId(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#withFileSize(J)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#withWalGroup(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#withCurrentPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#withQueueSize(I)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#withAgeOfLastShippedOp(J)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#withReplicationDelay(J)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#withCurrentPosition(J)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
+#build()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationStatus
@1.5.0
+#getCurrentPosition()J
+#getFileSize()J
+#getPeerId()Ljava/lang/String;
+#getWalGroup()Ljava/lang/String;
+#getQueueSize()I
+#getAgeOfLastShippedOp()J
+#getReplicationDelay()J
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#newBuilder()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationStatus$ReplicationStatusBuilder;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationStatus

+###org/apache/hadoop/hbase/replication/regionserver/SerialReplicationSourceWALReader
@2.1.0
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/PriorityBlockingQueue;JLorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
+#setReaderRunning(Z)V
+#isReaderRunning()Z
+#poll(J)Lorg/apache/hadoop/hbase/replication/regionserver/WALEntryBatch;
+#take()Lorg/apache/hadoop/hbase/replication/regionserver/WALEntryBatch;
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#run()V
@2.4.2
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;JLorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;Ljava/lang/String;)V
-#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/PriorityBlockingQueue;JLorg/apache/hadoop/hbase/replication/WALEntryFilter;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V

+###org/apache/hadoop/hbase/replication/regionserver/SwitchRpcThrottleRemoteCallable
@2.2.0
+#<init>()V
+#call()Ljava/lang/Void;
+#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;
+#call()Ljava/lang/Object;
@2.5.0
-#call()Ljava/lang/Void;
-#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
-#call()Ljava/lang/Object;

+###org/apache/hadoop/hbase/replication/regionserver/WALEntryFilterRetryableException
@1.7.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/regionserver/WALEntryFilterRetryableException

+###org/apache/hadoop/hbase/security/access/AccessChecker$InputUser
@2.2.0
+#<init>(Ljava/lang/String;[Ljava/lang/String;)V
+#getShortName()Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getGroupNames()[Ljava/lang/String;
+#runAs(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
+#runAs(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/security/access/AuthManager
@2.2.0
+#close()V
+#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
+#refreshTableCacheFromWritable(Lorg/apache/hadoop/hbase/TableName;[B)V
+#refreshNamespaceCacheFromWritable(Ljava/lang/String;[B)V
+#authorizeUserGlobal(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUserNamespace(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#accessUserTable(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUserTable(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUserTable(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUserTable(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[B[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeUserFamily(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;[BLorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#authorizeCell(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)Z
+#removeNamespace([B)V
+#removeTable(Lorg/apache/hadoop/hbase/TableName;)V
+#getMTime()J
+#getOrCreate(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/AuthManager;
+#getTotalRefCount()I
+#release(Lorg/apache/hadoop/hbase/security/access/AuthManager;)V
@2.3.0
-#close()V
-#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
-#getOrCreate(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/access/AuthManager;
-#getTotalRefCount()I
-#release(Lorg/apache/hadoop/hbase/security/access/AuthManager;)V

+###org/apache/hadoop/hbase/security/access/NoopAccessChecker
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#requireAccess(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;Ljava/lang/String;)V
+#requireGlobalPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Ljava/lang/String;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireNamespacePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requirePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/String;[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#requireTablePermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[B[B[Lorg/apache/hadoop/hbase/security/access/Permission$Action;)V
+#performOnSuperuser(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;)V
+#checkLockPermissions(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;[Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/lang/String;)V
+#hasUserPermission(Lorg/apache/hadoop/hbase/security/User;Ljava/lang/String;Lorg/apache/hadoop/hbase/security/access/Permission;)Z
+#permissionGranted(Ljava/lang/String;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/access/Permission$Action;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/access/AuthResult;

+###org/apache/hadoop/hbase/security/access/PermissionStorage
@2.3.0
+#addUserPermission(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/security/access/UserPermission;Lorg/apache/hadoop/hbase/client/Table;Z)V
+#removeUserPermission(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/security/access/UserPermission;Lorg/apache/hadoop/hbase/client/Table;)V
+#getTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#getNamespacePermissions(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#getGlobalPermissions(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#getUserTablePermissions(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/String;Z)Ljava/util/List;
+#getUserNamespacePermissions(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;
+#getUserPermissions(Lorg/apache/hadoop/conf/Configuration;[B[B[BLjava/lang/String;Z)Ljava/util/List;
+#writePermissionsAsBytes(Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;Lorg/apache/hadoop/conf/Configuration;)[B
+#readUserPermission([BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#readPermissions([BLorg/apache/hadoop/conf/Configuration;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ListMultimap;
+#isGlobalEntry([B)Z
+#isNamespaceEntry(Ljava/lang/String;)Z
+#isNamespaceEntry([B)Z
+#isTableEntry([B)Z
+#toNamespaceEntry(Ljava/lang/String;)Ljava/lang/String;
+#fromNamespaceEntry(Ljava/lang/String;)Ljava/lang/String;
+#toNamespaceEntry([B)[B
+#fromNamespaceEntry([B)[B
+#getCellPermissionsForUser(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;

+###org/apache/hadoop/hbase/security/access/SnapshotScannerHDFSAclCleaner
@2.3.0
+#<init>()V
+#init(Ljava/util/Map;)V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#isEmptyDirDeletable(Lorg/apache/hadoop/fs/Path;)Z

+###org/apache/hadoop/hbase/security/access/SnapshotScannerHDFSAclController
@2.3.0
+#<init>()V
+#getMasterObserver()Ljava/util/Optional;
+#preMasterInitialization(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postStartMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#preStopMaster(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;)V
+#postCompletedCreateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/TableDescriptor;[Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#postCreateNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/NamespaceDescriptor;)V
+#postCompletedSnapshotAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/client/SnapshotDescription;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postCompletedTruncateTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postCompletedDeleteTableAction(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;)V
+#postModifyTable(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#postDeleteNamespace(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Ljava/lang/String;)V
+#postGrant(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;Z)V
+#postRevoke(Lorg/apache/hadoop/hbase/coprocessor/ObserverContext;Lorg/apache/hadoop/hbase/security/access/UserPermission;)V

+###org/apache/hadoop/hbase/security/access/SnapshotScannerHDFSAclHelper
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/Connection;)V
+#close()V
+#setCommonDirectoryPermission()V
+#grantAcl(Lorg/apache/hadoop/hbase/security/access/UserPermission;Ljava/util/Set;Ljava/util/Set;)Z
+#revokeAcl(Lorg/apache/hadoop/hbase/security/access/UserPermission;Ljava/util/Set;Ljava/util/Set;)Z
+#snapshotAcl(Lorg/apache/hadoop/hbase/client/SnapshotDescription;)Z
+#removeNamespaceAccessAcl(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Set;Ljava/lang/String;)Z
+#removeNamespaceDefaultAcl(Ljava/lang/String;Ljava/util/Set;)Z
+#removeTableDefaultAcl(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Set;)Z
+#addTableAcl(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Set;Ljava/lang/String;)Z
+#removeTableAcl(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Set;)Z
+#isAclSyncToHdfsEnabled(Lorg/apache/hadoop/conf/Configuration;)Z

+###org/apache/hadoop/hbase/security/provider/AttemptingUserProvidingSaslServer
@2.3.0
+#<init>(Ljavax/security/sasl/SaslServer;Ljava/util/function/Supplier;)V
+#getServer()Ljavax/security/sasl/SaslServer;
+#getAttemptingUser()Ljava/util/Optional;

+###org/apache/hadoop/hbase/security/provider/DigestSaslServerAuthenticationProvider
@2.3.0
+#<init>()V
+#createServer(Lorg/apache/hadoop/security/token/SecretManager;Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/provider/AttemptingUserProvidingSaslServer;
+#supportsProtocolAuthentication()Z
+#getAuthorizedUgi(Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;)Lorg/apache/hadoop/security/UserGroupInformation;

+###org/apache/hadoop/hbase/security/provider/GssSaslServerAuthenticationProvider
@2.3.0
+#<init>()V
+#createServer(Lorg/apache/hadoop/security/token/SecretManager;Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/provider/AttemptingUserProvidingSaslServer;
+#supportsProtocolAuthentication()Z
+#getAuthorizedUgi(Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;)Lorg/apache/hadoop/security/UserGroupInformation;

+###org/apache/hadoop/hbase/security/provider/SaslServerAuthenticationProvider
@2.3.0
+#init(Lorg/apache/hadoop/conf/Configuration;)V
+#createServer(Lorg/apache/hadoop/security/token/SecretManager;Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/provider/AttemptingUserProvidingSaslServer;
+#supportsProtocolAuthentication()Z
+#getAuthorizedUgi(Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;)Lorg/apache/hadoop/security/UserGroupInformation;

+###org/apache/hadoop/hbase/security/provider/SaslServerAuthenticationProviders
@2.3.0
+#getNumRegisteredProviders()I
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/provider/SaslServerAuthenticationProviders;
+#reset()V
+#selectProvider(B)Lorg/apache/hadoop/hbase/security/provider/SaslServerAuthenticationProvider;
+#getSimpleProvider()Lorg/apache/hadoop/hbase/security/provider/SaslServerAuthenticationProvider;

+###org/apache/hadoop/hbase/security/provider/SimpleSaslServerAuthenticationProvider
@2.3.0
+#<init>()V
+#createServer(Lorg/apache/hadoop/security/token/SecretManager;Ljava/util/Map;)Lorg/apache/hadoop/hbase/security/provider/AttemptingUserProvidingSaslServer;
+#supportsProtocolAuthentication()Z
+#getAuthorizedUgi(Ljava/lang/String;Lorg/apache/hadoop/security/token/SecretManager;)Lorg/apache/hadoop/security/UserGroupInformation;

+###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$ImplData
@1.5.0
+#<init>()V
+#setRegionServer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getRegionServer()Lorg/apache/hadoop/hbase/regionserver/HRegionServer;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$ImplData

+###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$Intf
@1.5.0
+#renderNoFlush(Ljava/io/Writer;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$Intf

+###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl
@1.5.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl

+###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmplImpl
@1.5.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/regionserver/ReplicationStatusTmplImpl

+###org/apache/hadoop/hbase/tmpl/tool/CanaryStatusTmpl$ImplData
@2.3.0
+#<init>()V
+#setSink(Lorg/apache/hadoop/hbase/tool/CanaryTool$RegionStdOutSink;)V
+#getSink()Lorg/apache/hadoop/hbase/tool/CanaryTool$RegionStdOutSink;

+###org/apache/hadoop/hbase/tmpl/tool/CanaryStatusTmpl$Intf
@2.3.0
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tmpl/tool/CanaryStatusTmpl
@2.3.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/tool/CanaryStatusTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/tool/CanaryTool$RegionStdOutSink;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/tool/CanaryTool$RegionStdOutSink;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/tool/CanaryTool$RegionStdOutSink;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;

+###org/apache/hadoop/hbase/tmpl/tool/CanaryStatusTmplImpl
@2.3.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/tool/CanaryStatusTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V

+###org/apache/hadoop/hbase/tool/BulkLoadHFiles$LoadQueueItem
@2.2.0
+#<init>([BLorg/apache/hadoop/fs/Path;)V
+#toString()Ljava/lang/String;
+#getFamily()[B
+#getFilePath()Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/hbase/tool/BulkLoadHFiles
@2.2.0
+#bulkLoad(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/Map;
+#bulkLoad(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
+#create(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/tool/BulkLoadHFiles;
@3.0.0-alpha-1
+#disableReplication()V
+#isReplicationDisabled()Z

+###org/apache/hadoop/hbase/tool/BulkLoadHFilesTool
@2.2.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#bulkLoad(Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;)Ljava/util/Map;
+#bulkLoad(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;)Ljava/util/Map;
+#main([Ljava/lang/String;)V
@3.0.0-alpha-1
+#initialize()V
+#prepareHFileQueue(Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Map;Ljava/util/Deque;Z)V
+#prepareHFileQueue(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/fs/Path;Ljava/util/Deque;ZZ)V
+#loadHFileQueue(Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;Lorg/apache/hadoop/hbase/TableName;Ljava/util/Deque;Z)V
+#inferBoundaries(Ljava/util/SortedMap;)[[B
+#setBulkToken(Ljava/lang/String;)V
+#setClusterIds(Ljava/util/List;)V
+#run([Ljava/lang/String;)I
+#disableReplication()V
+#isReplicationDisabled()Z

+###org/apache/hadoop/hbase/tool/CanaryStatusServlet
@2.3.0
+#<init>()V

+###org/apache/hadoop/hbase/tool/CanaryTool$Monitor
@1.3.6
+#isDone()Z
+#hasError()Z
+#finalCheckForErrors()Z
+#close()V
+#run()V
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$Monitor

+###org/apache/hadoop/hbase/tool/CanaryTool$RegionServerStdOutSink
@1.3.6
+#<init>()V
+#publishReadFailure(Ljava/lang/String;Ljava/lang/String;)V
+#publishReadTiming(Ljava/lang/String;Ljava/lang/String;J)V
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$RegionServerStdOutSink

+###org/apache/hadoop/hbase/tool/CanaryTool$RegionStdOutSink
@1.3.6
+#<init>()V
+#publishReadFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishReadFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishReadTiming(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/lang/Exception;)V
+#publishWriteFailure(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;Ljava/lang/Exception;)V
+#publishWriteTiming(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HColumnDescriptor;J)V
+#getReadLatencyMap()Ljava/util/Map;
+#initializeAndGetReadLatencyForTable(Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLong;
+#initializeWriteLatency()V
+#getWriteLatency()Ljava/util/concurrent/atomic/AtomicLong;
+#getRegionMap()Ljava/util/Map;
+#getTotalExpectedRegions()I
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$RegionStdOutSink

+###org/apache/hadoop/hbase/tool/CanaryTool$RegionTask$TaskType
@1.3.6
+#values()[Lorg/apache/hadoop/hbase/tool/CanaryTool$RegionTask$TaskType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/tool/CanaryTool$RegionTask$TaskType;
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$RegionTask$TaskType

+###org/apache/hadoop/hbase/tool/CanaryTool$RegionTaskResult
@1.3.6
+#<init>(Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/ServerName;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#getRegionNameAsString()Ljava/lang/String;
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableNameAsString()Ljava/lang/String;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getServerNameAsString()Ljava/lang/String;
+#getReadLatency()J
+#setReadLatency(J)V
+#getWriteLatency()J
+#setWriteLatency(J)V
+#isReadSuccess()Z
+#setReadSuccess()V
+#isWriteSuccess()Z
+#setWriteSuccess()V
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$RegionTaskResult

+###org/apache/hadoop/hbase/tool/CanaryTool$Sink
@1.3.6
+#getReadFailureCount()J
+#incReadFailureCount()J
+#getReadFailures()Ljava/util/Map;
+#updateReadFailures(Ljava/lang/String;Ljava/lang/String;)V
+#getWriteFailureCount()J
+#incWriteFailureCount()J
+#getWriteFailures()Ljava/util/Map;
+#updateWriteFailures(Ljava/lang/String;Ljava/lang/String;)V
+#getReadSuccessCount()J
+#incReadSuccessCount()J
+#getWriteSuccessCount()J
+#incWriteSuccessCount()J
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$Sink

+###org/apache/hadoop/hbase/tool/CanaryTool$StdOutSink
@1.3.6
+#<init>()V
+#getReadFailureCount()J
+#incReadFailureCount()J
+#getReadFailures()Ljava/util/Map;
+#updateReadFailures(Ljava/lang/String;Ljava/lang/String;)V
+#getWriteFailureCount()J
+#incWriteFailureCount()J
+#getWriteFailures()Ljava/util/Map;
+#updateWriteFailures(Ljava/lang/String;Ljava/lang/String;)V
+#getReadSuccessCount()J
+#incReadSuccessCount()J
+#getWriteSuccessCount()J
+#incWriteSuccessCount()J
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$StdOutSink

+###org/apache/hadoop/hbase/tool/CanaryTool$ZookeeperStdOutSink
@1.3.6
+#<init>()V
+#publishReadFailure(Ljava/lang/String;Ljava/lang/String;)V
+#publishReadTiming(Ljava/lang/String;Ljava/lang/String;J)V
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool$ZookeeperStdOutSink

+###org/apache/hadoop/hbase/tool/CanaryTool
@1.3.6
+#checkRegions([Ljava/lang/String;)I
+#checkRegionServers([Ljava/lang/String;)I
+#checkZooKeeper()I
+#<init>()V
+#<init>(Ljava/util/concurrent/ExecutorService;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#getReadFailures()Ljava/util/Map;
+#getWriteFailures()Ljava/util/Map;
+#main([Ljava/lang/String;)V
@1.4.0
-###org/apache/hadoop/hbase/tool/CanaryTool

+###org/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE
@2.0.6
+#values()[Lorg/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE;
@2.1.0
-###org/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE

+###org/apache/hadoop/hbase/util/HbckErrorReporter
@2.0.6
+#clear()V
+#report(Ljava/lang/String;)V
+#reportError(Ljava/lang/String;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE;Ljava/lang/String;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HbckTableInfo;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HbckTableInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#reportError(Lorg/apache/hadoop/hbase/util/HbckErrorReporter$ERROR_CODE;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/HbckTableInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#summarize()I
+#detail(Ljava/lang/String;)V
+#getErrorList()Ljava/util/ArrayList;
+#progress()V
+#print(Ljava/lang/String;)V
+#resetErrors()V
+#tableHasErrors(Lorg/apache/hadoop/hbase/util/HbckTableInfo;)Z
@2.1.0
-###org/apache/hadoop/hbase/util/HbckErrorReporter

+###org/apache/hadoop/hbase/util/HbckRegionInfo$HdfsEntry
@2.0.6
+#<init>(Lorg/apache/hadoop/fs/Path;)V
@2.1.0
-###org/apache/hadoop/hbase/util/HbckRegionInfo$HdfsEntry

+###org/apache/hadoop/hbase/util/HbckRegionInfo$MetaEntry
@2.0.6
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;J)V
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;JLorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getRegionServer()Lorg/apache/hadoop/hbase/ServerName;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.1.0
-###org/apache/hadoop/hbase/util/HbckRegionInfo$MetaEntry

+###org/apache/hadoop/hbase/util/HbckRegionInfo
@2.0.6
+#<init>(Lorg/apache/hadoop/hbase/util/HbckRegionInfo$MetaEntry;)V
+#getReplicaId()I
+#addServer(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#toString()Ljava/lang/String;
+#getStartKey()[B
+#getEndKey()[B
+#getMetaEntry()Lorg/apache/hadoop/hbase/util/HbckRegionInfo$MetaEntry;
+#setMetaEntry(Lorg/apache/hadoop/hbase/util/HbckRegionInfo$MetaEntry;)V
+#getHdfsEntry()Lorg/apache/hadoop/hbase/util/HbckRegionInfo$HdfsEntry;
+#setHdfsEntry(Lorg/apache/hadoop/hbase/util/HbckRegionInfo$HdfsEntry;)V
+#getOnlineEntries()Ljava/util/List;
+#getDeployedOn()Ljava/util/List;
+#loadHdfsRegioninfo(Lorg/apache/hadoop/conf/Configuration;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getRegionNameAsString()Ljava/lang/String;
+#getRegionName()[B
+#getPrimaryHRIForDeployedReplica()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getHdfsRegionDir()Lorg/apache/hadoop/fs/Path;
+#containsOnlyHdfsEdits()Z
+#isHdfsRegioninfoPresent()Z
+#getModTime()J
+#getHdfsHRI()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#setSkipChecks(Z)V
+#isSkipChecks()Z
+#setMerged(Z)V
+#isMerged()Z
@2.1.0
-###org/apache/hadoop/hbase/util/HbckRegionInfo

+###org/apache/hadoop/hbase/util/HbckTableInfo
@2.0.6
+#addRegionInfo(Lorg/apache/hadoop/hbase/util/HbckRegionInfo;)V
+#addServer(Lorg/apache/hadoop/hbase/ServerName;)V
+#getName()Lorg/apache/hadoop/hbase/TableName;
+#getNumRegions()I
+#getRegionsFromMeta(Ljava/util/TreeMap;)Lorg/apache/hbase/thirdparty/com/google/common/collect/ImmutableList;
+#checkRegionChain(Lorg/apache/hadoop/hbase/util/hbck/TableIntegrityErrorHandler;)Z
@2.1.0
-###org/apache/hadoop/hbase/util/HbckTableInfo

+###org/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener
@1.4.11
+#sweep(Ljava/lang/String;)V
@1.6.0
+#sweep(Ljava/lang/Object;)V
-#sweep(Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/LossyCounting$LossyCountingListener

+###org/apache/hadoop/hbase/util/RowPrefixFixedLengthBloomContext
@2.2.0
+#<init>(Lorg/apache/hadoop/hbase/util/BloomFilterWriter;Lorg/apache/hadoop/hbase/CellComparator;I)V
+#writeBloom(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/util/TableDescriptorChecker
@2.2.1
+#sanityCheck(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.2.3
+#checkCompression(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#checkEncryption(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#checkClassLoading(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.4.15
+#checkCompression(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#checkCompression(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.5.0
+#checkCompression(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#checkCompression(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@2.5.1
+#checkCompression(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#checkCompression(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@3.0.0-alpha-1
+#checkCompression(Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
-#checkCompression(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V

+###org/apache/hadoop/hbase/util/compaction/MajorCompactionTTLRequest
@1.5.0
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/compaction/MajorCompactionTTLRequest

+###org/apache/hadoop/hbase/util/compaction/MajorCompactorTTL
@1.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/HTableDescriptor;IJ)V
+#compactRegionsTTLOnTable(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;IJIIZZ)I
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/compaction/MajorCompactorTTL

+###org/apache/hadoop/hbase/wal/AbstractFSWALProvider$WALStartTimeComparator
@2.2.7
+#<init>()V
+#compare(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.3.0
-###org/apache/hadoop/hbase/wal/AbstractFSWALProvider$WALStartTimeComparator

+###org/apache/hadoop/hbase/wal/AbstractWALRoller$RollController
@2.3.1
+#requestRoll()V
+#rollWal(J)[[B
+#isRollRequested()Z
+#needsPeriodicRoll(J)Z
+#needsRoll(J)Z
@2.4.0
+#rollWal(J)Ljava/util/Map;
-#rollWal(J)[[B

+###org/apache/hadoop/hbase/wal/AbstractWALRoller
@2.3.0
+#addWAL(Lorg/apache/hadoop/hbase/wal/WAL;)V
+#requestRollAll()V
+#run()V
+#walRollFinished()Z
+#waitUntilWalRollFinished()V
+#close()V

+###org/apache/hadoop/hbase/wal/BoundedEntryBuffers
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;J)V

+###org/apache/hadoop/hbase/wal/BoundedRecoveredHFilesOutputSink
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter;Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;Lorg/apache/hadoop/hbase/wal/EntryBuffers;I)V
+#append(Lorg/apache/hadoop/hbase/wal/EntryBuffers$RegionEntryBuffer;)V
+#close()Ljava/util/List;
+#getOutputCounts()Ljava/util/Map;
+#getNumberOfRecoveredRegions()I
+#getNumOpenWriters()I
+#keepRegionEvent(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Z
@3.0.0-alpha-1
-#append(Lorg/apache/hadoop/hbase/wal/EntryBuffers$RegionEntryBuffer;)V
-#getNumOpenWriters()I
-#keepRegionEvent(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Z

+###org/apache/hadoop/hbase/wal/EntryBuffers$RegionEntryBuffer
@2.3.0
+#heapSize()J
+#getEncodedRegionName()[B
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getEntries()Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/wal/EntryBuffers$RegionEntryBuffer

+###org/apache/hadoop/hbase/wal/EntryBuffers
@2.2.1
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;J)V
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
+#appendEntry(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
+#waitUntilDrained()V
@2.3.0
-#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;JZ)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/wal/EntryBuffers

+###org/apache/hadoop/hbase/wal/OutputSink$WriterThread
@2.2.1
+#run()V

+###org/apache/hadoop/hbase/wal/OutputSink
@2.2.1
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;Lorg/apache/hadoop/hbase/wal/EntryBuffers;I)V
+#startWriterThreads()V
+#finishWritingAndClose()Ljava/util/List;
+#getOutputCounts()Ljava/util/Map;
+#getNumberOfRecoveredRegions()I
+#append(Lorg/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer;)V
+#flush()Z
+#keepRegionEvent(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Z
@2.2.4
+#restartWriterThreadsIfNeeded()V
@2.3.0
-#finishWritingAndClose()Ljava/util/List;
-#getOutputCounts()Ljava/util/Map;
-#getNumberOfRecoveredRegions()I
-#append(Lorg/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer;)V
-#flush()Z
-#keepRegionEvent(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/wal/OutputSink

+###org/apache/hadoop/hbase/wal/WALSplitUtil$MutationReplay
@2.2.1
+#<init>(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutationProto$MutationType;Lorg/apache/hadoop/hbase/client/Mutation;JJ)V
+#compareTo(Lorg/apache/hadoop/hbase/wal/WALSplitUtil$MutationReplay;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getType()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$MutationProto$MutationType;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/wal/WALSplitUtil
@2.2.1
+#finishSplitLogFile(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V
+#getRegionDirRecoveredEditsDir(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#hasRecoveredEdits(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;)Z
+#getMaxRegionSequenceId(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/util/ConcurrentMapUtils$IOExceptionSupplier;Lorg/apache/hadoop/hbase/util/ConcurrentMapUtils$IOExceptionSupplier;)J[deprecated]
+#getSplitEditFilesSorted(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/NavigableSet;
+#moveAsideBadEditsFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#isSequenceIdFile(Lorg/apache/hadoop/fs/Path;)Z
+#getMaxRegionSequenceId(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
+#writeRegionSequenceIdFile(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;J)V
+#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;Lorg/apache/hadoop/hbase/client/Durability;)Ljava/util/List;
@2.3.0
+#getRecoveredHFiles(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)[Lorg/apache/hadoop/fs/FileStatus;
@2.3.7
+#moveWAL(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
@3.0.0-alpha-3
*#getMutationsFromWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WALEntry;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/util/Pair;Lorg/apache/hadoop/hbase/client/Durability;)Ljava/util/List;[deprecated]

+###org/apache/hadoop/hbase/ExecutorStatusChore
@1.6.0
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/executor/ExecutorService;Lorg/apache/hadoop/hbase/regionserver/MetricsRegionServerSource;)V
+#getExecutorStatus(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Pair;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/ExecutorStatusChore

+###org/apache/hadoop/hbase/HBaseRpcServicesBase
@3.0.0-alpha-2
+#getAccessChecker()Lorg/apache/hadoop/hbase/security/access/AccessChecker;
+#getZkPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getServer()Lorg/apache/hadoop/hbase/HBaseServerBase;
+#getSocketAddress()Ljava/net/InetSocketAddress;
+#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;
+#getRpcScheduler()Lorg/apache/hadoop/hbase/ipc/RpcScheduler;
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I
+#getDeadline(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;)J
+#checkOOME(Ljava/lang/Throwable;)Z
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#getClusterId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetClusterIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetClusterIdResponse;
+#getActiveMaster(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetActiveMasterRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetActiveMasterResponse;
+#getMasters(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMastersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMastersResponse;
+#getMetaRegionLocations(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMetaRegionLocationsRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetMetaRegionLocationsResponse;
+#getBootstrapNodes(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetBootstrapNodesRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegistryProtos$GetBootstrapNodesResponse;
+#updateConfiguration(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationResponse;
+#clearSlowLogsResponses(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearSlowLogResponseRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearSlowLogResponses;
+#getLogEntries(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/HBaseProtos$LogEntry;

+###org/apache/hadoop/hbase/HBaseServerBase
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#isStopped()Z
+#isAborted()Z
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getAsyncClusterConnection()Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;
+#getZooKeeper()Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getChoreService()Lorg/apache/hadoop/hbase/ChoreService;
+#getTableDescriptors()Lorg/apache/hadoop/hbase/TableDescriptors;
+#getExecutorService()Lorg/apache/hadoop/hbase/executor/ExecutorService;
+#getAccessChecker()Lorg/apache/hadoop/hbase/security/access/AccessChecker;
+#getZKPermissionWatcher()Lorg/apache/hadoop/hbase/security/access/ZKPermissionWatcher;
+#getCoordinatedStateManager()Lorg/apache/hadoop/hbase/CoordinatedStateManager;
+#createConnection(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/Connection;
+#getDataRootDir()Lorg/apache/hadoop/fs/Path;
+#getFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#getWALRootDir()Lorg/apache/hadoop/fs/Path;
+#getWALFileSystem()Lorg/apache/hadoop/fs/FileSystem;
+#isClusterUp()Z
+#getStartcode()J
+#getInfoServer()Lorg/apache/hadoop/hbase/http/InfoServer;
+#getMsgInterval()I
+#getNamedQueueRecorder()Lorg/apache/hadoop/hbase/namequeues/NamedQueueRecorder;
+#getRpcServer()Lorg/apache/hadoop/hbase/ipc/RpcServerInterface;
+#getEventLoopGroupConfig()Lorg/apache/hadoop/hbase/util/NettyEventLoopGroupConfig;
+#getRpcServices()Lorg/apache/hadoop/hbase/HBaseRpcServicesBase;
+#getMetaRegionLocationCache()Lorg/apache/hadoop/hbase/MetaRegionLocationCache;
+#updateConfiguration()V
+#toString()Ljava/lang/String;
@3.0.0-alpha-3
+#isShutdownHookInstalled()Z

+###org/apache/hadoop/hbase/MetaRegionLocationCache
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZKWatcher;)V
+#getMetaRegionLocations()Ljava/util/Optional;
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeDataChanged(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/MetaRegionLocationCache

+###org/apache/hadoop/hbase/MetaTableAccessor
@3.0.0-alpha-1
+#fullScanRegions(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/ClientMetaTableAccessor$Visitor;)V
+#fullScanRegions(Lorg/apache/hadoop/hbase/client/Connection;)Ljava/util/List;
+#fullScanTables(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/ClientMetaTableAccessor$Visitor;)V
+#getMetaHTable(Lorg/apache/hadoop/hbase/client/Connection;)Lorg/apache/hadoop/hbase/client/Table;
+#getRegion(Lorg/apache/hadoop/hbase/client/Connection;[B)Lorg/apache/hadoop/hbase/util/Pair;[deprecated]
+#getRegionLocation(Lorg/apache/hadoop/hbase/client/Connection;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#getRegionLocation(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/HRegionLocation;
+#getCatalogFamilyRow(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/client/Result;
+#getRegionResult(Lorg/apache/hadoop/hbase/client/Connection;[B)Lorg/apache/hadoop/hbase/client/Result;
+#scanByRegionEncodedName(Lorg/apache/hadoop/hbase/client/Connection;Ljava/lang/String;)Lorg/apache/hadoop/hbase/client/Result;
+#getAllRegions(Lorg/apache/hadoop/hbase/client/Connection;Z)Ljava/util/List;
+#getTableRegions(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getTableRegions(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
+#getScanForTableName(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Scan;
+#getTableRegionsAndLocations(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getTableRegionsAndLocations(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;Z)Ljava/util/List;
+#fullScanMetaAndPrint(Lorg/apache/hadoop/hbase/client/Connection;)V
+#scanMetaForTableRegions(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/ClientMetaTableAccessor$Visitor;Lorg/apache/hadoop/hbase/TableName;)V
+#scanMeta(Lorg/apache/hadoop/hbase/client/Connection;[B[BLorg/apache/hadoop/hbase/ClientMetaTableAccessor$QueryType;Lorg/apache/hadoop/hbase/ClientMetaTableAccessor$Visitor;)V
+#scanMeta(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/ClientMetaTableAccessor$Visitor;Lorg/apache/hadoop/hbase/TableName;[BI)V
+#scanMeta(Lorg/apache/hadoop/hbase/client/Connection;[B[BLorg/apache/hadoop/hbase/ClientMetaTableAccessor$QueryType;Lorg/apache/hadoop/hbase/filter/Filter;ILorg/apache/hadoop/hbase/ClientMetaTableAccessor$Visitor;)V
+#getTargetServerName(Lorg/apache/hadoop/hbase/client/Result;I)Lorg/apache/hadoop/hbase/ServerName;
+#getDaughterRegions(Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/util/PairOfSameType;
+#getTableState(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState;
+#getTableStates(Lorg/apache/hadoop/hbase/client/Connection;)Ljava/util/Map;
+#updateTableState(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/client/TableState$State;)V
+#makePutFromRegionInfo(Lorg/apache/hadoop/hbase/client/RegionInfo;J)Lorg/apache/hadoop/hbase/client/Put;
+#makeDeleteFromRegionInfo(Lorg/apache/hadoop/hbase/client/RegionInfo;J)Lorg/apache/hadoop/hbase/client/Delete;
+#addDaughtersToPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/client/Put;
+#putsToMetaTable(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;)V
+#addRegionStateToPut(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/master/RegionState$State;)Lorg/apache/hadoop/hbase/client/Put;
+#updateRegionState(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/master/RegionState$State;)V
+#addSplitsToParent(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#addRegionsToMeta(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;I)V
+#addRegionsToMeta(Lorg/apache/hadoop/hbase/client/Connection;Ljava/util/List;IJ)V
+#makePutFromTableState(Lorg/apache/hadoop/hbase/client/TableState;J)Lorg/apache/hadoop/hbase/client/Put;
+#deleteTableState(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)V
+#updateRegionLocation(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;JJ)V
+#addRegionInfo(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/client/Put;
+#addLocation(Lorg/apache/hadoop/hbase/client/Put;Lorg/apache/hadoop/hbase/ServerName;JI)Lorg/apache/hadoop/hbase/client/Put;
+#addEmptyLocation(Lorg/apache/hadoop/hbase/client/Put;I)Lorg/apache/hadoop/hbase/client/Put;
@3.0.0-alpha-2
+#scanMeta(Lorg/apache/hadoop/hbase/client/Connection;[B[BLorg/apache/hadoop/hbase/ClientMetaTableAccessor$QueryType;ILorg/apache/hadoop/hbase/ClientMetaTableAccessor$Visitor;)V

+###org/apache/hadoop/hbase/client/AsyncClusterConnection
@3.0.0-alpha-1
+#getRegionServerAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/client/AsyncRegionServerAdmin;
+#getNonceGenerator()Lorg/apache/hadoop/hbase/client/NonceGenerator;
+#getRpcClient()Lorg/apache/hadoop/hbase/ipc/RpcClient;
+#flush([BZ)Ljava/util/concurrent/CompletableFuture;
+#replay(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/util/List;IIJ)Ljava/util/concurrent/CompletableFuture;
+#getRegionLocations(Lorg/apache/hadoop/hbase/TableName;[BZ)Ljava/util/concurrent/CompletableFuture;
+#prepareBulkLoad(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/concurrent/CompletableFuture;
+#bulkLoad(Lorg/apache/hadoop/hbase/TableName;Ljava/util/List;[BZLorg/apache/hadoop/security/token/Token;Ljava/lang/String;ZLjava/util/List;Z)Ljava/util/concurrent/CompletableFuture;
+#cleanupBulkLoad(Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
@3.0.0-alpha-2
+#getLiveRegionServers(Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;I)Ljava/util/concurrent/CompletableFuture;
+#getAllBootstrapNodes(Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/concurrent/CompletableFuture;
@3.0.0-alpha-3
+#replicate(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;IJJ)Ljava/util/concurrent/CompletableFuture;
-#replay(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/util/List;IIJ)Ljava/util/concurrent/CompletableFuture;

+###org/apache/hadoop/hbase/client/AsyncRegionReplicationRetryingCaller
@3.0.0-alpha-3
+#<init>(Lorg/apache/hbase/thirdparty/io/netty/util/HashedWheelTimer;Lorg/apache/hadoop/hbase/client/AsyncClusterConnectionImpl;IJJLorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)V

+###org/apache/hadoop/hbase/client/AsyncRegionServerAdmin
@3.0.0-alpha-1
+#getRegionInfo(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionInfoRequest;)Ljava/util/concurrent/CompletableFuture;
+#getStoreFile(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetStoreFileRequest;)Ljava/util/concurrent/CompletableFuture;
+#getOnlineRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetOnlineRegionRequest;)Ljava/util/concurrent/CompletableFuture;
+#openRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$OpenRegionRequest;)Ljava/util/concurrent/CompletableFuture;
+#warmupRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$WarmupRegionRequest;)Ljava/util/concurrent/CompletableFuture;
+#closeRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CloseRegionRequest;)Ljava/util/concurrent/CompletableFuture;
+#flushRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$FlushRegionRequest;)Ljava/util/concurrent/CompletableFuture;
+#compactionSwitch(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactionSwitchRequest;)Ljava/util/concurrent/CompletableFuture;
+#compactRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$CompactRegionRequest;)Ljava/util/concurrent/CompletableFuture;
+#replicateWALEntry(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;Lorg/apache/hadoop/hbase/CellScanner;I)Ljava/util/concurrent/CompletableFuture;
+#replay(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ReplicateWALEntryRequest;Lorg/apache/hadoop/hbase/CellScanner;)Ljava/util/concurrent/CompletableFuture;
+#rollWALWriter(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$RollWALWriterRequest;)Ljava/util/concurrent/CompletableFuture;
+#getServerInfo(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetServerInfoRequest;)Ljava/util/concurrent/CompletableFuture;
+#stopServer(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$StopServerRequest;)Ljava/util/concurrent/CompletableFuture;
+#updateFavoredNodes(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateFavoredNodesRequest;)Ljava/util/concurrent/CompletableFuture;
+#updateConfiguration(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$UpdateConfigurationRequest;)Ljava/util/concurrent/CompletableFuture;
+#getRegionLoad(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$GetRegionLoadRequest;)Ljava/util/concurrent/CompletableFuture;
+#clearCompactionQueues(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearCompactionQueuesRequest;)Ljava/util/concurrent/CompletableFuture;
+#clearRegionBlockCache(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ClearRegionBlockCacheRequest;)Ljava/util/concurrent/CompletableFuture;
+#getSpaceQuotaSnapshots(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/QuotaProtos$GetSpaceQuotaSnapshotsRequest;)Ljava/util/concurrent/CompletableFuture;
+#executeProcedures(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$ExecuteProceduresRequest;)Ljava/util/concurrent/CompletableFuture;

+###org/apache/hadoop/hbase/client/ClusterConnectionFactory
@3.0.0-alpha-1
+#createAsyncClusterConnection(Lorg/apache/hadoop/conf/Configuration;Ljava/net/SocketAddress;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;
@3.0.0-alpha-2
+#createAsyncClusterConnection(Lorg/apache/hadoop/hbase/client/ConnectionRegistryEndpoint;Lorg/apache/hadoop/conf/Configuration;Ljava/net/SocketAddress;Lorg/apache/hadoop/hbase/security/User;)Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;

+###org/apache/hadoop/hbase/client/ConnectionRegistryEndpoint
@3.0.0-alpha-2
+#getClusterId()Ljava/lang/String;
+#getActiveMaster()Ljava/util/Optional;
+#getBackupMasters()Ljava/util/List;
+#getBootstrapNodes()Ljava/util/Iterator;
+#getMetaLocations()Ljava/util/List;

+###org/apache/hadoop/hbase/client/SharedAsyncConnection
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/AsyncConnection;)V
+#isClosed()Z
+#close()V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getRegionLocator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/AsyncTableRegionLocator;
+#clearRegionLocationCache()V
+#getTableBuilder(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/AsyncTableBuilder;
+#getTableBuilder(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/AsyncTableBuilder;
+#getAdminBuilder()Lorg/apache/hadoop/hbase/client/AsyncAdminBuilder;
+#getAdminBuilder(Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/AsyncAdminBuilder;
+#getBufferedMutatorBuilder(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/AsyncBufferedMutatorBuilder;
+#getBufferedMutatorBuilder(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/AsyncBufferedMutatorBuilder;
+#getHbck()Ljava/util/concurrent/CompletableFuture;
+#getHbck(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/client/Hbck;
+#toConnection()Lorg/apache/hadoop/hbase/client/Connection;

+###org/apache/hadoop/hbase/client/SharedConnection
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;)V
+#close()V
+#isClosed()Z
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#isAborted()Z
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/client/BufferedMutatorParams;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
+#getRegionLocator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionLocator;
+#getAdmin()Lorg/apache/hadoop/hbase/client/Admin;
+#getTableBuilder(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/TableBuilder;
+#clearRegionLocationCache()V
+#getHbck()Lorg/apache/hadoop/hbase/client/Hbck;
+#getHbck(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/client/Hbck;
+#toAsyncConnection()Lorg/apache/hadoop/hbase/client/AsyncConnection;
+#getClusterId()Ljava/lang/String;

+###org/apache/hadoop/hbase/client/VersionInfoUtil$ServiceCallFunction
@3.0.0-alpha-1
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/executor/ExecutorService$ExecutorConfig
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/executor/ExecutorService;)V
+#setExecutorType(Lorg/apache/hadoop/hbase/executor/ExecutorType;)Lorg/apache/hadoop/hbase/executor/ExecutorService$ExecutorConfig;
+#getCorePoolSize()I
+#setCorePoolSize(I)Lorg/apache/hadoop/hbase/executor/ExecutorService$ExecutorConfig;
+#allowCoreThreadTimeout()Z
+#setAllowCoreThreadTimeout(Z)Lorg/apache/hadoop/hbase/executor/ExecutorService$ExecutorConfig;
+#getName()Ljava/lang/String;
+#getKeepAliveTimeMillis()J
+#setKeepAliveTimeMillis(J)Lorg/apache/hadoop/hbase/executor/ExecutorService$ExecutorConfig;

+###org/apache/hadoop/hbase/generated/master/operationDetails_jsp
@2.5.0
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/master/userSnapshots_jsp
@2.5.0
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/generated/regionserver/rsOperationDetails_jsp
@2.5.0
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/ipc/AnnotationReadingPriorityFunction
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/hbase/HBaseRpcServicesBase;)V
+#getPriority(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RPCProtos$RequestHeader;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Lorg/apache/hadoop/hbase/security/User;)I

+###org/apache/hadoop/hbase/ipc/FastPathRWQueueRpcExecutor
@1.7.2
+#<init>(Ljava/lang/String;IILorg/apache/hadoop/hbase/ipc/PriorityFunction;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/Abortable;)V
+#dispatch(Lorg/apache/hadoop/hbase/ipc/CallRunner;)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/FastPathRWQueueRpcExecutor

+###org/apache/hadoop/hbase/ipc/FastPathRpcHandler
@1.7.2
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/FastPathRpcHandler

+###org/apache/hadoop/hbase/ipc/QueueBalancer
@2.5.0
+#getNextQueue(Lorg/apache/hadoop/hbase/ipc/CallRunner;)I
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/QueueBalancer

+###org/apache/hadoop/hbase/ipc/RandomQueueBalancer
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/util/List;)V
+#getNextQueue(Lorg/apache/hadoop/hbase/ipc/CallRunner;)I
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/RandomQueueBalancer

+###org/apache/hadoop/hbase/ipc/RpcHandler
@1.7.2
+#stopRunning()V
+#run()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/RpcHandler

+###org/apache/hadoop/hbase/master/MasterRegionServerList
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/region/MasterRegion;Lorg/apache/hadoop/hbase/Abortable;)V
+#started(Lorg/apache/hadoop/hbase/ServerName;)V
+#expired(Lorg/apache/hadoop/hbase/ServerName;)V
+#getAll()Ljava/util/Set;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/MasterRegionServerList

+###org/apache/hadoop/hbase/master/MasterRpcServicesVersionWrapper$ServiceCallFunction
@3.0.0-alpha-1

+###org/apache/hadoop/hbase/master/MasterRpcServicesVersionWrapper
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterRpcServices;)V
+#regionServerStartup(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerStartupResponse;
+#regionServerReport(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionServerReportResponse;
+#reportRSFatalError(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRSFatalErrorResponse;
+#getLastFlushedSequenceId(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLastFlushedSequenceIdResponse;
+#reportRegionStateTransition(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportRegionStateTransitionResponse;
+#reportRegionSpaceUse(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$RegionSpaceUseReportResponse;
+#reportProcedureDone(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportProcedureDoneRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$ReportProcedureDoneResponse;
+#reportFileArchival(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$FileArchiveNotificationResponse;
@3.0.0-alpha-2
+#getLiveRegionServers(Lorg/apache/hbase/thirdparty/com/google/protobuf/RpcController;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLiveRegionServersRequest;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/RegionServerStatusProtos$GetLiveRegionServersResponse;

+###org/apache/hadoop/hbase/master/RegionServerList
@2.5.0
+#started(Lorg/apache/hadoop/hbase/ServerName;)V
+#expired(Lorg/apache/hadoop/hbase/ServerName;)V
+#getAll()Ljava/util/Set;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/RegionServerList

+###org/apache/hadoop/hbase/master/WorkerAssigner
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;ILorg/apache/hadoop/hbase/procedure2/ProcedureEvent;)V
+#acquire()Ljava/util/Optional;
+#release(Lorg/apache/hadoop/hbase/ServerName;)V
+#suspend(Lorg/apache/hadoop/hbase/procedure2/Procedure;)V
+#wake(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;)V
+#serverAdded(Lorg/apache/hadoop/hbase/ServerName;)V
+#addUsedWorker(Lorg/apache/hadoop/hbase/ServerName;)V
+#getAvailableWorker(Lorg/apache/hadoop/hbase/ServerName;)Ljava/lang/Integer;

+###org/apache/hadoop/hbase/master/balancer/MasterClusterInfoProvider
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getConnection()Lorg/apache/hadoop/hbase/client/Connection;
+#getAssignedRegions()Ljava/util/List;
+#unassign(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#getTableDescriptor(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#computeHDFSBlocksDistribution(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
+#hasRegionReplica(Ljava/util/Collection;)Z
+#getOnlineServersList()Ljava/util/List;
+#getOnlineServersListWithPredicator(Ljava/util/List;Ljava/util/function/Predicate;)Ljava/util/List;
+#getSnapShotOfAssignment(Ljava/util/Collection;)Ljava/util/Map;
+#getNumberOfTables()I
+#isOffPeakHour()Z
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#recordBalancerDecision(Ljava/util/function/Supplier;)V
+#recordBalancerRejection(Ljava/util/function/Supplier;)V
+#getLoad(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/ServerMetrics;

+###org/apache/hadoop/hbase/master/hbck/HbckChore
@2.4.13
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#getLastReport()Lorg/apache/hadoop/hbase/master/hbck/HbckReport;
+#runChore()Z
+#isDisabled()Z
+#isRunning()Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/hbck/HbckChore

+###org/apache/hadoop/hbase/master/hbck/HbckReport
@2.4.13
+#<init>()V
+#getCheckingStartTimestamp()Ljava/time/Instant;
+#setCheckingStartTimestamp(Ljava/time/Instant;)V
+#getCheckingEndTimestamp()Ljava/time/Instant;
+#setCheckingEndTimestamp(Ljava/time/Instant;)V
+#getRegionInfoMap()Ljava/util/Map;
+#getDisabledTableRegions()Ljava/util/Set;
+#getSplitParentRegions()Ljava/util/Set;
+#getOrphanRegionsOnRS()Ljava/util/Map;
+#getOrphanRegionsOnFS()Ljava/util/Map;
+#getInconsistentRegions()Ljava/util/Map;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/hbck/HbckReport

+###org/apache/hadoop/hbase/master/http/MasterDumpServlet
@2.5.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/master/http/MasterRedirectServlet
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/http/InfoServer;Ljava/lang/String;)V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/master/http/MasterStatusServlet
@2.5.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V

+###org/apache/hadoop/hbase/master/http/MetaBrowser$Results
@2.5.0
+#hasMoreResults()Z
+#close()V
+#iterator()Ljava/util/Iterator;

+###org/apache/hadoop/hbase/master/http/MetaBrowser
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/client/AsyncConnection;Ljavax/servlet/http/HttpServletRequest;)V
+#getErrorMessages()Ljava/util/List;
+#getName()Ljava/lang/String;
+#getScanLimit()Ljava/lang/Integer;
+#getScanStart()[B
+#getScanRegionState()Lorg/apache/hadoop/hbase/master/RegionState$State;
+#getScanTable()Lorg/apache/hadoop/hbase/TableName;
+#getResults()Lorg/apache/hadoop/hbase/master/http/MetaBrowser$Results;
+#toString()Ljava/lang/String;
+#buildFirstPageUrl()Ljava/lang/String;
+#buildNextPageUrl([B)Ljava/lang/String;

+###org/apache/hadoop/hbase/master/http/RegionReplicaInfo
@2.5.0
+#from(Lorg/apache/hadoop/hbase/client/Result;)Ljava/util/List;
+#getRow()[B
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getRegionName()[B
+#getStartKey()[B
+#getEndKey()[B
+#getReplicaId()Ljava/lang/Integer;
+#getRegionState()Lorg/apache/hadoop/hbase/master/RegionState$State;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getSeqNum()J
+#getTargetServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getMergeRegionInfo()Ljava/util/Map;
+#getSplitRegionInfo()Ljava/util/Map;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/http/RegionVisualizer$RegionDetails
@2.5.0
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getRegionMetrics()Lorg/apache/hadoop/hbase/RegionMetrics;
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/RegionVisualizer$RegionDetails

+###org/apache/hadoop/hbase/master/http/RegionVisualizer
@2.5.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/client/Admin;)V
+#<init>(Lorg/apache/hadoop/hbase/client/AsyncAdmin;)V
+#renderRegionDetails()Ljava/lang/String;
+#main([Ljava/lang/String;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/RegionVisualizer

+###org/apache/hadoop/hbase/master/http/api_v1/ResourceConfigFactory
@2.5.0
+#createResourceConfig(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/master/HMaster;)Lorg/apache/hbase/thirdparty/org/glassfish/jersey/server/ResourceConfig;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/api_v1/ResourceConfigFactory

+###org/apache/hadoop/hbase/master/http/api_v1/cluster_metrics/model/ClusterMetrics
@2.5.0
+#from(Lorg/apache/hadoop/hbase/ClusterMetrics;)Lorg/apache/hadoop/hbase/master/http/api_v1/cluster_metrics/model/ClusterMetrics;
+#getHBaseVersion()Ljava/lang/String;
+#getClusterId()Ljava/lang/String;
+#getMasterName()Lorg/apache/hadoop/hbase/ServerName;
+#getBackupMasterNames()Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/api_v1/cluster_metrics/model/ClusterMetrics

+###org/apache/hadoop/hbase/master/http/api_v1/cluster_metrics/resource/ClusterMetricsResource
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#getBaseMetrics()Lorg/apache/hadoop/hbase/master/http/api_v1/cluster_metrics/model/ClusterMetrics;
+#getLiveServers()Ljava/util/Collection;
+#getDeadServers()Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/api_v1/cluster_metrics/resource/ClusterMetricsResource

+###org/apache/hadoop/hbase/master/http/gson/GsonFactory
@2.5.0
+#buildGson()Lorg/apache/hbase/thirdparty/com/google/gson/Gson;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/gson/GsonFactory

+###org/apache/hadoop/hbase/master/http/gson/GsonSerializationFeature
@2.5.0
+#<init>()V
+#configure(Lorg/apache/hbase/thirdparty/javax/ws/rs/core/FeatureContext;)Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/gson/GsonSerializationFeature

+###org/apache/hadoop/hbase/master/http/jersey/MasterFeature
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#configure(Lorg/apache/hbase/thirdparty/javax/ws/rs/core/FeatureContext;)Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/http/jersey/MasterFeature

+###org/apache/hadoop/hbase/master/janitor/CatalogJanitorReport
@2.4.13
+#<init>()V
+#getCreateTime()J
+#getHoles()Ljava/util/List;
+#getOverlaps()Ljava/util/List;
+#getMergedRegions()Ljava/util/Map;
+#getUnknownServers()Ljava/util/List;
+#getEmptyRegionInfo()Ljava/util/List;
+#isEmpty()Z
+#toString()Ljava/lang/String;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/janitor/CatalogJanitorReport

+###org/apache/hadoop/hbase/master/migrate/RollingUpgradeChore
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/migrate/RollingUpgradeChore

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureUtil$RSGroupGetter
@3.0.0-alpha-1
+#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;

+###org/apache/hadoop/hbase/master/procedure/ModifyTableDescriptorProcedure
@2.5.0
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/procedure/ModifyTableDescriptorProcedure

+###org/apache/hadoop/hbase/master/procedure/SnapshotProcedure
@3.0.0-alpha-3
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#toStringClassDetails(Ljava/lang/StringBuilder;)V
+#getSnapshotDesc()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;
+#getSnapshot()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;
+#markSnapshotCorrupted()V
+#isSnapshotCorrupted()Z

+###org/apache/hadoop/hbase/master/procedure/SnapshotRegionProcedure
@3.0.0-alpha-3
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#remoteCallFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;Ljava/io/IOException;)V
+#remoteOperationCompleted(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;)V
+#remoteOperationFailed(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#getProcName()Ljava/lang/String;
+#getRegion()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#remoteOperationFailed(Ljava/lang/Object;Lorg/apache/hadoop/hbase/procedure2/RemoteProcedureException;)V
+#remoteOperationCompleted(Ljava/lang/Object;)V
+#remoteCallFailed(Ljava/lang/Object;Ljava/lang/Object;Ljava/io/IOException;)V
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;

+###org/apache/hadoop/hbase/master/procedure/SnapshotVerifyProcedure
@3.0.0-alpha-3
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;

+###org/apache/hadoop/hbase/master/replication/AbstractPeerNoLockProcedure
@3.0.0-alpha-1
+#getPeerId()Ljava/lang/String;

+###org/apache/hadoop/hbase/master/replication/ClaimReplicationQueueRemoteProcedure
@2.5.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Ljava/lang/String;Lorg/apache/hadoop/hbase/ServerName;)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;

+###org/apache/hadoop/hbase/master/replication/ClaimReplicationQueuesProcedure
@2.5.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/ServerName;)V
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#hasMetaTableRegion()Z
+#getServerOperationType()Lorg/apache/hadoop/hbase/master/procedure/ServerProcedureInterface$ServerOperationType;

+###org/apache/hadoop/hbase/master/replication/RecoverStandbyProcedure
@3.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Z)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/replication/SyncReplicationReplayWALManager
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#registerPeer(Ljava/lang/String;)V
+#unregisterPeer(Ljava/lang/String;)V
+#acquirePeerWorker(Ljava/lang/String;Lorg/apache/hadoop/hbase/procedure2/Procedure;)Lorg/apache/hadoop/hbase/ServerName;
+#releasePeerWorker(Ljava/lang/String;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler;)V
+#addUsedPeerWorker(Ljava/lang/String;Lorg/apache/hadoop/hbase/ServerName;)V
+#createPeerRemoteWALDir(Ljava/lang/String;)V
+#renameToPeerReplayWALDir(Ljava/lang/String;)V
+#renameToPeerSnapshotWALDir(Ljava/lang/String;)V
+#getReplayWALsAndCleanUpUnusedFiles(Ljava/lang/String;)Ljava/util/List;
+#removePeerRemoteWALs(Ljava/lang/String;)V
+#removeWALRootPath(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#finishReplayWAL(Ljava/lang/String;)V
+#isReplayWALFinished(Ljava/lang/String;)Z
+#getRemoteWALDir()Lorg/apache/hadoop/fs/Path;

+###org/apache/hadoop/hbase/master/replication/SyncReplicationReplayWALProcedure
@3.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/master/replication/SyncReplicationReplayWALRemoteProcedure
@3.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/util/List;Lorg/apache/hadoop/hbase/ServerName;)V
+#remoteCallBuild(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/ServerName;)Ljava/util/Optional;
+#getPeerId()Ljava/lang/String;
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;
+#remoteCallBuild(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;

+###org/apache/hadoop/hbase/master/replication/TransitPeerSyncReplicationStateProcedure
@3.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)V
+#getPeerOperationType()Lorg/apache/hadoop/hbase/master/procedure/PeerProcedureInterface$PeerOperationType;

+###org/apache/hadoop/hbase/mob/MobFileCleanerChore
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#<init>()V
+#cleanupObsoleteMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)V
+#archiveMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;[BLjava/util/List;)V

+###org/apache/hadoop/hbase/mob/MobFileCompactionChore
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;I)V
+#performMajorCompactionInBatches(Lorg/apache/hadoop/hbase/client/Admin;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;)V

+###org/apache/hadoop/hbase/procedure/ProcedureCoordinationManager
@3.0.0-alpha-1
+#getProcedureCoordinatorRpcs(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;
+#getProcedureMemberRpcs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;

+###org/apache/hadoop/hbase/procedure/ZKProcedureCoordinationManager
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Server;)V
+#getProcedureCoordinatorRpcs(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureCoordinatorRpcs;
+#getProcedureMemberRpcs(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure/ProcedureMemberRpcs;

+###org/apache/hadoop/hbase/procedure2/BaseRSProcedureCallable
@2.5.0
+#<init>()V
+#call()Ljava/lang/Void;
+#init([BLorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#call()Ljava/lang/Object;

+###org/apache/hadoop/hbase/protobuf/ReplicationProtobufUtil
@3.0.0-alpha-1
+#<init>()V
+#replicateWALEntry(Lorg/apache/hadoop/hbase/client/AsyncRegionServerAdmin;[Lorg/apache/hadoop/hbase/wal/WAL$Entry;Ljava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;I)V
+#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/util/Pair;
+#buildReplicateWALEntryRequest([Lorg/apache/hadoop/hbase/wal/WAL$Entry;[BLjava/lang/String;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/util/Pair;

+###org/apache/hadoop/hbase/regionserver/BootstrapNodeManager
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;Lorg/apache/hadoop/hbase/zookeeper/MasterAddressTracker;)V
+#stop()V
+#getBootstrapNodes()Ljava/util/List;

+###org/apache/hadoop/hbase/regionserver/BrokenStoreFileCleaner
@2.5.0
+#<init>(IILorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#setEnabled(Z)Z
+#getEnabled()Z
+#chore()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/BrokenStoreFileCleaner

+###org/apache/hadoop/hbase/regionserver/CompactSplit$CompactionCompleteTracker
@2.5.0
+#completed(Lorg/apache/hadoop/hbase/regionserver/Store;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/CompactSplit$CompactionCompleteTracker

+###org/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams
@2.5.0
+#maxKeyCount()J
+#maxKeyCount(J)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#compression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#compression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#isCompaction()Z
+#isCompaction(Z)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#includeMVCCReadpoint()Z
+#includeMVCCReadpoint(Z)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#includesTag()Z
+#includesTag(Z)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#shouldDropBehind()Z
+#shouldDropBehind(Z)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#totalCompactedFilesSize()J
+#totalCompactedFilesSize(J)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#fileStoragePolicy()Ljava/lang/String;
+#fileStoragePolicy(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#writerCreationTracker()Ljava/util/function/Consumer;
+#writerCreationTracker(Ljava/util/function/Consumer;)Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
+#create()Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams

+###org/apache/hadoop/hbase/regionserver/HRegion$PrepareFlushResult
@3.0.0-alpha-3
+#getResult()Lorg/apache/hadoop/hbase/regionserver/HRegion$FlushResult;

+###org/apache/hadoop/hbase/regionserver/InputStreamBlockDistribution
@2.5.0
+#<init>(Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/hbase/regionserver/StoreFileInfo;)V
+#isEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#getHDFSBlockDistribution()Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/InputStreamBlockDistribution

+###org/apache/hadoop/hbase/regionserver/MemStoreFlusher
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getUpdatesBlockedMsHighWater()Ljava/util/concurrent/atomic/LongAdder;
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Z
+#requestFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;Ljava/util/List;Lorg/apache/hadoop/hbase/regionserver/FlushLifeCycleTracker;)Z
+#requestDelayedFlush(Lorg/apache/hadoop/hbase/regionserver/HRegion;J)Z
+#getFlushQueueSize()I
+#reclaimMemStoreMemory()V
+#toString()Ljava/lang/String;
+#dumpQueue()Ljava/lang/String;
+#registerFlushRequestListener(Lorg/apache/hadoop/hbase/regionserver/FlushRequestListener;)V
+#unregisterFlushRequestListener(Lorg/apache/hadoop/hbase/regionserver/FlushRequestListener;)Z
+#setGlobalMemStoreLimit(J)V

+###org/apache/hadoop/hbase/regionserver/RSSnapshotVerifier
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#verifyRegion(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/SnapshotProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/client/RegionInfo;)V

+###org/apache/hadoop/hbase/regionserver/SnapshotRegionCallable
@3.0.0-alpha-3
+#<init>()V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;

+###org/apache/hadoop/hbase/regionserver/SnapshotVerifyCallable
@3.0.0-alpha-3
+#<init>()V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;

+###org/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable
@2.5.0
+#run()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/StoreEngine$IOExceptionRunnable

+###org/apache/hadoop/hbase/regionserver/compactions/CloseChecker
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;J)V
+#isSizeLimit(Lorg/apache/hadoop/hbase/regionserver/Store;J)Z
+#isTimeLimit(Lorg/apache/hadoop/hbase/regionserver/Store;J)Z

+###org/apache/hadoop/hbase/regionserver/compactions/ForbidMajorCompactionChecker
@3.0.0-alpha-1
+#<init>()V
+#test(Lorg/apache/hadoop/hbase/replication/SyncReplicationState;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)Z
+#get()Lorg/apache/hadoop/hbase/regionserver/compactions/ForbidMajorCompactionChecker;
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/hbase/regionserver/http/RSDumpServlet
@2.5.0
+#<init>()V
+#doGet(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
+#dumpQueue(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V
+#dumpCallQueues(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;Ljava/io/PrintWriter;)V

+###org/apache/hadoop/hbase/regionserver/http/RSStatusServlet
@2.5.0
+#<init>()V

+###org/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationBufferManager
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;)V
+#increase(J)Z
+#decrease(J)V
+#stop()V

+###org/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationSink
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/regionserver/regionreplication/RegionReplicationBufferManager;Ljava/lang/Runnable;Lorg/apache/hadoop/hbase/client/AsyncClusterConnection;)V
+#add(Lorg/apache/hadoop/hbase/wal/WALKeyImpl;Lorg/apache/hadoop/hbase/wal/WALEdit;Lorg/apache/hadoop/hbase/ipc/ServerCall;)V
+#stop()V
+#waitUntilStopped()V

+###org/apache/hadoop/hbase/regionserver/storefiletracker/InitializeStoreFileTrackerProcedure
@2.5.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/InitializeStoreFileTrackerProcedure

+###org/apache/hadoop/hbase/regionserver/storefiletracker/ModifyColumnFamilyStoreFileTrackerProcedure
@2.5.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;[BLjava/lang/String;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/ModifyColumnFamilyStoreFileTrackerProcedure

+###org/apache/hadoop/hbase/regionserver/storefiletracker/ModifyStoreFileTrackerProcedure
@2.5.0
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableOperationType()Lorg/apache/hadoop/hbase/master/procedure/TableProcedureInterface$TableOperationType;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/ModifyStoreFileTrackerProcedure

+###org/apache/hadoop/hbase/regionserver/storefiletracker/ModifyTableStoreFileTrackerProcedure
@2.5.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/ModifyTableStoreFileTrackerProcedure

+###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTracker
@2.5.0
+#load()Ljava/util/List;
+#add(Ljava/util/Collection;)V
+#replace(Ljava/util/Collection;Ljava/util/Collection;)V
+#set(Ljava/util/List;)V
+#createWriter(Lorg/apache/hadoop/hbase/regionserver/CreateStoreFileWriterParams;)Lorg/apache/hadoop/hbase/regionserver/StoreFileWriter;
+#updateWithTrackerConfigs(Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;)Lorg/apache/hadoop/hbase/client/TableDescriptorBuilder;
+#requireWritingToTmpDirFirst()Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTracker

+###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerFactory$Trackers
@2.5.0
+#values()[Lorg/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerFactory$Trackers;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerFactory$Trackers;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerFactory$Trackers

+###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerFactory
@2.5.0
+#getStoreFileTrackerName(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getStoreFileTrackerName(Ljava/lang/Class;)Ljava/lang/String;
+#getTrackerClass(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;
+#getTrackerClass(Ljava/lang/String;)Ljava/lang/Class;
+#create(Lorg/apache/hadoop/conf/Configuration;ZLorg/apache/hadoop/hbase/regionserver/StoreContext;)Lorg/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTracker;
+#create(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/ColumnFamilyDescriptor;Lorg/apache/hadoop/hbase/regionserver/HRegionFileSystem;)Lorg/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTracker;
+#updateWithTrackerConfigs(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)Lorg/apache/hadoop/hbase/client/TableDescriptor;
+#isMigration(Ljava/lang/Class;)Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerFactory

+###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerValidationUtils
@2.5.0
+#checkForCreateTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
+#checkForModifyTable(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;Z)V
+#validatePreRestoreSnapshot(Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/hbase/client/TableDescriptor;Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/storefiletracker/StoreFileTrackerValidationUtils

+###org/apache/hadoop/hbase/regionserver/wal/CombinedAsyncWriter
@3.0.0-alpha-1
+#getLength()J
+#getSyncedLength()J
+#close()V
+#append(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)V
+#sync(Z)Ljava/util/concurrent/CompletableFuture;
+#create(Lorg/apache/hadoop/hbase/wal/WALProvider$AsyncWriter;[Lorg/apache/hadoop/hbase/wal/WALProvider$AsyncWriter;)Lorg/apache/hadoop/hbase/regionserver/wal/CombinedAsyncWriter;

+###org/apache/hadoop/hbase/regionserver/wal/DualAsyncFSWAL
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/apache/hbase/thirdparty/io/netty/channel/EventLoopGroup;Ljava/lang/Class;)V
+#skipRemoteWAL(Z)V

+###org/apache/hadoop/hbase/regionserver/wal/WALClosedException
@3.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/replication/ChainWALEmptyEntryFilter
@3.0.0-alpha-1
+#<init>([Lorg/apache/hadoop/hbase/replication/WALEntryFilter;)V
+#<init>(Ljava/util/List;)V
+#filter(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Lorg/apache/hadoop/hbase/wal/WAL$Entry;
+#setFilterEmptyEntry(Z)V

+###org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint$SinkPeer
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/client/AsyncRegionServerAdmin;)V
+#getRegionServer()Lorg/apache/hadoop/hbase/client/AsyncRegionServerAdmin;

+###org/apache/hadoop/hbase/replication/ReplicationBarrierFamilyFormat$ReplicationBarrierResult
@3.0.0-alpha-1
+#getBarriers()[J
+#getState()Lorg/apache/hadoop/hbase/master/RegionState$State;
+#getParentRegionNames()Ljava/util/List;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/replication/ReplicationBarrierFamilyFormat
@3.0.0-alpha-1
+#addReplicationBarrier(Lorg/apache/hadoop/hbase/client/Put;J)V
+#getParentsBytes(Ljava/util/List;)[B
+#addReplicationParent(Lorg/apache/hadoop/hbase/client/Put;Ljava/util/List;)V
+#makePutForReplicationBarrier(Lorg/apache/hadoop/hbase/client/RegionInfo;JJ)Lorg/apache/hadoop/hbase/client/Put;
+#getReplicationBarriers(Lorg/apache/hadoop/hbase/client/Result;)[J
+#getReplicationBarrierResult(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;[B[B)Lorg/apache/hadoop/hbase/replication/ReplicationBarrierFamilyFormat$ReplicationBarrierResult;
+#getReplicationBarriers(Lorg/apache/hadoop/hbase/client/Connection;[B)[J
+#getTableEncodedRegionNameAndLastBarrier(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#getTableEncodedRegionNamesForSerialReplication(Lorg/apache/hadoop/hbase/client/Connection;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;

+###org/apache/hadoop/hbase/replication/regionserver/ClaimReplicationQueueCallable
@2.5.0
+#<init>()V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;

+###org/apache/hadoop/hbase/replication/regionserver/PeerActionListener
@3.0.0-alpha-1
+#peerSyncReplicationStateChange(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;I)V

+###org/apache/hadoop/hbase/replication/regionserver/RejectReplicationRequestStateChecker
@3.0.0-alpha-1
+#<init>()V
+#test(Lorg/apache/hadoop/hbase/replication/SyncReplicationState;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)Z
+#get()Lorg/apache/hadoop/hbase/replication/regionserver/RejectReplicationRequestStateChecker;
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/hbase/replication/regionserver/RejectRequestsFromClientStateChecker
@3.0.0-alpha-1
+#<init>()V
+#test(Lorg/apache/hadoop/hbase/replication/SyncReplicationState;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;)Z
+#get()Lorg/apache/hadoop/hbase/replication/regionserver/RejectRequestsFromClientStateChecker;
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/apache/hadoop/hbase/replication/regionserver/ReplaySyncReplicationWALCallable
@3.0.0-alpha-1
+#<init>()V
+#getEventType()Lorg/apache/hadoop/hbase/executor/EventType;

+###org/apache/hadoop/hbase/replication/regionserver/SyncReplicationPeerInfoProvider
@3.0.0-alpha-1
+#getPeerIdAndRemoteWALDir(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Optional;
+#checkState(Lorg/apache/hadoop/hbase/TableName;Ljava/util/function/BiPredicate;)Z

+###org/apache/hadoop/hbase/rsgroup/MigrateRSGroupProcedure
@3.0.0-alpha-2
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V
@3.0.0-alpha-3
+#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/TableName;)V
-#<init>(Lorg/apache/hadoop/hbase/master/procedure/MasterProcedureEnv;Lorg/apache/hadoop/hbase/client/TableDescriptor;)V

+###org/apache/hadoop/hbase/rsgroup/RSGroupAdminClient
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/client/Connection;)V
+#getRSGroupInfo(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;
+#getRSGroupInfoOfTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;
+#moveServers(Ljava/util/Set;Ljava/lang/String;)V
+#moveTables(Ljava/util/Set;Ljava/lang/String;)V
+#addRSGroup(Ljava/lang/String;)V
+#removeRSGroup(Ljava/lang/String;)V
+#balanceRSGroup(Ljava/lang/String;)Z
+#listRSGroups()Ljava/util/List;
+#getRSGroupOfServer(Lorg/apache/hadoop/hbase/net/Address;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;
+#moveServersAndTables(Ljava/util/Set;Ljava/util/Set;Ljava/lang/String;)V
+#removeServers(Ljava/util/Set;)V
@3.0.0-alpha-2
+#balanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)Lorg/apache/hadoop/hbase/client/BalanceResponse;
-#balanceRSGroup(Ljava/lang/String;)Z

+###org/apache/hadoop/hbase/rsgroup/RSGroupAdminEndpoint
@3.0.0-alpha-1
+#<init>()V
+#start(Lorg/apache/hadoop/hbase/CoprocessorEnvironment;)V
+#getServices()Ljava/lang/Iterable;

+###org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer
@3.0.0-alpha-1
+#<init>()V
+#updateClusterMetrics(Lorg/apache/hadoop/hbase/ClusterMetrics;)V
+#setMasterServices(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
+#roundRobinAssignment(Ljava/util/List;Ljava/util/List;)Ljava/util/Map;
+#retainAssignment(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;
+#randomAssignment(Lorg/apache/hadoop/hbase/client/RegionInfo;Ljava/util/List;)Lorg/apache/hadoop/hbase/ServerName;
+#initialize()V
+#isOnline()Z
+#isFallbackEnabled()Z
+#regionOnline(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/ServerName;)V
+#regionOffline(Lorg/apache/hadoop/hbase/client/RegionInfo;)V
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
+#stop(Ljava/lang/String;)V
+#isStopped()Z
+#getInternalBalancer()Lorg/apache/hadoop/hbase/master/LoadBalancer;
+#getFavoredNodesManager()Lorg/apache/hadoop/hbase/favored/FavoredNodesManager;
+#postMasterStartupInitialize()V
+#updateBalancerStatus(Z)V
+#setClusterInfoProvider(Lorg/apache/hadoop/hbase/master/balancer/ClusterInfoProvider;)V
@3.0.0-alpha-2
+#updateBalancerLoadInfo(Ljava/util/Map;)V

+###org/apache/hadoop/hbase/rsgroup/RSGroupInfoManager
@3.0.0-alpha-1
+#start()V
+#addRSGroup(Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;)V
+#removeRSGroup(Ljava/lang/String;)V
+#moveServers(Ljava/util/Set;Ljava/lang/String;)V
+#getRSGroupOfServer(Lorg/apache/hadoop/hbase/net/Address;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;
+#getRSGroup(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;
+#listRSGroups()Ljava/util/List;
+#isOnline()Z
+#removeServers(Ljava/util/Set;)V
+#getRSGroupForTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;
+#create(Lorg/apache/hadoop/hbase/master/MasterServices;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfoManager;
+#balanceRSGroup(Ljava/lang/String;)Z
+#setRSGroup(Ljava/util/Set;Ljava/lang/String;)V
+#determineRSGroupInfoForTable(Lorg/apache/hadoop/hbase/TableName;)Ljava/lang/String;
+#renameRSGroup(Ljava/lang/String;Ljava/lang/String;)V
+#updateRSGroupConfig(Ljava/lang/String;Ljava/util/Map;)V
@3.0.0-alpha-2
+#balanceRSGroup(Ljava/lang/String;Lorg/apache/hadoop/hbase/client/BalanceRequest;)Lorg/apache/hadoop/hbase/client/BalanceResponse;
-#balanceRSGroup(Ljava/lang/String;)Z

+###org/apache/hadoop/hbase/rsgroup/RSGroupMajorCompactionTTL
@3.0.0-alpha-1
+#compactTTLRegionsOnGroup(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;IJIIZZ)I
+#run([Ljava/lang/String;)I
+#main([Ljava/lang/String;)V

+###org/apache/hadoop/hbase/rsgroup/RSGroupUtil
@3.0.0-alpha-1
+#isRSGroupEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#enableRSGroup(Lorg/apache/hadoop/conf/Configuration;)V
+#listTablesInRSGroup(Lorg/apache/hadoop/hbase/master/MasterServices;Ljava/lang/String;)Ljava/util/List;
+#getRSGroupInfo(Lorg/apache/hadoop/hbase/master/MasterServices;Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfoManager;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/Optional;
+#fillTables(Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;Ljava/util/Collection;)Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;

+###org/apache/hadoop/hbase/server/trace/IpcServerSpanBuilder
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/ipc/RpcCall;)V
+#get()Lio/opentelemetry/api/trace/Span;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/server/trace/IpcServerSpanBuilder;
+#addAttribute(Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/server/trace/IpcServerSpanBuilder;
+#build()Lio/opentelemetry/api/trace/Span;
+#get()Ljava/lang/Object;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/server/trace/IpcServerSpanBuilder

+###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl$ImplData
@2.5.0
+#<init>()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl$ImplData

+###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl$Intf
@2.5.0
+#renderNoFlush(Ljava/io/Writer;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl$Intf

+###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl
@2.5.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer()Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;)V
+#renderNoFlush(Ljava/io/Writer;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl

+###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmplImpl
@2.5.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/tmpl/master/RegionVisualizerTmplImpl

+###org/apache/hadoop/hbase/util/CoprocessorConfigurationUtil
@2.4.12
+#checkConfigurationChange(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/conf/Configuration;[Ljava/lang/String;)Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/CoprocessorConfigurationUtil

+###org/apache/hadoop/hbase/util/FSUtils$ReferenceAndLinkFileFilter
@2.4.9
+#<init>(Lorg/apache/hadoop/fs/FileSystem;)V
+#accept(Lorg/apache/hadoop/fs/Path;)Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/FSUtils$ReferenceAndLinkFileFilter

+###org/apache/hadoop/hbase/util/IdReadWriteLockStrongRef
@3.0.0-alpha-1
+#<init>()V
+#getLock(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;

+###org/apache/hadoop/hbase/util/IdReadWriteLockWithObjectPool$ReferenceType
@3.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/util/IdReadWriteLockWithObjectPool$ReferenceType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/IdReadWriteLockWithObjectPool$ReferenceType;

+###org/apache/hadoop/hbase/util/IdReadWriteLockWithObjectPool
@3.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/util/IdReadWriteLockWithObjectPool$ReferenceType;)V
+#getLock(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReentrantReadWriteLock;
+#getReferenceType()Lorg/apache/hadoop/hbase/util/IdReadWriteLockWithObjectPool$ReferenceType;

+###org/apache/hadoop/hbase/util/OOMEChecker
@3.0.0-alpha-2
+#exitIfOOME(Ljava/lang/Throwable;Ljava/lang/String;)Z

+###org/apache/hadoop/hbase/wal/SyncReplicationWALProvider
@3.0.0-alpha-1
+#setPeerInfoProvider(Lorg/apache/hadoop/hbase/replication/regionserver/SyncReplicationPeerInfoProvider;)V
+#init(Lorg/apache/hadoop/hbase/wal/WALFactory;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Lorg/apache/hadoop/hbase/Abortable;)V
+#getWAL(Lorg/apache/hadoop/hbase/client/RegionInfo;)Lorg/apache/hadoop/hbase/wal/WAL;
+#getWALs()Ljava/util/List;
+#shutdown()V
+#close()V
+#getNumLogFiles()J
+#getLogFileSize()J
+#addWALActionsListener(Lorg/apache/hadoop/hbase/regionserver/wal/WALActionsListener;)V
+#peerSyncReplicationStateChange(Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;Lorg/apache/hadoop/hbase/replication/SyncReplicationState;I)V
+#getSyncReplicationPeerIdFromWALName(Ljava/lang/String;)Ljava/util/Optional;

+###org/apache/hadoop/hbase/http/ProfileServlet
@1.2.12
+#<init>()V
@1.3.0
-###org/apache/hadoop/hbase/http/ProfileServlet

+###org/apache/hadoop/hbase/jetty/SslSelectChannelConnectorSecure
@0.98.23-hadoop1
+#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/jetty/SslSelectChannelConnectorSecure

+###org/apache/hadoop/hbase/util/MBeanUtil
@1.4.0
+#<init>()V
+#registerMBean(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljavax/management/ObjectName;
+#unregisterMBean(Ljavax/management/ObjectName;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/MBeanUtil

+###org/apache/hadoop/hbase/util/ProcessUtils
@1.2.12
+#getPid()Ljava/lang/Integer;
+#runCmdAsync(Ljava/util/List;)Ljava/lang/Process;
@1.3.0
-###org/apache/hadoop/hbase/util/ProcessUtils

+###org/apache/hadoop/hbase/master/AssignmentManager$ServerHostRegion
@1.1.3
+#values()[Lorg/apache/hadoop/hbase/master/AssignmentManager$ServerHostRegion;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/AssignmentManager$ServerHostRegion;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/AssignmentManager$ServerHostRegion

+###org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent
@1.2.0
+#<init>(Ljava/lang/String;)V
+#isReady()Z
+#toString()Ljava/lang/String;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/master/procedure/MasterProcedureScheduler$ProcedureEvent

+###org/apache/hadoop/hbase/tool/Canary$Factory
@1.3.6
+#<init>()V
@1.4.0
-###org/apache/hadoop/hbase/tool/Canary$Factory

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$ReplicationSourceShipperThread
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
+#run()V
+#startup()V
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#getCurrentPosition()J
+#setWorkerState(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;)V
+#getWorkerState()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;
@1.4.13
+#getLastLoggedPath()Lorg/apache/hadoop/fs/Path;
+#getLastLoggedPosition()J
-#getCurrentPosition()J
@1.5.0
+#getWalGroupId()Ljava/lang/String;
+#getCurrentPosition()J
-#getLastLoggedPath()Lorg/apache/hadoop/fs/Path;
-#getLastLoggedPosition()J
@1.6.0
+#getLastLoggedPath()Lorg/apache/hadoop/fs/Path;
+#getLastLoggedPosition()J
-#getCurrentPosition()J
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;Ljava/lang/String;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceLogQueue;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
-#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$ReplicationSourceShipperThread

+###org/apache/hadoop/hbase/http/ProfileOutputServlet
@1.2.12
+#<init>()V
@1.3.0
-###org/apache/hadoop/hbase/http/ProfileOutputServlet

+###org/apache/hadoop/hbase/master/cleaner/ReplicationZKLockCleanerChore
@1.1.6
+#<init>(Lorg/apache/hadoop/hbase/Stoppable;Lorg/apache/hadoop/hbase/Abortable;ILorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)V
@1.2.0
-###org/apache/hadoop/hbase/master/cleaner/ReplicationZKLockCleanerChore

+###org/apache/hadoop/hbase/http/ProfileServlet$DisabledServlet
@1.3.5
+#<init>()V
@1.4.0
-###org/apache/hadoop/hbase/http/ProfileServlet$DisabledServlet

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState
@1.2.7
+#values()[Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;
@1.3.0
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState

+###org/apache/hadoop/hbase/ipc/RpcServer$Call
@1.1.5
+#toString()Ljava/lang/String;
+#hasPriority()Z
+#getPriority()I
+#endDelay(Ljava/lang/Object;)V
+#endDelay()V
+#startDelay(Z)V
+#endDelayThrowing(Ljava/lang/Throwable;)V
+#isDelayed()Z
+#isReturnValueDelayed()Z
+#isClientCellBlockSupport()Z
+#disconnectSince()J
+#getSize()J
+#sendResponseIfReady()V
+#getRemoteUser()Lorg/apache/hadoop/security/UserGroupInformation;
+#getRequestUser()Lorg/apache/hadoop/hbase/security/User;
+#getRequestUserName()Ljava/lang/String;
+#getRemoteAddress()Ljava/net/InetAddress;
+#getClientVersionInfo()Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$VersionInfo;
@1.2.0
-###org/apache/hadoop/hbase/ipc/RpcServer$Call

+###org/apache/hadoop/hbase/generated/rest/rest_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/generated/rest/rest_jsp

+###org/apache/hadoop/hbase/rest/client/Client
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/rest/client/Cluster;)V
+#shutdown()V
+#getHttpClient()Lorg/apache/commons/httpclient/HttpClient;
+#addExtraHeader(Ljava/lang/String;Ljava/lang/String;)V
+#getExtraHeader(Ljava/lang/String;)Ljava/lang/String;
+#getExtraHeaders()Ljava/util/Map;
+#removeExtraHeader(Ljava/lang/String;)V
+#executePathOnly(Lorg/apache/hadoop/hbase/rest/client/Cluster;Lorg/apache/commons/httpclient/HttpMethod;[Lorg/apache/commons/httpclient/Header;Ljava/lang/String;)I
+#executeURI(Lorg/apache/commons/httpclient/HttpMethod;[Lorg/apache/commons/httpclient/Header;Ljava/lang/String;)I
+#execute(Lorg/apache/hadoop/hbase/rest/client/Cluster;Lorg/apache/commons/httpclient/HttpMethod;[Lorg/apache/commons/httpclient/Header;Ljava/lang/String;)I
+#getCluster()Lorg/apache/hadoop/hbase/rest/client/Cluster;
+#setCluster(Lorg/apache/hadoop/hbase/rest/client/Cluster;)V
+#head(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#head(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;[Lorg/apache/commons/httpclient/Header;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#get(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#get(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#get(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#get(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#get(Ljava/lang/String;[Lorg/apache/commons/httpclient/Header;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#get(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;[Lorg/apache/commons/httpclient/Header;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#put(Ljava/lang/String;Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#put(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#put(Ljava/lang/String;[Lorg/apache/commons/httpclient/Header;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#put(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;[Lorg/apache/commons/httpclient/Header;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#post(Ljava/lang/String;Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#post(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;Ljava/lang/String;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#post(Ljava/lang/String;[Lorg/apache/commons/httpclient/Header;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#post(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;[Lorg/apache/commons/httpclient/Header;[B)Lorg/apache/hadoop/hbase/rest/client/Response;
+#delete(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Response;
+#delete(Lorg/apache/hadoop/hbase/rest/client/Cluster;Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Response;
@0.98.7-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/rest/client/Cluster;Z)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/client/Client

+###org/apache/hadoop/hbase/rest/client/Cluster
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#isEmpty()Z
+#add(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Cluster;
+#add(Ljava/lang/String;I)Lorg/apache/hadoop/hbase/rest/client/Cluster;
+#remove(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/client/Cluster;
+#remove(Ljava/lang/String;I)Lorg/apache/hadoop/hbase/rest/client/Cluster;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/client/Cluster

+###org/apache/hadoop/hbase/rest/client/RemoteAdmin
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/client/Client;Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/hbase/rest/client/Client;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#isTableAvailable(Ljava/lang/String;)Z
+#isTableAvailable([B)Z
+#createTable(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#deleteTable(Ljava/lang/String;)V
+#deleteTable([B)V
@0.95.1-hadoop1
+#getRestVersion()Lorg/apache/hadoop/hbase/rest/model/VersionModel;
+#getClusterStatus()Lorg/apache/hadoop/hbase/rest/model/StorageClusterStatusModel;
+#getClusterVersion()Lorg/apache/hadoop/hbase/rest/model/StorageClusterVersionModel;
+#getTableList()Lorg/apache/hadoop/hbase/rest/model/TableListModel;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/client/RemoteAdmin

+###org/apache/hadoop/hbase/rest/client/RemoteHTable
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/client/Client;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/rest/client/Client;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/rest/client/Client;Lorg/apache/hadoop/conf/Configuration;[B)V
+#getTableName()[B
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#close()V
+#get(Lorg/apache/hadoop/hbase/client/Get;)Lorg/apache/hadoop/hbase/client/Result;
+#get(Ljava/util/List;)[Lorg/apache/hadoop/hbase/client/Result;
+#exists(Lorg/apache/hadoop/hbase/client/Get;)Z
+#exists(Ljava/util/List;)[Ljava/lang/Boolean;
+#put(Lorg/apache/hadoop/hbase/client/Put;)V
+#put(Ljava/util/List;)V
+#delete(Lorg/apache/hadoop/hbase/client/Delete;)V
+#delete(Ljava/util/List;)V
+#flushCommits()V
+#getScanner(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#getScanner([B)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#getScanner([B[B)Lorg/apache/hadoop/hbase/client/ResultScanner;
+#isAutoFlush()Z
+#getRowOrBefore([B[B)Lorg/apache/hadoop/hbase/client/Result;
+#checkAndPut([B[B[B[BLorg/apache/hadoop/hbase/client/Put;)Z
+#checkAndDelete([B[B[B[BLorg/apache/hadoop/hbase/client/Delete;)Z
+#increment(Lorg/apache/hadoop/hbase/client/Increment;)Lorg/apache/hadoop/hbase/client/Result;
+#append(Lorg/apache/hadoop/hbase/client/Append;)Lorg/apache/hadoop/hbase/client/Result;
+#incrementColumnValue([B[B[BJ)J
+#incrementColumnValue([B[B[BJZ)J
+#batch(Ljava/util/List;[Ljava/lang/Object;)V
+#batch(Ljava/util/List;)[Ljava/lang/Object;
+#batchCallback(Ljava/util/List;[Ljava/lang/Object;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#batchCallback(Ljava/util/List;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)[Ljava/lang/Object;
+#coprocessorService([B)Lorg/apache/hadoop/hbase/ipc/CoprocessorRpcChannel;
+#coprocessorService(Ljava/lang/Class;[B[BLorg/apache/hadoop/hbase/client/coprocessor/Batch$Call;)Ljava/util/Map;
+#coprocessorService(Ljava/lang/Class;[B[BLorg/apache/hadoop/hbase/client/coprocessor/Batch$Call;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
+#mutateRow(Lorg/apache/hadoop/hbase/client/RowMutations;)V
+#setAutoFlush(Z)V
+#setAutoFlush(ZZ)V
+#getWriteBufferSize()J
+#setWriteBufferSize(J)V
@0.95.1-hadoop1
+#incrementColumnValue([B[B[BJLorg/apache/hadoop/hbase/client/Durability;)J
-#incrementColumnValue([B[B[BJZ)J
@0.95.2-hadoop1
+#getName()Lorg/apache/hadoop/hbase/TableName;
@0.96.0-hadoop1
+#setAutoFlushTo(Z)V
+#incrementColumnValue([B[B[BJZ)J
@0.98.1-hadoop1
+#batchCoprocessorService(Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;[B[BLcom/google/protobuf/Message;)Ljava/util/Map;
+#batchCoprocessorService(Lcom/google/protobuf/Descriptors$MethodDescriptor;Lcom/google/protobuf/Message;[B[BLcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/client/coprocessor/Batch$Callback;)V
@0.98.7-hadoop1
+#checkAndMutate([B[B[BLorg/apache/hadoop/hbase/filter/CompareFilter$CompareOp;[BLorg/apache/hadoop/hbase/client/RowMutations;)Z
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/client/RemoteHTable

+###org/apache/hadoop/hbase/rest/client/Response
@0.95.0
+#<init>(I)V
+#<init>(I[Lorg/apache/commons/httpclient/Header;)V
+#<init>(I[Lorg/apache/commons/httpclient/Header;[B)V
+#getCode()I
+#getHeaders()[Lorg/apache/commons/httpclient/Header;
+#getHeader(Ljava/lang/String;)Ljava/lang/String;
+#getLocation()Ljava/lang/String;
+#hasBody()Z
+#getBody()[B
+#setCode(I)V
+#setHeaders([Lorg/apache/commons/httpclient/Header;)V
+#setBody([B)V
@0.98.0-hadoop1
+#<init>(I[Lorg/apache/commons/httpclient/Header;[BLjava/io/InputStream;)V
+#getStream()Ljava/io/InputStream;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/client/Response

+###org/apache/hadoop/hbase/rest/Constants
@0.95.0
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/Constants

+###org/apache/hadoop/hbase/rest/ExistsResource
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/TableResource;)V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ExistsResource

+###org/apache/hadoop/hbase/rest/filter/AuthFilter
@0.95.2-hadoop1
+#<init>()V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/filter/AuthFilter

+###org/apache/hadoop/hbase/rest/filter/GzipFilter
@0.95.0
+#<init>()V
+#init(Ljavax/servlet/FilterConfig;)V
+#destroy()V
+#doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/filter/GzipFilter

+###org/apache/hadoop/hbase/rest/filter/GZIPRequestStream
@0.95.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#read()I
+#read([B)I
+#read([BII)I
+#close()V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/filter/GZIPRequestStream

+###org/apache/hadoop/hbase/rest/filter/GZIPRequestWrapper
@0.95.0
+#<init>(Ljavax/servlet/http/HttpServletRequest;)V
+#getInputStream()Ljavax/servlet/ServletInputStream;
+#getReader()Ljava/io/BufferedReader;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/filter/GZIPRequestWrapper

+###org/apache/hadoop/hbase/rest/filter/GZIPResponseStream
@0.95.0
+#<init>(Ljavax/servlet/http/HttpServletResponse;)V
+#resetBuffer()V
+#write(I)V
+#write([B)V
+#write([BII)V
+#close()V
+#flush()V
+#finish()V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/filter/GZIPResponseStream

+###org/apache/hadoop/hbase/rest/filter/GZIPResponseWrapper
@0.95.0
+#<init>(Ljavax/servlet/http/HttpServletResponse;)V
+#setStatus(I)V
+#addHeader(Ljava/lang/String;Ljava/lang/String;)V
+#setContentLength(I)V
+#setIntHeader(Ljava/lang/String;I)V
+#setHeader(Ljava/lang/String;Ljava/lang/String;)V
+#flushBuffer()V
+#reset()V
+#resetBuffer()V
+#sendError(ILjava/lang/String;)V
+#sendError(I)V
+#sendRedirect(Ljava/lang/String;)V
+#getOutputStream()Ljavax/servlet/ServletOutputStream;
+#getWriter()Ljava/io/PrintWriter;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/filter/GZIPResponseWrapper

+###org/apache/hadoop/hbase/rest/MetricsREST
@0.95.0
+#getSource()Lorg/apache/hadoop/hbase/rest/MetricsRESTSource;
+#<init>()V
+#incrementRequests(I)V
+#incrementSucessfulGetRequests(I)V
+#incrementSucessfulPutRequests(I)V
+#incrementFailedPutRequests(I)V
+#incrementFailedGetRequests(I)V
+#incrementSucessfulDeleteRequests(I)V
+#incrementFailedDeleteRequests(I)V
@0.98.0-hadoop1
+#incrementSucessfulScanRequests(I)V
+#incrementFailedScanRequests(I)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/MetricsREST

+###org/apache/hadoop/hbase/rest/model/CellModel
@0.95.0
+#<init>()V
+#<init>([B[B)V
+#<init>([B[B[B)V
+#<init>(Lorg/apache/hadoop/hbase/KeyValue;)V
+#<init>([BJ[B)V
+#<init>([B[BJ[B)V
+#getColumn()[B
+#setColumn([B)V
+#hasUserTimestamp()Z
+#getTimestamp()J
+#setTimestamp(J)V
+#getValue()[B
+#setValue([B)V
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/CellModel

+###org/apache/hadoop/hbase/rest/model/CellSetModel
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#addRow(Lorg/apache/hadoop/hbase/rest/model/RowModel;)V
+#getRows()Ljava/util/List;
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/CellSetModel

+###org/apache/hadoop/hbase/rest/model/ColumnSchemaModel
@0.95.0
+#<init>()V
+#addAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/String;
+#getName()Ljava/lang/String;
+#getAny()Ljava/util/Map;
+#setName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#__getBlockcache()Z
+#__getBlocksize()I
+#__getBloomfilter()Ljava/lang/String;
+#__getCompression()Ljava/lang/String;
+#__getInMemory()Z
+#__getTTL()I
+#__getVersions()I
+#__setBlocksize(I)V
+#__setBlockcache(Z)V
+#__setBloomfilter(Ljava/lang/String;)V
+#__setCompression(Ljava/lang/String;)V
+#__setInMemory(Z)V
+#__setTTL(I)V
+#__setVersions(I)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/ColumnSchemaModel

+###org/apache/hadoop/hbase/rest/model/RowModel
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>([B)V
+#<init>(Ljava/lang/String;Ljava/util/List;)V
+#<init>([BLjava/util/List;)V
+#addCell(Lorg/apache/hadoop/hbase/rest/model/CellModel;)V
+#getKey()[B
+#setKey([B)V
+#getCells()Ljava/util/List;
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/RowModel

+###org/apache/hadoop/hbase/rest/model/ScannerModel
@0.95.0
+#buildFilter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/filter/Filter;
+#stringifyFilter(Lorg/apache/hadoop/hbase/filter/Filter;)Ljava/lang/String;
+#fromScan(Lorg/apache/hadoop/hbase/client/Scan;)Lorg/apache/hadoop/hbase/rest/model/ScannerModel;
+#<init>()V
+#<init>([B[BLjava/util/List;IIJILjava/lang/String;)V
+#<init>([B[BLjava/util/List;IIJJLjava/lang/String;)V
+#addColumn([B)V
+#hasStartRow()Z
+#getStartRow()[B
+#hasEndRow()Z
+#getEndRow()[B
+#getColumns()Ljava/util/List;
+#getBatch()I
+#getCaching()I
+#getStartTime()J
+#getEndTime()J
+#getMaxVersions()I
+#getFilter()Ljava/lang/String;
+#setStartRow([B)V
+#setEndRow([B)V
+#setColumns(Ljava/util/List;)V
+#setBatch(I)V
+#setCaching(I)V
+#setMaxVersions(I)V
+#setStartTime(J)V
+#setEndTime(J)V
+#setFilter(Ljava/lang/String;)V
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.0-hadoop1
+#addLabel(Ljava/lang/String;)V
+#getLabels()Ljava/util/List;
@0.98.2-hadoop1
+#getCacheBlocks()Z
+#setCacheBlocks(Z)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/ScannerModel

+###org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel$Node$Region
@0.95.0
+#<init>()V
+#<init>([B)V
+#<init>([BIIIIIJJIIIJJ)V
+#getName()[B
+#getStores()I
+#getStorefiles()I
+#getStorefileSizeMB()I
+#getMemstoreSizeMB()I
+#getStorefileIndexSizeMB()I
+#getReadRequestsCount()J
+#getWriteRequestsCount()J
+#getRootIndexSizeKB()I
+#getTotalStaticIndexSizeKB()I
+#getTotalStaticBloomSizeKB()I
+#getTotalCompactingKVs()J
+#getCurrentCompactedKVs()J
+#setReadRequestsCount(J)V
+#setRootIndexSizeKB(I)V
+#setWriteRequestsCount(J)V
+#setCurrentCompactedKVs(J)V
+#setTotalCompactingKVs(J)V
+#setTotalStaticBloomSizeKB(I)V
+#setTotalStaticIndexSizeKB(I)V
+#setName([B)V
+#setStores(I)V
+#setStorefiles(I)V
+#setStorefileSizeMB(I)V
+#setMemstoreSizeMB(I)V
+#setStorefileIndexSizeMB(I)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel$Node$Region

+###org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel$Node
@0.95.0
+#addRegion([BIIIIIJJIIIJJ)V
+#getRegion(I)Lorg/apache/hadoop/hbase/rest/model/StorageClusterStatusModel$Node$Region;
+#<init>()V
+#<init>(Ljava/lang/String;J)V
+#getName()Ljava/lang/String;
+#getStartCode()J
+#getHeapSizeMB()I
+#getMaxHeapSizeMB()I
+#getRegions()Ljava/util/List;
+#getRequests()I
+#setName(Ljava/lang/String;)V
+#setStartCode(J)V
+#setHeapSizeMB(I)V
+#setMaxHeapSizeMB(I)V
+#setRegions(Ljava/util/List;)V
+#setRequests(I)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel$Node

+###org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel
@0.95.0
+#addLiveNode(Ljava/lang/String;JII)Lorg/apache/hadoop/hbase/rest/model/StorageClusterStatusModel$Node;
+#getLiveNode(I)Lorg/apache/hadoop/hbase/rest/model/StorageClusterStatusModel$Node;
+#addDeadNode(Ljava/lang/String;)V
+#getDeadNode(I)Ljava/lang/String;
+#<init>()V
+#getLiveNodes()Ljava/util/List;
+#getDeadNodes()Ljava/util/List;
+#getRegions()I
+#getRequests()I
+#getAverageLoad()D
+#setLiveNodes(Ljava/util/List;)V
+#setDeadNodes(Ljava/util/List;)V
+#setRegions(I)V
+#setRequests(I)V
+#setAverageLoad(D)V
+#toString()Ljava/lang/String;
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel

+###org/apache/hadoop/hbase/rest/model/StorageClusterVersionModel
@0.95.0
+#<init>()V
+#getVersion()Ljava/lang/String;
+#setVersion(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/StorageClusterVersionModel

+###org/apache/hadoop/hbase/rest/model/TableInfoModel
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#add(Lorg/apache/hadoop/hbase/rest/model/TableRegionModel;)V
+#get(I)Lorg/apache/hadoop/hbase/rest/model/TableRegionModel;
+#getName()Ljava/lang/String;
+#getRegions()Ljava/util/List;
+#setName(Ljava/lang/String;)V
+#setRegions(Ljava/util/List;)V
+#toString()Ljava/lang/String;
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/TableInfoModel

+###org/apache/hadoop/hbase/rest/model/TableListModel
@0.95.0
+#<init>()V
+#add(Lorg/apache/hadoop/hbase/rest/model/TableModel;)V
+#get(I)Lorg/apache/hadoop/hbase/rest/model/TableModel;
+#getTables()Ljava/util/List;
+#setTables(Ljava/util/List;)V
+#toString()Ljava/lang/String;
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/TableListModel

+###org/apache/hadoop/hbase/rest/model/TableModel
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/TableModel

+###org/apache/hadoop/hbase/rest/model/TableRegionModel
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;J[B[B)V
+#<init>(Ljava/lang/String;J[B[BLjava/lang/String;)V
+#getName()Ljava/lang/String;
+#getId()J
+#getStartKey()[B
+#getEndKey()[B
+#getLocation()Ljava/lang/String;
+#setName(Ljava/lang/String;)V
+#setId(J)V
+#setStartKey([B)V
+#setEndKey([B)V
+#setLocation(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/TableRegionModel

+###org/apache/hadoop/hbase/rest/model/TableSchemaModel
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#addAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#getAttribute(Ljava/lang/String;)Ljava/lang/String;
+#addColumnFamily(Lorg/apache/hadoop/hbase/rest/model/ColumnSchemaModel;)V
+#getColumnFamily(I)Lorg/apache/hadoop/hbase/rest/model/ColumnSchemaModel;
+#getName()Ljava/lang/String;
+#getAny()Ljava/util/Map;
+#getColumns()Ljava/util/List;
+#setName(Ljava/lang/String;)V
+#setColumns(Ljava/util/List;)V
+#toString()Ljava/lang/String;
+#__getIsMeta()Z
+#__getIsRoot()Z
+#__getReadOnly()Z
+#__setIsMeta(Z)V
+#__setIsRoot(Z)V
+#__setReadOnly(Z)V
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
+#getTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/TableSchemaModel

+###org/apache/hadoop/hbase/rest/model/VersionModel
@0.95.0
+#<init>()V
+#<init>(Ljavax/servlet/ServletContext;)V
+#getRESTVersion()Ljava/lang/String;
+#getJVMVersion()Ljava/lang/String;
+#getOSVersion()Ljava/lang/String;
+#getServerVersion()Ljava/lang/String;
+#getJerseyVersion()Ljava/lang/String;
+#setRESTVersion(Ljava/lang/String;)V
+#setOSVersion(Ljava/lang/String;)V
+#setJVMVersion(Ljava/lang/String;)V
+#setServerVersion(Ljava/lang/String;)V
+#setJerseyVersion(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/model/VersionModel

+###org/apache/hadoop/hbase/rest/MultiRowResource
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/TableResource;Ljava/lang/String;)V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/MultiRowResource

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#hasRow()Z
+#getRow()Lcom/google/protobuf/ByteString;
+#setRow(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#clearRow()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#hasColumn()Z
+#getColumn()Lcom/google/protobuf/ByteString;
+#setColumn(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#clearColumn()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#hasTimestamp()Z
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#clearTimestamp()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#hasData()Z
+#getData()Lcom/google/protobuf/ByteString;
+#setData(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#clearData()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasRow()Z
+#getRow()Lcom/google/protobuf/ByteString;
+#hasColumn()Z
+#getColumn()Lcom/google/protobuf/ByteString;
+#hasTimestamp()Z
+#getTimestamp()J
+#hasData()Z
+#getData()Lcom/google/protobuf/ByteString;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$CellOrBuilder
@0.95.0
+#hasRow()Z
+#getRow()Lcom/google/protobuf/ByteString;
+#hasColumn()Z
+#getColumn()Lcom/google/protobuf/ByteString;
+#hasTimestamp()Z
+#getTimestamp()J
+#hasData()Z
+#getData()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$CellOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#getRowsList()Ljava/util/List;
+#getRowsCount()I
+#getRows(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#setRows(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#setRows(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#addRows(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#addRows(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#addRows(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#addRows(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#addAllRows(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#clearRows()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#removeRows(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#getRowsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#getRowsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$RowOrBuilder;
+#getRowsOrBuilderList()Ljava/util/List;
+#addRowsBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#addRowsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#getRowsBuilderList()Ljava/util/List;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#hasKey()Z
+#getKey()Lcom/google/protobuf/ByteString;
+#setKey(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#clearKey()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#getValuesList()Ljava/util/List;
+#getValuesCount()I
+#getValues(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#setValues(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#setValues(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#addValues(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#addValues(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#addValues(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#addValues(ILorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#addAllValues(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#clearValues()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#removeValues(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#getValuesBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#getValuesOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$CellOrBuilder;
+#getValuesOrBuilderList()Ljava/util/List;
+#addValuesBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#addValuesBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell$Builder;
+#getValuesBuilderList()Ljava/util/List;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasKey()Z
+#getKey()Lcom/google/protobuf/ByteString;
+#getValuesList()Ljava/util/List;
+#getValuesOrBuilderList()Ljava/util/List;
+#getValuesCount()I
+#getValues(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#getValuesOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$CellOrBuilder;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$RowOrBuilder
@0.95.0
+#hasKey()Z
+#getKey()Lcom/google/protobuf/ByteString;
+#getValuesList()Ljava/util/List;
+#getValues(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$Cell;
+#getValuesCount()I
+#getValuesOrBuilderList()Ljava/util/List;
+#getValuesOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellMessage$CellOrBuilder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$RowOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#getRowsList()Ljava/util/List;
+#getRowsOrBuilderList()Ljava/util/List;
+#getRowsCount()I
+#getRows(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#getRowsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$RowOrBuilder;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSetOrBuilder
@0.95.0
+#getRowsList()Ljava/util/List;
+#getRows(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$Row;
+#getRowsCount()I
+#getRowsOrBuilderList()Ljava/util/List;
+#getRowsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSet$RowOrBuilder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage$CellSetOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/CellSetMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#hasName()Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#hasValue()Z
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#clearValue()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#setNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#getValueBytes()Lcom/google/protobuf/ByteString;
+#setValueBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasValue()Z
+#getValue()Ljava/lang/String;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getValueBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute

+###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$AttributeOrBuilder
@0.95.0
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasValue()Z
+#getValue()Ljava/lang/String;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getValueBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$AttributeOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#hasName()Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#getAttrsList()Ljava/util/List;
+#getAttrsCount()I
+#getAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#setAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#setAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#addAttrs(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#addAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#addAttrs(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#addAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#addAllAttrs(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#clearAttrs()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#removeAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#getAttrsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#getAttrsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$AttributeOrBuilder;
+#getAttrsOrBuilderList()Ljava/util/List;
+#addAttrsBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#addAttrsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute$Builder;
+#getAttrsBuilderList()Ljava/util/List;
+#hasTtl()Z
+#getTtl()I
+#setTtl(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#clearTtl()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#hasMaxVersions()Z
+#getMaxVersions()I
+#setMaxVersions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#clearMaxVersions()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#hasCompression()Z
+#getCompression()Ljava/lang/String;
+#setCompression(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#clearCompression()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#setNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#getCompressionBytes()Lcom/google/protobuf/ByteString;
+#setCompressionBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Ljava/lang/String;
+#getAttrsList()Ljava/util/List;
+#getAttrsOrBuilderList()Ljava/util/List;
+#getAttrsCount()I
+#getAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#getAttrsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$AttributeOrBuilder;
+#hasTtl()Z
+#getTtl()I
+#hasMaxVersions()Z
+#getMaxVersions()I
+#hasCompression()Z
+#getCompression()Ljava/lang/String;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getCompressionBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema

+###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchemaOrBuilder
@0.95.0
+#hasName()Z
+#getName()Ljava/lang/String;
+#getAttrsList()Ljava/util/List;
+#getAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Attribute;
+#getAttrsCount()I
+#getAttrsOrBuilderList()Ljava/util/List;
+#getAttrsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$AttributeOrBuilder;
+#hasTtl()Z
+#getTtl()I
+#hasMaxVersions()Z
+#getMaxVersions()I
+#hasCompression()Z
+#getCompression()Ljava/lang/String;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getCompressionBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchemaOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasStartRow()Z
+#getStartRow()Lcom/google/protobuf/ByteString;
+#setStartRow(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearStartRow()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasEndRow()Z
+#getEndRow()Lcom/google/protobuf/ByteString;
+#setEndRow(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearEndRow()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#getColumnsList()Ljava/util/List;
+#getColumnsCount()I
+#getColumns(I)Lcom/google/protobuf/ByteString;
+#setColumns(ILcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#addColumns(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#addAllColumns(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearColumns()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasBatch()Z
+#getBatch()I
+#setBatch(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearBatch()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasStartTime()Z
+#getStartTime()J
+#setStartTime(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearStartTime()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasEndTime()Z
+#getEndTime()J
+#setEndTime(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearEndTime()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasMaxVersions()Z
+#getMaxVersions()I
+#setMaxVersions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearMaxVersions()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasFilter()Z
+#getFilter()Ljava/lang/String;
+#setFilter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearFilter()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#hasCaching()Z
+#getCaching()I
+#setCaching(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearCaching()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getFilterBytes()Lcom/google/protobuf/ByteString;
+#setFilterBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
@0.98.0-hadoop1
+#getLabelsList()Ljava/util/List;
+#getLabelsCount()I
+#getLabels(I)Ljava/lang/String;
+#getLabelsBytes(I)Lcom/google/protobuf/ByteString;
+#setLabels(ILjava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#addLabels(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#addAllLabels(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearLabels()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#addLabelsBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
@0.98.2-hadoop1
+#hasCacheBlocks()Z
+#getCacheBlocks()Z
+#setCacheBlocks(Z)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#clearCacheBlocks()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasStartRow()Z
+#getStartRow()Lcom/google/protobuf/ByteString;
+#hasEndRow()Z
+#getEndRow()Lcom/google/protobuf/ByteString;
+#getColumnsList()Ljava/util/List;
+#getColumnsCount()I
+#getColumns(I)Lcom/google/protobuf/ByteString;
+#hasBatch()Z
+#getBatch()I
+#hasStartTime()Z
+#getStartTime()J
+#hasEndTime()Z
+#getEndTime()J
+#hasMaxVersions()Z
+#getMaxVersions()I
+#hasFilter()Z
+#getFilter()Ljava/lang/String;
+#hasCaching()Z
+#getCaching()I
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getFilterBytes()Lcom/google/protobuf/ByteString;
@0.98.0-hadoop1
+#getLabelsList()Ljava/util/List;
+#getLabelsCount()I
+#getLabels(I)Ljava/lang/String;
+#getLabelsBytes(I)Lcom/google/protobuf/ByteString;
@0.98.2-hadoop1
+#hasCacheBlocks()Z
+#getCacheBlocks()Z
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$Scanner

+###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$ScannerOrBuilder
@0.95.0
+#hasStartRow()Z
+#getStartRow()Lcom/google/protobuf/ByteString;
+#hasEndRow()Z
+#getEndRow()Lcom/google/protobuf/ByteString;
+#getColumnsList()Ljava/util/List;
+#getColumnsCount()I
+#getColumns(I)Lcom/google/protobuf/ByteString;
+#hasBatch()Z
+#getBatch()I
+#hasStartTime()Z
+#getStartTime()J
+#hasEndTime()Z
+#getEndTime()J
+#hasMaxVersions()Z
+#getMaxVersions()I
+#hasFilter()Z
+#getFilter()Ljava/lang/String;
+#hasCaching()Z
+#getCaching()I
@0.96.0-hadoop1
+#getFilterBytes()Lcom/google/protobuf/ByteString;
@0.98.0-hadoop1
+#getLabelsList()Ljava/util/List;
+#getLabelsCount()I
+#getLabels(I)Ljava/lang/String;
+#getLabelsBytes(I)Lcom/google/protobuf/ByteString;
@0.98.2-hadoop1
+#hasCacheBlocks()Z
+#getCacheBlocks()Z
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage$ScannerOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/ScannerMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#getLiveNodesList()Ljava/util/List;
+#getLiveNodesCount()I
+#getLiveNodes(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#setLiveNodes(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#setLiveNodes(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#addLiveNodes(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#addLiveNodes(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#addLiveNodes(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#addLiveNodes(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#addAllLiveNodes(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#clearLiveNodes()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#removeLiveNodes(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#getLiveNodesBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#getLiveNodesOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$NodeOrBuilder;
+#getLiveNodesOrBuilderList()Ljava/util/List;
+#addLiveNodesBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#addLiveNodesBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#getLiveNodesBuilderList()Ljava/util/List;
+#getDeadNodesList()Ljava/util/List;
+#getDeadNodesCount()I
+#getDeadNodes(I)Ljava/lang/String;
+#setDeadNodes(ILjava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#addDeadNodes(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#addAllDeadNodes(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#clearDeadNodes()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#hasRegions()Z
+#getRegions()I
+#setRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#clearRegions()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#hasRequests()Z
+#getRequests()I
+#setRequests(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#clearRequests()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#hasAverageLoad()Z
+#getAverageLoad()D
+#setAverageLoad(D)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#clearAverageLoad()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getDeadNodesBytes(I)Lcom/google/protobuf/ByteString;
+#addDeadNodesBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#hasName()Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#hasStartCode()Z
+#getStartCode()J
+#setStartCode(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#clearStartCode()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#hasRequests()Z
+#getRequests()I
+#setRequests(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#clearRequests()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#hasHeapSizeMB()Z
+#getHeapSizeMB()I
+#setHeapSizeMB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#clearHeapSizeMB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#hasMaxHeapSizeMB()Z
+#getMaxHeapSizeMB()I
+#setMaxHeapSizeMB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#clearMaxHeapSizeMB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#getRegionsList()Ljava/util/List;
+#getRegionsCount()I
+#getRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#setRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#setRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#addRegions(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#addRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#addRegions(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#addRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#addAllRegions(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#clearRegions()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#removeRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#getRegionsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#getRegionsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$RegionOrBuilder;
+#getRegionsOrBuilderList()Ljava/util/List;
+#addRegionsBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#addRegionsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#getRegionsBuilderList()Ljava/util/List;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#setNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasStartCode()Z
+#getStartCode()J
+#hasRequests()Z
+#getRequests()I
+#hasHeapSizeMB()Z
+#getHeapSizeMB()I
+#hasMaxHeapSizeMB()Z
+#getMaxHeapSizeMB()I
+#getRegionsList()Ljava/util/List;
+#getRegionsOrBuilderList()Ljava/util/List;
+#getRegionsCount()I
+#getRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#getRegionsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$RegionOrBuilder;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$NodeOrBuilder
@0.95.0
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasStartCode()Z
+#getStartCode()J
+#hasRequests()Z
+#getRequests()I
+#hasHeapSizeMB()Z
+#getHeapSizeMB()I
+#hasMaxHeapSizeMB()Z
+#getMaxHeapSizeMB()I
+#getRegionsList()Ljava/util/List;
+#getRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#getRegionsCount()I
+#getRegionsOrBuilderList()Ljava/util/List;
+#getRegionsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$RegionOrBuilder;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$NodeOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasName()Z
+#getName()Lcom/google/protobuf/ByteString;
+#setName(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasStores()Z
+#getStores()I
+#setStores(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearStores()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasStorefiles()Z
+#getStorefiles()I
+#setStorefiles(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearStorefiles()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasStorefileSizeMB()Z
+#getStorefileSizeMB()I
+#setStorefileSizeMB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearStorefileSizeMB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasMemstoreSizeMB()Z
+#getMemstoreSizeMB()I
+#setMemstoreSizeMB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearMemstoreSizeMB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasStorefileIndexSizeMB()Z
+#getStorefileIndexSizeMB()I
+#setStorefileIndexSizeMB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearStorefileIndexSizeMB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasReadRequestsCount()Z
+#getReadRequestsCount()J
+#setReadRequestsCount(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearReadRequestsCount()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasWriteRequestsCount()Z
+#getWriteRequestsCount()J
+#setWriteRequestsCount(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearWriteRequestsCount()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasRootIndexSizeKB()Z
+#getRootIndexSizeKB()I
+#setRootIndexSizeKB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearRootIndexSizeKB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasTotalStaticIndexSizeKB()Z
+#getTotalStaticIndexSizeKB()I
+#setTotalStaticIndexSizeKB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearTotalStaticIndexSizeKB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasTotalStaticBloomSizeKB()Z
+#getTotalStaticBloomSizeKB()I
+#setTotalStaticBloomSizeKB(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearTotalStaticBloomSizeKB()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasTotalCompactingKVs()Z
+#getTotalCompactingKVs()J
+#setTotalCompactingKVs(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearTotalCompactingKVs()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#hasCurrentCompactedKVs()Z
+#getCurrentCompactedKVs()J
+#setCurrentCompactedKVs(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clearCurrentCompactedKVs()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Lcom/google/protobuf/ByteString;
+#hasStores()Z
+#getStores()I
+#hasStorefiles()Z
+#getStorefiles()I
+#hasStorefileSizeMB()Z
+#getStorefileSizeMB()I
+#hasMemstoreSizeMB()Z
+#getMemstoreSizeMB()I
+#hasStorefileIndexSizeMB()Z
+#getStorefileIndexSizeMB()I
+#hasReadRequestsCount()Z
+#getReadRequestsCount()J
+#hasWriteRequestsCount()Z
+#getWriteRequestsCount()J
+#hasRootIndexSizeKB()Z
+#getRootIndexSizeKB()I
+#hasTotalStaticIndexSizeKB()Z
+#getTotalStaticIndexSizeKB()I
+#hasTotalStaticBloomSizeKB()Z
+#getTotalStaticBloomSizeKB()I
+#hasTotalCompactingKVs()Z
+#getTotalCompactingKVs()J
+#hasCurrentCompactedKVs()Z
+#getCurrentCompactedKVs()J
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Region

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$RegionOrBuilder
@0.95.0
+#hasName()Z
+#getName()Lcom/google/protobuf/ByteString;
+#hasStores()Z
+#getStores()I
+#hasStorefiles()Z
+#getStorefiles()I
+#hasStorefileSizeMB()Z
+#getStorefileSizeMB()I
+#hasMemstoreSizeMB()Z
+#getMemstoreSizeMB()I
+#hasStorefileIndexSizeMB()Z
+#getStorefileIndexSizeMB()I
+#hasReadRequestsCount()Z
+#getReadRequestsCount()J
+#hasWriteRequestsCount()Z
+#getWriteRequestsCount()J
+#hasRootIndexSizeKB()Z
+#getRootIndexSizeKB()I
+#hasTotalStaticIndexSizeKB()Z
+#getTotalStaticIndexSizeKB()I
+#hasTotalStaticBloomSizeKB()Z
+#getTotalStaticBloomSizeKB()I
+#hasTotalCompactingKVs()Z
+#getTotalCompactingKVs()J
+#hasCurrentCompactedKVs()Z
+#getCurrentCompactedKVs()J
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$RegionOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#getLiveNodesList()Ljava/util/List;
+#getLiveNodesOrBuilderList()Ljava/util/List;
+#getLiveNodesCount()I
+#getLiveNodes(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#getLiveNodesOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$NodeOrBuilder;
+#getDeadNodesList()Ljava/util/List;
+#getDeadNodesCount()I
+#getDeadNodes(I)Ljava/lang/String;
+#hasRegions()Z
+#getRegions()I
+#hasRequests()Z
+#getRequests()I
+#hasAverageLoad()Z
+#getAverageLoad()D
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getDeadNodesBytes(I)Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatusOrBuilder
@0.95.0
+#getLiveNodesList()Ljava/util/List;
+#getLiveNodes(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$Node;
+#getLiveNodesCount()I
+#getLiveNodesOrBuilderList()Ljava/util/List;
+#getLiveNodesOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatus$NodeOrBuilder;
+#getDeadNodesList()Ljava/util/List;
+#getDeadNodesCount()I
+#getDeadNodes(I)Ljava/lang/String;
+#hasRegions()Z
+#getRegions()I
+#hasRequests()Z
+#getRequests()I
+#hasAverageLoad()Z
+#getAverageLoad()D
@0.96.0-hadoop1
+#getDeadNodesBytes(I)Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage$StorageClusterStatusOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/StorageClusterStatusMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#hasName()Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#getRegionsList()Ljava/util/List;
+#getRegionsCount()I
+#getRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#setRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#setRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#addRegions(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#addRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#addRegions(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#addRegions(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#addAllRegions(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#clearRegions()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#removeRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#getRegionsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#getRegionsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$RegionOrBuilder;
+#getRegionsOrBuilderList()Ljava/util/List;
+#addRegionsBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#addRegionsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#getRegionsBuilderList()Ljava/util/List;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#setNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#hasName()Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#hasStartKey()Z
+#getStartKey()Lcom/google/protobuf/ByteString;
+#setStartKey(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#clearStartKey()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#hasEndKey()Z
+#getEndKey()Lcom/google/protobuf/ByteString;
+#setEndKey(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#clearEndKey()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#hasId()Z
+#getId()J
+#setId(J)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#clearId()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#hasLocation()Z
+#getLocation()Ljava/lang/String;
+#setLocation(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#clearLocation()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#setNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#getLocationBytes()Lcom/google/protobuf/ByteString;
+#setLocationBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasStartKey()Z
+#getStartKey()Lcom/google/protobuf/ByteString;
+#hasEndKey()Z
+#getEndKey()Lcom/google/protobuf/ByteString;
+#hasId()Z
+#getId()J
+#hasLocation()Z
+#getLocation()Ljava/lang/String;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getLocationBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$RegionOrBuilder
@0.95.0
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasStartKey()Z
+#getStartKey()Lcom/google/protobuf/ByteString;
+#hasEndKey()Z
+#getEndKey()Lcom/google/protobuf/ByteString;
+#hasId()Z
+#getId()J
+#hasLocation()Z
+#getLocation()Ljava/lang/String;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getLocationBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$RegionOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Ljava/lang/String;
+#getRegionsList()Ljava/util/List;
+#getRegionsOrBuilderList()Ljava/util/List;
+#getRegionsCount()I
+#getRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#getRegionsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$RegionOrBuilder;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfoOrBuilder
@0.95.0
+#hasName()Z
+#getName()Ljava/lang/String;
+#getRegionsList()Ljava/util/List;
+#getRegions(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$Region;
+#getRegionsCount()I
+#getRegionsOrBuilderList()Ljava/util/List;
+#getRegionsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfo$RegionOrBuilder;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage$TableInfoOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableInfoMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#getNameList()Ljava/util/List;
+#getNameCount()I
+#getName(I)Ljava/lang/String;
+#setName(ILjava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#addName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#addAllName(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes(I)Lcom/google/protobuf/ByteString;
+#addNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#getNameList()Ljava/util/List;
+#getNameCount()I
+#getName(I)Ljava/lang/String;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes(I)Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableList

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableListOrBuilder
@0.95.0
+#getNameList()Ljava/util/List;
+#getNameCount()I
+#getName(I)Ljava/lang/String;
@0.96.0-hadoop1
+#getNameBytes(I)Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage$TableListOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableListMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#hasName()Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#hasValue()Z
+#getValue()Ljava/lang/String;
+#setValue(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#clearValue()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#setNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#getValueBytes()Lcom/google/protobuf/ByteString;
+#setValueBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasValue()Z
+#getValue()Ljava/lang/String;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getValueBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$AttributeOrBuilder
@0.95.0
+#hasName()Z
+#getName()Ljava/lang/String;
+#hasValue()Z
+#getValue()Ljava/lang/String;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#getValueBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$AttributeOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#hasName()Z
+#getName()Ljava/lang/String;
+#setName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#clearName()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#getAttrsList()Ljava/util/List;
+#getAttrsCount()I
+#getAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#setAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#setAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addAttrs(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addAttrs(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addAttrs(ILorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addAllAttrs(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#clearAttrs()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#removeAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#getAttrsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#getAttrsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$AttributeOrBuilder;
+#getAttrsOrBuilderList()Ljava/util/List;
+#addAttrsBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#addAttrsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute$Builder;
+#getAttrsBuilderList()Ljava/util/List;
+#getColumnsList()Ljava/util/List;
+#getColumnsCount()I
+#getColumns(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#setColumns(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#setColumns(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addColumns(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addColumns(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addColumns(Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addColumns(ILorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#addAllColumns(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#clearColumns()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#removeColumns(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#getColumnsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#getColumnsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchemaOrBuilder;
+#getColumnsOrBuilderList()Ljava/util/List;
+#addColumnsBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#addColumnsBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema$Builder;
+#getColumnsBuilderList()Ljava/util/List;
+#hasInMemory()Z
+#getInMemory()Z
+#setInMemory(Z)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#clearInMemory()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#hasReadOnly()Z
+#getReadOnly()Z
+#setReadOnly(Z)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#clearReadOnly()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
+#setNameBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasName()Z
+#getName()Ljava/lang/String;
+#getAttrsList()Ljava/util/List;
+#getAttrsOrBuilderList()Ljava/util/List;
+#getAttrsCount()I
+#getAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#getAttrsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$AttributeOrBuilder;
+#getColumnsList()Ljava/util/List;
+#getColumnsOrBuilderList()Ljava/util/List;
+#getColumnsCount()I
+#getColumns(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#getColumnsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchemaOrBuilder;
+#hasInMemory()Z
+#getInMemory()Z
+#hasReadOnly()Z
+#getReadOnly()Z
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getNameBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchemaOrBuilder
@0.95.0
+#hasName()Z
+#getName()Ljava/lang/String;
+#getAttrsList()Ljava/util/List;
+#getAttrs(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$Attribute;
+#getAttrsCount()I
+#getAttrsOrBuilderList()Ljava/util/List;
+#getAttrsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchema$AttributeOrBuilder;
+#getColumnsList()Ljava/util/List;
+#getColumns(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchema;
+#getColumnsCount()I
+#getColumnsOrBuilderList()Ljava/util/List;
+#getColumnsOrBuilder(I)Lorg/apache/hadoop/hbase/rest/protobuf/generated/ColumnSchemaMessage$ColumnSchemaOrBuilder;
+#hasInMemory()Z
+#getInMemory()Z
+#hasReadOnly()Z
+#getReadOnly()Z
@0.96.0-hadoop1
+#getNameBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage$TableSchemaOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/TableSchemaMessage

+###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder
@0.95.0
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#clear()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#clone()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#getDescriptorForType()Lcom/google/protobuf/Descriptors$Descriptor;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#build()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#buildPartial()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#mergeFrom(Lcom/google/protobuf/Message;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#mergeFrom(Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#isInitialized()Z
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#hasRestVersion()Z
+#getRestVersion()Ljava/lang/String;
+#setRestVersion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#clearRestVersion()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#hasJvmVersion()Z
+#getJvmVersion()Ljava/lang/String;
+#setJvmVersion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#clearJvmVersion()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#hasOsVersion()Z
+#getOsVersion()Ljava/lang/String;
+#setOsVersion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#clearOsVersion()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#hasServerVersion()Z
+#getServerVersion()Ljava/lang/String;
+#setServerVersion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#clearServerVersion()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#hasJerseyVersion()Z
+#getJerseyVersion()Ljava/lang/String;
+#setJerseyVersion(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#clearJerseyVersion()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#clear()Lcom/google/protobuf/GeneratedMessage$Builder;
+#clone()Lcom/google/protobuf/GeneratedMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/AbstractMessage$Builder;
+#clear()Lcom/google/protobuf/AbstractMessage$Builder;
+#clone()Lcom/google/protobuf/AbstractMessage$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
+#clone()Lcom/google/protobuf/Message$Builder;
+#buildPartial()Lcom/google/protobuf/Message;
+#build()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Message$Builder;
+#clear()Lcom/google/protobuf/Message$Builder;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
+#clone()Lcom/google/protobuf/MessageLite$Builder;
+#buildPartial()Lcom/google/protobuf/MessageLite;
+#build()Lcom/google/protobuf/MessageLite;
+#clear()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
+#mergeFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Lcom/google/protobuf/AbstractMessageLite$Builder;
+#clone()Ljava/lang/Object;
@0.96.0-hadoop1
+#getRestVersionBytes()Lcom/google/protobuf/ByteString;
+#setRestVersionBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#getJvmVersionBytes()Lcom/google/protobuf/ByteString;
+#setJvmVersionBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#getOsVersionBytes()Lcom/google/protobuf/ByteString;
+#setOsVersionBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#getServerVersionBytes()Lcom/google/protobuf/ByteString;
+#setServerVersionBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#getJerseyVersionBytes()Lcom/google/protobuf/ByteString;
+#setJerseyVersionBytes(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder

+###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version
@0.95.0
+#getDefaultInstance()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#getDefaultInstanceForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#getDescriptor()Lcom/google/protobuf/Descriptors$Descriptor;
+#hasRestVersion()Z
+#getRestVersion()Ljava/lang/String;
+#hasJvmVersion()Z
+#getJvmVersion()Ljava/lang/String;
+#hasOsVersion()Z
+#getOsVersion()Ljava/lang/String;
+#hasServerVersion()Z
+#getServerVersion()Ljava/lang/String;
+#hasJerseyVersion()Z
+#getJerseyVersion()Ljava/lang/String;
+#isInitialized()Z
+#writeTo(Lcom/google/protobuf/CodedOutputStream;)V
+#getSerializedSize()I
+#parseFrom(Lcom/google/protobuf/ByteString;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseFrom(Lcom/google/protobuf/ByteString;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseFrom([B)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseFrom([BLcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseDelimitedFrom(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseDelimitedFrom(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#parseFrom(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;
+#newBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#newBuilderForType()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#newBuilder(Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version;)Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#toBuilder()Lorg/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version$Builder;
+#toBuilder()Lcom/google/protobuf/Message$Builder;
+#newBuilderForType()Lcom/google/protobuf/Message$Builder;
+#toBuilder()Lcom/google/protobuf/MessageLite$Builder;
+#newBuilderForType()Lcom/google/protobuf/MessageLite$Builder;
+#getDefaultInstanceForType()Lcom/google/protobuf/MessageLite;
+#getDefaultInstanceForType()Lcom/google/protobuf/Message;
@0.96.0-hadoop1
+#getUnknownFields()Lcom/google/protobuf/UnknownFieldSet;
+#getParserForType()Lcom/google/protobuf/Parser;
+#getRestVersionBytes()Lcom/google/protobuf/ByteString;
+#getJvmVersionBytes()Lcom/google/protobuf/ByteString;
+#getOsVersionBytes()Lcom/google/protobuf/ByteString;
+#getServerVersionBytes()Lcom/google/protobuf/ByteString;
+#getJerseyVersionBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$Version

+###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$VersionOrBuilder
@0.95.0
+#hasRestVersion()Z
+#getRestVersion()Ljava/lang/String;
+#hasJvmVersion()Z
+#getJvmVersion()Ljava/lang/String;
+#hasOsVersion()Z
+#getOsVersion()Ljava/lang/String;
+#hasServerVersion()Z
+#getServerVersion()Ljava/lang/String;
+#hasJerseyVersion()Z
+#getJerseyVersion()Ljava/lang/String;
@0.96.0-hadoop1
+#getRestVersionBytes()Lcom/google/protobuf/ByteString;
+#getJvmVersionBytes()Lcom/google/protobuf/ByteString;
+#getOsVersionBytes()Lcom/google/protobuf/ByteString;
+#getServerVersionBytes()Lcom/google/protobuf/ByteString;
+#getJerseyVersionBytes()Lcom/google/protobuf/ByteString;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage$VersionOrBuilder

+###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage
@0.95.0
+#registerAllExtensions(Lcom/google/protobuf/ExtensionRegistry;)V
+#getDescriptor()Lcom/google/protobuf/Descriptors$FileDescriptor;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/protobuf/generated/VersionMessage

+###org/apache/hadoop/hbase/rest/ProtobufMessageHandler
@0.95.0
+#createProtobufOutput()[B
+#getObjectFromMessage([B)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ProtobufMessageHandler

+###org/apache/hadoop/hbase/rest/ProtobufStreamingUtil
@0.98.0-hadoop1
+#write(Ljava/io/OutputStream;)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ProtobufStreamingUtil

+###org/apache/hadoop/hbase/rest/provider/consumer/ProtobufMessageBodyConsumer
@0.95.0
+#<init>()V
+#isReadable(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)Z
+#readFrom(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;
+#readFrom(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/InputStream;)Ljava/lang/Object;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/provider/consumer/ProtobufMessageBodyConsumer

+###org/apache/hadoop/hbase/rest/provider/JacksonProvider
@0.96.0-hadoop1
+#<init>()V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/provider/JacksonProvider

+###org/apache/hadoop/hbase/rest/provider/JAXBContextResolver
@0.95.0
+#<init>()V
+#getContext(Ljava/lang/Class;)Ljavax/xml/bind/JAXBContext;
+#getContext(Ljava/lang/Class;)Ljava/lang/Object;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/provider/JAXBContextResolver

+###org/apache/hadoop/hbase/rest/provider/producer/PlainTextMessageBodyProducer
@0.95.0
+#<init>()V
+#isWriteable(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)Z
+#getSize(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J
+#writeTo(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/provider/producer/PlainTextMessageBodyProducer

+###org/apache/hadoop/hbase/rest/provider/producer/ProtobufMessageBodyProducer
@0.95.0
+#<init>()V
+#isWriteable(Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)Z
+#getSize(Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J
+#writeTo(Lorg/apache/hadoop/hbase/rest/ProtobufMessageHandler;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V
+#writeTo(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;Ljavax/ws/rs/core/MultivaluedMap;Ljava/io/OutputStream;)V
+#getSize(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljavax/ws/rs/core/MediaType;)J
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/provider/producer/ProtobufMessageBodyProducer

+###org/apache/hadoop/hbase/rest/RegionsResource
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/TableResource;)V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RegionsResource

+###org/apache/hadoop/hbase/rest/ResourceBase
@0.95.0
+#<init>()V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ResourceBase

+###org/apache/hadoop/hbase/rest/ResourceConfig
@0.95.0
+#<init>()V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ResourceConfig

+###org/apache/hadoop/hbase/rest/RESTServer
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RESTServer

+###org/apache/hadoop/hbase/rest/RESTServlet
@0.95.0
+#getInstance()Lorg/apache/hadoop/hbase/rest/RESTServlet;
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/rest/RESTServlet;
+#stop()V
@0.95.2-hadoop1
+#getInstance(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/hbase/rest/RESTServlet;
@0.96.0-hadoop1
-#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/rest/RESTServlet;
@0.98.4-hadoop1
+#getInstance(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/security/UserProvider;)Lorg/apache/hadoop/hbase/rest/RESTServlet;
-#getInstance(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/hbase/rest/RESTServlet;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RESTServlet

+###org/apache/hadoop/hbase/rest/RESTServletContainer
@0.95.2-hadoop1
+#<init>()V
+#service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RESTServletContainer

+###org/apache/hadoop/hbase/rest/ResultGenerator
@0.95.0
+#<init>()V
+#fromRowSpec(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;)Lorg/apache/hadoop/hbase/rest/ResultGenerator;
+#buildFilter(Ljava/lang/String;)Lorg/apache/hadoop/hbase/filter/Filter;
+#putBack(Lorg/apache/hadoop/hbase/KeyValue;)V
+#close()V
@0.96.0-hadoop1
+#putBack(Lorg/apache/hadoop/hbase/Cell;)V
-#putBack(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.98.2-hadoop1
+#fromRowSpec(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;Z)Lorg/apache/hadoop/hbase/rest/ResultGenerator;
-#fromRowSpec(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;)Lorg/apache/hadoop/hbase/rest/ResultGenerator;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ResultGenerator

+###org/apache/hadoop/hbase/rest/RootResource
@0.95.0
+#<init>()V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#getClusterStatusResource()Lorg/apache/hadoop/hbase/rest/StorageClusterStatusResource;
+#getVersionResource()Lorg/apache/hadoop/hbase/rest/VersionResource;
+#getTableResource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/TableResource;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RootResource

+###org/apache/hadoop/hbase/rest/RowResource
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/TableResource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#getBinary(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#put(Lorg/apache/hadoop/hbase/rest/model/CellSetModel;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#putBinary([BLjavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
+#post(Lorg/apache/hadoop/hbase/rest/model/CellSetModel;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#postBinary([BLjavax/ws/rs/core/UriInfo;Ljavax/ws/rs/core/HttpHeaders;)Ljavax/ws/rs/core/Response;
+#delete(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RowResource

+###org/apache/hadoop/hbase/rest/RowResultGenerator
@0.95.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;)V
+#close()V
+#hasNext()Z
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#putBack(Lorg/apache/hadoop/hbase/KeyValue;)V
+#remove()V
+#next()Ljava/lang/Object;
@0.96.0-hadoop1
+#next()Lorg/apache/hadoop/hbase/Cell;
+#putBack(Lorg/apache/hadoop/hbase/Cell;)V
-#next()Lorg/apache/hadoop/hbase/KeyValue;
-#putBack(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.98.2-hadoop1
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;Z)V
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RowResultGenerator

+###org/apache/hadoop/hbase/rest/RowSpec
@0.95.0
+#<init>(Ljava/lang/String;)V
+#<init>([B[B[[BJJI)V
+#<init>([B[BLjava/util/Collection;JJI)V
+#isSingleRow()Z
+#getMaxVersions()I
+#setMaxVersions(I)V
+#getMaxValues()I
+#setMaxValues(I)V
+#hasColumns()Z
+#getRow()[B
+#getStartRow()[B
+#hasEndRow()Z
+#getEndRow()[B
+#addColumn([B)V
+#getColumns()[[B
+#hasTimestamp()Z
+#getTimestamp()J
+#getStartTime()J
+#setStartTime(J)V
+#getEndTime()J
+#setEndTime(J)V
+#toString()Ljava/lang/String;
@0.98.0-hadoop1
+#<init>([B[BLjava/util/Collection;JJILjava/util/Collection;)V
+#hasLabels()Z
+#getLabels()Ljava/util/List;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/RowSpec

+###org/apache/hadoop/hbase/rest/ScannerInstanceResource
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/ResultGenerator;I)V
+#get(Ljavax/ws/rs/core/UriInfo;II)Ljavax/ws/rs/core/Response;
+#getBinary(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#delete(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ScannerInstanceResource

+###org/apache/hadoop/hbase/rest/ScannerResource
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/TableResource;)V
+#put(Lorg/apache/hadoop/hbase/rest/model/ScannerModel;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#post(Lorg/apache/hadoop/hbase/rest/model/ScannerModel;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#getScannerInstanceResource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/ScannerInstanceResource;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ScannerResource

+###org/apache/hadoop/hbase/rest/ScannerResultGenerator
@0.95.0
+#buildFilterFromModel(Lorg/apache/hadoop/hbase/rest/model/ScannerModel;)Lorg/apache/hadoop/hbase/filter/Filter;
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;I)V
+#getID()Ljava/lang/String;
+#close()V
+#hasNext()Z
+#next()Lorg/apache/hadoop/hbase/KeyValue;
+#putBack(Lorg/apache/hadoop/hbase/KeyValue;)V
+#remove()V
+#next()Ljava/lang/Object;
@0.96.0-hadoop1
+#next()Lorg/apache/hadoop/hbase/Cell;
+#putBack(Lorg/apache/hadoop/hbase/Cell;)V
-#next()Lorg/apache/hadoop/hbase/KeyValue;
-#putBack(Lorg/apache/hadoop/hbase/KeyValue;)V
@0.98.2-hadoop1
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;Z)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;IZ)V
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;)V
-#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/rest/RowSpec;Lorg/apache/hadoop/hbase/filter/Filter;I)V
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/ScannerResultGenerator

+###org/apache/hadoop/hbase/rest/SchemaResource
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/rest/TableResource;)V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#put(Lorg/apache/hadoop/hbase/rest/model/TableSchemaModel;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#post(Lorg/apache/hadoop/hbase/rest/model/TableSchemaModel;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#delete(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/SchemaResource

+###org/apache/hadoop/hbase/rest/StorageClusterStatusResource
@0.95.0
+#<init>()V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/StorageClusterStatusResource

+###org/apache/hadoop/hbase/rest/StorageClusterVersionResource
@0.95.0
+#<init>()V
+#get(Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/StorageClusterVersionResource

+###org/apache/hadoop/hbase/rest/TableResource
@0.95.0
+#<init>(Ljava/lang/String;)V
+#getExistsResource()Lorg/apache/hadoop/hbase/rest/ExistsResource;
+#getRegionsResource()Lorg/apache/hadoop/hbase/rest/RegionsResource;
+#getScannerResource()Lorg/apache/hadoop/hbase/rest/ScannerResource;
+#getSchemaResource()Lorg/apache/hadoop/hbase/rest/SchemaResource;
+#getMultipleRowResource(Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/MultiRowResource;
+#getRowResource(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/RowResource;
@0.98.0-hadoop1
+#getRowResourceWithSuffixGlobbing(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/rest/RowResource;
+#getScanResource(Ljavax/ws/rs/core/UriInfo;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;IIJJZ)Lorg/apache/hadoop/hbase/rest/TableScanResource;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/TableResource

+###org/apache/hadoop/hbase/rest/TableScanResource$CellSetModelStream
@0.98.0-hadoop1
+#<init>()V
+#<init>(Ljava/util/ArrayList;)V
+#getIterator()Ljava/util/Iterator;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/TableScanResource$CellSetModelStream

+###org/apache/hadoop/hbase/rest/TableScanResource
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/ResultScanner;I)V
+#get(Ljavax/ws/rs/core/UriInfo;)Lorg/apache/hadoop/hbase/rest/TableScanResource$CellSetModelStream;
+#getProtobuf(Ljavax/ws/rs/core/UriInfo;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;IIJJZ)Ljavax/ws/rs/core/Response;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/TableScanResource

+###org/apache/hadoop/hbase/rest/VersionResource
@0.95.0
+#<init>()V
+#get(Ljavax/servlet/ServletContext;Ljavax/ws/rs/core/UriInfo;)Ljavax/ws/rs/core/Response;
+#getClusterVersionResource()Lorg/apache/hadoop/hbase/rest/StorageClusterVersionResource;
+#getVersionResource()Lorg/apache/hadoop/hbase/rest/VersionResource;
@0.98.8-hadoop1
-###org/apache/hadoop/hbase/rest/VersionResource

+###org/apache/hadoop/hbase/security/visibility/DefaultScanLabelGenerator
@0.98.0-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#getLabels(Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/security/visibility/Authorizations;)Ljava/util/List;
@0.98.9-hadoop1
-###org/apache/hadoop/hbase/security/visibility/DefaultScanLabelGenerator

+###org/apache/hadoop/hbase/regionserver/wal/LRUDictionary
@0.95.0
+#<init>()V
+#getEntry(S)[B
+#findEntry([BII)S
+#addEntry([BII)S
+#clear()V
@0.95.2-hadoop1
+#init(I)V
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/regionserver/wal/LRUDictionary

+###org/apache/hadoop/hbase/snapshot/TakeSnapshotUtils
@0.95.0
+#getRegionSnapshotDirectory(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getFamilySnapshotDirectories(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;[Lorg/apache/hadoop/fs/FileStatus;)Ljava/util/List;
+#getMasterTimerAndBindToMonitor(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionListener;)Lorg/apache/hadoop/hbase/errorhandling/TimeoutExceptionInjector;
+#verifyAllLogsGotReferenced(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/util/Set;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/Path;)V
+#verifyRecoveredEdits(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;)V
+#getSnapshotHLogsDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/snapshot/TakeSnapshotUtils

+###org/apache/hadoop/hbase/snapshot/ReferenceServerWALsTask
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/FileSystem;)V
+#call()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/snapshot/ReferenceServerWALsTask

+###org/apache/hadoop/hbase/snapshot/TableInfoCopyTask
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#call()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/snapshot/TableInfoCopyTask

+###org/apache/hadoop/hbase/snapshot/SnapshotTask
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;)V
+#snapshotFailure(Ljava/lang/String;Ljava/lang/Exception;)V
+#rethrowException()V
+#hasException()Z
+#getException()Lorg/apache/hadoop/hbase/errorhandling/ForeignException;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/snapshot/SnapshotTask

+###org/apache/hadoop/hbase/snapshot/CopyRecoveredEditsTask
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)V
+#call()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/snapshot/CopyRecoveredEditsTask

+###org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$FileVisitor
@0.95.0
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/snapshot/SnapshotReferenceUtil$FileVisitor

+###org/apache/hadoop/hbase/snapshot/ReferenceRegionHFilesTask
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription;Lorg/apache/hadoop/hbase/errorhandling/ForeignExceptionDispatcher;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)V
+#call()Ljava/lang/Void;
+#call()Ljava/lang/Object;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/snapshot/ReferenceRegionHFilesTask

+###org/apache/hadoop/hbase/io/hfile/BlockCacheColumnFamilySummary
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#getTable()Ljava/lang/String;
+#setTable(Ljava/lang/String;)V
+#getColumnFamily()Ljava/lang/String;
+#setColumnFamily(Ljava/lang/String;)V
+#getBlocks()I
+#setBlocks(I)V
+#getHeapSize()J
+#incrementBlocks()V
+#incrementHeapSize(J)V
+#setHeapSize(J)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#createFromStoreFilePath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/io/hfile/BlockCacheColumnFamilySummary;
+#compareTo(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheColumnFamilySummary;)I
+#create(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheColumnFamilySummary;)Lorg/apache/hadoop/hbase/io/hfile/BlockCacheColumnFamilySummary;
+#compareTo(Ljava/lang/Object;)I
@0.98.4-hadoop1
-###org/apache/hadoop/hbase/io/hfile/BlockCacheColumnFamilySummary

+###org/apache/hadoop/hbase/io/hfile/SimpleBlockCache
@0.95.0
+#<init>()V
+#size()J
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;)V
+#cacheBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;Lorg/apache/hadoop/hbase/io/hfile/Cacheable;Z)V
+#evictBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;)Z
+#shutdown()V
+#getStats()Lorg/apache/hadoop/hbase/io/hfile/CacheStats;
+#getFreeSize()J
+#getCurrentSize()J
+#getEvictedCount()J
+#evictBlocksByHfileName(Ljava/lang/String;)I
+#getBlockCacheColumnFamilySummaries(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;
+#getBlockCount()J
@0.98.3-hadoop1
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
-#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@0.98.4-hadoop1
-###org/apache/hadoop/hbase/io/hfile/SimpleBlockCache

+###org/apache/hadoop/hbase/io/hfile/CachedBlockQueue
@0.95.0
+#<init>(JJ)V
+#add(Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;)V
+#poll()Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;
+#pollLast()Lorg/apache/hadoop/hbase/io/hfile/CachedBlock;
+#heapSize()J
@0.98.4-hadoop1
-###org/apache/hadoop/hbase/io/hfile/CachedBlockQueue

+###org/apache/hadoop/hbase/util/ChecksumType
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/util/ChecksumType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/ChecksumType;
+#getName()Ljava/lang/String;
+#getChecksumObject()Ljava/util/zip/Checksum;
+#getCode()B
+#codeToType(B)Lorg/apache/hadoop/hbase/util/ChecksumType;
+#nameToType(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/ChecksumType;
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/util/ChecksumType

+###org/apache/hadoop/hbase/util/ChecksumFactory
@0.95.0
+#<init>()V
+#newInstance(Ljava/lang/String;)Ljava/util/zip/Checksum;
+#newConstructor(Ljava/lang/String;)Ljava/lang/reflect/Constructor;
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/util/ChecksumFactory

+###org/apache/hadoop/hbase/util/Keying
@0.95.0
+#<init>()V
+#createKey(Ljava/lang/String;)Ljava/lang/String;
+#keyToUri(Ljava/lang/String;)Ljava/lang/String;
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/util/Keying

+###org/apache/hadoop/hbase/master/NamespaceJanitor
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/master/MasterServices;)V
+#setEnabled(Z)Z
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/master/NamespaceJanitor

+###org/apache/hadoop/hbase/security/HBaseSaslRpcServer$QualityOfProtection
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/security/HBaseSaslRpcServer$QualityOfProtection;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/HBaseSaslRpcServer$QualityOfProtection;
+#getSaslQop()Ljava/lang/String;
@0.98.3-hadoop1
-###org/apache/hadoop/hbase/security/HBaseSaslRpcServer$QualityOfProtection

+###org/apache/hadoop/hbase/master/CatalogJanitor$Report
@2.0.6
+#getCreateTime()J
+#getHoles()Ljava/util/List;
+#getOverlaps()Ljava/util/List;
+#getUnknownServers()Ljava/util/List;
+#getEmptyRegionInfo()Ljava/util/List;
+#isEmpty()Z
+#toString()Ljava/lang/String;
@2.1.0
-###org/apache/hadoop/hbase/master/CatalogJanitor$Report

+###org/apache/hadoop/hbase/regionserver/slowlog/RpcLogDetails
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/ipc/RpcCall;Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;Ljava/lang/String;JLjava/lang/String;ZZ)V
+#getRpcCall()Lorg/apache/hadoop/hbase/ipc/RpcCall;
+#getClientAddress()Ljava/lang/String;
+#getResponseSize()J
+#getClassName()Ljava/lang/String;
+#isSlowLog()Z
+#isLargeLog()Z
+#getParam()Lorg/apache/hbase/thirdparty/com/google/protobuf/Message;
+#toString()Ljava/lang/String;
@2.4.0
-###org/apache/hadoop/hbase/regionserver/slowlog/RpcLogDetails

+###org/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder
@2.3.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#getSlowLogPayloads(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponseRequest;)Ljava/util/List;
+#getLargeLogPayloads(Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$SlowLogResponseRequest;)Ljava/util/List;
+#clearSlowLogPayloads()Z
+#addSlowLogPayload(Lorg/apache/hadoop/hbase/regionserver/slowlog/RpcLogDetails;)V
+#addAllLogsToSysTable()V
@2.4.0
-###org/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder

+###org/apache/hadoop/hbase/regionserver/slowlog/SlowLogTableOpsChore
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/Stoppable;ILorg/apache/hadoop/hbase/regionserver/slowlog/SlowLogRecorder;)V
@2.4.0
-###org/apache/hadoop/hbase/regionserver/slowlog/SlowLogTableOpsChore

+###org/apache/hadoop/hbase/io/asyncfs/ProtobufDecoder
@2.2.5
+#<init>(Ljava/lang/Object;)V
@2.3.0
-###org/apache/hadoop/hbase/io/asyncfs/ProtobufDecoder

+###org/apache/hadoop/hbase/wal/BoundedLogWriterCreationOutputSink
@2.2.1
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter;Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;Lorg/apache/hadoop/hbase/wal/EntryBuffers;I)V
+#finishWritingAndClose()Ljava/util/List;
+#getOutputCounts()Ljava/util/Map;
+#getNumberOfRecoveredRegions()I
+#append(Lorg/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer;)V
@2.3.0
-###org/apache/hadoop/hbase/wal/BoundedLogWriterCreationOutputSink

+###org/apache/hadoop/hbase/wal/LogRecoveredEditsOutputSink
@2.2.1
+#<init>(Lorg/apache/hadoop/hbase/wal/WALSplitter;Lorg/apache/hadoop/hbase/wal/WALSplitter$PipelineController;Lorg/apache/hadoop/hbase/wal/EntryBuffers;I)V
+#finishWritingAndClose()Ljava/util/List;
+#append(Lorg/apache/hadoop/hbase/wal/WALSplitter$RegionEntryBuffer;)V
+#keepRegionEvent(Lorg/apache/hadoop/hbase/wal/WAL$Entry;)Z
+#getOutputCounts()Ljava/util/Map;
+#getNumberOfRecoveredRegions()I
@2.3.0
-###org/apache/hadoop/hbase/wal/LogRecoveredEditsOutputSink

+###org/apache/hadoop/hbase/client/RegionServerRegistry
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#getMetaRegionLocations()Ljava/util/concurrent/CompletableFuture;
+#getClusterId()Ljava/util/concurrent/CompletableFuture;
+#getActiveMaster()Ljava/util/concurrent/CompletableFuture;
+#getConnectionString()Ljava/lang/String;
+#close()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/client/RegionServerRegistry

+###org/apache/hadoop/hbase/client/ServerConnectionUtils$ShortCircuitingClusterConnection
@2.4.12
+#getAdmin(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#getClient(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ClientService$BlockingInterface;
+#getMaster()Lorg/apache/hadoop/hbase/client/MasterKeepAliveConnection;
+#getRpcControllerFactory()Lorg/apache/hadoop/hbase/ipc/RpcControllerFactory;
+#getRpcRetryingCallerFactory()Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
+#getConnectionConfiguration()Lorg/apache/hadoop/hbase/client/ConnectionConfiguration;
+#hasCellBlockSupport()Z
+#getNewRpcRetryingCallerFactory(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
+#getTableState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState;
+#getNonceGenerator()Lorg/apache/hadoop/hbase/client/NonceGenerator;
+#close()V
+#isAborted()Z
+#isClosed()Z
+#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
+#getBackoffPolicy()Lorg/apache/hadoop/hbase/client/backoff/ClientBackoffPolicy;
+#getStatisticsTracker()Lorg/apache/hadoop/hbase/client/ServerStatisticTracker;
+#getAsyncProcess()Lorg/apache/hadoop/hbase/client/AsyncProcess;
+#updateCachedLocations(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/Object;Lorg/apache/hadoop/hbase/ServerName;)V
+#deleteCachedRegionLocation(Lorg/apache/hadoop/hbase/HRegionLocation;)V
+#getAdminForMaster()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
+#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;)V
+#clearRegionLocationCache()V
+#clearCaches(Lorg/apache/hadoop/hbase/ServerName;)V
+#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;[B)V
+#cacheLocation(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/RegionLocations;)V
+#locateRegion(Lorg/apache/hadoop/hbase/TableName;[BZZI)Lorg/apache/hadoop/hbase/RegionLocations;
+#locateRegion(Lorg/apache/hadoop/hbase/TableName;[BZZ)Lorg/apache/hadoop/hbase/RegionLocations;
+#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[BI)Lorg/apache/hadoop/hbase/RegionLocations;
+#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#locateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#locateRegions(Lorg/apache/hadoop/hbase/TableName;ZZ)Ljava/util/List;
+#locateRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#locateRegion([B)Lorg/apache/hadoop/hbase/HRegionLocation;
+#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;[[B)Z
+#isTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#isTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Z
+#getRegionLocation(Lorg/apache/hadoop/hbase/TableName;[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
+#isMasterRunning()Z[deprecated]
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
+#toString()Ljava/lang/String;
+#getConnectionMetrics()Lorg/apache/hadoop/hbase/client/MetricsConnection;
+#getHbck(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/client/Hbck;
+#getHbck()Lorg/apache/hadoop/hbase/client/Hbck;
+#getAdmin()Lorg/apache/hadoop/hbase/client/Admin;
+#getRegionLocator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionLocator;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
+#getBufferedMutator(Lorg/apache/hadoop/hbase/client/BufferedMutatorParams;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
+#getTableBuilder(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/TableBuilder;
+#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
@2.4.14
+#getClusterId()Ljava/lang/String;
@2.5.0
-#getClusterId()Ljava/lang/String;
-#getRpcControllerFactory()Lorg/apache/hadoop/hbase/ipc/RpcControllerFactory;
-#getRpcRetryingCallerFactory()Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
-#getConnectionConfiguration()Lorg/apache/hadoop/hbase/client/ConnectionConfiguration;
-#hasCellBlockSupport()Z
-#getNewRpcRetryingCallerFactory(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/client/RpcRetryingCallerFactory;
-#getTableState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/TableState;
-#getNonceGenerator()Lorg/apache/hadoop/hbase/client/NonceGenerator;
-#close()V
-#isAborted()Z
-#isClosed()Z
-#abort(Ljava/lang/String;Ljava/lang/Throwable;)V
-#getBackoffPolicy()Lorg/apache/hadoop/hbase/client/backoff/ClientBackoffPolicy;
-#getStatisticsTracker()Lorg/apache/hadoop/hbase/client/ServerStatisticTracker;
-#getAsyncProcess()Lorg/apache/hadoop/hbase/client/AsyncProcess;
-#updateCachedLocations(Lorg/apache/hadoop/hbase/TableName;[B[BLjava/lang/Object;Lorg/apache/hadoop/hbase/ServerName;)V
-#deleteCachedRegionLocation(Lorg/apache/hadoop/hbase/HRegionLocation;)V
-#getAdminForMaster()Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;
-#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;)V
-#clearRegionLocationCache()V
-#clearCaches(Lorg/apache/hadoop/hbase/ServerName;)V
-#clearRegionCache(Lorg/apache/hadoop/hbase/TableName;[B)V
-#cacheLocation(Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/RegionLocations;)V
-#locateRegion(Lorg/apache/hadoop/hbase/TableName;[BZZI)Lorg/apache/hadoop/hbase/RegionLocations;
-#locateRegion(Lorg/apache/hadoop/hbase/TableName;[BZZ)Lorg/apache/hadoop/hbase/RegionLocations;
-#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[BI)Lorg/apache/hadoop/hbase/RegionLocations;
-#relocateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#locateRegion(Lorg/apache/hadoop/hbase/TableName;[B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#locateRegions(Lorg/apache/hadoop/hbase/TableName;ZZ)Ljava/util/List;
-#locateRegions(Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
-#locateRegion([B)Lorg/apache/hadoop/hbase/HRegionLocation;
-#isTableAvailable(Lorg/apache/hadoop/hbase/TableName;[[B)Z
-#isTableDisabled(Lorg/apache/hadoop/hbase/TableName;)Z
-#isTableEnabled(Lorg/apache/hadoop/hbase/TableName;)Z
-#getRegionLocation(Lorg/apache/hadoop/hbase/TableName;[BZ)Lorg/apache/hadoop/hbase/HRegionLocation;
-#isMasterRunning()Z[deprecated]
-#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
-#toString()Ljava/lang/String;
-#getConnectionMetrics()Lorg/apache/hadoop/hbase/client/MetricsConnection;
-#getHbck(Lorg/apache/hadoop/hbase/ServerName;)Lorg/apache/hadoop/hbase/client/Hbck;
-#getHbck()Lorg/apache/hadoop/hbase/client/Hbck;
-#getAdmin()Lorg/apache/hadoop/hbase/client/Admin;
-#getRegionLocator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/RegionLocator;
-#getBufferedMutator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
-#getBufferedMutator(Lorg/apache/hadoop/hbase/client/BufferedMutatorParams;)Lorg/apache/hadoop/hbase/client/BufferedMutator;
-#getTableBuilder(Lorg/apache/hadoop/hbase/TableName;Ljava/util/concurrent/ExecutorService;)Lorg/apache/hadoop/hbase/client/TableBuilder;
-#getTable(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/client/Table;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/client/ServerConnectionUtils$ShortCircuitingClusterConnection

+###org/apache/hadoop/hbase/client/ServerConnectionUtils
@2.4.12
+#createShortCircuitConnection(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ClientService$BlockingInterface;)Lorg/apache/hadoop/hbase/client/ClusterConnection;
@2.5.0
+#createShortCircuitConnection(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ClientService$BlockingInterface;Lorg/apache/hadoop/hbase/client/ConnectionRegistry;)Lorg/apache/hadoop/hbase/client/ClusterConnection;
-#createShortCircuitConnection(Lorg/apache/hadoop/conf/Configuration;Ljava/util/concurrent/ExecutorService;Lorg/apache/hadoop/hbase/security/User;Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos$AdminService$BlockingInterface;Lorg/apache/hadoop/hbase/shaded/protobuf/generated/ClientProtos$ClientService$BlockingInterface;)Lorg/apache/hadoop/hbase/client/ClusterConnection;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/client/ServerConnectionUtils

+###org/apache/hadoop/hbase/io/hfile/BlockIndexChunk
@2.5.1
+#getBlockKeys()Ljava/util/List;
+#getSecondaryIndexOffsetMarks()Ljava/util/List;
+#getEntryBySubEntry(J)I
+#add([BJI)V
+#add([BJIJ)V
+#getRootSize()I
+#getCurTotalNonRootEntrySize()I
+#getNonRootSize()I
+#getNumEntries()I
+#getBlockKey(I)[B
+#getBlockOffset(I)J
+#getOnDiskDataSize(I)I
+#getMidKeyMetadata()[B
+#clear()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/BlockIndexChunk

+###org/apache/hadoop/hbase/io/hfile/BloomFilterMetrics
@2.5.0
+#<init>()V
+#incrementRequests(Z)V
+#incrementEligible()V
+#getRequestsCount()J
+#getNegativeResultsCount()J
+#getEligibleRequestsCount()J
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/BloomFilterMetrics

+###org/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder$EncodedSeeker
@2.5.1
+#initRootIndex(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;ILorg/apache/hadoop/hbase/CellComparator;I)V
+#isEmpty()Z
+#getRootBlockKey(I)Lorg/apache/hadoop/hbase/Cell;
+#getRootBlockCount()I
+#midkey(Lorg/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader;)Lorg/apache/hadoop/hbase/Cell;
+#rootBlockContainingKey(Lorg/apache/hadoop/hbase/Cell;)I
+#loadDataBlockWithScanInfo(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader;)Lorg/apache/hadoop/hbase/io/hfile/BlockWithScanInfo;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder$EncodedSeeker

+###org/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder
@2.5.1
+#saveMetadata(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V
+#encode(Lorg/apache/hadoop/hbase/io/hfile/BlockIndexChunk;ZLjava/io/DataOutput;)V
+#getIndexBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;
+#createSeeker()Lorg/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder$EncodedSeeker;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder

+###org/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoderImpl
@2.5.1
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;)V
+#createFromFileInfo(Lorg/apache/hadoop/hbase/io/hfile/HFileInfo;)Lorg/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder;
+#saveMetadata(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V
+#getIndexBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;
+#encode(Lorg/apache/hadoop/hbase/io/hfile/BlockIndexChunk;ZLjava/io/DataOutput;)V
+#createSeeker()Lorg/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder$EncodedSeeker;
+#toString()Ljava/lang/String;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoderImpl

+###org/apache/hadoop/hbase/io/hfile/NoOpIndexBlockEncoder$NoOpEncodedSeeker
@2.5.1
+#heapSize()J
+#isEmpty()Z
+#getRootBlockKey(I)Lorg/apache/hadoop/hbase/Cell;
+#getRootBlockCount()I
+#initRootIndex(Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;ILorg/apache/hadoop/hbase/CellComparator;I)V
+#midkey(Lorg/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader;)Lorg/apache/hadoop/hbase/Cell;
+#loadDataBlockWithScanInfo(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/hfile/HFileBlock;ZZZLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/hfile/HFile$CachingBlockReader;)Lorg/apache/hadoop/hbase/io/hfile/BlockWithScanInfo;
+#rootBlockContainingKey(Lorg/apache/hadoop/hbase/Cell;)I
+#toString()Ljava/lang/String;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/NoOpIndexBlockEncoder$NoOpEncodedSeeker

+###org/apache/hadoop/hbase/io/hfile/NoOpIndexBlockEncoder
@2.5.1
+#saveMetadata(Lorg/apache/hadoop/hbase/io/hfile/HFile$Writer;)V
+#encode(Lorg/apache/hadoop/hbase/io/hfile/BlockIndexChunk;ZLjava/io/DataOutput;)V
+#getIndexBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;
+#createSeeker()Lorg/apache/hadoop/hbase/io/hfile/HFileIndexBlockEncoder$EncodedSeeker;
+#toString()Ljava/lang/String;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/NoOpIndexBlockEncoder

+###org/apache/hadoop/hbase/ipc/HeapByteBufAllocator
@2.5.0
+#<init>()V
+#isDirectBufferPooled()Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/ipc/HeapByteBufAllocator

+###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$GeneratorType
@2.4.9
+#values()[Lorg/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$GeneratorType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$GeneratorType;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer$GeneratorType

+###org/apache/hadoop/hbase/master/balancer/SwapRegionsAction
@2.5.0
+#getFromServer()I
+#getFromRegion()I
+#getToServer()I
+#getToRegion()I
+#undoAction()Lorg/apache/hadoop/hbase/master/balancer/BalanceAction;
+#toString()Ljava/lang/String;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/master/balancer/SwapRegionsAction

+###org/apache/hadoop/hbase/mob/RSMobFileCleanerChore
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/regionserver/HRegionServer;)V
+#<init>()V
+#archiveMobFiles(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;[BLjava/util/List;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/mob/RSMobFileCleanerChore

+###org/apache/hadoop/hbase/regionserver/LogRoller$RollController
@1.7.0
+#requestRoll()V
+#rollWal(J)[[B
+#isRollRequested()Z
+#needsPeriodicRoll(J)Z
+#needsRoll(J)Z
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/regionserver/LogRoller$RollController

+###org/apache/hadoop/hbase/generated/master/processRS_jsp
@2.0.0-alpha2
+#<init>()V
+#getDependants()Ljava/util/List;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/generated/master/processRS_jsp

+###org/apache/hadoop/hbase/util/JSONMetricUtil
@2.0.0-alpha2
+#getMBeanAttributeInfo(Ljavax/management/ObjectName;)[Ljavax/management/MBeanAttributeInfo;
+#getValueFromMBean(Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/Object;
+#dumpBeanToString(Ljava/lang/String;)Ljava/lang/String;
+#mappStringToJsonNode(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#searchJson(Lorg/codehaus/jackson/JsonNode;Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
+#buldKeyValueTable([Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Hashtable;
+#buildObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;
+#buildObjectName(Ljava/lang/String;Ljava/util/Hashtable;)Ljavax/management/ObjectName;
+#getRegistredMBeans(Ljavax/management/ObjectName;Ljavax/management/MBeanServer;)Ljava/util/Set;
+#getProcessPID()Ljava/lang/String;
+#getCommmand()Ljava/lang/String;
+#getGcCollectorBeans()Ljava/util/List;
+#getLastGcDuration(Ljavax/management/ObjectName;)J
+#getMemoryPools()Ljava/util/List;
+#calcPercentage(JJ)F
@2.0.0-alpha4
-###org/apache/hadoop/hbase/util/JSONMetricUtil

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$ReplicationSourceWorkerThread
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;Ljava/lang/String;Ljava/util/concurrent/PriorityBlockingQueue;Lorg/apache/hadoop/hbase/replication/ReplicationQueueInfo;Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource;)V
+#run()V
+#startup()V
+#getCurrentPath()Lorg/apache/hadoop/fs/Path;
+#getCurrentPosition()J
+#setWorkerRunning(Z)V
@1.2.7
+#setWorkerState(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;)V
+#getWorkerState()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;
-#setWorkerRunning(Z)V
@1.3.0
+#setWorkerRunning(Z)V
-#setWorkerState(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;)V
-#getWorkerState()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;
@1.3.2
+#setWorkerState(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;)V
+#getWorkerState()Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSource$WorkerState;
-#setWorkerRunning(Z)V
@1.4.0
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSource$ReplicationSourceWorkerThread

+###org/apache/hadoop/hbase/BaseConfigurable
@0.95.0
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
@0.96.1-hadoop1
-###org/apache/hadoop/hbase/BaseConfigurable

+###org/apache/hadoop/hbase/generated/thrift/thrift_jsp
@0.95.0
+#<init>()V
+#getDependants()Ljava/lang/Object;
+#_jspService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/generated/thrift/thrift_jsp

+###org/apache/hadoop/hbase/master/balancer/DefaultLoadBalancer
@0.95.0
+#<init>()V
+#balanceCluster(Ljava/util/Map;)Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/master/balancer/DefaultLoadBalancer

+###org/apache/hadoop/hbase/master/balancer/FavoredNodes$Position
@0.95.1-hadoop1
+#values()[Lorg/apache/hadoop/hbase/master/balancer/FavoredNodes$Position;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/master/balancer/FavoredNodes$Position;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/master/balancer/FavoredNodes$Position

+###org/apache/hadoop/hbase/master/balancer/FavoredNodes
@0.95.1-hadoop1
+#<init>()V
+#updateFavoredNodesMap(Lorg/apache/hadoop/hbase/HRegionInfo;Ljava/util/List;)V
+#getFavoredNodes(Lorg/apache/hadoop/hbase/HRegionInfo;)Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/master/balancer/FavoredNodes

+###org/apache/hadoop/hbase/master/handler/MergedRegionHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
+#getHRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#toString()Ljava/lang/String;
+#process()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/master/handler/MergedRegionHandler

+###org/apache/hadoop/hbase/master/handler/SplitRegionHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/master/AssignmentManager;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/ServerName;Ljava/util/List;)V
+#getHRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#toString()Ljava/lang/String;
+#process()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/master/handler/SplitRegionHandler

+###org/apache/hadoop/hbase/regionserver/HRegionThriftServer
@0.95.0
+#run()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/regionserver/HRegionThriftServer

+###org/apache/hadoop/hbase/regionserver/RegionScannerHolder
@0.95.1-hadoop1
+#getPrefetchedResultSize()J
+#isPrefetchSubmitted()Z
+#getRegionInfo()Lorg/apache/hadoop/hbase/HRegionInfo;
+#currentPrefetchedResultSize()J
+#waitForPrefetchingDone()Z
+#closeScanner()V
+#getScanResult(I)Lorg/apache/hadoop/hbase/regionserver/ScanResult;
+#enablePrefetching(I)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/regionserver/RegionScannerHolder

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager$OtherRegionServerWatcher
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#nodeCreated(Ljava/lang/String;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager$OtherRegionServerWatcher

+###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager$PeersWatcher
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager;Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)V
+#nodeDeleted(Ljava/lang/String;)V
+#nodeChildrenChanged(Ljava/lang/String;)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager$PeersWatcher

+###org/apache/hadoop/hbase/thrift/CallQueue$Call
@0.95.0
+#run()V
+#timeInQueue()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/CallQueue$Call

+###org/apache/hadoop/hbase/thrift/CallQueue
@0.95.0
+#<init>(Ljava/util/concurrent/BlockingQueue;Lorg/apache/hadoop/hbase/thrift/ThriftMetrics;)V
+#poll()Ljava/lang/Runnable;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Runnable;
+#remove()Ljava/lang/Runnable;
+#take()Ljava/lang/Runnable;
+#drainTo(Ljava/util/Collection;)I
+#drainTo(Ljava/util/Collection;I)I
+#offer(Ljava/lang/Runnable;)Z
+#offer(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Runnable;)V
+#add(Ljava/lang/Runnable;)Z
+#addAll(Ljava/util/Collection;)Z
+#element()Ljava/lang/Runnable;
+#peek()Ljava/lang/Runnable;
+#clear()V
+#containsAll(Ljava/util/Collection;)Z
+#isEmpty()Z
+#iterator()Ljava/util/Iterator;
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#size()I
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#contains(Ljava/lang/Object;)Z
+#remainingCapacity()I
+#remove(Ljava/lang/Object;)Z
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#take()Ljava/lang/Object;
+#offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
+#put(Ljava/lang/Object;)V
+#offer(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#peek()Ljava/lang/Object;
+#element()Ljava/lang/Object;
+#poll()Ljava/lang/Object;
+#remove()Ljava/lang/Object;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/CallQueue

+###org/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields

+###org/apache/hadoop/hbase/thrift/generated/AlreadyExists
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;
+#clear()V
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;
+#unsetMessage()V
+#isSetMessage()Z
+#setMessageIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/AlreadyExists

+###org/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields

+###org/apache/hadoop/hbase/thrift/generated/BatchMutation
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getMutationsSize()I
+#getMutationsIterator()Ljava/util/Iterator;
+#addToMutations(Lorg/apache/hadoop/hbase/thrift/generated/Mutation;)V
+#getMutations()Ljava/util/List;
+#setMutations(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;
+#unsetMutations()V
+#isSetMutations()Z
+#setMutationsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/BatchMutation

+###org/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields

+###org/apache/hadoop/hbase/thrift/generated/ColumnDescriptor
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;ILjava/lang/String;ZLjava/lang/String;IIZI)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#clear()V
+#getName()[B
+#bufferForName()Ljava/nio/ByteBuffer;
+#setName([B)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#setName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetName()V
+#isSetName()Z
+#setNameIsSet(Z)V
+#getMaxVersions()I
+#setMaxVersions(I)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetMaxVersions()V
+#isSetMaxVersions()Z
+#setMaxVersionsIsSet(Z)V
+#getCompression()Ljava/lang/String;
+#setCompression(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetCompression()V
+#isSetCompression()Z
+#setCompressionIsSet(Z)V
+#isInMemory()Z
+#setInMemory(Z)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetInMemory()V
+#isSetInMemory()Z
+#setInMemoryIsSet(Z)V
+#getBloomFilterType()Ljava/lang/String;
+#setBloomFilterType(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetBloomFilterType()V
+#isSetBloomFilterType()Z
+#setBloomFilterTypeIsSet(Z)V
+#getBloomFilterVectorSize()I
+#setBloomFilterVectorSize(I)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetBloomFilterVectorSize()V
+#isSetBloomFilterVectorSize()Z
+#setBloomFilterVectorSizeIsSet(Z)V
+#getBloomFilterNbHashes()I
+#setBloomFilterNbHashes(I)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetBloomFilterNbHashes()V
+#isSetBloomFilterNbHashes()Z
+#setBloomFilterNbHashesIsSet(Z)V
+#isBlockCacheEnabled()Z
+#setBlockCacheEnabled(Z)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetBlockCacheEnabled()V
+#isSetBlockCacheEnabled()Z
+#setBlockCacheEnabledIsSet(Z)V
+#getTimeToLive()I
+#setTimeToLive(I)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#unsetTimeToLive()V
+#isSetTimeToLive()Z
+#setTimeToLiveIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/ColumnDescriptor

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$atomicIncrement_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()J
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$atomicIncrement_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$compact_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$compact_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$createTable_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$createTable_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAll_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAll_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAllRow_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAllRow_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAllRowTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAllRowTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAllTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteAllTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteTable_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$deleteTable_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$disableTable_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$disableTable_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$enableTable_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$enableTable_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$Factory
@0.95.0
+#<init>(Lorg/apache/thrift/async/TAsyncClientManager;Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#getAsyncClient(Lorg/apache/thrift/transport/TNonblockingTransport;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient;
+#getAsyncClient(Lorg/apache/thrift/transport/TNonblockingTransport;)Lorg/apache/thrift/async/TAsyncClient;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$Factory

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$get_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$get_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getColumnDescriptors_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/Map;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getColumnDescriptors_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRegionInfo_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRegionInfo_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRow_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRow_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowOrBefore_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowOrBefore_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRows_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRows_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowsTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowsTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowsWithColumns_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowsWithColumns_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowsWithColumnsTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowsWithColumnsTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowWithColumns_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowWithColumns_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowWithColumnsTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getRowWithColumnsTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getTableNames_call
@0.95.0
+#<init>(Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getTableNames_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getTableRegions_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getTableRegions_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getVer_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getVer_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getVerTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$getVerTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$increment_call
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$increment_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$incrementRows_call
@0.95.0
+#<init>(Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$incrementRows_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$isTableEnabled_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Z
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$isTableEnabled_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$majorCompact_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$majorCompact_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRow_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRow_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRows_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRows_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRowsTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRowsTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRowTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$mutateRowTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerClose_call
@0.95.0
+#<init>(ILorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerClose_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerGet_call
@0.95.0
+#<init>(ILorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerGet_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerGetList_call
@0.95.0
+#<init>(IILorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerGetList_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpen_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpen_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithPrefix_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithPrefix_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithScan_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithScan_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithStop_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithStop_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithStopTs_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient$scannerOpenWithStopTs_call

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient
@0.95.0
+#<init>(Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/async/TAsyncClientManager;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#enableTable(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#disableTable(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#isTableEnabled(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#compact(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#majorCompact(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getTableNames(Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getColumnDescriptors(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getTableRegions(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#createTable(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteTable(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#get(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getVer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getVerTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowWithColumns(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowsWithColumns(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowsWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#atomicIncrement(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAll(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAllTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAllRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#increment(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#incrementRows(Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAllRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithScan(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpen(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithStop(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithPrefix(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithStopTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerGet(ILorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerGetList(IILorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerClose(ILorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowOrBefore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRegionInfo(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncClient

+###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncIface
@0.95.0
+#enableTable(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#disableTable(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#isTableEnabled(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#compact(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#majorCompact(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getTableNames(Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getColumnDescriptors(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getTableRegions(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#createTable(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteTable(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#get(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getVer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getVerTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowWithColumns(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowsWithColumns(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowsWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#mutateRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#atomicIncrement(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAll(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAllTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAllRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#increment(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#incrementRows(Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteAllRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithScan(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpen(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithStop(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithPrefix(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerOpenWithStopTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerGet(ILorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerGetList(IILorg/apache/thrift/async/AsyncMethodCallback;)V
+#scannerClose(ILorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRowOrBefore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getRegionInfo(Ljava/nio/ByteBuffer;Lorg/apache/thrift/async/AsyncMethodCallback;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$AsyncIface

+###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getValue()J
+#setValue(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#unsetValue()V
+#isSetValue()Z
+#setValueIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result
@0.95.0
+#<init>()V
+#<init>(JLorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;
+#clear()V
+#getSuccess()J
+#setSuccess(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Client$Factory
@0.95.0
+#<init>()V
+#getClient(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Client;
+#getClient(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Client;
+#getClient(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TServiceClient;
+#getClient(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TServiceClient;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Client$Factory

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Client
@0.95.0
+#<init>(Lorg/apache/thrift/protocol/TProtocol;)V
+#<init>(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V
+#enableTable(Ljava/nio/ByteBuffer;)V
+#send_enableTable(Ljava/nio/ByteBuffer;)V
+#recv_enableTable()V
+#disableTable(Ljava/nio/ByteBuffer;)V
+#send_disableTable(Ljava/nio/ByteBuffer;)V
+#recv_disableTable()V
+#isTableEnabled(Ljava/nio/ByteBuffer;)Z
+#send_isTableEnabled(Ljava/nio/ByteBuffer;)V
+#recv_isTableEnabled()Z
+#compact(Ljava/nio/ByteBuffer;)V
+#send_compact(Ljava/nio/ByteBuffer;)V
+#recv_compact()V
+#majorCompact(Ljava/nio/ByteBuffer;)V
+#send_majorCompact(Ljava/nio/ByteBuffer;)V
+#recv_majorCompact()V
+#getTableNames()Ljava/util/List;
+#send_getTableNames()V
+#recv_getTableNames()Ljava/util/List;
+#getColumnDescriptors(Ljava/nio/ByteBuffer;)Ljava/util/Map;
+#send_getColumnDescriptors(Ljava/nio/ByteBuffer;)V
+#recv_getColumnDescriptors()Ljava/util/Map;
+#getTableRegions(Ljava/nio/ByteBuffer;)Ljava/util/List;
+#send_getTableRegions(Ljava/nio/ByteBuffer;)V
+#recv_getTableRegions()Ljava/util/List;
+#createTable(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#send_createTable(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#recv_createTable()V
+#deleteTable(Ljava/nio/ByteBuffer;)V
+#send_deleteTable(Ljava/nio/ByteBuffer;)V
+#recv_deleteTable()V
+#get(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)Ljava/util/List;
+#send_get(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#recv_get()Ljava/util/List;
+#getVer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;)Ljava/util/List;
+#send_getVer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;)V
+#recv_getVer()Ljava/util/List;
+#getVerTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;)Ljava/util/List;
+#send_getVerTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;)V
+#recv_getVerTs()Ljava/util/List;
+#getRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)Ljava/util/List;
+#send_getRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#recv_getRow()Ljava/util/List;
+#getRowWithColumns(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#send_getRowWithColumns(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#recv_getRowWithColumns()Ljava/util/List;
+#getRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)Ljava/util/List;
+#send_getRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#recv_getRowTs()Ljava/util/List;
+#getRowWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#send_getRowWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#recv_getRowWithColumnsTs()Ljava/util/List;
+#getRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#send_getRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#recv_getRows()Ljava/util/List;
+#getRowsWithColumns(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#send_getRowsWithColumns(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V
+#recv_getRowsWithColumns()Ljava/util/List;
+#getRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#send_getRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#recv_getRowsTs()Ljava/util/List;
+#getRowsWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#send_getRowsWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;)V
+#recv_getRowsWithColumnsTs()Ljava/util/List;
+#mutateRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#send_mutateRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#recv_mutateRow()V
+#mutateRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#send_mutateRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#recv_mutateRowTs()V
+#mutateRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#send_mutateRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#recv_mutateRows()V
+#mutateRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#send_mutateRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#recv_mutateRowsTs()V
+#atomicIncrement(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)J
+#send_atomicIncrement(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)V
+#recv_atomicIncrement()J
+#deleteAll(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#send_deleteAll(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#recv_deleteAll()V
+#deleteAllTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#send_deleteAllTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#recv_deleteAllTs()V
+#deleteAllRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#send_deleteAllRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#recv_deleteAllRow()V
+#increment(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)V
+#send_increment(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)V
+#recv_increment()V
+#incrementRows(Ljava/util/List;)V
+#send_incrementRows(Ljava/util/List;)V
+#recv_incrementRows()V
+#deleteAllRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#send_deleteAllRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#recv_deleteAllRowTs()V
+#scannerOpenWithScan(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;)I
+#send_scannerOpenWithScan(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;)V
+#recv_scannerOpenWithScan()I
+#scannerOpen(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#send_scannerOpen(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#recv_scannerOpen()I
+#scannerOpenWithStop(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#send_scannerOpenWithStop(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#recv_scannerOpenWithStop()I
+#scannerOpenWithPrefix(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#send_scannerOpenWithPrefix(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#recv_scannerOpenWithPrefix()I
+#scannerOpenTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)I
+#send_scannerOpenTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#recv_scannerOpenTs()I
+#scannerOpenWithStopTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)I
+#send_scannerOpenWithStopTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#recv_scannerOpenWithStopTs()I
+#scannerGet(I)Ljava/util/List;
+#send_scannerGet(I)V
+#recv_scannerGet()Ljava/util/List;
+#scannerGetList(II)Ljava/util/List;
+#send_scannerGetList(II)V
+#recv_scannerGetList()Ljava/util/List;
+#scannerClose(I)V
+#send_scannerClose(I)V
+#recv_scannerClose()V
+#getRowOrBefore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/util/List;
+#send_getRowOrBefore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#recv_getRowOrBefore()Ljava/util/List;
+#getRegionInfo(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#send_getRegionInfo(Ljava/nio/ByteBuffer;)V
+#recv_getRegionInfo()Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Client

+###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;
+#clear()V
+#getTableNameOrRegionName()[B
+#bufferForTableNameOrRegionName()Ljava/nio/ByteBuffer;
+#setTableNameOrRegionName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;
+#setTableNameOrRegionName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;
+#unsetTableNameOrRegionName()V
+#isSetTableNameOrRegionName()Z
+#setTableNameOrRegionNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$compact_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getColumnFamiliesSize()I
+#getColumnFamiliesIterator()Ljava/util/Iterator;
+#addToColumnFamilies(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;)V
+#getColumnFamilies()Ljava/util/List;
+#setColumnFamilies(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;
+#unsetColumnFamilies()V
+#isSetColumnFamilies()Z
+#setColumnFamiliesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#getExist()Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;
+#setExist(Lorg/apache/hadoop/hbase/thrift/generated/AlreadyExists;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;
+#unsetExist()V
+#isSetExist()Z
+#setExistIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$get_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$get_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$get_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$get_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/Map;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result;
+#clear()V
+#getSuccessSize()I
+#putToSuccess(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;)V
+#getSuccess()Ljava/util/Map;
+#setSuccess(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result;
+#clear()V
+#getSuccess()Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#setSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getFamily()[B
+#bufferForFamily()Ljava/nio/ByteBuffer;
+#setFamily([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#setFamily(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#unsetFamily()V
+#isSetFamily()Z
+#setFamilyIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRowsSize()I
+#getRowsIterator()Ljava/util/Iterator;
+#addToRows(Ljava/nio/ByteBuffer;)V
+#getRows()Ljava/util/List;
+#setRows(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;
+#unsetRows()V
+#isSetRows()Z
+#setRowsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRowsSize()I
+#getRowsIterator()Ljava/util/Iterator;
+#addToRows(Ljava/nio/ByteBuffer;)V
+#getRows()Ljava/util/List;
+#setRows(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;
+#unsetRows()V
+#isSetRows()Z
+#setRowsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRowsSize()I
+#getRowsIterator()Ljava/util/Iterator;
+#addToRows(Ljava/nio/ByteBuffer;)V
+#getRows()Ljava/util/List;
+#setRows(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;
+#unsetRows()V
+#isSetRows()Z
+#setRowsIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRowsSize()I
+#getRowsIterator()Ljava/util/Iterator;
+#addToRows(Ljava/nio/ByteBuffer;)V
+#getRows()Ljava/util/List;
+#setRows(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#unsetRows()V
+#isSetRows()Z
+#setRowsIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args;
+#clear()V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Ljava/nio/ByteBuffer;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getNumVersions()I
+#setNumVersions(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#unsetNumVersions()V
+#isSetNumVersions()Z
+#setNumVersionsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getNumVersions()I
+#setNumVersions(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#unsetNumVersions()V
+#isSetNumVersions()Z
+#setNumVersionsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Iface
@0.95.0
+#enableTable(Ljava/nio/ByteBuffer;)V
+#disableTable(Ljava/nio/ByteBuffer;)V
+#isTableEnabled(Ljava/nio/ByteBuffer;)Z
+#compact(Ljava/nio/ByteBuffer;)V
+#majorCompact(Ljava/nio/ByteBuffer;)V
+#getTableNames()Ljava/util/List;
+#getColumnDescriptors(Ljava/nio/ByteBuffer;)Ljava/util/Map;
+#getTableRegions(Ljava/nio/ByteBuffer;)Ljava/util/List;
+#createTable(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#deleteTable(Ljava/nio/ByteBuffer;)V
+#get(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)Ljava/util/List;
+#getVer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;)Ljava/util/List;
+#getVerTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;)Ljava/util/List;
+#getRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)Ljava/util/List;
+#getRowWithColumns(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#getRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)Ljava/util/List;
+#getRowWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#getRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#getRowsWithColumns(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#getRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#getRowsWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#mutateRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#mutateRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#mutateRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#mutateRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#atomicIncrement(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)J
+#deleteAll(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#deleteAllTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#deleteAllRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#increment(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)V
+#incrementRows(Ljava/util/List;)V
+#deleteAllRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#scannerOpenWithScan(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;)I
+#scannerOpen(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#scannerOpenWithStop(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#scannerOpenWithPrefix(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#scannerOpenTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)I
+#scannerOpenWithStopTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)I
+#scannerGet(I)Ljava/util/List;
+#scannerGetList(II)Ljava/util/List;
+#scannerClose(I)V
+#getRowOrBefore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/util/List;
+#getRegionInfo(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Iface

+###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_args
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args;
+#clear()V
+#getIncrement()Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#setIncrement(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args;
+#unsetIncrement()V
+#isSetIncrement()Z
+#setIncrementIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$increment_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args;
+#clear()V
+#getIncrementsSize()I
+#getIncrementsIterator()Ljava/util/Iterator;
+#addToIncrements(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)V
+#getIncrements()Ljava/util/List;
+#setIncrements(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args;
+#unsetIncrements()V
+#isSetIncrements()Z
+#setIncrementsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result
@0.95.0
+#<init>()V
+#<init>(ZLorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result;
+#clear()V
+#isSuccess()Z
+#setSuccess(Z)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;
+#clear()V
+#getTableNameOrRegionName()[B
+#bufferForTableNameOrRegionName()Ljava/nio/ByteBuffer;
+#setTableNameOrRegionName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;
+#setTableNameOrRegionName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;
+#unsetTableNameOrRegionName()V
+#isSetTableNameOrRegionName()Z
+#setTableNameOrRegionNameIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getMutationsSize()I
+#getMutationsIterator()Ljava/util/Iterator;
+#addToMutations(Lorg/apache/hadoop/hbase/thrift/generated/Mutation;)V
+#getMutations()Ljava/util/List;
+#setMutations(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#unsetMutations()V
+#isSetMutations()Z
+#setMutationsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRowBatchesSize()I
+#getRowBatchesIterator()Ljava/util/Iterator;
+#addToRowBatches(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;)V
+#getRowBatches()Ljava/util/List;
+#setRowBatches(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;
+#unsetRowBatches()V
+#isSetRowBatches()Z
+#setRowBatchesIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRowBatchesSize()I
+#getRowBatchesIterator()Ljava/util/Iterator;
+#addToRowBatches(Lorg/apache/hadoop/hbase/thrift/generated/BatchMutation;)V
+#getRowBatches()Ljava/util/List;
+#setRowBatches(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;
+#unsetRowBatches()V
+#isSetRowBatches()Z
+#setRowBatchesIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getMutationsSize()I
+#getMutationsIterator()Ljava/util/Iterator;
+#addToMutations(Lorg/apache/hadoop/hbase/thrift/generated/Mutation;)V
+#getMutations()Ljava/util/List;
+#setMutations(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#unsetMutations()V
+#isSetMutations()Z
+#setMutationsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$atomicIncrement
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$atomicIncrement_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$atomicIncrement

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$compact
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$compact_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$compact

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$createTable
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$createTable_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$createTable

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAll
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAll_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAll

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAllRow
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRow_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAllRow

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAllRowTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllRowTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAllRowTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAllTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteAllTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteAllTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteTable
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$deleteTable_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$deleteTable

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$disableTable
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$disableTable_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$disableTable

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$enableTable
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$enableTable_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$enableTable

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$get
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$get_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$get

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getColumnDescriptors
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getColumnDescriptors_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getColumnDescriptors

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRegionInfo
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRegionInfo_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRegionInfo

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRow
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRow_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRow

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowOrBefore
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowOrBefore_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowOrBefore

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRows
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRows_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRows

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowsTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowsTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowsWithColumns
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumns_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowsWithColumns

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowsWithColumnsTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowsWithColumnsTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowsWithColumnsTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowWithColumns
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumns_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowWithColumns

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowWithColumnsTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getRowWithColumnsTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getRowWithColumnsTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getTableNames
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableNames_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getTableNames

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getTableRegions
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getTableRegions_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getTableRegions

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getVer
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVer_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getVer

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getVerTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$getVerTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$getVerTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$increment
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$increment_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$increment

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$incrementRows
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$incrementRows_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$incrementRows

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$isTableEnabled
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$isTableEnabled_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$isTableEnabled

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$majorCompact
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$majorCompact_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$majorCompact

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRow
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRow_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRow

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRows
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRows_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRows

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRowsTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowsTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRowsTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRowTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$mutateRowTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$mutateRowTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerClose
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerClose

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerGet
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerGet

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerGetList
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerGetList

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpen
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpen

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithPrefix
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithPrefix

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithScan
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithScan

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithStop
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithStop

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithStopTs
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor$scannerOpenWithStopTs

+###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$Processor

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args
@0.95.0
+#<init>()V
+#<init>(I)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args;
+#clear()V
+#getId()I
+#setId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args;
+#unsetId()V
+#isSetId()Z
+#setIdIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerClose_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args
@0.95.0
+#<init>()V
+#<init>(I)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args;
+#clear()V
+#getId()I
+#setId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args;
+#unsetId()V
+#isSetId()Z
+#setIdIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGet_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args
@0.95.0
+#<init>()V
+#<init>(II)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;
+#clear()V
+#getId()I
+#setId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;
+#unsetId()V
+#isSetId()Z
+#setIdIsSet(Z)V
+#getNbRows()I
+#setNbRows(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;
+#unsetNbRows()V
+#isSetNbRows()Z
+#setNbRowsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift/generated/IOError;Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerGetList_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getStartRow()[B
+#bufferForStartRow()Ljava/nio/ByteBuffer;
+#setStartRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#setStartRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#unsetStartRow()V
+#isSetStartRow()Z
+#setStartRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result
@0.95.0
+#<init>()V
+#<init>(ILorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result;
+#clear()V
+#getSuccess()I
+#setSuccess(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpen_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getStartRow()[B
+#bufferForStartRow()Ljava/nio/ByteBuffer;
+#setStartRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#setStartRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#unsetStartRow()V
+#isSetStartRow()Z
+#setStartRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result
@0.95.0
+#<init>()V
+#<init>(ILorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result;
+#clear()V
+#getSuccess()I
+#setSuccess(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getStartAndPrefix()[B
+#bufferForStartAndPrefix()Ljava/nio/ByteBuffer;
+#setStartAndPrefix([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#setStartAndPrefix(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#unsetStartAndPrefix()V
+#isSetStartAndPrefix()Z
+#setStartAndPrefixIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result
@0.95.0
+#<init>()V
+#<init>(ILorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result;
+#clear()V
+#getSuccess()I
+#setSuccess(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithPrefix_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getScan()Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#setScan(Lorg/apache/hadoop/hbase/thrift/generated/TScan;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;
+#unsetScan()V
+#isSetScan()Z
+#setScanIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result
@0.95.0
+#<init>()V
+#<init>(ILorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result;
+#clear()V
+#getSuccess()I
+#setSuccess(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithScan_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getStartRow()[B
+#bufferForStartRow()Ljava/nio/ByteBuffer;
+#setStartRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#setStartRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#unsetStartRow()V
+#isSetStartRow()Z
+#setStartRowIsSet(Z)V
+#getStopRow()[B
+#bufferForStopRow()Ljava/nio/ByteBuffer;
+#setStopRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#setStopRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#unsetStopRow()V
+#isSetStopRow()Z
+#setStopRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result
@0.95.0
+#<init>()V
+#<init>(ILorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result;
+#clear()V
+#getSuccess()I
+#setSuccess(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStop_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#clear()V
+#getTableName()[B
+#bufferForTableName()Ljava/nio/ByteBuffer;
+#setTableName([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#setTableName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#unsetTableName()V
+#isSetTableName()Z
+#setTableNameIsSet(Z)V
+#getStartRow()[B
+#bufferForStartRow()Ljava/nio/ByteBuffer;
+#setStartRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#setStartRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#unsetStartRow()V
+#isSetStartRow()Z
+#setStartRowIsSet(Z)V
+#getStopRow()[B
+#bufferForStopRow()Ljava/nio/ByteBuffer;
+#setStopRow([B)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#setStopRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#unsetStopRow()V
+#isSetStopRow()Z
+#setStopRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_args

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result
@0.95.0
+#<init>()V
+#<init>(ILorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result;
+#clear()V
+#getSuccess()I
+#setSuccess(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase$scannerOpenWithStopTs_result

+###org/apache/hadoop/hbase/thrift/generated/Hbase
@0.95.0
+#<init>()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Hbase

+###org/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields

+###org/apache/hadoop/hbase/thrift/generated/IllegalArgument
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#clear()V
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;
+#unsetMessage()V
+#isSetMessage()Z
+#setMessageIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/IllegalArgument$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/IllegalArgument

+###org/apache/hadoop/hbase/thrift/generated/IOError$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/IOError$_Fields

+###org/apache/hadoop/hbase/thrift/generated/IOError
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#clear()V
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/IOError;
+#unsetMessage()V
+#isSetMessage()Z
+#setMessageIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/IOError;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/IOError$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/IOError

+###org/apache/hadoop/hbase/thrift/generated/Mutation$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Mutation$_Fields

+###org/apache/hadoop/hbase/thrift/generated/Mutation
@0.95.0
+#<init>()V
+#<init>(ZLjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Z)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/Mutation;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/Mutation;
+#clear()V
+#isIsDelete()Z
+#setIsDelete(Z)Lorg/apache/hadoop/hbase/thrift/generated/Mutation;
+#unsetIsDelete()V
+#isSetIsDelete()Z
+#setIsDeleteIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/Mutation;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Mutation;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getValue()[B
+#bufferForValue()Ljava/nio/ByteBuffer;
+#setValue([B)Lorg/apache/hadoop/hbase/thrift/generated/Mutation;
+#setValue(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/Mutation;
+#unsetValue()V
+#isSetValue()Z
+#setValueIsSet(Z)V
+#isWriteToWAL()Z
+#setWriteToWAL(Z)Lorg/apache/hadoop/hbase/thrift/generated/Mutation;
+#unsetWriteToWAL()V
+#isSetWriteToWAL()Z
+#setWriteToWALIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/Mutation;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/Mutation;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/Mutation$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/Mutation

+###org/apache/hadoop/hbase/thrift/generated/TCell$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TCell$_Fields

+###org/apache/hadoop/hbase/thrift/generated/TCell
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;J)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/TCell;
+#clear()V
+#getValue()[B
+#bufferForValue()Ljava/nio/ByteBuffer;
+#setValue([B)Lorg/apache/hadoop/hbase/thrift/generated/TCell;
+#setValue(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TCell;
+#unsetValue()V
+#isSetValue()Z
+#setValueIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/TCell;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/TCell$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TCell

+###org/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields

+###org/apache/hadoop/hbase/thrift/generated/TIncrement
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumn()[B
+#bufferForColumn()Ljava/nio/ByteBuffer;
+#setColumn([B)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#setColumn(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#unsetColumn()V
+#isSetColumn()Z
+#setColumnIsSet(Z)V
+#getAmmount()J
+#setAmmount(J)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;
+#unsetAmmount()V
+#isSetAmmount()Z
+#setAmmountIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/TIncrement$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TIncrement

+###org/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields

+###org/apache/hadoop/hbase/thrift/generated/TRegionInfo
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/nio/ByteBuffer;BLjava/nio/ByteBuffer;I)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#clear()V
+#getStartKey()[B
+#bufferForStartKey()Ljava/nio/ByteBuffer;
+#setStartKey([B)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#setStartKey(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#unsetStartKey()V
+#isSetStartKey()Z
+#setStartKeyIsSet(Z)V
+#getEndKey()[B
+#bufferForEndKey()Ljava/nio/ByteBuffer;
+#setEndKey([B)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#setEndKey(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#unsetEndKey()V
+#isSetEndKey()Z
+#setEndKeyIsSet(Z)V
+#getId()J
+#setId(J)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#unsetId()V
+#isSetId()Z
+#setIdIsSet(Z)V
+#getName()[B
+#bufferForName()Ljava/nio/ByteBuffer;
+#setName([B)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#setName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#unsetName()V
+#isSetName()Z
+#setNameIsSet(Z)V
+#getVersion()B
+#setVersion(B)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#unsetVersion()V
+#isSetVersion()Z
+#setVersionIsSet(Z)V
+#getServerName()[B
+#bufferForServerName()Ljava/nio/ByteBuffer;
+#setServerName([B)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#setServerName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#unsetServerName()V
+#isSetServerName()Z
+#setServerNameIsSet(Z)V
+#getPort()I
+#setPort(I)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#unsetPort()V
+#isSetPort()Z
+#setPortIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TRegionInfo

+###org/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields

+###org/apache/hadoop/hbase/thrift/generated/TRowResult
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnsSize()I
+#putToColumns(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TCell;)V
+#getColumns()Ljava/util/Map;
+#setColumns(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#<init>(Ljava/nio/ByteBuffer;)V
+#getSortedColumnsSize()I
+#getSortedColumnsIterator()Ljava/util/Iterator;
+#addToSortedColumns(Lorg/apache/hadoop/hbase/thrift/generated/TColumn;)V
+#getSortedColumns()Ljava/util/List;
+#setSortedColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/TRowResult;
+#unsetSortedColumns()V
+#isSetSortedColumns()Z
+#setSortedColumnsIsSet(Z)V
-#<init>(Ljava/nio/ByteBuffer;Ljava/util/Map;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TRowResult

+###org/apache/hadoop/hbase/thrift/generated/TScan$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TScan$_Fields

+###org/apache/hadoop/hbase/thrift/generated/TScan
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TScan;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#clear()V
+#getStartRow()[B
+#bufferForStartRow()Ljava/nio/ByteBuffer;
+#setStartRow([B)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#setStartRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetStartRow()V
+#isSetStartRow()Z
+#setStartRowIsSet(Z)V
+#getStopRow()[B
+#bufferForStopRow()Ljava/nio/ByteBuffer;
+#setStopRow([B)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#setStopRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetStopRow()V
+#isSetStopRow()Z
+#setStopRowIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Ljava/nio/ByteBuffer;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getCaching()I
+#setCaching(I)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetCaching()V
+#isSetCaching()Z
+#setCachingIsSet(Z)V
+#getFilterString()[B
+#bufferForFilterString()Ljava/nio/ByteBuffer;
+#setFilterString([B)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#setFilterString(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetFilterString()V
+#isSetFilterString()Z
+#setFilterStringIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/TScan;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/TScan;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/TScan$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.95.1-hadoop1
+#getBatchSize()I
+#setBatchSize(I)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetBatchSize()V
+#isSetBatchSize()Z
+#setBatchSizeIsSet(Z)V
@0.95.2-hadoop1
+#isSortColumns()Z
+#setSortColumns(Z)Lorg/apache/hadoop/hbase/thrift/generated/TScan;
+#unsetSortColumns()V
+#isSetSortColumns()Z
+#setSortColumnsIsSet(Z)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TScan

+###org/apache/hadoop/hbase/thrift/HbaseHandlerMetricsProxy
@0.95.0
+#newInstance(Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;Lorg/apache/hadoop/hbase/thrift/ThriftMetrics;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/thrift/generated/Hbase$Iface;
+#invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/HbaseHandlerMetricsProxy

+###org/apache/hadoop/hbase/thrift/HThreadedSelectorServerArgs
@0.95.0
+#<init>(Lorg/apache/thrift/transport/TNonblockingServerTransport;Lorg/apache/hadoop/conf/Configuration;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/HThreadedSelectorServerArgs

+###org/apache/hadoop/hbase/thrift/IncrementCoalescer
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/thrift/ThriftServerRunner$HBaseHandler;)V
+#queueIncrement(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)Z
+#queueIncrements(Ljava/util/List;)Z
+#canQueue()Z
+#getQueueSize()I
+#getMaxQueueSize()I
+#setMaxQueueSize(I)V
+#getPoolCompletedTaskCount()J
+#getPoolTaskCount()J
+#getPoolLargestPoolSize()I
+#getCorePoolSize()I
+#setCorePoolSize(I)V
+#getMaxPoolSize()I
+#setMaxPoolSize(I)V
+#getFailedIncrements()J
+#getSuccessfulCoalescings()J
+#getTotalIncrements()J
+#getCountersMapSize()J
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/IncrementCoalescer

+###org/apache/hadoop/hbase/thrift/IncrementCoalescerMBean
@0.95.0
+#getQueueSize()I
+#getMaxQueueSize()I
+#setMaxQueueSize(I)V
+#getPoolCompletedTaskCount()J
+#getPoolTaskCount()J
+#getPoolLargestPoolSize()I
+#getCorePoolSize()I
+#setCorePoolSize(I)V
+#getMaxPoolSize()I
+#setMaxPoolSize(I)V
+#getFailedIncrements()J
+#getSuccessfulCoalescings()J
+#getTotalIncrements()J
+#getCountersMapSize()J
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/IncrementCoalescerMBean

+###org/apache/hadoop/hbase/thrift/TBoundedThreadPoolServer$Args
@0.95.0
+#<init>(Lorg/apache/thrift/transport/TServerTransport;Lorg/apache/hadoop/conf/Configuration;)V
+#toString()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/TBoundedThreadPoolServer$Args

+###org/apache/hadoop/hbase/thrift/TBoundedThreadPoolServer
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/thrift/TBoundedThreadPoolServer$Args;Lorg/apache/hadoop/hbase/thrift/ThriftMetrics;)V
+#serve()V
+#stop()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/TBoundedThreadPoolServer

+###org/apache/hadoop/hbase/thrift/ThriftMetrics$ThriftServerType
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift/ThriftMetrics$ThriftServerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/ThriftMetrics$ThriftServerType;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/ThriftMetrics$ThriftServerType

+###org/apache/hadoop/hbase/thrift/ThriftMetrics
@0.95.0
+#getSource()Lorg/apache/hadoop/hbase/thrift/MetricsThriftServerSource;
+#setSource(Lorg/apache/hadoop/hbase/thrift/MetricsThriftServerSource;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/thrift/ThriftMetrics$ThriftServerType;)V
+#incTimeInQueue(J)V
+#setCallQueueLen(I)V
+#incNumRowKeysInBatchGet(I)V
+#incNumRowKeysInBatchMutate(I)V
+#incMethodTime(Ljava/lang/String;J)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/ThriftMetrics

+###org/apache/hadoop/hbase/thrift/ThriftServer
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#stop()V
+#main([Ljava/lang/String;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/ThriftServer

+###org/apache/hadoop/hbase/thrift/ThriftServerRunner$HBaseHandler
@0.95.0
+#getTable([B)Lorg/apache/hadoop/hbase/client/HTable;
+#getTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/client/HTable;
+#enableTable(Ljava/nio/ByteBuffer;)V
+#disableTable(Ljava/nio/ByteBuffer;)V
+#isTableEnabled(Ljava/nio/ByteBuffer;)Z
+#compact(Ljava/nio/ByteBuffer;)V
+#majorCompact(Ljava/nio/ByteBuffer;)V
+#getTableNames()Ljava/util/List;
+#getTableRegions(Ljava/nio/ByteBuffer;)Ljava/util/List;
+#get(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)Ljava/util/List;[deprecated]
+#getVer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ILjava/util/Map;)Ljava/util/List;[deprecated]
+#getVer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;[B[BILjava/util/Map;)Ljava/util/List;
+#getVerTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JILjava/util/Map;)Ljava/util/List;[deprecated]
+#getRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)Ljava/util/List;
+#getRowWithColumns(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#getRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)Ljava/util/List;
+#getRowWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#getRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#getRowsWithColumns(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;Ljava/util/Map;)Ljava/util/List;
+#getRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#getRowsWithColumnsTs(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/List;JLjava/util/Map;)Ljava/util/List;
+#deleteAll(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#deleteAllTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#deleteAllRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/Map;)V
+#deleteAllRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;JLjava/util/Map;)V
+#createTable(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#deleteTable(Ljava/nio/ByteBuffer;)V
+#mutateRow(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#mutateRowTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#mutateRows(Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)V
+#mutateRowsTs(Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)V
+#atomicIncrement(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)J[deprecated]
+#scannerClose(I)V
+#scannerGetList(II)Ljava/util/List;
+#scannerGet(I)Ljava/util/List;
+#scannerOpenWithScan(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TScan;Ljava/util/Map;)I
+#scannerOpen(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#scannerOpenWithStop(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#scannerOpenWithPrefix(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;Ljava/util/Map;)I
+#scannerOpenTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)I
+#scannerOpenWithStopTs(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/util/List;JLjava/util/Map;)I
+#getColumnDescriptors(Ljava/nio/ByteBuffer;)Ljava/util/Map;
+#getRowOrBefore(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/util/List;
+#getRegionInfo(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TRegionInfo;
+#increment(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)V
+#incrementRows(Ljava/util/List;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/ThriftServerRunner$HBaseHandler

+###org/apache/hadoop/hbase/thrift/ThriftServerRunner
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/thrift/ThriftServerRunner$HBaseHandler;)V
+#run()V
+#shutdown()V
+#registerFilters(Lorg/apache/hadoop/conf/Configuration;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/ThriftServerRunner

+###org/apache/hadoop/hbase/thrift/ThriftUtilities
@0.95.0
+#<init>()V
+#colDescFromThrift(Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;)Lorg/apache/hadoop/hbase/HColumnDescriptor;
+#colDescFromHbase(Lorg/apache/hadoop/hbase/HColumnDescriptor;)Lorg/apache/hadoop/hbase/thrift/generated/ColumnDescriptor;
+#cellFromHBase(Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/List;
+#cellFromHBase([Lorg/apache/hadoop/hbase/KeyValue;)Ljava/util/List;
+#rowResultFromHBase([Lorg/apache/hadoop/hbase/client/Result;)Ljava/util/List;
+#rowResultFromHBase(Lorg/apache/hadoop/hbase/client/Result;)Ljava/util/List;
+#incrementFromThrift(Lorg/apache/hadoop/hbase/thrift/generated/TIncrement;)Lorg/apache/hadoop/hbase/client/Increment;
@0.95.2-hadoop1
+#rowResultFromHBase([Lorg/apache/hadoop/hbase/client/Result;Z)Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/ThriftUtilities

+###org/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TColumn
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;
+#clear()V
+#getFamily()[B
+#bufferForFamily()Ljava/nio/ByteBuffer;
+#setFamily([B)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;
+#setFamily(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;
+#unsetFamily()V
+#isSetFamily()Z
+#setFamilyIsSet(Z)V
+#getQualifier()[B
+#bufferForQualifier()Ljava/nio/ByteBuffer;
+#setQualifier([B)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;
+#setQualifier(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;
+#unsetQualifier()V
+#isSetQualifier()Z
+#setQualifierIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumn$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TColumn

+###org/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TColumnIncrement
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;
+#clear()V
+#getFamily()[B
+#bufferForFamily()Ljava/nio/ByteBuffer;
+#setFamily([B)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;
+#setFamily(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;
+#unsetFamily()V
+#isSetFamily()Z
+#setFamilyIsSet(Z)V
+#getQualifier()[B
+#bufferForQualifier()Ljava/nio/ByteBuffer;
+#setQualifier([B)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;
+#setQualifier(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;
+#unsetQualifier()V
+#isSetQualifier()Z
+#setQualifierIsSet(Z)V
+#getAmount()J
+#setAmount(J)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;
+#unsetAmount()V
+#isSetAmount()Z
+#setAmountIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TColumnIncrement

+###org/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TColumnValue
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#clear()V
+#getFamily()[B
+#bufferForFamily()Ljava/nio/ByteBuffer;
+#setFamily([B)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#setFamily(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#unsetFamily()V
+#isSetFamily()Z
+#setFamilyIsSet(Z)V
+#getQualifier()[B
+#bufferForQualifier()Ljava/nio/ByteBuffer;
+#setQualifier([B)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#setQualifier(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#unsetQualifier()V
+#isSetQualifier()Z
+#setQualifierIsSet(Z)V
+#getValue()[B
+#bufferForValue()Ljava/nio/ByteBuffer;
+#setValue([B)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#setValue(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#unsetValue()V
+#isSetValue()Z
+#setValueIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TColumnValue

+###org/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TDelete
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getDeleteType()Lorg/apache/hadoop/hbase/thrift2/generated/TDeleteType;
+#setDeleteType(Lorg/apache/hadoop/hbase/thrift2/generated/TDeleteType;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#unsetDeleteType()V
+#isSetDeleteType()Z
+#setDeleteTypeIsSet(Z)V
+#isWriteToWal()Z
+#setWriteToWal(Z)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#unsetWriteToWal()V
+#isSetWriteToWal()Z
+#setWriteToWalIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#getDurability()Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;
+#setDurability(Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#unsetDurability()V
+#isSetDurability()Z
+#setDurabilityIsSet(Z)V
-#isWriteToWal()Z
-#setWriteToWal(Z)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
-#unsetWriteToWal()V
-#isSetWriteToWal()Z
-#setWriteToWalIsSet(Z)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TDelete

+###org/apache/hadoop/hbase/thrift2/generated/TDeleteType
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TDeleteType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TDeleteType;
+#getValue()I
+#findByValue(I)Lorg/apache/hadoop/hbase/thrift2/generated/TDeleteType;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TDeleteType

+###org/apache/hadoop/hbase/thrift2/generated/TGet$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TGet$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TGet
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#getTimeRange()Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;
+#setTimeRange(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#unsetTimeRange()V
+#isSetTimeRange()Z
+#setTimeRangeIsSet(Z)V
+#getMaxVersions()I
+#setMaxVersions(I)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#unsetMaxVersions()V
+#isSetMaxVersions()Z
+#setMaxVersionsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TGet$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#getFilterString()[B
+#bufferForFilterString()Ljava/nio/ByteBuffer;
+#setFilterString([B)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#setFilterString(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#unsetFilterString()V
+#isSetFilterString()Z
+#setFilterStringIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TGet

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$checkAndDelete_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Z
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$checkAndDelete_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$checkAndPut_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Z
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$checkAndPut_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$closeScanner_call
@0.95.0
+#<init>(ILorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$closeScanner_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$deleteMultiple_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$deleteMultiple_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$deleteSingle_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$deleteSingle_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$exists_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Z
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$exists_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$Factory
@0.95.0
+#<init>(Lorg/apache/thrift/async/TAsyncClientManager;Lorg/apache/thrift/protocol/TProtocolFactory;)V
+#getAsyncClient(Lorg/apache/thrift/transport/TNonblockingTransport;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient;
+#getAsyncClient(Lorg/apache/thrift/transport/TNonblockingTransport;)Lorg/apache/thrift/async/TAsyncClient;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$Factory

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$get_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$get_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$getMultiple_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$getMultiple_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$getScannerRows_call
@0.95.0
+#<init>(IILorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$getScannerRows_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$increment_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$increment_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$openScanner_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$openScanner_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$put_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$put_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$putMultiple_call
@0.95.0
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$putMultiple_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient
@0.95.0
+#<init>(Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/async/TAsyncClientManager;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#exists(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#get(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#put(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#checkAndPut(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#putMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteSingle(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#checkAndDelete(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#increment(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#openScanner(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getScannerRows(IILorg/apache/thrift/async/AsyncMethodCallback;)V
+#closeScanner(ILorg/apache/thrift/async/AsyncMethodCallback;)V
@0.95.2-hadoop1
+#mutateRow(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getScannerResults(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;ILorg/apache/thrift/async/AsyncMethodCallback;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncIface
@0.95.0
+#exists(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#get(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#put(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#checkAndPut(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#putMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteSingle(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#deleteMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#checkAndDelete(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#increment(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#openScanner(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getScannerRows(IILorg/apache/thrift/async/AsyncMethodCallback;)V
+#closeScanner(ILorg/apache/thrift/async/AsyncMethodCallback;)V
@0.95.2-hadoop1
+#mutateRow(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;Lorg/apache/thrift/async/AsyncMethodCallback;)V
+#getScannerResults(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;ILorg/apache/thrift/async/AsyncMethodCallback;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncIface

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getFamily()[B
+#bufferForFamily()Ljava/nio/ByteBuffer;
+#setFamily([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#setFamily(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#unsetFamily()V
+#isSetFamily()Z
+#setFamilyIsSet(Z)V
+#getQualifier()[B
+#bufferForQualifier()Ljava/nio/ByteBuffer;
+#setQualifier([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#setQualifier(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#unsetQualifier()V
+#isSetQualifier()Z
+#setQualifierIsSet(Z)V
+#getValue()[B
+#bufferForValue()Ljava/nio/ByteBuffer;
+#setValue([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#setValue(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#unsetValue()V
+#isSetValue()Z
+#setValueIsSet(Z)V
+#getDeleteSingle()Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#setDeleteSingle(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#unsetDeleteSingle()V
+#isSetDeleteSingle()Z
+#setDeleteSingleIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result
@0.95.0
+#<init>()V
+#<init>(ZLorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result;
+#clear()V
+#isSuccess()Z
+#setSuccess(Z)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getFamily()[B
+#bufferForFamily()Ljava/nio/ByteBuffer;
+#setFamily([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#setFamily(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#unsetFamily()V
+#isSetFamily()Z
+#setFamilyIsSet(Z)V
+#getQualifier()[B
+#bufferForQualifier()Ljava/nio/ByteBuffer;
+#setQualifier([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#setQualifier(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#unsetQualifier()V
+#isSetQualifier()Z
+#setQualifierIsSet(Z)V
+#getValue()[B
+#bufferForValue()Ljava/nio/ByteBuffer;
+#setValue([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#setValue(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#unsetValue()V
+#isSetValue()Z
+#setValueIsSet(Z)V
+#getPut()Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#setPut(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#unsetPut()V
+#isSetPut()Z
+#setPutIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result
@0.95.0
+#<init>()V
+#<init>(ZLorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result;
+#clear()V
+#isSuccess()Z
+#setSuccess(Z)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Client$Factory
@0.95.0
+#<init>()V
+#getClient(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Client;
+#getClient(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Client;
+#getClient(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TServiceClient;
+#getClient(Lorg/apache/thrift/protocol/TProtocol;)Lorg/apache/thrift/TServiceClient;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Client$Factory

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Client
@0.95.0
+#<init>(Lorg/apache/thrift/protocol/TProtocol;)V
+#<init>(Lorg/apache/thrift/protocol/TProtocol;Lorg/apache/thrift/protocol/TProtocol;)V
+#exists(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Z
+#send_exists(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)V
+#recv_exists()Z
+#get(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#send_get(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)V
+#recv_get()Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#getMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)Ljava/util/List;
+#send_getMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#recv_getMultiple()Ljava/util/List;
+#put(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#send_put(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#recv_put()V
+#checkAndPut(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Z
+#send_checkAndPut(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#recv_checkAndPut()Z
+#putMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#send_putMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#recv_putMultiple()V
+#deleteSingle(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#send_deleteSingle(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#recv_deleteSingle()V
+#deleteMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)Ljava/util/List;
+#send_deleteMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#recv_deleteMultiple()Ljava/util/List;
+#checkAndDelete(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Z
+#send_checkAndDelete(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#recv_checkAndDelete()Z
+#increment(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#send_increment(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)V
+#recv_increment()Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#openScanner(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)I
+#send_openScanner(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)V
+#recv_openScanner()I
+#getScannerRows(II)Ljava/util/List;
+#send_getScannerRows(II)V
+#recv_getScannerRows()Ljava/util/List;
+#closeScanner(I)V
+#send_closeScanner(I)V
+#recv_closeScanner()V
@0.95.2-hadoop1
+#mutateRow(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)V
+#send_mutateRow(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)V
+#recv_mutateRow()V
+#getScannerResults(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;I)Ljava/util/List;
+#send_getScannerResults(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;I)V
+#recv_getScannerResults()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Client

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args
@0.95.0
+#<init>()V
+#<init>(I)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args;
+#clear()V
+#getScannerId()I
+#setScannerId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args;
+#unsetScannerId()V
+#isSetScannerId()Z
+#setScannerIdIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getDeletesSize()I
+#getDeletesIterator()Ljava/util/Iterator;
+#addToDeletes(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#getDeletes()Ljava/util/List;
+#setDeletes(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;
+#unsetDeletes()V
+#isSetDeletes()Z
+#setDeletesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getDeleteSingle()Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#setDeleteSingle(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;
+#unsetDeleteSingle()V
+#isSetDeleteSingle()Z
+#setDeleteSingleIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getGet()Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#setGet(Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;
+#unsetGet()V
+#isSetGet()Z
+#setGetIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result
@0.95.0
+#<init>()V
+#<init>(ZLorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result;
+#clear()V
+#isSuccess()Z
+#setSuccess(Z)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getGet()Lorg/apache/hadoop/hbase/thrift2/generated/TGet;
+#setGet(Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;
+#unsetGet()V
+#isSetGet()Z
+#setGetIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result;
+#clear()V
+#getSuccess()Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#setSuccess(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getGetsSize()I
+#getGetsIterator()Ljava/util/Iterator;
+#addToGets(Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)V
+#getGets()Ljava/util/List;
+#setGets(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;
+#unsetGets()V
+#isSetGets()Z
+#setGetsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args
@0.95.0
+#<init>()V
+#<init>(II)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;
+#clear()V
+#getScannerId()I
+#setScannerId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;
+#unsetScannerId()V
+#isSetScannerId()Z
+#setScannerIdIsSet(Z)V
+#getNumRows()I
+#setNumRows(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;
+#unsetNumRows()V
+#isSetNumRows()Z
+#setNumRowsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#getIa()Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;
+#setIa(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;
+#unsetIa()V
+#isSetIa()Z
+#setIaIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface
@0.95.0
+#exists(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Z
+#get(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#getMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)Ljava/util/List;
+#put(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#checkAndPut(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Z
+#putMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#deleteSingle(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#deleteMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)Ljava/util/List;
+#checkAndDelete(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Z
+#increment(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#openScanner(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)I
+#getScannerRows(II)Ljava/util/List;
+#closeScanner(I)V
@0.95.2-hadoop1
+#mutateRow(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)V
+#getScannerResults(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;I)Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getIncrement()Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#setIncrement(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;
+#unsetIncrement()V
+#isSetIncrement()Z
+#setIncrementIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result;
+#clear()V
+#getSuccess()Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#setSuccess(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getScan()Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#setScan(Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;
+#unsetScan()V
+#isSetScan()Z
+#setScanIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result
@0.95.0
+#<init>()V
+#<init>(ILorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result;
+#clear()V
+#getSuccess()I
+#setSuccess(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$checkAndDelete
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndDelete_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$checkAndDelete

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$checkAndPut
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$checkAndPut_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$checkAndPut

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$closeScanner
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$closeScanner_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$closeScanner

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$deleteMultiple
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteMultiple_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$deleteMultiple

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$deleteSingle
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$deleteSingle_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$deleteSingle

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$exists
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$exists_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$exists

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$get
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$get_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$get

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$getMultiple
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getMultiple_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$getMultiple

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$getScannerRows
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerRows_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$getScannerRows

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$increment
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$increment_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$increment

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$openScanner
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$openScanner_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$openScanner

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$put
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$put

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$putMultiple
@0.95.0
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$putMultiple

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getPut()Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#setPut(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;
+#unsetPut()V
+#isSetPut()Z
+#setPutIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$put_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getPutsSize()I
+#getPutsIterator()Ljava/util/Iterator;
+#addToPuts(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#getPuts()Ljava/util/List;
+#setPuts(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;
+#unsetPuts()V
+#isSetPuts()Z
+#setPutsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$putMultiple_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService
@0.95.0
+#<init>()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService

+###org/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TIllegalArgument
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;
+#clear()V
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;
+#unsetMessage()V
+#isSetMessage()Z
+#setMessageIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIllegalArgument$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TIllegalArgument

+###org/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TIncrement
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnIncrement;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#isWriteToWal()Z
+#setWriteToWal(Z)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#unsetWriteToWal()V
+#isSetWriteToWal()Z
+#setWriteToWalIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#getDurability()Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;
+#setDurability(Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
+#unsetDurability()V
+#isSetDurability()Z
+#setDurabilityIsSet(Z)V
-#isWriteToWal()Z
-#setWriteToWal(Z)Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;
-#unsetWriteToWal()V
-#isSetWriteToWal()Z
-#setWriteToWalIsSet(Z)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TIncrement

+###org/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TIOError
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#clear()V
+#getMessage()Ljava/lang/String;
+#setMessage(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#unsetMessage()V
+#isSetMessage()Z
+#setMessageIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TIOError$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TIOError

+###org/apache/hadoop/hbase/thrift2/generated/TPut$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TPut$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TPut
@0.95.0
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnValuesSize()I
+#getColumnValuesIterator()Ljava/util/Iterator;
+#addToColumnValues(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;)V
+#getColumnValues()Ljava/util/List;
+#setColumnValues(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#unsetColumnValues()V
+#isSetColumnValues()Z
+#setColumnValuesIsSet(Z)V
+#getTimestamp()J
+#setTimestamp(J)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#unsetTimestamp()V
+#isSetTimestamp()Z
+#setTimestampIsSet(Z)V
+#isWriteToWal()Z
+#setWriteToWal(Z)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#unsetWriteToWal()V
+#isSetWriteToWal()Z
+#setWriteToWalIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TPut$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
+#getDurability()Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;
+#setDurability(Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#unsetDurability()V
+#isSetDurability()Z
+#setDurabilityIsSet(Z)V
-#isWriteToWal()Z
-#setWriteToWal(Z)Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
-#unsetWriteToWal()V
-#isSetWriteToWal()Z
-#setWriteToWalIsSet(Z)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TPut

+###org/apache/hadoop/hbase/thrift2/generated/TResult$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TResult$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TResult
@0.95.0
+#<init>()V
+#<init>(Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getColumnValuesSize()I
+#getColumnValuesIterator()Ljava/util/Iterator;
+#addToColumnValues(Lorg/apache/hadoop/hbase/thrift2/generated/TColumnValue;)V
+#getColumnValues()Ljava/util/List;
+#setColumnValues(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#unsetColumnValues()V
+#isSetColumnValues()Z
+#setColumnValuesIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TResult$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TResult

+###org/apache/hadoop/hbase/thrift2/generated/TScan$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TScan$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TScan
@0.95.0
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#clear()V
+#getStartRow()[B
+#bufferForStartRow()Ljava/nio/ByteBuffer;
+#setStartRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#setStartRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetStartRow()V
+#isSetStartRow()Z
+#setStartRowIsSet(Z)V
+#getStopRow()[B
+#bufferForStopRow()Ljava/nio/ByteBuffer;
+#setStopRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#setStopRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetStopRow()V
+#isSetStopRow()Z
+#setStopRowIsSet(Z)V
+#getColumnsSize()I
+#getColumnsIterator()Ljava/util/Iterator;
+#addToColumns(Lorg/apache/hadoop/hbase/thrift2/generated/TColumn;)V
+#getColumns()Ljava/util/List;
+#setColumns(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetColumns()V
+#isSetColumns()Z
+#setColumnsIsSet(Z)V
+#getCaching()I
+#setCaching(I)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetCaching()V
+#isSetCaching()Z
+#setCachingIsSet(Z)V
+#getMaxVersions()I
+#setMaxVersions(I)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetMaxVersions()V
+#isSetMaxVersions()Z
+#setMaxVersionsIsSet(Z)V
+#getTimeRange()Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;
+#setTimeRange(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetTimeRange()V
+#isSetTimeRange()Z
+#setTimeRangeIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TScan$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#getFilterString()[B
+#bufferForFilterString()Ljava/nio/ByteBuffer;
+#setFilterString([B)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#setFilterString(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetFilterString()V
+#isSetFilterString()Z
+#setFilterStringIsSet(Z)V
+#getBatchSize()I
+#setBatchSize(I)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetBatchSize()V
+#isSetBatchSize()Z
+#setBatchSizeIsSet(Z)V
+#getAttributesSize()I
+#putToAttributes(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#getAttributes()Ljava/util/Map;
+#setAttributes(Ljava/util/Map;)Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#unsetAttributes()V
+#isSetAttributes()Z
+#setAttributesIsSet(Z)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TScan

+###org/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TTimeRange
@0.95.0
+#<init>()V
+#<init>(JJ)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;
+#clear()V
+#getMinStamp()J
+#setMinStamp(J)Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;
+#unsetMinStamp()V
+#isSetMinStamp()Z
+#setMinStampIsSet(Z)V
+#getMaxStamp()J
+#setMaxStamp(J)Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;
+#unsetMaxStamp()V
+#isSetMaxStamp()Z
+#setMaxStampIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TTimeRange$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TTimeRange

+###org/apache/hadoop/hbase/thrift2/ThriftHBaseServiceHandler
@0.95.0
+#newInstance(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/thrift/ThriftMetrics;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;
+#exists(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Z
+#get(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#getMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)Ljava/util/List;
+#put(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#checkAndPut(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Z
+#putMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#deleteSingle(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#deleteMultiple(Ljava/nio/ByteBuffer;Ljava/util/List;)Ljava/util/List;
+#checkAndDelete(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Z
+#increment(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#openScanner(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)I
+#getScannerRows(II)Ljava/util/List;
+#closeScanner(I)V
@0.95.2-hadoop1
+#getScannerResults(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;I)Ljava/util/List;
+#mutateRow(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/ThriftHBaseServiceHandler

+###org/apache/hadoop/hbase/thrift2/ThriftServer
@0.95.0
+#<init>()V
+#main([Ljava/lang/String;)V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/ThriftServer

+###org/apache/hadoop/hbase/thrift2/ThriftUtilities
@0.95.0
+#getFromThrift(Lorg/apache/hadoop/hbase/thrift2/generated/TGet;)Lorg/apache/hadoop/hbase/client/Get;
+#getsFromThrift(Ljava/util/List;)Ljava/util/List;
+#resultFromHBase(Lorg/apache/hadoop/hbase/client/Result;)Lorg/apache/hadoop/hbase/thrift2/generated/TResult;
+#resultsFromHBase([Lorg/apache/hadoop/hbase/client/Result;)Ljava/util/List;
+#putFromThrift(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Lorg/apache/hadoop/hbase/client/Put;
+#putsFromThrift(Ljava/util/List;)Ljava/util/List;
+#deleteFromThrift(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Lorg/apache/hadoop/hbase/client/Delete;
+#deletesFromThrift(Ljava/util/List;)Ljava/util/List;
+#deleteFromHBase(Lorg/apache/hadoop/hbase/client/Delete;)Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#scanFromThrift(Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)Lorg/apache/hadoop/hbase/client/Scan;
+#incrementFromThrift(Lorg/apache/hadoop/hbase/thrift2/generated/TIncrement;)Lorg/apache/hadoop/hbase/client/Increment;
@0.95.2-hadoop1
+#rowMutationsFromThrift(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)Lorg/apache/hadoop/hbase/client/RowMutations;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/ThriftUtilities

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl$ImplData
@0.95.0
+#<init>()V
+#setMaster(Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getMaster()Lorg/apache/hadoop/hbase/master/HMaster;
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl$ImplData

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl$Intf
@0.95.0
+#renderNoFlush(Ljava/io/Writer;)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl$Intf

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;)V
+#<init>()V
+#getImplData()Lorg/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl$ImplData;
+#constructImpl(Ljava/lang/Class;)Lorg/jamon/AbstractTemplateImpl;
+#makeRenderer(Lorg/apache/hadoop/hbase/master/HMaster;)Lorg/jamon/Renderer;
+#render(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
+#renderNoFlush(Ljava/io/Writer;Lorg/apache/hadoop/hbase/master/HMaster;)V
+#getImplData()Lorg/jamon/AbstractTemplateProxy$ImplData;
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl

+###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmplImpl
@0.95.0
+#<init>(Lorg/jamon/TemplateManager;Lorg/apache/hadoop/hbase/tmpl/master/BackupMasterListTmpl$ImplData;)V
+#renderNoFlush(Ljava/io/Writer;)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/tmpl/master/BackupMasterListTmplImpl

+###org/apache/hadoop/hbase/trace/HBaseLocalFileSpanReceiver
@0.95.0
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#close()V
+#receiveSpan(Lorg/cloudera/htrace/Span;)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/trace/HBaseLocalFileSpanReceiver

+###org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServerArg
@0.95.0
+#<init>()V
+#parse(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#main([Ljava/lang/String;)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServerArg

+###org/apache/hadoop/hbase/client/AsyncRegionReplicaReplayRetryingCaller
@3.0.0-alpha-1
+#<init>(Lorg/apache/hbase/thirdparty/io/netty/util/HashedWheelTimer;Lorg/apache/hadoop/hbase/client/AsyncClusterConnectionImpl;IJLorg/apache/hadoop/hbase/TableName;[B[BLjava/util/List;I)V
@3.0.0-alpha-3
-###org/apache/hadoop/hbase/client/AsyncRegionReplicaReplayRetryingCaller

+###org/apache/hadoop/hbase/mapreduce/LabelExpander
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#createVisibilityTags(Ljava/lang/String;)Ljava/util/List;
+#createKVFromCellVisibilityExpr(II[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BIILjava/lang/String;)Lorg/apache/hadoop/hbase/KeyValue;
@0.98.4-hadoop1
-#createVisibilityTags(Ljava/lang/String;)Ljava/util/List;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/mapreduce/LabelExpander

+###org/apache/hadoop/hbase/security/visibility/VisibilityLabelsManager
@0.98.0-hadoop1
+#get(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsManager;
+#get()Lorg/apache/hadoop/hbase/security/visibility/VisibilityLabelsManager;
+#refreshLabelsCache([B)V
+#refreshUserAuthsCache([B)V
+#getLabelOrdinal(Ljava/lang/String;)I
+#getLabel(I)Ljava/lang/String;
+#getLabelsCount()I
+#getAuths(Ljava/lang/String;)Ljava/util/List;
+#writeToZookeeper([BZ)V
@0.98.5-hadoop1
+#getAuthsAsOrdinals(Ljava/lang/String;)Ljava/util/Set;
@0.98.6-hadoop1
-###org/apache/hadoop/hbase/security/visibility/VisibilityLabelsManager

+###org/apache/hadoop/hbase/thrift/generated/TColumn$_Fields
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TColumn$_Fields

+###org/apache/hadoop/hbase/thrift/generated/TColumn
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift/generated/TCell;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift/generated/TColumn;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift/generated/TColumn;
+#clear()V
+#getColumnName()[B
+#bufferForColumnName()Ljava/nio/ByteBuffer;
+#setColumnName([B)Lorg/apache/hadoop/hbase/thrift/generated/TColumn;
+#setColumnName(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift/generated/TColumn;
+#unsetColumnName()V
+#isSetColumnName()Z
+#setColumnNameIsSet(Z)V
+#getCell()Lorg/apache/hadoop/hbase/thrift/generated/TCell;
+#setCell(Lorg/apache/hadoop/hbase/thrift/generated/TCell;)Lorg/apache/hadoop/hbase/thrift/generated/TColumn;
+#unsetCell()V
+#isSetCell()Z
+#setCellIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift/generated/TColumn;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift/generated/TColumn;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift/generated/TColumn$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/generated/TColumn

+###org/apache/hadoop/hbase/thrift/ThriftServerRunner$ResultScannerWrapper
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/client/ResultScanner;Z)V
+#getScanner()Lorg/apache/hadoop/hbase/client/ResultScanner;
+#isColumnSorted()Z
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift/ThriftServerRunner$ResultScannerWrapper

+###org/apache/hadoop/hbase/thrift2/generated/TDurability
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;
+#getValue()I
+#findByValue(I)Lorg/apache/hadoop/hbase/thrift2/generated/TDurability;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TDurability

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$getScannerResults_call
@0.95.2-hadoop1
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;ILorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()Ljava/util/List;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$getScannerResults_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$mutateRow_call
@0.95.2-hadoop1
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;Lorg/apache/thrift/async/AsyncMethodCallback;Lorg/apache/thrift/async/TAsyncClient;Lorg/apache/thrift/protocol/TProtocolFactory;Lorg/apache/thrift/transport/TNonblockingTransport;)V
+#write_args(Lorg/apache/thrift/protocol/TProtocol;)V
+#getResult()V
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$AsyncClient$mutateRow_call

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TScan;I)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getScan()Lorg/apache/hadoop/hbase/thrift2/generated/TScan;
+#setScan(Lorg/apache/hadoop/hbase/thrift2/generated/TScan;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;
+#unsetScan()V
+#isSetScan()Z
+#setScanIsSet(Z)V
+#getNumRows()I
+#setNumRows(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;
+#unsetNumRows()V
+#isSetNumRows()Z
+#setNumRowsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/util/List;Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result;
+#clear()V
+#getSuccessSize()I
+#getSuccessIterator()Ljava/util/Iterator;
+#addToSuccess(Lorg/apache/hadoop/hbase/thrift2/generated/TResult;)V
+#getSuccess()Ljava/util/List;
+#setSuccess(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result;
+#unsetSuccess()V
+#isSetSuccess()Z
+#setSuccessIsSet(Z)V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;
+#clear()V
+#getTable()[B
+#bufferForTable()Ljava/nio/ByteBuffer;
+#setTable([B)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;
+#setTable(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;
+#unsetTable()V
+#isSetTable()Z
+#setTableIsSet(Z)V
+#getRowMutations()Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;
+#setRowMutations(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;
+#unsetRowMutations()V
+#isSetRowMutations()Z
+#setRowMutationsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result
@0.95.2-hadoop1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result;
+#clear()V
+#getIo()Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;
+#setIo(Lorg/apache/hadoop/hbase/thrift2/generated/TIOError;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result;
+#unsetIo()V
+#isSetIo()Z
+#setIoIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$getScannerResults
@0.95.2-hadoop1
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$getScannerResults_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$getScannerResults

+###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$mutateRow
@0.95.2-hadoop1
+#<init>()V
+#getEmptyArgsInstance()Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;
+#getResult(Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$Iface;Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_args;)Lorg/apache/hadoop/hbase/thrift2/generated/THBaseService$mutateRow_result;
+#getEmptyArgsInstance()Lorg/apache/thrift/TBase;
+#getResult(Ljava/lang/Object;Lorg/apache/thrift/TBase;)Lorg/apache/thrift/TBase;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/THBaseService$Processor$mutateRow

+###org/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TMutation
@0.95.2-hadoop1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields;Ljava/lang/Object;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TMutation;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TMutation;
+#put(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)Lorg/apache/hadoop/hbase/thrift2/generated/TMutation;
+#deleteSingle(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)Lorg/apache/hadoop/hbase/thrift2/generated/TMutation;
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TMutation$_Fields;
+#getPut()Lorg/apache/hadoop/hbase/thrift2/generated/TPut;
+#setPut(Lorg/apache/hadoop/hbase/thrift2/generated/TPut;)V
+#getDeleteSingle()Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;
+#setDeleteSingle(Lorg/apache/hadoop/hbase/thrift2/generated/TDelete;)V
+#isSetPut()Z
+#isSetDeleteSingle()Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TMutation;)Z
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TMutation;)I
+#hashCode()I
+#deepCopy()Lorg/apache/thrift/TBase;
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TMutation

+###org/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;
+#findByThriftId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;
+#findByThriftIdOrThrow(I)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;
+#findByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;
+#getThriftFieldId()S
+#getFieldName()Ljava/lang/String;
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields

+###org/apache/hadoop/hbase/thrift2/generated/TRowMutations
@0.95.2-hadoop1
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;Ljava/util/List;)V
+#<init>(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)V
+#deepCopy()Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;
+#clear()V
+#getRow()[B
+#bufferForRow()Ljava/nio/ByteBuffer;
+#setRow([B)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;
+#setRow(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;
+#unsetRow()V
+#isSetRow()Z
+#setRowIsSet(Z)V
+#getMutationsSize()I
+#getMutationsIterator()Ljava/util/Iterator;
+#addToMutations(Lorg/apache/hadoop/hbase/thrift2/generated/TMutation;)V
+#getMutations()Ljava/util/List;
+#setMutations(Ljava/util/List;)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;
+#unsetMutations()V
+#isSetMutations()Z
+#setMutationsIsSet(Z)V
+#setFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;)Ljava/lang/Object;
+#isSet(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;)Z
+#equals(Ljava/lang/Object;)Z
+#equals(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations;)I
+#fieldForId(I)Lorg/apache/hadoop/hbase/thrift2/generated/TRowMutations$_Fields;
+#read(Lorg/apache/thrift/protocol/TProtocol;)V
+#write(Lorg/apache/thrift/protocol/TProtocol;)V
+#toString()Ljava/lang/String;
+#validate()V
+#deepCopy()Lorg/apache/thrift/TBase;
+#setFieldValue(Lorg/apache/thrift/TFieldIdEnum;Ljava/lang/Object;)V
+#getFieldValue(Lorg/apache/thrift/TFieldIdEnum;)Ljava/lang/Object;
+#isSet(Lorg/apache/thrift/TFieldIdEnum;)Z
+#fieldForId(I)Lorg/apache/thrift/TFieldIdEnum;
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/thrift2/generated/TRowMutations

+###org/apache/hadoop/hbase/zookeeper/SnapshotCleanupTracker
@1.5.0
+#<init>(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;Lorg/apache/hadoop/hbase/Abortable;)V
+#isSnapshotCleanupEnabled()Z
+#setSnapshotCleanupEnabled(Z)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/zookeeper/SnapshotCleanupTracker

+###org/apache/hadoop/hbase/client/coprocessor/BigDecimalColumnInterpreter
@0.95.0
+#<init>()V
+#getValue([B[BLorg/apache/hadoop/hbase/KeyValue;)Ljava/math/BigDecimal;
+#add(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#compare(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)I
+#getMaxValue()Ljava/math/BigDecimal;
+#increment(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#multiply(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getMinValue()Ljava/math/BigDecimal;
+#divideForAvg(Ljava/math/BigDecimal;Ljava/lang/Long;)D
+#castToReturnType(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#castToCellType(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
+#getRequestData()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$EmptyMsg;
+#initialize(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$EmptyMsg;)V
+#getProtoForCellType(Ljava/math/BigDecimal;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$BigDecimalMsg;
+#getProtoForPromotedType(Ljava/math/BigDecimal;)Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$BigDecimalMsg;
+#getPromotedValueFromProto(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$BigDecimalMsg;)Ljava/math/BigDecimal;
+#getCellValueFromProto(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$BigDecimalMsg;)Ljava/math/BigDecimal;
+#castToCellType(Ljava/lang/Object;)Ljava/lang/Object;
+#getPromotedValueFromProto(Lcom/google/protobuf/Message;)Ljava/lang/Object;
+#getProtoForPromotedType(Ljava/lang/Object;)Lcom/google/protobuf/Message;
+#getCellValueFromProto(Lcom/google/protobuf/Message;)Ljava/lang/Object;
+#getProtoForCellType(Ljava/lang/Object;)Lcom/google/protobuf/Message;
+#initialize(Lcom/google/protobuf/Message;)V
+#getRequestData()Lcom/google/protobuf/Message;
+#divideForAvg(Ljava/lang/Object;Ljava/lang/Long;)D
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#castToReturnType(Ljava/lang/Object;)Ljava/lang/Object;
+#increment(Ljava/lang/Object;)Ljava/lang/Object;
+#multiply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getMinValue()Ljava/lang/Object;
+#getMaxValue()Ljava/lang/Object;
+#add(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#getValue([B[BLorg/apache/hadoop/hbase/KeyValue;)Ljava/lang/Object;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/client/coprocessor/BigDecimalColumnInterpreter

+###org/apache/hadoop/hbase/coprocessor/CoprocessorClassLoader
@0.95.0
+#<init>(Ljava/util/List;Ljava/lang/ClassLoader;)V
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/coprocessor/CoprocessorClassLoader

+###org/apache/hadoop/hbase/ipc/HBaseServer$Call
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/ipc/HBaseServer;ILjava/lang/reflect/Method;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;Lorg/apache/hadoop/hbase/ipc/HBaseServer$Connection;Lorg/apache/hadoop/hbase/ipc/HBaseServer$Responder;JLorg/cloudera/htrace/TraceInfo;)V
+#toString()Ljava/lang/String;
+#endDelay(Ljava/lang/Object;)V
+#endDelay()V
+#startDelay(Z)V
+#endDelayThrowing(Ljava/lang/Throwable;)V
+#isDelayed()Z
+#isReturnValueDelayed()Z
+#throwExceptionIfCallerDisconnected()V
+#getSize()J
+#sendResponseIfReady()V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/ipc/HBaseServer$Call

+###org/apache/hadoop/hbase/ipc/HBaseServer$CallQueueTooBigException
@0.95.0
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/ipc/HBaseServer$CallQueueTooBigException

+###org/apache/hadoop/hbase/ipc/HBaseServer$Connection
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/ipc/HBaseServer;Ljava/nio/channels/SocketChannel;J)V
+#toString()Ljava/lang/String;
+#getHostAddress()Ljava/lang/String;
+#getHostInetAddress()Ljava/net/InetAddress;
+#getRemotePort()I
+#setLastContact(J)V
+#getLastContact()J
+#readAndProcess()I
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/ipc/HBaseServer$Connection

+###org/apache/hadoop/hbase/ipc/HBaseServer$Responder
@0.95.0
+#run()V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/ipc/HBaseServer$Responder

+###org/apache/hadoop/hbase/ipc/HBaseServer
@0.95.0
+#get()Lorg/apache/hadoop/hbase/ipc/RpcServer;
+#getRemoteIp()Ljava/net/InetAddress;
+#getRemoteAddress()Ljava/lang/String;
+#bind(Ljava/net/ServerSocket;Ljava/net/InetSocketAddress;I)V
+#setQosFunction(Lcom/google/common/base/Function;)V
+#setSocketSendBufSize(I)V
+#start()V
+#openServer()V
+#startThreads()V
+#getSecretManager()Lorg/apache/hadoop/security/token/SecretManager;
+#setSecretManager(Lorg/apache/hadoop/security/token/SecretManager;)V
+#stop()V
+#join()V
+#getListenerAddress()Ljava/net/InetSocketAddress;
+#setErrorHandler(Lorg/apache/hadoop/hbase/ipc/HBaseRPCErrorHandler;)V
+#getMetrics()Lorg/apache/hadoop/hbase/ipc/MetricsHBaseServer;
+#authorize(Lorg/apache/hadoop/security/UserGroupInformation;Lorg/apache/hadoop/hbase/protobuf/generated/RPCProtos$ConnectionHeader;Ljava/net/InetAddress;)V
+#getCurrentCall()Lorg/apache/hadoop/hbase/ipc/RpcCallContext;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/ipc/HBaseServer

+###org/apache/hadoop/hbase/ipc/HBaseServerRPC
@0.95.0
+#getServer(Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Class;Ljava/lang/String;IIIZLorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/hbase/ipc/RpcServer;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/ipc/HBaseServerRPC

+###org/apache/hadoop/hbase/ipc/ProtobufRpcServerEngine$Server
@0.95.0
+#<init>(Ljava/lang/Object;[Ljava/lang/Class;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;IIIZI)V
+#startThreads()V
+#call(Ljava/lang/Class;Ljava/lang/reflect/Method;Lcom/google/protobuf/Message;Lorg/apache/hadoop/hbase/CellScanner;JLorg/apache/hadoop/hbase/monitoring/MonitoredRPCHandler;)Lorg/apache/hadoop/hbase/util/Pair;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/ipc/ProtobufRpcServerEngine$Server

+###org/apache/hadoop/hbase/metrics/file/TimeStampingFileContext
@0.95.0
+#<init>()V
+#init(Ljava/lang/String;Lorg/apache/hadoop/metrics/ContextFactory;)V
+#startMonitoring()V
+#stopMonitoring()V
+#emitRecord(Ljava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/metrics/spi/OutputRecord;)V
+#flush()V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/metrics/file/TimeStampingFileContext

+###org/apache/hadoop/hbase/metrics/HBaseInfo$HBaseInfoMBean
@0.95.0
+#<init>(Lorg/apache/hadoop/metrics/util/MetricsRegistry;Ljava/lang/String;)V
+#shutdown()V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/metrics/HBaseInfo$HBaseInfoMBean

+###org/apache/hadoop/hbase/metrics/HBaseInfo
@0.95.0
+#init()Lorg/apache/hadoop/hbase/metrics/HBaseInfo;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/metrics/HBaseInfo

+###org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactionPolicy
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/regionserver/StoreConfigInformation;)V
+#preSelectCompactionForCoprocessor(Ljava/util/Collection;Ljava/util/List;)Ljava/util/List;
+#selectCompaction(Ljava/util/Collection;Ljava/util/List;ZZZ)Lorg/apache/hadoop/hbase/regionserver/compactions/CompactionRequest;
+#isMajorCompaction(Ljava/util/Collection;)Z
+#getNextMajorCompactTime(Ljava/util/Collection;)J
+#throttleCompaction(J)Z
+#needsCompaction(Ljava/util/Collection;Ljava/util/List;)Z
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/regionserver/compactions/DefaultCompactionPolicy

+###org/apache/hadoop/hbase/regionserver/compactions/OffPeakCompactions
@0.95.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#tryStartOffPeakRequest()Z
+#endOffPeakRequest()V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/regionserver/compactions/OffPeakCompactions

+###org/apache/hadoop/hbase/regionserver/DebugPrint
@0.95.0
+#<init>()V
+#enable()V
+#disable()V
+#reset()V
+#dumpToFile(Ljava/lang/String;)V
+#println(Ljava/lang/String;)V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/regionserver/DebugPrint

+###org/apache/hadoop/hbase/regionserver/handler/CloseRootHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;ZZI)V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/regionserver/handler/CloseRootHandler

+###org/apache/hadoop/hbase/regionserver/handler/OpenRootHandler
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#<init>(Lorg/apache/hadoop/hbase/Server;Lorg/apache/hadoop/hbase/regionserver/RegionServerServices;Lorg/apache/hadoop/hbase/HRegionInfo;Lorg/apache/hadoop/hbase/HTableDescriptor;I)V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/regionserver/handler/OpenRootHandler

+###org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/Class;)V
+#init(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)V
+#append(Lorg/apache/hadoop/hbase/regionserver/wal/HLog$Entry;)V
+#close()V
+#sync()V
+#getLength()J
+#getWriterFSDataOutputStream()Lorg/apache/hadoop/fs/FSDataOutputStream;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/regionserver/wal/SequenceFileLogWriter

+###org/apache/hadoop/hbase/RegionServerStatusProtocol
@0.95.0
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/RegionServerStatusProtocol

+###org/apache/hadoop/hbase/util/Base64$Base64InputStream
@0.95.0
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#read()I
+#read([BII)I
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/util/Base64$Base64InputStream

+###org/apache/hadoop/hbase/util/Base64$Base64OutputStream
@0.95.0
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#write(I)V
+#write([BII)V
+#flushBase64()V
+#close()V
+#suspendEncoding()V
+#resumeEncoding()V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/util/Base64$Base64OutputStream

+###org/apache/hadoop/hbase/util/Base64
@0.95.0
+#main([Ljava/lang/String;)V
+#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
+#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
+#encodeBytes([B)Ljava/lang/String;
+#encodeBytes([BI)Ljava/lang/String;
+#encodeBytes([BII)Ljava/lang/String;
+#encodeBytes([BIII)Ljava/lang/String;
+#decode([BIII)[B
+#decode(Ljava/lang/String;)[B
+#decode(Ljava/lang/String;I)[B
+#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
+#encodeToFile([BLjava/lang/String;)Z
+#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
+#decodeFromFile(Ljava/lang/String;)[B
+#encodeFromFile(Ljava/lang/String;)Ljava/lang/String;
+#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
+#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/util/Base64

+###org/apache/hadoop/hbase/util/KeyLocker
@0.95.0
+#<init>()V
+#acquireLock(Ljava/lang/Comparable;)Ljava/util/concurrent/locks/ReentrantLock;
+#acquireLocks(Ljava/util/Set;)Ljava/util/Map;
@0.95.1-hadoop1
-###org/apache/hadoop/hbase/util/KeyLocker

+###org/apache/hadoop/hbase/namequeues/queue/EvictingQueue
@1.7.0
+#create(I)Lorg/apache/hadoop/hbase/namequeues/queue/EvictingQueue;
+#remainingCapacity()I
+#offer(Ljava/lang/Object;)Z
+#add(Ljava/lang/Object;)Z
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#clear()V
+#isEmpty()Z
+#poll()Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/namequeues/queue/EvictingQueue

+###org/apache/hadoop/hbase/io/hfile/bucket/BufferedBucketCache
@1.7.2
+#<init>(Ljava/lang/String;JI[IIILjava/lang/String;ILorg/apache/hadoop/conf/Configuration;)V
+#getBlock(Lorg/apache/hadoop/hbase/io/hfile/BlockCacheKey;ZZZ)Lorg/apache/hadoop/hbase/io/hfile/Cacheable;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/bucket/BufferedBucketCache

+###org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob
@2.0.0-alpha2
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob

+###org/apache/hadoop/hbase/backup/BackupMergeJob
@2.0.0-alpha2
+#run([Ljava/lang/String;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/BackupMergeJob

+###org/apache/hadoop/hbase/backup/mapreduce/MapReduceHFileSplitterJob
@2.0.0-alpha2
+#<init>()V
+#createSubmittableJob([Ljava/lang/String;)Lorg/apache/hadoop/mapreduce/Job;
+#main([Ljava/lang/String;)V
+#run([Ljava/lang/String;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/backup/mapreduce/MapReduceHFileSplitterJob

+###org/apache/hadoop/hbase/regionserver/MemStoreCompactor$Action
@2.0.0-alpha4
+#values()[Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactor$Action;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/regionserver/MemStoreCompactor$Action;
@2.0.0-beta-1
-###org/apache/hadoop/hbase/regionserver/MemStoreCompactor$Action

+###org/apache/hadoop/hbase/TableDescriptor
@1.7.0
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;Lorg/apache/hadoop/hbase/client/TableState$State;)V
+#<init>(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#getHTableDescriptor()Lorg/apache/hadoop/hbase/HTableDescriptor;
+#setHTableDescriptor(Lorg/apache/hadoop/hbase/HTableDescriptor;)V
+#getTableState()Lorg/apache/hadoop/hbase/client/TableState$State;
+#setTableState(Lorg/apache/hadoop/hbase/client/TableState$State;)V
+#convert()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$TableDescriptor;
+#convert(Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$TableDescriptor;)Lorg/apache/hadoop/hbase/TableDescriptor;
+#toByteArray()[B
+#parseFrom([B)Lorg/apache/hadoop/hbase/TableDescriptor;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@1.7.1
-###org/apache/hadoop/hbase/TableDescriptor

+###org/apache/hadoop/hbase/io/hfile/HFileUtil
@1.3.1
+#<init>()V
+#seekOnMultipleSources(Lorg/apache/hadoop/fs/FSDataInputStream;J)V
@1.3.2
-###org/apache/hadoop/hbase/io/hfile/HFileUtil

+###org/apache/hadoop/hbase/tool/Canary$RegionTaskResult
@2.1.7
+#<init>(Lorg/apache/hadoop/hbase/client/RegionInfo;Lorg/apache/hadoop/hbase/TableName;Lorg/apache/hadoop/hbase/ServerName;)V
+#getRegionInfo()Lorg/apache/hadoop/hbase/client/RegionInfo;
+#getRegionNameAsString()Ljava/lang/String;
+#getTableName()Lorg/apache/hadoop/hbase/TableName;
+#getTableNameAsString()Ljava/lang/String;
+#getServerName()Lorg/apache/hadoop/hbase/ServerName;
+#getServerNameAsString()Ljava/lang/String;
+#getReadLatency()J
+#setReadLatency(J)V
+#getWriteLatency()J
+#setWriteLatency(J)V
+#isReadSuccess()Z
+#setReadSuccess()V
+#isWriteSuccess()Z
+#setWriteSuccess()V
@2.1.8
-###org/apache/hadoop/hbase/tool/Canary$RegionTaskResult
