
+###org/springframework/web/reactive/HandlerResultHandler
@5.0.0.RELEASE
+#supports(Lorg/springframework/web/reactive/HandlerResult;)Z
+#handleResult(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/HandlerResult;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/HandlerAdapter
@5.0.0.RELEASE
+#supports(Ljava/lang/Object;)Z
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/config/ResourceChainRegistration
@5.0.0.RELEASE
+#<init>(Z)V
+#<init>(ZLorg/springframework/cache/Cache;)V
+#addResolver(Lorg/springframework/web/reactive/resource/ResourceResolver;)Lorg/springframework/web/reactive/config/ResourceChainRegistration;
+#addTransformer(Lorg/springframework/web/reactive/resource/ResourceTransformer;)Lorg/springframework/web/reactive/config/ResourceChainRegistration;

+###org/springframework/web/reactive/config/ViewResolverRegistry
@5.0.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#freeMarker()Lorg/springframework/web/reactive/config/UrlBasedViewResolverRegistration;
+#viewResolver(Lorg/springframework/web/reactive/result/view/ViewResolver;)V
+#defaultViews([Lorg/springframework/web/reactive/result/view/View;)V
+#hasRegistrations()Z
+#order(I)V
@5.0.4.RELEASE
+#scriptTemplate()Lorg/springframework/web/reactive/config/UrlBasedViewResolverRegistration;

+###org/springframework/web/reactive/config/UrlBasedViewResolverRegistration
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/result/view/UrlBasedViewResolver;)V
+#prefix(Ljava/lang/String;)Lorg/springframework/web/reactive/config/UrlBasedViewResolverRegistration;
+#suffix(Ljava/lang/String;)Lorg/springframework/web/reactive/config/UrlBasedViewResolverRegistration;
+#viewClass(Ljava/lang/Class;)Lorg/springframework/web/reactive/config/UrlBasedViewResolverRegistration;
+#viewNames([Ljava/lang/String;)Lorg/springframework/web/reactive/config/UrlBasedViewResolverRegistration;

+###org/springframework/web/reactive/config/ResourceHandlerRegistry
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/io/ResourceLoader;)V
+#addResourceHandler([Ljava/lang/String;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
+#hasMappingForPattern(Ljava/lang/String;)Z
+#setOrder(I)Lorg/springframework/web/reactive/config/ResourceHandlerRegistry;
@5.0.11.RELEASE
+#setResourceUrlProvider(Lorg/springframework/web/reactive/resource/ResourceUrlProvider;)V
@5.1.0.RELEASE
-#setResourceUrlProvider(Lorg/springframework/web/reactive/resource/ResourceUrlProvider;)V
@5.1.2.RELEASE
+#setResourceUrlProvider(Lorg/springframework/web/reactive/resource/ResourceUrlProvider;)V

+###org/springframework/web/reactive/config/PathMatchConfigurer
@5.0.0.RELEASE
+#<init>()V
+#setUseCaseSensitiveMatch(Ljava/lang/Boolean;)Lorg/springframework/web/reactive/config/PathMatchConfigurer;
+#setUseTrailingSlashMatch(Ljava/lang/Boolean;)Lorg/springframework/web/reactive/config/PathMatchConfigurer;
@5.1.0.RELEASE
+#addPathPrefix(Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/springframework/web/reactive/config/PathMatchConfigurer;
@6.0.0
*#setUseTrailingSlashMatch(Ljava/lang/Boolean;)Lorg/springframework/web/reactive/config/PathMatchConfigurer;[deprecated]

+###org/springframework/web/reactive/config/WebFluxConfigurerComposite
@5.0.0.RELEASE
+#<init>()V
+#addWebFluxConfigurers(Ljava/util/List;)V
+#configureContentTypeResolver(Lorg/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder;)V
+#addCorsMappings(Lorg/springframework/web/reactive/config/CorsRegistry;)V
+#configurePathMatching(Lorg/springframework/web/reactive/config/PathMatchConfigurer;)V
+#addResourceHandlers(Lorg/springframework/web/reactive/config/ResourceHandlerRegistry;)V
+#configureArgumentResolvers(Lorg/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer;)V
+#configureHttpMessageCodecs(Lorg/springframework/http/codec/ServerCodecConfigurer;)V
+#addFormatters(Lorg/springframework/format/FormatterRegistry;)V
+#getValidator()Lorg/springframework/validation/Validator;
+#getMessageCodesResolver()Lorg/springframework/validation/MessageCodesResolver;
+#configureViewResolvers(Lorg/springframework/web/reactive/config/ViewResolverRegistry;)V
@5.3.0
+#getWebSocketService()Lorg/springframework/web/reactive/socket/server/WebSocketService;

+###org/springframework/web/reactive/config/DelegatingWebFluxConfiguration
@5.0.0.RELEASE
+#<init>()V
+#setConfigurers(Ljava/util/List;)V
+#configurePathMatching(Lorg/springframework/web/reactive/config/PathMatchConfigurer;)V

+###org/springframework/web/reactive/config/CorsRegistry
@5.0.0.RELEASE
+#<init>()V
+#addMapping(Ljava/lang/String;)Lorg/springframework/web/reactive/config/CorsRegistration;

+###org/springframework/web/reactive/config/WebFluxConfigurer
@5.0.0.RELEASE
+#configureContentTypeResolver(Lorg/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder;)V
+#addCorsMappings(Lorg/springframework/web/reactive/config/CorsRegistry;)V
+#configurePathMatching(Lorg/springframework/web/reactive/config/PathMatchConfigurer;)V
+#addResourceHandlers(Lorg/springframework/web/reactive/config/ResourceHandlerRegistry;)V
+#configureArgumentResolvers(Lorg/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer;)V
+#configureHttpMessageCodecs(Lorg/springframework/http/codec/ServerCodecConfigurer;)V
+#addFormatters(Lorg/springframework/format/FormatterRegistry;)V
+#getValidator()Lorg/springframework/validation/Validator;
+#getMessageCodesResolver()Lorg/springframework/validation/MessageCodesResolver;
+#configureViewResolvers(Lorg/springframework/web/reactive/config/ViewResolverRegistry;)V
@5.3.0
+#getWebSocketService()Lorg/springframework/web/reactive/socket/server/WebSocketService;

+###org/springframework/web/reactive/config/ResourceHandlerRegistration
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/String;)V
+#addResourceLocations([Ljava/lang/String;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
+#setCacheControl(Lorg/springframework/http/CacheControl;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
+#resourceChain(Z)Lorg/springframework/web/reactive/config/ResourceChainRegistration;
+#resourceChain(ZLorg/springframework/cache/Cache;)Lorg/springframework/web/reactive/config/ResourceChainRegistration;
@5.3.0
+#setUseLastModified(Z)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
@5.3.2
+#setMediaTypes(Ljava/util/Map;)V
@5.3.13
+#setOptimizeLocations(Z)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;

+###org/springframework/web/reactive/config/EnableWebFlux
@5.0.0.RELEASE

+###org/springframework/web/reactive/config/CorsRegistration
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#allowedOrigins([Ljava/lang/String;)Lorg/springframework/web/reactive/config/CorsRegistration;
+#allowedMethods([Ljava/lang/String;)Lorg/springframework/web/reactive/config/CorsRegistration;
+#allowedHeaders([Ljava/lang/String;)Lorg/springframework/web/reactive/config/CorsRegistration;
+#exposedHeaders([Ljava/lang/String;)Lorg/springframework/web/reactive/config/CorsRegistration;
+#maxAge(J)Lorg/springframework/web/reactive/config/CorsRegistration;
+#allowCredentials(Z)Lorg/springframework/web/reactive/config/CorsRegistration;
@5.3.0
+#allowedOriginPatterns([Ljava/lang/String;)Lorg/springframework/web/reactive/config/CorsRegistration;
+#combine(Lorg/springframework/web/cors/CorsConfiguration;)Lorg/springframework/web/reactive/config/CorsRegistration;

+###org/springframework/web/reactive/config/WebFluxConfigurationSupport
@5.0.0.RELEASE
+#<init>()V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#webHandler()Lorg/springframework/web/reactive/DispatcherHandler;
+#responseStatusExceptionHandler()Lorg/springframework/web/server/WebExceptionHandler;
+#requestMappingHandlerMapping()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping;
+#webFluxContentTypeResolver()Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;
+#configurePathMatching(Lorg/springframework/web/reactive/config/PathMatchConfigurer;)V
+#routerFunctionMapping()Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;
+#resourceHandlerMapping()Lorg/springframework/web/reactive/HandlerMapping;
+#requestMappingHandlerAdapter()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter;
+#serverCodecConfigurer()Lorg/springframework/http/codec/ServerCodecConfigurer;
+#localeContextResolver()Lorg/springframework/web/server/i18n/LocaleContextResolver;
+#webFluxConversionService()Lorg/springframework/format/support/FormattingConversionService;
+#webFluxAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;
+#webFluxValidator()Lorg/springframework/validation/Validator;
+#handlerFunctionAdapter()Lorg/springframework/web/reactive/function/server/support/HandlerFunctionAdapter;
+#simpleHandlerAdapter()Lorg/springframework/web/reactive/result/SimpleHandlerAdapter;
+#responseEntityResultHandler()Lorg/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler;
+#responseBodyResultHandler()Lorg/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler;
+#viewResolutionResultHandler()Lorg/springframework/web/reactive/result/view/ViewResolutionResultHandler;
+#serverResponseResultHandler()Lorg/springframework/web/reactive/function/server/support/ServerResponseResultHandler;
@5.0.11.RELEASE
+#resourceUrlProvider()Lorg/springframework/web/reactive/resource/ResourceUrlProvider;
@5.1.0.RELEASE
-#resourceUrlProvider()Lorg/springframework/web/reactive/resource/ResourceUrlProvider;
@5.1.2.RELEASE
+#resourceUrlProvider()Lorg/springframework/web/reactive/resource/ResourceUrlProvider;
@5.2.0.RELEASE
+#requestMappingHandlerMapping(Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping;
+#routerFunctionMapping(Lorg/springframework/http/codec/ServerCodecConfigurer;)Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;
+#resourceHandlerMapping(Lorg/springframework/web/reactive/resource/ResourceUrlProvider;)Lorg/springframework/web/reactive/HandlerMapping;
+#requestMappingHandlerAdapter(Lorg/springframework/core/ReactiveAdapterRegistry;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/format/support/FormattingConversionService;Lorg/springframework/validation/Validator;)Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter;
+#responseEntityResultHandler(Lorg/springframework/core/ReactiveAdapterRegistry;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)Lorg/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler;
+#responseBodyResultHandler(Lorg/springframework/core/ReactiveAdapterRegistry;Lorg/springframework/http/codec/ServerCodecConfigurer;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)Lorg/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler;
+#viewResolutionResultHandler(Lorg/springframework/core/ReactiveAdapterRegistry;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)Lorg/springframework/web/reactive/result/view/ViewResolutionResultHandler;
+#serverResponseResultHandler(Lorg/springframework/http/codec/ServerCodecConfigurer;)Lorg/springframework/web/reactive/function/server/support/ServerResponseResultHandler;
-#requestMappingHandlerMapping()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping;
-#routerFunctionMapping()Lorg/springframework/web/reactive/function/server/support/RouterFunctionMapping;
-#resourceHandlerMapping()Lorg/springframework/web/reactive/HandlerMapping;
-#requestMappingHandlerAdapter()Lorg/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter;
-#responseEntityResultHandler()Lorg/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler;
-#responseBodyResultHandler()Lorg/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler;
-#viewResolutionResultHandler()Lorg/springframework/web/reactive/result/view/ViewResolutionResultHandler;
-#serverResponseResultHandler()Lorg/springframework/web/reactive/function/server/support/ServerResponseResultHandler;
@5.3.0
+#webFluxWebSocketHandlerAdapter()Lorg/springframework/web/reactive/socket/server/support/WebSocketHandlerAdapter;

+###org/springframework/web/reactive/accept/FixedContentTypeResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/http/MediaType;)V
+#<init>(Ljava/util/List;)V
+#getContentTypes()Ljava/util/List;
+#resolveMediaTypes(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;

+###org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder$ParameterResolverConfigurer
@5.0.0.RELEASE
+#<init>()V
+#mediaType(Ljava/lang/String;Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder$ParameterResolverConfigurer;
+#mediaType(Ljava/util/Map;)Lorg/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder$ParameterResolverConfigurer;
+#parameterName(Ljava/lang/String;)Lorg/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder$ParameterResolverConfigurer;

+###org/springframework/web/reactive/accept/ParameterContentTypeResolver
@5.0.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#setParameterName(Ljava/lang/String;)V
+#getParameterName()Ljava/lang/String;
+#resolveMediaTypes(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;

+###org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder
@5.0.0.RELEASE
+#<init>()V
+#parameterResolver()Lorg/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder$ParameterResolverConfigurer;
+#headerResolver()V
+#fixedResolver([Lorg/springframework/http/MediaType;)V
+#resolver(Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)V
+#build()Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;

+###org/springframework/web/reactive/accept/RequestedContentTypeResolver
@5.0.0.RELEASE
+#resolveMediaTypes(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;

+###org/springframework/web/reactive/accept/HeaderContentTypeResolver
@5.0.0.RELEASE
+#<init>()V
+#resolveMediaTypes(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/List;

+###org/springframework/web/reactive/handler/SimpleUrlHandlerMapping
@5.0.0.RELEASE
+#<init>()V
+#setMappings(Ljava/util/Properties;)V
+#setUrlMap(Ljava/util/Map;)V
+#getUrlMap()Ljava/util/Map;
+#initApplicationContext()V
@5.2.0.RELEASE
+#<init>(Ljava/util/Map;)V
+#<init>(Ljava/util/Map;I)V

+###org/springframework/web/reactive/handler/AbstractHandlerMapping
@5.0.0.RELEASE
+#<init>()V
+#setOrder(I)V
+#getOrder()I
+#setUseCaseSensitiveMatch(Z)V
+#setUseTrailingSlashMatch(Z)V
+#getPathPatternParser()Lorg/springframework/web/util/pattern/PathPatternParser;
+#setCorsConfigurations(Ljava/util/Map;)V
+#setCorsProcessor(Lorg/springframework/web/cors/reactive/CorsProcessor;)V
+#getCorsProcessor()Lorg/springframework/web/cors/reactive/CorsProcessor;
+#getHandler(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#setCorsConfigurationSource(Lorg/springframework/web/cors/reactive/CorsConfigurationSource;)V
+#setBeanName(Ljava/lang/String;)V
@6.0.0
*#setUseTrailingSlashMatch(Z)V[deprecated]

+###org/springframework/web/reactive/handler/AbstractUrlHandlerMapping
@5.0.0.RELEASE
+#<init>()V
+#setLazyInitHandlers(Z)V
+#getHandlerMap()Ljava/util/Map;
+#getHandlerInternal(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.3.5
+#setHandlerPredicate(Ljava/util/function/BiPredicate;)V

+###org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler
@5.0.5.RELEASE
+#<init>()V

+###org/springframework/web/reactive/resource/WebJarsResourceResolver
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/webjars/WebJarAssetLocator;)V

+###org/springframework/web/reactive/resource/CssLinkResourceTransformer$LinkParser
@5.0.0.RELEASE
+#parse(Ljava/lang/String;Ljava/util/SortedSet;)V

+###org/springframework/web/reactive/resource/GzipResourceResolver
@5.0.0.RELEASE
+#<init>()V
@6.0.0
-###org/springframework/web/reactive/resource/GzipResourceResolver

+###org/springframework/web/reactive/resource/AbstractFileNameVersionStrategy
@5.0.0.RELEASE
+#<init>()V
+#extractVersion(Ljava/lang/String;)Ljava/lang/String;
+#removeVersion(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#addVersion(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/web/reactive/resource/ResourceTransformer
@5.0.0.RELEASE
+#transform(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/core/io/Resource;Lorg/springframework/web/reactive/resource/ResourceTransformerChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/AppCacheManifestTransformer
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#transform(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/core/io/Resource;Lorg/springframework/web/reactive/resource/ResourceTransformerChain;)Lreactor/core/publisher/Mono;
@6.0.0
-###org/springframework/web/reactive/resource/AppCacheManifestTransformer

+###org/springframework/web/reactive/resource/PathResourceResolver
@5.0.0.RELEASE
+#<init>()V
+#setAllowedLocations([Lorg/springframework/core/io/Resource;)V
+#getAllowedLocations()[Lorg/springframework/core/io/Resource;

+###org/springframework/web/reactive/resource/CssLinkResourceTransformer
@5.0.0.RELEASE
+#<init>()V
+#transform(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/core/io/Resource;Lorg/springframework/web/reactive/resource/ResourceTransformerChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/FixedVersionStrategy
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#getResourceVersion(Lorg/springframework/core/io/Resource;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/ResourceUrlProvider
@5.0.0.RELEASE
+#<init>()V
+#getHandlerMap()Ljava/util/Map;
+#registerHandlers(Ljava/util/Map;)V
+#onApplicationEvent(Lorg/springframework/context/event/ContextRefreshedEvent;)V
+#getForUriString(Ljava/lang/String;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V
@5.2.14.RELEASE
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@5.3.0
-#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
@5.3.5
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V

+###org/springframework/web/reactive/resource/CssLinkResourceTransformer$AbstractLinkParser
@5.0.0.RELEASE
+#parse(Ljava/lang/String;Ljava/util/SortedSet;)V

+###org/springframework/web/reactive/resource/TransformedResource
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/io/Resource;[B)V
+#getFilename()Ljava/lang/String;
+#lastModified()J

+###org/springframework/web/reactive/resource/AbstractPrefixVersionStrategy
@5.0.0.RELEASE
+#extractVersion(Ljava/lang/String;)Ljava/lang/String;
+#removeVersion(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#addVersion(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/web/reactive/resource/CachingResourceResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/cache/Cache;)V
+#<init>(Lorg/springframework/cache/CacheManager;Ljava/lang/String;)V
+#getCache()Lorg/springframework/cache/Cache;
@5.1.0.RELEASE
+#setContentCodings(Ljava/util/List;)V
+#getContentCodings()Ljava/util/List;

+###org/springframework/web/reactive/resource/CachingResourceTransformer
@5.0.0.RELEASE
+#<init>(Lorg/springframework/cache/Cache;)V
+#<init>(Lorg/springframework/cache/CacheManager;Ljava/lang/String;)V
+#getCache()Lorg/springframework/cache/Cache;
+#transform(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/core/io/Resource;Lorg/springframework/web/reactive/resource/ResourceTransformerChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/VersionResourceResolver
@5.0.0.RELEASE
+#<init>()V
+#setStrategyMap(Ljava/util/Map;)V
+#getStrategyMap()Ljava/util/Map;
+#addContentVersionStrategy([Ljava/lang/String;)Lorg/springframework/web/reactive/resource/VersionResourceResolver;
+#addFixedVersionStrategy(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/resource/VersionResourceResolver;
+#addVersionStrategy(Lorg/springframework/web/reactive/resource/VersionStrategy;[Ljava/lang/String;)Lorg/springframework/web/reactive/resource/VersionResourceResolver;

+###org/springframework/web/reactive/resource/ResourceTransformerChain
@5.0.0.RELEASE
+#getResolverChain()Lorg/springframework/web/reactive/resource/ResourceResolverChain;
+#transform(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/core/io/Resource;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/AbstractResourceResolver
@5.0.0.RELEASE
+#<init>()V
+#resolveResource(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;Ljava/util/List;Lorg/springframework/web/reactive/resource/ResourceResolverChain;)Lreactor/core/publisher/Mono;
+#resolveUrlPath(Ljava/lang/String;Ljava/util/List;Lorg/springframework/web/reactive/resource/ResourceResolverChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/ContentVersionStrategy
@5.0.0.RELEASE
+#<init>()V
+#getResourceVersion(Lorg/springframework/core/io/Resource;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/VersionStrategy
@5.0.0.RELEASE
+#extractVersion(Ljava/lang/String;)Ljava/lang/String;
+#removeVersion(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#addVersion(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getResourceVersion(Lorg/springframework/core/io/Resource;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/ResourceWebHandler
@5.0.0.RELEASE
+#<init>()V
+#setLocations(Ljava/util/List;)V
+#getLocations()Ljava/util/List;
+#setResourceResolvers(Ljava/util/List;)V
+#getResourceResolvers()Ljava/util/List;
+#setResourceTransformers(Ljava/util/List;)V
+#getResourceTransformers()Ljava/util/List;
+#setCacheControl(Lorg/springframework/http/CacheControl;)V
+#getCacheControl()Lorg/springframework/http/CacheControl;
+#setResourceHttpMessageWriter(Lorg/springframework/http/codec/ResourceHttpMessageWriter;)V
+#getResourceHttpMessageWriter()Lorg/springframework/http/codec/ResourceHttpMessageWriter;
+#afterPropertiesSet()V
+#handle(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;
@5.1.0.RELEASE
+#setLocationValues(Ljava/util/List;)V
+#getLocationValues()Ljava/util/List;
+#setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V
@5.3.0
+#isUseLastModified()Z
+#setUseLastModified(Z)V
@5.3.2
+#setMediaTypes(Ljava/util/Map;)V
+#getMediaTypes()Ljava/util/Map;
@5.3.13
+#setOptimizeLocations(Z)V
+#isOptimizeLocations()Z

+###org/springframework/web/reactive/resource/EncodedResourceResolver
@5.1.0.RELEASE
+#<init>()V
+#setContentCodings(Ljava/util/List;)V
+#getContentCodings()Ljava/util/List;
+#setExtensions(Ljava/util/Map;)V
+#getExtensions()Ljava/util/Map;
+#registerExtension(Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/web/reactive/resource/ResourceResolver
@5.0.0.RELEASE
+#resolveResource(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;Ljava/util/List;Lorg/springframework/web/reactive/resource/ResourceResolverChain;)Lreactor/core/publisher/Mono;
+#resolveUrlPath(Ljava/lang/String;Ljava/util/List;Lorg/springframework/web/reactive/resource/ResourceResolverChain;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/HttpResource
@5.0.0.RELEASE
+#getResponseHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/web/reactive/resource/ResourceResolverChain
@5.0.0.RELEASE
+#resolveResource(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;
+#resolveUrlPath(Ljava/lang/String;Ljava/util/List;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/resource/ResourceTransformerSupport
@5.0.0.RELEASE
+#<init>()V
+#setResourceUrlProvider(Lorg/springframework/web/reactive/resource/ResourceUrlProvider;)V
+#getResourceUrlProvider()Lorg/springframework/web/reactive/resource/ResourceUrlProvider;

+###org/springframework/web/reactive/function/BodyInserters$FormInserter
@5.0.2.RELEASE
+#with(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;
+#with(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;

+###org/springframework/web/reactive/function/BodyExtractor
@5.0.0.RELEASE
+#extract(Lorg/springframework/http/ReactiveHttpInputMessage;Lorg/springframework/web/reactive/function/BodyExtractor$Context;)Ljava/lang/Object;

+###org/springframework/web/reactive/function/UnsupportedMediaTypeException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;)V
+#getContentType()Lorg/springframework/http/MediaType;
+#getSupportedMediaTypes()Ljava/util/List;
@5.1.0.RELEASE
+#<init>(Lorg/springframework/http/MediaType;Ljava/util/List;Lorg/springframework/core/ResolvableType;)V
+#getBodyType()Lorg/springframework/core/ResolvableType;

+###org/springframework/web/reactive/function/server/RequestPredicate
@5.0.0.RELEASE
+#test(Lorg/springframework/web/reactive/function/server/ServerRequest;)Z
+#and(Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#negate()Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#or(Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#nest(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/util/Optional;
@5.1.3.RELEASE
+#accept(Lorg/springframework/web/reactive/function/server/RequestPredicates$Visitor;)V

+###org/springframework/web/reactive/function/server/ServerRequest
@5.0.0.RELEASE
+#method()Lorg/springframework/http/HttpMethod;
+#methodName()Ljava/lang/String;
+#uri()Ljava/net/URI;
+#uriBuilder()Lorg/springframework/web/util/UriBuilder;
+#path()Ljava/lang/String;
+#pathContainer()Lorg/springframework/http/server/PathContainer;
+#headers()Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;
+#cookies()Lorg/springframework/util/MultiValueMap;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;)Ljava/lang/Object;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;Ljava/util/Map;)Ljava/lang/Object;
+#bodyToMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#bodyToMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#bodyToFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
+#attribute(Ljava/lang/String;)Ljava/util/Optional;
+#attributes()Ljava/util/Map;
+#queryParam(Ljava/lang/String;)Ljava/util/Optional;
+#queryParams()Lorg/springframework/util/MultiValueMap;
+#pathVariable(Ljava/lang/String;)Ljava/lang/String;
+#pathVariables()Ljava/util/Map;
+#session()Lreactor/core/publisher/Mono;
+#principal()Lreactor/core/publisher/Mono;
+#create(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/List;)Lorg/springframework/web/reactive/function/server/ServerRequest;
@5.0.5.RELEASE
+#formData()Lreactor/core/publisher/Mono;
+#multipartData()Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#remoteAddress()Ljava/util/Optional;
+#messageReaders()Ljava/util/List;
+#exchange()Lorg/springframework/web/server/ServerWebExchange;
+#from(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
@5.2.3.RELEASE
+#localAddress()Ljava/util/Optional;
@5.2.5.RELEASE
+#checkNotModified(Ljava/time/Instant;)Lreactor/core/publisher/Mono;
+#checkNotModified(Ljava/lang/String;)Lreactor/core/publisher/Mono;
+#checkNotModified(Ljava/time/Instant;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.3.0
*#pathContainer()Lorg/springframework/http/server/PathContainer;[deprecated]
+#requestPath()Lorg/springframework/http/server/RequestPath;
@6.0.0
*#methodName()Ljava/lang/String;[deprecated]

+###org/springframework/web/reactive/function/server/ServerRequest$Headers
@5.0.0.RELEASE
+#accept()Ljava/util/List;
+#acceptCharset()Ljava/util/List;
+#acceptLanguage()Ljava/util/List;
+#contentLength()Ljava/util/OptionalLong;
+#contentType()Ljava/util/Optional;
+#host()Ljava/net/InetSocketAddress;
+#range()Ljava/util/List;
+#header(Ljava/lang/String;)Ljava/util/List;
+#asHttpHeaders()Lorg/springframework/http/HttpHeaders;
@5.2.5.RELEASE
+#firstHeader(Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/web/reactive/function/server/RouterFunction
@5.0.0.RELEASE
+#route(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
+#and(Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#andOther(Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#andRoute(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#andNest(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#filter(Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#accept(Lorg/springframework/web/reactive/function/server/RouterFunctions$Visitor;)V
@5.3.0
+#withAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#withAttributes(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/RouterFunction;

+###org/springframework/web/reactive/function/server/RouterFunctions$Builder
@5.1.0.RELEASE
+#GET(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#GET(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#HEAD(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#HEAD(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#POST(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#POST(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PUT(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PUT(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PATCH(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PATCH(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#DELETE(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#DELETE(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#OPTIONS(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#OPTIONS(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#add(Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#resources(Ljava/lang/String;Lorg/springframework/core/io/Resource;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#resources(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#nest(Lorg/springframework/web/reactive/function/server/RequestPredicate;Ljava/util/function/Supplier;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#nest(Lorg/springframework/web/reactive/function/server/RequestPredicate;Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#path(Ljava/lang/String;Ljava/util/function/Supplier;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#path(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#filter(Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#before(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#after(Ljava/util/function/BiFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#onError(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#onError(Ljava/lang/Class;Ljava/util/function/BiFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#build()Lorg/springframework/web/reactive/function/server/RouterFunction;
@5.2.0.RELEASE
+#route(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
@5.3.0
+#GET(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#GET(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#HEAD(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#HEAD(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#POST(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#POST(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PUT(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PUT(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PATCH(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#PATCH(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#DELETE(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#DELETE(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#OPTIONS(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#OPTIONS(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#withAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#withAttributes(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;

+###org/springframework/web/reactive/function/server/RenderingResponse$Builder
@5.0.0.RELEASE
+#modelAttribute(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#modelAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#modelAttributes([Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#modelAttributes(Ljava/util/Collection;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#modelAttributes(Ljava/util/Map;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#build()Lreactor/core/publisher/Mono;
@5.0.2.RELEASE
+#cookie(Lorg/springframework/http/ResponseCookie;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
@5.0.3.RELEASE
+#status(I)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
@6.0.0
+#status(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
-#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;

+###org/springframework/web/reactive/function/server/HandlerStrategies$Builder
@5.0.0.RELEASE
+#codecs(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/HandlerStrategies$Builder;
+#viewResolver(Lorg/springframework/web/reactive/result/view/ViewResolver;)Lorg/springframework/web/reactive/function/server/HandlerStrategies$Builder;
+#webFilter(Lorg/springframework/web/server/WebFilter;)Lorg/springframework/web/reactive/function/server/HandlerStrategies$Builder;
+#exceptionHandler(Lorg/springframework/web/server/WebExceptionHandler;)Lorg/springframework/web/reactive/function/server/HandlerStrategies$Builder;
+#localeContextResolver(Lorg/springframework/web/server/i18n/LocaleContextResolver;)Lorg/springframework/web/reactive/function/server/HandlerStrategies$Builder;
+#build()Lorg/springframework/web/reactive/function/server/HandlerStrategies;

+###org/springframework/web/reactive/function/server/RouterFunctions$Visitor
@5.0.0.RELEASE
+#startNested(Lorg/springframework/web/reactive/function/server/RequestPredicate;)V
+#endNested(Lorg/springframework/web/reactive/function/server/RequestPredicate;)V
+#route(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)V
+#resources(Ljava/util/function/Function;)V
+#unknown(Lorg/springframework/web/reactive/function/server/RouterFunction;)V
@5.3.0
+#attributes(Ljava/util/Map;)V

+###org/springframework/web/reactive/function/server/EntityResponse$Builder
@5.0.0.RELEASE
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#allow([Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#allow(Ljava/util/Set;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#eTag(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#lastModified(Ljava/time/ZonedDateTime;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#location(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#cacheControl(Lorg/springframework/http/CacheControl;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#varyBy([Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#contentLength(J)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#hint(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#build()Lreactor/core/publisher/Mono;
@5.0.2.RELEASE
+#cookie(Lorg/springframework/http/ResponseCookie;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
@5.0.3.RELEASE
+#status(I)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
@5.1.4.RELEASE
+#lastModified(Ljava/time/Instant;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
@5.1.6.RELEASE
+#hints(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
@6.0.0
+#status(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
-#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;

+###org/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder
@5.0.0.RELEASE
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#allow([Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#allow(Ljava/util/Set;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#eTag(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#lastModified(Ljava/time/ZonedDateTime;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#location(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#cacheControl(Lorg/springframework/http/CacheControl;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#varyBy([Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#build()Lreactor/core/publisher/Mono;
+#build(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#build(Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
@5.0.2.RELEASE
+#cookie(Lorg/springframework/http/ResponseCookie;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
@5.1.4.RELEASE
+#lastModified(Ljava/time/Instant;)Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;

+###org/springframework/web/reactive/function/server/EntityResponse
@5.0.0.RELEASE
+#entity()Ljava/lang/Object;
+#inserter()Lorg/springframework/web/reactive/function/BodyInserter;
+#fromObject(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#fromPublisher(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#fromPublisher(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
@5.2.0.RELEASE
+#fromProducer(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;
+#fromProducer(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/server/EntityResponse$Builder;

+###org/springframework/web/reactive/function/server/ChangePathPatternParserVisitor$Target
@5.3.0
+#changeParser(Lorg/springframework/web/util/pattern/PathPatternParser;)V

+###org/springframework/web/reactive/function/server/HandlerFilterFunction
@5.0.0.RELEASE
+#filter(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lreactor/core/publisher/Mono;
+#andThen(Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;)Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;
+#apply(Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/HandlerFunction;
+#ofRequestProcessor(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;
+#ofResponseProcessor(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/server/HandlerFilterFunction;

+###org/springframework/web/reactive/function/server/HandlerStrategies
@5.0.0.RELEASE
+#messageReaders()Ljava/util/List;
+#messageWriters()Ljava/util/List;
+#viewResolvers()Ljava/util/List;
+#webFilters()Ljava/util/List;
+#exceptionHandlers()Ljava/util/List;
+#localeContextResolver()Lorg/springframework/web/server/i18n/LocaleContextResolver;
+#withDefaults()Lorg/springframework/web/reactive/function/server/HandlerStrategies;
+#builder()Lorg/springframework/web/reactive/function/server/HandlerStrategies$Builder;
+#empty()Lorg/springframework/web/reactive/function/server/HandlerStrategies$Builder;

+###org/springframework/web/reactive/function/server/RouterFunctions
@5.0.0.RELEASE
+#<init>()V
+#route(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#nest(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#resources(Ljava/lang/String;Lorg/springframework/core/io/Resource;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#resources(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#toHttpHandler(Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/http/server/reactive/HttpHandler;
+#toHttpHandler(Lorg/springframework/web/reactive/function/server/RouterFunction;Lorg/springframework/web/reactive/function/server/HandlerStrategies;)Lorg/springframework/http/server/reactive/HttpHandler;
+#toWebHandler(Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/web/server/WebHandler;
+#toWebHandler(Lorg/springframework/web/reactive/function/server/RouterFunction;Lorg/springframework/web/reactive/function/server/HandlerStrategies;)Lorg/springframework/web/server/WebHandler;
@5.1.0.RELEASE
+#route()Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#resourceLookupFunction(Ljava/lang/String;Lorg/springframework/core/io/Resource;)Ljava/util/function/Function;
@5.3.0
+#changeParser(Lorg/springframework/web/reactive/function/server/RouterFunction;Lorg/springframework/web/util/pattern/PathPatternParser;)Lorg/springframework/web/reactive/function/server/RouterFunction;

+###org/springframework/web/reactive/function/server/ServerRequest$Builder
@5.1.0.RELEASE
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#uri(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#cookie(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#body(Lreactor/core/publisher/Flux;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#body(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#attributes(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;
+#build()Lorg/springframework/web/reactive/function/server/ServerRequest;
@5.3.23
+#contextPath(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/ServerRequest$Builder;

+###org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder
@5.0.0.RELEASE
+#contentLength(J)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#hint(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#body(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#body(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#syncBody(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#body(Lorg/springframework/web/reactive/function/BodyInserter;)Lreactor/core/publisher/Mono;
+#render(Ljava/lang/String;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#render(Ljava/lang/String;Ljava/util/Map;)Lreactor/core/publisher/Mono;
@5.1.6.RELEASE
+#hints(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
@5.2.0.RELEASE
+#bodyValue(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#body(Ljava/lang/Object;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#body(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
*#syncBody(Ljava/lang/Object;)Lreactor/core/publisher/Mono;[deprecated]

+###org/springframework/web/reactive/function/server/RequestPredicates$Visitor
@5.1.3.RELEASE
+#method(Ljava/util/Set;)V
+#path(Ljava/lang/String;)V
+#pathExtension(Ljava/lang/String;)V
+#header(Ljava/lang/String;Ljava/lang/String;)V
+#queryParam(Ljava/lang/String;Ljava/lang/String;)V
+#startAnd()V
+#endAnd()V
+#startOr()V
+#endOr()V
+#startNegate()V
+#endNegate()V
+#unknown(Lorg/springframework/web/reactive/function/server/RequestPredicate;)V
@5.1.4.RELEASE
+#and()V
+#or()V

+###org/springframework/web/reactive/function/server/support/ServerRequestWrapper$HeadersWrapper
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;)V
+#accept()Ljava/util/List;
+#acceptCharset()Ljava/util/List;
+#acceptLanguage()Ljava/util/List;
+#contentLength()Ljava/util/OptionalLong;
+#contentType()Ljava/util/Optional;
+#host()Ljava/net/InetSocketAddress;
+#range()Ljava/util/List;
+#header(Ljava/lang/String;)Ljava/util/List;
+#asHttpHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/web/reactive/function/server/support/ServerResponseResultHandler
@5.0.0.RELEASE
+#<init>()V
+#setMessageWriters(Ljava/util/List;)V
+#setViewResolvers(Ljava/util/List;)V
+#setOrder(I)V
+#getOrder()I
+#afterPropertiesSet()V
+#supports(Lorg/springframework/web/reactive/HandlerResult;)Z
+#handleResult(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/HandlerResult;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/function/server/support/HandlerFunctionAdapter
@5.0.0.RELEASE
+#<init>()V
+#supports(Ljava/lang/Object;)Z
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/function/server/support/ServerRequestWrapper
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/function/server/ServerRequest;)V
+#request()Lorg/springframework/web/reactive/function/server/ServerRequest;
+#method()Lorg/springframework/http/HttpMethod;
+#methodName()Ljava/lang/String;
+#uri()Ljava/net/URI;
+#uriBuilder()Lorg/springframework/web/util/UriBuilder;
+#path()Ljava/lang/String;
+#pathContainer()Lorg/springframework/http/server/PathContainer;
+#headers()Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;
+#cookies()Lorg/springframework/util/MultiValueMap;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;)Ljava/lang/Object;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;Ljava/util/Map;)Ljava/lang/Object;
+#bodyToMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#bodyToMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#bodyToFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
+#attribute(Ljava/lang/String;)Ljava/util/Optional;
+#attributes()Ljava/util/Map;
+#queryParam(Ljava/lang/String;)Ljava/util/Optional;
+#queryParams()Lorg/springframework/util/MultiValueMap;
+#pathVariable(Ljava/lang/String;)Ljava/lang/String;
+#pathVariables()Ljava/util/Map;
+#session()Lreactor/core/publisher/Mono;
+#principal()Lreactor/core/publisher/Mono;
@5.0.5.RELEASE
+#formData()Lreactor/core/publisher/Mono;
+#multipartData()Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#remoteAddress()Ljava/util/Optional;
+#messageReaders()Ljava/util/List;
+#exchange()Lorg/springframework/web/server/ServerWebExchange;
@5.2.3.RELEASE
+#localAddress()Ljava/util/Optional;
@5.3.0
*#pathContainer()Lorg/springframework/http/server/PathContainer;[deprecated]
+#requestPath()Lorg/springframework/http/server/RequestPath;
@6.0.0
*#methodName()Ljava/lang/String;[deprecated]

+###org/springframework/web/reactive/function/server/support/RouterFunctionMapping
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/web/reactive/function/server/RouterFunction;)V
+#getRouterFunction()Lorg/springframework/web/reactive/function/server/RouterFunction;
+#setMessageReaders(Ljava/util/List;)V
+#afterPropertiesSet()V

+###org/springframework/web/reactive/function/server/ServerResponse
@5.0.0.RELEASE
+#statusCode()Lorg/springframework/http/HttpStatus;
+#headers()Lorg/springframework/http/HttpHeaders;
+#writeTo(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/function/server/ServerResponse$Context;)Lreactor/core/publisher/Mono;
+#from(Lorg/springframework/web/reactive/function/server/ServerResponse;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#ok()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#created(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#accepted()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#noContent()Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#seeOther(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#temporaryRedirect(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#permanentRedirect(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#badRequest()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#notFound()Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#unprocessableEntity()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
@5.0.2.RELEASE
+#cookies()Lorg/springframework/util/MultiValueMap;
@5.0.3.RELEASE
+#status(I)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
@5.2.0.RELEASE
+#rawStatusCode()I
@6.0.0
+#statusCode()Lorg/springframework/http/HttpStatusCode;
*#rawStatusCode()I[deprecated]
+#from(Lorg/springframework/web/ErrorResponse;)Lreactor/core/publisher/Mono;
+#status(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
-#statusCode()Lorg/springframework/http/HttpStatus;
-#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;

+###org/springframework/web/reactive/function/server/ServerResponse$Context
@5.0.0.RELEASE
+#messageWriters()Ljava/util/List;
+#viewResolvers()Ljava/util/List;

+###org/springframework/web/reactive/function/server/RenderingResponse
@5.0.0.RELEASE
+#name()Ljava/lang/String;
+#model()Ljava/util/Map;
+#from(Lorg/springframework/web/reactive/function/server/RenderingResponse;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;
+#create(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;

+###org/springframework/web/reactive/function/server/RequestPredicates
@5.0.0.RELEASE
+#<init>()V
+#all()Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#path(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#pathPredicates(Lorg/springframework/web/util/pattern/PathPatternParser;)Ljava/util/function/Function;
+#headers(Ljava/util/function/Predicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#contentType([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#GET(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#HEAD(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#POST(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#PUT(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#PATCH(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#DELETE(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#OPTIONS(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#pathExtension(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#pathExtension(Ljava/util/function/Predicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#queryParam(Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
@5.0.7.RELEASE
+#queryParam(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
@5.1.0.RELEASE
+#methods([Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/server/RequestPredicate;

+###org/springframework/web/reactive/function/server/HandlerFunction
@5.0.0.RELEASE
+#handle(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/function/client/ExchangeFilterFunctions
@5.0.0.RELEASE
+#<init>()V
+#basicAuthentication(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;
+#basicAuthentication()Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;
+#statusError(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;
@5.1.0.RELEASE
+#limitResponseSize(J)Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;
*#basicAuthentication()Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;[deprecated]

+###org/springframework/web/reactive/function/client/WebClientResponseException$MethodNotAllowed
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClient$ResponseSpec
@5.0.0.RELEASE
+#onStatus(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;
+#bodyToMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#bodyToMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#bodyToFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
@5.1.9.RELEASE
+#onRawStatus(Ljava/util/function/IntPredicate;Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;
@5.2.0.RELEASE
+#toEntity(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#toEntity(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#toEntityList(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#toEntityList(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#toBodilessEntity()Lreactor/core/publisher/Mono;
@5.3.1
+#toEntityFlux(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#toEntityFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
@5.3.2
+#toEntityFlux(Lorg/springframework/web/reactive/function/BodyExtractor;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/function/client/WebClientResponseException$NotAcceptable
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#getRawStatusCode()I
+#getStatusText()Ljava/lang/String;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getResponseBodyAsByteArray()[B
+#getResponseBodyAsString()Ljava/lang/String;
@5.1.0.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
+#create(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)Lorg/springframework/web/reactive/function/client/WebClientResponseException;
@5.1.4.RELEASE
+#<init>(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)V
+#<init>(Ljava/lang/String;ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)V
+#getRequest()Lorg/springframework/http/HttpRequest;
+#create(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/reactive/function/client/WebClientResponseException;
@5.3.7
+#getResponseBodyAsString(Ljava/nio/charset/Charset;)Ljava/lang/String;
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)V
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
*#getRawStatusCode()I[deprecated]
+#getResponseBodyAs(Ljava/lang/Class;)Ljava/lang/Object;
+#getResponseBodyAs(Lorg/springframework/core/ParameterizedTypeReference;)Ljava/lang/Object;
+#setBodyDecodeFunction(Ljava/util/function/Function;)V
+#create(Lorg/springframework/http/HttpStatusCode;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/reactive/function/client/WebClientResponseException;
-#getStatusCode()Lorg/springframework/http/HttpStatus;

+###org/springframework/web/reactive/function/client/WebClientResponseException$GatewayTimeout
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/ClientResponse
@5.0.0.RELEASE
+#statusCode()Lorg/springframework/http/HttpStatus;
+#headers()Lorg/springframework/web/reactive/function/client/ClientResponse$Headers;
+#cookies()Lorg/springframework/util/MultiValueMap;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;)Ljava/lang/Object;
+#bodyToMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#bodyToMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#bodyToFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
+#toEntity(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#toEntity(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#toEntityList(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#toEntityList(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
@5.0.5.RELEASE
+#strategies()Lorg/springframework/web/reactive/function/client/ExchangeStrategies;
+#from(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#create(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#create(Lorg/springframework/http/HttpStatus;Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#create(Lorg/springframework/http/HttpStatus;Ljava/util/List;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
@5.1.0.RELEASE
+#rawStatusCode()I
@5.1.9.RELEASE
+#create(ILorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
@5.2.0.RELEASE
+#releaseBody()Lreactor/core/publisher/Mono;
+#toBodilessEntity()Lreactor/core/publisher/Mono;
+#createException()Lreactor/core/publisher/Mono;
@5.2.3.RELEASE
+#logPrefix()Ljava/lang/String;
@5.3.0
+#mutate()Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
*#from(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;[deprecated]
@6.0.0
+#statusCode()Lorg/springframework/http/HttpStatusCode;
*#rawStatusCode()I[deprecated]
+#createError()Lreactor/core/publisher/Mono;
+#create(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#create(Lorg/springframework/http/HttpStatusCode;Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#create(Lorg/springframework/http/HttpStatusCode;Ljava/util/List;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
-#statusCode()Lorg/springframework/http/HttpStatus;
-#create(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
-#create(Lorg/springframework/http/HttpStatus;Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
-#create(Lorg/springframework/http/HttpStatus;Ljava/util/List;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;

+###org/springframework/web/reactive/function/client/ExchangeFunctions
@5.0.0.RELEASE
+#<init>()V
+#create(Lorg/springframework/http/client/reactive/ClientHttpConnector;)Lorg/springframework/web/reactive/function/client/ExchangeFunction;
+#create(Lorg/springframework/http/client/reactive/ClientHttpConnector;Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/web/reactive/function/client/ExchangeFunction;

+###org/springframework/web/reactive/function/client/WebClient$RequestBodySpec
@5.0.0.RELEASE
+#contentLength(J)Lorg/springframework/web/reactive/function/client/WebClient$RequestBodySpec;
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/client/WebClient$RequestBodySpec;
+#body(Lorg/springframework/web/reactive/function/BodyInserter;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#body(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#body(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#syncBody(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
@5.2.0.RELEASE
+#bodyValue(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#body(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#body(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
*#syncBody(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;[deprecated]

+###org/springframework/web/reactive/function/client/WebClientResponseException$ServiceUnavailable
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientException
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/springframework/web/reactive/function/client/ClientRequest
@5.0.0.RELEASE
+#method()Lorg/springframework/http/HttpMethod;
+#url()Ljava/net/URI;
+#headers()Lorg/springframework/http/HttpHeaders;
+#cookies()Lorg/springframework/util/MultiValueMap;
+#body()Lorg/springframework/web/reactive/function/BodyInserter;
+#attribute(Ljava/lang/String;)Ljava/util/Optional;
+#attributes()Ljava/util/Map;
+#writeTo(Lorg/springframework/http/client/reactive/ClientHttpRequest;Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lreactor/core/publisher/Mono;
+#from(Lorg/springframework/web/reactive/function/client/ClientRequest;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#method(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
@5.0.5.RELEASE
*#method(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;[deprecated]
+#create(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
@5.1.0.RELEASE
+#logPrefix()Ljava/lang/String;
@5.3.0
+#httpRequest()Ljava/util/function/Consumer;

+###org/springframework/web/reactive/function/client/WebClientRequestException
@5.3.0
+#<init>(Ljava/lang/Throwable;Lorg/springframework/http/HttpMethod;Ljava/net/URI;Lorg/springframework/http/HttpHeaders;)V
+#getMethod()Lorg/springframework/http/HttpMethod;
+#getUri()Ljava/net/URI;
+#getHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/web/reactive/function/client/ClientResponse$Headers
@5.0.0.RELEASE
+#contentLength()Ljava/util/OptionalLong;
+#contentType()Ljava/util/Optional;
+#header(Ljava/lang/String;)Ljava/util/List;
+#asHttpHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/web/reactive/function/client/WebClient$RequestHeadersUriSpec
@5.0.0.RELEASE

+###org/springframework/web/reactive/function/client/ExchangeStrategies$Builder
@5.0.0.RELEASE
+#codecs(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ExchangeStrategies$Builder;
+#build()Lorg/springframework/web/reactive/function/client/ExchangeStrategies;

+###org/springframework/web/reactive/function/client/ExchangeFilterFunctions$Credentials
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Ljava/lang/String;)V
+#basicAuthenticationCredentials(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Consumer;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I

+###org/springframework/web/reactive/function/client/ClientRequest$Builder
@5.0.0.RELEASE
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#cookie(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#body(Lorg/springframework/web/reactive/function/BodyInserter;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#body(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#body(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#attributes(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#build()Lorg/springframework/web/reactive/function/client/ClientRequest;
@5.0.1.RELEASE
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
+#url(Ljava/net/URI;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;
@5.3.0
+#httpRequest(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientRequest$Builder;

+###org/springframework/web/reactive/function/client/WebClientResponseException$TooManyRequests
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$Unauthorized
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$NotImplemented
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$NotFound
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$BadGateway
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/ExchangeFilterFunction
@5.0.0.RELEASE
+#filter(Lorg/springframework/web/reactive/function/client/ClientRequest;Lorg/springframework/web/reactive/function/client/ExchangeFunction;)Lreactor/core/publisher/Mono;
+#andThen(Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;)Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;
+#apply(Lorg/springframework/web/reactive/function/client/ExchangeFunction;)Lorg/springframework/web/reactive/function/client/ExchangeFunction;
+#ofRequestProcessor(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;
+#ofResponseProcessor(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;

+###org/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec
@5.0.0.RELEASE
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#acceptCharset([Ljava/nio/charset/Charset;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#cookie(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#ifModifiedSince(Ljava/time/ZonedDateTime;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#ifNoneMatch([Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#attribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#attributes(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#exchange()Lreactor/core/publisher/Mono;
+#retrieve()Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;
@5.3.0
+#httpRequest(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#exchangeToMono(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
+#exchangeToFlux(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
*#exchange()Lreactor/core/publisher/Mono;[deprecated]
@5.3.1
+#context(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
@5.3.2
*#context(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;[deprecated]

+###org/springframework/web/reactive/function/client/WebClient$UriSpec
@5.0.0.RELEASE
+#uri(Ljava/net/URI;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#uri(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#uri(Ljava/lang/String;Ljava/util/Map;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#uri(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
@5.2.0.RELEASE
+#uri(Ljava/lang/String;Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;

+###org/springframework/web/reactive/function/client/ExchangeStrategies
@5.0.0.RELEASE
+#messageReaders()Ljava/util/List;
+#messageWriters()Ljava/util/List;
+#withDefaults()Lorg/springframework/web/reactive/function/client/ExchangeStrategies;
+#builder()Lorg/springframework/web/reactive/function/client/ExchangeStrategies$Builder;
+#empty()Lorg/springframework/web/reactive/function/client/ExchangeStrategies$Builder;
@5.1.12.RELEASE
+#mutate()Lorg/springframework/web/reactive/function/client/ExchangeStrategies$Builder;
@5.2.0.RELEASE
-#mutate()Lorg/springframework/web/reactive/function/client/ExchangeStrategies$Builder;
@5.2.2.RELEASE
+#mutate()Lorg/springframework/web/reactive/function/client/ExchangeStrategies$Builder;

+###org/springframework/web/reactive/function/client/support/ClientResponseWrapper$HeadersWrapper
@5.0.5.RELEASE
+#<init>(Lorg/springframework/web/reactive/function/client/ClientResponse$Headers;)V
+#contentLength()Ljava/util/OptionalLong;
+#contentType()Ljava/util/Optional;
+#header(Ljava/lang/String;)Ljava/util/List;
+#asHttpHeaders()Lorg/springframework/http/HttpHeaders;

+###org/springframework/web/reactive/function/client/support/ClientResponseWrapper
@5.0.5.RELEASE
+#<init>(Lorg/springframework/web/reactive/function/client/ClientResponse;)V
+#response()Lorg/springframework/web/reactive/function/client/ClientResponse;
+#strategies()Lorg/springframework/web/reactive/function/client/ExchangeStrategies;
+#statusCode()Lorg/springframework/http/HttpStatus;
+#headers()Lorg/springframework/web/reactive/function/client/ClientResponse$Headers;
+#cookies()Lorg/springframework/util/MultiValueMap;
+#body(Lorg/springframework/web/reactive/function/BodyExtractor;)Ljava/lang/Object;
+#bodyToMono(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#bodyToMono(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
+#bodyToFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
+#toEntity(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#toEntity(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#toEntityList(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
+#toEntityList(Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#rawStatusCode()I
@5.2.0.RELEASE
+#releaseBody()Lreactor/core/publisher/Mono;
+#toBodilessEntity()Lreactor/core/publisher/Mono;
+#createException()Lreactor/core/publisher/Mono;
@5.2.3.RELEASE
+#logPrefix()Ljava/lang/String;
@6.0.0
+#statusCode()Lorg/springframework/http/HttpStatusCode;
+#createError()Lreactor/core/publisher/Mono;
-#statusCode()Lorg/springframework/http/HttpStatus;
-#rawStatusCode()I

+###org/springframework/web/reactive/function/client/UnknownHttpStatusCodeException
@5.1.0.RELEASE
+#<init>(ILorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
@5.1.4.RELEASE
+#<init>(ILorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)V
@6.0.0
+#<init>(Lorg/springframework/http/HttpStatusCode;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;Lorg/springframework/http/HttpRequest;)V

+###org/springframework/web/reactive/function/client/WebClientResponseException$Forbidden
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/ClientResponse$Builder
@5.0.5.RELEASE
+#statusCode(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#headers(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#cookie(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#cookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#body(Lreactor/core/publisher/Flux;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#body(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
+#build()Lorg/springframework/web/reactive/function/client/ClientResponse;
@5.1.9.RELEASE
+#rawStatusCode(I)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
@5.2.0.RELEASE
+#request(Lorg/springframework/http/HttpRequest;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
@5.3.0
+#body(Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
@6.0.0
+#statusCode(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;
-#statusCode(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/client/ClientResponse$Builder;

+###org/springframework/web/reactive/function/client/WebClientResponseException$UnprocessableEntity
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$BadRequest
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$Conflict
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$Gone
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClientResponseException$UnsupportedMediaType
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/client/ExchangeFunction
@5.0.0.RELEASE
+#exchange(Lorg/springframework/web/reactive/function/client/ClientRequest;)Lreactor/core/publisher/Mono;
+#filter(Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;)Lorg/springframework/web/reactive/function/client/ExchangeFunction;

+###org/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec
@5.0.0.RELEASE

+###org/springframework/web/reactive/function/client/WebClient
@5.0.0.RELEASE
+#get()Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersUriSpec;
+#head()Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersUriSpec;
+#post()Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
+#put()Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
+#patch()Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
+#delete()Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersUriSpec;
+#options()Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersUriSpec;
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/client/WebClient$RequestBodyUriSpec;
+#mutate()Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#create()Lorg/springframework/web/reactive/function/client/WebClient;
+#create(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient;
+#builder()Lorg/springframework/web/reactive/function/client/WebClient$Builder;

+###org/springframework/web/reactive/function/client/WebClient$Builder
@5.0.0.RELEASE
+#baseUrl(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#defaultUriVariables(Ljava/util/Map;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#uriBuilderFactory(Lorg/springframework/web/util/UriBuilderFactory;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#defaultHeader(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#defaultHeaders(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#defaultCookie(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#defaultCookies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#clientConnector(Lorg/springframework/http/client/reactive/ClientHttpConnector;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#filter(Lorg/springframework/web/reactive/function/client/ExchangeFilterFunction;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#filters(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#exchangeStrategies(Lorg/springframework/web/reactive/function/client/ExchangeStrategies;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#exchangeFunction(Lorg/springframework/web/reactive/function/client/ExchangeFunction;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#clone()Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#apply(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#build()Lorg/springframework/web/reactive/function/client/WebClient;
@5.1.0.RELEASE
+#defaultRequest(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
@5.1.12.RELEASE
+#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
@5.1.13.RELEASE
+#codecs(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
*#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;[deprecated]
@5.2.0.RELEASE
-#codecs(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
-#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;[deprecated]
@5.2.2.RELEASE
+#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
@5.2.3.RELEASE
+#codecs(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
*#exchangeStrategies(Ljava/util/function/Consumer;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;[deprecated]
@6.0.0
+#defaultStatusHandler(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#observationRegistry(Lio/micrometer/observation/ObservationRegistry;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;
+#observationConvention(Lorg/springframework/web/reactive/function/client/ClientRequestObservationConvention;)Lorg/springframework/web/reactive/function/client/WebClient$Builder;

+###org/springframework/web/reactive/function/client/WebClientResponseException$InternalServerError
@5.1.0.RELEASE

+###org/springframework/web/reactive/function/BodyInserter$Context
@5.0.0.RELEASE
+#messageWriters()Ljava/util/List;
+#serverRequest()Ljava/util/Optional;
+#hints()Ljava/util/Map;

+###org/springframework/web/reactive/function/BodyInserters
@5.0.0.RELEASE
+#<init>()V
+#empty()Lorg/springframework/web/reactive/function/BodyInserter;
+#fromObject(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromPublisher(Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromPublisher(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromResource(Lorg/springframework/core/io/Resource;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromServerSentEvents(Lorg/reactivestreams/Publisher;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromFormData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromMultipartData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromDataBuffers(Lorg/reactivestreams/Publisher;)Lorg/springframework/web/reactive/function/BodyInserter;
@5.0.2.RELEASE
+#fromFormData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;
+#fromFormData(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;
+#fromMultipartData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;
+#fromMultipartData(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;
-#fromFormData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserter;
-#fromMultipartData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserter;
@5.0.3.RELEASE
+#fromMultipartData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserters$MultipartInserter;
+#fromMultipartData(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserters$MultipartInserter;
+#fromMultipartAsyncData(Ljava/lang/String;Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/BodyInserters$MultipartInserter;
+#fromMultipartAsyncData(Ljava/lang/String;Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/BodyInserters$MultipartInserter;
-#fromMultipartData(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;
-#fromMultipartData(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserters$FormInserter;
@5.2.0.RELEASE
+#fromValue(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserter;
*#fromObject(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserter;[deprecated]
+#fromProducer(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/BodyInserter;
+#fromProducer(Ljava/lang/Object;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/BodyInserter;

+###org/springframework/web/reactive/function/BodyExtractor$Context
@5.0.0.RELEASE
+#messageReaders()Ljava/util/List;
+#serverResponse()Ljava/util/Optional;
+#hints()Ljava/util/Map;

+###org/springframework/web/reactive/function/BodyInserter
@5.0.0.RELEASE
+#insert(Lorg/springframework/http/ReactiveHttpOutputMessage;Lorg/springframework/web/reactive/function/BodyInserter$Context;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/function/BodyExtractors
@5.0.0.RELEASE
+#<init>()V
+#toMono(Ljava/lang/Class;)Lorg/springframework/web/reactive/function/BodyExtractor;
+#toMono(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/BodyExtractor;
+#toFlux(Ljava/lang/Class;)Lorg/springframework/web/reactive/function/BodyExtractor;
+#toFlux(Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/BodyExtractor;
+#toFormData()Lorg/springframework/web/reactive/function/BodyExtractor;
+#toMultipartData()Lorg/springframework/web/reactive/function/BodyExtractor;
+#toParts()Lorg/springframework/web/reactive/function/BodyExtractor;
+#toDataBuffers()Lorg/springframework/web/reactive/function/BodyExtractor;

+###org/springframework/web/reactive/function/BodyInserters$MultipartInserter
@5.0.3.RELEASE
+#withPublisher(Ljava/lang/String;Lorg/reactivestreams/Publisher;Ljava/lang/Class;)Lorg/springframework/web/reactive/function/BodyInserters$MultipartInserter;
+#withPublisher(Ljava/lang/String;Lorg/reactivestreams/Publisher;Lorg/springframework/core/ParameterizedTypeReference;)Lorg/springframework/web/reactive/function/BodyInserters$MultipartInserter;

+###org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/method/HandlerMethod;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#setArgumentResolvers(Ljava/util/List;)V
+#getResolvers()Ljava/util/List;
+#setParameterNameDiscoverer(Lorg/springframework/core/ParameterNameDiscoverer;)V
+#getParameterNameDiscoverer()Lorg/springframework/core/ParameterNameDiscoverer;
+#invokeForHandlerResult(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/BindingContext;[Ljava/lang/Object;)Lorg/springframework/web/reactive/HandlerResult;

+###org/springframework/web/reactive/result/method/RequestMappingInfo$BuilderConfiguration
@5.0.0.RELEASE
+#<init>()V
+#setPatternParser(Lorg/springframework/web/util/pattern/PathPatternParser;)V
+#getPatternParser()Lorg/springframework/web/util/pattern/PathPatternParser;
+#setContentTypeResolver(Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)V
+#getContentTypeResolver()Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;

+###org/springframework/web/reactive/result/method/HandlerMethodArgumentResolverSupport
@5.0.0.RELEASE
+#getAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;

+###org/springframework/web/reactive/result/method/RequestMappingInfo$Builder
@5.0.0.RELEASE
+#paths([Ljava/lang/String;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#methods([Lorg/springframework/web/bind/annotation/RequestMethod;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#params([Ljava/lang/String;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#headers([Ljava/lang/String;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#consumes([Ljava/lang/String;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#produces([Ljava/lang/String;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#mappingName(Ljava/lang/String;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#customCondition(Lorg/springframework/web/reactive/result/condition/RequestCondition;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#options(Lorg/springframework/web/reactive/result/method/RequestMappingInfo$BuilderConfiguration;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#build()Lorg/springframework/web/reactive/result/method/RequestMappingInfo;

+###org/springframework/web/reactive/result/method/RequestMappingInfoHandlerMapping
@5.0.0.RELEASE
+#<init>()V
@5.2.4.RELEASE
+#getHandlerInternal(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler
@5.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)V
+#<init>(Ljava/util/List;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supports(Lorg/springframework/web/reactive/HandlerResult;)Z
+#handleResult(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/HandlerResult;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/ModelAttributeMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;Z)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.3.0
+#getValuesToBind(Lorg/springframework/web/bind/support/WebExchangeDataBinder;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer
@5.0.0.RELEASE
+#<init>()V
+#addCustomResolver([Lorg/springframework/web/reactive/result/method/HandlerMethodArgumentResolver;)V

+###org/springframework/web/reactive/result/method/annotation/ServerWebExchangeMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/WebSessionMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/MatrixVariableMapMethodArgumentResolver
@5.0.1.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping
@5.0.0.RELEASE
+#<init>()V
+#setContentTypeResolver(Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)V
+#setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V
+#afterPropertiesSet()V
+#getContentTypeResolver()Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;
@5.1.0.RELEASE
+#setPathPrefixes(Ljava/util/Map;)V
+#getPathPrefixes()Ljava/util/Map;
@5.2.0.RELEASE
+#registerMapping(Lorg/springframework/web/reactive/result/method/RequestMappingInfo;Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#getHandlerInternal(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#registerMapping(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;)V
@5.2.4.RELEASE
-#getHandlerInternal(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/RequestParamMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;Z)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/reactive/result/method/annotation/ContinuationHandlerMethodArgumentResolver
@5.2.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/PathVariableMapMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver
@5.0.1.RELEASE
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
@5.0.3.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V

+###org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter
@5.0.0.RELEASE
+#<init>()V
+#setMessageReaders(Ljava/util/List;)V
+#getMessageReaders()Ljava/util/List;
+#setWebBindingInitializer(Lorg/springframework/web/bind/support/WebBindingInitializer;)V
+#getWebBindingInitializer()Lorg/springframework/web/bind/support/WebBindingInitializer;
+#setArgumentResolverConfigurer(Lorg/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer;)V
+#getArgumentResolverConfigurer()Lorg/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer;
+#setReactiveAdapterRegistry(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#getReactiveAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#afterPropertiesSet()V
+#supports(Ljava/lang/Object;)Z
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@6.0.0
+#handleError(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/AbstractNamedValueArgumentResolver$NamedValueInfo
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;ZLjava/lang/String;)V

+###org/springframework/web/reactive/result/method/annotation/SessionAttributeMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/reactive/result/method/annotation/ModelMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/RequestHeaderMapMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/ExpressionValueMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/reactive/result/method/annotation/SessionStatusMethodArgumentResolver
@5.0.0.RELEASE
+#<init>()V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler
@5.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)V
+#<init>(Ljava/util/List;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supports(Lorg/springframework/web/reactive/HandlerResult;)Z
+#handleResult(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/HandlerResult;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/AbstractNamedValueArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/RequestHeaderMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler
@5.0.0.RELEASE
+#getMessageWriters()Ljava/util/List;

+###org/springframework/web/reactive/result/method/annotation/CookieValueMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/reactive/result/method/annotation/HttpEntityMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/RequestBodyMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/PrincipalMethodArgumentResolver
@5.2.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver
@5.0.0.RELEASE
+#getMessageReaders()Ljava/util/List;

+###org/springframework/web/reactive/result/method/annotation/RequestAttributeMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z

+###org/springframework/web/reactive/result/method/annotation/AbstractNamedValueSyncArgumentResolver
@5.0.0.RELEASE
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/ErrorsMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.3.0
+#getPartValues(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/bind/annotation/RequestPart;ZLorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Flux;

+###org/springframework/web/reactive/result/method/annotation/RequestParamMapMethodArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping
@5.0.0.RELEASE
+#<init>()V
+#getHandlerMethods()Ljava/util/Map;
+#registerMapping(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#unregisterMapping(Ljava/lang/Object;)V
+#afterPropertiesSet()V
+#getHandlerInternal(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/InvocableHandlerMethod
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/method/HandlerMethod;)V
+#<init>(Ljava/lang/Object;Ljava/lang/reflect/Method;)V
+#setArgumentResolvers(Ljava/util/List;)V
+#getResolvers()Ljava/util/List;
+#setParameterNameDiscoverer(Lorg/springframework/core/ParameterNameDiscoverer;)V
+#getParameterNameDiscoverer()Lorg/springframework/core/ParameterNameDiscoverer;
+#invoke(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/BindingContext;[Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@5.0.1.RELEASE
+#setReactiveAdapterRegistry(Lorg/springframework/core/ReactiveAdapterRegistry;)V

+###org/springframework/web/reactive/result/method/HandlerMethodArgumentResolver
@5.0.0.RELEASE
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/method/RequestMappingInfo
@5.0.0.RELEASE
+#<init>(Ljava/lang/String;Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestCondition;)V
+#<init>(Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestCondition;)V
+#<init>(Lorg/springframework/web/reactive/result/method/RequestMappingInfo;Lorg/springframework/web/reactive/result/condition/RequestCondition;)V
+#getName()Ljava/lang/String;
+#getPatternsCondition()Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;
+#getMethodsCondition()Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;
+#getParamsCondition()Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;
+#getHeadersCondition()Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;
+#getConsumesCondition()Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;
+#getProducesCondition()Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;
+#getCustomCondition()Lorg/springframework/web/reactive/result/condition/RequestCondition;
+#combine(Lorg/springframework/web/reactive/result/method/RequestMappingInfo;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo;
+#compareTo(Lorg/springframework/web/reactive/result/method/RequestMappingInfo;Lorg/springframework/web/server/ServerWebExchange;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#paths([Ljava/lang/String;)Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
@5.3.0
+#getDirectPaths()Ljava/util/Set;
@5.3.4
*#<init>(Ljava/lang/String;Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestCondition;)V[deprecated]
*#<init>(Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;Lorg/springframework/web/reactive/result/condition/RequestCondition;)V[deprecated]
*#<init>(Lorg/springframework/web/reactive/result/method/RequestMappingInfo;Lorg/springframework/web/reactive/result/condition/RequestCondition;)V[deprecated]
+#mutate()Lorg/springframework/web/reactive/result/method/RequestMappingInfo$Builder;

+###org/springframework/web/reactive/result/method/SyncHandlerMethodArgumentResolver
@5.0.0.RELEASE
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/HandlerResultHandlerSupport
@5.0.0.RELEASE
+#getAdapterRegistry()Lorg/springframework/core/ReactiveAdapterRegistry;
+#getContentTypeResolver()Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;
+#setOrder(I)V
+#getOrder()I

+###org/springframework/web/reactive/result/condition/MediaTypeExpression
@5.0.0.RELEASE
+#getMediaType()Lorg/springframework/http/MediaType;
+#isNegated()Z

+###org/springframework/web/reactive/result/condition/AbstractRequestCondition
@5.0.0.RELEASE
+#<init>()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#isEmpty()Z

+###org/springframework/web/reactive/result/condition/ProducesRequestCondition
@5.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;[Ljava/lang/String;)V
+#<init>([Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)V
+#getExpressions()Ljava/util/Set;
+#getProducibleMediaTypes()Ljava/util/Set;
+#isEmpty()Z
+#combine(Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;)Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;
+#compareTo(Lorg/springframework/web/reactive/result/condition/ProducesRequestCondition;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
@5.2.0.RELEASE
+#clearMediaTypesAttribute(Lorg/springframework/web/server/ServerWebExchange;)V

+###org/springframework/web/reactive/result/condition/NameValueExpression
@5.0.0.RELEASE
+#getName()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#isNegated()Z

+###org/springframework/web/reactive/result/condition/RequestCondition
@5.0.0.RELEASE
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I

+###org/springframework/web/reactive/result/condition/PatternsRequestCondition
@5.0.0.RELEASE
+#<init>([Lorg/springframework/web/util/pattern/PathPattern;)V
+#<init>(Ljava/util/List;)V
+#getPatterns()Ljava/util/Set;
+#combine(Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;)Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;
+#compareTo(Lorg/springframework/web/reactive/result/condition/PatternsRequestCondition;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
@5.3.0
+#getDirectPaths()Ljava/util/Set;

+###org/springframework/web/reactive/result/condition/ParamsRequestCondition
@5.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#getExpressions()Ljava/util/Set;
+#combine(Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;)Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;
+#compareTo(Lorg/springframework/web/reactive/result/condition/ParamsRequestCondition;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/condition/ConsumesRequestCondition
@5.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#<init>([Ljava/lang/String;[Ljava/lang/String;)V
+#getExpressions()Ljava/util/Set;
+#getConsumableMediaTypes()Ljava/util/Set;
+#isEmpty()Z
+#combine(Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;)Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;
+#compareTo(Lorg/springframework/web/reactive/result/condition/ConsumesRequestCondition;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;
@5.2.0.RELEASE
+#setBodyRequired(Z)V
+#isBodyRequired()Z

+###org/springframework/web/reactive/result/condition/RequestMethodsRequestCondition
@5.0.0.RELEASE
+#<init>([Lorg/springframework/web/bind/annotation/RequestMethod;)V
+#getMethods()Ljava/util/Set;
+#combine(Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;)Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;
+#compareTo(Lorg/springframework/web/reactive/result/condition/RequestMethodsRequestCondition;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/condition/CompositeRequestCondition
@5.0.0.RELEASE
+#<init>([Lorg/springframework/web/reactive/result/condition/RequestCondition;)V
+#isEmpty()Z
+#getConditions()Ljava/util/List;
+#combine(Lorg/springframework/web/reactive/result/condition/CompositeRequestCondition;)Lorg/springframework/web/reactive/result/condition/CompositeRequestCondition;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/CompositeRequestCondition;
+#compareTo(Lorg/springframework/web/reactive/result/condition/CompositeRequestCondition;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/condition/RequestConditionHolder
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/result/condition/RequestCondition;)V
+#getCondition()Lorg/springframework/web/reactive/result/condition/RequestCondition;
+#combine(Lorg/springframework/web/reactive/result/condition/RequestConditionHolder;)Lorg/springframework/web/reactive/result/condition/RequestConditionHolder;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/RequestConditionHolder;
+#compareTo(Lorg/springframework/web/reactive/result/condition/RequestConditionHolder;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/condition/HeadersRequestCondition
@5.0.0.RELEASE
+#<init>([Ljava/lang/String;)V
+#getExpressions()Ljava/util/Set;
+#combine(Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;)Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;
+#compareTo(Lorg/springframework/web/reactive/result/condition/HeadersRequestCondition;Lorg/springframework/web/server/ServerWebExchange;)I
+#compareTo(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)I
+#getMatchingCondition(Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
+#combine(Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/SimpleHandlerAdapter
@5.0.0.RELEASE
+#<init>()V
+#supports(Ljava/lang/Object;)Z
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Object;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/view/Rendering$RedirectBuilder
@5.0.0.RELEASE
+#contextRelative(Z)Lorg/springframework/web/reactive/result/view/Rendering$RedirectBuilder;
+#propagateQuery(Z)Lorg/springframework/web/reactive/result/view/Rendering$RedirectBuilder;

+###org/springframework/web/reactive/result/view/RedirectView
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatus;)V
+#setContextRelative(Z)V
+#isContextRelative()Z
+#setStatusCode(Lorg/springframework/http/HttpStatus;)V
+#getStatusCode()Lorg/springframework/http/HttpStatus;
+#setPropagateQuery(Z)V
+#isPropagateQuery()Z
+#setHosts([Ljava/lang/String;)V
+#getHosts()[Ljava/lang/String;
+#afterPropertiesSet()V
+#isRedirectView()Z
+#checkResourceExists(Ljava/util/Locale;)Z
@6.0.0
+#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatusCode;)V
+#setStatusCode(Lorg/springframework/http/HttpStatusCode;)V
+#getStatusCode()Lorg/springframework/http/HttpStatusCode;
-#<init>(Ljava/lang/String;Lorg/springframework/http/HttpStatus;)V
-#setStatusCode(Lorg/springframework/http/HttpStatus;)V
-#getStatusCode()Lorg/springframework/http/HttpStatus;
-#afterPropertiesSet()V

+###org/springframework/web/reactive/result/view/script/ScriptTemplateView
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setEngine(Ljavax/script/ScriptEngine;)V
+#setEngineName(Ljava/lang/String;)V
+#setSharedEngine(Ljava/lang/Boolean;)V
+#setScripts([Ljava/lang/String;)V
+#setRenderObject(Ljava/lang/String;)V
+#setRenderFunction(Ljava/lang/String;)V
+#setResourceLoaderPath(Ljava/lang/String;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#checkResourceExists(Ljava/util/Locale;)Z
@5.2.0.RELEASE
+#setEngineSupplier(Ljava/util/function/Supplier;)V

+###org/springframework/web/reactive/result/view/script/RenderingContext
@5.0.0.RELEASE
+#<init>(Lorg/springframework/context/ApplicationContext;Ljava/util/Locale;Ljava/util/function/Function;Ljava/lang/String;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#getLocale()Ljava/util/Locale;
+#getTemplateLoader()Ljava/util/function/Function;
+#getUrl()Ljava/lang/String;

+###org/springframework/web/reactive/result/view/script/ScriptTemplateConfig
@5.0.0.RELEASE
+#getEngine()Ljavax/script/ScriptEngine;
+#getEngineName()Ljava/lang/String;
+#isSharedEngine()Ljava/lang/Boolean;
+#getScripts()[Ljava/lang/String;
+#getRenderObject()Ljava/lang/String;
+#getRenderFunction()Ljava/lang/String;
+#getCharset()Ljava/nio/charset/Charset;
+#getResourceLoaderPath()Ljava/lang/String;
@5.2.0.RELEASE
+#getEngineSupplier()Ljava/util/function/Supplier;

+###org/springframework/web/reactive/result/view/script/ScriptTemplateViewResolver
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/web/reactive/result/view/script/ScriptTemplateConfigurer
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#setEngine(Ljavax/script/ScriptEngine;)V
+#getEngine()Ljavax/script/ScriptEngine;
+#setEngineName(Ljava/lang/String;)V
+#getEngineName()Ljava/lang/String;
+#setSharedEngine(Ljava/lang/Boolean;)V
+#isSharedEngine()Ljava/lang/Boolean;
+#setScripts([Ljava/lang/String;)V
+#getScripts()[Ljava/lang/String;
+#setRenderObject(Ljava/lang/String;)V
+#getRenderObject()Ljava/lang/String;
+#setRenderFunction(Ljava/lang/String;)V
+#getRenderFunction()Ljava/lang/String;
+#setCharset(Ljava/nio/charset/Charset;)V
+#getCharset()Ljava/nio/charset/Charset;
+#setResourceLoaderPath(Ljava/lang/String;)V
+#getResourceLoaderPath()Ljava/lang/String;
@5.2.0.RELEASE
+#setEngineSupplier(Ljava/util/function/Supplier;)V
+#getEngineSupplier()Ljava/util/function/Supplier;

+###org/springframework/web/reactive/result/view/ViewResolverSupport
@5.0.0.RELEASE
+#<init>()V
+#setSupportedMediaTypes(Ljava/util/List;)V
+#getSupportedMediaTypes()Ljava/util/List;
+#setDefaultCharset(Ljava/nio/charset/Charset;)V
+#getDefaultCharset()Ljava/nio/charset/Charset;
+#setOrder(I)V
+#getOrder()I

+###org/springframework/web/reactive/result/view/RequestDataValueProcessor
@5.0.0.RELEASE
+#processAction(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#processFormFieldValue(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getExtraHiddenFields(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Map;
+#processUrl(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)Ljava/lang/String;

+###org/springframework/web/reactive/result/view/AbstractUrlBasedView
@5.0.0.RELEASE
+#setUrl(Ljava/lang/String;)V
+#getUrl()Ljava/lang/String;
+#afterPropertiesSet()V
+#checkResourceExists(Ljava/util/Locale;)Z
+#toString()Ljava/lang/String;

+###org/springframework/web/reactive/result/view/View
@5.0.0.RELEASE
+#getSupportedMediaTypes()Ljava/util/List;
+#isRedirectView()Z
+#render(Ljava/util/Map;Lorg/springframework/http/MediaType;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/view/UrlBasedViewResolver
@5.0.0.RELEASE
+#<init>()V
+#setViewClass(Ljava/lang/Class;)V
+#setPrefix(Ljava/lang/String;)V
+#setSuffix(Ljava/lang/String;)V
+#setViewNames([Ljava/lang/String;)V
+#setRedirectViewProvider(Ljava/util/function/Function;)V
+#setRequestContextAttribute(Ljava/lang/String;)V
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#afterPropertiesSet()V
+#resolveViewName(Ljava/lang/String;Ljava/util/Locale;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/view/Rendering$Builder
@5.0.0.RELEASE
+#modelAttribute(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#modelAttribute(Ljava/lang/Object;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#modelAttributes([Ljava/lang/Object;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#model(Ljava/util/Map;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#header(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#headers(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#build()Lorg/springframework/web/reactive/result/view/Rendering;
@6.0.0
+#status(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
-#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;

+###org/springframework/web/reactive/result/view/RequestContext
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;Lorg/springframework/context/MessageSource;)V
+#<init>(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;Lorg/springframework/context/MessageSource;Lorg/springframework/web/reactive/result/view/RequestDataValueProcessor;)V
+#getMessageSource()Lorg/springframework/context/MessageSource;
+#getModel()Ljava/util/Map;
+#getLocale()Ljava/util/Locale;
+#getTimeZone()Ljava/util/TimeZone;
+#changeLocale(Ljava/util/Locale;)V
+#changeLocale(Ljava/util/Locale;Ljava/util/TimeZone;)V
+#setDefaultHtmlEscape(Z)V
+#isDefaultHtmlEscape()Z
+#getDefaultHtmlEscape()Ljava/lang/Boolean;
+#getRequestDataValueProcessor()Lorg/springframework/web/reactive/result/view/RequestDataValueProcessor;
+#getContextPath()Ljava/lang/String;
+#getContextUrl(Ljava/lang/String;)Ljava/lang/String;
+#getContextUrl(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
+#getRequestPath()Ljava/lang/String;
+#getQueryString()Ljava/lang/String;
+#getMessage(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getMessage(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
+#getMessage(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;
+#getMessage(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/String;
+#getMessage(Ljava/lang/String;)Ljava/lang/String;
+#getMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+#getMessage(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
+#getMessage(Ljava/lang/String;[Ljava/lang/Object;Z)Ljava/lang/String;
+#getMessage(Lorg/springframework/context/MessageSourceResolvable;)Ljava/lang/String;
+#getMessage(Lorg/springframework/context/MessageSourceResolvable;Z)Ljava/lang/String;
+#getErrors(Ljava/lang/String;)Lorg/springframework/validation/Errors;
+#getErrors(Ljava/lang/String;Z)Lorg/springframework/validation/Errors;
+#getBindStatus(Ljava/lang/String;)Lorg/springframework/web/reactive/result/view/BindStatus;
+#getBindStatus(Ljava/lang/String;Z)Lorg/springframework/web/reactive/result/view/BindStatus;

+###org/springframework/web/reactive/result/view/AbstractView
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#setSupportedMediaTypes(Ljava/util/List;)V
+#getSupportedMediaTypes()Ljava/util/List;
+#setDefaultCharset(Ljava/nio/charset/Charset;)V
+#getDefaultCharset()Ljava/nio/charset/Charset;
+#setRequestContextAttribute(Ljava/lang/String;)V
+#getRequestContextAttribute()Ljava/lang/String;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#getApplicationContext()Lorg/springframework/context/ApplicationContext;
+#render(Ljava/util/Map;Lorg/springframework/http/MediaType;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
+#toString()Ljava/lang/String;
@5.1.0.RELEASE
+#setBeanName(Ljava/lang/String;)V
+#getBeanName()Ljava/lang/String;

+###org/springframework/web/reactive/result/view/Rendering
@5.0.0.RELEASE
+#view()Ljava/lang/Object;
+#modelAttributes()Ljava/util/Map;
+#status()Lorg/springframework/http/HttpStatus;
+#headers()Lorg/springframework/http/HttpHeaders;
+#view(Ljava/lang/String;)Lorg/springframework/web/reactive/result/view/Rendering$Builder;
+#redirectTo(Ljava/lang/String;)Lorg/springframework/web/reactive/result/view/Rendering$RedirectBuilder;
@6.0.0
+#status()Lorg/springframework/http/HttpStatusCode;
-#status()Lorg/springframework/http/HttpStatus;

+###org/springframework/web/reactive/result/view/HttpMessageWriterView
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/codec/Encoder;)V
+#<init>(Lorg/springframework/http/codec/HttpMessageWriter;)V
+#getMessageWriter()Lorg/springframework/http/codec/HttpMessageWriter;
+#getSupportedMediaTypes()Ljava/util/List;
+#setModelKeys(Ljava/util/Set;)V
+#getModelKeys()Ljava/util/Set;
+#render(Ljava/util/Map;Lorg/springframework/http/MediaType;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/view/ViewResolver
@5.0.0.RELEASE
+#resolveViewName(Ljava/lang/String;Ljava/util/Locale;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/view/ViewResolutionResultHandler
@5.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;)V
+#<init>(Ljava/util/List;Lorg/springframework/web/reactive/accept/RequestedContentTypeResolver;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#getViewResolvers()Ljava/util/List;
+#setDefaultViews(Ljava/util/List;)V
+#getDefaultViews()Ljava/util/List;
+#supports(Lorg/springframework/web/reactive/HandlerResult;)Z
+#handleResult(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/HandlerResult;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/result/view/freemarker/FreeMarkerViewResolver
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/lang/String;Ljava/lang/String;)V

+###org/springframework/web/reactive/result/view/freemarker/FreeMarkerConfigurer
@5.0.0.RELEASE
+#<init>()V
+#setConfiguration(Lfreemarker/template/Configuration;)V
+#afterPropertiesSet()V
+#getConfiguration()Lfreemarker/template/Configuration;

+###org/springframework/web/reactive/result/view/freemarker/FreeMarkerConfig
@5.0.0.RELEASE
+#getConfiguration()Lfreemarker/template/Configuration;

+###org/springframework/web/reactive/result/view/freemarker/FreeMarkerView
@5.0.0.RELEASE
+#<init>()V
+#setConfiguration(Lfreemarker/template/Configuration;)V
+#setEncoding(Ljava/lang/String;)V
+#afterPropertiesSet()V
+#checkResourceExists(Ljava/util/Locale;)Z
@5.2.0.RELEASE
+#setExposeSpringMacroHelpers(Z)V

+###org/springframework/web/reactive/result/view/BindStatus
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/result/view/RequestContext;Ljava/lang/String;Z)V
+#getPath()Ljava/lang/String;
+#getExpression()Ljava/lang/String;
+#getValue()Ljava/lang/Object;
+#getValueType()Ljava/lang/Class;
+#getActualValue()Ljava/lang/Object;
+#getDisplayValue()Ljava/lang/String;
+#isError()Z
+#getErrorCodes()[Ljava/lang/String;
+#getErrorCode()Ljava/lang/String;
+#getErrorMessages()[Ljava/lang/String;
+#getErrorMessage()Ljava/lang/String;
+#getErrorMessagesAsString(Ljava/lang/String;)Ljava/lang/String;
+#getErrors()Lorg/springframework/validation/Errors;
+#getEditor()Ljava/beans/PropertyEditor;
+#findEditor(Ljava/lang/Class;)Ljava/beans/PropertyEditor;
+#toString()Ljava/lang/String;

+###org/springframework/web/reactive/HandlerResult
@5.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/MethodParameter;)V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;)V
+#getHandler()Ljava/lang/Object;
+#getReturnValue()Ljava/lang/Object;
+#getReturnType()Lorg/springframework/core/ResolvableType;
+#getReturnTypeSource()Lorg/springframework/core/MethodParameter;
+#getBindingContext()Lorg/springframework/web/reactive/BindingContext;
+#getModel()Lorg/springframework/ui/Model;
+#setExceptionHandler(Ljava/util/function/Function;)Lorg/springframework/web/reactive/HandlerResult;
+#hasExceptionHandler()Z
+#applyExceptionHandler(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
@6.0.0
+#setExceptionHandler(Lorg/springframework/web/reactive/DispatchExceptionHandler;)Lorg/springframework/web/reactive/HandlerResult;
+#getExceptionHandler()Lorg/springframework/web/reactive/DispatchExceptionHandler;
*#setExceptionHandler(Ljava/util/function/Function;)Lorg/springframework/web/reactive/HandlerResult;[deprecated]
*#hasExceptionHandler()Z[deprecated]
*#applyExceptionHandler(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;[deprecated]

+###org/springframework/web/reactive/socket/WebSocketMessage
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/socket/WebSocketMessage$Type;Lorg/springframework/core/io/buffer/DataBuffer;)V
+#getType()Lorg/springframework/web/reactive/socket/WebSocketMessage$Type;
+#getPayload()Lorg/springframework/core/io/buffer/DataBuffer;
+#getPayloadAsText()Ljava/lang/String;
+#retain()Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#release()V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@5.0.5.RELEASE
+#getPayloadAsText(Ljava/nio/charset/Charset;)Ljava/lang/String;
@5.1.0.RELEASE
+#toString()Ljava/lang/String;
@5.3.0
+#<init>(Lorg/springframework/web/reactive/socket/WebSocketMessage$Type;Lorg/springframework/core/io/buffer/DataBuffer;Ljava/lang/Object;)V
+#getNativeMessage()Ljava/lang/Object;

+###org/springframework/web/reactive/socket/adapter/StandardWebSocketHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/util/function/Function;)V
+#onOpen(Ljavax/websocket/Session;Ljavax/websocket/EndpointConfig;)V
+#onClose(Ljavax/websocket/Session;Ljavax/websocket/CloseReason;)V
+#onError(Ljavax/websocket/Session;Ljava/lang/Throwable;)V
@6.0.0
+#onOpen(Ljakarta/websocket/Session;Ljakarta/websocket/EndpointConfig;)V
+#onClose(Ljakarta/websocket/Session;Ljakarta/websocket/CloseReason;)V
+#onError(Ljakarta/websocket/Session;Ljava/lang/Throwable;)V
-#onOpen(Ljavax/websocket/Session;Ljavax/websocket/EndpointConfig;)V
-#onClose(Ljavax/websocket/Session;Ljavax/websocket/CloseReason;)V
-#onError(Ljavax/websocket/Session;Ljava/lang/Throwable;)V

+###org/springframework/web/reactive/socket/adapter/JettyWebSocketHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/util/function/Function;)V
+#onWebSocketConnect(Lorg/eclipse/jetty/websocket/api/Session;)V
+#onWebSocketText(Ljava/lang/String;)V
+#onWebSocketBinary([BII)V
+#onWebSocketFrame(Lorg/eclipse/jetty/websocket/api/extensions/Frame;)V
+#onWebSocketClose(ILjava/lang/String;)V
+#onWebSocketError(Ljava/lang/Throwable;)V
@6.0.0
+#onWebSocketFrame(Lorg/eclipse/jetty/websocket/api/Frame;)V
-#onWebSocketFrame(Lorg/eclipse/jetty/websocket/api/extensions/Frame;)V

+###org/springframework/web/reactive/socket/adapter/NettyWebSocketSessionSupport
@5.0.0.RELEASE
+#bufferFactory()Lorg/springframework/core/io/buffer/NettyDataBufferFactory;
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;

+###org/springframework/web/reactive/socket/adapter/UndertowWebSocketSession
@5.0.0.RELEASE
+#<init>(Lio/undertow/websockets/core/WebSocketChannel;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#<init>(Lio/undertow/websockets/core/WebSocketChannel;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V
+#close(Lorg/springframework/web/reactive/socket/CloseStatus;)Lreactor/core/publisher/Mono;
@5.3.0
+#<init>(Lio/undertow/websockets/core/WebSocketChannel;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
*#<init>(Lio/undertow/websockets/core/WebSocketChannel;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]
@5.3.1
+#isOpen()Z
@6.0.0
-#<init>(Lio/undertow/websockets/core/WebSocketChannel;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]

+###org/springframework/web/reactive/socket/adapter/AbstractListenerWebSocketSession
@5.0.0.RELEASE
+#<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V
+#receive()Lreactor/core/publisher/Flux;
+#send(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#onSubscribe(Lorg/reactivestreams/Subscription;)V
+#onNext(Ljava/lang/Void;)V
+#onError(Ljava/lang/Throwable;)V
+#onComplete()V
+#onNext(Ljava/lang/Object;)V
@5.3.0
+#<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
*#<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]
+#closeStatus()Lreactor/core/publisher/Mono;
@6.0.0
-#<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]

+###org/springframework/web/reactive/socket/adapter/JettyWebSocketSession
@5.0.0.RELEASE
+#<init>(Lorg/eclipse/jetty/websocket/api/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#<init>(Lorg/eclipse/jetty/websocket/api/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V
+#close(Lorg/springframework/web/reactive/socket/CloseStatus;)Lreactor/core/publisher/Mono;
@5.3.0
+#<init>(Lorg/eclipse/jetty/websocket/api/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
*#<init>(Lorg/eclipse/jetty/websocket/api/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]
@5.3.1
+#isOpen()Z
@6.0.0
-#<init>(Lorg/eclipse/jetty/websocket/api/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]

+###org/springframework/web/reactive/socket/adapter/AbstractWebSocketSession
@5.0.0.RELEASE
+#getId()Ljava/lang/String;
+#getHandshakeInfo()Lorg/springframework/web/reactive/socket/HandshakeInfo;
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#receive()Lreactor/core/publisher/Flux;
+#send(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#textMessage(Ljava/lang/String;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#binaryMessage(Ljava/util/function/Function;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#pingMessage(Ljava/util/function/Function;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#pongMessage(Ljava/util/function/Function;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#toString()Ljava/lang/String;
@5.1.0.RELEASE
+#getAttributes()Ljava/util/Map;

+###org/springframework/web/reactive/socket/adapter/TomcatWebSocketSession
@5.0.0.RELEASE
+#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V
@5.3.0
+#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
*#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]
@6.0.0
+#<init>(Ljakarta/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#<init>(Ljakarta/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
-#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
-#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
-#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]

+###org/springframework/web/reactive/socket/adapter/StandardWebSocketSession
@5.0.0.RELEASE
+#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V
+#close(Lorg/springframework/web/reactive/socket/CloseStatus;)Lreactor/core/publisher/Mono;
@5.3.0
+#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
*#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]
@5.3.1
+#isOpen()Z
@6.0.0
+#<init>(Ljakarta/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
+#<init>(Ljakarta/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
-#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
-#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/Sinks$Empty;)V
-#<init>(Ljavax/websocket/Session;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/DataBufferFactory;Lreactor/core/publisher/MonoProcessor;)V[deprecated]

+###org/springframework/web/reactive/socket/adapter/AbstractListenerWebSocketSession$WebSocketSendProcessor
@5.0.0.RELEASE
+#setReadyToSend(Z)V

+###org/springframework/web/reactive/socket/adapter/ReactorNettyWebSocketSession$WebSocketConnection
@5.0.0.RELEASE
+#<init>(Lreactor/ipc/netty/http/websocket/WebsocketInbound;Lreactor/ipc/netty/http/websocket/WebsocketOutbound;)V
+#getInbound()Lreactor/ipc/netty/http/websocket/WebsocketInbound;
+#getOutbound()Lreactor/ipc/netty/http/websocket/WebsocketOutbound;
@5.1.0.RELEASE
+#<init>(Lreactor/netty/http/websocket/WebsocketInbound;Lreactor/netty/http/websocket/WebsocketOutbound;)V
+#getInbound()Lreactor/netty/http/websocket/WebsocketInbound;
+#getOutbound()Lreactor/netty/http/websocket/WebsocketOutbound;
-#<init>(Lreactor/ipc/netty/http/websocket/WebsocketInbound;Lreactor/ipc/netty/http/websocket/WebsocketOutbound;)V
-#getInbound()Lreactor/ipc/netty/http/websocket/WebsocketInbound;
-#getOutbound()Lreactor/ipc/netty/http/websocket/WebsocketOutbound;

+###org/springframework/web/reactive/socket/adapter/UndertowWebSocketHandlerAdapter
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/socket/adapter/UndertowWebSocketSession;)V

+###org/springframework/web/reactive/socket/adapter/ReactorNettyWebSocketSession
@5.0.0.RELEASE
+#<init>(Lreactor/ipc/netty/http/websocket/WebsocketInbound;Lreactor/ipc/netty/http/websocket/WebsocketOutbound;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/NettyDataBufferFactory;)V
+#receive()Lreactor/core/publisher/Flux;
+#send(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#close(Lorg/springframework/web/reactive/socket/CloseStatus;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#<init>(Lreactor/netty/http/websocket/WebsocketInbound;Lreactor/netty/http/websocket/WebsocketOutbound;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/NettyDataBufferFactory;)V
+#<init>(Lreactor/netty/http/websocket/WebsocketInbound;Lreactor/netty/http/websocket/WebsocketOutbound;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/NettyDataBufferFactory;I)V
-#<init>(Lreactor/ipc/netty/http/websocket/WebsocketInbound;Lreactor/ipc/netty/http/websocket/WebsocketOutbound;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/NettyDataBufferFactory;)V
@5.3.0
+#closeStatus()Lreactor/core/publisher/Mono;
@5.3.1
+#isOpen()Z
@5.3.4
+#getChannelId()Lio/netty/channel/ChannelId;

+###org/springframework/web/reactive/socket/HandshakeInfo
@5.0.0.RELEASE
+#<init>(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lreactor/core/publisher/Mono;Ljava/lang/String;)V
+#getUri()Ljava/net/URI;
+#getHeaders()Lorg/springframework/http/HttpHeaders;
+#getPrincipal()Lreactor/core/publisher/Mono;
+#getSubProtocol()Ljava/lang/String;
+#toString()Ljava/lang/String;
@5.1.0.RELEASE
+#<init>(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lreactor/core/publisher/Mono;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/util/Map;Ljava/lang/String;)V
+#getRemoteAddress()Ljava/net/InetSocketAddress;
+#getAttributes()Ljava/util/Map;
+#getLogPrefix()Ljava/lang/String;
@5.3.5
*#<init>(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lreactor/core/publisher/Mono;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/util/Map;Ljava/lang/String;)V[deprecated]
+#<init>(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/util/MultiValueMap;Lreactor/core/publisher/Mono;Ljava/lang/String;Ljava/net/InetSocketAddress;Ljava/util/Map;Ljava/lang/String;)V
+#getCookies()Lorg/springframework/util/MultiValueMap;

+###org/springframework/web/reactive/socket/CloseStatus
@5.0.0.RELEASE
+#<init>(I)V
+#<init>(ILjava/lang/String;)V
+#getCode()I
+#getReason()Ljava/lang/String;
+#withReason(Ljava/lang/String;)Lorg/springframework/web/reactive/socket/CloseStatus;
+#equalsCode(Lorg/springframework/web/reactive/socket/CloseStatus;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
@5.3.0
*#equalsCode(Lorg/springframework/web/reactive/socket/CloseStatus;)Z[deprecated]
+#create(ILjava/lang/String;)Lorg/springframework/web/reactive/socket/CloseStatus;

+###org/springframework/web/reactive/socket/server/WebSocketService
@5.0.0.RELEASE
+#handleRequest(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/server/upgrade/ReactorNettyRequestUpgradeStrategy
@5.0.0.RELEASE
+#<init>()V
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#setMaxFramePayloadLength(Ljava/lang/Integer;)V
+#getMaxFramePayloadLength()I
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.2.4.RELEASE
+#setHandlePing(Z)V
+#getHandlePing()Z
@5.2.6.RELEASE
+#<init>(Ljava/util/function/Supplier;)V
+#getWebsocketServerSpec()Lreactor/netty/http/server/WebsocketServerSpec;
*#setMaxFramePayloadLength(Ljava/lang/Integer;)V[deprecated]
*#getMaxFramePayloadLength()I[deprecated]
*#setHandlePing(Z)V[deprecated]
*#getHandlePing()Z[deprecated]

+###org/springframework/web/reactive/socket/server/upgrade/UndertowRequestUpgradeStrategy
@5.0.0.RELEASE
+#<init>()V
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/server/upgrade/TomcatRequestUpgradeStrategy
@5.0.0.RELEASE
+#<init>()V
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.0.2.RELEASE
+#setAsyncSendTimeout(Ljava/lang/Long;)V
+#getAsyncSendTimeout()Ljava/lang/Long;
+#setMaxSessionIdleTimeout(Ljava/lang/Long;)V
+#getMaxSessionIdleTimeout()Ljava/lang/Long;
+#setMaxTextMessageBufferSize(Ljava/lang/Integer;)V
+#getMaxTextMessageBufferSize()Ljava/lang/Integer;
+#setMaxBinaryMessageBufferSize(Ljava/lang/Integer;)V
+#getMaxBinaryMessageBufferSize()Ljava/lang/Integer;
@5.1.0.RELEASE
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@6.0.0
-#setAsyncSendTimeout(Ljava/lang/Long;)V
-#getAsyncSendTimeout()Ljava/lang/Long;
-#setMaxSessionIdleTimeout(Ljava/lang/Long;)V
-#getMaxSessionIdleTimeout()Ljava/lang/Long;
-#setMaxTextMessageBufferSize(Ljava/lang/Integer;)V
-#getMaxTextMessageBufferSize()Ljava/lang/Integer;
-#setMaxBinaryMessageBufferSize(Ljava/lang/Integer;)V
-#getMaxBinaryMessageBufferSize()Ljava/lang/Integer;
-#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/server/upgrade/JettyRequestUpgradeStrategy
@5.0.0.RELEASE
+#<init>()V
+#start()V
+#stop()V
+#isRunning()Z
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.0.2.RELEASE
+#setWebSocketPolicy(Lorg/eclipse/jetty/websocket/api/WebSocketPolicy;)V
+#getWebSocketPolicy()Lorg/eclipse/jetty/websocket/api/WebSocketPolicy;
@5.1.0.RELEASE
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
-#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@6.0.0
-#setWebSocketPolicy(Lorg/eclipse/jetty/websocket/api/WebSocketPolicy;)V
-#getWebSocketPolicy()Lorg/eclipse/jetty/websocket/api/WebSocketPolicy;
-#start()V
-#stop()V
-#isRunning()Z

+###org/springframework/web/reactive/socket/server/RequestUpgradeStrategy
@5.0.0.RELEASE
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
*#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;[deprecated]
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
@6.0.0
-#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;)Lreactor/core/publisher/Mono;[deprecated]

+###org/springframework/web/reactive/socket/server/support/HandshakeWebSocketService
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/web/reactive/socket/server/RequestUpgradeStrategy;)V
+#getUpgradeStrategy()Lorg/springframework/web/reactive/socket/server/RequestUpgradeStrategy;
+#isRunning()Z
+#start()V
+#stop()V
+#handleRequest(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#setSessionAttributePredicate(Ljava/util/function/Predicate;)V
+#getSessionAttributePredicate()Ljava/util/function/Predicate;

+###org/springframework/web/reactive/socket/server/support/WebSocketHandlerAdapter
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/web/reactive/socket/server/WebSocketService;)V
+#getWebSocketService()Lorg/springframework/web/reactive/socket/server/WebSocketService;
+#supports(Ljava/lang/Object;)Z
+#handle(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
@5.3.0
+#setOrder(I)V
+#getOrder()I

+###org/springframework/web/reactive/socket/WebSocketMessage$Type
@5.0.0.RELEASE
+#values()[Lorg/springframework/web/reactive/socket/WebSocketMessage$Type;
+#valueOf(Ljava/lang/String;)Lorg/springframework/web/reactive/socket/WebSocketMessage$Type;

+###org/springframework/web/reactive/socket/client/TomcatWebSocketClient
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/websocket/WebSocketContainer;)V
@6.0.0
+#<init>(Ljakarta/websocket/WebSocketContainer;)V
-#<init>(Ljavax/websocket/WebSocketContainer;)V

+###org/springframework/web/reactive/socket/client/StandardWebSocketClient
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljavax/websocket/WebSocketContainer;)V
+#getWebSocketContainer()Ljavax/websocket/WebSocketContainer;
+#execute(Ljava/net/URI;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
@6.0.0
+#<init>(Ljakarta/websocket/WebSocketContainer;)V
+#getWebSocketContainer()Ljakarta/websocket/WebSocketContainer;
-#<init>(Ljavax/websocket/WebSocketContainer;)V
-#getWebSocketContainer()Ljavax/websocket/WebSocketContainer;

+###org/springframework/web/reactive/socket/client/UndertowWebSocketClient
@5.0.0.RELEASE
+#<init>(Lorg/xnio/XnioWorker;)V
+#<init>(Lorg/xnio/XnioWorker;Ljava/util/function/Consumer;)V
+#getXnioWorker()Lorg/xnio/XnioWorker;
+#getConnectionBuilderConsumer()Ljava/util/function/Consumer;
+#setPoolBufferSize(I)V
+#getPoolBufferSize()I
+#execute(Ljava/net/URI;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
@5.0.8.RELEASE
+#<init>(Lorg/xnio/XnioWorker;Lio/undertow/connector/ByteBufferPool;Ljava/util/function/Consumer;)V
+#setByteBufferPool(Lio/undertow/connector/ByteBufferPool;)V
+#getByteBufferPool()Lio/undertow/connector/ByteBufferPool;
*#setPoolBufferSize(I)V[deprecated]
*#getPoolBufferSize()I[deprecated]
@5.1.0.RELEASE
-#setPoolBufferSize(I)V[deprecated]
-#getPoolBufferSize()I[deprecated]

+###org/springframework/web/reactive/socket/client/JettyWebSocketClient
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/eclipse/jetty/websocket/client/WebSocketClient;)V
+#getJettyClient()Lorg/eclipse/jetty/websocket/client/WebSocketClient;
+#start()V
+#stop()V
+#isRunning()Z
+#execute(Ljava/net/URI;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/client/ReactorNettyWebSocketClient
@5.0.0.RELEASE
+#<init>()V
+#<init>(Ljava/util/function/Consumer;)V
+#getHttpClient()Lreactor/ipc/netty/http/client/HttpClient;
+#execute(Ljava/net/URI;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
@5.1.0.RELEASE
+#<init>(Lreactor/netty/http/client/HttpClient;)V
+#getHttpClient()Lreactor/netty/http/client/HttpClient;
-#<init>(Ljava/util/function/Consumer;)V
-#getHttpClient()Lreactor/ipc/netty/http/client/HttpClient;
@5.2.0.RELEASE
+#setMaxFramePayloadLength(I)V
+#getMaxFramePayloadLength()I
@5.2.4.RELEASE
+#setHandlePing(Z)V
+#getHandlePing()Z
@5.3.0
+#<init>(Lreactor/netty/http/client/HttpClient;Ljava/util/function/Supplier;)V
+#getWebsocketClientSpec()Lreactor/netty/http/client/WebsocketClientSpec;
*#setMaxFramePayloadLength(I)V[deprecated]
*#getMaxFramePayloadLength()I[deprecated]
*#setHandlePing(Z)V[deprecated]
*#getHandlePing()Z[deprecated]

+###org/springframework/web/reactive/socket/client/WebSocketClient
@5.0.0.RELEASE
+#execute(Ljava/net/URI;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/WebSocketHandler
@5.0.0.RELEASE
+#getSubProtocols()Ljava/util/List;
+#handle(Lorg/springframework/web/reactive/socket/WebSocketSession;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/WebSocketSession
@5.0.0.RELEASE
+#getId()Ljava/lang/String;
+#getHandshakeInfo()Lorg/springframework/web/reactive/socket/HandshakeInfo;
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;
+#receive()Lreactor/core/publisher/Flux;
+#send(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#close()Lreactor/core/publisher/Mono;
+#close(Lorg/springframework/web/reactive/socket/CloseStatus;)Lreactor/core/publisher/Mono;
+#textMessage(Ljava/lang/String;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#binaryMessage(Ljava/util/function/Function;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#pingMessage(Ljava/util/function/Function;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
+#pongMessage(Ljava/util/function/Function;)Lorg/springframework/web/reactive/socket/WebSocketMessage;
@5.1.0.RELEASE
+#getAttributes()Ljava/util/Map;
@5.3.0
+#closeStatus()Lreactor/core/publisher/Mono;
@5.3.1
+#isOpen()Z

+###org/springframework/web/reactive/BindingContext
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/web/bind/support/WebBindingInitializer;)V
+#getModel()Lorg/springframework/ui/Model;
+#createDataBinder(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/web/bind/support/WebExchangeDataBinder;
+#createDataBinder(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)Lorg/springframework/web/bind/support/WebExchangeDataBinder;

+###org/springframework/web/reactive/DispatcherHandler
@5.0.0.RELEASE
+#<init>()V
+#<init>(Lorg/springframework/context/ApplicationContext;)V
+#getHandlerMappings()Ljava/util/List;
+#setApplicationContext(Lorg/springframework/context/ApplicationContext;)V
+#handle(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.3.4
+#handlePreFlight(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/HandlerMapping
@5.0.0.RELEASE
+#getHandler(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/server/ServerWebExchangeExtensionsKt
@5.2.0.RELEASE
+#awaitFormData(Lorg/springframework/web/server/ServerWebExchange;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitMultipartData(Lorg/springframework/web/server/ServerWebExchange;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitPrincipal(Lorg/springframework/web/server/ServerWebExchange;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitSession(Lorg/springframework/web/server/ServerWebExchange;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#principal(Lorg/springframework/web/server/ServerWebExchange$Builder;Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/server/ServerWebExchange$Builder;

+###org/springframework/web/reactive/function/server/CoRouterFunctionDsl$onError$3
@5.2.0.RELEASE
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#apply(Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
+#<init>(Lkotlin/jvm/functions/Function3;)V
@6.0.0
+#invoke(Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
+#invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-#apply(Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/function/server/ServerRequestExtensionsKt$awaitBodyOrNull$$inlined$bodyToMono$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/RouterFunctionDslKt
@5.0.0.RELEASE
+#router(Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RouterFunction;

+###org/springframework/web/reactive/function/server/ServerRequestExtensionsKt$awaitBody$$inlined$bodyToMono$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/CoRouterFunctionDsl$onError$3$1
@5.2.0.RELEASE
+#invokeSuspend(Ljava/lang/Object;)Ljava/lang/Object;
+#<init>(Lorg/springframework/web/reactive/function/server/CoRouterFunctionDsl$onError$3;Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)V
+#create(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;
+#invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
@6.0.0
+#<init>(Lkotlin/jvm/functions/Function3;Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)V
+#invoke(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
-#<init>(Lorg/springframework/web/reactive/function/server/CoRouterFunctionDsl$onError$3;Ljava/lang/Throwable;Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)V

+###org/springframework/web/reactive/function/server/ServerRequestExtensionsKt$bodyToFlux$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/ServerRequestExtensionsKt
@5.0.0.RELEASE
@5.2.0.RELEASE
+#bodyToMono(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lreactor/core/publisher/Flux;
+#bodyToFlow(Lorg/springframework/web/reactive/function/server/ServerRequest;)Lkotlinx/coroutines/flow/Flow;
+#awaitBody(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitBodyOrNull(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitFormData(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitMultipartData(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitPrincipal(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitSession(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@5.2.2.RELEASE
+#remoteAddressOrNull(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/net/InetSocketAddress;
+#attributeOrNull(Lorg/springframework/web/reactive/function/server/ServerRequest;Ljava/lang/String;)Ljava/lang/Object;
+#queryParamOrNull(Lorg/springframework/web/reactive/function/server/ServerRequest;Ljava/lang/String;)Ljava/lang/String;
+#contentLengthOrNull(Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;)Ljava/lang/Long;
+#contentTypeOrNull(Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;)Lorg/springframework/http/MediaType;
@5.3.0
+#bodyToFlow(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/reflect/KClass;)Lkotlinx/coroutines/flow/Flow;
+#awaitBody(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitBodyOrNull(Lorg/springframework/web/reactive/function/server/ServerRequest;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/web/reactive/function/server/RouterFunctionDsl$onError$1
@5.2.0.RELEASE
+#test(Ljava/lang/Object;)Z
+#test(Ljava/lang/Throwable;)Z
+#<init>()V
@6.0.0
+#invoke(Ljava/lang/Throwable;)Ljava/lang/Boolean;
+#invoke(Ljava/lang/Object;)Ljava/lang/Object;
-#test(Ljava/lang/Object;)Z
-#test(Ljava/lang/Throwable;)Z

+###org/springframework/web/reactive/function/server/RenderingResponseExtensionsKt
@5.2.0.RELEASE
+#buildAndAwait(Lorg/springframework/web/reactive/function/server/RenderingResponse$Builder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/web/reactive/function/server/ServerResponseExtensionsKt$body$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/RouterFunctionDslKt$sam$i$java_util_function_BiFunction$0
@5.2.0.RELEASE
+#<init>(Lkotlin/jvm/functions/Function2;)V
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/web/reactive/function/server/CoRouterFunctionDsl$onError$2
@5.2.0.RELEASE
+#test(Ljava/lang/Object;)Z
+#test(Ljava/lang/Throwable;)Z
+#<init>()V
@6.0.0
+#invoke(Ljava/lang/Throwable;)Ljava/lang/Boolean;
+#invoke(Ljava/lang/Object;)Ljava/lang/Object;
-#test(Ljava/lang/Object;)Z
-#test(Ljava/lang/Throwable;)Z

+###org/springframework/web/reactive/function/server/ServerResponseExtensionsKt$bodyAndAwait$2
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/CoRouterFunctionDsl
@5.2.0.RELEASE
+#builder$annotations()V
+#getBuilder()Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#and(Lorg/springframework/web/reactive/function/server/RequestPredicate;Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#or(Lorg/springframework/web/reactive/function/server/RequestPredicate;Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#and(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#or(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#and(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#or(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#not(Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#nest(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#nest(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#GET(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#GET(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#GET(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#HEAD(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#HEAD(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#HEAD(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#POST(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#POST(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#POST(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#PUT(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#PUT(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#PUT(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#PATCH(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#PATCH(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#PATCH(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#DELETE(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#DELETE(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#DELETE(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#OPTIONS(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#OPTIONS(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#OPTIONS(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#accept(Lorg/springframework/http/MediaType;Lkotlin/jvm/functions/Function2;)V
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#contentType(Lorg/springframework/http/MediaType;Lkotlin/jvm/functions/Function2;)V
+#contentType([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#headers(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
+#headers(Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#method(Lorg/springframework/http/HttpMethod;Lkotlin/jvm/functions/Function2;)V
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#path(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#path(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#pathExtension(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#pathExtension(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#pathExtension(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
+#pathExtension(Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#queryParam(Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
+#queryParam(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#invoke(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function2;)V
+#invoke(Ljava/lang/String;Lkotlin/jvm/functions/Function2;)V
+#resources(Ljava/lang/String;Lorg/springframework/core/io/Resource;)V
+#resources(Lkotlin/jvm/functions/Function2;)V
+#add(Lorg/springframework/web/reactive/function/server/RouterFunction;)V
+#filter(Lkotlin/jvm/functions/Function3;)V
+#before(Lkotlin/jvm/functions/Function1;)V
+#after(Lkotlin/jvm/functions/Function2;)V
+#onError(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;)V
+#onError(Lkotlin/jvm/functions/Function3;)V
+#build$spring_webflux()Lorg/springframework/web/reactive/function/server/RouterFunction;
+#from(Lorg/springframework/web/reactive/function/server/ServerResponse;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#created(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#ok()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#noContent()Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#accepted()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#permanentRedirect(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#temporaryRedirect(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#seeOther(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#badRequest()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#notFound()Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#unprocessableEntity()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#status(I)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#<init>(Lkotlin/jvm/functions/Function1;)V
@6.0.0
+#getBuilder$annotations()V
+#withAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#withAttributes(Lkotlin/jvm/functions/Function1;)V
+#status(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
-#builder$annotations()V
-#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;

+###org/springframework/web/reactive/function/server/ServerRequestExtensionsKt$bodyToMono$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/CoRouterFunctionDslKt
@5.2.0.RELEASE
+#coRouter(Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RouterFunction;
+#plus(Lorg/springframework/web/reactive/function/server/RouterFunction;Lorg/springframework/web/reactive/function/server/RouterFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;

+###org/springframework/web/reactive/function/server/ServerResponseExtensionsKt$bodyToServerSentEvents$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/RouterFunctionDsl
@5.0.0.RELEASE
+#and(Lorg/springframework/web/reactive/function/server/RequestPredicate;Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#or(Lorg/springframework/web/reactive/function/server/RequestPredicate;Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#and(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#or(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#and(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#or(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#not(Lorg/springframework/web/reactive/function/server/RequestPredicate;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#nest(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#nest(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#GET(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#GET(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#HEAD(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#HEAD(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#POST(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#POST(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#PUT(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#PUT(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#PATCH(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#PATCH(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#DELETE(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#DELETE(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#OPTIONS(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#OPTIONS(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#accept(Lorg/springframework/http/MediaType;Lkotlin/jvm/functions/Function1;)V
+#accept(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#contentType(Lorg/springframework/http/MediaType;Lkotlin/jvm/functions/Function1;)V
+#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#headers(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#headers(Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#method(Lorg/springframework/http/HttpMethod;Lkotlin/jvm/functions/Function1;)V
+#method(Lorg/springframework/http/HttpMethod;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#path(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#path(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#pathExtension(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#pathExtension(Ljava/lang/String;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#pathExtension(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#pathExtension(Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#queryParam(Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
+#queryParam(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#invoke(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#invoke(Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
+#resources(Ljava/lang/String;Lorg/springframework/core/io/Resource;)V
+#resources(Lkotlin/jvm/functions/Function1;)V
+#router$spring_webflux()Lorg/springframework/web/reactive/function/server/RouterFunction;
+#<init>()V
@5.1.0.RELEASE
+#from(Lorg/springframework/web/reactive/function/server/ServerResponse;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#status(I)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#ok()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#created(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#accepted()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#noContent()Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#seeOther(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#temporaryRedirect(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#permanentRedirect(Ljava/net/URI;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#badRequest()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#notFound()Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;
+#unprocessableEntity()Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#invoke()Lorg/springframework/web/reactive/function/server/RouterFunction;
+#invoke()Ljava/lang/Object;
+#<init>(Lkotlin/jvm/functions/Function1;)V
-#router$spring_webflux()Lorg/springframework/web/reactive/function/server/RouterFunction;
-#<init>()V
@5.2.0.RELEASE
+#builder$annotations()V
+#getBuilder()Lorg/springframework/web/reactive/function/server/RouterFunctions$Builder;
+#GET(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#HEAD(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#POST(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#PUT(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#PATCH(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#DELETE(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#OPTIONS(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#accept([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#contentType([Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
+#add(Lorg/springframework/web/reactive/function/server/RouterFunction;)V
+#filter(Lkotlin/jvm/functions/Function2;)V
+#before(Lkotlin/jvm/functions/Function1;)V
+#after(Lkotlin/jvm/functions/Function2;)V
+#onError(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
+#onError(Lkotlin/jvm/functions/Function2;)V
+#build$spring_webflux()Lorg/springframework/web/reactive/function/server/RouterFunction;
-#accept(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
-#contentType(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/RequestPredicate;
-#invoke()Lorg/springframework/web/reactive/function/server/RouterFunction;
-#invoke()Ljava/lang/Object;
@5.3.0
+#GET(Lkotlin/jvm/functions/Function1;)V
+#GET(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#HEAD(Lkotlin/jvm/functions/Function1;)V
+#HEAD(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#POST(Lkotlin/jvm/functions/Function1;)V
+#POST(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#PUT(Lkotlin/jvm/functions/Function1;)V
+#PUT(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#PATCH(Lkotlin/jvm/functions/Function1;)V
+#PATCH(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#DELETE(Lkotlin/jvm/functions/Function1;)V
+#DELETE(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
+#OPTIONS(Lkotlin/jvm/functions/Function1;)V
+#OPTIONS(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lkotlin/jvm/functions/Function1;)V
@6.0.0
+#getBuilder$annotations()V
+#withAttribute(Ljava/lang/String;Ljava/lang/Object;)V
+#withAttributes(Lkotlin/jvm/functions/Function1;)V
+#status(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
-#builder$annotations()V
-#status(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;

+###org/springframework/web/reactive/function/server/ServerRequestExtensionsKt$bodyToFlow$$inlined$bodyToFlux$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/ServerResponseExtensionsKt$body$2
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/server/ServerResponseExtensionsKt
@5.0.0.RELEASE
@5.1.0.RELEASE
+#json(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#xml(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#html(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
@5.2.0.RELEASE
+#body(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#body(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
+#bodyValueAndAwait(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#bodyAndAwait(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#bodyToServerSentEvents(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#sse(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
+#renderAndAwait(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Ljava/lang/String;[Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#renderAndAwait(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#buildAndAwait(Lorg/springframework/web/reactive/function/server/ServerResponse$HeadersBuilder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$bodyToMono$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$awaitEntityList$$inlined$toEntityList$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt
@5.0.0.RELEASE
@5.2.0.RELEASE
+#bodyToMono(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lreactor/core/publisher/Flux;
+#bodyToFlow(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lkotlinx/coroutines/flow/Flow;
+#toEntity(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lreactor/core/publisher/Mono;
+#toEntityList(Lorg/springframework/web/reactive/function/client/ClientResponse;)Lreactor/core/publisher/Mono;
+#awaitBody(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitBodyOrNull(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitEntity(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitEntityList(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@5.3.0
+#bodyToFlow(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/reflect/KClass;)Lkotlinx/coroutines/flow/Flow;
+#awaitBody(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitBodyOrNull(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitEntity(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitEntityList(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#awaitBodilessEntity(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#createExceptionAndAwait(Lorg/springframework/web/reactive/function/client/ClientResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$body$2
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$bodyToFlow$$inlined$bodyToFlux$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$awaitBody$$inlined$bodyToMono$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt
@5.0.0.RELEASE
@5.2.0.RELEASE
+#body(Lorg/springframework/web/reactive/function/client/WebClient$RequestBodySpec;Lorg/reactivestreams/Publisher;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#body(Lorg/springframework/web/reactive/function/client/WebClient$RequestBodySpec;Lkotlinx/coroutines/flow/Flow;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#body(Lorg/springframework/web/reactive/function/client/WebClient$RequestBodySpec;Ljava/lang/Object;)Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;
+#awaitExchange(Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#bodyToMono(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;)Lreactor/core/publisher/Mono;
+#bodyToFlux(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;)Lreactor/core/publisher/Flux;
+#bodyToFlow(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;)Lkotlinx/coroutines/flow/Flow;
+#awaitBody(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@5.3.0
+#awaitExchange(Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
+#exchangeToFlow(Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
@5.3.2
+#toEntity(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;)Lreactor/core/publisher/Mono;
+#toEntityList(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;)Lreactor/core/publisher/Mono;
+#toEntityFlux(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;)Lreactor/core/publisher/Mono;
@5.3.4
+#awaitBodilessEntity(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@5.3.6
+#awaitBodyOrNull(Lorg/springframework/web/reactive/function/client/WebClient$ResponseSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
@5.3.8
+#awaitExchangeOrNull(Lorg/springframework/web/reactive/function/client/WebClient$RequestHeadersSpec;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$awaitEntity$$inlined$toEntity$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$bodyToFlux$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$toEntity$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$body$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$bodyToMono$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$toEntityList$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$body$3
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$awaitBodyOrNull$$inlined$bodyToMono$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$bodyToFlux$1
@5.0.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$bodyToFlow$$inlined$bodyToFlux$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/function/client/ClientResponseExtensionsKt$awaitBody$$inlined$bodyToMono$1
@5.2.0.RELEASE
+#<init>()V

+###org/springframework/web/reactive/result/method/annotation/HttpEntityArgumentResolver
@5.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
-###org/springframework/web/reactive/result/method/annotation/HttpEntityArgumentResolver

+###org/springframework/web/reactive/result/method/annotation/ModelArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
@5.2.0.RELEASE
-###org/springframework/web/reactive/result/method/annotation/ModelArgumentResolver

+###org/springframework/web/reactive/result/method/annotation/WebSessionArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
-###org/springframework/web/reactive/result/method/annotation/WebSessionArgumentResolver

+###org/springframework/web/reactive/result/method/annotation/ServerWebExchangeArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgumentValue(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Ljava/lang/Object;
@5.2.0.RELEASE
-###org/springframework/web/reactive/result/method/annotation/ServerWebExchangeArgumentResolver

+###org/springframework/web/reactive/result/method/annotation/PrincipalArgumentResolver
@5.0.0.RELEASE
+#<init>(Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
-###org/springframework/web/reactive/result/method/annotation/PrincipalArgumentResolver

+###org/springframework/web/reactive/result/method/annotation/RequestBodyArgumentResolver
@5.0.0.RELEASE
+#<init>(Ljava/util/List;Lorg/springframework/core/ReactiveAdapterRegistry;)V
+#supportsParameter(Lorg/springframework/core/MethodParameter;)Z
+#resolveArgument(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/reactive/BindingContext;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
@5.2.0.RELEASE
-###org/springframework/web/reactive/result/method/annotation/RequestBodyArgumentResolver

+###org/springframework/web/reactive/socket/server/support/WebSocketUpgradeHandlerPredicate
@5.3.5
+#<init>()V
+#test(Ljava/lang/Object;Lorg/springframework/web/server/ServerWebExchange;)Z
+#test(Ljava/lang/Object;Ljava/lang/Object;)Z

+###org/springframework/web/reactive/socket/server/upgrade/Jetty10RequestUpgradeStrategy
@5.3.4
+#<init>()V
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
@6.0.0
-###org/springframework/web/reactive/socket/server/upgrade/Jetty10RequestUpgradeStrategy

+###org/springframework/web/reactive/socket/adapter/ContextWebSocketHandler
@5.3.3
+#getSubProtocols()Ljava/util/List;
+#handle(Lorg/springframework/web/reactive/socket/WebSocketSession;)Lreactor/core/publisher/Mono;
+#decorate(Lorg/springframework/web/reactive/socket/WebSocketHandler;Lreactor/util/context/ContextView;)Lorg/springframework/web/reactive/socket/WebSocketHandler;

+###org/springframework/web/reactive/socket/adapter/Jetty10WebSocketHandlerAdapter
@5.3.4
+#<init>(Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/util/function/Function;)V
+#onWebSocketConnect(Lorg/eclipse/jetty/websocket/api/Session;)V
+#onWebSocketText(Ljava/lang/String;)V
+#onWebSocketBinary([BII)V
+#onWebSocketClose(ILjava/lang/String;)V
+#onWebSocketError(Ljava/lang/Throwable;)V
@6.0.0
-###org/springframework/web/reactive/socket/adapter/Jetty10WebSocketHandlerAdapter

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$awaitBodyOrNull$$inlined$bodyToMono$1
@5.3.6
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$toEntity$1
@5.3.2
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$toEntityFlux$1
@5.3.2
+#<init>()V

+###org/springframework/web/reactive/function/client/WebClientExtensionsKt$toEntityList$1
@5.3.2
+#<init>()V

+###org/springframework/web/reactive/socket/client/ReactorNetty2WebSocketClient
@6.0.0
+#<init>()V
+#<init>(Lreactor/netty5/http/client/HttpClient;)V
+#<init>(Lreactor/netty5/http/client/HttpClient;Ljava/util/function/Supplier;)V
+#getHttpClient()Lreactor/netty5/http/client/HttpClient;
+#getWebsocketClientSpec()Lreactor/netty5/http/client/WebsocketClientSpec;
+#execute(Ljava/net/URI;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;
+#execute(Ljava/net/URI;Lorg/springframework/http/HttpHeaders;Lorg/springframework/web/reactive/socket/WebSocketHandler;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/server/upgrade/ReactorNetty2RequestUpgradeStrategy
@6.0.0
+#<init>()V
+#<init>(Ljava/util/function/Supplier;)V
+#getWebsocketServerSpec()Lreactor/netty5/http/server/WebsocketServerSpec;
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/server/upgrade/StandardWebSocketUpgradeStrategy
@6.0.0
+#<init>()V
+#setAsyncSendTimeout(Ljava/lang/Long;)V
+#getAsyncSendTimeout()Ljava/lang/Long;
+#setMaxSessionIdleTimeout(Ljava/lang/Long;)V
+#getMaxSessionIdleTimeout()Ljava/lang/Long;
+#setMaxTextMessageBufferSize(Ljava/lang/Integer;)V
+#getMaxTextMessageBufferSize()Ljava/lang/Integer;
+#setMaxBinaryMessageBufferSize(Ljava/lang/Integer;)V
+#getMaxBinaryMessageBufferSize()Ljava/lang/Integer;
+#upgrade(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/reactive/socket/WebSocketHandler;Ljava/lang/String;Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/adapter/ReactorNetty2WebSocketSession
@6.0.0
+#<init>(Lreactor/netty5/http/websocket/WebsocketInbound;Lreactor/netty5/http/websocket/WebsocketOutbound;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/Netty5DataBufferFactory;)V
+#<init>(Lreactor/netty5/http/websocket/WebsocketInbound;Lreactor/netty5/http/websocket/WebsocketOutbound;Lorg/springframework/web/reactive/socket/HandshakeInfo;Lorg/springframework/core/io/buffer/Netty5DataBufferFactory;I)V
+#getChannelId()Lio/netty5/channel/ChannelId;
+#receive()Lreactor/core/publisher/Flux;
+#send(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
+#isOpen()Z
+#close(Lorg/springframework/web/reactive/socket/CloseStatus;)Lreactor/core/publisher/Mono;
+#closeStatus()Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/socket/adapter/Netty5WebSocketSessionSupport
@6.0.0
+#bufferFactory()Lorg/springframework/core/io/buffer/Netty5DataBufferFactory;
+#bufferFactory()Lorg/springframework/core/io/buffer/DataBufferFactory;

+###org/springframework/web/reactive/socket/adapter/ReactorNetty2WebSocketSession$WebSocketConnection
@6.0.0
+#<init>(Lreactor/netty5/http/websocket/WebsocketInbound;Lreactor/netty5/http/websocket/WebsocketOutbound;)V
+#getInbound()Lreactor/netty5/http/websocket/WebsocketInbound;
+#getOutbound()Lreactor/netty5/http/websocket/WebsocketOutbound;

+###org/springframework/web/reactive/function/client/ClientHttpObservationDocumentation$HighCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/web/reactive/function/client/ClientHttpObservationDocumentation$HighCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientHttpObservationDocumentation$HighCardinalityKeyNames;

+###org/springframework/web/reactive/function/client/ClientHttpObservationDocumentation$LowCardinalityKeyNames
@6.0.0
+#values()[Lorg/springframework/web/reactive/function/client/ClientHttpObservationDocumentation$LowCardinalityKeyNames;
+#valueOf(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientHttpObservationDocumentation$LowCardinalityKeyNames;

+###org/springframework/web/reactive/function/client/support/WebClientAdapter
@6.0.0
+#requestToVoid(Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono;
+#requestToHeaders(Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono;
+#requestToBody(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#requestToBodyFlux(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Flux;
+#requestToBodilessEntity(Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono;
+#requestToEntity(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#requestToEntityFlux(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference;)Lreactor/core/publisher/Mono;
+#forClient(Lorg/springframework/web/reactive/function/client/WebClient;)Lorg/springframework/web/reactive/function/client/support/WebClientAdapter;

+###org/springframework/web/reactive/function/client/ClientRequestObservationContext
@6.0.0
+#<init>()V
+#getUriTemplate()Ljava/lang/String;
+#setUriTemplate(Ljava/lang/String;)V
+#isAborted()Z
+#getRequest()Lorg/springframework/web/reactive/function/client/ClientRequest;
+#setRequest(Lorg/springframework/web/reactive/function/client/ClientRequest;)V

+###org/springframework/web/reactive/function/client/ClientRequestObservationConvention
@6.0.0
+#supportsContext(Lio/micrometer/observation/Observation$Context;)Z

+###org/springframework/web/reactive/function/client/DefaultClientRequestObservationConvention
@6.0.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getName()Ljava/lang/String;
+#getContextualName(Lorg/springframework/web/reactive/function/client/ClientRequestObservationContext;)Ljava/lang/String;
+#getLowCardinalityKeyValues(Lorg/springframework/web/reactive/function/client/ClientRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getHighCardinalityKeyValues(Lorg/springframework/web/reactive/function/client/ClientRequestObservationContext;)Lio/micrometer/common/KeyValues;
+#getContextualName(Lio/micrometer/observation/Observation$Context;)Ljava/lang/String;
+#getHighCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;
+#getLowCardinalityKeyValues(Lio/micrometer/observation/Observation$Context;)Lio/micrometer/common/KeyValues;

+###org/springframework/web/reactive/function/client/ClientHttpObservationDocumentation
@6.0.0
+#values()[Lorg/springframework/web/reactive/function/client/ClientHttpObservationDocumentation;
+#valueOf(Ljava/lang/String;)Lorg/springframework/web/reactive/function/client/ClientHttpObservationDocumentation;

+###org/springframework/web/reactive/result/method/annotation/ResponseEntityExceptionHandler
@6.0.0
+#<init>()V
+#setMessageSource(Lorg/springframework/context/MessageSource;)V
+#handleException(Ljava/lang/Exception;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/DispatchExceptionHandler
@6.0.0
+#handleError(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;

+###org/springframework/web/reactive/function/server/CoRouterFunctionDslKt$sam$i$java_util_function_Predicate$0
@6.0.0
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#test(Ljava/lang/Object;)Z

+###org/springframework/web/reactive/function/server/RouterFunctionDslKt$sam$i$java_util_function_Predicate$0
@6.0.0
+#<init>(Lkotlin/jvm/functions/Function1;)V
+#test(Ljava/lang/Object;)Z

+###org/springframework/web/reactive/function/server/CoRouterFunctionDslKt$sam$i$java_util_function_BiFunction$0
@6.0.0
+#<init>(Lkotlin/jvm/functions/Function2;)V
+#apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

+###org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver$ArgumentResolverRegistrar$Builder
@5.0.0.RELEASE
+#<init>(Lorg/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer;)V
+#fullSupport(Ljava/util/List;)Lorg/springframework/web/reactive/result/method/annotation/ControllerMethodResolver$ArgumentResolverRegistrar;
+#modelAttributeSupport()Lorg/springframework/web/reactive/result/method/annotation/ControllerMethodResolver$ArgumentResolverRegistrar;
+#basic()Lorg/springframework/web/reactive/result/method/annotation/ControllerMethodResolver$ArgumentResolverRegistrar;
@5.0.7.RELEASE
-###org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver$ArgumentResolverRegistrar$Builder

+###org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer
@5.0.0.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@5.1.0.RELEASE
-###org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer

+###org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer
@5.0.0.RELEASE
+#<init>()V
+#onStartup(Ljavax/servlet/ServletContext;)V
@5.1.0.RELEASE
-###org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer

+###org/springframework/web/reactive/support/AbstractAnnotationConfigDispatcherHandlerInitializer
@5.0.0.RELEASE
+#<init>()V
@5.1.0.RELEASE
-###org/springframework/web/reactive/support/AbstractAnnotationConfigDispatcherHandlerInitializer

+###org/springframework/web/reactive/socket/client/WebSocketClientSupport
@5.0.0.RELEASE
+#<init>()V
@5.1.0.RELEASE
-###org/springframework/web/reactive/socket/client/WebSocketClientSupport

+###org/springframework/web/service/invoker/HttpServiceProxyFactoryExtensionsKt
@6.0.5
+#createClient(Lorg/springframework/web/service/invoker/HttpServiceProxyFactory;)Ljava/lang/Object;
@6.0.6
-###org/springframework/web/service/invoker/HttpServiceProxyFactoryExtensionsKt
