
+###org/apache/hadoop/hbase/types/StructIterator
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[Lorg/apache/hadoop/hbase/types/DataType;)V
+#hasNext()Z
+#remove()V
+#next()Ljava/lang/Object;
+#skip()I

+###org/apache/hadoop/hbase/types/DataType
@0.95.2-hadoop1
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Object;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/OrderedBytesBase
@0.95.2-hadoop1
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/FixedLengthWrapper
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/types/DataType;I)V
+#getLength()I
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Object;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/RawByte
@0.96.0-hadoop1
+#<init>()V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Byte;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Byte;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Byte;)I
+#decodeByte([BI)B
+#encodeByte([BIB)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/OrderedInt64
@0.95.2-hadoop1
+#isNullable()Z
+#encodedLength(Ljava/lang/Long;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Long;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Long;)I
+#decodeLong(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)J
+#encodeLong(Lorg/apache/hadoop/hbase/util/PositionedByteRange;J)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/TerminatedWrapper
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/types/DataType;[B)V
+#<init>(Lorg/apache/hadoop/hbase/types/DataType;Ljava/lang/String;)V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Object;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/Union2
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/types/DataType;Lorg/apache/hadoop/hbase/types/DataType;)V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedClass()Ljava/lang/Class;
+#decodeA(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#decodeB(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/types/OrderedFloat64
@0.95.2-hadoop1
+#isNullable()Z
+#encodedLength(Ljava/lang/Double;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Double;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Double;)I
+#decodeDouble(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)D
+#encodeDouble(Lorg/apache/hadoop/hbase/util/PositionedByteRange;D)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/OrderedInt32
@0.95.2-hadoop1
+#isNullable()Z
+#encodedLength(Ljava/lang/Integer;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Integer;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Integer;)I
+#decodeInt(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#encodeInt(Lorg/apache/hadoop/hbase/util/PositionedByteRange;I)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/OrderedFloat32
@0.95.2-hadoop1
+#isNullable()Z
+#encodedLength(Ljava/lang/Float;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Float;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Float;)I
+#decodeFloat(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)F
+#encodeFloat(Lorg/apache/hadoop/hbase/util/PositionedByteRange;F)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/OrderedString
@0.95.2-hadoop1
+#encodedLength(Ljava/lang/String;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/String;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/String;)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/OrderedBlob
@0.95.2-hadoop1
+#isSkippable()Z
+#encodedLength([B)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)[B
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[B)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BII)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/RawFloat
@0.95.2-hadoop1
+#<init>()V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Float;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Float;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Float;)I
+#decodeFloat([BI)F
+#encodeFloat([BIF)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/OrderedInt16
@0.96.0-hadoop1
+#isNullable()Z
+#encodedLength(Ljava/lang/Short;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Short;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Short;)I
+#decodeShort(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)S
+#encodeShort(Lorg/apache/hadoop/hbase/util/PositionedByteRange;S)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/RawBytes
@0.95.2-hadoop1
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#encodedLength([B)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)[B
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[B)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;I)[B
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BII)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>()V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/StructBuilder
@0.95.2-hadoop1
+#<init>()V
+#add(Lorg/apache/hadoop/hbase/types/DataType;)Lorg/apache/hadoop/hbase/types/StructBuilder;
+#toStruct()Lorg/apache/hadoop/hbase/types/Struct;
+#reset()Lorg/apache/hadoop/hbase/types/StructBuilder;

+###org/apache/hadoop/hbase/types/Struct
@0.95.2-hadoop1
+#<init>([Lorg/apache/hadoop/hbase/types/DataType;)V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength([Ljava/lang/Object;)I
+#encodedClass()Ljava/lang/Class;
+#iterator(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Lorg/apache/hadoop/hbase/types/StructIterator;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)[Ljava/lang/Object;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;I)Ljava/lang/Object;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[Ljava/lang/Object;)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/RawDouble
@0.95.2-hadoop1
+#<init>()V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Double;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Double;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Double;)I
+#decodeDouble([BI)D
+#encodeDouble([BID)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/RawLong
@0.95.2-hadoop1
+#<init>()V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Long;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Long;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Long;)I
+#decodeLong([BI)J
+#encodeLong([BIJ)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/RawInteger
@0.95.2-hadoop1
+#<init>()V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Integer;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Integer;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Integer;)I
+#decodeInt([BI)I
+#encodeInt([BII)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/OrderedNumeric
@0.95.2-hadoop1
+#encodedLength(Ljava/lang/Number;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Number;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Number;)I
+#decodeLong(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)J
+#encodeLong(Lorg/apache/hadoop/hbase/util/PositionedByteRange;J)I
+#decodeDouble(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)D
+#encodeDouble(Lorg/apache/hadoop/hbase/util/PositionedByteRange;D)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/OrderedInt8
@0.96.0-hadoop1
+#isNullable()Z
+#encodedLength(Ljava/lang/Byte;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Byte;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Byte;)I
+#decodeByte(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)B
+#encodeByte(Lorg/apache/hadoop/hbase/util/PositionedByteRange;B)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/RawStringTerminated
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;[B)V
+#<init>(Lorg/apache/hadoop/hbase/util/Order;Ljava/lang/String;)V
+#<init>([B)V
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/types/RawShort
@0.96.0-hadoop1
+#<init>()V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Ljava/lang/Short;)I
+#encodedClass()Ljava/lang/Class;
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Short;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Short;)I
+#decodeShort([BI)S
+#encodeShort([BIS)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/types/RawString
@0.95.2-hadoop1
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#encodedLength(Ljava/lang/String;)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/String;
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/String;)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>()V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/RawBytesFixedLength
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;I)V
+#<init>(I)V
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;I)[B
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BII)I

+###org/apache/hadoop/hbase/types/PBType
@0.98.3-hadoop1
+#<init>()V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#encodedLength(Lcom/google/protobuf/Message;)I
+#inputStreamFromByteRange(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Lcom/google/protobuf/CodedInputStream;
+#outputStreamFromByteRange(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Lcom/google/protobuf/CodedOutputStream;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/types/PBType

+###org/apache/hadoop/hbase/types/OrderedBlobVar
@0.95.2-hadoop1
+#encodedLength([B)I
+#encodedClass()Ljava/lang/Class;
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)[B
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[B)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BII)I
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/Object;)I
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;
+#encodedLength(Ljava/lang/Object;)I
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;)V

+###org/apache/hadoop/hbase/types/RawStringFixedLength
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;I)V
+#<init>(I)V

+###org/apache/hadoop/hbase/types/RawBytesTerminated
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/util/Order;[B)V
+#<init>(Lorg/apache/hadoop/hbase/util/Order;Ljava/lang/String;)V
+#<init>([B)V
+#<init>(Ljava/lang/String;)V
+#decode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;I)[B
+#encode(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BII)I

+###org/apache/hadoop/hbase/types/Union4
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/types/DataType;Lorg/apache/hadoop/hbase/types/DataType;Lorg/apache/hadoop/hbase/types/DataType;Lorg/apache/hadoop/hbase/types/DataType;)V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#decodeD(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/types/Union3
@0.95.2-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/types/DataType;Lorg/apache/hadoop/hbase/types/DataType;Lorg/apache/hadoop/hbase/types/DataType;)V
+#isOrderPreserving()Z
+#getOrder()Lorg/apache/hadoop/hbase/util/Order;
+#isNullable()Z
+#isSkippable()Z
+#decodeC(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/util/PositionedByteRange
@0.95.2-hadoop1
+#getPosition()I
+#setPosition(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getRemaining()I
+#peek()B
+#get()B
+#get([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#unset()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
@0.99.0
+#getShort()S
+#getInt()I
+#getLong()J
+#getVLong()J
+#putShort(S)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(J)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putVLong(J)I
+#setLimit(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getLimit()I
+#putShort(IS)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
@2.0.0-alpha-1
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;

+###org/apache/hadoop/hbase/util/ByteRange
@0.95.0
+#<init>()V
+#<init>([B)V
+#<init>([BII)V
+#clear()Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setLength(I)V
+#get(I)B
+#deepCopyToNewArray()[B
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopyTo([BI)V
+#deepCopySubRangeTo(II[BI)V
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#numEqualPrefixBytes(Lorg/apache/hadoop/hbase/util/ByteRange;I)I
+#getBytes()[B
+#getOffset()I
+#getLength()I
+#isEmpty()Z
+#notEmpty()Z
+#isEmpty(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
+#notEmpty(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/util/ByteRange;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@0.95.2-hadoop1
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
-#<init>()V
-#<init>([B)V
-#<init>([BII)V
-#clear()Lorg/apache/hadoop/hbase/util/ByteRange;
-#setLength(I)V
-#numEqualPrefixBytes(Lorg/apache/hadoop/hbase/util/ByteRange;I)I
-#notEmpty()Z
-#isEmpty(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
-#notEmpty(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
-#equals(Ljava/lang/Object;)Z
-#hashCode()I
-#compareTo(Lorg/apache/hadoop/hbase/util/ByteRange;)I
-#toString()Ljava/lang/String;
-#compareTo(Ljava/lang/Object;)I
@0.99.0
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getVLong(I)J
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putVLong(IJ)I

+###org/apache/hadoop/hbase/util/Order
@0.95.2-hadoop1
+#values()[Lorg/apache/hadoop/hbase/util/Order;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/Order;
+#cmp(I)I
+#apply(B)B
+#apply([B)V
+#apply([BII)V

+###org/apache/hadoop/hbase/util/test/RedundantKVGenerator
@0.95.0
+#<init>()V
+#<init>(Ljava/util/Random;IIIIIIFFIIIIFII)V
+#generateTestKeyValues(I)Ljava/util/List;
+#convertKvToByteBuffer(Ljava/util/List;Z)Ljava/nio/ByteBuffer;
+#setCommonPrefix([B)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setRandomizer(Ljava/util/Random;)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setNumberOfRowPrefixes(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setAveragePrefixLength(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setPrefixLengthVariance(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setAverageSuffixLength(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setSuffixLengthVariance(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setNumberOfRows(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setChanceForSameQualifier(F)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setChanceForSimilarQualifier(F)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setAverageQualifierLength(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setQualifierLengthVariance(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setColumnFamilyLength(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setFamily([B)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setValueLength(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setChanceForZeroValue(F)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setBaseTimestampDivide(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
+#setTimestampDiffSize(I)Lorg/apache/hadoop/hbase/util/test/RedundantKVGenerator;
@0.98.0-hadoop1
+#generateTestKeyValues(IZ)Ljava/util/List;
@1.2.7
-###org/apache/hadoop/hbase/util/test/RedundantKVGenerator

+###org/apache/hadoop/hbase/util/test/LoadTestKVGenerator
@0.95.0
+#<init>(II)V
+#verify([B[[B)Z
+#md5PrefixedKey(J)Ljava/lang/String;
+#generateRandomSizeValue([[B)[B
@1.2.7
-###org/apache/hadoop/hbase/util/test/LoadTestKVGenerator

+###org/apache/hadoop/hbase/util/Bytes$ByteArrayComparator
@0.95.0
+#<init>()V
+#compare([B[B)I
+#compare([BII[BII)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/util/Bytes$RowEndKeyComparator
@0.95.1-hadoop1
+#<init>()V
+#compare([B[B)I
+#compare([BII[BII)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/util/Bytes
@0.95.0
+#<init>()V
+#readByteArray(Ljava/io/DataInput;)[B
+#readByteArrayThrowsRuntime(Ljava/io/DataInput;)[B
+#writeByteArray(Ljava/io/DataOutput;[B)V
+#writeByteArray(Ljava/io/DataOutput;[BII)V
+#writeByteArray([BI[BII)I
+#putBytes([BI[BII)I
+#putByte([BIB)I
+#toBytes(Ljava/nio/ByteBuffer;)[B
+#toString([B)Ljava/lang/String;
+#toString([BLjava/lang/String;[B)Ljava/lang/String;
+#toString([BII)Ljava/lang/String;
+#toStringBinary([B)Ljava/lang/String;
+#toStringBinary(Ljava/nio/ByteBuffer;)Ljava/lang/String;
+#toStringBinary([BII)Ljava/lang/String;
+#toBinaryFromHex(B)B
+#toBytesBinary(Ljava/lang/String;)[B
+#toBytes(Ljava/lang/String;)[B
+#toBytes(Z)[B
+#toBoolean([B)Z
+#toBytes(J)[B
+#toLong([B)J
+#toLong([BI)J
+#toLong([BII)J
+#putLong([BIJ)I
+#toFloat([B)F
+#toFloat([BI)F
+#putFloat([BIF)I
+#toBytes(F)[B
+#toDouble([B)D
+#toDouble([BI)D
+#putDouble([BID)I
+#toBytes(D)[B
+#toBytes(I)[B
+#toInt([B)I
+#toInt([BI)I
+#toInt([BII)I
+#putInt([BII)I
+#toBytes(S)[B
+#toShort([B)S
+#toShort([BI)S
+#toShort([BII)S
+#getBytes(Ljava/nio/ByteBuffer;)[B
+#putShort([BIS)I
+#toBytes(Ljava/math/BigDecimal;)[B
+#toBigDecimal([B)Ljava/math/BigDecimal;
+#toBigDecimal([BII)Ljava/math/BigDecimal;
+#putBigDecimal([BILjava/math/BigDecimal;)I
+#vintToBytes(J)[B
+#bytesToVint([B)J
+#readVLong([BI)J
+#compareTo([B[B)I
+#compareTo([BII[BII)I
+#equals([B[B)Z
+#equals([BII[BII)Z
+#startsWith([B[B)Z
+#hashCode([B)I
+#hashCode([BI)I
+#mapKey([B)Ljava/lang/Integer;
+#mapKey([BI)Ljava/lang/Integer;
+#add([B[B)[B
+#add([B[B[B)[B
+#head([BI)[B
+#tail([BI)[B
+#padHead([BI)[B
+#padTail([BI)[B
+#split([B[BI)[[B
+#split([B[BZI)[[B
+#iterateOnSplits([B[BI)Ljava/lang/Iterable;
+#iterateOnSplits([B[BZI)Ljava/lang/Iterable;
+#hashCode([BII)I
+#toByteArrays([Ljava/lang/String;)[[B
+#toByteArrays(Ljava/lang/String;)[[B
+#toByteArrays([B)[[B
+#binarySearch([[B[BIILorg/apache/hadoop/io/RawComparator;)I
+#incrementBytes([BJ)[B
+#writeStringFixedSize(Ljava/io/DataOutput;Ljava/lang/String;I)V
+#readStringFixedSize(Ljava/io/DataInput;I)Ljava/lang/String;
+#copy([B)[B
+#copy([BII)[B
+#unsignedBinarySearch([BIIB)I
+#unsignedCopyAndIncrement([B)[B
+#equals(Ljava/util/List;Ljava/util/List;)Z
+#isSorted(Ljava/util/Collection;)Z
+#getUtf8ByteArrays(Ljava/util/List;)Ljava/util/List;
+#indexOf([BB)I
+#indexOf([B[B)I
+#contains([BB)Z
+#contains([B[B)Z
+#zero([B)V
+#zero([BII)V
+#random([B)V
+#random([BII)V
@0.96.0-hadoop1
+#len([B)I
@0.96.1-hadoop1
+#putByteBuffer([BILjava/nio/ByteBuffer;)I
+#equals([BLjava/nio/ByteBuffer;)Z
@0.98.0-hadoop1
+#createMaxByteArray(I)[B
+#multiple([BI)[B
+#toHex([B)Ljava/lang/String;
+#fromHex(Ljava/lang/String;)[B
@0.98.4-hadoop1
+#readAsInt([BII)I
+#putAsShort([BII)I
@0.98.7-hadoop1
+#putLongUnsafe([BIJ)I
+#toIntUnsafe([BI)I
+#toShortUnsafe([BI)S
+#toLongUnsafe([BI)J
+#putIntUnsafe([BII)I
+#putShortUnsafe([BIS)I
@0.98.10-hadoop1
+#toBinaryByteArrays([Ljava/lang/String;)[[B
@0.98.12-hadoop1
*#readVLong([BI)J[deprecated]
+#readAsVLong([BI)J
@0.98.13-hadoop1
+#add([[B)[B
@0.98.14-hadoop1
+#toHex([BII)Ljava/lang/String;
@0.99.0
+#binarySearch([[BLorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/io/RawComparator;)I
-#putLongUnsafe([BIJ)I
-#toIntUnsafe([BI)I
-#toShortUnsafe([BI)S
-#toLongUnsafe([BI)J
-#putIntUnsafe([BII)I
-#putShortUnsafe([BIS)I
-#readAsVLong([BI)J
-#add([[B)[B
-#toBinaryByteArrays([Ljava/lang/String;)[[B
-#toHex([BII)Ljava/lang/String;
@0.99.1
+#putLongUnsafe([BIJ)I
+#toIntUnsafe([BI)I
+#toShortUnsafe([BI)S
+#toLongUnsafe([BI)J
+#putIntUnsafe([BII)I
+#putShortUnsafe([BIS)I
@1.0.0
+#toBinaryByteArrays([Ljava/lang/String;)[[B
@1.0.2
+#add([[B)[B
@1.1.0
+#toString([BI)Ljava/lang/String;
*#readVLong([BI)J[deprecated]
+#readAsVLong([BI)J
-#add([[B)[B
@1.1.1
+#add([[B)[B
@1.2.0
+#toHex([BII)Ljava/lang/String;
@1.4.0
+#<init>([B)V
+#<init>(Lorg/apache/hadoop/hbase/util/Bytes;)V
+#<init>([BII)V
+#get()[B
+#set([B)V
+#set([BII)V
+#getLength()I
+#getOffset()I
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/util/Bytes;)I
+#compareTo([B)I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#copyBytes()[B
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha-1
+#<init>(Lcom/google/protobuf/ByteString;)V[deprecated]
+#getSize()I[deprecated]
+#toByteString()Lcom/google/protobuf/ByteString;[deprecated]
+#toArray(Ljava/util/List;)[[B
*#putLongUnsafe([BIJ)I[deprecated]
*#toIntUnsafe([BI)I[deprecated]
*#toShortUnsafe([BI)S[deprecated]
*#toLongUnsafe([BI)J[deprecated]
*#putIntUnsafe([BII)I[deprecated]
*#putShortUnsafe([BIS)I[deprecated]
*#binarySearch([[B[BIILorg/apache/hadoop/io/RawComparator;)I[deprecated]
+#binarySearch([[B[BII)I
*#binarySearch([[BLorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/io/RawComparator;)I[deprecated]
+#binarySearch([Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/CellComparator;)I
+#searchDelimiterIndex([BIII)I
+#searchDelimiterIndexInReverse([BIII)I
+#findCommonPrefix([B[BIIII)I
@2.4.11
+#secureRandom([B)V
+#secureRandom([BII)V
@3.0.0-alpha-1
-#<init>(Lcom/google/protobuf/ByteString;)V[deprecated]
-#getSize()I[deprecated]
-#toByteString()Lcom/google/protobuf/ByteString;[deprecated]
-#putLongUnsafe([BIJ)I[deprecated]
-#toIntUnsafe([BI)I[deprecated]
-#toShortUnsafe([BI)S[deprecated]
-#toLongUnsafe([BI)J[deprecated]
-#putIntUnsafe([BII)I[deprecated]
-#putShortUnsafe([BIS)I[deprecated]
-#readVLong([BI)J[deprecated]
-#binarySearch([[B[BIILorg/apache/hadoop/io/RawComparator;)I[deprecated]
-#binarySearch([[BLorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/io/RawComparator;)I[deprecated]
-#secureRandom([B)V
-#secureRandom([BII)V
@3.0.0-alpha-3
+#secureRandom([B)V
+#secureRandom([BII)V

+###org/apache/hadoop/hbase/util/Pair
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#newPair(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/util/Pair;
+#setFirst(Ljava/lang/Object;)V
+#setSecond(Ljava/lang/Object;)V
+#getFirst()Ljava/lang/Object;
+#getSecond()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/Methods
@0.95.0
+#<init>()V
+#call(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
@1.6.0
-#<init>()V
@2.0.0-alpha-1
+#<init>()V
@2.3.0
-#<init>()V

+###org/apache/hadoop/hbase/util/ByteRangeUtils
@0.95.2-hadoop1
+#<init>()V
+#numEqualPrefixBytes(Lorg/apache/hadoop/hbase/util/ByteRange;Lorg/apache/hadoop/hbase/util/ByteRange;I)I
+#copyToNewArrays(Ljava/util/Collection;)Ljava/util/ArrayList;
+#fromArrays(Ljava/util/Collection;)Ljava/util/ArrayList;
+#write(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/util/ByteRange;)V
+#write(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/util/ByteRange;I)V
@2.2.3
-#<init>()V
@2.2.4
+#<init>()V

+###org/apache/hadoop/hbase/util/ChecksumType
@0.98.0-hadoop1
+#values()[Lorg/apache/hadoop/hbase/util/ChecksumType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/ChecksumType;
+#getName()Ljava/lang/String;
+#getChecksumObject()Ljava/util/zip/Checksum;
+#getCode()B
+#codeToType(B)Lorg/apache/hadoop/hbase/util/ChecksumType;
+#nameToType(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/ChecksumType;
@1.2.0
+#getDefaultChecksumType()Lorg/apache/hadoop/hbase/util/ChecksumType;
+#getDataChecksumType()Lorg/apache/hadoop/util/DataChecksum$Type;
-#getChecksumObject()Ljava/util/zip/Checksum;

+###org/apache/hadoop/hbase/util/Sleeper
@0.98.8-hadoop1
+#<init>(ILorg/apache/hadoop/hbase/Stoppable;)V
+#sleep()V
+#skipSleepCycle()V
+#sleep(J)V
@0.99.0
-###org/apache/hadoop/hbase/util/Sleeper

+###org/apache/hadoop/hbase/util/DefaultEnvironmentEdge
@0.95.0
+#<init>()V
+#currentTimeMillis()J
@0.99.0
+#currentTime()J
-#currentTimeMillis()J

+###org/apache/hadoop/hbase/util/EnvironmentEdge
@0.95.0
+#currentTimeMillis()J
@0.99.0
+#currentTime()J
-#currentTimeMillis()J

+###org/apache/hadoop/hbase/util/MD5Hash
@0.95.0
+#<init>()V
+#getMD5AsHex([B)Ljava/lang/String;
+#getMD5AsHex([BII)Ljava/lang/String;

+###org/apache/hadoop/hbase/util/Strings
@0.95.0
+#<init>()V
+#appendKeyValue(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/StringBuilder;
+#appendKeyValue(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;
+#domainNamePointerToHostName(Ljava/lang/String;)Ljava/lang/String;
+#isEmpty(Ljava/lang/String;)Z
+#padFront(Ljava/lang/String;CI)Ljava/lang/String;
+#repeat(CI)Ljava/lang/String;
@0.98.8-hadoop1
+#join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
@0.99.0
-#join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
@1.6.0
-#<init>()V
@2.0.0-alpha-1
+#<init>()V
@2.0.0-beta-1
-#isEmpty(Ljava/lang/String;)Z
-#repeat(CI)Ljava/lang/String;
@2.3.0
-#<init>()V

+###org/apache/hadoop/hbase/util/DNS
@0.98.16-hadoop1
+#getDefaultHost(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/util/DNS

+###org/apache/hadoop/hbase/util/HasThread
@0.98.8-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#getThread()Ljava/lang/Thread;
+#run()V
+#getName()Ljava/lang/String;
+#interrupt()V
+#isAlive()Z
+#isInterrupted()Z
+#setDaemon(Z)V
+#setName(Ljava/lang/String;)V
+#setPriority(I)V
+#setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V
+#start()V
+#join()V
+#join(JI)V
+#join(J)V
@0.99.0
-###org/apache/hadoop/hbase/util/HasThread

+###org/apache/hadoop/hbase/util/ClassSize
@0.95.0
+#<init>()V
+#estimateBase(Ljava/lang/Class;Z)J
+#align(I)I
+#align(J)J
+#is32BitJVM()Z
@1.4.0
+#sizeOf([BI)J
@2.0.0-alpha-1
+#useUnsafeLayout()Z
@2.0.0-alpha2
+#sizeOf([B)J
+#sizeOfByteArray(I)J
-#sizeOf([BI)J

+###org/apache/hadoop/hbase/util/CollectionUtils
@0.95.0
+#<init>()V
+#nullSafe(Ljava/util/Collection;)Ljava/util/Collection;
+#nullSafeSize(Ljava/util/Collection;)I
+#nullSafeSameSize(Ljava/util/Collection;Ljava/util/Collection;)Z
+#isEmpty(Ljava/util/Collection;)Z
+#notEmpty(Ljava/util/Collection;)Z
+#getFirst(Ljava/util/Collection;)Ljava/lang/Object;
+#getLastIndex(Ljava/util/List;)I
+#isLastIndex(Ljava/util/List;I)Z
+#getLast(Ljava/util/List;)Ljava/lang/Object;
@2.0.0-alpha-1
+#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
+#computeIfAbsentEx(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;)Ljava/lang/Object;
+#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;Ljava/lang/Runnable;)Ljava/lang/Object;
@2.1.0
-#nullSafe(Ljava/util/Collection;)Ljava/util/Collection;
-#nullSafeSize(Ljava/util/Collection;)I
-#nullSafeSameSize(Ljava/util/Collection;Ljava/util/Collection;)Z
-#isEmpty(Ljava/util/Collection;)Z
-#notEmpty(Ljava/util/Collection;)Z
-#getFirst(Ljava/util/Collection;)Ljava/lang/Object;
-#getLastIndex(Ljava/util/List;)I
-#isLastIndex(Ljava/util/List;I)Z
-#getLast(Ljava/util/List;)Ljava/lang/Object;
@2.2.0
-#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
-#computeIfAbsentEx(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier;)Ljava/lang/Object;
-#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;Ljava/lang/Runnable;)Ljava/lang/Object;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/CollectionUtils

+###org/apache/hadoop/hbase/util/Hash
@0.95.0
+#<init>()V
+#parseHashType(Ljava/lang/String;)I
+#getHashType(Lorg/apache/hadoop/conf/Configuration;)I
+#getInstance(I)Lorg/apache/hadoop/hbase/util/Hash;
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/Hash;
+#hash([B)I
+#hash([BI)I
+#hash([BII)I
+#hash([BIII)I
@2.0.0-alpha-1
+#hash(Lorg/apache/hadoop/hbase/util/HashKey;I)I
-#hash([B)I
-#hash([BI)I
-#hash([BII)I
-#hash([BIII)I

+###org/apache/hadoop/hbase/util/RetryCounter$RetryConfig
@0.96.1-hadoop1
+#<init>()V
+#<init>(IJJLjava/util/concurrent/TimeUnit;Lorg/apache/hadoop/hbase/util/RetryCounter$BackoffPolicy;)V
+#setBackoffPolicy(Lorg/apache/hadoop/hbase/util/RetryCounter$BackoffPolicy;)Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;
+#setMaxAttempts(I)Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;
+#setMaxSleepTime(J)Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;
+#setSleepInterval(J)Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;
+#setTimeUnit(Ljava/util/concurrent/TimeUnit;)Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;
+#getMaxAttempts()I
+#getMaxSleepTime()J
+#getSleepInterval()J
+#getTimeUnit()Ljava/util/concurrent/TimeUnit;
+#getBackoffPolicy()Lorg/apache/hadoop/hbase/util/RetryCounter$BackoffPolicy;
@2.2.0
+#setJitter(F)Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;
+#getJitter()F

+###org/apache/hadoop/hbase/util/RetryCounter$BackoffPolicy
@0.96.1-hadoop1
+#<init>()V
+#getBackoffTime(Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;I)J

+###org/apache/hadoop/hbase/util/RetryCounter$ExponentialBackoffPolicy
@0.96.1-hadoop1
+#<init>()V
+#getBackoffTime(Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;I)J

+###org/apache/hadoop/hbase/util/RetryCounter$ExponentialBackoffPolicyWithLimit
@0.96.1-hadoop1
+#<init>()V
+#getBackoffTime(Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;I)J

+###org/apache/hadoop/hbase/util/RetryCounter
@0.95.0
+#<init>(IILjava/util/concurrent/TimeUnit;)V
+#getMaxRetries()I
+#sleepUntilNextRetry()V
+#shouldRetry()Z
+#useRetry()V
+#getAttemptTimes()I
@0.96.1-hadoop1
+#<init>(IJLjava/util/concurrent/TimeUnit;)V
+#<init>(Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;)V
+#getMaxAttempts()I
+#isRetry()Z
-#<init>(IILjava/util/concurrent/TimeUnit;)V
-#getMaxRetries()I
@1.5.0
+#getBackoffTime()J
+#getBackoffTimeAndIncrementAttempts()J
@2.0.0-alpha-1
-#getBackoffTime()J
-#getBackoffTimeAndIncrementAttempts()J
@2.0.3
+#getBackoffTime()J
+#getBackoffTimeAndIncrementAttempts()J

+###org/apache/hadoop/hbase/util/RetryCounterFactory
@0.95.0
+#<init>(II)V
+#create()Lorg/apache/hadoop/hbase/util/RetryCounter;
@0.96.1-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/util/RetryCounter$RetryConfig;)V
@1.1.1
+#<init>(III)V
@2.0.3
+#<init>(I)V
@2.1.0
-#<init>(I)V
@2.1.1
+#<init>(I)V

+###org/apache/hadoop/hbase/util/ByteBufferUtils
@0.95.0
+#writeVLong(Ljava/nio/ByteBuffer;J)V
+#readVLong(Ljava/nio/ByteBuffer;)J
+#putCompressedInt(Ljava/io/OutputStream;I)I
+#putInt(Ljava/io/OutputStream;I)V
+#moveBufferToStream(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;I)V
+#copyBufferToStream(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;II)V
+#putLong(Ljava/io/OutputStream;JI)I
+#longFitsIn(J)I
+#intFitsIn(I)I
+#readCompressedInt(Ljava/io/InputStream;)I
+#readCompressedInt(Ljava/nio/ByteBuffer;)I
+#readLong(Ljava/io/InputStream;I)J
+#readLong(Ljava/nio/ByteBuffer;I)J
+#copyFromStreamToBuffer(Ljava/nio/ByteBuffer;Ljava/io/DataInputStream;I)V
+#drainInputStreamToBuffer(Ljava/io/InputStream;)Ljava/nio/ByteBuffer;
+#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;II)V
+#findCommonPrefix(Ljava/nio/ByteBuffer;III)I
+#findCommonPrefix([BII[BII)I
+#arePartsEqual(Ljava/nio/ByteBuffer;IIII)Z
+#skip(Ljava/nio/ByteBuffer;I)V
+#extendLimit(Ljava/nio/ByteBuffer;I)V
+#toBytes(Ljava/nio/ByteBuffer;I)[B
@0.98.18-hadoop1
+#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)V
+#toBytes(Ljava/nio/ByteBuffer;II)[B
+#compareTo(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
+#copyFromBufferToArray([BLjava/nio/ByteBuffer;III)V
@0.99.0
-#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)V
-#toBytes(Ljava/nio/ByteBuffer;II)[B
-#compareTo(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
-#copyFromBufferToArray([BLjava/nio/ByteBuffer;III)V
@0.99.2
+#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)V
+#toBytes(Ljava/nio/ByteBuffer;II)[B
+#compareTo(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
@1.3.0
+#copyFromBufferToArray([BLjava/nio/ByteBuffer;III)V
@1.5.0
+#toByte(Ljava/nio/ByteBuffer;I)B
+#findCommonPrefix(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)I
+#equals(Ljava/nio/ByteBuffer;II[BII)Z
+#compareTo([BIILjava/nio/ByteBuffer;II)I
+#compareTo(Ljava/nio/ByteBuffer;II[BII)I
+#toShort(Ljava/nio/ByteBuffer;I)S
+#toInt(Ljava/nio/ByteBuffer;)I
+#toInt(Ljava/nio/ByteBuffer;I)I
+#toLong(Ljava/nio/ByteBuffer;I)J
+#putInt(Ljava/nio/ByteBuffer;I)V
+#putInt(Ljava/nio/ByteBuffer;II)I
+#putShort(Ljava/nio/ByteBuffer;S)V
+#putShort(Ljava/nio/ByteBuffer;IS)I
+#putLong(Ljava/nio/ByteBuffer;J)V
+#putLong(Ljava/nio/ByteBuffer;IJ)I
+#copyFromArrayToBuffer(Ljava/nio/ByteBuffer;I[BII)V
@2.0.0-alpha-1
+#putByte(Ljava/nio/ByteBuffer;IB)I
+#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
+#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)I
+#equals(Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)Z
+#hashCode(Ljava/nio/ByteBuffer;II)I
+#readAsInt(Ljava/nio/ByteBuffer;II)I
+#toDouble(Ljava/nio/ByteBuffer;I)D
+#toBigDecimal(Ljava/nio/ByteBuffer;II)Ljava/math/BigDecimal;
+#putAsShort(Ljava/nio/ByteBuffer;II)I
+#copyFromArrayToBuffer(Ljava/nio/ByteBuffer;[BII)V
+#copyOfRange(Ljava/nio/ByteBuffer;II)[B
+#toStringBinary(Ljava/nio/ByteBuffer;II)Ljava/lang/String;
+#toStringBinary(Ljava/nio/ByteBuffer;)Ljava/lang/String;
-#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)V
@2.0.0-alpha3
+#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)V
-#copyFromBufferToBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;III)I
@2.0.0-alpha4
+#copyBufferToStream(Ljava/io/DataOutput;Ljava/nio/ByteBuffer;II)V
@2.3.0
+#readVLong(Lorg/apache/hadoop/hbase/nio/ByteBuff;)J
@2.4.14
+#searchDelimiterIndex(Ljava/nio/ByteBuffer;III)I
+#searchDelimiterIndexInReverse(Ljava/nio/ByteBuffer;III)I
@3.0.0-alpha-1
-#findCommonPrefix(Ljava/nio/ByteBuffer;III)I
-#searchDelimiterIndex(Ljava/nio/ByteBuffer;III)I
-#searchDelimiterIndexInReverse(Ljava/nio/ByteBuffer;III)I

+###org/apache/hadoop/hbase/util/IterableUtils
@0.95.0
+#<init>()V
+#nullSafe(Ljava/lang/Iterable;)Ljava/lang/Iterable;
@2.0.0-beta-1
-###org/apache/hadoop/hbase/util/IterableUtils

+###org/apache/hadoop/hbase/util/ClassLoaderBase
@0.95.1-hadoop1
+#<init>(Ljava/lang/ClassLoader;)V

+###org/apache/hadoop/hbase/util/KeyLocker
@0.95.1-hadoop1
+#<init>()V
+#acquireLock(Ljava/lang/Comparable;)Ljava/util/concurrent/locks/ReentrantLock;
+#acquireLocks(Ljava/util/Set;)Ljava/util/Map;
@1.2.0
+#acquireLock(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReentrantLock;
-#acquireLock(Ljava/lang/Comparable;)Ljava/util/concurrent/locks/ReentrantLock;

+###org/apache/hadoop/hbase/util/SimpleByteRange
@0.95.2-hadoop1
+#<init>()V
+#<init>(I)V
+#<init>([B)V
+#<init>([BII)V
+#getBytes()[B
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getOffset()I
+#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getLength()I
+#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#isEmpty()Z
+#isEmpty(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
+#get(I)B
+#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopyToNewArray()[B
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopyTo([BI)V
+#deepCopySubRangeTo(II[BI)V
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/util/ByteRange;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@0.99.0
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putVLong(IJ)I
-#getBytes()[B
-#getOffset()I
-#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
-#getLength()I
-#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
-#isEmpty()Z
-#isEmpty(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
-#get(I)B
-#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
-#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
-#deepCopyToNewArray()[B
-#deepCopyTo([BI)V
-#deepCopySubRangeTo(II[BI)V
-#hashCode()I
-#compareTo(Lorg/apache/hadoop/hbase/util/ByteRange;)I
-#toString()Ljava/lang/String;
-#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/util/ReflectionUtils
@0.95.0
+#<init>()V
+#instantiateWithCustomCtor(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
@0.98.4-hadoop1
+#newInstance(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
+#findConstructor(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/reflect/Constructor;
@1.2.0
+#logThreadInfo(Lorg/apache/commons/logging/Log;Ljava/lang/String;J)V
@1.5.0
+#invokeMethod(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0-beta-1
+#logThreadInfo(Lorg/slf4j/Logger;Ljava/lang/String;J)V
-#logThreadInfo(Lorg/apache/commons/logging/Log;Ljava/lang/String;J)V
@2.4.16
+#getModifiersField()Ljava/lang/reflect/Field;
@2.5.0
+#instantiate(Ljava/lang/String;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
+#newInstance(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
+#getClassLoader()Ljava/lang/ClassLoader;
-#getModifiersField()Ljava/lang/reflect/Field;
@2.5.3
+#getModifiersField()Ljava/lang/reflect/Field;
@3.0.0-alpha-1
-#newInstance(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
-#getClassLoader()Ljava/lang/ClassLoader;
-#getModifiersField()Ljava/lang/reflect/Field;
@3.0.0-alpha-2
+#getModifiersField()Ljava/lang/reflect/Field;

+###org/apache/hadoop/hbase/util/IncrementingEnvironmentEdge
@0.95.0
+#<init>()V
+#<init>(J)V
+#currentTimeMillis()J
+#incrementTime(J)J
@0.99.0
+#currentTime()J
-#currentTimeMillis()J

+###org/apache/hadoop/hbase/util/ArrayUtils
@0.95.0
+#<init>()V
+#length([B)I
+#length([J)I
+#length([Ljava/lang/Object;)I
+#isEmpty([B)Z
+#isEmpty([J)Z
+#isEmpty([Ljava/lang/Object;)Z
+#getFirst([J)J
+#getLast([J)J
+#getTotalLengthOfArrays(Ljava/lang/Iterable;)I
+#toList([J)Ljava/util/ArrayList;
+#growIfNecessary([BII)[B
+#growIfNecessary([III)[I
+#growIfNecessary([JII)[J
@2.0.0-beta-1
-###org/apache/hadoop/hbase/util/ArrayUtils

+###org/apache/hadoop/hbase/util/ConcatenatedLists$Iterator
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/util/ConcatenatedLists;)V
+#hasNext()Z
+#next()Ljava/lang/Object;
+#remove()V

+###org/apache/hadoop/hbase/util/ConcatenatedLists
@0.98.0-hadoop1
+#<init>()V
+#addAllSublists(Ljava/util/List;)V
+#addSublist(Ljava/util/List;)V
+#size()I
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
+#iterator()Ljava/util/Iterator;
@1.2.7
-#isEmpty()Z
-#contains(Ljava/lang/Object;)Z
-#containsAll(Ljava/util/Collection;)Z
-#toArray()[Ljava/lang/Object;
-#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
-#add(Ljava/lang/Object;)Z
-#remove(Ljava/lang/Object;)Z
-#addAll(Ljava/util/Collection;)Z
-#removeAll(Ljava/util/Collection;)Z
-#retainAll(Ljava/util/Collection;)Z
-#clear()V
@1.3.0
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
@1.3.2
-#isEmpty()Z
-#contains(Ljava/lang/Object;)Z
-#containsAll(Ljava/util/Collection;)Z
-#toArray()[Ljava/lang/Object;
-#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
-#add(Ljava/lang/Object;)Z
-#remove(Ljava/lang/Object;)Z
-#addAll(Ljava/util/Collection;)Z
-#removeAll(Ljava/util/Collection;)Z
-#retainAll(Ljava/util/Collection;)Z
-#clear()V
@2.0.0-alpha-1
+#isEmpty()Z
+#contains(Ljava/lang/Object;)Z
+#containsAll(Ljava/util/Collection;)Z
+#toArray()[Ljava/lang/Object;
+#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
+#add(Ljava/lang/Object;)Z
+#remove(Ljava/lang/Object;)Z
+#addAll(Ljava/util/Collection;)Z
+#removeAll(Ljava/util/Collection;)Z
+#retainAll(Ljava/util/Collection;)Z
+#clear()V
@2.0.0-alpha3
-#isEmpty()Z
-#contains(Ljava/lang/Object;)Z
-#containsAll(Ljava/util/Collection;)Z
-#toArray()[Ljava/lang/Object;
-#toArray([Ljava/lang/Object;)[Ljava/lang/Object;
-#add(Ljava/lang/Object;)Z
-#remove(Ljava/lang/Object;)Z
-#addAll(Ljava/util/Collection;)Z
-#removeAll(Ljava/util/Collection;)Z
-#retainAll(Ljava/util/Collection;)Z
-#clear()V

+###org/apache/hadoop/hbase/util/DynamicClassLoader
@0.95.1-hadoop1
+#<init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/ClassLoader;)V
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;

+###org/apache/hadoop/hbase/util/Classes
@0.95.0
+#<init>()V
+#extendedForName(Ljava/lang/String;)Ljava/lang/Class;
+#stringify([Ljava/lang/Class;)Ljava/lang/String;
@2.0.0-alpha4
+#cast(Ljava/lang/Class;)Ljava/lang/Class;

+###org/apache/hadoop/hbase/util/DrainBarrier
@0.95.0
+#<init>()V
+#beginOp()Z
+#endOp()V
+#stopAndDrainOps()V
+#stopAndDrainOpsOnce()V
@2.0.0-beta-2
-###org/apache/hadoop/hbase/util/DrainBarrier

+###org/apache/hadoop/hbase/util/EnvironmentEdgeManager
@0.95.0
+#getDelegate()Lorg/apache/hadoop/hbase/util/EnvironmentEdge;
+#reset()V
+#injectEdge(Lorg/apache/hadoop/hbase/util/EnvironmentEdge;)V
+#currentTimeMillis()J
@0.99.0
+#currentTime()J
-#currentTimeMillis()J

+###org/apache/hadoop/hbase/util/MurmurHash
@0.95.0
+#<init>()V
+#getInstance()Lorg/apache/hadoop/hbase/util/Hash;
+#hash([BIII)I
@2.0.0-alpha-1
+#hash(Lorg/apache/hadoop/hbase/util/HashKey;I)I
-#hash([BIII)I

+###org/apache/hadoop/hbase/util/OrderedBytes
@0.95.2-hadoop1
+#<init>()V
+#encodeNumeric(Lorg/apache/hadoop/hbase/util/PositionedByteRange;JLorg/apache/hadoop/hbase/util/Order;)I
+#encodeNumeric(Lorg/apache/hadoop/hbase/util/PositionedByteRange;DLorg/apache/hadoop/hbase/util/Order;)I
+#encodeNumeric(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/math/BigDecimal;Lorg/apache/hadoop/hbase/util/Order;)I
+#decodeNumericAsDouble(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)D
+#decodeNumericAsLong(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)J
+#decodeNumericAsBigDecimal(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/math/BigDecimal;
+#encodeString(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Ljava/lang/String;Lorg/apache/hadoop/hbase/util/Order;)I
+#decodeString(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Ljava/lang/String;
+#blobVarEncodedLength(I)I
+#encodeBlobVar(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BIILorg/apache/hadoop/hbase/util/Order;)I
+#encodeBlobVar(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BLorg/apache/hadoop/hbase/util/Order;)I
+#decodeBlobVar(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)[B
+#encodeBlobCopy(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BIILorg/apache/hadoop/hbase/util/Order;)I
+#encodeBlobCopy(Lorg/apache/hadoop/hbase/util/PositionedByteRange;[BLorg/apache/hadoop/hbase/util/Order;)I
+#decodeBlobCopy(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)[B
+#encodeNull(Lorg/apache/hadoop/hbase/util/PositionedByteRange;Lorg/apache/hadoop/hbase/util/Order;)I
+#encodeInt32(Lorg/apache/hadoop/hbase/util/PositionedByteRange;ILorg/apache/hadoop/hbase/util/Order;)I
+#decodeInt32(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#encodeInt64(Lorg/apache/hadoop/hbase/util/PositionedByteRange;JLorg/apache/hadoop/hbase/util/Order;)I
+#decodeInt64(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)J
+#encodeFloat32(Lorg/apache/hadoop/hbase/util/PositionedByteRange;FLorg/apache/hadoop/hbase/util/Order;)I
+#decodeFloat32(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)F
+#encodeFloat64(Lorg/apache/hadoop/hbase/util/PositionedByteRange;DLorg/apache/hadoop/hbase/util/Order;)I
+#decodeFloat64(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)D
+#isEncodedValue(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isNull(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isNumeric(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isNumericInfinite(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isNumericNaN(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isNumericZero(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isFixedInt32(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isFixedInt64(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isFixedFloat32(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isFixedFloat64(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isText(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isBlobVar(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isBlobCopy(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#skip(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
+#length(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)I
@0.96.0-hadoop1
+#encodeInt8(Lorg/apache/hadoop/hbase/util/PositionedByteRange;BLorg/apache/hadoop/hbase/util/Order;)I
+#decodeInt8(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)B
+#encodeInt16(Lorg/apache/hadoop/hbase/util/PositionedByteRange;SLorg/apache/hadoop/hbase/util/Order;)I
+#decodeInt16(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)S
@0.98.18-hadoop1
+#isFixedInt8(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isFixedInt16(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
@0.99.0
-#isFixedInt8(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
-#isFixedInt16(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
@1.1.4
+#isFixedInt8(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z
+#isFixedInt16(Lorg/apache/hadoop/hbase/util/PositionedByteRange;)Z

+###org/apache/hadoop/hbase/util/BoundedArrayQueue
@0.98.13-hadoop1
+#<init>(I)V
+#size()I
+#iterator()Ljava/util/Iterator;
+#offer(Ljava/lang/Object;)Z
+#poll()Ljava/lang/Object;
+#peek()Ljava/lang/Object;
@0.99.0
-###org/apache/hadoop/hbase/util/BoundedArrayQueue

+###org/apache/hadoop/hbase/util/Base64$Base64InputStream
@0.95.1-hadoop1
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;I)V
+#read()I
+#read([BII)I
@1.2.7
-#<init>(Ljava/io/InputStream;)V
@1.3.0
+#<init>(Ljava/io/InputStream;)V
@1.3.3
-#<init>(Ljava/io/InputStream;)V
@1.4.0
+#<init>(Ljava/io/InputStream;)V
@1.4.6
-#<init>(Ljava/io/InputStream;)V
@2.0.0-alpha-1
+#<init>(Ljava/io/InputStream;)V
@2.0.2
-###org/apache/hadoop/hbase/util/Base64$Base64InputStream

+###org/apache/hadoop/hbase/util/Base64$Base64OutputStream
@0.95.1-hadoop1
+#<init>(Ljava/io/OutputStream;)V
+#<init>(Ljava/io/OutputStream;I)V
+#write(I)V
+#write([BII)V
+#flushBase64()V
+#close()V
+#suspendEncoding()V
+#resumeEncoding()V
@1.2.7
-#<init>(Ljava/io/OutputStream;)V
-#suspendEncoding()V
-#resumeEncoding()V
@1.3.0
+#<init>(Ljava/io/OutputStream;)V
+#suspendEncoding()V
+#resumeEncoding()V
@1.3.3
-#<init>(Ljava/io/OutputStream;)V
-#suspendEncoding()V
-#resumeEncoding()V
@1.4.0
+#<init>(Ljava/io/OutputStream;)V
+#suspendEncoding()V
+#resumeEncoding()V
@1.4.6
-#<init>(Ljava/io/OutputStream;)V
-#suspendEncoding()V
-#resumeEncoding()V
@2.0.0-alpha-1
+#<init>(Ljava/io/OutputStream;)V
+#suspendEncoding()V
+#resumeEncoding()V
@2.0.2
-###org/apache/hadoop/hbase/util/Base64$Base64OutputStream

+###org/apache/hadoop/hbase/util/Base64
@0.95.1-hadoop1
+#main([Ljava/lang/String;)V
+#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
+#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
+#encodeBytes([B)Ljava/lang/String;
+#encodeBytes([BI)Ljava/lang/String;
+#encodeBytes([BII)Ljava/lang/String;
+#encodeBytes([BIII)Ljava/lang/String;
+#decode([BIII)[B
+#decode(Ljava/lang/String;)[B
+#decode(Ljava/lang/String;I)[B
+#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
+#encodeToFile([BLjava/lang/String;)Z
+#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
+#decodeFromFile(Ljava/lang/String;)[B
+#encodeFromFile(Ljava/lang/String;)Ljava/lang/String;
+#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
+#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@1.2.7
-#main([Ljava/lang/String;)V
-#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
-#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
-#encodeBytes([BII)Ljava/lang/String;
-#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
-#encodeToFile([BLjava/lang/String;)Z
-#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
-#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
-#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@1.3.0
+#main([Ljava/lang/String;)V
+#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
+#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
+#encodeBytes([BII)Ljava/lang/String;
+#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
+#encodeToFile([BLjava/lang/String;)Z
+#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
+#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
+#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@1.3.3
-#main([Ljava/lang/String;)V
-#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
-#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
-#encodeBytes([BII)Ljava/lang/String;
-#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
-#encodeToFile([BLjava/lang/String;)Z
-#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
-#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
-#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@1.4.0
+#main([Ljava/lang/String;)V
+#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
+#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
+#encodeBytes([BII)Ljava/lang/String;
+#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
+#encodeToFile([BLjava/lang/String;)Z
+#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
+#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
+#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@1.4.6
-#main([Ljava/lang/String;)V
-#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
-#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
-#encodeBytes([BII)Ljava/lang/String;
-#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
-#encodeToFile([BLjava/lang/String;)Z
-#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
-#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
-#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@2.0.0-alpha-1
+#main([Ljava/lang/String;)V
+#encodeObject(Ljava/io/Serializable;)Ljava/lang/String;
+#encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;
+#encodeBytes([BII)Ljava/lang/String;
+#decodeToObject(Ljava/lang/String;)Ljava/lang/Object;
+#encodeToFile([BLjava/lang/String;)Z
+#decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z
+#encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
+#decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V
@2.0.2
-###org/apache/hadoop/hbase/util/Base64

+###org/apache/hadoop/hbase/util/PairOfSameType
@0.95.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;)V
+#getFirst()Ljava/lang/Object;
+#getSecond()Ljava/lang/Object;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#iterator()Ljava/util/Iterator;

+###org/apache/hadoop/hbase/util/ChecksumFactory
@0.98.0-hadoop1
+#<init>()V
+#newInstance(Ljava/lang/String;)Ljava/util/zip/Checksum;
+#newConstructor(Ljava/lang/String;)Ljava/lang/reflect/Constructor;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/ChecksumFactory

+###org/apache/hadoop/hbase/util/JenkinsHash
@0.95.0
+#<init>()V
+#getInstance()Lorg/apache/hadoop/hbase/util/Hash;
+#hash([BIII)I
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
+#hash(Lorg/apache/hadoop/hbase/util/HashKey;I)I
-#hash([BIII)I

+###org/apache/hadoop/hbase/util/Addressing
@0.95.0
+#<init>()V
+#createInetSocketAddressFromHostAndPortStr(Ljava/lang/String;)Ljava/net/InetSocketAddress;
+#createHostAndPortStr(Ljava/lang/String;I)Ljava/lang/String;
+#parseHostname(Ljava/lang/String;)Ljava/lang/String;
+#parsePort(Ljava/lang/String;)I
@0.99.0
+#getIpAddress()Ljava/net/InetAddress;
@0.99.2
+#isLocalAddress(Ljava/net/InetAddress;)Z
@1.0.0
+#getIp4Address()Ljava/net/InetAddress;
+#getIp6Address()Ljava/net/InetAddress;
@2.4.9
+#inetSocketAddress2String(Ljava/net/InetSocketAddress;)Ljava/lang/String;
@3.0.0-alpha-1
-#inetSocketAddress2String(Ljava/net/InetSocketAddress;)Ljava/lang/String;
@3.0.0-alpha-2
+#inetSocketAddress2String(Ljava/net/InetSocketAddress;)Ljava/lang/String;

+###org/apache/hadoop/hbase/util/ByteBufferArray
@0.95.0
+#<init>(JZ)V
+#getMultiple(JI[B)V
+#getMultiple(JI[BI)V
+#putMultiple(JI[B)V
+#putMultiple(JI[BI)V
@0.98.1-hadoop1
+#getMultiple(JI[B)I
+#getMultiple(JI[BI)I
-#getMultiple(JI[B)V
-#getMultiple(JI[BI)V
@1.7.0
+#<init>(JZLorg/apache/hadoop/hbase/util/ByteBufferAllocator;)V
-#<init>(JZ)V
@2.0.0-alpha-1
+#asSubByteBuff(JI)Lorg/apache/hadoop/hbase/nio/ByteBuff;
@2.0.0-beta-1
+#<init>(JLorg/apache/hadoop/hbase/util/ByteBufferAllocator;)V
-#<init>(JZLorg/apache/hadoop/hbase/util/ByteBufferAllocator;)V
@2.3.0
+#read(JLorg/apache/hadoop/hbase/nio/ByteBuff;)I
+#write(JLorg/apache/hadoop/hbase/nio/ByteBuff;)I
+#asSubByteBuffers(JI)[Ljava/nio/ByteBuffer;
-#getMultiple(JI[B)I
-#getMultiple(JI[BI)I
-#putMultiple(JI[B)V
-#putMultiple(JI[BI)V
-#asSubByteBuff(JI)Lorg/apache/hadoop/hbase/nio/ByteBuff;

+###org/apache/hadoop/hbase/util/UnsafeAvailChecker
@0.98.18-hadoop1
+#isAvailable()Z
+#unaligned()Z
@0.99.0
-###org/apache/hadoop/hbase/util/UnsafeAvailChecker

+###org/apache/hadoop/hbase/util/UnsafeAccess
@0.98.13-hadoop1
+#isAvailable()Z
@0.98.17-hadoop1
+#unaligned()Z
@0.98.18-hadoop1
+#copy([BILjava/nio/ByteBuffer;II)V
+#copy(Ljava/nio/ByteBuffer;I[BII)V
+#copy(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V
-#isAvailable()Z
-#unaligned()Z
@0.99.0
-###org/apache/hadoop/hbase/util/UnsafeAccess

+###org/apache/hadoop/hbase/util/ExceptionUtil
@0.98.0-hadoop1
+#isInterrupt(Ljava/lang/Throwable;)Z
+#rethrowIfInterrupt(Ljava/lang/Throwable;)V
+#asInterrupt(Ljava/lang/Throwable;)Ljava/io/InterruptedIOException;

+###org/apache/hadoop/hbase/util/SimplePositionedByteRange
@0.95.2-hadoop1
+#<init>()V
+#<init>(I)V
+#<init>([B)V
+#<init>([BII)V
+#unset()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getPosition()I
+#setPosition(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getRemaining()I
+#peek()B
+#get()B
+#get([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
@0.99.0
+#putShort(S)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(J)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putVLong(J)I
+#putShort(IS)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putVLong(IJ)I
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setLimit(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
-#setOffset(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#setLength(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#getPosition()I
-#setPosition(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#getRemaining()I
-#peek()B
-#get()B
-#get([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#get([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
-#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;

+###org/apache/hadoop/hbase/util/VersionInfo
@0.95.0
+#<init>()V
+#getVersion()Ljava/lang/String;
+#getRevision()Ljava/lang/String;
+#getDate()Ljava/lang/String;
+#getUser()Ljava/lang/String;
+#getUrl()Ljava/lang/String;
+#writeTo(Ljava/io/PrintWriter;)V
+#logVersion()V
+#main([Ljava/lang/String;)V
@0.98.13-hadoop1
+#getSrcChecksum()Ljava/lang/String;
@0.98.18-hadoop1
+#writeTo(Ljava/io/PrintStream;)V
@0.99.0
-#writeTo(Ljava/io/PrintStream;)V
@1.2.0
+#writeTo(Ljava/io/PrintStream;)V
@1.4.0
+#compareVersion(Ljava/lang/String;Ljava/lang/String;)I
@2.0.0-alpha-1
-#compareVersion(Ljava/lang/String;Ljava/lang/String;)I
@2.0.0-alpha2
+#compareVersion(Ljava/lang/String;Ljava/lang/String;)I
@2.2.2
+#getMajorVersion(Ljava/lang/String;)I

+###org/apache/hadoop/hbase/util/PrettyPrinter$Unit
@0.98.3-hadoop1
+#values()[Lorg/apache/hadoop/hbase/util/PrettyPrinter$Unit;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/PrettyPrinter$Unit;

+###org/apache/hadoop/hbase/util/PrettyPrinter
@0.98.3-hadoop1
+#<init>()V
+#format(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/PrettyPrinter$Unit;)Ljava/lang/String;
@1.7.0
+#toString(Ljava/util/Collection;)Ljava/lang/String;
@2.0.0-alpha-1
+#valueOf(Ljava/lang/String;Lorg/apache/hadoop/hbase/util/PrettyPrinter$Unit;)Ljava/lang/String;
-#toString(Ljava/util/Collection;)Ljava/lang/String;
@2.3.0
+#toString(Ljava/util/Collection;)Ljava/lang/String;

+###org/apache/hadoop/hbase/util/Threads
@0.95.0
+#<init>()V
+#setDaemonThreadRunning(Ljava/lang/Thread;)Ljava/lang/Thread;
+#setDaemonThreadRunning(Ljava/lang/Thread;Ljava/lang/String;)Ljava/lang/Thread;
+#setDaemonThreadRunning(Ljava/lang/Thread;Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;)Ljava/lang/Thread;
+#shutdown(Ljava/lang/Thread;)V
+#shutdown(Ljava/lang/Thread;J)V
+#threadDumpingIsAlive(Ljava/lang/Thread;)V
+#sleep(J)V
+#sleepWithoutInterrupt(J)V
+#getBoundedCachedThreadPool(IJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadPoolExecutor;
+#getNamedThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
+#newDaemonThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
+#newDaemonThreadFactory(Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;)Ljava/util/concurrent/ThreadFactory;
@0.95.1-hadoop1
+#getBlockingThreadPool(IJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadPoolExecutor;
@0.95.2-hadoop1
-#getBlockingThreadPool(IJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadPoolExecutor;
@0.98.9-hadoop1
+#printThreadInfo(Ljava/io/PrintStream;Ljava/lang/String;)V
@0.99.0
+#setLoggingUncaughtExceptionHandler(Ljava/lang/Thread;)V
-#printThreadInfo(Ljava/io/PrintStream;Ljava/lang/String;)V
@1.0.0
+#printThreadInfo(Ljava/io/PrintStream;Ljava/lang/String;)V
@1.7.2
+#isNonDaemonThreadRunning()Z
+#printStackTrace(Ljava/lang/Thread;)Ljava/lang/String;
@2.0.0-alpha-1
-#isNonDaemonThreadRunning()Z
-#printStackTrace(Ljava/lang/Thread;)Ljava/lang/String;
@2.1.7
-#getNamedThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
@2.2.0
+#getNamedThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
@2.2.1
-#getNamedThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
@2.2.6
+#getNamedThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
@2.4.0
-#getNamedThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
-#newDaemonThreadFactory(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
-#newDaemonThreadFactory(Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;)Ljava/util/concurrent/ThreadFactory;
@2.4.9
+#isNonDaemonThreadRunning()Z
+#printStackTrace(Ljava/lang/Thread;)Ljava/lang/String;
@3.0.0-alpha-1
-#isNonDaemonThreadRunning()Z
-#printStackTrace(Ljava/lang/Thread;)Ljava/lang/String;
@3.0.0-alpha-2
+#isNonDaemonThreadRunning()Z
+#printStackTrace(Ljava/lang/Thread;)Ljava/lang/String;

+###org/apache/hadoop/hbase/util/JVM
@0.95.0
+#<init>()V
+#isUnix()Z
+#isGZIPOutputStreamFinishBroken()Z
+#getOpenFileDescriptorCount()J
+#getMaxFileDescriptorCount()J
@0.95.1-hadoop1
+#getSystemLoadAverage()D
+#getFreeMemory()J
+#getNumberOfRunningProcess()I
@1.1.0
+#isLinux()Z
+#isAmd64()Z
@2.4.8
+#getJVMSpecVersion()I
@2.5.0
+#isAarch64()Z
@3.0.0-alpha-1
-#isAarch64()Z
-#getJVMSpecVersion()I
@3.0.0-alpha-2
+#getJVMSpecVersion()I

+###org/apache/hadoop/hbase/util/Triple
@0.95.0
+#<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#getFirst()Ljava/lang/Object;
+#setFirst(Ljava/lang/Object;)V
+#getSecond()Ljava/lang/Object;
+#setSecond(Ljava/lang/Object;)V
+#getThird()Ljava/lang/Object;
+#setThird(Ljava/lang/Object;)V
@0.98.0-hadoop1
+#create(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/util/Triple;
@2.0.0-alpha-1
+#<init>()V

+###org/apache/hadoop/hbase/util/ConcurrentIndex
@0.96.1-hadoop1
+#<init>(Lcom/google/common/base/Supplier;)V
+#<init>(Ljava/util/Comparator;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)V
+#values(Ljava/lang/Object;)Ljava/util/Set;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
@1.3.0
-###org/apache/hadoop/hbase/util/ConcurrentIndex

+###org/apache/hadoop/hbase/util/MurmurHash3
@0.98.0-hadoop1
+#<init>()V
+#getInstance()Lorg/apache/hadoop/hbase/util/Hash;
+#hash([BIII)I
@2.0.0-alpha-1
+#hash(Lorg/apache/hadoop/hbase/util/HashKey;I)I
-#hash([BIII)I

+###org/apache/hadoop/hbase/util/CoprocessorClassLoader
@0.95.1-hadoop1
+#getIfCached(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/util/CoprocessorClassLoader;
+#getAllCached()Ljava/util/Collection;
+#clearCache()V
+#getClassLoader(Lorg/apache/hadoop/fs/Path;Ljava/lang/ClassLoader;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/util/CoprocessorClassLoader;
+#loadClass(Ljava/lang/String;)Ljava/lang/Class;
+#getResource(Ljava/lang/String;)Ljava/net/URL;
@0.98.20-hadoop1
+#loadClass(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Class;
@0.99.0
-#loadClass(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Class;
@1.4.0
+#loadClass(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Class;

+###org/apache/hadoop/hbase/KeyValue$Type
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/KeyValue$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/KeyValue$Type;
+#getCode()B
+#codeToType(B)Lorg/apache/hadoop/hbase/KeyValue$Type;

+###org/apache/hadoop/hbase/KeyValue$MetaComparator
@0.95.0
+#<init>()V
+#getRawComparator()Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
@0.96.0-hadoop1
+#compareRows([BII[BII)I
+#getShortMidpointKey([B[B)[B
+#getLegacyKeyComparatorName()Ljava/lang/String;
-#getRawComparator()Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
@0.99.0
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareOnlyKeyPortion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/KeyValue$KVComparator
@0.95.0
+#<init>()V
+#getRawComparator()Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
+#compare(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
+#compareTimestamps(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
+#compareRows(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
+#compareRows(Lorg/apache/hadoop/hbase/KeyValue;SLorg/apache/hadoop/hbase/KeyValue;S)I
+#compareRows(Lorg/apache/hadoop/hbase/KeyValue;[B)I
+#compareRows([BII[BII)I
+#compareColumns(Lorg/apache/hadoop/hbase/KeyValue;[BIII)I
+#matchingRowColumn(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Z
+#matchingRows(Lorg/apache/hadoop/hbase/KeyValue;[B)Z
+#matchingRows(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Z
+#matchingRows(Lorg/apache/hadoop/hbase/KeyValue;SLorg/apache/hadoop/hbase/KeyValue;S)Z
+#matchingRows([BII[BII)Z
+#matchingRowsGreaterTimestamp(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Z
+#getComparatorIgnoringTimestamps()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
+#getComparatorIgnoringType()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@0.95.2-hadoop1
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
-#compare(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
-#getComparatorIgnoringTimestamps()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#getComparatorIgnoringType()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
@0.96.0-hadoop1
+#getLegacyKeyComparatorName()Ljava/lang/String;
+#compare([BII[BII)I
+#compareFlatKey([BII[BII)I
+#compareFlatKey([B[B)I
+#compareIgnoringPrefix(I[BII[BII)I
+#calcIndexKey([B[B)[B
+#getShortMidpointKey([B[B)[B
-#getRawComparator()Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
-#compareRows(Lorg/apache/hadoop/hbase/KeyValue;SLorg/apache/hadoop/hbase/KeyValue;S)I
-#compareRows(Lorg/apache/hadoop/hbase/KeyValue;[B)I
-#compareColumns(Lorg/apache/hadoop/hbase/KeyValue;[BIII)I
-#matchingRows(Lorg/apache/hadoop/hbase/KeyValue;[B)Z
-#matchingRows(Lorg/apache/hadoop/hbase/KeyValue;SLorg/apache/hadoop/hbase/KeyValue;S)Z
-#matchingRows([BII[BII)Z
-#matchingRowsGreaterTimestamp(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Z
@0.98.0-hadoop1
+#matchingRows([BII[BII)Z
@0.98.12-hadoop1
+#compareKey([BII[BII[BII[BIIJB)I
@0.99.0
+#compareOnlyKeyPortion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareTimestamps(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#matchingRowColumn(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#compareKey([BII[BII[BII[BIIJB)I
-#compareTimestamps(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
-#compareRows(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
-#matchingRowColumn(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Z
-#matchingRows(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)Z
@0.99.2
*#getShortMidpointKey([B[B)[B[deprecated]
@1.0.1
+#compareKey(Lorg/apache/hadoop/hbase/Cell;[BII[BII[BIIJB)I
@1.3.0
+#compareRows(Lorg/apache/hadoop/hbase/Cell;[BII)I
@2.0.0-alpha-1
-#compareRows(Lorg/apache/hadoop/hbase/Cell;[BII)I

+###org/apache/hadoop/hbase/KeyValue$RowOnlyComparator
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#compare(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.0-alpha4
-###org/apache/hadoop/hbase/KeyValue$RowOnlyComparator

+###org/apache/hadoop/hbase/KeyValue$SamePrefixComparator
@0.95.0
+#compareIgnoringPrefix(ILjava/lang/Object;IILjava/lang/Object;II)I
@0.96.0-hadoop1
+#compareIgnoringPrefix(I[BII[BII)I
-#compareIgnoringPrefix(ILjava/lang/Object;IILjava/lang/Object;II)I

+###org/apache/hadoop/hbase/KeyValue$RawBytesComparator
@0.96.0-hadoop1
+#<init>()V
+#getLegacyKeyComparatorName()Ljava/lang/String;
+#compareFlatKey([BII[BII)I
+#calcIndexKey([B[B)[B
@0.99.0
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareOnlyKeyPortion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@0.99.2
*#compareFlatKey([BII[BII)I[deprecated]
@2.0.0-alpha4
-###org/apache/hadoop/hbase/KeyValue$RawBytesComparator

+###org/apache/hadoop/hbase/KeyValue
@0.95.0
+#getRowComparator([B)Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
+#getKeyValueDataStructureSize(IIII)J
+#getKeyDataStructureSize(III)J
+#isDelete(B)Z
+#getMvccVersion()J
+#setMvccVersion(J)V
+#getMemstoreTS()J[deprecated]
+#setMemstoreTS(J)V[deprecated]
+#<init>()V
+#<init>([B)V
+#<init>([BI)V
+#<init>([BII)V
+#<init>([BIII)V
+#<init>([BJ)V
+#<init>([BJLorg/apache/hadoop/hbase/KeyValue$Type;)V
+#<init>([B[B[B)V
+#<init>([B[B[B[B)V
+#<init>([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;)V
+#<init>([B[B[BJ[B)V
+#<init>([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[B)V
+#<init>([B[B[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V
+#<init>([BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V
+#<init>(IIIJLorg/apache/hadoop/hbase/KeyValue$Type;I)V
+#<init>([B[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V
+#<init>([BI[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#clone()Lorg/apache/hadoop/hbase/KeyValue;
+#shallowCopy()Lorg/apache/hadoop/hbase/KeyValue;
+#toString()Ljava/lang/String;
+#keyToString([B)Ljava/lang/String;
+#toStringMap()Ljava/util/Map;
+#keyToString([BII)Ljava/lang/String;
+#humanReadableTimestamp(J)Ljava/lang/String;
+#getBuffer()[B
+#getOffset()I
+#getLength()I
+#getKeyOffset()I
+#getKeyString()Ljava/lang/String;
+#getKeyLength()I
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyOffset(I)I
+#getFamilyLength()B
+#getFamilyLength(I)B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierOffset(I)I
+#getQualifierLength()I
+#getQualifierLength(II)I
+#getTotalColumnLength()I
+#getTotalColumnLength(II)I
+#getTimestampOffset()I
+#getTimestampOffset(I)I
+#isLatestTimestamp()Z
+#isInternal()Z
+#updateLatestStamp([B)Z
+#getKey()[B
+#getValue()[B
+#getValueAsByteBuffer()Ljava/nio/ByteBuffer;
+#loadValue(Ljava/nio/ByteBuffer;)V
+#getRow()[B
+#getTimestamp()J
+#getType()B
+#getTypeByte()B
+#isDelete()Z
+#isDeleteType()Z
+#isDeleteFamily()Z
+#isDeleteColumnOrFamily()Z
+#getFamily()[B
+#getQualifier()[B
+#split()Lorg/apache/hadoop/hbase/KeyValue$SplitKeyValue;
+#matchingFamily([B)Z
+#matchingFamily([BII)Z
+#matchingFamily(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#matchingQualifier([B)Z
+#matchingQualifier([BII)Z
+#matchingQualifier(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#matchingRow([B)Z
+#matchingRow([BII)Z
+#matchingRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
+#matchingColumnNoDelimiter([B)Z
+#matchingColumn([B[B)Z
+#matchingColumn([BII[BII)Z
+#nonNullRowAndColumn()Z
+#isEmptyColumn()Z
+#createKeyOnly(Z)Lorg/apache/hadoop/hbase/KeyValue;
+#parseColumn([B)[[B
+#makeColumn([B[B)[B
+#getFamilyDelimiterIndex([BII)I
+#getDelimiter([BIII)I
+#getDelimiterInReverse([BIII)I
+#createLastOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BIS)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BJ)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstDeleteFamilyOnRow([B[B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B[B[BJ)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B[B[B[B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BI[BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
+#createLastOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
+#createLastOnRowCol()Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRowColTS(J)Lorg/apache/hadoop/hbase/KeyValue;
+#createKeyValueFromKey([B)Lorg/apache/hadoop/hbase/KeyValue;
+#createKeyValueFromKey(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/KeyValue;
+#createKeyValueFromKey([BII)Lorg/apache/hadoop/hbase/KeyValue;
+#create(Ljava/io/DataInput;)Lorg/apache/hadoop/hbase/KeyValue;
+#create(ILjava/io/DataInput;)Lorg/apache/hadoop/hbase/KeyValue;
+#iscreate(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/KeyValue;
+#write(Lorg/apache/hadoop/hbase/KeyValue;Ljava/io/DataOutput;)J
+#oswrite(Lorg/apache/hadoop/hbase/KeyValue;Ljava/io/OutputStream;)J
+#heapSize()J
+#clone()Ljava/lang/Object;
@0.95.1-hadoop1
+#getTagsOffset()I
+#getTagsLength()I
+#getTagsArray()[B
@0.95.2-hadoop1
+#getRowComparator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
+#isDeleteFamilyVersion()Z
-#getRowComparator([B)Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
@0.96.0-hadoop1
*#<init>([B[B[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V[deprecated]
+#<init>(Lorg/apache/hadoop/hbase/Cell;)V
*#<init>([B[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V[deprecated]
*#<init>([BI[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V[deprecated]
*#getFamilyOffset(I)I[deprecated]
*#getQualifierOffset(I)I[deprecated]
*#getQualifierLength(II)I[deprecated]
*#getTimestampOffset(I)I[deprecated]
*#getValue()[B[deprecated]
*#getRow()[B[deprecated]
*#getType()B[deprecated]
*#isDelete()Z[deprecated]
*#getFamily()[B[deprecated]
*#getQualifier()[B[deprecated]
+#getTagsLength()S
-#getRowComparator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
-#getTotalColumnLength()I
-#getTotalColumnLength(II)I
-#isInternal()Z
-#getValueAsByteBuffer()Ljava/nio/ByteBuffer;
-#loadValue(Ljava/nio/ByteBuffer;)V
-#split()Lorg/apache/hadoop/hbase/KeyValue$SplitKeyValue;
-#matchingFamily([BII)Z
-#matchingFamily(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#matchingColumnNoDelimiter([B)Z
-#nonNullRowAndColumn()Z
-#isEmptyColumn()Z
-#getFamilyDelimiterIndex([BII)I
-#getTagsLength()I
@0.96.1-hadoop1
+#<init>([BIIJ)V
+#<init>([BII[BIILjava/nio/ByteBuffer;JLorg/apache/hadoop/hbase/KeyValue$Type;Ljava/nio/ByteBuffer;)V
-#<init>([BIII)V
@0.98.0-hadoop1
+#getKeyValueDataStructureSize(IIIII)J
+#getKeyValueDataStructureSize(III)J
+#<init>([B[B[BJ[B[Lorg/apache/hadoop/hbase/Tag;)V
+#<init>([B[B[BJ[BLjava/util/List;)V
+#<init>([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[BLjava/util/List;)V
+#<init>([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[B[B)V
+#<init>([B[B[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BIILjava/util/List;)V
+#<init>([B[B[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII[B)V
+#<init>([BI[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII[Lorg/apache/hadoop/hbase/Tag;)V
+#<init>([BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BIILjava/util/List;)V
+#<init>([BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII[BII)V
+#<init>(IIIJLorg/apache/hadoop/hbase/KeyValue$Type;II)V
+#<init>([BII[BIILjava/nio/ByteBuffer;JLorg/apache/hadoop/hbase/KeyValue$Type;Ljava/nio/ByteBuffer;Ljava/util/List;)V
*#getBuffer()[B[deprecated]
+#getTags()Ljava/util/List;
+#cloneAndAddTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/KeyValue;
*#oswrite(Lorg/apache/hadoop/hbase/KeyValue;Ljava/io/OutputStream;)J[deprecated]
+#oswrite(Lorg/apache/hadoop/hbase/KeyValue;Ljava/io/OutputStream;Z)J
-#getMemstoreTS()J[deprecated]
-#setMemstoreTS(J)V[deprecated]
-#<init>([B[B[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V[deprecated]
-#<init>([BII[BIILjava/nio/ByteBuffer;JLorg/apache/hadoop/hbase/KeyValue$Type;Ljava/nio/ByteBuffer;)V
-#<init>([B[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V[deprecated]
-#<init>([BI[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII)V[deprecated]
-#getFamilyOffset(I)I[deprecated]
-#getQualifierOffset(I)I[deprecated]
-#getQualifierLength(II)I[deprecated]
-#getTimestampOffset(I)I[deprecated]
@0.98.4-hadoop1
+#getTagsLengthUnsigned()I[deprecated]
*#getTagsLength()S[deprecated]
@0.98.12-hadoop1
+#heapSizeWithoutTags()J[deprecated]
@0.99.0
+#getSequenceId()J
+#setSequenceId(J)V
+#writeByteArray([BI[BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;[BII[Lorg/apache/hadoop/hbase/Tag;)I
+#getTagsLength()I
-#setMvccVersion(J)V
-#isDeleteType()Z
-#isDeleteFamily()Z
-#isDeleteFamilyVersion()Z
-#isDeleteColumnOrFamily()Z
-#getTagsLengthUnsigned()I[deprecated]
-#getTagsLength()S[deprecated]
-#matchingFamily([B)Z
-#matchingQualifier([B)Z
-#matchingQualifier([BII)Z
-#matchingQualifier(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#matchingRow([B)Z
-#matchingRow([BII)Z
-#matchingRow(Lorg/apache/hadoop/hbase/KeyValue;)Z
-#matchingColumn([B[B)Z
-#matchingColumn([BII[BII)Z
-#createLastOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([BIS)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([BJ)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstDeleteFamilyOnRow([B[B)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([B[B[BJ)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([B[B[B[B)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRow([BI[BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
-#createLastOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
-#createLastOnRowCol()Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRowColTS(J)Lorg/apache/hadoop/hbase/KeyValue;
-#heapSizeWithoutTags()J[deprecated]
@0.99.1
+#setTimestamp(J)V
+#setTimestamp([BI)V
@0.99.2
+#createFirstOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
+#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
+#createFirstOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
@1.0.1
+#heapSizeWithoutTags()J[deprecated]
@1.2.0
*#iscreate(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
@2.0.0-alpha-1
*#oswrite(Lorg/apache/hadoop/hbase/KeyValue;Ljava/io/OutputStream;Z)J[deprecated]
+#write(Ljava/io/OutputStream;Z)I
+#getSerializedSize(Z)I
+#write(Ljava/nio/ByteBuffer;I)V
+#deepClone()Lorg/apache/hadoop/hbase/Cell;
-#getMvccVersion()J
-#createFirstOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
-#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
-#createFirstOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
-#getValue()[B[deprecated]
-#getRow()[B[deprecated]
-#getFamily()[B[deprecated]
-#getQualifier()[B[deprecated]
-#oswrite(Lorg/apache/hadoop/hbase/KeyValue;Ljava/io/OutputStream;)J[deprecated]
-#heapSizeWithoutTags()J[deprecated]
@2.0.0-alpha4
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#isDelete(B)Z
-#getType()B[deprecated]
-#isDelete()Z[deprecated]
-#parseColumn([B)[[B
-#makeColumn([B[B)[B
-#createKeyValueFromKey([B)Lorg/apache/hadoop/hbase/KeyValue;
-#createKeyValueFromKey(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/KeyValue;
-#createKeyValueFromKey([BII)Lorg/apache/hadoop/hbase/KeyValue;
-#cloneAndAddTags(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/KeyValue;
-#iscreate(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
-#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#setTimestamp([B)V
-#setTimestamp([BI)V
-#getTags()Ljava/util/List;
@2.2.0
+#getSerializedSize()I

+###org/apache/hadoop/hbase/Cell
@0.95.0
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getMvccVersion()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
@0.95.1-hadoop1
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
@0.96.0-hadoop1
+#getTagsLength()S
+#getValue()[B[deprecated]
+#getFamily()[B[deprecated]
+#getQualifier()[B[deprecated]
+#getRow()[B[deprecated]
-#getTagsLength()I
@0.98.4-hadoop1
*#getTagsLength()S[deprecated]
+#getTagsLengthUnsigned()I[deprecated]
@0.99.0
*#getMvccVersion()J[deprecated]
+#getSequenceId()J
+#getTagsLength()I
-#getTagsLength()S[deprecated]
-#getTagsLengthUnsigned()I[deprecated]
@2.0.0-alpha-1
-#getMvccVersion()J[deprecated]
-#getValue()[B[deprecated]
-#getFamily()[B[deprecated]
-#getQualifier()[B[deprecated]
-#getRow()[B[deprecated]
@2.0.0-beta-1
*#getTypeByte()B[deprecated]
*#getSequenceId()J[deprecated]
*#getTagsArray()[B[deprecated]
*#getTagsOffset()I[deprecated]
*#getTagsLength()I[deprecated]
+#getType()Lorg/apache/hadoop/hbase/Cell$Type;
@2.2.0
+#getSerializedSize()I

+###org/apache/hadoop/hbase/io/HeapSize
@0.95.0
+#heapSize()J

+###org/apache/hadoop/hbase/io/TimeRange
@0.95.0
+#<init>()V
+#<init>(J)V
+#<init>([B)V
+#<init>(JJ)V
+#<init>([B[B)V
+#getMin()J
+#getMax()J
+#isAllTime()Z
+#withinTimeRange([BI)Z
+#withinTimeRange(J)Z
+#withinOrAfterTimeRange(J)Z
+#compare(J)I
+#toString()Ljava/lang/String;
@0.98.19-hadoop1
+#includesTimeRange(Lorg/apache/hadoop/hbase/io/TimeRange;)Z
@0.98.21-hadoop1
*#<init>([B[B)V[deprecated]
*#<init>(JJ)V[deprecated]
@0.99.0
-#includesTimeRange(Lorg/apache/hadoop/hbase/io/TimeRange;)Z
@1.2.0
*#<init>()V[deprecated]
*#<init>(J)V[deprecated]
*#<init>([B)V[deprecated]
*#<init>(JJ)V[deprecated]
*#<init>([B[B)V[deprecated]
@1.3.0
+#includesTimeRange(Lorg/apache/hadoop/hbase/io/TimeRange;)Z
@2.0.0
+#allTime()Lorg/apache/hadoop/hbase/io/TimeRange;
+#at(J)Lorg/apache/hadoop/hbase/io/TimeRange;
*#withinTimeRange([BI)Z[deprecated]
@2.1.6
+#from(J)Lorg/apache/hadoop/hbase/io/TimeRange;
+#until(J)Lorg/apache/hadoop/hbase/io/TimeRange;
+#between(JJ)Lorg/apache/hadoop/hbase/io/TimeRange;
@2.2.0
-#from(J)Lorg/apache/hadoop/hbase/io/TimeRange;
-#until(J)Lorg/apache/hadoop/hbase/io/TimeRange;
-#between(JJ)Lorg/apache/hadoop/hbase/io/TimeRange;
@2.2.1
+#from(J)Lorg/apache/hadoop/hbase/io/TimeRange;
+#until(J)Lorg/apache/hadoop/hbase/io/TimeRange;
+#between(JJ)Lorg/apache/hadoop/hbase/io/TimeRange;
@3.0.0-alpha-1
-#<init>()V[deprecated]
-#<init>(J)V[deprecated]
-#<init>([B)V[deprecated]
-#<init>([B[B)V[deprecated]
-#<init>(JJ)V[deprecated]
-#withinTimeRange([BI)Z[deprecated]

+###org/apache/hadoop/hbase/io/crypto/Context
@0.98.0-hadoop1
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#toString()Ljava/lang/String;
+#getCipher()Lorg/apache/hadoop/hbase/io/crypto/Cipher;
+#setCipher(Lorg/apache/hadoop/hbase/io/crypto/Cipher;)Lorg/apache/hadoop/hbase/io/crypto/Context;
+#getKeyBytes()[B
+#getKeyBytesHash()Ljava/lang/String;
+#getKeyFormat()Ljava/lang/String;
+#getKey()Ljava/security/Key;
+#setKey(Ljava/security/Key;)Lorg/apache/hadoop/hbase/io/crypto/Context;

+###org/apache/hadoop/hbase/io/crypto/Cipher
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/crypto/CipherProvider;)V
+#getProvider()Lorg/apache/hadoop/hbase/io/crypto/CipherProvider;
+#getName()Ljava/lang/String;
+#getKeyLength()I
+#getIvLength()I
+#getRandomKey()Ljava/security/Key;
+#getEncryptor()Lorg/apache/hadoop/hbase/io/crypto/Encryptor;
+#getDecryptor()Lorg/apache/hadoop/hbase/io/crypto/Decryptor;
+#createEncryptionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/io/crypto/Context;[B)Ljava/io/OutputStream;
+#createEncryptionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)Ljava/io/OutputStream;
+#createDecryptionStream(Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Context;[B)Ljava/io/InputStream;
+#createDecryptionStream(Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Decryptor;)Ljava/io/InputStream;

+###org/apache/hadoop/hbase/io/crypto/Encryptor
@0.98.0-hadoop1
+#setKey(Ljava/security/Key;)V
+#getIvLength()I
+#getIv()[B
+#setIv([B)V
+#createEncryptionStream(Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#reset()V
@0.98.4-hadoop1
+#getBlockSize()I

+###org/apache/hadoop/hbase/io/crypto/Decryptor
@0.98.0-hadoop1
+#setKey(Ljava/security/Key;)V
+#getIvLength()I
+#setIv([B)V
+#createDecryptionStream(Ljava/io/InputStream;)Ljava/io/InputStream;
+#reset()V
@0.98.4-hadoop1
+#getBlockSize()I

+###org/apache/hadoop/hbase/io/crypto/CipherProvider
@0.98.0-hadoop1
+#getName()Ljava/lang/String;
+#getSupportedCiphers()[Ljava/lang/String;
+#getCipher(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/crypto/Cipher;

+###org/apache/hadoop/hbase/io/crypto/KeyProvider
@0.98.0-hadoop1
+#init(Ljava/lang/String;)V
+#getKey(Ljava/lang/String;)Ljava/security/Key;
+#getKeys([Ljava/lang/String;)[Ljava/security/Key;

+###org/apache/hadoop/hbase/io/crypto/DefaultCipherProvider
@0.98.0-hadoop1
+#getInstance()Lorg/apache/hadoop/hbase/io/crypto/DefaultCipherProvider;
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getName()Ljava/lang/String;
+#getCipher(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/crypto/Cipher;
+#getSupportedCiphers()[Ljava/lang/String;

+###org/apache/hadoop/hbase/io/crypto/aes/AESEncryptor
@0.98.0-hadoop1
+#<init>(Ljavax/crypto/Cipher;Ljava/security/SecureRandom;)V
+#setKey(Ljava/security/Key;)V
+#getIvLength()I
+#getIv()[B
+#setIv([B)V
+#createEncryptionStream(Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#reset()V
@0.98.4-hadoop1
+#getBlockSize()I

+###org/apache/hadoop/hbase/io/crypto/aes/AES
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/crypto/CipherProvider;)V
+#getName()Ljava/lang/String;
+#getKeyLength()I
+#getIvLength()I
+#getRandomKey()Ljava/security/Key;
+#getEncryptor()Lorg/apache/hadoop/hbase/io/crypto/Encryptor;
+#getDecryptor()Lorg/apache/hadoop/hbase/io/crypto/Decryptor;
+#createEncryptionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/io/crypto/Context;[B)Ljava/io/OutputStream;
+#createEncryptionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)Ljava/io/OutputStream;
+#createDecryptionStream(Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Context;[B)Ljava/io/InputStream;
+#createDecryptionStream(Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Decryptor;)Ljava/io/InputStream;

+###org/apache/hadoop/hbase/io/crypto/aes/AESDecryptor
@0.98.0-hadoop1
+#<init>(Ljavax/crypto/Cipher;)V
+#setKey(Ljava/security/Key;)V
+#getIvLength()I
+#setIv([B)V
+#createDecryptionStream(Ljava/io/InputStream;)Ljava/io/InputStream;
+#reset()V
@0.98.4-hadoop1
+#getBlockSize()I

+###org/apache/hadoop/hbase/io/crypto/KeyStoreKeyProvider
@0.98.0-hadoop1
+#<init>()V
+#init(Ljava/lang/String;)V
+#getKey(Ljava/lang/String;)Ljava/security/Key;
+#getKeys([Ljava/lang/String;)[Ljava/security/Key;

+###org/apache/hadoop/hbase/io/crypto/Encryption$Context
@0.98.0-hadoop1
+#setCipher(Lorg/apache/hadoop/hbase/io/crypto/Cipher;)Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;
+#setKey(Ljava/security/Key;)Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;
+#setKey([B)Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;
+#setKey(Ljava/security/Key;)Lorg/apache/hadoop/hbase/io/crypto/Context;
+#setCipher(Lorg/apache/hadoop/hbase/io/crypto/Cipher;)Lorg/apache/hadoop/hbase/io/crypto/Context;

+###org/apache/hadoop/hbase/io/crypto/Encryption
@0.98.0-hadoop1
+#newContext()Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;
+#newContext(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;
+#getCipher(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/crypto/Cipher;
+#getSupportedCiphers()[Ljava/lang/String;
+#getSupportedCiphers(Lorg/apache/hadoop/conf/Configuration;)[Ljava/lang/String;
+#hash128([Ljava/lang/String;)[B
+#hash128([[B)[B
+#hash256([Ljava/lang/String;)[B
+#hash256([[B)[B
+#encrypt(Ljava/io/OutputStream;[BIILorg/apache/hadoop/hbase/io/crypto/Encryptor;)V
+#encrypt(Ljava/io/OutputStream;[BIILorg/apache/hadoop/hbase/io/crypto/Encryption$Context;[B)V
+#encrypt(Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)V
+#encrypt(Ljava/io/OutputStream;Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;[B)V
+#decrypt([BILjava/io/InputStream;ILorg/apache/hadoop/hbase/io/crypto/Decryptor;)V
+#decrypt([BILjava/io/InputStream;ILorg/apache/hadoop/hbase/io/crypto/Encryption$Context;[B)V
+#decrypt(Ljava/io/OutputStream;Ljava/io/InputStream;ILorg/apache/hadoop/hbase/io/crypto/Decryptor;)V
+#decrypt(Ljava/io/OutputStream;Ljava/io/InputStream;ILorg/apache/hadoop/hbase/io/crypto/Encryption$Context;[B)V
+#getSecretKeyForSubject(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Ljava/security/Key;
+#encryptWithSubjectKey(Ljava/io/OutputStream;Ljava/io/InputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/crypto/Cipher;[B)V
+#decryptWithSubjectKey(Ljava/io/OutputStream;Ljava/io/InputStream;ILjava/lang/String;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/crypto/Cipher;[B)V
+#getCipherProvider(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/crypto/CipherProvider;
+#getKeyProvider(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/io/crypto/KeyProvider;
+#incrementIv([B)V
@0.98.2-hadoop1
+#pbkdf128([Ljava/lang/String;)[B
+#pbkdf128([[B)[B
@0.98.4-hadoop1
+#incrementIv([BI)V
@2.4.0
+#isEncryptionEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
+#getConfiguredHashAlgorithm(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#failOnHashAlgorithmMismatch(Lorg/apache/hadoop/conf/Configuration;)Z
+#computeCryptoKeyHash(Lorg/apache/hadoop/conf/Configuration;[B)[B
+#generateSecretKey(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;[Ljava/lang/String;)[B
+#generateSecretKey(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;[[B)[B
+#hashWithAlg(Ljava/lang/String;[[B)[B

+###org/apache/hadoop/hbase/io/hfile/HFileContext
@0.98.0-hadoop1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)V
+#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#setCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
+#isUseHBaseChecksum()Z
+#isIncludesMvcc()Z
+#setIncludesMvcc(Z)V
+#isIncludesTags()Z
+#setIncludesTags(Z)V
+#isCompressTags()Z
+#setCompressTags(Z)V
+#getChecksumType()Lorg/apache/hadoop/hbase/util/ChecksumType;
+#getBytesPerChecksum()I
+#getBlocksize()I
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#setDataBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
+#getEncryptionContext()Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;
+#setEncryptionContext(Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)V
+#heapSize()J
+#clone()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
+#toString()Ljava/lang/String;
+#clone()Ljava/lang/Object;
@0.98.7-hadoop1
+#isCompressedOrEncrypted()Z
@1.1.0
+#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;J)V
+#setFileCreateTime(J)V
+#getFileCreateTime()J
-#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)V
@1.3.0
+#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;JLjava/lang/String;)V
+#getHFileName()Ljava/lang/String;
-#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;J)V
@1.6.0
+#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;JLjava/lang/String;[B[B)V
+#getColumnFamily()[B
+#getTableName()[B
-#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;JLjava/lang/String;)V
@2.0.0-alpha-1
-#<init>(ZZZLorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;ZLorg/apache/hadoop/hbase/util/ChecksumType;IILorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;JLjava/lang/String;[B[B)V
-#setCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
-#setDataBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)V
-#getColumnFamily()[B
-#getTableName()[B
@2.3.0
+#getColumnFamily()[B
+#getTableName()[B
+#getCellComparator()Lorg/apache/hadoop/hbase/CellComparator;
@2.5.1
+#getIndexBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;
@3.0.0-alpha-1
-#getIndexBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;

+###org/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
+#expectSpecific()V

+###org/apache/hadoop/hbase/io/hfile/BlockType
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#getId()I
+#writeToStream(Ljava/io/OutputStream;)V
+#write(Ljava/io/DataOutput;)V
+#write(Ljava/nio/ByteBuffer;)V
+#getCategory()Lorg/apache/hadoop/hbase/io/hfile/BlockType$BlockCategory;
+#parse([BII)Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#read(Ljava/io/DataInputStream;)Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#read(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#put([BI)I
+#readAndCheck(Ljava/io/DataInputStream;)V
+#readAndCheck(Ljava/nio/ByteBuffer;)V
+#isData()Z
@2.0.0-alpha-1
+#write(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
+#read(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/io/hfile/BlockType;
-#read(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/io/hfile/BlockType;
@2.5.0
+#isIndex()Z
+#isBloom()Z
@3.0.0-alpha-1
-#isIndex()Z
-#isBloom()Z

+###org/apache/hadoop/hbase/io/hfile/HFileContextBuilder
@0.98.0-hadoop1
+#<init>()V
+#withHBaseCheckSum(Z)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withIncludesMvcc(Z)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withIncludesTags(Z)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withCompression(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withCompressTags(Z)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withChecksumType(Lorg/apache/hadoop/hbase/util/ChecksumType;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withBytesPerCheckSum(I)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withBlockSize(I)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withDataBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withEncryptionContext(Lorg/apache/hadoop/hbase/io/crypto/Encryption$Context;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#build()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
@1.1.0
+#withCreateTime(J)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
@1.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#withHFileName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
@1.6.0
+#withColumnFamily([B)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withTableName([B)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
@2.0.0-alpha-1
-#withColumnFamily([B)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
-#withTableName([B)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
@2.3.0
+#withColumnFamily([B)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withTableName([B)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
+#withCellComparator(Lorg/apache/hadoop/hbase/CellComparator;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
@2.5.1
+#withIndexBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;
@3.0.0-alpha-1
-#withIndexBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;)Lorg/apache/hadoop/hbase/io/hfile/HFileContextBuilder;

+###org/apache/hadoop/hbase/io/compress/Compression$Algorithm
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;
+#createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;
+#createPlainCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;
+#getCompressor()Lorg/apache/hadoop/io/compress/Compressor;
+#returnCompressor(Lorg/apache/hadoop/io/compress/Compressor;)V
+#getDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;
+#returnDecompressor(Lorg/apache/hadoop/io/compress/Decompressor;)V
+#getName()Ljava/lang/String;
@2.5.0
+#reload(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/CompressionCodec;
@3.0.0-alpha-1
-#reload(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/CompressionCodec;
@3.0.0-alpha-2
+#reload(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/CompressionCodec;

+###org/apache/hadoop/hbase/io/compress/Compression
@0.95.0
+#getCompressionAlgorithmByName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#getSupportedAlgorithms()[Ljava/lang/String;
+#decompress([BILjava/io/InputStream;IILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
@2.3.0
+#decompress(Lorg/apache/hadoop/hbase/nio/ByteBuff;Ljava/io/InputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
-#decompress([BILjava/io/InputStream;IILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
@2.5.0
+#main([Ljava/lang/String;)V
-#decompress(Lorg/apache/hadoop/hbase/nio/ByteBuff;Ljava/io/InputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
@3.0.0-alpha-1
+#decompress(Lorg/apache/hadoop/hbase/nio/ByteBuff;Ljava/io/InputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
-#main([Ljava/lang/String;)V
@3.0.0-alpha-2
+#main([Ljava/lang/String;)V
-#decompress(Lorg/apache/hadoop/hbase/nio/ByteBuff;Ljava/io/InputStream;ILorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V

+###org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec$ReusableGzipOutputStream
@0.95.0
+#<init>(Ljava/io/OutputStream;)V
+#close()V
+#flush()V
+#write(I)V
+#write([BII)V
+#finish()V
+#resetState()V

+###org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec
@0.95.0
+#<init>()V
+#createOutputStream(Ljava/io/OutputStream;)Lorg/apache/hadoop/io/compress/CompressionOutputStream;

+###org/apache/hadoop/hbase/io/encoding/DataBlockEncoding
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getNameInBytes()[B
+#getId()S
+#writeIdInBytes(Ljava/io/OutputStream;)V
+#writeIdInBytes([BI)V
+#getEncoder()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;
+#getDataBlockEncoderById(S)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;
+#getNameFromId(S)Ljava/lang/String;
+#isCorrectEncoder(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;S)Z
+#getEncodingById(S)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;

+###org/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker
@0.95.0
+#setCurrentBuffer(Ljava/nio/ByteBuffer;)V
+#getKeyDeepCopy()Ljava/nio/ByteBuffer;
+#getValueShallowCopy()Ljava/nio/ByteBuffer;
+#getKeyValueBuffer()Ljava/nio/ByteBuffer;
+#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
+#rewind()V
+#next()Z
+#seekToKeyInBlock([BIIZ)I
@0.96.1-hadoop1
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
@0.98.16-hadoop1
-#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@0.99.0
+#getKeyValueBuffer()Ljava/nio/ByteBuffer;
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
*#seekToKeyInBlock([BIIZ)I[deprecated]
+#seekToKeyInBlock(Lorg/apache/hadoop/hbase/Cell;Z)I
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
-#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
@1.0.3
-#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@1.1.0
+#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@1.1.3
-#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@2.0.0-alpha-1
+#setCurrentBuffer(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
+#getKey()Lorg/apache/hadoop/hbase/Cell;
+#getCell()Lorg/apache/hadoop/hbase/Cell;
+#compareKey(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;)I
-#setCurrentBuffer(Ljava/nio/ByteBuffer;)V
-#getKeyDeepCopy()Ljava/nio/ByteBuffer;
-#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
-#seekToKeyInBlock([BIIZ)I[deprecated]
-#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
-#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I

+###org/apache/hadoop/hbase/io/encoding/DataBlockEncoder
@0.95.0
+#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
+#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
+#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.96.0-hadoop1
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@0.98.0-hadoop1
+#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#decodeKeyValues(Ljava/io/DataInputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Ljava/nio/ByteBuffer;
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
-#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
-#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@0.99.0
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[B)V
-#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
@0.99.1
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@2.0.0-alpha-1
+#getFirstKeyCellInBlock(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/Cell;
+#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.3.0
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
+#createSeeker(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.5.0
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-1
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-2
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;

+###org/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext
@0.95.0
+#getOutputStreamForEncoder()Ljava/io/OutputStream;
+#getOnDiskBytesWithHeader()[B
+#getUncompressedBytesWithHeader()[B
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#getHeaderSize()I
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#postEncoding(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#close()V
@0.95.1-hadoop1
+#setDummyHeader([B)V
-#getHeaderSize()I
@0.98.0-hadoop1
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
-#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
@0.99.0
+#setEncodingState(Lorg/apache/hadoop/hbase/io/encoding/EncodingState;)V
+#getEncodingState()Lorg/apache/hadoop/hbase/io/encoding/EncodingState;
+#compressAndEncrypt([B)[B
-#getOutputStreamForEncoder()Ljava/io/OutputStream;
-#getOnDiskBytesWithHeader()[B
-#getUncompressedBytesWithHeader()[B
-#setDummyHeader([B)V
@1.4.0
+#compressAndEncrypt([BII)Lorg/apache/hadoop/hbase/util/Bytes;
-#compressAndEncrypt([B)[B

+###org/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext
@0.95.0
+#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#prepareDecoding(IILjava/nio/ByteBuffer;[BI)V
@0.98.0-hadoop1
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
-#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
@0.99.2
+#prepareDecoding(IILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
-#prepareDecoding(IILjava/nio/ByteBuffer;[BI)V
@2.0.0-alpha-1
+#prepareDecoding(IILorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
-#prepareDecoding(IILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V

+###org/apache/hadoop/hbase/io/encoding/EncoderBufferTooSmallException
@0.95.0
+#<init>(Ljava/lang/String;)V

+###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$SeekerState
@0.95.0
@0.98.22-hadoop1
+#<init>()V
@0.99.0
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getMvccVersion()J
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getValue()[B[deprecated]
+#getFamily()[B[deprecated]
+#getQualifier()[B[deprecated]
+#getRow()[B[deprecated]
+#toString()Ljava/lang/String;
+#shallowCopy()Lorg/apache/hadoop/hbase/Cell;
-#<init>()V
@1.4.0
+#<init>()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectIntPair;Z)V
+#toCell()Lorg/apache/hadoop/hbase/Cell;
-#<init>()V
-#getRowArray()[B
-#getRowOffset()I
-#getRowLength()S
-#getFamilyArray()[B
-#getFamilyOffset()I
-#getFamilyLength()B
-#getQualifierArray()[B
-#getQualifierOffset()I
-#getQualifierLength()I
-#getTimestamp()J
-#getTypeByte()B
-#getMvccVersion()J
-#getSequenceId()J
-#getValueArray()[B
-#getValueOffset()I
-#getValueLength()I
-#getTagsArray()[B
-#getTagsOffset()I
-#getTagsLength()I
-#getValue()[B[deprecated]
-#getFamily()[B[deprecated]
-#getQualifier()[B[deprecated]
-#getRow()[B[deprecated]
-#toString()Ljava/lang/String;
-#shallowCopy()Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$BufferedEncodedSeeker
@0.95.0
+#<init>(Lorg/apache/hadoop/io/RawComparator;)V
+#setCurrentBuffer(Ljava/nio/ByteBuffer;)V
+#getKeyDeepCopy()Ljava/nio/ByteBuffer;
+#getValueShallowCopy()Ljava/nio/ByteBuffer;
+#getKeyValueBuffer()Ljava/nio/ByteBuffer;
+#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
+#rewind()V
+#next()Z
+#seekToKeyInBlock([BIIZ)I
@0.96.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
-#<init>(Lorg/apache/hadoop/io/RawComparator;)V
@0.96.1-hadoop1
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
@0.98.16-hadoop1
-#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@0.99.0
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
+#getKeyValueBuffer()Ljava/nio/ByteBuffer;
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
+#seekToKeyInBlock(Lorg/apache/hadoop/hbase/Cell;Z)I
-#getKeyValue()Lorg/apache/hadoop/hbase/KeyValue;
@1.0.3
-#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@1.1.0
+#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@1.1.3
-#getKeyValueBuffer()Ljava/nio/ByteBuffer;
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
+#compareKey(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;)I
+#setCurrentBuffer(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
+#getKey()Lorg/apache/hadoop/hbase/Cell;
+#getCell()Lorg/apache/hadoop/hbase/Cell;
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
-#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
-#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
-#setCurrentBuffer(Ljava/nio/ByteBuffer;)V
-#getKeyDeepCopy()Ljava/nio/ByteBuffer;
-#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
-#seekToKeyInBlock([BIIZ)I
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
-#<init>(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V

+###org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)V
+#prepareEncoding()V
+#postEncoding(Lorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#compressAfterEncoding([BLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
+#getOnDiskBytesWithHeader()[B
+#getUncompressedBytesWithHeader()[B
+#getBlockType()Lorg/apache/hadoop/hbase/io/hfile/BlockType;
+#close()V
+#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
+#getOutputStreamForEncoder()Ljava/io/DataOutputStream;
+#getDataBlockEncoding()Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;
+#getHeaderSize()I
+#getOutputStreamForEncoder()Ljava/io/OutputStream;
@0.95.1-hadoop1
+#setDummyHeader([B)V
+#compressAfterEncodingWithBlockType([BLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#compressAfterEncoding([BLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#getHeaderSize()I
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
+#getTagCompressionContext()Lorg/apache/hadoop/hbase/io/TagCompressionContext;
+#setTagCompressionContext(Lorg/apache/hadoop/hbase/io/TagCompressionContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)V
-#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
@0.99.0
+#prepareEncoding(Ljava/io/DataOutputStream;)V
+#compressAndEncrypt([B)[B
+#getEncodingState()Lorg/apache/hadoop/hbase/io/encoding/EncodingState;
+#setEncodingState(Lorg/apache/hadoop/hbase/io/encoding/EncodingState;)V
-#setDummyHeader([B)V
-#prepareEncoding()V
-#compressAfterEncodingWithBlockType([BLorg/apache/hadoop/hbase/io/hfile/BlockType;)V
-#getOnDiskBytesWithHeader()[B
-#getUncompressedBytesWithHeader()[B
-#getOutputStreamForEncoder()Ljava/io/DataOutputStream;
-#getOutputStreamForEncoder()Ljava/io/OutputStream;
@1.4.0
+#compressAndEncrypt([BII)Lorg/apache/hadoop/hbase/util/Bytes;
-#compressAndEncrypt([B)[B
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V

+###org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultDecodingContext
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
+#prepareDecoding(IILjava/nio/ByteBuffer;[BI)V
+#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#getHFileContext()Lorg/apache/hadoop/hbase/io/hfile/HFileContext;
+#getTagCompressionContext()Lorg/apache/hadoop/hbase/io/TagCompressionContext;
+#setTagCompressionContext(Lorg/apache/hadoop/hbase/io/TagCompressionContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)V
-#getCompression()Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;
@0.99.2
+#prepareDecoding(IILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
-#prepareDecoding(IILjava/nio/ByteBuffer;[BI)V
@2.0.0-alpha-1
+#prepareDecoding(IILorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
-#prepareDecoding(IILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V

+###org/apache/hadoop/hbase/io/encoding/EncodedDataBlock
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;ZLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)V
+#getIterator()Ljava/util/Iterator;
+#getSize()I
+#getCompressedSize(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/io/compress/Compressor;[BII)I
+#getEncodedCompressedSize(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/io/compress/Compressor;)I
+#encodeData()[B
+#toString()Ljava/lang/String;
@0.95.1-hadoop1
+#getIterator(I)Ljava/util/Iterator;
-#getIterator()Ljava/util/Iterator;
@0.98.0-hadoop1
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;ZLorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)V
@2.5.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@3.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
@3.0.0-alpha-2
+#<init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
-#<init>(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)V

+###org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder$FastDiffSeekerState
@0.95.0
@0.98.22-hadoop1
+#<init>()V
@0.99.0
-#<init>()V
@1.4.0
+#<init>()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectIntPair;Z)V
-#<init>()V

+###org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder
@0.95.0
+#<init>()V
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
+#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
+#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.96.0-hadoop1
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@0.98.0-hadoop1
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Ljava/nio/ByteBuffer;
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
-#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.99.0
+#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[B)V
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
-#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
@0.99.1
+#internalEncode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@1.4.0
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
@2.0.0-alpha-1
+#getFirstKeyCellInBlock(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/Cell;
+#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.3.0
+#createSeeker(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I

+###org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder
@0.95.0
+#<init>()V
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
+#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
+#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.96.0-hadoop1
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@0.98.0-hadoop1
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Ljava/nio/ByteBuffer;
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
-#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.99.0
+#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[B)V
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
-#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
@0.99.1
+#internalEncode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@1.4.0
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
@2.0.0-alpha-1
+#getFirstKeyCellInBlock(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/Cell;
+#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.3.0
+#createSeeker(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I

+###org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder
@0.95.0
+#<init>()V
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
+#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
+#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.96.0-hadoop1
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@0.98.0-hadoop1
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Ljava/nio/ByteBuffer;
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
-#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.99.0
+#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[B)V
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
-#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
@0.99.1
+#internalEncode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@1.4.0
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
@2.0.0-alpha-1
+#getFirstKeyCellInBlock(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/Cell;
+#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.3.0
+#createSeeker(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I

+###org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder$DiffCompressionState
@0.95.0

+###org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder$DiffSeekerState
@0.95.0
@0.98.22-hadoop1
+#<init>()V
@0.99.0
-#<init>()V
@1.4.0
+#<init>()V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectIntPair;Z)V
-#<init>()V

+###org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder
@0.95.0
+#<init>()V
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
+#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
+#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;
+#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.96.0-hadoop1
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#createSeeker(Lorg/apache/hadoop/io/RawComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@0.98.0-hadoop1
+#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#decodeKeyValues(Ljava/io/DataInputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Ljava/nio/ByteBuffer;
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Z)V
-#decodeKeyValues(Ljava/io/DataInputStream;IIZ)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Z)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encodeKeyValues(Ljava/nio/ByteBuffer;ZLorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/compress/Compression$Algorithm;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[B)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#decodeKeyValues(Ljava/io/DataInputStream;Z)Ljava/nio/ByteBuffer;
@0.99.0
+#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[B)V
+#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#internalEncodeKeyValues(Ljava/io/DataOutputStream;Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
-#encodeKeyValues(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;)V
@0.99.1
+#internalEncode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#internalEncode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;Ljava/io/DataOutputStream;)I
-#encode(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
@1.4.0
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
@2.0.0-alpha-1
+#getFirstKeyCellInBlock(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/Cell;
+#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.3.0
+#createSeeker(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
-#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I

+###org/apache/hadoop/hbase/io/hadoopbackport/ThrottledInputStream
@0.98.3-hadoop1
+#<init>(Ljava/io/InputStream;)V
+#<init>(Ljava/io/InputStream;J)V
+#close()V
+#read()I
+#read([B)I
+#read([BII)I
+#getTotalBytesRead()J
+#getBytesPerSec()J
+#getTotalSleepTime()J
+#toString()Ljava/lang/String;
@0.98.9-hadoop1
+#read(J[BII)I
@0.99.0
-#read(J[BII)I
@1.0.0
+#read(J[BII)I

+###org/apache/hadoop/hbase/io/CellOutputStream
@0.95.0
+#write(Lorg/apache/hadoop/hbase/Cell;)V
+#flush()V

+###org/apache/hadoop/hbase/io/TagCompressionContext
@0.98.0-hadoop1
+#<init>(Ljava/lang/Class;)V
+#clear()V
+#compressTags(Ljava/io/OutputStream;[BIS)V
+#compressTags(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;S)V
+#uncompressTags(Ljava/io/InputStream;[BIS)V
+#uncompressTags(Ljava/nio/ByteBuffer;[BII)V
+#uncompressTags(Ljava/io/InputStream;Ljava/nio/ByteBuffer;S)V
@0.98.1-hadoop1
+#<init>(Ljava/lang/Class;I)V
+#uncompressTags(Ljava/nio/ByteBuffer;[BII)I
-#<init>(Ljava/lang/Class;)V
-#uncompressTags(Ljava/nio/ByteBuffer;[BII)V
@0.98.4-hadoop1
+#compressTags(Ljava/io/OutputStream;[BII)V
+#compressTags(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;I)V
+#uncompressTags(Ljava/io/InputStream;[BII)V
+#uncompressTags(Ljava/io/InputStream;Ljava/nio/ByteBuffer;I)V
-#compressTags(Ljava/io/OutputStream;[BIS)V
-#compressTags(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;S)V
-#uncompressTags(Ljava/io/InputStream;[BIS)V
-#uncompressTags(Ljava/io/InputStream;Ljava/nio/ByteBuffer;S)V
@2.0.0-alpha-1
+#compressTags(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;II)V
+#uncompressTags(Lorg/apache/hadoop/hbase/nio/ByteBuff;[BII)I
-#compressTags(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;I)V
-#uncompressTags(Ljava/nio/ByteBuffer;[BII)I

+###org/apache/hadoop/hbase/io/util/Dictionary
@0.98.0-hadoop1
+#init(I)V
+#getEntry(S)[B
+#findEntry([BII)S
+#addEntry([BII)S
+#clear()V
@2.0.0-alpha-1
+#findEntry(Ljava/nio/ByteBuffer;II)S
+#write(Ljava/io/OutputStream;[BIILorg/apache/hadoop/hbase/io/util/Dictionary;)V
+#write(Ljava/io/OutputStream;Ljava/nio/ByteBuffer;IILorg/apache/hadoop/hbase/io/util/Dictionary;)V

+###org/apache/hadoop/hbase/io/util/LRUDictionary
@0.98.0-hadoop1
+#<init>()V
+#getEntry(S)[B
+#init(I)V
+#findEntry([BII)S
+#addEntry([BII)S
+#clear()V
@2.0.0-alpha-1
+#findEntry(Ljava/nio/ByteBuffer;II)S

+###org/apache/hadoop/hbase/io/util/StreamUtils
@0.98.0-hadoop1
+#<init>()V
+#writeRawVInt32(Ljava/io/OutputStream;I)V
+#readRawVarint32(Ljava/io/InputStream;)I
+#readRawVarint32(Ljava/nio/ByteBuffer;)I
+#readRawVarint32([BI)Lorg/apache/hadoop/hbase/util/Pair;
+#toShort(BB)S
+#writeShort(Ljava/io/OutputStream;S)V
@0.99.0
+#writeInt(Ljava/io/OutputStream;I)V
+#writeLong(Ljava/io/OutputStream;J)V
@1.1.0
+#readLong(Ljava/io/InputStream;)J
@2.0.0-alpha-1
+#readRawVarint32(Lorg/apache/hadoop/hbase/nio/ByteBuff;)I
+#readRawVarint32(Ljava/nio/ByteBuffer;I)Lorg/apache/hadoop/hbase/util/Pair;
-#readRawVarint32(Ljava/nio/ByteBuffer;)I

+###org/apache/hadoop/hbase/io/ImmutableBytesWritable$Comparator
@0.95.0
+#<init>()V
+#compare([BII[BII)I

+###org/apache/hadoop/hbase/io/ImmutableBytesWritable
@0.95.0
+#<init>()V
+#<init>([B)V
+#<init>(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)V
+#<init>([BII)V
+#get()[B
+#set([B)V
+#set([BII)V
+#getSize()I
+#getLength()I
+#getOffset()I
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/io/ImmutableBytesWritable;)I
+#compareTo([B)I
+#equals(Ljava/lang/Object;)Z
+#toString()Ljava/lang/String;
+#toArray(Ljava/util/List;)[[B
+#copyBytes()[B
+#compareTo(Ljava/lang/Object;)I
@0.98.5-hadoop1
*#getSize()I[deprecated]
@3.0.0-alpha-1
-#getSize()I[deprecated]

+###org/apache/hadoop/hbase/io/ByteBufferInputStream
@0.98.18-hadoop1
+#<init>(Ljava/nio/ByteBuffer;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I
@0.99.0
-###org/apache/hadoop/hbase/io/ByteBufferInputStream

+###org/apache/hadoop/hbase/io/ByteBufferOutputStream
@0.95.0
+#<init>(I)V
+#<init>(IZ)V
+#size()I
+#getByteBuffer()Ljava/nio/ByteBuffer;
+#write(I)V
+#writeTo(Ljava/io/OutputStream;)V
+#write([B)V
+#write([BII)V
+#flush()V
+#close()V
+#toByteArray(II)[B
@0.98.12-hadoop1
+#<init>(Ljava/nio/ByteBuffer;)V
@0.99.0
-#<init>(Ljava/nio/ByteBuffer;)V
@1.1.0
+#<init>(Ljava/nio/ByteBuffer;)V
@2.0.0-alpha-1
+#write(Ljava/nio/ByteBuffer;II)V
+#writeInt(I)V

+###org/apache/hadoop/hbase/io/LimitInputStream
@0.96.0-hadoop1
+#<init>(Ljava/io/InputStream;J)V
+#available()I
+#mark(I)V
+#read()I
+#read([BII)I
+#reset()V
+#skip(J)J
@2.0.0-beta-1
-###org/apache/hadoop/hbase/io/LimitInputStream

+###org/apache/hadoop/hbase/io/SizedCellScanner
@0.95.2-hadoop1

+###org/apache/hadoop/hbase/io/BoundedByteBufferPool
@0.98.12-hadoop1
+#<init>(III)V
+#getBuffer()Ljava/nio/ByteBuffer;
+#putBuffer(Ljava/nio/ByteBuffer;)V
@0.99.0
-###org/apache/hadoop/hbase/io/BoundedByteBufferPool

+###org/apache/hadoop/hbase/Tag
@0.98.0-hadoop1
+#<init>(BLjava/lang/String;)V
+#<init>(B[B)V
+#<init>([BI)V
+#<init>([BIS)V
+#getBuffer()[B
+#getType()B
+#getTagLength()I
+#getTagOffset()I
+#getValue()[B
+#asList([BII)Ljava/util/List;
+#getTag([BIIB)Lorg/apache/hadoop/hbase/Tag;
@0.98.4-hadoop1
*#<init>([BIS)V[deprecated]
+#<init>([BII)V
@0.98.9-hadoop1
+#fromList(Ljava/util/List;)[B
@0.99.0
-#<init>([BIS)V[deprecated]
-#fromList(Ljava/util/List;)[B
@0.99.2
+#fromList(Ljava/util/List;)[B
@1.0.3
+#carryForwardTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
+#carryForwardTags(Ljava/util/List;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
@1.1.0
-#carryForwardTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
-#carryForwardTags(Ljava/util/List;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
@1.1.3
+#carryForwardTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
+#carryForwardTags(Ljava/util/List;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
@2.0.0-alpha-1
+#getValueOffset()I
+#getValueLength()I
+#hasArray()Z
+#getValueArray()[B
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
-#<init>(BLjava/lang/String;)V
-#<init>(B[B)V
-#<init>([BI)V
-#<init>([BII)V
-#getBuffer()[B
-#getTagLength()I
-#getTagOffset()I
-#getValue()[B
-#asList([BII)Ljava/util/List;
-#fromList(Ljava/util/List;)[B
-#getTag([BIIB)Lorg/apache/hadoop/hbase/Tag;
-#carryForwardTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
-#carryForwardTags(Ljava/util/List;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
@2.0.0-beta-1
+#cloneValue(Lorg/apache/hadoop/hbase/Tag;)[B
+#getValueAsString(Lorg/apache/hadoop/hbase/Tag;)Ljava/lang/String;
+#matchingValue(Lorg/apache/hadoop/hbase/Tag;Lorg/apache/hadoop/hbase/Tag;)Z
+#copyValueTo(Lorg/apache/hadoop/hbase/Tag;[BI)V
+#getValueAsLong(Lorg/apache/hadoop/hbase/Tag;)J
+#getValueAsByte(Lorg/apache/hadoop/hbase/Tag;)B

+###org/apache/hadoop/hbase/CellScanner
@0.95.0
+#current()Lorg/apache/hadoop/hbase/Cell;
+#advance()Z

+###org/apache/hadoop/hbase/security/Superusers
@0.98.14-hadoop1
+#initialize(Lorg/apache/hadoop/conf/Configuration;)V
+#isSuperUser(Lorg/apache/hadoop/hbase/security/User;)Z
+#isSuperUser(Ljava/lang/String;)Z[deprecated]
+#getSuperUsers()Ljava/util/List;
@0.99.0
-###org/apache/hadoop/hbase/security/Superusers

+###org/apache/hadoop/hbase/security/User$SecureHadoopUser
@0.98.17-hadoop1
+#<init>()V
+#<init>(Lorg/apache/hadoop/security/UserGroupInformation;)V
+#<init>(Lorg/apache/hadoop/security/UserGroupInformation;Lcom/google/common/cache/LoadingCache;)V
+#getShortName()Ljava/lang/String;
+#getGroupNames()[Ljava/lang/String;
+#runAs(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
+#runAs(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
+#obtainAuthTokenForJob(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/Job;)V
+#obtainAuthTokenForJob(Lorg/apache/hadoop/mapred/JobConf;)V
+#createUserForTesting(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/User;
+#login(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#isSecurityEnabled()Z
@0.99.0
-###org/apache/hadoop/hbase/security/User$SecureHadoopUser

+###org/apache/hadoop/hbase/security/User
@0.96.1-hadoop1
+#<init>()V
+#getUGI()Lorg/apache/hadoop/security/UserGroupInformation;
+#getName()Ljava/lang/String;
+#getGroupNames()[Ljava/lang/String;
+#getShortName()Ljava/lang/String;
+#runAs(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
+#runAs(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
+#obtainAuthTokenForJob(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/Job;)V
+#obtainAuthTokenForJob(Lorg/apache/hadoop/mapred/JobConf;)V
+#getToken(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/security/token/Token;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getCurrent()Lorg/apache/hadoop/hbase/security/User;
+#create(Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/hbase/security/User;
+#createUserForTesting(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/hadoop/hbase/security/User;
+#login(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+#isSecurityEnabled()Z
+#isHBaseSecurityEnabled(Lorg/apache/hadoop/conf/Configuration;)Z
@0.98.6.1-hadoop1
+#runAsLoginUser(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
@0.98.9-hadoop1
*#obtainAuthTokenForJob(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/Job;)V[deprecated]
*#obtainAuthTokenForJob(Lorg/apache/hadoop/mapred/JobConf;)V[deprecated]
+#getTokens()Ljava/util/Collection;
+#addToken(Lorg/apache/hadoop/security/token/Token;)V
@0.99.0
-#getTokens()Ljava/util/Collection;
-#addToken(Lorg/apache/hadoop/security/token/Token;)V
@1.0.0
*#obtainAuthTokenForJob(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/Job;)V[deprecated]
*#obtainAuthTokenForJob(Lorg/apache/hadoop/mapred/JobConf;)V[deprecated]
+#getTokens()Ljava/util/Collection;
+#addToken(Lorg/apache/hadoop/security/token/Token;)V
@2.0.0-alpha-1
-#obtainAuthTokenForJob(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/mapreduce/Job;)V[deprecated]
-#obtainAuthTokenForJob(Lorg/apache/hadoop/mapred/JobConf;)V[deprecated]
@2.2.0
+#isLoginFromKeytab()Z
+#login(Ljava/lang/String;Ljava/lang/String;)V
+#shouldLoginFromKeytab(Lorg/apache/hadoop/conf/Configuration;)Z

+###org/apache/hadoop/hbase/security/UserProvider
@0.96.1-hadoop1
+#<init>()V
+#instantiate(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/security/UserProvider;
+#setUserProviderForTesting(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/Class;)V
+#getCurrentUserName()Ljava/lang/String;
+#isHBaseSecurityEnabled()Z
+#isHadoopSecurityEnabled()Z
+#getCurrent()Lorg/apache/hadoop/hbase/security/User;
+#create(Lorg/apache/hadoop/security/UserGroupInformation;)Lorg/apache/hadoop/hbase/security/User;
+#login(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
@0.98.17-hadoop1
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@0.99.0
-#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@1.2.0
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
@2.2.0
+#getGroups()Lorg/apache/hadoop/security/Groups;
+#setGroups(Lorg/apache/hadoop/security/Groups;)V
+#shouldLoginFromKeytab()Z
+#login(Ljava/lang/String;Ljava/lang/String;)V

+###org/apache/hadoop/hbase/Stoppable
@0.98.8-hadoop1
+#stop(Ljava/lang/String;)V
+#isStopped()Z
@0.99.0
-###org/apache/hadoop/hbase/Stoppable

+###org/apache/hadoop/hbase/codec/Codec$Encoder
@0.95.0

+###org/apache/hadoop/hbase/codec/Codec$Decoder
@0.95.0

+###org/apache/hadoop/hbase/codec/Codec
@0.95.0
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
@2.0.0-alpha-1
+#getDecoder(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;

+###org/apache/hadoop/hbase/codec/BaseEncoder
@0.95.0
+#<init>(Ljava/io/OutputStream;)V
+#write(Lorg/apache/hadoop/hbase/Cell;)V
+#flush()V

+###org/apache/hadoop/hbase/codec/BaseDecoder$PBIS
@0.98.16-hadoop1
+#<init>(Ljava/io/InputStream;I)V
+#resetBuf(I)V
@0.99.0
-###org/apache/hadoop/hbase/codec/BaseDecoder$PBIS

+###org/apache/hadoop/hbase/codec/BaseDecoder
@0.95.0
+#<init>(Ljava/io/InputStream;)V
+#advance()Z
+#current()Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/codec/CellCodec
@0.95.0
+#<init>()V
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
@2.0.0-alpha-1
+#getDecoder(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;

+###org/apache/hadoop/hbase/codec/KeyValueCodecWithTags$KeyValueEncoder
@0.98.0-hadoop1
+#<init>(Ljava/io/OutputStream;)V
+#write(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/codec/KeyValueCodecWithTags$KeyValueDecoder
@0.98.0-hadoop1
+#<init>(Ljava/io/InputStream;)V

+###org/apache/hadoop/hbase/codec/KeyValueCodecWithTags
@0.98.0-hadoop1
+#<init>()V
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
@2.0.0-alpha-1
+#getDecoder(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;

+###org/apache/hadoop/hbase/codec/KeyValueCodec$KeyValueEncoder
@0.95.1-hadoop1
+#<init>(Ljava/io/OutputStream;)V
+#write(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/codec/KeyValueCodec$KeyValueDecoder
@0.95.1-hadoop1
+#<init>(Ljava/io/InputStream;)V

+###org/apache/hadoop/hbase/codec/KeyValueCodec
@0.95.0
+#<init>()V
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
@2.0.0-alpha-1
+#getDecoder(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;

+###org/apache/hadoop/hbase/codec/CellCodecWithTags
@0.98.0-hadoop1
+#<init>()V
+#getDecoder(Ljava/io/InputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;
+#getEncoder(Ljava/io/OutputStream;)Lorg/apache/hadoop/hbase/codec/Codec$Encoder;
@2.0.0-alpha-1
+#getDecoder(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/codec/Codec$Decoder;

+###org/apache/hadoop/hbase/codec/CodecException
@0.95.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/HBaseIOException
@0.95.1-hadoop1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/TagType
@0.98.0-hadoop1
+#<init>()V

+###org/apache/hadoop/hbase/zookeeper/ZKConfig$ZKClusterKey
@0.98.17-hadoop1
+#getQuorumString()Ljava/lang/String;
+#getClientPort()I
+#getZnodeParent()Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/zookeeper/ZKConfig$ZKClusterKey

+###org/apache/hadoop/hbase/zookeeper/ZKConfig
@0.98.17-hadoop1
+#makeZKProps(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/Properties;
+#parseZooCfg(Lorg/apache/hadoop/conf/Configuration;Ljava/io/InputStream;)Ljava/util/Properties;[deprecated]
+#getZKQuorumServersString(Ljava/util/Properties;)Ljava/lang/String;
+#getZKQuorumServersString(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#buildZKQuorumServerString([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#validateClusterKey(Ljava/lang/String;)V
+#transformClusterKey(Ljava/lang/String;)Lorg/apache/hadoop/hbase/zookeeper/ZKConfig$ZKClusterKey;
+#getZooKeeperClusterKey(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getZooKeeperClusterKey(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/lang/String;
+#standardizeZKQuorumServerString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@0.98.24-hadoop1
-#getZKQuorumServersString(Ljava/util/Properties;)Ljava/lang/String;
@0.99.0
-###org/apache/hadoop/hbase/zookeeper/ZKConfig

+###org/apache/hadoop/hbase/BaseConfigurable
@0.96.1-hadoop1
+#<init>()V
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getConf()Lorg/apache/hadoop/conf/Configuration;

+###org/apache/hadoop/hbase/KeyValueTestUtil
@0.95.0
+#<init>()V
+#create(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)Lorg/apache/hadoop/hbase/KeyValue;
+#create(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLorg/apache/hadoop/hbase/KeyValue$Type;Ljava/lang/String;)Lorg/apache/hadoop/hbase/KeyValue;
+#toByteBufferAndRewind(Ljava/lang/Iterable;Z)Ljava/nio/ByteBuffer;
+#containsIgnoreMvccVersion(Ljava/util/Collection;Ljava/util/Collection;)Z
+#rewindThenToList(Ljava/nio/ByteBuffer;Z)Ljava/util/List;
+#toStringWithPadding(Ljava/util/Collection;Z)Ljava/lang/String;
@0.98.0-hadoop1
+#rewindThenToList(Ljava/nio/ByteBuffer;ZZ)Ljava/util/List;
-#rewindThenToList(Ljava/nio/ByteBuffer;Z)Ljava/util/List;

+###org/apache/hadoop/hbase/CompoundConfiguration
@0.95.0
+#<init>()V
+#add(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/CompoundConfiguration;
+#addWritableMap(Ljava/util/Map;)Lorg/apache/hadoop/hbase/CompoundConfiguration;
+#addStringMap(Ljava/util/Map;)Lorg/apache/hadoop/hbase/CompoundConfiguration;
+#toString()Ljava/lang/String;
+#get(Ljava/lang/String;)Ljava/lang/String;
+#getRaw(Ljava/lang/String;)Ljava/lang/String;
+#getClassByName(Ljava/lang/String;)Ljava/lang/Class;
+#size()I
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getInt(Ljava/lang/String;I)I
+#getLong(Ljava/lang/String;J)J
+#getFloat(Ljava/lang/String;F)F
+#getBoolean(Ljava/lang/String;Z)Z
+#getRange(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
+#getStringCollection(Ljava/lang/String;)Ljava/util/Collection;
+#getStrings(Ljava/lang/String;)[Ljava/lang/String;
+#getStrings(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
+#getClasses(Ljava/lang/String;[Ljava/lang/Class;)[Ljava/lang/Class;
+#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
+#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
+#clear()V
+#iterator()Ljava/util/Iterator;
+#set(Ljava/lang/String;Ljava/lang/String;)V
+#setIfUnset(Ljava/lang/String;Ljava/lang/String;)V
+#setInt(Ljava/lang/String;I)V
+#setLong(Ljava/lang/String;J)V
+#setFloat(Ljava/lang/String;F)V
+#setBoolean(Ljava/lang/String;Z)V
+#setBooleanIfUnset(Ljava/lang/String;Z)V
+#setStrings(Ljava/lang/String;[Ljava/lang/String;)V
+#setClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
+#setClassLoader(Ljava/lang/ClassLoader;)V
+#readFields(Ljava/io/DataInput;)V
+#write(Ljava/io/DataOutput;)V
+#writeXml(Ljava/io/OutputStream;)V
@0.95.1-hadoop1
-#getInt(Ljava/lang/String;I)I
-#getLong(Ljava/lang/String;J)J
-#getFloat(Ljava/lang/String;F)F
-#getBoolean(Ljava/lang/String;Z)Z
-#getRange(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration$IntegerRanges;
-#getStringCollection(Ljava/lang/String;)Ljava/util/Collection;
-#getStrings(Ljava/lang/String;)[Ljava/lang/String;
-#getStrings(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
-#getClasses(Ljava/lang/String;[Ljava/lang/Class;)[Ljava/lang/Class;
-#getClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
-#getClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
-#setIfUnset(Ljava/lang/String;Ljava/lang/String;)V
-#setInt(Ljava/lang/String;I)V
-#setLong(Ljava/lang/String;J)V
-#setFloat(Ljava/lang/String;F)V
-#setBoolean(Ljava/lang/String;Z)V
-#setBooleanIfUnset(Ljava/lang/String;Z)V
-#setStrings(Ljava/lang/String;[Ljava/lang/String;)V
-#setClass(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
-#setClassLoader(Ljava/lang/ClassLoader;)V
-#readFields(Ljava/io/DataInput;)V
@2.0.0-alpha-1
+#addBytesMap(Ljava/util/Map;)Lorg/apache/hadoop/hbase/CompoundConfiguration;
-#addWritableMap(Ljava/util/Map;)Lorg/apache/hadoop/hbase/CompoundConfiguration;

+###org/apache/hadoop/hbase/KeyValueUtil
@0.95.0
+#<init>()V
+#length(Lorg/apache/hadoop/hbase/Cell;)I
+#lengthWithMvccVersion(Lorg/apache/hadoop/hbase/KeyValue;Z)I
+#totalLengthWithMvccVersion(Ljava/lang/Iterable;Z)I
+#copyToNewKeyValue(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
+#copyKeyToNewByteBuffer(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;
+#copyToNewByteArray(Lorg/apache/hadoop/hbase/Cell;)[B
+#appendToByteArray(Lorg/apache/hadoop/hbase/Cell;[BI)I
+#copyToNewByteBuffer(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;
+#appendToByteBuffer(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/KeyValue;Z)V
+#nextShallowCopy(Ljava/nio/ByteBuffer;Z)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstKeyInNextRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstKeyInIncrementedRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
+#previousKey(Lorg/apache/hadoop/hbase/KeyValue;)Lorg/apache/hadoop/hbase/KeyValue;
+#ensureKeyValue(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
@0.96.0-hadoop1
+#ensureKeyValues(Ljava/util/List;)Ljava/util/List;
@0.98.0-hadoop1
+#nextShallowCopy(Ljava/nio/ByteBuffer;ZZ)Lorg/apache/hadoop/hbase/KeyValue;
-#nextShallowCopy(Ljava/nio/ByteBuffer;Z)Lorg/apache/hadoop/hbase/KeyValue;
@0.98.7-hadoop1
+#keyLength(Lorg/apache/hadoop/hbase/Cell;)I
@0.98.19-hadoop1
+#createLastOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
+#createLastOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
+#createLastOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRowColTS(Lorg/apache/hadoop/hbase/Cell;J)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BIS)Lorg/apache/hadoop/hbase/KeyValue;
+#createLastOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BJ)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstDeleteFamilyOnRow([B[B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B[B[BJ)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([B[B[B[B)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRow([BI[BII[BII[BII)Lorg/apache/hadoop/hbase/KeyValue;
+#createFirstOnRowColTS(Lorg/apache/hadoop/hbase/KeyValue;J)Lorg/apache/hadoop/hbase/KeyValue;
@0.99.0
+#oswrite(Lorg/apache/hadoop/hbase/Cell;Ljava/io/OutputStream;Z)V
-#keyLength(Lorg/apache/hadoop/hbase/Cell;)I
@0.99.1
+#keyLength(Lorg/apache/hadoop/hbase/Cell;)I
+#appendKeyTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
*#ensureKeyValue(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
*#ensureKeyValues(Ljava/util/List;)Ljava/util/List;[deprecated]
@1.2.0
+#ensureKeyValueTypeForMR(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
+#iscreate(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
@1.5.0
+#createKeyValueFromInputStream(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
+#getSerializedSize(Lorg/apache/hadoop/hbase/Cell;Z)I
+#createKeyValueFromKey([B)Lorg/apache/hadoop/hbase/KeyValue;
+#createKeyValueFromKey(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/KeyValue;
+#createKeyValueFromKey([BII)Lorg/apache/hadoop/hbase/KeyValue;
-#iscreate(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
@2.0.0-alpha-1
+#length(SBIIIZ)I
+#toNewKeyCell(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
+#appendToByteArray(Lorg/apache/hadoop/hbase/Cell;[BIZ)I
+#appendTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;IZ)I
+#appendKeyTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I
+#write(Lorg/apache/hadoop/hbase/KeyValue;Ljava/io/DataOutput;)J
+#iscreate(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
+#create(Ljava/io/DataInput;)Lorg/apache/hadoop/hbase/KeyValue;
+#create(ILjava/io/DataInput;)Lorg/apache/hadoop/hbase/KeyValue;
+#oswrite(Lorg/apache/hadoop/hbase/Cell;Ljava/io/OutputStream;Z)I
-#appendToByteArray(Lorg/apache/hadoop/hbase/Cell;[BI)I
-#copyToNewByteBuffer(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;
-#createFirstKeyInNextRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstKeyInIncrementedRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
-#createLastOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
-#createLastOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRowColTS(Lorg/apache/hadoop/hbase/Cell;J)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstDeleteFamilyOnRow([B[B)Lorg/apache/hadoop/hbase/KeyValue;
-#createFirstOnRowColTS(Lorg/apache/hadoop/hbase/KeyValue;J)Lorg/apache/hadoop/hbase/KeyValue;
-#ensureKeyValueTypeForMR(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/KeyValue;[deprecated]
-#createKeyValueFromInputStream(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
-#oswrite(Lorg/apache/hadoop/hbase/Cell;Ljava/io/OutputStream;Z)V
@2.0.4
+#createKeyValueFromInputStream(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
-#iscreate(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
@2.1.0
+#iscreate(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
-#createKeyValueFromInputStream(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
@2.1.2
+#createKeyValueFromInputStream(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
-#iscreate(Ljava/io/InputStream;Z)Lorg/apache/hadoop/hbase/KeyValue;
@2.2.0
-#length(Lorg/apache/hadoop/hbase/Cell;)I

+###org/apache/hadoop/hbase/CellComparator
@0.95.0
+#<init>()V
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareStatic(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#equals(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#equalsRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#equalsFamily(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#equalsQualifier(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#equalsTimestamp(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#equalsType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#hashCode(Lorg/apache/hadoop/hbase/Cell;)I
+#areKeyLengthsEqual(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#areRowLengthsEqual(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#equalsIgnoreMvccVersion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@0.98.3-hadoop1
+#compareStatic(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
@0.98.13-hadoop1
+#hashCodeIgnoreMvcc(Lorg/apache/hadoop/hbase/Cell;)I
@0.98.14-hadoop1
+#compareFamilies(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareQualifiers(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows([BII[BII)I
+#compareTimestamps(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
@0.99.0
+#findCommonPrefixInRowPart(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
+#findCommonPrefixInFamilyPart(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
+#findCommonPrefixInQualifierPart(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
+#compareColumns(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareFlatKey(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareWithoutRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareCommonRowPrefix(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
+#compareCommonFamilyPrefix(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
+#compareCommonQualifierPrefix(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
-#compareStatic(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
-#hashCodeIgnoreMvcc(Lorg/apache/hadoop/hbase/Cell;)I
@0.99.1
+#hashCodeIgnoreMvcc(Lorg/apache/hadoop/hbase/Cell;)I
@0.99.2
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
+#getMidpoint(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#compareStatic(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
@1.0.0
+#getMidpoint(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#getMidpoint(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@1.0.3
+#compareTimestamps(JJ)I
@1.1.0
-#compareTimestamps(JJ)I
@2.0.0-alpha-1
+#compareKeyIgnoresMvcc(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compare(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compareQualifiers(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compareKeyBasedOnColHint(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II[BIIJB)I
+#compareTimestamps(JJ)I
+#compareRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
+#compareFamily(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
+#compareQualifier(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
+#compareValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
-#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
-#findCommonPrefixInRowPart(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
-#findCommonPrefixInFamilyPart(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
-#findCommonPrefixInQualifierPart(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
-#equals(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#equalsRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#equalsFamily(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#equalsQualifier(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#equalsTimestamp(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#equalsType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#compareFlatKey(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
-#compareRows([BII[BII)I
-#hashCode(Lorg/apache/hadoop/hbase/Cell;)I
-#hashCodeIgnoreMvcc(Lorg/apache/hadoop/hbase/Cell;)I
-#areKeyLengthsEqual(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#areRowLengthsEqual(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#compareCommonRowPrefix(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
-#compareCommonFamilyPrefix(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
-#compareCommonQualifierPrefix(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;I)I
-#equalsIgnoreMvccVersion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#getMidpoint(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha4
-#<init>()V
-#compareKeyIgnoresMvcc(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
-#compare(Lorg/apache/hadoop/hbase/Cell;[BII)I
-#compareColumns(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
-#compareQualifiers(Lorg/apache/hadoop/hbase/Cell;[BII)I
-#compareKeyBasedOnColHint(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II[BIIJB)I
-#compareRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
-#compareFamily(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
-#compareQualifier(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
-#compareValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
@2.0.0-beta-1
+#getInstance()Lorg/apache/hadoop/hbase/CellComparator;
@2.0.1
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
+#getSimpleComparator()Ljava/util/Comparator;
@2.3.0
+#compareRows(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/Cell;)I
@2.3.6
+#compareRows([B[B)I
@2.4.0
-#compareRows([B[B)I
@2.4.5
+#compareRows([B[B)I
@3.0.0-alpha-1
-#compareRows([B[B)I
@3.0.0-alpha-2
+#compareRows([B[B)I

+###org/apache/hadoop/hbase/MetaMutationAnnotation
@0.98.0-hadoop1

+###org/apache/hadoop/hbase/CellScannable
@0.95.0
+#cellScanner()Lorg/apache/hadoop/hbase/CellScanner;

+###org/apache/hadoop/hbase/VersionAnnotation
@0.95.0
+#version()Ljava/lang/String;
+#user()Ljava/lang/String;
+#date()Ljava/lang/String;
+#url()Ljava/lang/String;
+#revision()Ljava/lang/String;
@0.98.13-hadoop1
+#srcChecksum()Ljava/lang/String;
@0.98.22-hadoop1
-###org/apache/hadoop/hbase/VersionAnnotation

+###org/apache/hadoop/hbase/HConstants$OperationStatusCode
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/HConstants$OperationStatusCode;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HConstants$OperationStatusCode;

+###org/apache/hadoop/hbase/HConstants$Modify
@0.95.0
+#values()[Lorg/apache/hadoop/hbase/HConstants$Modify;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/HConstants$Modify;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/HConstants$Modify

+###org/apache/hadoop/hbase/HConstants
@0.95.0

+###org/apache/hadoop/hbase/NamespaceDescriptor$Builder
@0.95.2-hadoop1
+#addConfiguration(Ljava/util/Map;)Lorg/apache/hadoop/hbase/NamespaceDescriptor$Builder;
+#addConfiguration(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor$Builder;
+#removeConfiguration(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor$Builder;
+#build()Lorg/apache/hadoop/hbase/NamespaceDescriptor;

+###org/apache/hadoop/hbase/NamespaceDescriptor
@0.95.2-hadoop1
+#getName()Ljava/lang/String;
+#getConfigurationValue(Ljava/lang/String;)Ljava/lang/String;
+#getConfiguration()Ljava/util/Map;
+#setConfiguration(Ljava/lang/String;Ljava/lang/String;)V
+#removeConfiguration(Ljava/lang/String;)V
+#toString()Ljava/lang/String;
+#create(Ljava/lang/String;)Lorg/apache/hadoop/hbase/NamespaceDescriptor$Builder;
+#create(Lorg/apache/hadoop/hbase/NamespaceDescriptor;)Lorg/apache/hadoop/hbase/NamespaceDescriptor$Builder;

+###org/apache/hadoop/hbase/NoTagsKeyValue
@0.98.13-hadoop1
+#<init>([BII)V
+#getTagsLength()S[deprecated]
+#getTagsLengthUnsigned()I[deprecated]
@0.99.0
-###org/apache/hadoop/hbase/NoTagsKeyValue

+###org/apache/hadoop/hbase/HBaseInterfaceAudience
@0.96.0-hadoop1
+#<init>()V
@2.0.0-alpha-1
-#<init>()V

+###org/apache/hadoop/hbase/HBaseConfiguration
@0.95.0
+#<init>()V[deprecated]
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V[deprecated]
+#addHbaseResources(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/conf/Configuration;
+#create()Lorg/apache/hadoop/conf/Configuration;
+#create(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/conf/Configuration;
+#merge(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/conf/Configuration;)V
+#isShowConfInServlet()Z
+#main([Ljava/lang/String;)V
@0.95.2-hadoop1
+#getInt(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;I)I
@0.98.6-hadoop1
+#getPassword(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@0.98.17-hadoop1
+#subset(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
+#setWithPrefix(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/Iterable;)V
+#createClusterConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
+#createClusterConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
@0.99.0
-#subset(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
-#setWithPrefix(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/Iterable;)V
-#createClusterConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
-#createClusterConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
@1.2.0
+#subset(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
+#setWithPrefix(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/Iterable;)V
+#createClusterConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
+#createClusterConf(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/conf/Configuration;
@1.5.0
*#getInt(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;I)I[deprecated]
@2.0.5
*#getInt(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;I)I[deprecated]
@2.1.3
*#getInt(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;I)I[deprecated]
@3.0.0-alpha-1
-#<init>(Lorg/apache/hadoop/conf/Configuration;)V[deprecated]
-#getInt(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;I)I[deprecated]

+###org/apache/hadoop/hbase/TableName
@0.95.2-hadoop1
+#isLegalFullyQualifiedTableName([B)[B
+#isLegalTableQualifierName([B)V
+#isLegalTableQualifierName([BII)V
+#isLegalNamespaceName([B)V
+#isLegalNamespaceName([BII)V
+#getName()[B
+#getNameAsString()Ljava/lang/String;
+#getNamespace()[B
+#getNamespaceAsString()Ljava/lang/String;
+#getQualifier()[B
+#getQualifierAsString()Ljava/lang/String;
+#toBytes()[B
+#toString()Ljava/lang/String;
+#valueOf([B[B)Lorg/apache/hadoop/hbase/TableName;
+#valueOf(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
+#valueOf([B)Lorg/apache/hadoop/hbase/TableName;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/TableName;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/TableName;)I
+#compareTo(Ljava/lang/Object;)I
@0.96.0-hadoop1
+#isLegalTableQualifierName([B)[B
+#isSystemTable()Z
+#getRowComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;
-#isLegalTableQualifierName([B)V
@0.96.1-hadoop1
+#valueOf(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;
@0.96.2-hadoop1
+#isLegalTableQualifierName([BZ)[B
+#isLegalTableQualifierName([BIIZ)V
@0.98.0-hadoop1
-#isLegalTableQualifierName([BZ)[B
-#isLegalTableQualifierName([BIIZ)V
@0.98.1-hadoop1
+#isLegalTableQualifierName([BZ)[B
+#isLegalTableQualifierName([BIIZ)V
@1.1.0
+#getNameWithNamespaceInclAsString()Ljava/lang/String;
*#getRowComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[deprecated]
@2.0.0-alpha-1
+#isMetaTableName(Lorg/apache/hadoop/hbase/TableName;)Z
@2.0.0-alpha4
-#getRowComparator()Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[deprecated]
@2.5.0
+#valueOf([BII)Lorg/apache/hadoop/hbase/TableName;
+#valueOf(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/TableName;

+###org/apache/hadoop/hbase/CellUtil
@0.95.0
+#<init>()V
+#fillRowRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#fillFamilyRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#fillQualifierRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getRowArray(Lorg/apache/hadoop/hbase/Cell;)[B
+#getFamilyArray(Lorg/apache/hadoop/hbase/Cell;)[B
+#getQualifierArray(Lorg/apache/hadoop/hbase/Cell;)[B
+#getValueArray(Lorg/apache/hadoop/hbase/Cell;)[B
+#copyRowTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
+#copyFamilyTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
+#copyQualifierTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
+#copyValueTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
+#getRowByte(Lorg/apache/hadoop/hbase/Cell;I)B
+#getValueBufferShallowCopy(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;
+#createCell([B[B[BJB[B)Lorg/apache/hadoop/hbase/Cell;
+#createCellScanner(Ljava/util/List;)Lorg/apache/hadoop/hbase/CellScanner;
+#createCellScanner(Ljava/lang/Iterable;)Lorg/apache/hadoop/hbase/CellScanner;
+#createCellScanner(Ljava/util/Iterator;)Lorg/apache/hadoop/hbase/CellScanner;
+#createCellScanner([Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/CellScanner;
+#createCellScanner(Ljava/util/NavigableMap;)Lorg/apache/hadoop/hbase/CellScanner;
@0.95.2-hadoop1
+#matchingRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#isDelete(Lorg/apache/hadoop/hbase/Cell;)Z
+#estimatedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I
@0.96.0-hadoop1
+#cloneRow(Lorg/apache/hadoop/hbase/Cell;)[B
+#cloneFamily(Lorg/apache/hadoop/hbase/Cell;)[B
+#cloneQualifier(Lorg/apache/hadoop/hbase/Cell;)[B
+#cloneValue(Lorg/apache/hadoop/hbase/Cell;)[B
+#getQualifierBufferShallowCopy(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;
+#matchingRow(Lorg/apache/hadoop/hbase/Cell;[B)Z
+#matchingFamily(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingFamily(Lorg/apache/hadoop/hbase/Cell;[B)Z
+#matchingQualifier(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingQualifier(Lorg/apache/hadoop/hbase/Cell;[B)Z
+#matchingValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingValue(Lorg/apache/hadoop/hbase/Cell;[B)Z
+#isDeleteFamily(Lorg/apache/hadoop/hbase/Cell;)Z
-#getRowArray(Lorg/apache/hadoop/hbase/Cell;)[B
-#getFamilyArray(Lorg/apache/hadoop/hbase/Cell;)[B
-#getQualifierArray(Lorg/apache/hadoop/hbase/Cell;)[B
-#getValueArray(Lorg/apache/hadoop/hbase/Cell;)[B
@0.96.2-hadoop1
+#overlappingKeys([B[B[B[B)Z
@0.98.0-hadoop1
+#fillTagRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getTagArray(Lorg/apache/hadoop/hbase/Cell;)[B
+#copyTagTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
+#createCell([B[B[BJB[BJ)Lorg/apache/hadoop/hbase/Cell;
+#createCell([B[B[BJB[B[BJ)Lorg/apache/hadoop/hbase/Cell;
+#createCell([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[B[B)Lorg/apache/hadoop/hbase/Cell;
+#tagsIterator([BII)Ljava/util/Iterator;
@0.98.2-hadoop1
+#matchingColumn(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@0.98.4-hadoop1
+#matchingColumn(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
+#isDeleteColumns(Lorg/apache/hadoop/hbase/Cell;)Z
+#isDeleteColumnVersion(Lorg/apache/hadoop/hbase/Cell;)Z
@0.98.14-hadoop1
+#matchingTimestamp(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@0.98.21-hadoop1
+#isDeleteFamilyVersion(Lorg/apache/hadoop/hbase/Cell;)Z
+#isDeleteColumnOrFamily(Lorg/apache/hadoop/hbase/Cell;)Z
@0.99.0
+#matchingRow(Lorg/apache/hadoop/hbase/Cell;[BII)Z
+#matchingFamily(Lorg/apache/hadoop/hbase/Cell;[BII)Z
+#matchingQualifier(Lorg/apache/hadoop/hbase/Cell;[BII)Z
+#matchingColumn(Lorg/apache/hadoop/hbase/Cell;[BII[BII)Z
+#isDelete(B)Z
+#isDeleteType(Lorg/apache/hadoop/hbase/Cell;)Z
+#estimatedHeapSizeOf(Lorg/apache/hadoop/hbase/Cell;)J
+#setSequenceId(Lorg/apache/hadoop/hbase/Cell;J)V
+#estimatedLengthOf(Lorg/apache/hadoop/hbase/Cell;)I
-#matchingTimestamp(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@0.99.1
+#createCell([B)Lorg/apache/hadoop/hbase/Cell;
+#createCell([B[B)Lorg/apache/hadoop/hbase/Cell;
+#setTimestamp(Lorg/apache/hadoop/hbase/Cell;J)V
+#setTimestamp(Lorg/apache/hadoop/hbase/Cell;[BI)V
+#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;J)Z
+#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;[BI)Z
+#writeFlatKey(Lorg/apache/hadoop/hbase/Cell;Ljava/io/DataOutputStream;)V
+#getCellKey(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/CellKey;
+#writeRowKeyExcludingCommon(Lorg/apache/hadoop/hbase/Cell;SILjava/io/DataOutputStream;)V
+#findCommonPrefixInFlatKey(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;ZZ)I
@0.99.2
+#createCell([BII[BII[BII)Lorg/apache/hadoop/hbase/Cell;
+#createCell([B[B[B)Lorg/apache/hadoop/hbase/Cell;
+#estimatedSerializedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I
+#estimatedSerializedSizeOfKey(Lorg/apache/hadoop/hbase/Cell;)I
+#getCellKeyAsString(Lorg/apache/hadoop/hbase/Cell;)Ljava/lang/String;
+#getCellKeySerializedAsKeyValueKey(Lorg/apache/hadoop/hbase/Cell;)[B
-#estimatedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I
-#estimatedLengthOf(Lorg/apache/hadoop/hbase/Cell;)I
-#getCellKey(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/CellKey;
@1.0.0
+#fillValueRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#estimatedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I[deprecated]
@1.0.1
+#estimatedHeapSizeOfWithoutTags(Lorg/apache/hadoop/hbase/Cell;)J[deprecated]
@1.0.3
+#equals(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingTimestamp(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@1.1.0
+#toString(Lorg/apache/hadoop/hbase/Cell;Z)Ljava/lang/String;
-#equals(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#matchingTimestamp(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#matchingType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@1.1.3
+#equals(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingTimestamp(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@1.4.0
+#matchingRowColumn(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@1.5.0
+#cloneTags(Lorg/apache/hadoop/hbase/Cell;)[B
+#copyTagsTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
@1.7.0
+#matchingTags(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@2.0.0-alpha-1
+#copyRowTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I
+#copyRow(Lorg/apache/hadoop/hbase/Cell;)[B
+#copyFamilyTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I
+#copyQualifierTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I
+#copyValueTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I
+#copyTagTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I
+#getQualifierByte(Lorg/apache/hadoop/hbase/Cell;I)B
*#getQualifierBufferShallowCopy(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;[deprecated]
+#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;
+#createCell(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/Cell;
+#createCell(Lorg/apache/hadoop/hbase/Cell;[B[B)Lorg/apache/hadoop/hbase/Cell;
*#matchingRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
+#matchingValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II)Z
*#tagsIterator([BII)Ljava/util/Iterator;[deprecated]
+#tagsIterator(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Iterator;
+#getTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
+#getTag(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/Tag;
+#writeFlatKey(Lorg/apache/hadoop/hbase/Cell;Ljava/io/OutputStream;)I
+#writeRow(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;S)V
+#writeRowSkippingBytes(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;SI)V
+#writeFamily(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;B)V
+#writeQualifier(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
+#writeQualifierSkippingBytes(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;II)V
+#writeValue(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
+#writeTags(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
+#equalsIgnoreMvccVersion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#getRowAsInt(Lorg/apache/hadoop/hbase/Cell;)I
+#getValueAsLong(Lorg/apache/hadoop/hbase/Cell;)J
+#getValueAsInt(Lorg/apache/hadoop/hbase/Cell;)I
+#getValueAsDouble(Lorg/apache/hadoop/hbase/Cell;)D
+#getValueAsBigDecimal(Lorg/apache/hadoop/hbase/Cell;)Ljava/math/BigDecimal;
+#createFirstOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([BIS)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([BIS[BIB[BII)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([B)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowFamily(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnNextRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowCol(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowColTS(Lorg/apache/hadoop/hbase/Cell;J)Lorg/apache/hadoop/hbase/Cell;
+#createLastOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createLastOnRow([B)Lorg/apache/hadoop/hbase/Cell;
+#createLastOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstDeleteFamilyCellOnRow([B[B)Lorg/apache/hadoop/hbase/Cell;
+#compressTags(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/TagCompressionContext;)V
+#compressRow(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
+#compressFamily(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
+#compressQualifier(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
-#<init>()V
-#matchingTags(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
-#estimatedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I[deprecated]
-#estimatedHeapSizeOfWithoutTags(Lorg/apache/hadoop/hbase/Cell;)J[deprecated]
-#copyTagsTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
@2.0.0-alpha3
*#createCell([B[B[BJB[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell([BII[BII[BII)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell([B[B[BJB[BJ)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell([B[B[BJB[B[BJ)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell([B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell([B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell([B[B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
+#createNextOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha4
*#fillRowRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
*#fillFamilyRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
*#fillQualifierRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
*#fillValueRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
*#fillTagRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
*#cloneTags(Lorg/apache/hadoop/hbase/Cell;)[B[deprecated]
*#getTagArray(Lorg/apache/hadoop/hbase/Cell;)[B[deprecated]
+#makeColumn([B[B)[B
+#parseColumn([B)[[B
*#copyTagTo(Lorg/apache/hadoop/hbase/Cell;[BI)I[deprecated]
*#copyTagTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I[deprecated]
*#getRowByte(Lorg/apache/hadoop/hbase/Cell;I)B[deprecated]
*#getValueBufferShallowCopy(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;[deprecated]
*#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#createCell(Lorg/apache/hadoop/hbase/Cell;[B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
*#matchingRow(Lorg/apache/hadoop/hbase/Cell;[B)Z[deprecated]
+#matchingRows(Lorg/apache/hadoop/hbase/Cell;[B)Z
*#matchingRow(Lorg/apache/hadoop/hbase/Cell;[BII)Z[deprecated]
*#matchingFamily(Lorg/apache/hadoop/hbase/Cell;[BII)Z[deprecated]
*#matchingQualifier(Lorg/apache/hadoop/hbase/Cell;[BII)Z[deprecated]
*#matchingColumn(Lorg/apache/hadoop/hbase/Cell;[BII[BII)Z[deprecated]
*#isDelete(B)Z[deprecated]
*#isDeleteType(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
*#isDeleteFamily(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
*#isDeleteFamilyVersion(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
*#isDeleteColumns(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
*#isDeleteColumnVersion(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
*#isDeleteColumnOrFamily(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
*#estimatedSerializedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I[deprecated]
*#estimatedSerializedSizeOfKey(Lorg/apache/hadoop/hbase/Cell;)I[deprecated]
*#estimatedHeapSizeOf(Lorg/apache/hadoop/hbase/Cell;)J[deprecated]
*#getTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;[deprecated]
*#getTag(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/Tag;[deprecated]
*#overlappingKeys([B[B[B[B)Z[deprecated]
*#setSequenceId(Lorg/apache/hadoop/hbase/Cell;J)V[deprecated]
*#setTimestamp(Lorg/apache/hadoop/hbase/Cell;J)V[deprecated]
*#setTimestamp(Lorg/apache/hadoop/hbase/Cell;[BI)V[deprecated]
*#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;J)Z[deprecated]
*#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;[BI)Z[deprecated]
*#writeFlatKey(Lorg/apache/hadoop/hbase/Cell;Ljava/io/DataOutputStream;)V[deprecated]
*#writeRowSkippingBytes(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;SI)V[deprecated]
*#getCellKeySerializedAsKeyValueKey(Lorg/apache/hadoop/hbase/Cell;)[B[deprecated]
*#writeRowKeyExcludingCommon(Lorg/apache/hadoop/hbase/Cell;SILjava/io/DataOutputStream;)V[deprecated]
*#findCommonPrefixInFlatKey(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;ZZ)I[deprecated]
*#equalsIgnoreMvccVersion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
*#matchingType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
+#compareQualifiers(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compare(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;[BII)I[deprecated]
+#compareFamilies(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compareColumns(Lorg/apache/hadoop/hbase/Cell;[BIIII)I
-#getQualifierByte(Lorg/apache/hadoop/hbase/Cell;I)B
-#matchingValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II)Z
-#tagsIterator(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Iterator;
-#writeFlatKey(Lorg/apache/hadoop/hbase/Cell;Ljava/io/OutputStream;)I
-#writeRow(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;S)V
-#writeFamily(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;B)V
-#writeQualifier(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
-#writeQualifierSkippingBytes(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;II)V
-#writeValue(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
-#writeTags(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
-#getRowAsInt(Lorg/apache/hadoop/hbase/Cell;)I
-#getValueAsLong(Lorg/apache/hadoop/hbase/Cell;)J
-#getValueAsInt(Lorg/apache/hadoop/hbase/Cell;)I
-#getValueAsDouble(Lorg/apache/hadoop/hbase/Cell;)D
-#getValueAsBigDecimal(Lorg/apache/hadoop/hbase/Cell;)Ljava/math/BigDecimal;
-#createFirstOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRow([BIS)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRow([BIS[BIB[BII)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRow([B)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRowFamily(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnNextRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRowCol(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
-#createFirstOnRowColTS(Lorg/apache/hadoop/hbase/Cell;J)Lorg/apache/hadoop/hbase/Cell;
-#createLastOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#createLastOnRow([B)Lorg/apache/hadoop/hbase/Cell;
-#createLastOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
-#createFirstDeleteFamilyCellOnRow([B[B)Lorg/apache/hadoop/hbase/Cell;
-#compressTags(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/TagCompressionContext;)V
-#compressRow(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
-#compressFamily(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
-#compressQualifier(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
-#createNextOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#isPut(Lorg/apache/hadoop/hbase/Cell;)Z
+#matchingRowColumnBytes(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@2.1.8
+#matchingColumnFamilyAndQualifierPrefix(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
@2.2.0
-#matchingColumnFamilyAndQualifierPrefix(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
@2.2.3
+#matchingColumnFamilyAndQualifierPrefix(Lorg/apache/hadoop/hbase/Cell;[B[B)Z
@2.2.7
+#matchingFamily(Lorg/apache/hadoop/hbase/Cell;BLorg/apache/hadoop/hbase/Cell;B)Z
+#matchingRows(Lorg/apache/hadoop/hbase/Cell;SLorg/apache/hadoop/hbase/Cell;S)Z
@2.3.0
+#getCellKeyAsString(Lorg/apache/hadoop/hbase/Cell;Ljava/util/function/Function;)Ljava/lang/String;
-#matchingFamily(Lorg/apache/hadoop/hbase/Cell;BLorg/apache/hadoop/hbase/Cell;B)Z
-#matchingRows(Lorg/apache/hadoop/hbase/Cell;SLorg/apache/hadoop/hbase/Cell;S)Z
@2.3.4
+#matchingFamily(Lorg/apache/hadoop/hbase/Cell;BLorg/apache/hadoop/hbase/Cell;B)Z
+#matchingRows(Lorg/apache/hadoop/hbase/Cell;SLorg/apache/hadoop/hbase/Cell;S)Z
@2.4.0
-#matchingFamily(Lorg/apache/hadoop/hbase/Cell;BLorg/apache/hadoop/hbase/Cell;B)Z
-#matchingRows(Lorg/apache/hadoop/hbase/Cell;SLorg/apache/hadoop/hbase/Cell;S)Z
@2.4.1
+#matchingFamily(Lorg/apache/hadoop/hbase/Cell;BLorg/apache/hadoop/hbase/Cell;B)Z
+#matchingRows(Lorg/apache/hadoop/hbase/Cell;SLorg/apache/hadoop/hbase/Cell;S)Z
@2.4.3
+#matchingTags(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
@2.4.12
+#cloneIfNecessary(Ljava/util/ArrayList;)V
+#cloneIfNecessary(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@3.0.0-alpha-1
+#matchingValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II)Z
-#fillRowRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
-#fillFamilyRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
-#fillQualifierRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
-#fillValueRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
-#fillTagRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;[deprecated]
-#cloneTags(Lorg/apache/hadoop/hbase/Cell;)[B[deprecated]
-#getTagArray(Lorg/apache/hadoop/hbase/Cell;)[B[deprecated]
-#copyTagTo(Lorg/apache/hadoop/hbase/Cell;[BI)I[deprecated]
-#copyTagTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I[deprecated]
-#getRowByte(Lorg/apache/hadoop/hbase/Cell;I)B[deprecated]
-#getValueBufferShallowCopy(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;[deprecated]
-#getQualifierBufferShallowCopy(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;[deprecated]
-#createCell([B[B[BJB[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell([BII[BII[BII)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell([B[B[BJB[BJ)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell([B[B[BJB[B[BJ)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell([B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell([B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell([B[B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#createCell(Lorg/apache/hadoop/hbase/Cell;[B[B)Lorg/apache/hadoop/hbase/Cell;[deprecated]
-#matchingRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#matchingRow(Lorg/apache/hadoop/hbase/Cell;[B)Z[deprecated]
-#matchingFamily(Lorg/apache/hadoop/hbase/Cell;[BII)Z[deprecated]
-#matchingQualifier(Lorg/apache/hadoop/hbase/Cell;[BII)Z[deprecated]
-#matchingColumn(Lorg/apache/hadoop/hbase/Cell;[BII[BII)Z[deprecated]
-#isDelete(B)Z[deprecated]
-#isDeleteType(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#isDeleteFamily(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#isDeleteFamilyVersion(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#isDeleteColumns(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#isDeleteColumnVersion(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#isDeleteColumnOrFamily(Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#estimatedSerializedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I[deprecated]
-#estimatedSerializedSizeOfKey(Lorg/apache/hadoop/hbase/Cell;)I[deprecated]
-#estimatedHeapSizeOf(Lorg/apache/hadoop/hbase/Cell;)J[deprecated]
-#tagsIterator([BII)Ljava/util/Iterator;[deprecated]
-#getTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;[deprecated]
-#getTag(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/Tag;[deprecated]
-#overlappingKeys([B[B[B[B)Z[deprecated]
-#setSequenceId(Lorg/apache/hadoop/hbase/Cell;J)V[deprecated]
-#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;J)Z[deprecated]
-#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;[BI)Z[deprecated]
-#writeFlatKey(Lorg/apache/hadoop/hbase/Cell;Ljava/io/DataOutputStream;)V[deprecated]
-#writeRowSkippingBytes(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;SI)V[deprecated]
-#getCellKeySerializedAsKeyValueKey(Lorg/apache/hadoop/hbase/Cell;)[B[deprecated]
-#writeRowKeyExcludingCommon(Lorg/apache/hadoop/hbase/Cell;SILjava/io/DataOutputStream;)V[deprecated]
-#findCommonPrefixInFlatKey(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;ZZ)I[deprecated]
-#equalsIgnoreMvccVersion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#matchingType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z[deprecated]
-#compare(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;[BII)I[deprecated]
-#cloneIfNecessary(Ljava/util/ArrayList;)V
-#cloneIfNecessary(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
@3.0.0-alpha-3
+#cloneIfNecessary(Ljava/util/ArrayList;)V
+#cloneIfNecessary(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/AuthUtil
@0.98.8-hadoop1
+#<init>()V
+#launchAuthChore(Lorg/apache/hadoop/conf/Configuration;)V
@0.98.14-hadoop1
+#isGroupPrincipal(Ljava/lang/String;)Z
+#getGroupName(Ljava/lang/String;)Ljava/lang/String;
+#toGroupEntry(Ljava/lang/String;)Ljava/lang/String;
-#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/AuthUtil

+###org/apache/hadoop/hbase/Chore
@0.98.8-hadoop1
+#<init>(Ljava/lang/String;ILorg/apache/hadoop/hbase/Stoppable;)V
+#run()V
+#triggerNow()V
+#choreForTesting()V
@0.99.0
-###org/apache/hadoop/hbase/Chore

+###org/apache/hadoop/hbase/exceptions/HBaseException
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/io/ByteBufferWriter
@2.0.0-alpha-1
+#write(Ljava/nio/ByteBuffer;II)V
+#writeInt(I)V

+###org/apache/hadoop/hbase/ScheduledChore
@1.1.0
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/Stoppable;I)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/Stoppable;IJ)V
+#<init>(Ljava/lang/String;Lorg/apache/hadoop/hbase/Stoppable;IJLjava/util/concurrent/TimeUnit;)V
+#run()V
+#triggerNow()Z
+#cancel()V
+#cancel(Z)V
+#getName()Ljava/lang/String;
+#getStopper()Lorg/apache/hadoop/hbase/Stoppable;
+#getPeriod()I
+#getInitialDelay()J
+#getTimeUnit()Ljava/util/concurrent/TimeUnit;
+#isInitialChoreComplete()Z
+#isScheduled()Z
+#choreForTesting()V
+#toString()Ljava/lang/String;
@2.4.2
+#shutdown()V
+#shutdown(Z)V

+###org/apache/hadoop/hbase/util/AvlUtil$AvlKeyComparator
@2.0.0-alpha-1
+#compareKey(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/util/ByteArrayHashKey
@2.0.0-alpha-1
+#<init>([BII)V
+#get(I)B
+#length()I

+###org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange
@0.99.0
+#<init>()V
+#<init>(I)V
+#<init>([B)V
+#<init>([BII)V
+#unset()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putShort(S)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(J)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putVLong(J)I
+#putShort(IS)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putVLong(IJ)I
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;

+###org/apache/hadoop/hbase/CellComparator$MetaCellComparator
@2.0.0-alpha-1
+#<init>()V
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.0-alpha4
-###org/apache/hadoop/hbase/CellComparator$MetaCellComparator

+###org/apache/hadoop/hbase/exceptions/IllegalArgumentIOException
@1.1.3
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/io/ByteBufferPool
@2.0.0-alpha-1
+#<init>(II)V
+#<init>(IIZ)V
+#getBuffer()Ljava/nio/ByteBuffer;
+#putbackBuffer(Ljava/nio/ByteBuffer;)V
+#getBufferSize()I
+#getQueueSize()I
@2.3.0
-###org/apache/hadoop/hbase/io/ByteBufferPool

+###org/apache/hadoop/hbase/io/crypto/aes/CommonsCryptoAESDecryptor
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;Ljava/util/Properties;)V
+#setKey(Ljava/security/Key;)V
+#getIvLength()I
+#getBlockSize()I
+#setIv([B)V
+#createDecryptionStream(Ljava/io/InputStream;)Ljava/io/InputStream;
+#reset()V

+###org/apache/hadoop/hbase/io/crypto/CryptoCipherProvider
@2.0.0-alpha-1
+#getInstance()Lorg/apache/hadoop/hbase/io/crypto/CryptoCipherProvider;
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#getName()Ljava/lang/String;
+#getCipher(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/crypto/Cipher;
+#getSupportedCiphers()[Ljava/lang/String;

+###org/apache/hadoop/hbase/io/encoding/AbstractDataBlockEncoder$AbstractEncodedSeeker
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
-#<init>(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V

+###org/apache/hadoop/hbase/io/encoding/RowIndexCodecV1
@1.4.0
+#<init>()V
+#startBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
+#endBlockEncoding(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;[B)V
+#decodeKeyValues(Ljava/io/DataInputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Ljava/nio/ByteBuffer;
+#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
+#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.0.0-alpha-1
+#getFirstKeyCellInBlock(Lorg/apache/hadoop/hbase/nio/ByteBuff;)Lorg/apache/hadoop/hbase/Cell;
+#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#getFirstKeyInBlock(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
-#createSeeker(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
@2.3.0
+#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)V
+#createSeeker(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;
-#encode(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;Ljava/io/DataOutputStream;)I
-#createSeeker(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoder$EncodedSeeker;

+###org/apache/hadoop/hbase/nio/MultiByteBuff
@2.0.0-alpha-1
+#<init>([Ljava/nio/ByteBuffer;)V
+#array()[B
+#arrayOffset()I
+#hasArray()Z
+#capacity()I
+#get(I)B
+#getByteAfterPosition(I)B
+#getInt(I)I
+#getIntAfterPosition(I)I
+#getShort(I)S
+#getShortAfterPosition(I)S
+#getLong(I)J
+#getLongAfterPosition(I)J
+#position()I
+#position(I)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#rewind()Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#mark()Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#reset()Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#remaining()I
+#hasRemaining()Z
+#get()B
+#getShort()S
+#getInt()I
+#getLong()J
+#get([B)V
+#get([BII)V
+#get(I[BII)V
+#limit(I)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#limit()I
+#slice()Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#duplicate()Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#put(B)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#put(IB)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#put(ILorg/apache/hadoop/hbase/nio/ByteBuff;II)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#putInt(I)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#put([B)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#put([BII)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#putLong(J)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#skip(I)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#moveBack(I)Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#asSubByteBuffer(I)Ljava/nio/ByteBuffer;
+#asSubByteBuffer(IILorg/apache/hadoop/hbase/util/ObjectIntPair;)V
+#get(Ljava/nio/ByteBuffer;II)V
+#toBytes(II)[B
+#read(Ljava/nio/channels/ReadableByteChannel;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getEnclosingByteBuffers()[Ljava/nio/ByteBuffer;
+#put(ILorg/apache/hadoop/hbase/nio/ByteBuff;II)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#putLong(J)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#putInt(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put([B)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put([BII)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put(IB)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put(B)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#duplicate()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#slice()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#reset()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#mark()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#rewind()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#limit(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#moveBack(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#skip(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#position(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;[Ljava/nio/ByteBuffer;)V
+#read(Ljava/nio/channels/FileChannel;J)I
+#write(Ljava/nio/channels/FileChannel;J)I
+#nioByteBuffers()[Ljava/nio/ByteBuffer;
+#retain()Lorg/apache/hadoop/hbase/nio/MultiByteBuff;
+#retain()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#getEnclosingByteBuffers()[Ljava/nio/ByteBuffer;

+###org/apache/hadoop/hbase/ServiceNotRunningException
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/util/AbstractPositionedByteRange
@0.99.0
+#<init>()V
+#unset()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getPosition()I
+#setPosition(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getRemaining()I
+#peek()B
+#get()B
+#get([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(J)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putShort(S)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putVLong(IJ)I
+#putVLong(J)I
+#get(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getShort()S
+#getInt()I
+#getLong()J
+#getVLong()J
+#put(IB)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#setLimit(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#getLimit()I
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
@1.6.0
-#unset()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putInt(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putLong(IJ)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putShort(IS)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putInt(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putLong(J)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putShort(S)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putVLong(IJ)I
-#putVLong(J)I
-#put(IB)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#deepCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#shallowCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
-#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
-#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
-#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
-#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
@2.0.0-alpha-1
+#unset()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putInt(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putLong(J)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putShort(S)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putVLong(IJ)I
+#putVLong(J)I
+#put(IB)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
@2.3.0
-#unset()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put(B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put([B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put([BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putInt(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putLong(IJ)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putShort(IS)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putInt(I)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putLong(J)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putShort(S)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putVLong(IJ)I
-#putVLong(J)I
-#put(IB)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put(I[B)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#put(I[BII)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#deepCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#shallowCopy()Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/PositionedByteRange;
-#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
-#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
-#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
-#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
-#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;

+###org/apache/hadoop/hbase/util/AvlUtil$AvlTreeIterator
@2.0.0-alpha-1
+#<init>()V
+#<init>(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)V
+#<init>(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlKeyComparator;)V
+#hasNext()Z
+#next()Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#remove()V
+#seekFirst(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)V
+#seekTo(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlKeyComparator;)V
+#next()Ljava/lang/Object;

+###org/apache/hadoop/hbase/util/HashKey
@2.0.0-alpha-1
+#<init>(Ljava/lang/Object;)V
+#get(I)B
+#length()I

+###org/apache/hadoop/hbase/util/ObjectIntPair
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/Object;I)V
+#getFirst()Ljava/lang/Object;
+#setFirst(Ljava/lang/Object;)V
+#getSecond()I
+#setSecond(I)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/RowBloomHashKey
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Cell;)V
+#get(I)B
+#length()I

+###org/apache/hadoop/hbase/codec/KeyValueCodecWithTags$ByteBuffKeyValueDecoder
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V

+###org/apache/hadoop/hbase/exceptions/DeserializationException
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/ExtendedCell
@2.0.0-alpha-1
+#write(Ljava/io/OutputStream;Z)I
+#getSerializedSize(Z)I
+#write(Ljava/nio/ByteBuffer;I)V
+#deepClone()Lorg/apache/hadoop/hbase/Cell;
+#getChunkId()I
@2.0.0-alpha4
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#setSequenceId(J)V
+#setTimestamp(J)V
+#setTimestamp([B)V
+#getSequenceId()J
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getTypeByte()B
@2.0.1
+#getSerializedSize()I

+###org/apache/hadoop/hbase/IndividualBytesFieldCell
@2.0.0-alpha-1
+#<init>([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[B)V
+#<init>([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;J[B[B)V
+#write(Ljava/io/OutputStream;Z)I
+#write(Ljava/nio/ByteBuffer;I)V
+#getSerializedSize(Z)I
+#deepClone()Lorg/apache/hadoop/hbase/Cell;
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#heapSize()J
+#clone()Ljava/lang/Object;
+#setSequenceId(J)V
+#setTimestamp(J)V
+#setTimestamp([BI)V
@2.0.0-alpha3
+#<init>([BII[BII[BIIJLorg/apache/hadoop/hbase/KeyValue$Type;J[BII[BII)V
+#toString()Ljava/lang/String;
@2.0.0-alpha4
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#setTimestamp([B)V
-#write(Ljava/io/OutputStream;Z)I
-#write(Ljava/nio/ByteBuffer;I)V
-#getSerializedSize(Z)I
-#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#setTimestamp([BI)V
@3.0.0-alpha-1
-#<init>([B[B[BJLorg/apache/hadoop/hbase/KeyValue$Type;[B)V

+###org/apache/hadoop/hbase/io/ByteBufferWriterDataOutputStream
@2.0.0-alpha-1
+#<init>(Ljava/io/OutputStream;)V
+#write(Ljava/nio/ByteBuffer;II)V

+###org/apache/hadoop/hbase/io/encoding/AbstractDataBlockEncoder
@1.4.0
+#<init>()V
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@2.5.0
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-1
+#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
@3.0.0-alpha-2
+#newDataBlockEncodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
+#newDataBlockDecodingContext(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;
-#newDataBlockEncodingContext(Lorg/apache/hadoop/hbase/io/encoding/DataBlockEncoding;[BLorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockEncodingContext;
-#newDataBlockDecodingContext(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;

+###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$OnheapDecodedCell
@2.0.0-alpha-1
+#getRowArray()[B
+#getFamilyArray()[B
+#getQualifierArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#toString()Ljava/lang/String;
+#setSequenceId(J)V
+#heapSize()J
+#write(Ljava/io/OutputStream;Z)I
+#getSerializedSize(Z)I
+#write(Ljava/nio/ByteBuffer;I)V
+#setTimestamp(J)V
+#setTimestamp([BI)V
+#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha4
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#setTimestamp([B)V
-#setTimestamp([BI)V

+###org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl$JitteredRunnableScheduledFuture
@1.2.0
+#isPeriodic()Z
+#getDelay(Ljava/util/concurrent/TimeUnit;)J
+#compareTo(Ljava/util/concurrent/Delayed;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#run()V
+#cancel(Z)Z
+#isCancelled()Z
+#isDone()Z
+#get()Ljava/lang/Object;
+#get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/procedure2/LockInfo$LockType
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/procedure2/LockInfo$LockType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure2/LockInfo$LockType;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/procedure2/LockInfo$LockType

+###org/apache/hadoop/hbase/SettableTimestamp
@0.99.1
+#setTimestamp(J)V
+#setTimestamp([BI)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/SettableTimestamp

+###org/apache/hadoop/hbase/util/AvlUtil$AvlNodeVisitor
@2.0.0-alpha-1
+#visitNode(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)Z

+###org/apache/hadoop/hbase/util/SimpleMutableByteRange
@0.99.0
+#<init>()V
+#<init>(I)V
+#<init>([B)V
+#<init>([BII)V
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putVLong(IJ)I
+#deepCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopy()Lorg/apache/hadoop/hbase/util/ByteRange;
+#shallowCopySubRange(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#equals(Ljava/lang/Object;)Z

+###org/apache/hadoop/hbase/ByteBufferKeyOnlyKeyValue
@2.0.0-alpha-1
+#<init>()V
+#<init>(Ljava/nio/ByteBuffer;II)V
+#setKey(Ljava/nio/ByteBuffer;II)V
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getRowByteBuffer()Ljava/nio/ByteBuffer;
+#getRowPosition()I
+#getFamilyByteBuffer()Ljava/nio/ByteBuffer;
+#getFamilyPosition()I
+#getQualifierByteBuffer()Ljava/nio/ByteBuffer;
+#getQualifierPosition()I
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#getValuePosition()I
+#getTagsByteBuffer()Ljava/nio/ByteBuffer;
+#getTagsPosition()I
+#toString()Ljava/lang/String;
@2.0.0-beta-1
+#setSequenceId(J)V
+#setTimestamp(J)V
+#setTimestamp([B)V
+#getTags()Ljava/util/Iterator;
+#getTag(B)Ljava/util/Optional;
+#heapSize()J
@2.2.7
+#setKey(Ljava/nio/ByteBuffer;IIS)V
@2.3.0
-#setKey(Ljava/nio/ByteBuffer;IIS)V
@2.3.4
+#setKey(Ljava/nio/ByteBuffer;IIS)V

+###org/apache/hadoop/hbase/io/ByteBuffInputStream
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I

+###org/apache/hadoop/hbase/io/crypto/aes/CommonsCryptoAES
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/crypto/CipherProvider;)V
+#getName()Ljava/lang/String;
+#getKeyLength()I
+#getIvLength()I
+#getRandomKey()Ljava/security/Key;
+#getEncryptor()Lorg/apache/hadoop/hbase/io/crypto/Encryptor;
+#getDecryptor()Lorg/apache/hadoop/hbase/io/crypto/Decryptor;
+#createEncryptionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/io/crypto/Context;[B)Ljava/io/OutputStream;
+#createEncryptionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/io/crypto/Encryptor;)Ljava/io/OutputStream;
+#createDecryptionStream(Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Context;[B)Ljava/io/InputStream;
+#createDecryptionStream(Ljava/io/InputStream;Lorg/apache/hadoop/hbase/io/crypto/Decryptor;)Ljava/io/InputStream;

+###org/apache/hadoop/hbase/io/encoding/NoneEncoder
@1.4.0
+#<init>(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
+#write(Lorg/apache/hadoop/hbase/Cell;)I

+###org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl
@1.2.0
+#<init>(ILjava/util/concurrent/ThreadFactory;D)V

+###org/apache/hadoop/hbase/nio/ByteBuff
@2.0.0-alpha-1
+#<init>()V
+#position()I
+#position(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#skip(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#moveBack(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#capacity()I
+#limit()I
+#limit(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#rewind()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#mark()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#asSubByteBuffer(I)Ljava/nio/ByteBuffer;
+#asSubByteBuffer(IILorg/apache/hadoop/hbase/util/ObjectIntPair;)V
+#remaining()I
+#hasRemaining()Z
+#reset()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#slice()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#duplicate()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#get()B
+#get(I)B
+#getByteAfterPosition(I)B
+#put(B)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put(IB)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#get([BII)V
+#get(I[BII)V
+#get([B)V
+#put([BII)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put([B)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getShort()S
+#getShort(I)S
+#getShortAfterPosition(I)S
+#getInt()I
+#putInt(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#getInt(I)I
+#getIntAfterPosition(I)I
+#getLong()J
+#putLong(J)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#getLong(I)J
+#getLongAfterPosition(I)J
+#toBytes()[B
+#toBytes(II)[B
+#get(Ljava/nio/ByteBuffer;II)V
+#put(ILorg/apache/hadoop/hbase/nio/ByteBuff;II)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#read(Ljava/nio/channels/ReadableByteChannel;)I
+#channelRead(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I
+#readCompressedInt(Lorg/apache/hadoop/hbase/nio/ByteBuff;)I
+#compareTo(Lorg/apache/hadoop/hbase/nio/ByteBuff;IILorg/apache/hadoop/hbase/nio/ByteBuff;II)I
+#readLong(Lorg/apache/hadoop/hbase/nio/ByteBuff;I)J
+#readVLong(Lorg/apache/hadoop/hbase/nio/ByteBuff;)J
+#unsignedBinarySearch(Lorg/apache/hadoop/hbase/nio/ByteBuff;IIB)I
+#toString()Ljava/lang/String;
+#toStringBinary(Lorg/apache/hadoop/hbase/nio/ByteBuff;II)Ljava/lang/String;
@2.3.0
+#refCnt()I
+#release()Z
+#read(Ljava/nio/channels/FileChannel;J)I
+#write(Ljava/nio/channels/FileChannel;J)I
+#read(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;JLorg/apache/hadoop/hbase/nio/ByteBuff$ChannelReader;)I
+#nioByteBuffers()[Ljava/nio/ByteBuffer;
+#wrap([Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/nio/RefCnt;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#wrap([Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#wrap([Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#wrap(Ljava/util/List;Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#wrap(Ljava/util/List;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#wrap(Ljava/nio/ByteBuffer;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
-#channelRead(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)I
-#readVLong(Lorg/apache/hadoop/hbase/nio/ByteBuff;)J
-#unsignedBinarySearch(Lorg/apache/hadoop/hbase/nio/ByteBuff;IIB)I
-#toStringBinary(Lorg/apache/hadoop/hbase/nio/ByteBuff;II)Ljava/lang/String;
@2.4.14
+#touch()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#getRefCnt()Lorg/apache/hadoop/hbase/nio/RefCnt;
+#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
+#touch()Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
+#touch(Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
+#touch()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
@3.0.0-alpha-1
-#touch()Lorg/apache/hadoop/hbase/nio/ByteBuff;
-#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/nio/ByteBuff;
-#getRefCnt()Lorg/apache/hadoop/hbase/nio/RefCnt;
-#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
-#touch()Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
-#touch(Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#touch()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;

+###org/apache/hadoop/hbase/rsgroup/RSGroupInfo
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;)V
+#<init>(Lorg/apache/hadoop/hbase/rsgroup/RSGroupInfo;)V
+#getName()Ljava/lang/String;
+#addServer(Lorg/apache/hadoop/hbase/net/Address;)V
+#addAllServers(Ljava/util/Collection;)V
+#containsServer(Lorg/apache/hadoop/hbase/net/Address;)Z
+#getServers()Ljava/util/Set;
+#removeServer(Lorg/apache/hadoop/hbase/net/Address;)Z
+#getTables()Ljava/util/SortedSet;
+#addTable(Lorg/apache/hadoop/hbase/TableName;)V
+#addAllTables(Ljava/util/Collection;)V
+#containsTable(Lorg/apache/hadoop/hbase/TableName;)Z
+#removeTable(Lorg/apache/hadoop/hbase/TableName;)Z
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.4.0
+#getConfiguration()Ljava/util/Map;
+#setConfiguration(Ljava/lang/String;Ljava/lang/String;)V
+#removeConfiguration(Ljava/lang/String;)V
@3.0.0-alpha-1
+#getServers()Ljava/util/SortedSet;
*#getTables()Ljava/util/SortedSet;[deprecated]
*#addTable(Lorg/apache/hadoop/hbase/TableName;)V[deprecated]
*#addAllTables(Ljava/util/Collection;)V[deprecated]
*#containsTable(Lorg/apache/hadoop/hbase/TableName;)Z[deprecated]
*#removeTable(Lorg/apache/hadoop/hbase/TableName;)Z[deprecated]
-#getServers()Ljava/util/Set;
@3.0.0-alpha-3
+#getServers()Ljava/util/Set;
-#getServers()Ljava/util/SortedSet;

+###org/apache/hadoop/hbase/ServerName
@2.0.0-alpha-1
+#parseHostname(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#parsePort(Ljava/lang/String;)I[deprecated]
+#parseStartcode(Ljava/lang/String;)J[deprecated]
+#valueOf(Ljava/lang/String;IJ)Lorg/apache/hadoop/hbase/ServerName;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/ServerName;
+#valueOf(Ljava/lang/String;J)Lorg/apache/hadoop/hbase/ServerName;
+#toString()Ljava/lang/String;
+#toShortString()Ljava/lang/String;
+#getVersionedBytes()[B
+#getServerName()Ljava/lang/String;
+#getHostname()Ljava/lang/String;
+#getPort()I
+#getStartcode()J
+#getServerName(Ljava/lang/String;J)Ljava/lang/String;[deprecated]
+#getHostAndPort()Ljava/lang/String;[deprecated]
+#getAddress()Lorg/apache/hadoop/hbase/net/Address;
+#getServerStartcodeFromServerName(Ljava/lang/String;)J[deprecated]
+#getServerNameLessStartCode(Ljava/lang/String;)Ljava/lang/String;[deprecated]
+#compareTo(Lorg/apache/hadoop/hbase/ServerName;)I
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#isSameHostnameAndPort(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)Z
+#parseVersionedServerName([B)Lorg/apache/hadoop/hbase/ServerName;
+#parseServerName(Ljava/lang/String;)Lorg/apache/hadoop/hbase/ServerName;
+#isFullServerName(Ljava/lang/String;)Z
+#compareTo(Ljava/lang/Object;)I
@2.0.0-alpha3
+#isSameAddress(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)Z
-#isSameHostnameAndPort(Lorg/apache/hadoop/hbase/ServerName;Lorg/apache/hadoop/hbase/ServerName;)Z
@2.0.1
+#getHostnameLowerCase()Ljava/lang/String;
@2.2.7
+#valueOf(Lorg/apache/hadoop/hbase/net/Address;J)Lorg/apache/hadoop/hbase/ServerName;
@2.3.0
-#valueOf(Lorg/apache/hadoop/hbase/net/Address;J)Lorg/apache/hadoop/hbase/ServerName;
@2.3.6
+#valueOf(Lorg/apache/hadoop/hbase/net/Address;J)Lorg/apache/hadoop/hbase/ServerName;
@2.4.0
-#valueOf(Lorg/apache/hadoop/hbase/net/Address;J)Lorg/apache/hadoop/hbase/ServerName;
@2.4.3
+#valueOf(Lorg/apache/hadoop/hbase/net/Address;J)Lorg/apache/hadoop/hbase/ServerName;
@2.5.0
*#getStartcode()J[deprecated]
+#getStartCode()J
@3.0.0-alpha-1
-#parseHostname(Ljava/lang/String;)Ljava/lang/String;[deprecated]
-#parsePort(Ljava/lang/String;)I[deprecated]
-#parseStartcode(Ljava/lang/String;)J[deprecated]
-#getStartCode()J
-#getServerName(Ljava/lang/String;J)Ljava/lang/String;[deprecated]
-#getHostAndPort()Ljava/lang/String;[deprecated]
-#getServerStartcodeFromServerName(Ljava/lang/String;)J[deprecated]
-#getServerNameLessStartCode(Ljava/lang/String;)Ljava/lang/String;[deprecated]

+###org/apache/hadoop/hbase/TagUtil
@2.0.0-alpha-1
+#cloneValue(Lorg/apache/hadoop/hbase/Tag;)[B
+#asList([BII)Ljava/util/List;
+#asList(Ljava/nio/ByteBuffer;II)Ljava/util/List;
+#fromList(Ljava/util/List;)[B
+#getValueAsLong(Lorg/apache/hadoop/hbase/Tag;)J
+#getValueAsByte(Lorg/apache/hadoop/hbase/Tag;)B
+#getValueAsString(Lorg/apache/hadoop/hbase/Tag;)Ljava/lang/String;
+#matchingValue(Lorg/apache/hadoop/hbase/Tag;Lorg/apache/hadoop/hbase/Tag;)Z
+#copyValueTo(Lorg/apache/hadoop/hbase/Tag;[BI)V
+#readVIntValuePart(Lorg/apache/hadoop/hbase/Tag;I)Lorg/apache/hadoop/hbase/util/Pair;
+#carryForwardTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
+#carryForwardTags(Ljava/util/List;Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
+#concatTags([BLorg/apache/hadoop/hbase/Cell;)[B
+#carryForwardTTLTag(Ljava/util/List;J)Ljava/util/List;
+#checkForTagsLength(I)V
@2.0.0-beta-1
-#cloneValue(Lorg/apache/hadoop/hbase/Tag;)[B
-#asList(Ljava/nio/ByteBuffer;II)Ljava/util/List;
-#getValueAsLong(Lorg/apache/hadoop/hbase/Tag;)J
-#getValueAsByte(Lorg/apache/hadoop/hbase/Tag;)B
-#getValueAsString(Lorg/apache/hadoop/hbase/Tag;)Ljava/lang/String;
-#matchingValue(Lorg/apache/hadoop/hbase/Tag;Lorg/apache/hadoop/hbase/Tag;)Z
-#copyValueTo(Lorg/apache/hadoop/hbase/Tag;[BI)V
-#checkForTagsLength(I)V

+###org/apache/hadoop/hbase/types/CopyOnWriteArrayMap
@1.2.0
+#<init>()V
+#<init>(Ljava/util/Comparator;)V
+#comparator()Ljava/util/Comparator;
+#tailMap(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
+#tailMap(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
+#firstKey()Ljava/lang/Object;
+#lastKey()Ljava/lang/Object;
+#lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
+#floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#floorKey(Ljava/lang/Object;)Ljava/lang/Object;
+#ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
+#higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
+#higherKey(Ljava/lang/Object;)Ljava/lang/Object;
+#firstEntry()Ljava/util/Map$Entry;
+#lastEntry()Ljava/util/Map$Entry;
+#size()I
+#isEmpty()Z
+#containsKey(Ljava/lang/Object;)Z
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#keySet()Ljava/util/NavigableSet;
+#values()Ljava/util/Collection;
+#entrySet()Ljava/util/Set;
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#clear()V
+#putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
+#replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#pollFirstEntry()Ljava/util/Map$Entry;
+#pollLastEntry()Ljava/util/Map$Entry;
+#descendingMap()Ljava/util/concurrent/ConcurrentNavigableMap;
+#navigableKeySet()Ljava/util/NavigableSet;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
+#headMap(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
+#headMap(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
+#descendingKeySet()Ljava/util/NavigableSet;
+#keySet()Ljava/util/Set;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
+#tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
+#subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
+#descendingMap()Ljava/util/NavigableMap;

+###org/apache/hadoop/hbase/util/AvlUtil$AvlInsertOrReplace
@2.0.0-alpha-1
+#insert(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#replace(Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;

+###org/apache/hadoop/hbase/util/AvlUtil$AvlNode
@2.0.0-alpha-1
+#<init>()V
+#compareTo(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)I

+###org/apache/hadoop/hbase/util/ByteBufferAllocator
@1.7.0
+#allocate(JZ)Ljava/nio/ByteBuffer;
@2.0.0-beta-1
+#allocate(J)Ljava/nio/ByteBuffer;
-#allocate(JZ)Ljava/nio/ByteBuffer;

+###org/apache/hadoop/hbase/util/CellHashKey
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Cell;)V

+###org/apache/hadoop/hbase/Version
@0.98.22-hadoop1
+#<init>()V
@0.99.0
-###org/apache/hadoop/hbase/Version

+###org/apache/hadoop/hbase/ArrayBackedTag
@2.0.0-alpha-1
+#<init>(BLjava/lang/String;)V
+#<init>(B[B)V
+#<init>([BI)V
+#<init>([BII)V
+#getValueArray()[B
+#getType()B
+#getValueLength()I
+#getValueOffset()I
+#hasArray()Z
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/ByteBufferCell
@2.0.0-alpha-1
+#<init>()V
+#getRowByteBuffer()Ljava/nio/ByteBuffer;
+#getRowPosition()I
+#getFamilyByteBuffer()Ljava/nio/ByteBuffer;
+#getFamilyPosition()I
+#getQualifierByteBuffer()Ljava/nio/ByteBuffer;
+#getQualifierPosition()I
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#getValuePosition()I
+#getTagsByteBuffer()Ljava/nio/ByteBuffer;
+#getTagsPosition()I
@2.0.0-beta-1
-###org/apache/hadoop/hbase/ByteBufferCell

+###org/apache/hadoop/hbase/io/encoding/EncodingState
@0.99.0
+#<init>()V
@2.1.7
+#beforeShipped()V
@2.2.0
-#beforeShipped()V
@2.2.2
+#beforeShipped()V
@2.3.0
+#postCellEncode(II)V
+#getUnencodedDataSizeWritten()I
+#getEncodedDataSizeWritten()I

+###org/apache/hadoop/hbase/io/encoding/RowIndexSeekerV1
@1.4.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
+#setCurrentBuffer(Ljava/nio/ByteBuffer;)V
+#getKeyDeepCopy()Ljava/nio/ByteBuffer;
+#getValueShallowCopy()Ljava/nio/ByteBuffer;
+#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
+#rewind()V
+#next()Z
+#seekToKeyInBlock([BIIZ)I
+#seekToKeyInBlock(Lorg/apache/hadoop/hbase/Cell;Z)I
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
+#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
+#setCurrentBuffer(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
+#getKey()Lorg/apache/hadoop/hbase/Cell;
+#getCell()Lorg/apache/hadoop/hbase/Cell;
+#compareKey(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;)I
-#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
-#setCurrentBuffer(Ljava/nio/ByteBuffer;)V
-#getKeyDeepCopy()Ljava/nio/ByteBuffer;
-#getKeyValue()Lorg/apache/hadoop/hbase/Cell;
-#seekToKeyInBlock([BIIZ)I
-#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;[BII)I
-#compareKey(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;Lorg/apache/hadoop/hbase/Cell;)I
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V
-#<init>(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDecodingContext;)V

+###org/apache/hadoop/hbase/procedure2/LockInfo$WaitingProcedure
@2.0.0-alpha-1
+#<init>()V
+#getLockType()Lorg/apache/hadoop/hbase/procedure2/LockInfo$LockType;
+#setLockType(Lorg/apache/hadoop/hbase/procedure2/LockInfo$LockType;)V
+#getProcedure()Lorg/apache/hadoop/hbase/ProcedureInfo;
+#setProcedure(Lorg/apache/hadoop/hbase/ProcedureInfo;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/procedure2/LockInfo$WaitingProcedure

+###org/apache/hadoop/hbase/Service
@2.0.0-alpha-1
+#startAndWait()V
+#isRunning()Z
+#stopAndWait()V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/Service

+###org/apache/hadoop/hbase/util/AtomicUtils
@1.3.0
+#<init>()V
+#updateMin(Ljava/util/concurrent/atomic/AtomicLong;J)V
+#updateMax(Ljava/util/concurrent/atomic/AtomicLong;J)V
@1.6.0
-#<init>()V
@2.0.0-alpha-1
+#<init>()V
@2.3.0
-#<init>()V

+###org/apache/hadoop/hbase/util/AvlUtil$AvlTree
@2.0.0-alpha-1
+#<init>()V
+#get(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlKeyComparator;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#getFirst(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#getLast(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#insert(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#insert(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlKeyComparator;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlInsertOrReplace;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#remove(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlKeyComparator;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#remove(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlKeyComparator;Ljava/util/concurrent/atomic/AtomicBoolean;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;
+#visit(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlNodeVisitor;)V

+###org/apache/hadoop/hbase/util/Counter
@0.96.2-hadoop1
+#<init>()V
+#<init>(J)V
+#add(J)V
+#increment()V
+#decrement()V
+#set(J)V
+#get()J
+#toString()Ljava/lang/String;
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/util/Counter

+###org/apache/hadoop/hbase/util/ObjectPool$ObjectFactory
@2.0.0-alpha-1
+#createObject(Ljava/lang/Object;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/backup/BackupType
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/backup/BackupType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/backup/BackupType;

+###org/apache/hadoop/hbase/ByteBufferTag
@2.0.0-alpha-1
+#<init>(Ljava/nio/ByteBuffer;II)V
+#getType()B
+#getValueOffset()I
+#getValueLength()I
+#hasArray()Z
+#getValueArray()[B
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#toString()Ljava/lang/String;

+###org/apache/hadoop/hbase/CellComparator$RowComparator
@0.99.2
+#<init>()V
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.0-alpha3
-###org/apache/hadoop/hbase/CellComparator$RowComparator

+###org/apache/hadoop/hbase/filter/ByteArrayComparable
@2.0.0-alpha-1
+#<init>([B)V
+#getValue()[B
+#toByteArray()[B
+#parseFrom([B)Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;
+#compareTo([B)I
+#compareTo([BII)I
+#compareTo(Ljava/nio/ByteBuffer;II)I
+#compareTo(Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/io/ByteArrayOutputStream
@1.4.0
+#<init>()V
+#<init>(I)V
+#writeInt(I)V
+#write(I)V
+#write([BII)V
+#reset()V
+#toByteArray()[B
+#getBuffer()[B
+#size()I
@2.0.0-alpha-1
+#write(Ljava/nio/ByteBuffer;II)V
@2.3.0
+#toByteBuff(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V

+###org/apache/hadoop/hbase/io/ByteBufferListOutputStream
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/io/ByteBufferPool;)V
+#size()I
+#getByteBuffer()Ljava/nio/ByteBuffer;
+#writeTo(Ljava/io/OutputStream;)V
+#releaseResources()V
+#toByteArray(II)[B
+#getByteBuffers()Ljava/util/List;
+#write([BII)V
+#write(Ljava/nio/ByteBuffer;II)V
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)V
-#<init>(Lorg/apache/hadoop/hbase/io/ByteBufferPool;)V

+###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$OffheapDecodedCell
@2.0.0-alpha-1
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getRowByteBuffer()Ljava/nio/ByteBuffer;
+#getRowPosition()I
+#getFamilyByteBuffer()Ljava/nio/ByteBuffer;
+#getFamilyPosition()I
+#getQualifierByteBuffer()Ljava/nio/ByteBuffer;
+#getQualifierPosition()I
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#getValuePosition()I
+#getTagsByteBuffer()Ljava/nio/ByteBuffer;
+#getTagsPosition()I
+#heapSize()J
+#setSequenceId(J)V
+#write(Ljava/io/OutputStream;Z)I
+#getSerializedSize(Z)I
+#setTimestamp(J)V
+#setTimestamp([BI)V
+#write(Ljava/nio/ByteBuffer;I)V
+#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha4
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
-###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$OffheapDecodedCell

+###org/apache/hadoop/hbase/io/encoding/RowIndexEncoderV1
@1.4.0
+#<init>(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext;)V
+#write(Lorg/apache/hadoop/hbase/Cell;)I
+#flush()V
@2.3.0
+#write(Lorg/apache/hadoop/hbase/Cell;)V
-#write(Lorg/apache/hadoop/hbase/Cell;)I

+###org/apache/hadoop/hbase/procedure2/LockInfo$ResourceType
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/procedure2/LockInfo$ResourceType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/procedure2/LockInfo$ResourceType;
@2.0.0-alpha3
-###org/apache/hadoop/hbase/procedure2/LockInfo$ResourceType

+###org/apache/hadoop/hbase/ProcedureInfo
@1.1.3
+#<init>(JLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$ProcedureState;JLorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;JJ[B)V
+#clone()Lorg/apache/hadoop/hbase/ProcedureInfo;
+#getProcId()J
+#getProcName()Ljava/lang/String;
+#getProcOwner()Ljava/lang/String;
+#getProcState()Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$ProcedureState;
+#hasParentId()Z
+#getParentId()J
+#getNonceKey()Lorg/apache/hadoop/hbase/util/NonceKey;
+#setNonceKey(Lorg/apache/hadoop/hbase/util/NonceKey;)V
+#isFailed()Z
+#getException()Ljava/io/IOException;
+#getForeignExceptionMessage()Lorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;
+#getExceptionCause()Ljava/lang/String;
+#getExceptionMessage()Ljava/lang/String;
+#getExceptionFullMessage()Ljava/lang/String;
+#hasResultData()Z
+#getResult()[B
+#getStartTime()J
+#getLastUpdate()J
+#executionTime()J
+#hasClientAckTime()Z
+#getClientAckTime()J
+#setClientAckTime(J)V
+#convertToProcedureProto(Lorg/apache/hadoop/hbase/ProcedureInfo;)Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$Procedure;
+#convert(Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$Procedure;)Lorg/apache/hadoop/hbase/ProcedureInfo;
+#isProcedureOwner(Lorg/apache/hadoop/hbase/ProcedureInfo;Lorg/apache/hadoop/hbase/security/User;)Z
+#clone()Ljava/lang/Object;
@1.1.4
+#<init>(JLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$ProcedureState;JLorg/apache/hadoop/hbase/util/NonceKey;Lorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;JJ[B)V
+#toString()Ljava/lang/String;
-#<init>(JLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$ProcedureState;JLorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;JJ[B)V
-#setNonceKey(Lorg/apache/hadoop/hbase/util/NonceKey;)V
@1.2.0
-#toString()Ljava/lang/String;
@1.2.1
+#toString()Ljava/lang/String;
@1.3.0
*#getForeignExceptionMessage()Lorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;[deprecated]
*#convertToProcedureProto(Lorg/apache/hadoop/hbase/ProcedureInfo;)Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$Procedure;[deprecated]
*#convert(Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$Procedure;)Lorg/apache/hadoop/hbase/ProcedureInfo;[deprecated]
@2.0.0-alpha-1
+#<init>(JLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/ProcedureState;JLorg/apache/hadoop/hbase/util/NonceKey;Ljava/io/IOException;JJ[B)V
+#hasOwner()Z
+#getProcState()Lorg/apache/hadoop/hbase/ProcedureState;
+#getSubmittedTime()J
-#<init>(JLjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$ProcedureState;JLorg/apache/hadoop/hbase/util/NonceKey;Lorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;JJ[B)V
-#getProcState()Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$ProcedureState;
-#getForeignExceptionMessage()Lorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;[deprecated]
-#getExceptionCause()Ljava/lang/String;
-#getExceptionMessage()Ljava/lang/String;
-#getStartTime()J
-#convertToProcedureProto(Lorg/apache/hadoop/hbase/ProcedureInfo;)Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$Procedure;[deprecated]
-#convert(Lorg/apache/hadoop/hbase/protobuf/generated/ProcedureProtos$Procedure;)Lorg/apache/hadoop/hbase/ProcedureInfo;[deprecated]
@2.0.0-alpha3
-###org/apache/hadoop/hbase/ProcedureInfo

+###org/apache/hadoop/hbase/SettableSequenceId
@0.99.0
+#setSequenceId(J)V
@2.0.0-beta-1
-###org/apache/hadoop/hbase/SettableSequenceId

+###org/apache/hadoop/hbase/util/AbstractHBaseTool
@0.98.22-hadoop1
+#<init>()V
+#getConf()Lorg/apache/hadoop/conf/Configuration;
+#setConf(Lorg/apache/hadoop/conf/Configuration;)V
+#run([Ljava/lang/String;)I
+#parseLong(Ljava/lang/String;JJ)J
+#parseInt(Ljava/lang/String;II)I
@0.99.0
-###org/apache/hadoop/hbase/util/AbstractHBaseTool

+###org/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode
@2.0.0-alpha-1
+#<init>()V

+###org/apache/hadoop/hbase/util/AvlUtil
@2.0.0-alpha-1

+###org/apache/hadoop/hbase/util/WeakObjectPool
@1.2.0
+#<init>(Lorg/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory;)V
+#<init>(Lorg/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory;I)V
+#<init>(Lorg/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory;II)V
+#purge()V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;)V
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;I)V
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;II)V
+#createReference(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
+#getReferenceKey(Ljava/lang/ref/Reference;)Ljava/lang/Object;
-#<init>(Lorg/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory;)V
-#<init>(Lorg/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory;I)V
-#<init>(Lorg/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory;II)V
-#purge()V
-#get(Ljava/lang/Object;)Ljava/lang/Object;
-#size()I

+###org/apache/hadoop/hbase/AsyncConsoleAppender
@0.98.21-hadoop1
+#<init>()V
+#setTarget(Ljava/lang/String;)V
+#activateOptions()V
@0.99.0
-###org/apache/hadoop/hbase/AsyncConsoleAppender

+###org/apache/hadoop/hbase/codec/KeyValueCodec$ByteBuffKeyValueDecoder
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/nio/ByteBuff;)V
+#advance()Z
+#current()Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/exceptions/TimeoutIOException
@1.1.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/exceptions/UnexpectedStateException
@1.4.0
+#<init>()V
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/Throwable;)V

+###org/apache/hadoop/hbase/nio/SingleByteBuff
@2.0.0-alpha-1
+#<init>(Ljava/nio/ByteBuffer;)V
+#position()I
+#position(I)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#skip(I)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#moveBack(I)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#capacity()I
+#limit()I
+#limit(I)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#rewind()Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#mark()Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#asSubByteBuffer(I)Ljava/nio/ByteBuffer;
+#asSubByteBuffer(IILorg/apache/hadoop/hbase/util/ObjectIntPair;)V
+#remaining()I
+#hasRemaining()Z
+#reset()Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#slice()Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#duplicate()Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#get()B
+#get(I)B
+#getByteAfterPosition(I)B
+#put(B)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#put(IB)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#get([BII)V
+#get(I[BII)V
+#get([B)V
+#put(ILorg/apache/hadoop/hbase/nio/ByteBuff;II)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#put([BII)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#put([B)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#hasArray()Z
+#array()[B
+#arrayOffset()I
+#getShort()S
+#getShort(I)S
+#getShortAfterPosition(I)S
+#getInt()I
+#putInt(I)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#getInt(I)I
+#getIntAfterPosition(I)I
+#getLong()J
+#putLong(J)Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#getLong(I)J
+#getLongAfterPosition(I)J
+#toBytes(II)[B
+#get(Ljava/nio/ByteBuffer;II)V
+#read(Ljava/nio/channels/ReadableByteChannel;)I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#getEnclosingByteBuffer()Ljava/nio/ByteBuffer;
+#put(ILorg/apache/hadoop/hbase/nio/ByteBuff;II)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#putLong(J)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#putInt(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put([B)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put([BII)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put(IB)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#put(B)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#duplicate()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#slice()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#reset()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#mark()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#rewind()Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#limit(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#moveBack(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#skip(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#position(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;Ljava/nio/ByteBuffer;)V
+#read(Ljava/nio/channels/FileChannel;J)I
+#write(Ljava/nio/channels/FileChannel;J)I
+#nioByteBuffers()[Ljava/nio/ByteBuffer;
+#retain()Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#retain()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#getEnclosingByteBuffer()Ljava/nio/ByteBuffer;

+###org/apache/hadoop/hbase/SizeCachedKeyValue
@2.0.0-alpha-1
+#<init>([BIIJ)V
+#getRowLength()S
+#getKeyLength()I
+#heapSize()J
@2.2.0
+#getSerializedSize()I
@2.2.7
+#<init>([BIIJI)V
+#<init>([BIIJIS)V
-#<init>([BIIJ)V
@2.3.0
+#<init>([BIIJ)V
-#<init>([BIIJI)V
-#<init>([BIIJIS)V
@2.3.4
+#<init>([BIIJI)V
+#<init>([BIIJIS)V
-#<init>([BIIJ)V

+###org/apache/hadoop/hbase/trace/HBaseHTraceConfiguration
@0.99.0
+#<init>(Lorg/apache/hadoop/conf/Configuration;)V
+#get(Ljava/lang/String;)Ljava/lang/String;
+#get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+#getBoolean(Ljava/lang/String;Z)Z
@2.5.0
-###org/apache/hadoop/hbase/trace/HBaseHTraceConfiguration

+###org/apache/hadoop/hbase/util/Addressing$AddressSelectionCondition
@1.0.0
+#isAcceptableAddress(Ljava/net/InetAddress;)Z

+###org/apache/hadoop/hbase/util/AvlUtil$AvlIterableList
@2.0.0-alpha-1
+#<init>()V
+#readNext(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;
+#readPrev(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;
+#prepend(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;
+#append(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;
+#appendList(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;
+#remove(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;
+#isLinked(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Z
@2.0.0-beta-2
+#prepend(Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;)Lorg/apache/hadoop/hbase/util/AvlUtil$AvlLinkedNode;

+###org/apache/hadoop/hbase/util/ImmutableByteArray
@1.4.0
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#wrap([B)Lorg/apache/hadoop/hbase/util/ImmutableByteArray;
+#toStringUtf8()Ljava/lang/String;
@2.1.8
+#toString()Ljava/lang/String;
-#toStringUtf8()Ljava/lang/String;
@2.2.0
+#toStringUtf8()Ljava/lang/String;
-#toString()Ljava/lang/String;
@2.2.3
+#toString()Ljava/lang/String;
-#toStringUtf8()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/ObjectPool
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;)V
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;I)V
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;II)V
+#purge()V
+#createReference(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
+#getReferenceKey(Ljava/lang/ref/Reference;)Ljava/lang/Object;
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#size()I

+###org/apache/hadoop/hbase/util/RowColBloomHashKey
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/Cell;)V
+#get(I)B
+#length()I

+###org/apache/hadoop/hbase/util/SoftObjectPool
@2.0.0-alpha-1
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;)V
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;I)V
+#<init>(Lorg/apache/hadoop/hbase/util/ObjectPool$ObjectFactory;II)V
+#createReference(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/ref/Reference;
+#getReferenceKey(Ljava/lang/ref/Reference;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/ByteBufferKeyValue
@2.0.0-alpha-1
+#<init>(Ljava/nio/ByteBuffer;IIJ)V
+#<init>(Ljava/nio/ByteBuffer;II)V
+#getBuffer()Ljava/nio/ByteBuffer;
+#getOffset()I
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getSequenceId()J
+#setSequenceId(J)V
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getRowByteBuffer()Ljava/nio/ByteBuffer;
+#getRowPosition()I
+#getFamilyByteBuffer()Ljava/nio/ByteBuffer;
+#getFamilyPosition()I
+#getQualifierByteBuffer()Ljava/nio/ByteBuffer;
+#getQualifierPosition()I
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#getValuePosition()I
+#getTagsByteBuffer()Ljava/nio/ByteBuffer;
+#getTagsPosition()I
+#heapSize()J
+#write(Ljava/io/OutputStream;Z)I
+#getSerializedSize(Z)I
+#write(Ljava/nio/ByteBuffer;I)V
+#toString()Ljava/lang/String;
+#setTimestamp(J)V
+#setTimestamp([BI)V
+#deepClone()Lorg/apache/hadoop/hbase/Cell;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.0.0-alpha4
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#setTimestamp([B)V
-#setTimestamp([BI)V
@2.0.1
+#getFamilyPosition(I)I
@2.2.0
+#getSerializedSize()I

+###org/apache/hadoop/hbase/ChoreService
@1.1.0
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#getInstance(Ljava/lang/String;)Lorg/apache/hadoop/hbase/ChoreService;
+#scheduleChore(Lorg/apache/hadoop/hbase/ScheduledChore;)Z
+#cancelChore(Lorg/apache/hadoop/hbase/ScheduledChore;)V
+#cancelChore(Lorg/apache/hadoop/hbase/ScheduledChore;Z)V
+#isChoreScheduled(Lorg/apache/hadoop/hbase/ScheduledChore;)Z
+#triggerNow(Lorg/apache/hadoop/hbase/ScheduledChore;)Z
+#onChoreMissedStartTime(Lorg/apache/hadoop/hbase/ScheduledChore;)V
+#shutdown()V
+#isShutdown()Z
+#isTerminated()Z
@1.2.0
+#<init>(Ljava/lang/String;Z)V
+#<init>(Ljava/lang/String;IZ)V
-#<init>(Ljava/lang/String;I)V
@1.3.0
-#getInstance(Ljava/lang/String;)Lorg/apache/hadoop/hbase/ChoreService;
@2.4.2
-#cancelChore(Lorg/apache/hadoop/hbase/ScheduledChore;)V
-#cancelChore(Lorg/apache/hadoop/hbase/ScheduledChore;Z)V
-#triggerNow(Lorg/apache/hadoop/hbase/ScheduledChore;)Z
-#onChoreMissedStartTime(Lorg/apache/hadoop/hbase/ScheduledChore;)V

+###org/apache/hadoop/hbase/io/ByteBufferWriterOutputStream
@2.0.0-alpha-1
+#<init>(Ljava/io/OutputStream;)V
+#write(Ljava/nio/ByteBuffer;II)V
+#writeInt(I)V
+#write(I)V
+#write([BII)V
+#flush()V
+#close()V
@2.1.0
+#<init>(Ljava/io/OutputStream;I)V

+###org/apache/hadoop/hbase/io/crypto/aes/CommonsCryptoAESEncryptor
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;Ljava/util/Properties;Ljava/security/SecureRandom;)V
+#setKey(Ljava/security/Key;)V
+#getIvLength()I
+#getBlockSize()I
+#getIv()[B
+#setIv([B)V
+#createEncryptionStream(Ljava/io/OutputStream;)Ljava/io/OutputStream;
+#reset()V

+###org/apache/hadoop/hbase/io/crypto/aes/CryptoAES
@2.0.0-alpha-1
+#<init>(Ljava/lang/String;Ljava/util/Properties;[B[B[B[B)V
+#wrap([BII)[B
+#unwrap([BII)[B

+###org/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue
@0.99.0
+#<init>()V
+#<init>([BII)V
+#getKeyOffset()I
+#setKey([BII)V
+#getKey()[B
+#getRowArray()[B
+#getRowOffset()I
+#getFamilyArray()[B
+#getFamilyLength()B
+#getFamilyOffset()I
+#getQualifierArray()[B
+#getQualifierLength()I
+#getQualifierOffset()I
+#getKeyLength()I
+#getRowLength()S
+#getTypeByte()B
+#getTimestamp()J
+#getTimestampOffset()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsLength()I
+#toString()Ljava/lang/String;
+#hashCode()I
+#equals(Ljava/lang/Object;)Z
+#clone()Ljava/lang/Object;
@1.0.1
+#<init>([B)V
@2.0.0-alpha-1
+#set(Lorg/apache/hadoop/hbase/KeyValue$KeyOnlyKeyValue;)V
+#clear()V
+#heapSize()J
+#write(Ljava/io/OutputStream;Z)I

+###org/apache/hadoop/hbase/net/Address
@1.4.0
+#fromParts(Ljava/lang/String;I)Lorg/apache/hadoop/hbase/net/Address;
+#fromString(Ljava/lang/String;)Lorg/apache/hadoop/hbase/net/Address;
+#getHostname()Ljava/lang/String;
+#getPort()I
+#toString()Ljava/lang/String;
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/net/Address;)I
+#compareTo(Ljava/lang/Object;)I
@1.7.0
+#fromSocketAddress(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/hbase/net/Address;
+#toSocketAddress()Ljava/net/InetSocketAddress;
+#toSocketAddress([Lorg/apache/hadoop/hbase/net/Address;)[Ljava/net/InetSocketAddress;
+#getHostName()Ljava/lang/String;
*#getHostname()Ljava/lang/String;[deprecated]
@2.0.0-alpha-1
-#fromSocketAddress(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/hbase/net/Address;
-#toSocketAddress()Ljava/net/InetSocketAddress;
-#toSocketAddress([Lorg/apache/hadoop/hbase/net/Address;)[Ljava/net/InetSocketAddress;
-#getHostName()Ljava/lang/String;
@2.0.0-beta-2
+#toStringWithoutDomain()Ljava/lang/String;
@2.5.0
+#fromSocketAddress(Ljava/net/InetSocketAddress;)Lorg/apache/hadoop/hbase/net/Address;
+#toSocketAddress(Lorg/apache/hadoop/hbase/net/Address;)Ljava/net/InetSocketAddress;
+#toSocketAddress([Lorg/apache/hadoop/hbase/net/Address;)[Ljava/net/InetSocketAddress;
+#getHostName()Ljava/lang/String;
*#getHostname()Ljava/lang/String;[deprecated]

+###org/apache/hadoop/hbase/NoTagsByteBufferKeyValue
@2.0.0-alpha-1
+#<init>(Ljava/nio/ByteBuffer;II)V
+#<init>(Ljava/nio/ByteBuffer;IIJ)V
+#getTagsArray()[B
+#getTagsLength()I
+#getSerializedSize(Z)I
+#deepClone()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha4
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;
-#deepClone()Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/procedure2/LockInfo
@2.0.0-alpha-1
+#<init>()V
+#getResourceType()Lorg/apache/hadoop/hbase/procedure2/LockInfo$ResourceType;
+#setResourceType(Lorg/apache/hadoop/hbase/procedure2/LockInfo$ResourceType;)V
+#getResourceName()Ljava/lang/String;
+#setResourceName(Ljava/lang/String;)V
+#getLockType()Lorg/apache/hadoop/hbase/procedure2/LockInfo$LockType;
+#setLockType(Lorg/apache/hadoop/hbase/procedure2/LockInfo$LockType;)V
+#getExclusiveLockOwnerProcedure()Lorg/apache/hadoop/hbase/ProcedureInfo;
+#setExclusiveLockOwnerProcedure(Lorg/apache/hadoop/hbase/ProcedureInfo;)V
+#getSharedLockCount()I
+#setSharedLockCount(I)V
+#getWaitingProcedures()Ljava/util/List;
+#setWaitingProcedures(Ljava/util/List;)V
+#addWaitingProcedure(Lorg/apache/hadoop/hbase/procedure2/LockInfo$WaitingProcedure;)V
@2.0.0-alpha3
-###org/apache/hadoop/hbase/procedure2/LockInfo

+###org/apache/hadoop/hbase/ProcedureState
@2.0.0-alpha-1
+#values()[Lorg/apache/hadoop/hbase/ProcedureState;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/ProcedureState;
@2.0.0
-###org/apache/hadoop/hbase/ProcedureState

+###org/apache/hadoop/hbase/SizeCachedNoTagsKeyValue
@2.0.0-alpha-1
+#<init>([BIIJ)V
+#getTagsLength()I
+#write(Ljava/io/OutputStream;Z)I
+#getSerializedSize(Z)I
@2.2.7
+#<init>([BIIJI)V
+#<init>([BIIJIS)V
-#<init>([BIIJ)V
@2.3.0
+#<init>([BIIJ)V
-#<init>([BIIJI)V
-#<init>([BIIJIS)V
@2.3.4
+#<init>([BIIJI)V
+#<init>([BIIJIS)V
-#<init>([BIIJ)V

+###org/apache/hadoop/hbase/trace/SpanReceiverHost
@0.99.0
+#getInstance(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/hbase/trace/SpanReceiverHost;
+#loadSpanReceivers()V
+#closeReceivers()V
@2.0.0-beta-1
+#getConfiguration()Lorg/apache/hadoop/conf/Configuration;
@2.5.0
-###org/apache/hadoop/hbase/trace/SpanReceiverHost

+###org/apache/hadoop/hbase/util/AbstractByteRange
@0.99.0
+#<init>()V
+#getBytes()[B
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
+#set(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#set([BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getOffset()I
+#setOffset(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getLength()I
+#setLength(I)Lorg/apache/hadoop/hbase/util/ByteRange;
+#isEmpty()Z
+#isEmpty(Lorg/apache/hadoop/hbase/util/ByteRange;)Z
+#get(I)B
+#get(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#get(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getShort(I)S
+#getInt(I)I
+#getLong(I)J
+#getVLong(I)J
+#getVLongSize(J)I
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putVLong(IJ)I
+#deepCopyToNewArray()[B
+#deepCopyTo([BI)V
+#deepCopySubRangeTo(II[BI)V
+#hashCode()I
+#compareTo(Lorg/apache/hadoop/hbase/util/ByteRange;)I
+#toString()Ljava/lang/String;
+#compareTo(Ljava/lang/Object;)I
@1.6.0
-#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putVLong(IJ)I
@2.0.0-alpha-1
+#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
+#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
+#putVLong(IJ)I
@2.1.0
+#equals(Ljava/lang/Object;)Z
@2.3.0
-#unset()Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(IB)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[B)Lorg/apache/hadoop/hbase/util/ByteRange;
-#put(I[BII)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putInt(II)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putLong(IJ)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putShort(IS)Lorg/apache/hadoop/hbase/util/ByteRange;
-#putVLong(IJ)I

+###org/apache/hadoop/hbase/util/BoundedCompletionService
@0.99.0
+#<init>(Ljava/util/concurrent/Executor;I)V
+#submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
+#take()Ljava/util/concurrent/Future;
+#poll(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
+#cancelAll(Z)V

+###org/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier
@2.0.0-alpha-1
+#get()Ljava/lang/Object;
@2.2.0
-###org/apache/hadoop/hbase/util/CollectionUtils$IOExceptionSupplier

+###org/apache/hadoop/hbase/util/NonceKey
@1.1.3
+#<init>(JJ)V
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
+#toString()Ljava/lang/String;
+#getNonceGroup()J
+#getNonce()J

+###org/apache/hadoop/hbase/util/ReadOnlyByteRangeException
@0.99.0
+#<init>()V

+###org/apache/hadoop/hbase/io/util/HeapMemorySizeUtil
@0.99.0
+#<init>()V
+#checkForClusterFreeMemoryLimit(Lorg/apache/hadoop/conf/Configuration;)V
+#getGlobalMemStorePercent(Lorg/apache/hadoop/conf/Configuration;Z)F
+#getGlobalMemStoreLowerMark(Lorg/apache/hadoop/conf/Configuration;F)F
+#getBlockCacheHeapPercent(Lorg/apache/hadoop/conf/Configuration;)F
+#getL2BlockCacheHeapPercent(Lorg/apache/hadoop/conf/Configuration;)F
@1.1.9
+#safeGetHeapMemoryUsage()Ljava/lang/management/MemoryUsage;
+#getLruCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
+#getBucketCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
@1.2.0
-#safeGetHeapMemoryUsage()Ljava/lang/management/MemoryUsage;
-#getLruCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
-#getBucketCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
@1.2.5
+#safeGetHeapMemoryUsage()Ljava/lang/management/MemoryUsage;
+#getLruCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
+#getBucketCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
@1.3.0
-#safeGetHeapMemoryUsage()Ljava/lang/management/MemoryUsage;
-#getLruCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
-#getBucketCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
@1.3.1
+#safeGetHeapMemoryUsage()Ljava/lang/management/MemoryUsage;
+#getLruCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
+#getBucketCacheSize(Lorg/apache/hadoop/conf/Configuration;)J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/util/HeapMemorySizeUtil

+###org/apache/hadoop/hbase/util/ForeignExceptionUtil
@1.1.0
+#toIOException(Lorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;)Ljava/io/IOException;
+#toProtoForeignException(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/apache/hadoop/hbase/protobuf/generated/ErrorHandlingProtos$ForeignExceptionMessage;
+#toProtoStackTraceElement([Ljava/lang/StackTraceElement;)Ljava/util/List;
+#toStackTrace(Ljava/util/List;)[Ljava/lang/StackTraceElement;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/ForeignExceptionUtil

+###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$ClonedSeekerState
@0.99.0
+#getRowArray()[B
+#getFamilyArray()[B
+#getQualifierArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getMvccVersion()J[deprecated]
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getValue()[B[deprecated]
+#getFamily()[B[deprecated]
+#getQualifier()[B[deprecated]
+#getRow()[B[deprecated]
+#toString()Ljava/lang/String;
+#setSequenceId(J)V
@0.99.1
+#heapSize()J
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$ClonedSeekerState

+###org/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory
@1.2.0
+#createObject(Ljava/lang/Object;)Ljava/lang/Object;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/WeakObjectPool$ObjectFactory

+###org/apache/hadoop/hbase/util/Random64
@1.4.9
+#<init>()V
+#<init>(J)V
+#nextLong()J
+#nextBytes([B)V
+#main([Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/Random64

+###org/apache/hadoop/hbase/io/encoding/RowIndexSeekerV1$SeekerState
@1.4.0
+#toString()Ljava/lang/String;
+#toCell()Lorg/apache/hadoop/hbase/Cell;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/io/encoding/RowIndexSeekerV1$SeekerState

+###org/apache/hadoop/hbase/util/FastLongHistogram
@1.3.0
+#<init>()V
+#<init>(I)V
+#<init>(IJJ)V
+#add(JJ)V
+#getQuantiles([D)[J
+#getQuantiles()[J
+#getMin()J
+#getMax()J
+#getCount()J
+#getMean()J
+#getNumAtOrBelow(J)J
+#reset()Lorg/apache/hadoop/hbase/util/FastLongHistogram;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/FastLongHistogram

+###org/apache/hadoop/hbase/util/LongAdder
@1.4.0
+#<init>()V
+#add(J)V
+#increment()V
+#decrement()V
+#sum()J
+#reset()V
+#sumThenReset()J
+#toString()Ljava/lang/String;
+#longValue()J
+#intValue()I
+#floatValue()F
+#doubleValue()D
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/LongAdder

+###org/apache/hadoop/hbase/conf/ConfigurationManager
@1.7.0
+#<init>()V
+#registerObserver(Lorg/apache/hadoop/hbase/conf/ConfigurationObserver;)V
+#deregisterObserver(Lorg/apache/hadoop/hbase/conf/ConfigurationObserver;)V
+#notifyAllObservers(Lorg/apache/hadoop/conf/Configuration;)V
+#getNumObservers()I
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/conf/ConfigurationManager

+###org/apache/hadoop/hbase/conf/ConfigurationObserver
@1.7.0
+#onConfigurationChange(Lorg/apache/hadoop/conf/Configuration;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/conf/ConfigurationObserver

+###org/apache/hadoop/hbase/conf/PropagatingConfigurationObserver
@1.7.0
+#registerChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
+#deregisterChildren(Lorg/apache/hadoop/hbase/conf/ConfigurationManager;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/conf/PropagatingConfigurationObserver

+###org/apache/hadoop/hbase/exceptions/MasterRegistryFetchException
@1.7.0
+#<init>(Ljava/util/Set;Ljava/lang/Throwable;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/exceptions/MasterRegistryFetchException

+###org/apache/hadoop/hbase/util/Bytes$ConverterHolder$PureJavaConverter
@1.5.0
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/Bytes$ConverterHolder$PureJavaConverter

+###org/apache/hadoop/hbase/util/Bytes$ConverterHolder$UnsafeConverter
@1.5.0
+#<init>()V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/Bytes$ConverterHolder$UnsafeConverter

+###org/apache/hadoop/hbase/util/CommonFSUtils$StreamLacksCapabilityException
@1.5.0
+#<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+#<init>(Ljava/lang/String;)V
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/CommonFSUtils$StreamLacksCapabilityException

+###org/apache/hadoop/hbase/util/CommonFSUtils
@1.5.0
+#isStartingWithPath(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#isMatchingTail(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Z
+#isMatchingTail(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#deleteDirectory(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#getDefaultBlockSize(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)J
+#getDefaultReplication(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)S
+#getDefaultBufferSize(Lorg/apache/hadoop/fs/FileSystem;)I
+#create(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;Z)Lorg/apache/hadoop/fs/FSDataOutputStream;
+#getFilePermissions(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/fs/permission/FsPermission;
+#validateRootPath(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
+#removeWALRootPath(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/String;
+#getPath(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;
+#getRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#setRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#setFsDefault(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#getRootDirFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getWALRootDir(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/Path;
+#setWALRootDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;)V
+#getWALFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#getTableDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
+#getTableName(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/hbase/TableName;
+#getNamespaceDir(Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;Ljava/lang/String;)V
+#setStoragePolicy(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Ljava/lang/String;)V
+#isHDFS(Lorg/apache/hadoop/conf/Configuration;)Z
+#isRecoveredEdits(Lorg/apache/hadoop/fs/Path;)Z
+#getCurrentFileSystem(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
+#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/PathFilter;)[Lorg/apache/hadoop/fs/FileStatus;
+#listStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;
+#listLocatedStatus(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Ljava/util/List;
+#delete(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Z)Z
+#isExists(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;)Z
+#logFileSystemState(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/commons/logging/Log;)V
+#renameAndSetModifyTime(Lorg/apache/hadoop/fs/FileSystem;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z
+#setupShortCircuitRead(Lorg/apache/hadoop/conf/Configuration;)V
+#checkShortCircuitReadBufferSize(Lorg/apache/hadoop/conf/Configuration;)V
+#hasCapability(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;)Z
@1.6.0
-#setupShortCircuitRead(Lorg/apache/hadoop/conf/Configuration;)V
@1.7.0
+#getRegionDir(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/hbase/TableName;Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;
+#getWALTableDir(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/fs/Path;
@2.0.0-alpha-1
-###org/apache/hadoop/hbase/util/CommonFSUtils

+###org/apache/hadoop/hbase/util/GsonUtil
@1.3.6
+#createGson()Lorg/apache/hbase/thirdparty/com/google/gson/GsonBuilder;
@1.4.0
-###org/apache/hadoop/hbase/util/GsonUtil

+###org/apache/hadoop/hbase/ByteBufferExtendedCell
@2.0.0-beta-1
+#<init>()V
+#getRowByteBuffer()Ljava/nio/ByteBuffer;
+#getRowPosition()I
+#getFamilyByteBuffer()Ljava/nio/ByteBuffer;
+#getFamilyPosition()I
+#getQualifierByteBuffer()Ljava/nio/ByteBuffer;
+#getQualifierPosition()I
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#getValuePosition()I
+#getTagsByteBuffer()Ljava/nio/ByteBuffer;
+#getTagsPosition()I

+###org/apache/hadoop/hbase/Cell$Type
@2.0.0-beta-1
+#values()[Lorg/apache/hadoop/hbase/Cell$Type;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/Cell$Type;
+#getCode()B

+###org/apache/hadoop/hbase/CellBuilder
@2.0.0-alpha3
+#setRow([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/CellBuilder;
+#setType(B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setValue([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#build()Lorg/apache/hadoop/hbase/Cell;
+#clear()Lorg/apache/hadoop/hbase/CellBuilder;
@2.0.0-alpha4
+#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/CellBuilder;
-#setType(B)Lorg/apache/hadoop/hbase/CellBuilder;
@2.0.0-beta-1
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/CellBuilder;
-#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/CellBuilder;

+###org/apache/hadoop/hbase/CellBuilderFactory
@2.0.0-alpha3
+#create(Lorg/apache/hadoop/hbase/CellBuilderType;)Lorg/apache/hadoop/hbase/CellBuilder;

+###org/apache/hadoop/hbase/CellBuilderType
@2.0.0-alpha3
+#values()[Lorg/apache/hadoop/hbase/CellBuilderType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/CellBuilderType;

+###org/apache/hadoop/hbase/CellComparatorImpl
@2.0.0-alpha4
+#<init>()V
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
+#compareColumns(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareFamilies(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareQualifiers(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compareWithoutRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareTimestamps(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareTimestamps(JJ)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.1
+#getSimpleComparator()Ljava/util/Comparator;
@2.3.0
+#getCellComparator(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/CellComparator;
+#getCellComparator([B)Lorg/apache/hadoop/hbase/CellComparator;

+###org/apache/hadoop/hbase/ExtendedCellBuilder
@2.0.0-alpha3
+#setRow([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setType(B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setValue([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#build()Lorg/apache/hadoop/hbase/ExtendedCell;
+#clear()Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTags([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTags([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setSequenceId(J)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#clear()Lorg/apache/hadoop/hbase/CellBuilder;
+#build()Lorg/apache/hadoop/hbase/Cell;
+#setValue([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setType(B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setRow([B)Lorg/apache/hadoop/hbase/CellBuilder;
@2.0.0-alpha4
+#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/CellBuilder;
-#setType(B)Lorg/apache/hadoop/hbase/CellBuilder;
@2.0.0-beta-1
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTags(Ljava/util/List;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#clear()Lorg/apache/hadoop/hbase/RawCellBuilder;
+#build()Lorg/apache/hadoop/hbase/RawCell;
+#setTags(Ljava/util/List;)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setValue([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setRow([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/CellBuilder;
-#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
-#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/CellBuilder;

+###org/apache/hadoop/hbase/ExtendedCellBuilderFactory
@2.0.0-alpha3
+#create(Lorg/apache/hadoop/hbase/CellBuilderType;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;

+###org/apache/hadoop/hbase/ExtendedCellBuilderImpl
@2.0.0-alpha3
+#<init>()V
+#setRow([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setType(B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setValue([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTags([B)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTags([BII)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setSequenceId(J)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#build()Lorg/apache/hadoop/hbase/ExtendedCell;
+#clear()Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#clear()Lorg/apache/hadoop/hbase/CellBuilder;
+#build()Lorg/apache/hadoop/hbase/Cell;
+#setValue([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setType(B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setRow([B)Lorg/apache/hadoop/hbase/CellBuilder;
@2.0.0-alpha4
+#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/CellBuilder;
-#setType(B)Lorg/apache/hadoop/hbase/CellBuilder;
@2.0.0-beta-1
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#setTags(Ljava/util/List;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
+#clear()Lorg/apache/hadoop/hbase/RawCellBuilder;
+#build()Lorg/apache/hadoop/hbase/RawCell;
+#setTags(Ljava/util/List;)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setValue([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setRow([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/CellBuilder;
-#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/ExtendedCellBuilder;
-#setType(Lorg/apache/hadoop/hbase/CellBuilder$DataType;)Lorg/apache/hadoop/hbase/CellBuilder;

+###org/apache/hadoop/hbase/MetaCellComparator
@2.3.2
+#<init>()V
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
+#compareRows(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/Cell;)I
+#getSimpleComparator()Ljava/util/Comparator;
@2.3.6
+#compareRows([B[B)I
@2.4.0
-#compareRows([B[B)I
@2.4.5
+#compareRows([B[B)I
@3.0.0-alpha-1
-#compareRows([B[B)I
@3.0.0-alpha-2
+#compareRows([B[B)I

+###org/apache/hadoop/hbase/PrivateCellUtil
@2.0.0-alpha4
+#fillRowRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#fillFamilyRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#fillQualifierRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#fillValueRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#fillTagRange(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/util/ByteRange;)Lorg/apache/hadoop/hbase/util/ByteRange;
+#getTagsArray(Lorg/apache/hadoop/hbase/Cell;)[B
+#cloneTags(Lorg/apache/hadoop/hbase/Cell;)[B
+#copyTagsTo(Lorg/apache/hadoop/hbase/Cell;[BI)I
+#copyTagsTo(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)I
+#getRowByte(Lorg/apache/hadoop/hbase/Cell;I)B
+#getQualifierByte(Lorg/apache/hadoop/hbase/Cell;I)B
+#getValueBufferShallowCopy(Lorg/apache/hadoop/hbase/Cell;)Ljava/nio/ByteBuffer;
+#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;
+#createCell(Lorg/apache/hadoop/hbase/Cell;[B)Lorg/apache/hadoop/hbase/Cell;
+#createCell(Lorg/apache/hadoop/hbase/Cell;[B[B)Lorg/apache/hadoop/hbase/Cell;
+#matchingRows(Lorg/apache/hadoop/hbase/Cell;[BII)Z
+#matchingFamily(Lorg/apache/hadoop/hbase/Cell;[BII)Z
+#matchingQualifier(Lorg/apache/hadoop/hbase/Cell;[BII)Z
+#matchingColumn(Lorg/apache/hadoop/hbase/Cell;[BII[BII)Z
+#matchingValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II)Z
+#matchingType(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#isDelete(B)Z
+#isDeleteType(Lorg/apache/hadoop/hbase/Cell;)Z
+#isDeleteFamily(Lorg/apache/hadoop/hbase/Cell;)Z
+#isDeleteFamilyVersion(Lorg/apache/hadoop/hbase/Cell;)Z
+#isDeleteColumns(Lorg/apache/hadoop/hbase/Cell;)Z
+#isDeleteColumnVersion(Lorg/apache/hadoop/hbase/Cell;)Z
+#isDeleteColumnOrFamily(Lorg/apache/hadoop/hbase/Cell;)Z
+#tagsIterator(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/Iterator;
+#getTags(Lorg/apache/hadoop/hbase/Cell;)Ljava/util/List;
+#getTag(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/Tag;
+#overlappingKeys([B[B[B[B)Z
+#writeRowKeyExcludingCommon(Lorg/apache/hadoop/hbase/Cell;SILjava/io/DataOutputStream;)V
+#writeRowSkippingBytes(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;SI)V
+#findCommonPrefixInFlatKey(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;ZZ)I
+#compareKeyBasedOnColHint(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II[BIIJB)I
+#compareKeyIgnoresMvcc(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRow(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
+#compareFamily(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
+#compareQualifier(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
+#compareValue(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/filter/ByteArrayComparable;)I
+#writeFlatKey(Lorg/apache/hadoop/hbase/Cell;Ljava/io/DataOutput;)V
+#deepClone(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#writeCell(Lorg/apache/hadoop/hbase/Cell;Ljava/io/OutputStream;Z)I
+#writeCellToBuffer(Lorg/apache/hadoop/hbase/Cell;Ljava/nio/ByteBuffer;I)V
+#writeFlatKey(Lorg/apache/hadoop/hbase/Cell;Ljava/io/OutputStream;)I
+#setSequenceId(Lorg/apache/hadoop/hbase/Cell;J)V
+#setTimestamp(Lorg/apache/hadoop/hbase/Cell;J)V
+#setTimestamp(Lorg/apache/hadoop/hbase/Cell;[BI)V
+#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;J)Z
+#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;[BI)Z
+#writeRow(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;S)V
+#writeFamily(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;B)V
+#writeQualifier(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
+#writeQualifierSkippingBytes(Ljava/io/DataOutputStream;Lorg/apache/hadoop/hbase/Cell;II)V
+#writeValue(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
+#writeTags(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;I)V
+#equalsIgnoreMvccVersion(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)Z
+#getRowAsInt(Lorg/apache/hadoop/hbase/Cell;)I
+#getValueAsLong(Lorg/apache/hadoop/hbase/Cell;)J
+#getValueAsInt(Lorg/apache/hadoop/hbase/Cell;)I
+#getValueAsDouble(Lorg/apache/hadoop/hbase/Cell;)D
+#getValueAsBigDecimal(Lorg/apache/hadoop/hbase/Cell;)Ljava/math/BigDecimal;
+#compressTags(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/TagCompressionContext;)V
+#compressRow(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
+#compressFamily(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
+#compressQualifier(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/io/util/Dictionary;)V
+#compare(Lorg/apache/hadoop/hbase/CellComparator;Lorg/apache/hadoop/hbase/Cell;[BII)I
+#createNextOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#estimatedSerializedSizeOf(Lorg/apache/hadoop/hbase/Cell;)I
+#estimatedSerializedSizeOfKey(Lorg/apache/hadoop/hbase/Cell;)I
+#estimatedHeapSizeOf(Lorg/apache/hadoop/hbase/Cell;)J
+#getCellKeySerializedAsKeyValueKey(Lorg/apache/hadoop/hbase/Cell;)[B
+#createFirstOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([BIS)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([B[B[B)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([BIS[BIB[BII)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRow([B)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowFamily(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnNextRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowCol(Lorg/apache/hadoop/hbase/Cell;[BII)Lorg/apache/hadoop/hbase/Cell;
+#createFirstOnRowColTS(Lorg/apache/hadoop/hbase/Cell;J)Lorg/apache/hadoop/hbase/Cell;
+#createLastOnRow(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createLastOnRow([B)Lorg/apache/hadoop/hbase/Cell;
+#createLastOnRowCol(Lorg/apache/hadoop/hbase/Cell;)Lorg/apache/hadoop/hbase/Cell;
+#createFirstDeleteFamilyCellOnRow([B[B)Lorg/apache/hadoop/hbase/Cell;
@2.0.0-beta-1
+#getTag(Lorg/apache/hadoop/hbase/Cell;B)Ljava/util/Optional;
+#tagsIterator(Ljava/nio/ByteBuffer;II)Ljava/util/Iterator;
+#toType(B)Lorg/apache/hadoop/hbase/Cell$Type;
+#toTypeByte(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/KeyValue$Type;
+#setTimestamp(Lorg/apache/hadoop/hbase/Cell;[B)V
+#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;[B)Z
-#getTagsArray(Lorg/apache/hadoop/hbase/Cell;)[B
-#getTag(Lorg/apache/hadoop/hbase/Cell;B)Lorg/apache/hadoop/hbase/Tag;
-#setTimestamp(Lorg/apache/hadoop/hbase/Cell;[BI)V
-#updateLatestStamp(Lorg/apache/hadoop/hbase/Cell;[BI)Z
@2.0.0-beta-2
+#estimatedSizeOfCell(Lorg/apache/hadoop/hbase/Cell;)J
-#estimatedHeapSizeOf(Lorg/apache/hadoop/hbase/Cell;)J
@2.0.6
+#qualifierStartsWith(Lorg/apache/hadoop/hbase/Cell;[B)Z
@2.1.0
-#qualifierStartsWith(Lorg/apache/hadoop/hbase/Cell;[B)Z
@2.1.6
+#qualifierStartsWith(Lorg/apache/hadoop/hbase/Cell;[B)Z
@2.2.0
-#qualifierStartsWith(Lorg/apache/hadoop/hbase/Cell;[B)Z
-#estimatedSizeOfCell(Lorg/apache/hadoop/hbase/Cell;)J
@2.2.1
+#qualifierStartsWith(Lorg/apache/hadoop/hbase/Cell;[B)Z
@2.4.3
+#matchingTags(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;II)Z

+###org/apache/hadoop/hbase/RawCell
@2.0.0-beta-1
+#cloneTags()[B
+#getTags()Ljava/util/Iterator;
+#getTag(B)Ljava/util/Optional;
+#checkForTagsLength(I)V
@2.2.7
+#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;
@2.3.0
-#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;
@2.3.4
+#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;
@2.4.0
-#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;
@2.4.1
+#createCell(Lorg/apache/hadoop/hbase/Cell;Ljava/util/List;)Lorg/apache/hadoop/hbase/Cell;

+###org/apache/hadoop/hbase/RawCellBuilder
@2.0.0-beta-1
+#setRow([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setValue([BII)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#setTags(Ljava/util/List;)Lorg/apache/hadoop/hbase/RawCellBuilder;
+#build()Lorg/apache/hadoop/hbase/RawCell;
+#clear()Lorg/apache/hadoop/hbase/RawCellBuilder;
+#clear()Lorg/apache/hadoop/hbase/CellBuilder;
+#build()Lorg/apache/hadoop/hbase/Cell;
+#setValue([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setValue([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setType(Lorg/apache/hadoop/hbase/Cell$Type;)Lorg/apache/hadoop/hbase/CellBuilder;
+#setTimestamp(J)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setQualifier([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setFamily([B)Lorg/apache/hadoop/hbase/CellBuilder;
+#setRow([BII)Lorg/apache/hadoop/hbase/CellBuilder;
+#setRow([B)Lorg/apache/hadoop/hbase/CellBuilder;

+###org/apache/hadoop/hbase/RawCellBuilderFactory
@2.0.0-beta-1
+#create()Lorg/apache/hadoop/hbase/RawCellBuilder;

+###org/apache/hadoop/hbase/SizeCachedByteBufferKeyValue
@2.2.7
+#<init>(Ljava/nio/ByteBuffer;IIJI)V
+#<init>(Ljava/nio/ByteBuffer;IIJIS)V
+#getRowLength()S
+#getKeyLength()I
+#heapSize()J
+#getSerializedSize()I
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
-###org/apache/hadoop/hbase/SizeCachedByteBufferKeyValue

+###org/apache/hadoop/hbase/SizeCachedNoTagsByteBufferKeyValue
@2.2.7
+#<init>(Ljava/nio/ByteBuffer;IIJI)V
+#<init>(Ljava/nio/ByteBuffer;IIJIS)V
+#getRowLength()S
+#getKeyLength()I
+#heapSize()J
+#equals(Ljava/lang/Object;)Z
+#hashCode()I
@2.3.0
-###org/apache/hadoop/hbase/SizeCachedNoTagsByteBufferKeyValue

+###org/apache/hadoop/hbase/TagBuilder
@2.2.7
+#setTagType(B)Lorg/apache/hadoop/hbase/TagBuilder;
+#setTagValue([B)Lorg/apache/hadoop/hbase/TagBuilder;
+#build()Lorg/apache/hadoop/hbase/Tag;
@2.3.0
-###org/apache/hadoop/hbase/TagBuilder

+###org/apache/hadoop/hbase/TagBuilderFactory
@2.2.7
+#<init>()V
+#create()Lorg/apache/hadoop/hbase/TagBuilder;
@2.3.0
-###org/apache/hadoop/hbase/TagBuilderFactory

+###org/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler
@2.3.0
+#free()V

+###org/apache/hadoop/hbase/io/ByteBuffAllocator
@2.3.0
+#create(Lorg/apache/hadoop/conf/Configuration;Z)Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;
+#isReservoirEnabled()Z
+#getHeapAllocationBytes()J
+#getPoolAllocationBytes()J
+#getBufferSize()I
+#getUsedBufferCount()I
+#getFreeBufferCount()I
+#getTotalBufferCount()I
+#getHeapAllocationBytes([Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)J
+#getHeapAllocationRatio([Lorg/apache/hadoop/hbase/io/ByteBuffAllocator;)D
+#allocateOneBuffer()Lorg/apache/hadoop/hbase/nio/SingleByteBuff;
+#allocate(I)Lorg/apache/hadoop/hbase/nio/ByteBuff;
+#clean()V

+###org/apache/hadoop/hbase/io/DeallocateRewriteByteBuffAllocator
@2.4.5
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/DeallocateRewriteByteBuffAllocator

+###org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder$OffheapDecodedExtendedCell
@2.0.0-beta-1
+#getRowArray()[B
+#getRowOffset()I
+#getRowLength()S
+#getFamilyArray()[B
+#getFamilyOffset()I
+#getFamilyLength()B
+#getQualifierArray()[B
+#getQualifierOffset()I
+#getQualifierLength()I
+#getTimestamp()J
+#getTypeByte()B
+#getSequenceId()J
+#getValueArray()[B
+#getValueOffset()I
+#getValueLength()I
+#getTagsArray()[B
+#getTagsOffset()I
+#getTagsLength()I
+#getRowByteBuffer()Ljava/nio/ByteBuffer;
+#getRowPosition()I
+#getFamilyByteBuffer()Ljava/nio/ByteBuffer;
+#getFamilyPosition()I
+#getQualifierByteBuffer()Ljava/nio/ByteBuffer;
+#getQualifierPosition()I
+#getValueByteBuffer()Ljava/nio/ByteBuffer;
+#getValuePosition()I
+#getTagsByteBuffer()Ljava/nio/ByteBuffer;
+#getTagsPosition()I
+#heapSize()J
+#setSequenceId(J)V
+#write(Ljava/io/OutputStream;Z)I
+#getSerializedSize(Z)I
+#setTimestamp(J)V
+#setTimestamp([B)V
+#write(Ljava/nio/ByteBuffer;I)V
+#deepClone()Lorg/apache/hadoop/hbase/ExtendedCell;

+###org/apache/hadoop/hbase/io/util/BlockIOUtils
@2.3.0
+#isByteBufferReadable(Lorg/apache/hadoop/fs/FSDataInputStream;)Z
+#readFully(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/fs/FSDataInputStream;I)V
+#readFullyWithHeapBuffer(Ljava/io/InputStream;Lorg/apache/hadoop/hbase/nio/ByteBuff;I)V
+#readWithExtra(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/fs/FSDataInputStream;II)Z
+#preadWithExtra(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/fs/FSDataInputStream;JII)Z
@2.4.13
+#preadWithExtra(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/fs/FSDataInputStream;JIIZ)Z
@3.0.0-alpha-1
-#preadWithExtra(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/fs/FSDataInputStream;JIIZ)Z
@3.0.0-alpha-3
+#preadWithExtra(Lorg/apache/hadoop/hbase/nio/ByteBuff;Lorg/apache/hadoop/fs/FSDataInputStream;JIIZ)Z

+###org/apache/hadoop/hbase/log/HBaseMarkers
@2.0.0-beta-1

+###org/apache/hadoop/hbase/nio/HBaseReferenceCounted
@2.3.0
+#retain(I)Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
+#release(I)Z
+#touch()Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
+#touch(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/nio/HBaseReferenceCounted;
+#touch(Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
+#touch()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
+#retain(I)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;

+###org/apache/hadoop/hbase/nio/RefCnt
@2.3.0
+#create()Lorg/apache/hadoop/hbase/nio/RefCnt;
+#create(Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;)Lorg/apache/hadoop/hbase/nio/RefCnt;
+#<init>(Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;)V
+#touch(Ljava/lang/Object;)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
@2.4.14
+#retain()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
+#retain(I)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
+#release()Z
+#release(I)Z
+#touch()Lorg/apache/hadoop/hbase/nio/RefCnt;
+#getRecycler()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;
+#touch()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
@3.0.0-alpha-1
-#retain()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#retain(I)Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;
-#release()Z
-#release(I)Z
-#touch()Lorg/apache/hadoop/hbase/nio/RefCnt;
-#getRecycler()Lorg/apache/hadoop/hbase/io/ByteBuffAllocator$Recycler;
-#touch()Lorg/apache/hbase/thirdparty/io/netty/util/ReferenceCounted;

+###org/apache/hadoop/hbase/security/SecurityConstants
@2.2.0

+###org/apache/hadoop/hbase/security/User$TestingGroups
@2.2.0
+#<init>(Lorg/apache/hadoop/security/Groups;)V
+#getGroups(Ljava/lang/String;)Ljava/util/List;

+###org/apache/hadoop/hbase/trace/TraceUtil
@2.0.0-beta-1
+#initTracer(Lorg/apache/hadoop/conf/Configuration;)V
+#createTrace(Ljava/lang/String;)Lorg/apache/htrace/core/TraceScope;
+#createTrace(Ljava/lang/String;Lorg/apache/htrace/core/Span;)Lorg/apache/htrace/core/TraceScope;
+#addSampler(Lorg/apache/htrace/core/Sampler;)Z
+#addKVAnnotation(Ljava/lang/String;Ljava/lang/String;)V
+#addReceiver(Lorg/apache/htrace/core/SpanReceiver;)Z
+#removeReceiver(Lorg/apache/htrace/core/SpanReceiver;)Z
+#addTimelineAnnotation(Ljava/lang/String;)V
+#wrap(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Runnable;
@2.5.0
+#getGlobalTracer()Lio/opentelemetry/api/trace/Tracer;
+#createSpan(Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
+#createRemoteSpan(Ljava/lang/String;Lio/opentelemetry/context/Context;)Lio/opentelemetry/api/trace/Span;
+#createClientSpan(Ljava/lang/String;)Lio/opentelemetry/api/trace/Span;
+#tracedFuture(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
+#tracedFuture(Ljava/util/function/Supplier;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
+#tracedFutures(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/List;
+#setError(Lio/opentelemetry/api/trace/Span;Ljava/lang/Throwable;)V
+#tracedRunnable(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Runnable;
+#tracedRunnable(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable;Ljava/lang/String;)V
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable;Ljava/util/function/Supplier;)V
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable;Ljava/lang/String;)Ljava/lang/Object;
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable;Ljava/util/function/Supplier;)Ljava/lang/Object;
-#initTracer(Lorg/apache/hadoop/conf/Configuration;)V
-#createTrace(Ljava/lang/String;)Lorg/apache/htrace/core/TraceScope;
-#createTrace(Ljava/lang/String;Lorg/apache/htrace/core/Span;)Lorg/apache/htrace/core/TraceScope;
-#addSampler(Lorg/apache/htrace/core/Sampler;)Z
-#addKVAnnotation(Ljava/lang/String;Ljava/lang/String;)V
-#addReceiver(Lorg/apache/htrace/core/SpanReceiver;)Z
-#removeReceiver(Lorg/apache/htrace/core/SpanReceiver;)Z
-#addTimelineAnnotation(Ljava/lang/String;)V
-#wrap(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Runnable;
@3.0.0-alpha-1
+#createTableSpan(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Lio/opentelemetry/api/trace/Span;
+#tracedFuture(Ljava/util/function/Supplier;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/concurrent/CompletableFuture;
+#tracedFutures(Ljava/util/function/Supplier;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
+#trace(Ljava/lang/Runnable;Ljava/lang/String;)V
+#trace(Ljava/lang/Runnable;Ljava/util/function/Supplier;)V
+#trace(Ljava/util/function/Supplier;Ljava/lang/String;)Ljava/lang/Object;
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$IOExceptionCallable;Ljava/lang/String;)Ljava/lang/Object;
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$IOExceptionCallable;Ljava/util/function/Supplier;)Ljava/lang/Object;
-#tracedFuture(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
-#tracedFutures(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/List;
-#tracedRunnable(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Runnable;
-#tracedRunnable(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;
-#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable;Ljava/lang/String;)V
-#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable;Ljava/util/function/Supplier;)V
-#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable;Ljava/lang/String;)Ljava/lang/Object;
-#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable;Ljava/util/function/Supplier;)Ljava/lang/Object;
@3.0.0-alpha-2
+#tracedFuture(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
+#tracedFutures(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/List;
-#tracedFuture(Ljava/util/function/Supplier;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/concurrent/CompletableFuture;
-#tracedFutures(Ljava/util/function/Supplier;Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Ljava/util/List;
@3.0.0-alpha-3
+#tracedRunnable(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Runnable;
+#tracedRunnable(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable;Ljava/lang/String;)V
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable;Ljava/util/function/Supplier;)V
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable;Ljava/lang/String;)Ljava/lang/Object;
+#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable;Ljava/util/function/Supplier;)Ljava/lang/Object;
-#createTableSpan(Ljava/lang/String;Lorg/apache/hadoop/hbase/TableName;)Lio/opentelemetry/api/trace/Span;
-#trace(Ljava/lang/Runnable;Ljava/lang/String;)V
-#trace(Ljava/lang/Runnable;Ljava/util/function/Supplier;)V
-#trace(Ljava/util/function/Supplier;Ljava/lang/String;)Ljava/lang/Object;
-#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$IOExceptionCallable;Ljava/lang/String;)Ljava/lang/Object;
-#trace(Lorg/apache/hadoop/hbase/trace/TraceUtil$IOExceptionCallable;Ljava/util/function/Supplier;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/util/AbstractHBaseTool$OptionsOrderComparator
@2.3.0
+#<init>(Lorg/apache/hadoop/hbase/util/AbstractHBaseTool;)V
+#compare(Lorg/apache/hbase/thirdparty/org/apache/commons/cli/Option;Lorg/apache/hbase/thirdparty/org/apache/commons/cli/Option;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/util/ConcurrentMapUtils$IOExceptionSupplier
@2.2.0
+#get()Ljava/lang/Object;

+###org/apache/hadoop/hbase/util/ConcurrentMapUtils
@2.2.0
+#<init>()V
+#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;
+#computeIfAbsentEx(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/hadoop/hbase/util/ConcurrentMapUtils$IOExceptionSupplier;)Ljava/lang/Object;
+#computeIfAbsent(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Supplier;Ljava/lang/Runnable;)Ljava/lang/Object;

+###org/apache/hadoop/hbase/util/DNS$ServerType
@2.3.0
+#values()[Lorg/apache/hadoop/hbase/util/DNS$ServerType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/util/DNS$ServerType;
+#getName()Ljava/lang/String;

+###org/apache/hadoop/hbase/util/ExponentialMovingAverage
@2.1.8
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;D)V
+#<init>(Ljava/lang/String;I)V
+#<init>(Ljava/lang/String;ID)V
+#updateMostRecentTime(J)V
+#getAverageTime()D
@2.2.0
-###org/apache/hadoop/hbase/util/ExponentialMovingAverage

+###org/apache/hadoop/hbase/util/FutureUtils
@2.0.5
+#addListener(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiConsumer;)V
+#addListener(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)V
+#wrapFuture(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
+#unwrapCompletionException(Ljava/lang/Throwable;)Ljava/lang/Throwable;
+#get(Ljava/util/concurrent/Future;)Ljava/lang/Object;
+#failedFuture(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
@2.1.0
-###org/apache/hadoop/hbase/util/FutureUtils

+###org/apache/hadoop/hbase/util/IdLock$Entry
@2.0.2
+#toString()Ljava/lang/String;
@2.1.0
-###org/apache/hadoop/hbase/util/IdLock$Entry

+###org/apache/hadoop/hbase/util/IdLock
@2.0.2
+#<init>()V
+#getLockEntry(J)Lorg/apache/hadoop/hbase/util/IdLock$Entry;
+#tryLockEntry(JJ)Lorg/apache/hadoop/hbase/util/IdLock$Entry;
+#releaseLockEntry(Lorg/apache/hadoop/hbase/util/IdLock$Entry;)V
+#waitForWaiters(JI)V
@2.0.3
+#isHeldByCurrentThread(J)Z
@2.1.0
-###org/apache/hadoop/hbase/util/IdLock

+###org/apache/hadoop/hbase/util/JRubyFormat
@2.0.0-alpha3
+#print(Ljava/lang/Object;)Ljava/lang/String;

+###org/apache/hadoop/hbase/util/MovingAverage
@2.1.8
+#measure(Lorg/apache/hadoop/hbase/util/TimeMeasurable;)Ljava/lang/Object;
+#getAverageTime()D
@2.2.0
-###org/apache/hadoop/hbase/util/MovingAverage

+###org/apache/hadoop/hbase/util/SimpleMovingAverage
@2.1.8
+#<init>(Ljava/lang/String;)V
+#updateMostRecentTime(J)V
+#getAverageTime()D
@2.2.0
-###org/apache/hadoop/hbase/util/SimpleMovingAverage

+###org/apache/hadoop/hbase/util/TimeMeasurable
@2.1.8
+#measure()Ljava/lang/Object;
@2.2.0
-###org/apache/hadoop/hbase/util/TimeMeasurable

+###org/apache/hadoop/hbase/util/WeightedMovingAverage
@2.1.8
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#getAverageTime()D
@2.2.0
-###org/apache/hadoop/hbase/util/WeightedMovingAverage

+###org/apache/hadoop/hbase/util/WindowMovingAverage
@2.1.8
+#<init>(Ljava/lang/String;)V
+#<init>(Ljava/lang/String;I)V
+#getAverageTime()D
@2.2.0
-###org/apache/hadoop/hbase/util/WindowMovingAverage

+###org/apache/hadoop/hbase/util/LongUtils
@0.98.21-hadoop1
+#<init>()V
+#compare(JJ)I
@0.99.0
-###org/apache/hadoop/hbase/util/LongUtils

+###org/apache/hadoop/hbase/BBKVComparator
@2.0.1
+#<init>(Ljava/util/Comparator;)V
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.2.7
-###org/apache/hadoop/hbase/BBKVComparator

+###org/apache/hadoop/hbase/util/JSONBean$Writer
@2.0.0-alpha4
+#write(Ljava/lang/String;Ljava/lang/String;)V
+#write(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I
+#flush()V
@2.2.0
-###org/apache/hadoop/hbase/util/JSONBean$Writer

+###org/apache/hadoop/hbase/util/JSONMetricUtil
@2.0.0-alpha4
+#getMBeanAttributeInfo(Ljavax/management/ObjectName;)[Ljavax/management/MBeanAttributeInfo;
+#getValueFromMBean(Ljavax/management/ObjectName;Ljava/lang/String;)Ljava/lang/Object;
+#dumpBeanToString(Ljava/lang/String;)Ljava/lang/String;
+#mappStringToJsonNode(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#searchJson(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
+#buldKeyValueTable([Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Hashtable;
+#buildObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;
+#buildObjectName(Ljava/lang/String;Ljava/util/Hashtable;)Ljavax/management/ObjectName;
+#getRegistredMBeans(Ljavax/management/ObjectName;Ljavax/management/MBeanServer;)Ljava/util/Set;
+#getProcessPID()Ljava/lang/String;
+#getCommmand()Ljava/lang/String;
+#getGcCollectorBeans()Ljava/util/List;
+#getLastGcDuration(Ljavax/management/ObjectName;)J
+#getMemoryPools()Ljava/util/List;
+#calcPercentage(JJ)F
@2.2.0
-###org/apache/hadoop/hbase/util/JSONMetricUtil

+###org/apache/hadoop/hbase/util/JSONBean
@2.0.0-alpha4
+#<init>()V
+#open(Ljava/io/PrintWriter;)Lorg/apache/hadoop/hbase/util/JSONBean$Writer;
+#dumpAllBeans()V
@2.2.0
-###org/apache/hadoop/hbase/util/JSONBean

+###org/apache/hadoop/hbase/CellComparatorImpl$MetaCellComparator
@2.0.0-alpha4
+#<init>()V
+#compareRows(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;)I
+#compareRows(Lorg/apache/hadoop/hbase/Cell;[BII)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@2.0.1
+#compare(Lorg/apache/hadoop/hbase/Cell;Lorg/apache/hadoop/hbase/Cell;Z)I
+#getSimpleComparator()Ljava/util/Comparator;
@2.3.0
+#compareRows(Ljava/nio/ByteBuffer;Lorg/apache/hadoop/hbase/Cell;)I
@2.3.2
-###org/apache/hadoop/hbase/CellComparatorImpl$MetaCellComparator

+###org/apache/hadoop/hbase/io/BoundedDelegatingInputStream
@2.5.0
+#<init>(Ljava/io/InputStream;J)V
+#setDelegate(Ljava/io/InputStream;J)V
+#read()I
+#read([BII)I
+#skip(J)J
+#available()I

+###org/apache/hadoop/hbase/io/DelegatingInputStream
@2.5.0
+#<init>(Ljava/io/InputStream;)V
+#getDelegate()Ljava/io/InputStream;
+#setDelegate(Ljava/io/InputStream;)V

+###org/apache/hadoop/hbase/io/compress/CanReinit
@2.5.0
+#reinit(Lorg/apache/hadoop/conf/Configuration;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/compress/CanReinit

+###org/apache/hadoop/hbase/io/compress/CompressionUtil
@2.5.0
+#roundInt2(I)I
+#compressionOverhead(I)I
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/compress/CompressionUtil

+###org/apache/hadoop/hbase/io/compress/DictionaryCache
@2.5.0
+#getDictionary(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)[B
+#loadFromResource(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;I)[B
+#contains(Ljava/lang/String;)Z
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/compress/DictionaryCache

+###org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer
@2.5.0
+#<init>(Lorg/apache/hadoop/hbase/io/hfile/HFileContext;)V
+#setSkipChecksum(Z)Lorg/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer;
+#setReadType(Lorg/apache/hadoop/hbase/trace/HBaseSemanticAttributes$ReadType;)Lorg/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer;
+#accept(Lio/opentelemetry/api/common/AttributesBuilder;)V
+#accept(Ljava/lang/Object;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer

+###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes$Operation
@2.5.0
+#values()[Lorg/apache/hadoop/hbase/trace/HBaseSemanticAttributes$Operation;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/trace/HBaseSemanticAttributes$Operation;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes$Operation

+###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes$ReadType
@2.5.0
+#values()[Lorg/apache/hadoop/hbase/trace/HBaseSemanticAttributes$ReadType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/trace/HBaseSemanticAttributes$ReadType;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes$ReadType

+###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes$RpcSystem
@2.5.0
+#values()[Lorg/apache/hadoop/hbase/trace/HBaseSemanticAttributes$RpcSystem;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/trace/HBaseSemanticAttributes$RpcSystem;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes$RpcSystem

+###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes
@2.5.0
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/trace/HBaseSemanticAttributes

+###org/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable
@2.5.0
+#call()Ljava/lang/Object;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/trace/TraceUtil$ThrowingCallable

+###org/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable
@2.5.0
+#run()V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/trace/TraceUtil$ThrowingRunnable

+###org/apache/hadoop/hbase/util/NettyFutureUtils
@2.5.0
+#addListener(Lorg/apache/hbase/thirdparty/io/netty/util/concurrent/Future;Lorg/apache/hbase/thirdparty/io/netty/util/concurrent/GenericFutureListener;)V
+#consume(Lorg/apache/hbase/thirdparty/io/netty/util/concurrent/Future;)V
+#safeClose(Lorg/apache/hbase/thirdparty/io/netty/channel/ChannelOutboundInvoker;)V
+#safeWrite(Lorg/apache/hbase/thirdparty/io/netty/channel/ChannelOutboundInvoker;Ljava/lang/Object;)V
+#safeWriteAndFlush(Lorg/apache/hbase/thirdparty/io/netty/channel/ChannelOutboundInvoker;Ljava/lang/Object;)V
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/NettyFutureUtils

+###org/apache/hadoop/hbase/util/ReservoirSample
@2.5.0
+#<init>(I)V
+#add(Ljava/lang/Object;)V
+#add(Ljava/util/Iterator;)V
+#add(Ljava/util/stream/Stream;)V
+#getSamplingResult()Ljava/util/List;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/util/ReservoirSample

+###org/apache/hadoop/hbase/util/SoftValueSortedMap
@0.95.0
+#<init>()V
+#<init>(Ljava/util/Comparator;)V
+#put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+#putAll(Ljava/util/Map;)V
+#get(Ljava/lang/Object;)Ljava/lang/Object;
+#remove(Ljava/lang/Object;)Ljava/lang/Object;
+#containsKey(Ljava/lang/Object;)Z
+#containsValue(Ljava/lang/Object;)Z
+#firstKey()Ljava/lang/Object;
+#lastKey()Ljava/lang/Object;
+#headMap(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/util/SoftValueSortedMap;
+#tailMap(Ljava/lang/Object;)Lorg/apache/hadoop/hbase/util/SoftValueSortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/hadoop/hbase/util/SoftValueSortedMap;
+#lowerValueByKey(Ljava/lang/Object;)Ljava/lang/Object;
+#isEmpty()Z
+#size()I
+#clear()V
+#keySet()Ljava/util/Set;
+#comparator()Ljava/util/Comparator;
+#entrySet()Ljava/util/Set;
+#values()Ljava/util/Collection;
+#tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
+#subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
@0.96.1-hadoop1
-###org/apache/hadoop/hbase/util/SoftValueSortedMap

+###org/apache/hadoop/hbase/util/test/LoadTestDataGenerator
@0.95.0
+#<init>(II)V
+#getDeterministicUniqueKey(J)[B
+#getColumnFamilies()[[B
+#generateColumnsForCf([B[B)[[B
+#generateValue([B[B[B)[B
+#verify([B[BLjava/util/Set;)Z
+#verify([B[B[B[B)Z
@0.98.0-hadoop1
-###org/apache/hadoop/hbase/util/test/LoadTestDataGenerator

+###org/apache/hadoop/hbase/KeyValue$KeyComparator
@0.95.0
+#<init>()V
+#compare([BII[BII)I
+#compareIgnoringPrefix(I[BII[BII)I
+#compare([B[B)I
+#compareRows([BII[BII)I
+#getShortMidpointKey([B[B)[B
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
+#compareIgnoringPrefix(ILjava/lang/Object;IILjava/lang/Object;II)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/KeyValue$KeyComparator

+###org/apache/hadoop/hbase/KeyValue$MetaKeyComparator
@0.95.0
+#<init>()V
+#compareRows([BII[BII)I
+#getShortMidpointKey([B[B)[B
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/KeyValue$MetaKeyComparator

+###org/apache/hadoop/hbase/KeyValue$RootComparator
@0.95.0
+#<init>()V
+#getRawComparator()Lorg/apache/hadoop/hbase/KeyValue$KeyComparator;
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/KeyValue$RootComparator

+###org/apache/hadoop/hbase/KeyValue$RootKeyComparator
@0.95.0
+#<init>()V
+#compareRows([BII[BII)I
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/KeyValue$RootKeyComparator

+###org/apache/hadoop/hbase/KeyValue$RowComparator
@0.95.0
+#<init>(Lorg/apache/hadoop/hbase/KeyValue$KVComparator;)V
+#compare(Lorg/apache/hadoop/hbase/KeyValue;Lorg/apache/hadoop/hbase/KeyValue;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/KeyValue$RowComparator

+###org/apache/hadoop/hbase/KeyValue$SplitKeyValue
@0.95.0
+#setRow([B)V
+#setFamily([B)V
+#setQualifier([B)V
+#setTimestamp([B)V
+#setType([B)V
+#setValue([B)V
+#getRow()[B
+#getFamily()[B
+#getQualifier()[B
+#getTimestamp()[B
+#getType()[B
+#getValue()[B
@0.96.0-hadoop1
-###org/apache/hadoop/hbase/KeyValue$SplitKeyValue

+###org/apache/hadoop/hbase/util/ByteRangeTool
@0.95.0
+#<init>()V
+#copyToNewArrays(Ljava/util/Collection;)Ljava/util/ArrayList;
+#fromArrays(Ljava/util/Collection;)Ljava/util/ArrayList;
+#write(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/util/ByteRange;)V
+#write(Ljava/io/OutputStream;Lorg/apache/hadoop/hbase/util/ByteRange;I)V
@0.95.2-hadoop1
-###org/apache/hadoop/hbase/util/ByteRangeTool

+###org/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight$WeightComparator
@3.0.0-alpha-1
+#<init>()V
+#compare(Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;)I
+#compare(Ljava/lang/Object;Ljava/lang/Object;)I

+###org/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight
@3.0.0-alpha-1
+#<init>(Ljava/lang/String;JJ)V
+#addWeight(JJ)V
+#getHost()Ljava/lang/String;
+#getWeight()J
+#getWeightForSsd()J

+###org/apache/hadoop/hbase/HDFSBlocksDistribution$Visitor
@3.0.0-alpha-1
+#visit(Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;)J

+###org/apache/hadoop/hbase/HDFSBlocksDistribution
@3.0.0-alpha-1
+#<init>()V
+#toString()Ljava/lang/String;
+#addHostsAndBlockWeight([Ljava/lang/String;J)V
+#addHostsAndBlockWeight([Ljava/lang/String;J[Lorg/apache/hadoop/fs/StorageType;)V
+#getHostAndWeights()Ljava/util/Map;
+#getWeight(Ljava/lang/String;)J
+#getUniqueBlocksTotalWeight()J
+#getBlockLocalityIndex(Ljava/lang/String;)F
+#getBlockLocalityIndexForSsd(Ljava/lang/String;)F
+#getBlocksLocalWeight(Ljava/lang/String;)J
+#getBlocksLocalWithSsdWeight(Ljava/lang/String;)J
+#add(Lorg/apache/hadoop/hbase/HDFSBlocksDistribution;)V
+#getTopHosts()Ljava/util/List;
+#getTopHostsWithWeights()[Lorg/apache/hadoop/hbase/HDFSBlocksDistribution$HostAndWeight;

+###org/apache/hadoop/hbase/PrivateConstants
@3.0.0-alpha-1

+###org/apache/hadoop/hbase/trace/TraceUtil$IOExceptionCallable
@3.0.0-alpha-1
+#call()Ljava/lang/Object;
@3.0.0-alpha-3
-###org/apache/hadoop/hbase/trace/TraceUtil$IOExceptionCallable

+###org/apache/hadoop/hbase/CellBuilder$DataType
@2.0.0-alpha4
+#values()[Lorg/apache/hadoop/hbase/CellBuilder$DataType;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/CellBuilder$DataType;
@2.0.0-beta-1
-###org/apache/hadoop/hbase/CellBuilder$DataType

+###org/apache/hadoop/hbase/io/encoding/IndexBlockEncoding
@2.5.1
+#values()[Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;
+#valueOf(Ljava/lang/String;)Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;
+#getNameInBytes()[B
+#getId()S
+#writeIdInBytes(Ljava/io/OutputStream;)V
+#writeIdInBytes([BI)V
+#getNameFromId(S)Ljava/lang/String;
+#getEncodingById(S)Lorg/apache/hadoop/hbase/io/encoding/IndexBlockEncoding;
@3.0.0-alpha-1
-###org/apache/hadoop/hbase/io/encoding/IndexBlockEncoding

+###org/apache/hadoop/hbase/CellKey
@0.99.1
+#<init>([BII[BII[BIIJB)V
+#toString()Ljava/lang/String;
@0.99.2
-###org/apache/hadoop/hbase/CellKey
